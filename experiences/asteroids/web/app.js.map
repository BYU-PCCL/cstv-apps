{"version":3,"file":"app.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;ACHA;AACA,kDAAkD,gBAAgB,gNAAgN,OAAO;AACzR;AACA;;;;;;;;;;ACHA;AACA,8DAA8D,gBAAgB;AAC9E;AACA;;;;;;;;;;ACHA;AACA,uCAAuC,gBAAgB;AACvD;AACA;;;;;;;;;;ACHA;AACA,qCAAqC,gBAAgB,mJAAmJ,OAAO,yEAAyE,SAAS,+LAA+L,UAAU,kMAAkM,YAAY,oMAAoM,YAAY;AACx4B;AACA;;;;;;;;;;ACHA;AACA,wEAAwE,gBAAgB,gRAAgR,OAAO,uOAAuO,SAAS;AAC/lB;AACA;;;;;;;;;;ACHA;AACA,4DAA4D,aAAa,gBAAgB;AACzF;AACA;;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;;ACHA;AACA,yFAAyF,sBAAsB,0JAA0J;AACzQ;AACA;;;;;;;;;;ACHA;AACA,+FAA+F,OAAO,kKAAkK,MAAM,iDAAiD,MAAM,sNAAsN,UAAU,oFAAoF,cAAc,2OAA2O,UAAU,4FAA4F,cAAc,oDAAoD,uBAAuB;AACjjC;AACA;;;;;;;;;;ACHA;AACA,sGAAsG,mBAAmB,iIAAiI,OAAO;AACjQ;AACA;;;;;;;;;;ACHA;AACA,8CAA8C,mBAAmB,WAAW,gDAAgD,2BAA2B,kDAAkD,iBAAiB,6FAA6F,WAAW,2HAA2H,kBAAkB,qBAAqB,WAAW;AAC/e;AACA;;;;;;;;;;ACHA;AACA,uCAAuC,MAAM,gCAAgC,eAAe,kNAAkN,UAAU,gRAAgR,wBAAwB,mKAAmK,qBAAqB,+LAA+L,kBAAkB,yBAAyB,kBAAkB,mJAAmJ,gBAAgB,8BAA8B,gBAAgB,iJAAiJ,kBAAkB,qBAAqB,kBAAkB,6EAA6E,eAAe,0DAA0D,qBAAqB;AAC1lD;AACA;;;;;;;;;;ACHA;AACA,sDAAsD,mBAAmB,mBAAmB,iBAAiB,2OAA2O,UAAU,wCAAwC,OAAO,6MAA6M,iBAAiB,8CAA8C,OAAO,mMAAmM,cAAc,KAAK,SAAS,iKAAiK,qBAAqB,aAAa,uCAAuC,eAAe,qHAAqH,iBAAiB,uEAAuE,iBAAiB,qEAAqE,iBAAiB;AACh7C;AACA;;;;;;;;;;ACHA;AACA,oDAAoD,kBAAkB,gBAAgB,2DAA2D,uBAAuB,YAAY,gDAAgD,WAAW,KAAK,MAAM;AAC1P;AACA;;;;;;;;;;ACHA;AACA,kCAAkC,gBAAgB,yCAAyC,OAAO,4GAA4G,qBAAqB,0CAA0C,MAAM,+CAA+C,qBAAqB,0CAA0C,MAAM,uDAAuD,yBAAyB,0CAA0C,UAAU;AAC3gB;AACA;;;;;;;;;;ACHA;AACA,mDAAmD,gBAAgB,sBAAsB,cAAc,oGAAoG,YAAY,2HAA2H,qBAAqB,8IAA8I,UAAU,gDAAgD,YAAY,sBAAsB,UAAU;AAC3lB;AACA;;;;;;;;;;ACHA;AACA,iEAAiE,gBAAgB,yHAAyH,yBAAyB,yGAAyG,wBAAwB,iPAAiP,mBAAmB,kMAAkM,4BAA4B,oHAAoH,sBAAsB,oKAAoK,0BAA0B,yIAAyI,uBAAuB;AAC9yC;AACA;;;;;;;;;;ACHA;AACA,uCAAuC,gBAAgB;AACvD;AACA;;;;;;;;;;ACHA;AACA,qCAAqC,gBAAgB;AACrD;AACA;;;;;;;;;;ACHA;AACA,wGAAwG,0BAA0B,wEAAwE,gBAAgB;AAC1N;AACA;;;;;;;;;;ACHA;AACA,kCAAkC,gBAAgB,kDAAkD,UAAU,qDAAqD,gBAAgB,cAAc,qNAAqN,iBAAiB,+aAA+a,gBAAgB,KAAK,YAAY,2DAA2D,uBAAuB,wBAAwB;AACj+B;AACA;;;;;;;;;;ACHA;AACA,oCAAoC,mBAAmB,kBAAkB,kDAAkD,gBAAgB,kGAAkG,qBAAqB,oIAAoI,YAAY,gFAAgF,kBAAkB,gJAAgJ,eAAe,sBAAsB,8MAA8M,mBAAmB,qBAAqB,+JAA+J,gBAAgB,gbAAgb,oBAAoB,sIAAsI,YAAY,oEAAoE,gBAAgB,wBAAwB,mMAAmM,0BAA0B,0wBAA0wB,oBAAoB,sBAAsB,mMAAmM,oBAAoB;AACx/F;AACA;;;;;;;;;;ACHA;AACA,8CAA8C,gBAAgB,65BAA65B,WAAW,ueAAue,kBAAkB,qBAAqB;AACp/C;AACA;;;;;;;;;;ACHA;AACA,yEAAyE,YAAY;AACrF;AACA;;;;;;;;;;ACHA;AACA,+EAA+E,oBAAoB;AACnG;AACA;;;;;;;;;;ACHA;AACA,iHAAiH,OAAO,wCAAwC,UAAU,sFAAsF,aAAa,6CAA6C,WAAW,aAAa,MAAM,yDAAyD,cAAc,mFAAmF,aAAa,uEAAuE,UAAU;AAChlB;AACA;;;;;;;;;;ACHA;AACA,qCAAqC,OAAO,mCAAmC,eAAe,0BAA0B,qCAAqC,MAAM,sCAAsC,cAAc,yBAAyB;AAChP;AACA;;;;;;;;;;ACHA;AACA,yDAAyD,WAAW,UAAU,KAAK,UAAU,KAAK,8BAA8B,OAAO;AACvI;AACA;;;;;;;;;;ACHA;AACA,wKAAwK,MAAM;AAC9K;AACA;;;;;;;;;;ACHA;AACA,gEAAgE,OAAO,iCAAiC,UAAU;AAClH;AACA;;;;;;;;;;ACHA;AACA,kDAAkD,iBAAiB,sBAAsB,MAAM;AAC/F;AACA;;;;;;;;;;ACHA;AACA,2CAA2C,gBAAgB,oFAAoF,YAAY,syBAAsyB,aAAa;AAC98B;AACA;;;;;;;;;;ACHA;AACA,2CAA2C,gBAAgB,qFAAqF,WAAW,uFAAuF,cAAc;AAChQ;AACA;;;;;;;;;;ACHA;AACA,mDAAmD,mBAAmB,YAAY,+BAA+B,eAAe,oaAAoa,aAAa;AACjjB;AACA;;;;;;;;;;;;ACHA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGc;AACI;AACqC;AACpB;AASf;AACmC;AACf;AACM;AACE;AACE;AACF;AACE;AACtB;AACyB;AACvB;;AAE9B;AACA;AACA;AACA;AACA;AACO,2BAA2B,yCAAO;AACzC;AACA;AACA;AACA;AACA,QAAQ,4CAAK;;AAEb;AACA,mBAAmB,oDAAQ;;AAE3B;AACA,oBAAoB,qDAAS;;AAE7B;AACA,wBAAwB,GAAG,+CAAK;;AAEhC;AACA,mBAAmB,qDAAQ;;AAE3B;AACA,wBAAwB,gEAAc;;AAEtC;AACA;AACA;AACA,iBAAiB,8CAAM;;AAEvB;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA,mBAAmB,iDAAS;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,0DAA0D;AAC/D,KAAK,oCAAoC;AACzC,KAAK,iDAAiD;AACtD,KAAK,8CAA8C;AACnD,KAAK,0CAA0C;AAC/C,KAAK,0CAA0C;AAC/C,KAAK,gCAAgC;AACrC,KAAK,yCAAyC;AAC9C,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAiB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,eAAe;;AAE1C;AACA;AACA,mBAAmB,4DAAqB;AACxC,+BAA+B,UAAU,8CAAM,iBAAiB;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,yEAA4B;AAC9C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,iFAAoC;AAC5C,qCAAqC,iEAA+B;AACpE;AACA,cAAc,0CAAa;AAC3B;AACA;AACA,GAAG;AACH;AACA;AACA,cAAc,0CAAa;AAC3B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,uBAAuB,uBAAuB,IAAI;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,iDAAiD,EAAE,wDAAwD;AACxJ;AACA;AACA,oBAAoB;AACpB,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,mDAAY;AACvC,6BAA6B,qDAAc;AAC3C,0BAA0B,kDAAW;AACrC,0BAA0B,kDAAW;;AAErC;;AAEA;AACA;AACA,eAAe,qBAAqB,IAAI;AACxC,YAAY,8CAA8C;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2DAAe,IAAI,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,gDAAS;AACrC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,qBAAqB,mDAAiB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8BAA8B,sDAAU;AACxC,4BAA4B,mDAAO;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,8CAAM;;AAE3B;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA,GAAG;AACH;AACA,oCAAoC,0CAAa;AACjD,2CAA2C,0CAAa;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;;AAEA,wDAAwD,EAAE,OAAO,EAAE;AACnE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sDAAsD;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0CAAa;AACpC,uBAAuB,0CAAa;;AAEpC;AACA,oBAAoB,0CAAa;AACjC;AACA;;AAEA;AACA,sCAAsC,mCAAmC;AACzE;AACA,6BAA6B,iBAAiB;AAC9C,6BAA6B,UAAU;AACvC,sCAAsC,2BAA2B;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,oEAAuB;AAC/B;AACA;;AAEA;AACA,sBAAsB,0CAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,+BAA+B,mCAAmC;;AAElE;AACA,4CAA4C,kDAAqB;;AAEjE;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kFAAkF;AAClF;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,uGAAuG;AACvG;AACA;AACA,uBAAuB,yDAA4B;AACnD,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,qDAAqD,iDAAiD;AACtG;AACA;;AAEA,oBAAoB,mDAAI;;AAExB;;;;;;;;;;;;;;;;;;;;;;;ACrkBwB;AACI;AACH;AACG;AACH;AACD;AACA;AACE;AACE;AACH;;;;;;;;;;;;;;;;;ACT6B;;AAEtD;AACA;AACA;AACA;AACO,iCAAiC,8DAAU;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtDsD;;AAEtD;AACA;AACA;AACA;AACO,8BAA8B,8DAAU;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,uBAAuB,QAAQ,IAAI;AACnC;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtE2D;AACP;;AAEV;AACX;;AAE/B;AACA;AACA;AACA;AACO,6BAA6B,+CAAa;AACjD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uEAAuE,MAAM,iDAAY,wBAAwB;AACjH,qEAAqE,MAAM,+CAAU,sBAAsB;;AAE3G;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB;AACA,iBAAiB,qBAAqB,IAAI;AAC1C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,2BAA2B;;AAEtC;AACA,mBAAmB,OAAO;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB,6BAA6B,gBAAgB;AACtF;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,sBAAsB,8DAAI;;;;;;;;;;;;;;;;;ACvIoB;;AAEN;AACX;;AAE7B;AACA;AACA;AACA;AACA,2BAA2B,+CAAa;AACxC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,4BAA4B,gCAAgC,WAAW;AAClJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,2EAA2E,kCAAkC;AAC7G;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4DAAI;;AAExB,+DAAe,YAAY,EAAC;;;;;;;;;;;;;;;AChIe;AACd;;AAE7B,+DAAe,sDAAY,EAAC;;;;;;;;;;;;;;;;;;;ACHe;AACJ;;AAKrC;;;;;;;;;;;;;;;ACNqC;AACZ;;AAE3B,+DAAe,oDAAU,EAAC;;;;;;;;;;;;;;;;;;ACHoB;;AAER;AACX;;AAEiC;;AAE5D;AACA;AACA;AACA;AACA,yBAAyB,+CAAa;AACtC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB,YAAY,WAAW;AACjE,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,qDAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA,6DAA6D,EAAE;AAC/D,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0DAAI;;AAEtB,+DAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;AChF8B;AAC6B;;AAEvD;;AAE9B;AACA;AACA;AACO,4BAA4B,+CAAa;AAChD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,oEAAoE;;AAE9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE,cAAc,uDAAqB,sBAAsB;AACzD,IAAI;AACJ;;AAEA;AACA,4BAA4B,4CAAO;AACnC,uDAAuD,iDAAY;AACnE;AACA,kCAAkC,iEAA+B;;AAEjE;AACA;AACA;AACA;AACA,cAAc,uDAAqB,iBAAiB;AACpD,IAAI;AACJ;;AAEA;AACA,+BAA+B,4CAAO;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAqB,gBAAgB;AACnD,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAqB,8BAA8B;AACjE,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,kBAAkB;;AAE5B;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,SAAS,uDAAqB,YAAY,EAAE,+BAA+B;AAC3E,SAAS,uDAAqB,WAAW,EAAE,4BAA4B;;AAEvE;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,WAAW,eAAe;;AAE1B;AACA;AACA;AACA;AACA,YAAY,uDAAqB;AACjC,KAAK;AACL;;AAEA;AACA;AACA,yCAAyC,+CAAU;;AAEnD,0CAA0C,oDAAe;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAqB,eAAe,iEAA+B,MAAM;AACxF,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAqB,cAAc,iEAA+B,MAAM;AACvF,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAqB,CAAC,uDAAkB,mBAAmB;AAC1E,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,uDAAuD;AACjE;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,uBAAuB,uDAAkB;AACzC;;AAEA;AACA;AACA;AACA;AACA,YAAY,qDAAmB;AAC/B,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,uDAAqB,kCAAkC;AACrE,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvRc;AACY;;AAE1B;AACA;AACA;AACA;AACO,yBAAyB,4CAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D;AACA;;;;;;;;;;;;;;;;;;;;;AC5B8C;AACV;AACA;;AAEX;;AAEzB;AACA;AACA;AACO,wBAAwB,+CAAa;AAC5C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0DAA0D,uDAAkB;;AAE5E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wDAAI;;;;;;;;;;;;;;;;;;;;;ACxIuC;AACf;AACS;;AAEpB;;AAElC;AACA;AACA;AACO,gCAAgC,+CAAa;AACpD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,GAAG;;AAEH;AACA,sBAAsB,mDAAW;;AAEjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB;AACA,uBAAuB,0BAA0B,IAAI;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gCAAgC;;AAE3C;AACA,mBAAmB,gBAAgB;;AAEnC;AACA;AACA,uBAAuB,uDAAqB;AAC5C;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,kBAAkB,gBAAgB,WAAW;AAC7C,yBAAyB,QAAQ;AACjC,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA,UAAU,8DAA8D;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,iEAAI;;;;;;;;;;;;;;;;;;AC9MiB;;AAEf;;AAE/B;AACA;AACA;AACO,6BAA6B,+CAAa;AACjD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;ACzBqC;;AAEV;;AAE3B;AACA;AACA;AACO,yBAAyB,+CAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;;AAErE;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,iBAAiB;AAC5C,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;;;;;;AC3BmF;;AAEtD;;AAE7B;AACA;AACA;AACO,2BAA2B,+CAAa;AAC/C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,iDAAiD;AACjD,UAAU,oBAAoB;;AAE9B;;AAEA;AACA,kBAAkB,mBAAmB;;AAErC;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,4BAA4B,WAAW,OAAO;AAC7D,GAAG;;AAEH;AACA,kEAAkE,QAAQ;;AAE1E;AACA;AACA,kCAAkC,aAAa;AAC/C,mCAAmC,cAAc;AACjD,yCAAyC,4EAA4E;AACrH;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,qDAAmB,OAAO;AAC/C;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjJ8C;;AAET;AACX;;AAE1B;AACA;AACA;AACA;AACO,yBAAyB,+CAAa;AAC7C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,UAAU,+BAA+B;AACzC,kBAAkB,UAAU;;AAE5B;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,eAAe;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yDAAI;;;;;;;;;;;;;;;;;AC5GsB;;AAE5C;AACA;AACA;AACA;AACO,qBAAqB,wCAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACdgD;;AAEhD;AACA;AACA;AACO,gCAAgC,0CAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACd8C;AACN;;AAEX;;AAE7B;AACA;AACA;AACO,2BAA2B,+CAAa;AAC/C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,kBAAkB,OAAO;AACzB,yBAAyB,4CAA4C,KAAK,6CAA6C,mBAAmB,kCAAkC;AAC5K;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B,yBAAyB,4CAA4C,KAAK,6CAA6C,mBAAmB,kCAAkC;AAC5K;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,2BAA2B;AAC5E;AACA,uDAAuD,oBAAoB;AAC3E,wDAAwD,oBAAoB;AAC5E;AACA,iEAAiE,oBAAoB;AACrF,8DAA8D,uBAAuB;AACrF,+DAA+D,uBAAuB;AACtF;AACA,iDAAiD,oBAAoB;AACrE;AACA,4DAA4D,oBAAoB;AAChF;AACA,0DAA0D,oBAAoB;AAC9E;AACA,iEAAiE,oBAAoB;AACrF;AACA,kDAAkD,oBAAoB;AACtE;AACA,yDAAyD,cAAc;AACvE;AACA,yDAAyD,gBAAgB;;AAEzE;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D,iCAAiC,QAAQ;AACzC,2CAA2C,QAAQ,cAAc,YAAY;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,yCAAyC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4DAAI;;;;;;;;;;;;;;;;;;;;ACxMV;;AAEa;AACW;;AAEtC,QAAQ,WAAW,EAAE,0CAAQ;;AAE7B;AACA;AACA;AACA;AACO,yBAAyB,+CAAa;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,kBAAkB;AAC9B;AACA,uBAAuB,MAAM;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,QAAQ;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,YAAY;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU,SAAS;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU,SAAS;;AAEnB;AACA,UAAU,oBAAoB;;AAE9B;AACA;AACA,UAAU,kBAAkB;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA,UAAU,gBAAgB,gBAAgB;AAC1C;AACA,QAAQ,qBAAqB;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,2DAAyB;AAC/B,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;;AAEA,UAAU,oBAAoB;AAC9B,UAAU,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,oBAAoB;;AAE9B;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,OAAO;;AAE9D,kBAAkB,QAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,aAAa;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,yBAAyB;;AAEnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,YAAY;AACtB;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,aAAa;;AAEvB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,cAAc;;AAEhE;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,UAAU,qDAAqD;;AAE/D;AACA,UAAU,qBAAqB;;AAE/B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,cAAc,IAAI,KAAK;AACpD;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;AACA,aAAa,6CAA6C;AAC1D;AACA;AACA,aAAa,2CAA2C;AACxD;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA,aAAa,aAAa;AAC1B;AACA,YAAY,MAAM;AAClB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,2DAAyB;AAC5C,oBAAoB,sDAAoB;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU,cAAc;;AAExB;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,GAAG;;AAEH,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,UAAU,QAAQ;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0DAAI;;;;;;;;;;;;;;;;;;;;;;ACryBwB;AACV;;AAEH;AACI;;AAEX;;AAE1B;AACA;AACA;AACO,wBAAwB,+CAAa;AAC5C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,2BAA2B;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kDAAkD;AAClE;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA,UAAU,0FAA0F;;AAEpG,sBAAsB,uDAAkB;AACxC;;AAEA;AACA;AACA,8CAA8C,iDAAiD;AAC/F;;AAEA;AACA;AACA;;AAEA,gBAAgB,kEAAkE;AAClF;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,iBAAiB,yDAAI;;;;;;;;;;;;;;;;;;;;;ACxJyB;;AAEK;AACV;AACR;;AAEN;;AAE3B;AACA;AACA;AACO,yBAAyB,+CAAa;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,2BAA2B,WAAW;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAS;AAClC;AACA;AACA;;AAEA;AACA,yBAAyB,2DAAS;AAClC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClHA,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,GAAG,kDAAkD;AACrD,GAAG,oDAAoD;AACvD,GAAG,0DAA0D;AAC7D,GAAG,iDAAiD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,GAAG,8CAA8C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF,GAAG,wCAAwC;AAC3C,GAAG,8CAA8C;AACjD,GAAG,4CAA4C;AAC/C,GAAG,gDAAgD;AACnD,GAAG,wCAAwC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,GAAG,sDAAsD;AACzD,GAAG,4CAA4C;AAC/C,GAAG;AACH,CAAC,EAAC;;;;;;;;;;;;;;ACzE8B;;AAEhC;AACA;;AAEA,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,gDAAc,GAAG,MAAM,IAAI,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,aAAa;AAC7E;AACA,8DAA8D,aAAa;AAC3E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,+sBAA+sB;AAC/sB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,aAAa;AAC7E;AACA,gFAAgF,aAAa;AAC7F;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,aAAa;AAC7E;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;AClH8B;AACS;;AAEzC,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,UAAU;AAC1F;AACA;;AAEA;AACA,wFAAwF,cAAc;AACtG,wBAAwB,UAAU;AAClC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAA+B;AAC/C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,oBAAoB,yEAA4B;AAChD;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,yEAA4B;AAChD;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8eAA8e,UAAU;AACxf;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF,wBAAwB,yCAAyC;AACjE,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAA+B;AAC/C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,gBAAgB,iEAA+B;AAC/C;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;ACzV6B;;AAE/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8BAA8B;AAC1F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4CAA4C;AAC1G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gDAAgD;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,8CAA8C;AACzG;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8BAA8B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,wBAAwB;;AAE7E;AACA;AACA,EAAE;AACF;AACA;AACA,qDAAqD,wBAAwB;;AAE7E;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;ACvnB8C;AACqB;AACX;AACf;;AAE3C;AACA,gBAAgB,sDAAiB;AACjC,2BAA2B,iEAA2B;AACtD,qBAAqB,2DAAsB;AAC3C;;AAKE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdF;;AAE2C;AACH;AACC;AACD;AACK;AACJ;AACA;;AAEwB;AACM;AACV;AACR;AACA;AACM;AACF;AACI;AACZ;AACQ;AACnC;AACC;AAC4C;AACd;AACF;AACM;AACd;;AAE3C;AACwB;;;;;;;;;;;;;;;;;;;AC7BxB;AACA;AACA;AACA;;AAEmC;AACA;AACD;;AAElC;AACA;AACA;AACO,6BAA6B,6CAAW;AAC/C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ,6CAA6C;AACjE,YAAY,SAAS;AACrB,YAAY,UAAU;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,OAAO;AACjB,UAAU,8BAA8B;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7QwD;;AAExD;AACA;AACA;AACA;AACO,2BAA2B,8CAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACfmC;;AAEnC;AACA;AACA;AACO,0BAA0B,6CAAW;AAC5C;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;;AAEA;AACA,qBAAqB,WAAW;AAChC;;AAEA;AACA,wBAAwB,WAAW;AACnC;;AAEA;AACA,uBAAuB,WAAW;AAClC;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEmC;AACA;AACI;;AAEvC;AACA;AACA;AACO,0BAA0B,6CAAW;AAC5C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA,iBAAiB,4DAAqB;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW,+BAA+B;;AAE1C;AACA;AACA;;AAEA;AACA,uDAAuD,8CAA8C;AACrG;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC5CgE;;AAEhE;AACA;AACA;AACA;AACO,+BAA+B,kDAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACfwD;;AAExD;AACA;AACA;AACA;AACO,2BAA2B,8CAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEmC;AAC0B;AAC/B;;AAE9B;AACA;AACA;AACO,2BAA2B,6CAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,kDAAa;;AAEnC;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kEAAkE,8CAA8C;AAChH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;AACA;AACA,oEAAoE,0CAAK;;AAEzE;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,4CAA4C;;AAEtD;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,6CAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,6CAAQ;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA,oBAAoB,oBAAoB;;AAExC,0BAA0B,YAAY,QAAQ;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa,kCAAkC;AAC5F;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpgBmC;AACM;;AAEzC;AACO;AACP;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,4CAAe;;AAErC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,6BAA6B,oDAAuB;AACpD;AACA;;AAEA;AACO;AACP;AACA;AACA,YAAY,gBAAgB;AAC5B,cAAc;AACd;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA,iFAAiF,IAAI;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2CAAc;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,6CAA6C,OAAO;;AAEpD;AACA,cAAc,kDAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA,0BAA0B,gBAAgB;;AAE1C;AACA,MAAM,oEAAuB;AAC7B,YAAY,0DAAa;AACzB;AACA,SAAS;AACT;AACA,cAAc,uDAAuD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB,wDAA2B;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC,mCAAmC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC,KAAK;AACL;;AAEA;AACA,YAAY,qEAAwB;;AAEpC;AACA;AACA;AACA,yDAAyD,qDAAwB;AACjF;AACA;AACA;AACA;AACA,uDAAuD,8DAAiC;AACxF;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChXc;AAsBM;;AAEpB,2CAAS,qBAAqB,uDAAgB;AAC9C,2CAAS,iBAAiB,mDAAY;AACtC,2CAAS,iBAAiB,mDAAY;;AAEtC,2CAAS,sBAAsB,wDAAiB;AAChD,2CAAS,oBAAoB,sDAAe;AAC5C,2CAAS,uBAAuB,yDAAkB;AAClD,2CAAS,mBAAmB,qDAAc;AAC1C,2CAAS,oBAAoB,sDAAe;AAC5C,2CAAS,uBAAuB,yDAAkB;AAClD,2CAAS,kBAAkB,oDAAa;AACxC,2CAAS,eAAe,iDAAU;AAClC,2CAAS,sBAAsB,wDAAiB;AAChD,2CAAS,mBAAmB,qDAAc;AAC1C,2CAAS,eAAe,iDAAU;AAClC,2CAAS,iBAAiB,mDAAY;AACtC,2CAAS,iBAAiB,mDAAY;AACtC,2CAAS,eAAe,iDAAU;AAClC,2CAAS,eAAe,iDAAU;AAClC,2CAAS,WAAW,6CAAM;;AAET;;;;;;;;;;;;;;;;;;AC/CkB;AACe;;AAElD;AACA;AACA;AACO,2BAA2B,kDAAQ;AAC1C;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,aAAa;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAuB;AACnD;AACA;;AAEA;AACA,UAAU,0BAA0B;;AAEpC;AACA,uBAAuB;AACvB,IAAI;AACJ,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/Lc;AAC2B;AACN;;AAEnC;AACA;AACA;AACA;AACe,+BAA+B,0CAAQ;AACtD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM,uDAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,uDAAqB;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,UAAU,eAAe;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,wBAAwB;AACtD,+BAA+B,4CAAe;AAC9C;;AAEA,uBAAuB,qEAAwB;AAC/C;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,UAAU,oCAAoC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU,2DAAyB;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,2DAAyB;AAClC;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,uDAAuD,UAAU;;AAEjE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,uCAAuC;AACvC;AACA;AACA;;;;;;;;;;;;;;;;;ACvXmC;;AAEnC;AACA;AACA;AACO,4BAA4B,kDAAQ;AAC3C;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,qBAAqB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5GmC;;AAEnC;AACA;AACA;AACO,uBAAuB,kDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjD+C;AACF;AACI;AACR;AACF;AACE;;AAEzC,+DAAe;AACf,aAAa;AACb,YAAY;AACZ,cAAc;AACd,UAAU;AACV,SAAS;AACT,UAAU;AACV,CAAC,EAAC;;;;;;;;;;;;;;;;;;ACdiC;AACA;;AAEnC;AACA;AACA;AACO,0BAA0B,kDAAQ;AACzC;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,YAAY;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,+EAA+E,aAAa;AAC5F;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,kCAAkC,KAAK;AAC/C;AACA;AACA;AACA;AACA,uBAAuB;AACvB,MAAM,IAAI;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,uBAAuB;AACjC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7Kc;AACqB;;AAEnC;AACA;AACA;AACO,wBAAwB,kDAAQ;AACvC;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,8CAA8C;;AAE7F;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,mCAAmC;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,oDAAkB;AACnC;AACA;AACA;AACA,sEAAsE,UAAU;AAChF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU,WAAW;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,uDAAqB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzNmC;AACA;AAGrB;;AAEd;AACA;AACA;AACO,wBAAwB,kDAAQ;AACvC;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,UAAU,UAAU;;AAEpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU,eAAe;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,8CAA8C;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA,sCAAsC,iIAAiI;AACvK,2BAA2B,cAAc;AACzC,mCAAmC,eAAe;AAClD;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,4CAAe;AAC7C,6DAA6D,iDAAoB;AACjF;;AAEA;AACA,0BAA0B,4CAAe;AACzC,4CAA4C,aAAa;AACzD;AACA,yDAAyD,iDAAoB;AAC7E;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB,4CAAe;AACvC;;AAEA;AACA;;AAEA;;AAEA;AACA,8CAA8C,2IAA2I;;AAEzL;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;;AAEA,UAAU,0EAA0E;AACpF;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnSA;AACqC;;AAErC;AACmC;AACe;;AAElD;AACkB;;AAElB;AACiD;AACa;AACI;;AAElE;AAqBoB;;AAEpB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,4BAA4B,oDAAa;;AAEzC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,0BAA0B;;AAE1B;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gBAAgB;AAC3E;;AAEA;AACA;AACA,wDAAwD,GAAG;AAC3D;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,gBAAgB;AAC7C;AACA,sBAAsB,2CAAc;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,4DAAqB;AAC3E,4DAA4D,kEAA2B;AACvF,8CAA8C,0DAA4B;AAC1E,kDAAkD,8DAAgC;AAClF,+CAA+C,2DAA6B;AAC5E,wDAAwD,oEAAsC;;AAE9F;AACA,sDAAsD,kEAAoC;AAC1F,kDAAkD,8DAAgC;AAClF,mDAAmD,+DAAiC;;AAEpF;AACA,wBAAwB,kDAAqB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,cAAc;;AAE3B,UAAU,QAAQ;AAClB;AACA,WAAW,2HAA2H;AACtI;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa;AAC5B,YAAY,QAAQ;AACpB,YAAY,uDAAuD;AACnE,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAS;AACpC;AACA,cAAc,yDAAS,2BAA2B;AAClD,cAAc,yDAAS,2BAA2B;AAClD,6BAA6B,UAAU;AACvC,sBAAsB,UAAU;;AAEhC;AACA,gDAAgD,qDAAc;AAC9D,2BAA2B,mDAAU;AACrC,+BAA+B,uEAAc;AAC7C,iCAAiC,yEAAgB;;AAEjD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gDAAgD,mDAAY;AAC5D;AACA;;AAEA;AACA,gDAAgD,mDAAY;AAC5D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,kDAAkD,oDAAa;AAC/D;AACA;;AAEA;AACA,4BAA4B,oDAAa;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gCAAgC,wDAAiB;;AAEjD;AACA,4BAA4B,gDAAS;AACrC;AACA;AACA;;AAEA;AACA,gCAAgC,gDAAS;AACzC;AACA;AACA;;AAEA;AACA,iDAAiD,mDAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,4BAA4B,gDAAS;AACrC;AACA;;AAEA;AACA,2BAA2B,mDAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,SAAS;AACjB;AACA;AACA,SAAS,sDAAM,CAAC,iEAA0B;AAC1C,SAAS,sDAAM,CAAC,iEAA0B;AAC1C;AACA;AACA;AACA;AACA,MAAM,sDAAM,CAAC,iEAA0B;AACvC;AACA;AACA,MAAM,sDAAM,CAAC,iEAA0B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B,YAAY,QAAQ;AACpB,YAAY,yDAAyD;AACrE,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,yDAAyD;AACrE,YAAY,OAAO;AACnB,YAAY,QAAQ,0BAA0B;AAC9C,YAAY,wBAAwB;AACpC,YAAY,aAAa;AACzB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA,wGAAwG,oBAAoB;AAC5H;AACA;AACA;AACA,wCAAwC,8DAAuB,GAAG,wBAAwB;AAC1F;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC;AAClD;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,oCAAoC;AACzC,KAAK,6CAA6C;AAClD;;AAEA,kBAAkB,uBAAuB;AACzC,WAAW,kEAAkE;AAC7E,0BAA0B,gDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC;AAClD,WAAW,kEAAkE;AAC7E,0BAA0B,gDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,cAAc;AAChD;;AAEA,kCAAkC,cAAc;AAChD,kCAAkC,cAAc;AAChD,mCAAmC,eAAe;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,kCAAkC,qBAAqB;AACvD,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wDAAwD,GAAG;AAC3D;;AAEA;AACA,kBAAkB,uDAAgB;AAClC,mBAAmB,wDAAiB;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,MAAM;AAChE;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,kDAAW;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,UAAU;AACV;AACA;;AAEA,iBAAiB,oCAAO;AACxB,wBAAwB,4CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;ACrsCT;AACI;AACR;AACD;AACE;AACF;AACO;AACL;AACF;AACC;AACA;AACI;AACC;;;;;;;;;;;;;;;;;;;;ACZO;AAGZ;AAKL;;AAEpB;AACA;AACA;AACO,uBAAuB,oDAAa;AAC3C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,aAAa;AACzB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,QAAQ;AAClB;AACA,WAAW,2HAA2H;AACtI;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,6DAAsB;AAC7B,2BAA2B,2BAA2B;AACtD;AACA;;AAEA;AACA,OAAO,6DAAsB;AAC7B,uDAAuD,0BAA0B;AACjF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yEAAyE,8BAA8B;AACvG;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU,0DAAU;AACpB;AACA;AACA,UAAU,0DAAU;AACpB;;AAEA;AACA;AACA;AACA,UAAU,0DAAU;AACpB;AACA;AACA;AACA,UAAU,0DAAU;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iFAAoC;AAC5C;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnrBqB;;AAErB;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,qBAAqB;AACnC,cAAc,wBAAwB;AACtC,cAAc,SAAS;AACvB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB;;AAEA;AACO;AACP;AACA;AACA,YAAY,SAAS;AACrB,YAAY,aAAa;AACzB,YAAY,SAAS,aAAa,wBAAwB,cAAc;AACxE;AACA,uCAAuC,wBAAwB,YAAY,mBAAmB;AAC9F;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB,8BAA8B;AACjE;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,wDAAiB;AACvB;AACA;AACA,WAAW,wDAAiB;AAC5B;AACA;AACA,WAAW,0DAAmB;AAC9B;AACA;AACA,WAAW,oDAAa,MAAM,oDAAa;AAC3C;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,aAAa;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,cAAc;AACd;AACA,uBAAuB;AACvB;;AAEA,mCAAmC,sBAAsB;AACzD;AACA,mBAAmB,uEAAgC;AACnD,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,kCAAkC,qBAAqB;AACvD,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC,YAAY,YAAY;AACxB;AACA;AACA,MAAM,6DAAsB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,8DAAuB;;AAE3C;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,MAAM;AAC7D,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA,sBAAsB,MAAM;AAC5B,6BAA6B,QAAQ;AACrC;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0DAA0D;AAC1D,KAAK;AACL;AACA;AACA;;AAEA;AACA,kBAAkB,wBAAwB;AAC1C,SAAS,oBAAoB;AAC7B,yCAAyC,6BAA6B;AACtE;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAe;AACxB,yBAAyB,6DAAsB;AAC/C;AACA;AACA;AACA;AACA,cAAc,uDAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sDAAe;AACzB,0BAA0B,6DAAsB;AAChD;AACA;AACA;AACA;AACA,eAAe,uDAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mCAAmC;AACrD,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mCAAmC;AACrD,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,sBAAsB;AACjC,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ,WAAW;AAC9B,aAAa;AACb;AACA,wGAAwG;AACxG;AACA,4CAA4C,4CAA4C;AACxF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;;;;;;;;AC31BwB;AACa;AACX;;AAE1B;AACA;AACA;AACA;AACO,yBAAyB,oDAAa;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,iCAAiC;AACzF,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA,iBAAiB,aAAa,IAAI;AAClC;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,UAAU,SAAS;AACnB,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yDAAI;;;;;;;;;;;;;;;;;;;AClLO;AAKL;AACW;AACW;;AAE9C;AACA;AACA,SAAS,iDAAiD;AAC1D;AACA,uBAAuB,oDAAa;AACpC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,aAAa;AACzB,YAAY,QAAQ,WAAW;AAC/B;AACA,uCAAuC;AACvC;AACA;AACA,YAAY;AACZ;AACA,qBAAqB,8DAAuB;;AAE5C;AACA;AACA,YAAY;AACZ;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,YAAY;AAC5B,cAAc,YAAY;AAC1B,aAAa,YAAY;AACzB,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,kDAAkD;AACtE;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,wDAAwD;AAC5E;AACA;AACA,GAAG;;AAEH,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG,IAAI,gBAAgB;AACvB;AACA;AACA;AACA;AACA,GAAG,IAAI,gBAAgB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,YAAY;;AAEtB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B,UAAU,WAAW;;AAErB;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;;AAEzB;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,8BAA8B;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,iBAAiB;AACtB,0CAA0C,kBAAkB;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,YAAY,QAAQ,WAAW;AAC/B,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,uBAAuB,kCAAkC,IAAI;AAC7D,iCAAiC,6DAAS;AAC1C,UAAU,gBAAgB;;AAE1B;AACA,iDAAiD,KAAK,sBAAsB,iBAAiB;AAC7F;;AAEA,gBAAgB,uEAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG,IAAI,gBAAgB;AACvB;AACA;AACA;AACA;AACA,GAAG,IAAI,gBAAgB;;AAEvB;AACA;AACA;AACA;;AAEA,EAAE,4DAAqB;;AAEvB,0BAA0B,oDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,uBAAuB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,+CAA+C,wDAAwD,MAAM,yCAAyC;AACtJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAuC,kBAAkB,KAAK,6BAA6B;AAC3F;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kFAAkF;AACpG;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mFAAmF;AACrG;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uDAAI;;AAEpB,+DAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;AC5qBa;AACJ;AACT;;AAExB,+DAAe,oDAAQ,EAAC;;;;;;;;;;;;;;;;;ACJsD;AAKtD;AACiB;;AAEzC,kDAAU,EAAE,8CAAU,EAAE,8CAAU,EAAE,4CAAQ,EAAE,8CAAU;;AAExD;AACA;AACA;AACA;AACA,4BAA4B,oDAAa;AACzC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,oDAAoD;;AAE9D;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,gBAAgB,gBAAgB;AAChC,gBAAgB,gBAAgB;AAChC,IAAI;;AAEJ;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA,kDAAkD,SAAS,KAAK,MAAM;AACtE;AACA,IAAI;;AAEJ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD,YAAY;;AAElE,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,yBAAyB,0DAAmB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAA+C;;AAE1D;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,+DAA+D;AAC1E;AACA;;;AAGA;AACA;AACA;;AAEA,gCAAgC,4DAAqB;;;AAGrD;AACA;AACA;;AAEA,2BAA2B,SAAS;AACpC;AACA;AACA,uCAAuC,QAAQ,MAAM,GAAG;AACxD;AACA;AACA;;AAEA,6BAA6B,SAAS;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA,wCAAwC,2CAA2C;AACnF;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,wBAAwB;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,UAAU;AACpB,UAAU,SAAS;;AAEnB;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;;AAEzB;AACA,IAAI;;AAEJ;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,UAAU;;AAEpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA,yBAAyB,4BAA4B,EAAE,uBAAuB;;AAE9E;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU,gBAAgB;;AAE1B,uBAAuB,eAAe;;AAEtC,SAAS,4DAAqB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,8CAAM,KAAK,cAAc;AACjD;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,+CAA+C;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,iDAAiD;AACnE;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,kBAAkB,4EAA4E;AAC9F;AACA;;;AAGA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,qBAAqB,6DAAI;AACzB,+DAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;;;;AC3mBgB;AACzB;AACW;AACA;AACF;AACE;AACD;;AAE9B,+DAAe,uDAAa,EAAC;;;;;;;;;;;;;;;;;;;ACLL;AACW;;AAEnC;AACA;AACA;AACA;AACO,uBAAuB,oDAAa;AAC3C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,gBAAgB,uDAAI;;AAEpB,+DAAe,QAAQ,EAAC;;;;;;;;;;;;;;;AC7Fa;AACb;;AAExB,+DAAe,oDAAQ,EAAC;;;;;;;;;;;;;;;;;;;;;ACAA;AACa;AACL;;AAEhC;AACA;AACA;AACA;AACO,oBAAoB,oDAAa;AACxC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,UAAU,iCAAiC;;AAE3C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA,UAAU,wCAAwC;;AAElD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,8DAA8D;;AAExE;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE,uBAAuB,gBAAgB,EAAE,eAAe,EAAE,aAAa;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,+BAA+B,oCAAoC;;AAEnE;AACA,6BAA6B,8BAA8B;AAC3D;AACA;AACA,+BAA+B,8BAA8B;AAC7D;;AAEA,kDAAkD,cAAc,wBAAwB,cAAc;AACtG;AACA;AACA,sBAAsB,QAAQ;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,oDAAI;;AAEjB,+DAAe,KAAK,EAAC;;;;;;;;;;;;;;;ACpSU;AACV;;AAErB,+DAAe,iDAAK,EAAC;;;;;;;;;;;;;;;;;;;ACH0B;AACV;AAKb;AACiB;;AAEzC;AACA;AACA;AACA;AACA,4BAA4B,oDAAa;AACzC;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,EAAE,gEAAqB;AACvB;AACA;AACA;AACA,aAAa,kDAAY;AACzB,GAAG;AACH,EAAE,oDAAK,iCAAiC,kDAAkD;;AAE1F;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,4DAAqB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,6DAAI;;AAEzB,+DAAe,aAAa,EAAC;;;;;;;;;;;;;;;;ACrKmB;AACf;AACH;;AAE9B,+DAAe,0DAAa,EAAC;;;;;;;;;;;;;;;;;;;;;ACCL;AACW;AACE;AACX;;AAE1B;AACA;AACA;AACO,wBAAwB,oDAAa;AAC5C,sCAAsC,kDAAqB;;AAE3D;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA,2CAA2C,kDAAqB;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,kDAAkD;;AAE7D;AACA;AACA,0BAA0B,wDAAiB;;AAE3C;AACA;;AAEA;AACA;AACA,qBAAqB,0EAA0E;AAC/F;AACA;;AAEA;AACA,6BAA6B,wDAAiB;AAC9C;AACA;;AAEA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAAqF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,oCAAoC;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA,UAAU,2CAA2C;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,kDAAqB;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;;AAE/C;;AAEA;AACA,mBAAmB,mCAAmC;AACtD;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU,kDAAkD;AAC5D,UAAU,iCAAiC;AAC3C;AACA;;AAEA,kBAAkB,gCAAgC;AAClD,kBAAkB,kCAAkC;;AAEpD;AACA;AACA,mBAAmB,6BAA6B;AAChD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA,GAAG;AACH;AACA,GAAG;;AAEH,kBAAkB,kCAAkC;;AAEpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,oBAAoB;;AAE9B,mCAAmC,2BAA2B;;AAE9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,kDAAqB;;AAEhE;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B;AACA,wBAAwB,kDAAqB;AAC7C;;AAEA,kBAAkB,8BAA8B;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB,UAAU,kBAAkB;;AAE5B;AACA;;AAEA;AACA,kBAAkB,oCAAoC;;AAEtD;AACA,mBAAmB,4BAA4B;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,kCAAkC;AACpD,kBAAkB,8BAA8B;AAChD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,mEAA4B;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,kDAAqB;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD,kBAAkB,kCAAkC;;AAEpD,kBAAkB,0BAA0B;;AAE5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc;AACxB,4EAA4E,mEAA4B;AACxG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,yDAAI;;;;;;;;;;;;;;;;;;;;AChbG;AACc;AACX;;AAE3B;AACA;AACA;AACA;AACO,yBAAyB,oDAAa;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,4DAAqB;;AAExC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE,MAAM,OAAO;AAC7E;AACA;AACA,iFAAiF,MAAM,IAAI,oCAAoC,oCAAoC,MAAM;AACzK;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAyB,+CAAQ;AACjC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,qEAA8B;AACrD;AACA,KAAK;AACL;AACA,sBAAsB,qEAA8B;AACpD;AACA,KAAK;AACL;AACA,wBAAwB,qEAA8B;AACtD;AACA,KAAK;AACL;AACA,uBAAuB,qEAA8B;AACrD;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,wDAAwD,sCAAsC;AAC9F;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,0EAA0E,GAAG;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAqB;AAC3B,yBAAyB,qEAA8B;AACvD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,wBAAwB,qEAA8B;AACtD;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,4DAAqB;AAC3B,wBAAwB,qEAA8B;AACtD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,uBAAuB,qEAA8B;AACrD;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,4DAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0DAAI;;;;;;;;;;;;;;;AC5YgB;AACb;;AAEzB,+DAAe,qDAAQ,EAAC;;;;;;;;;;;;;;;;ACDA;AACY;;AAEpC;AACA;AACA;AACA;AACA,uBAAuB,oDAAa;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,wDAAI;;AAEpB,+DAAe,QAAQ,EAAC;;;;;;;;;;;;;;;ACjCW;AACZ;;AAEvB,+DAAe,mDAAO,EAAC;;;;;;;;;;;;;;;;;;ACH2B;AAK1B;AACU;;AAElC;AACA;AACA;AACA;AACA,sBAAsB,oDAAa;AACnC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,+DAAwB;AAC3B,sBAAsB,4DAAqB;AAC3C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sDAAI;;AAEnB,+DAAe,OAAO,EAAC;;;;;;;;;;;;;;;AC3GU;AACX;;AAEtB,+DAAe,kDAAM,EAAC;;;;;;;;;;;;;;;;ACHK;AAKH;AACS;;AAEjC;AACA;AACA;AACA;AACA,qBAAqB,oDAAa;AAClC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ,kBAAkB;AACtC;AACA,8BAA8B,YAAY;AAC1C;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,UAAU;AAC1B,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,KAAK;;;AAGhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,aAAa;;AAEvB;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,MAAM;AAC7B;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU,sCAAsC;;AAEhD;AACA;;AAEA;AACA,oBAAoB,mBAAmB,EAAE,iBAAiB,EAAE,iCAAiC;AAC7F;AACA;AACA,oBAAoB,8CAA8C,EAAE,qBAAqB,EAAE,kCAAkC;AAC7H;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,8DAAuB;AACvC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,oBAAoB;;AAE3C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA,gBAAgB,8DAAuB;AACvC;AACA,uBAAuB,eAAe;AACtC;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA,WAAW,aAAa;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,IAAI;AACjE;AACA;AACA,gBAAgB,8DAAuB;;AAEvC;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;;AAEJ,uBAAuB,oBAAoB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,2DAA2D;AAC9E;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA,kBAAkB,8DAAuB;AACzC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,cAAc;AACd;AACA;AACA,SAAS,4DAAqB;AAC9B;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,qBAAqB,cAAc,iBAAiB;AACpD;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,QAAQ;;AAElB;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,gBAAgB;AAC1B;AACA,WAAW,kCAAkC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,qDAAI;;AAElB,+DAAe,MAAM,EAAC;;;;;;;;;;;;;;;;ACx8Be;AACJ;AACT;;AAExB,+DAAe,oDAAQ,EAAC;;;;;;;;;;;;;;;;;;;ACJY;AACW;AACZ;AAKX;AACW;AACY;;AAE/C;AACA;AACA;AACA;AACA,uBAAuB,oDAAa;AACpC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,0DAAmB,OAAO,gEAAyB,OAAO,gEAAyB;AAC/I;AACA,IAAI;AACJ;AACA,+DAA+D,gEAAyB;AACxF;AACA,IAAI;AACJ;AACA,8DAA8D,gEAAyB;AACvF;AACA,IAAI;AACJ;AACA,6DAA6D,2DAAoB,OAAO,iEAA0B,OAAO,iEAA0B;AACnJ;AACA,IAAI;AACJ;AACA,+DAA+D,iEAA0B,MAAM,0DAAmB;AAClH;AACA,IAAI;AACJ;AACA,+DAA+D,iEAA0B;AACzF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA,uBAAuB,4DAAqB;AAC5C;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,gEAAqB;AACvB;AACA;AACA;AACA,aAAa,kDAAY;AACzB,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,4DAAoB;AAC7C;;AAEA;AACA,GAAG,qDAAa;AAChB,yBAAyB,+DAAuB;AAChD;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0CAA0C;AAC/D;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA,iBAAiB,oDAAK;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,0DAA0D;AACpE;AACA;AACA,4BAA4B,4DAAoB;AAChD;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,aAAa,WAAW,aAAa;AAC5E;AACA;AACA;AACA;AACA,wCAAwC,aAAa,WAAW,aAAa;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAM,4DAAoB;AAC1B,GAAG,yDAAiB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;AAC1B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA,gBAAgB,uDAAI;;AAEpB,+DAAe,QAAQ,EAAC;;;;;;;;;;;;;;;ACv3Be;AACZ;;AAE3B,+DAAe,oDAAU,EAAC;;;;;;;;;;;;;;;;;;;;ACCF;AAC0B;;AAEZ;AACY;;AAEa;;AAE/D;AACA;AACA;AACA,yBAAyB,oDAAa;AACtC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,0BAA0B;AAC1C,eAAe,2BAA2B;AAC1C,cAAc;AACd,KAAK;AACL;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,WAAW;AACrB,yBAAyB,gEAA0B;AACnD,WAAW,mDAAmD;AAC9D;;AAEA;AACA,YAAY,kBAAkB;AAC9B;AACA,+CAA+C,MAAM,uBAAuB,eAAe;AAC3F,aAAa;AACb;;AAEA;AACA,GAAG;;AAEH;AACA,yEAAyE,WAAW;;AAEpF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,WAAW;;AAErB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,gEAAqB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;;AAEA,EAAE,+DAAwB;AAC1B,iCAAiC,4DAAqB;AACtD,GAAG;AACH;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,MAAM,wDAAiB;AACvB;AACA;AACA,MAAM,wDAAiB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,UAAU,kCAAkC;;AAEvE;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,2DAA2D;;AAEtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA,mBAAmB,WAAW;;AAE9B;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,UAAU,wBAAwB;AAClC,UAAU,iBAAiB;AAC3B,UAAU,YAAY;;AAEtB;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B,UAAU,SAAS;AACnB,UAAU,yBAAyB;;AAEnC;AACA;;AAEA;AACA;AACA,EAAE,4DAAqB;AACvB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA,UAAU,WAAW;AACrB,UAAU,eAAe;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,aAAa,EAAE,uBAAuB,EAAE,kBAAkB;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;;AAEzB;AACA,0BAA0B,OAAO;AACjC;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,sCAAsC;AAChD,UAAU,gCAAgC;AAC1C,UAAU,iBAAiB;;AAE3B;AACA,UAAU,+CAA+C;;AAEzD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,wDAAiB,mDAAmD;AAC5F;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B,UAAU,qBAAqB;AAC/B,UAAU,oCAAoC;;AAE9C;AACA;AACA;;AAEA,UAAU,gBAAgB;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B,UAAU,gBAAgB;;AAE1B;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qBAAqB;AAC/B,UAAU,oBAAoB;;AAE9B,UAAU,gBAAgB;;AAE1B,UAAU,uDAAuD;AACjE,UAAU,uDAAuD;;AAEjE;AACA;;AAEA;AACA,uDAAuD,MAAM;AAC7D,wDAAwD,OAAO;;AAE/D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,UAAU,uBAAuB;AACjC,UAAU,mCAAmC;;AAE7C;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,eAAe;;AAEjC;AACA,yBAAyB,aAAa;AACtC;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,UAAU,UAAU;AACpB,kBAAkB,yBAAyB;;AAE3C;AACA,yBAAyB,sBAAsB;AAC/C;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,UAAU,eAAe;AACzB,mDAAmD,OAAO;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC,2BAA2B,OAAO;;AAE7E;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,YAAY,EAAE,0BAA0B,EAAE,qBAAqB;AACnF,8BAA8B,YAAY,EAAE,oCAAoC,EAAE,+BAA+B;;AAEjH;AACA,uCAAuC,OAAO;AAC9C,iDAAiD,iBAAiB;;AAElE;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB,UAAU,wCAAwC;;AAElD,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,aAAa;AACzB;AACA;AACA;AACA,WAAW,qGAAqG;;AAEhH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,KAAK,aAAa,8BAA8B;;AAElG;AACA,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;;AAErD;AACA;AACA;AACA;;AAEA,sBAAsB,2BAA2B;AACjD;AACA;AACA,mDAAmD,KAAK;;AAExD;AACA,8BAA8B,MAAM,GAAG,MAAM;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU,wCAAwC;AAClD;AACA;AACA;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,yBAAyB;;AAEnC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oDAAK;AAC5B,2BAA2B,yDAAe;AAC1C;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,UAAU,oDAAoD;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,0DAAI;;AAEtB,+DAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;ACj5B1B;;AAK8B;;AAEU;AACX;;;AAG7B;AACA;AACA;AACO,2BAA2B,4DAAqB;AACvD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,gBAAgB;AAC1B;;AAEA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,GAAG;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,gBAAgB;AAC1B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;;AAEA,uEAAuE;AACvE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,4DAAI;;;;;;;;;;;;;;;;;;;;AChHxB;;AAK8B;;AAEW;AACX;;;AAG9B;AACA;AACA;AACO,4BAA4B,4DAAqB;AACxD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,kBAAkB;AAC5B;;AAEA;AACA,WAAW,sBAAsB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,oBAAoB,GAAG;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,GAAG;AACf,YAAY,GAAG;AACf;AACA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,6DAAI;;;;;;;;;;;;;;;;;;;;ACrFK;AACc;AACX;;AAEjC;AACA;AACA;AACO,+BAA+B,4DAAqB;AAC3D;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,gEAAI;;;;;;;;;;;;;;;;;;;;ACvFE;AACO;AACX;;AAE1B;AACA;AACA;AACO,wBAAwB,4DAAqB;AACpD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,yDAAI;;;;;;;;;;;;;;;;;;;;AC7BS;AACQ;AACX;;AAE3B;AACA;AACA;AACO,yBAAyB,4DAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,0DAAI;;;;;;;;;;;;;;;;;;;;ACxBQ;AACgB;AACX;;AAEnC;AACA;AACA;AACO,gCAAgC,4DAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,kEAAI;;;;;;;;;;;;;;;;;;AC/BC;AACU;;AAExC;AACA;AACA;AACO,oCAAoC,oDAAa;AACxD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,UAAU,QAAQ,SAAS;AAC/C;AACA,8BAA8B,UAAU,YAAY;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpE8B;AACQ;;AAEtC;AACA;AACA;AACO,yBAAyB,4DAAqB;AACrD;;AAEA,kBAAkB,0DAAI;;;;;;;;;;;;;;;;;;;;ACRQ;AACS;AACX;;AAE5B;AACA;AACA;AACO,0BAA0B,4DAAqB;AACtD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,mBAAmB,2DAAI;;;;;;;;;;;;;;;;;;ACjFC;AACH;;AAErB;AACA;AACA;AACA;AACA;AACO,oBAAoB,+CAAQ;AACnC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA,6CAA6C,8DAAuB;AACpE;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ,UAAU;AAC9B,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,kCAAkC,yBAAyB,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,uBAAuB,qBAAqB,IAAI;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,oBAAoB;;AAE9B;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA,gBAAgB,iDAAU,cAAc,UAAU,wBAAwB;AAC1E;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,gBAAgB,uDAAgB,cAAc,UAAU,wBAAwB;AAChF;AACA;AACA;AACA;AACA,gBAAgB,iDAAU,cAAc,UAAU,mBAAmB;AACrE;AACA;AACA;AACA,gBAAgB,kDAAW,cAAc,UAAU,mBAAmB;AACtE;AACA;AACA;AACA,gBAAgB,gDAAS,cAAc,UAAU,mBAAmB;AACpE;AACA;AACA;AACA,gBAAgB,wDAAiB,cAAc,UAAU,mBAAmB;AAC5E;AACA;AACA;AACA,gBAAgB,mDAAY,cAAc,UAAU,mBAAmB;AACvE;AACA;AACA;AACA,gBAAgB,oDAAa,cAAc,UAAU,mBAAmB;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,KAAK;AACnB;AACA;AACA,0DAA0D,WAAW;AACrE;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC,WAAW,6CAA6C;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,YAAY;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;ACvVkD;AACjB;AACF;;AAE/B,+DAAe,2DAAc,EAAC;;;;;;;;;;;;;;;;;ACJiB;AAIvB;AACkB;;AAE1C;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAa;AAC1C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,gEAAqB;AACvB;AACA;AACA;AACA,aAAa,kDAAY;AACzB,GAAG;AACH,EAAE,oDAAK,6BAA6B,kBAAkB;AACtD,EAAE,oDAAK,+BAA+B,kBAAkB;AACxD,EAAE,oDAAK,+BAA+B,kBAAkB;;AAExD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,cAAc,QAAQ,iCAAiC,uBAAuB,MAAM,uBAAuB;AAC3G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,aAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,8DAAI;;AAE1B,+DAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;AC1TN;AACQ;AACX;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oBAAoB,oDAAa;AACxC;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,YAAY;AACtB;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,oDAAI;;;;;;;;;;;;;;;ACjFmC;AACpB;;AAEhC,+DAAe,4DAAe,EAAC;;;;;;;;;;;;;;;;;;;;;ACHmC;AAC9C;AACW;AACF;AACE;;AAOP;AACmB;;AAE3C,kDAAU,EAAE,8CAAU,EAAE,4CAAQ,EAAE,8CAAU;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,oDAAa;AAC3C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,YAAY;AACtB,6BAA6B,IAAI;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B;AACA,oDAAoD,UAAU;;AAE9D;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,UAAU,UAAU;;AAEpB,gCAAgC,+BAA+B;AAC/D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,wBAAwB,iBAAiB,GAAG;;AAErE;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB,UAAU,SAAS;;;AAGnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,UAAU;;AAEpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,OAAO;;AAEjB;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,+BAA+B;;;AAG1C;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6DAA6D,MAAM,IAAI,MAAM;AAC7E,8DAA8D,WAAW,IAAI,WAAW;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB;AACA,iBAAiB,wBAAwB,IAAI;AAC7C;AACA;;AAEA;AACA,UAAU,0BAA0B;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;;AAE1B,uBAAuB,eAAe;;AAEtC,EAAE,4DAAqB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAM,KAAK,cAAc;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,0CAA0C,IAAI;AAC9C;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU,4BAA4B;;AAEtC,mCAAmC,gBAAgB;AACnD;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,2BAA2B;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA,UAAU,oCAAoC;;AAE9C;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B,cAAc,UAAU;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,+DAAI;;AAE3B,+DAAe,eAAe,EAAC;;;;;;;;;;;;;AC3jB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAAe,oBAAoB,EAAC;;;;;;;;;;;;;ACvIpC,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACzBF,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3B;AACmD;AAGjD;;AAEF;AACsD;AACR;;AAE9C;AACqC;AACH;AACM;;AAExC;AAC4C;;AAEC;AACC;AACH;AACF;AACF;AACiB;AACX;AACe;AACJ;AACN;AACQ;AACb;;AAe3C;;AAEmD;AACF;AACyC;AAC5B;AACI;AACF;AACA;AACY;AACI;AACZ;AACE;AAC/B;AACU;AACV;;AAEzC;AACwC;AACK;AACJ;AACA;AACE;AACF;AACA;AACA;AACC;AACA;AACH;AACC;AACM;AACJ;AACD;AACA;AACQ;;AAEjD;AAC4B;;AAE5B;AACsB;;AAEtB;AACwB;;;;;;;;;;;;;;;;;ACvFkF;;AAE1G;AACA;AACA,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACO,oCAAoC,kDAAa;AACxD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAK;;AAEzB;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;;AAGA,UAAU,6CAA6C;;AAEvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uBAAuB,6CAAQ;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gFAA2C;AAC7C;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE,sEAAiC;;AAEnC;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA,yBAAyB,qDAAgB;;AAEzC;AACA,iEAAiE,iDAAY;;AAE7E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,yDAAoB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,qDAAgB;AACzC,0BAA0B,qDAAgB;AAC1C,wBAAwB,qDAAgB;AACxC,uBAAuB,qDAAgB;;;AAGvC;AACA,sBAAsB,iDAAY;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,EAAE,yDAAoB;AACtB,EAAE,yDAAoB;AACtB,EAAE,yDAAoB;AACtB,EAAE,yDAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;ACpdmC;;AAEnC;AACA;AACA;AACA;AACO,0CAA0C,kDAAqB;AACtE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA,8BAA8B;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;;AAEjC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,uBAAuB,6CAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,gFAAmD;AACrD;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sEAAyC;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAwB;AAC7C,qBAAqB,qDAAwB;;AAE7C,wDAAwD,iDAAoB;AAC5E,wDAAwD,iDAAoB;;AAE5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B;AACA;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;ACrOkC;AAGd;;AAErB;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,kCAAkC,qBAAqB;AACvD,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1I8E;AAC3C;AAMd;;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACO,kCAAkC,kDAAW;AACpD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA,8BAA8B;AAC9B;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,cAAc;AACd,eAAe;AACf,sBAAsB;AACtB,gBAAgB;AAChB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,UAAU,qBAAqB;;AAE/B;AACA,UAAU,gCAAgC;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,mBAAmB,gBAAgB,IAAI;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wEAAwE,OAAO,EAAE,gBAAgB;AACjG;AACA,2BAA2B,YAAY,EAAE,cAAc;;;AAGvD;AACA,UAAU,eAAe;AACzB;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,UAAU,cAAc;;AAExB;AACA,UAAU,qCAAqC;AAC/C,UAAU,qCAAqC;;AAE/C;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,MAAM;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,UAAU,8BAA8B;AACxC,UAAU,qBAAqB;AAC/B,UAAU,SAAS;AACnB,UAAU,4BAA4B;AACtC,UAAU,wBAAwB;AAClC,UAAU,iBAAiB;;AAE3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,aAAa;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD,kBAAkB;;AAElE;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,4BAA4B;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kBAAkB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK,wDAAiB;;AAEtB;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,UAAU,qBAAqB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC,UAAU,SAAS;AACnB,UAAU,4BAA4B;;AAEtC;AACA,yBAAyB,aAAa;;AAEtC;AACA;;AAEA;AACA,gCAAgC,aAAa;;AAE7C;AACA;;AAEA;AACA;AACA,oCAAoC,6CAA6C;;AAEjF;AACA;;AAEA;AACA,0BAA0B,aAAa;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4DAA4D,kEAAqB;AACjF;AACA;;AAEA;AACA,+DAA+D,oDAAuB;AACtF;AACA,iCAAiC,kDAAqB;AACtD;;AAEA;AACA,oEAAoE,yDAA4B;AAChG;AACA;;AAEA,UAAU,6CAA6C;AACvD;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,8BAA8B,kDAAkD,IAAI;AACpF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,0BAA0B,gBAAgB,IAAI;AAC9C;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,UAAU,YAAY;;AAEtB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,kBAAkB;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,gBAAgB;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,0BAA0B,qEAAwB,kBAAkB,aAAa;;AAEjF;AACA,8BAA8B,iDAAoB;AAClD,iCAAiC,wDAA2B;;AAE5D;AACA;;;AAGA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,WAAW,cAAc;AACzB,WAAW,qBAAqB;AAChC;;AAEA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,qBAAqB;;AAE/B;AACA,WAAW,uEAAuE;AAClF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC;AACA,WAAW,cAAc,4CAA4C,IAAI;;AAEzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,yBAAyB;AACrC,YAAY,yBAAyB;AACrC,YAAY,SAAS;AACrB;AACA,iBAAiB,kCAAkC,IAAI;AACvD;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,6CAAgB;AACxD,0CAA0C,6CAAgB;AAC1D;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,0BAA0B,oEAAoE,IAAI;AAClG;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,UAAU,cAAc;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,qBAAqB,6EAA6E;;AAE5G;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU,cAAc;AACxB,UAAU,0BAA0B;AACpC,UAAU,4BAA4B;AACtC,UAAU,6BAA6B;AACvC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,2BAA2B;AACtC;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,eAAe,GAAG;AAC9B,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iFAAoC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,gBAAgB;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,uBAAuB,4DAA4D,IAAI;AACvF;AACA;;AAEA,UAAU,4BAA4B;AACtC,UAAU,SAAS;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,aAAa;;AAEpD;AACA,6DAA6D,wCAAwC;;AAErG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,UAAU,cAAc;AACxB,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,yEAAyE,gBAAgB;AACzF;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1+BmC;AAKV;AAKJ;;AAErB;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,mCAAmC;AAChD;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,iBAAiB;AAC/B,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,+BAA+B;AAC7C,cAAc,yBAAyB;AACvC,cAAc,4BAA4B;AAC1C;;AAEA;AACA;AACA;AACA;AACO,4BAA4B,kDAAW;AAC9C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA,oBAAoB;;AAEpB;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,0CAAa;AAC1C,+BAA+B,0CAAa;;AAE5C;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,wDAA2B;AAC/D,0BAA0B,yBAAyB;AACnD;AACA,uBAAuB,yBAAyB;AAChD;AACA;;AAEA;AACA,iCAAiC,8BAA8B;AAC/D;AACA,kCAAkC,8BAA8B;AAChE;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,wCAAwC;AACxE;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,wBAAwB,cAAc;AAClD;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,UAAU,4CAA4C;AACxG;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B,YAAY,eAAe;AAC3B,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,sBAAsB;AAClC,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;;AAEA,QAAQ,iFAAoC;;AAE5C;AACA;AACA,yBAAyB,4CAAe;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sDAAyB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC;AACtE;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,+DAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,wCAAwC,0BAA0B;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,oDAAuB;AAC/C;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,mDAAsB;AACxD,yCAAyC,6CAAgB;AACzD;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,mDAAsB;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,mDAAsB;AAC9C,kBAAkB,kDAAqB;AACvC;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAqB;AAC5C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,mBAAmB,4CAAe;;AAElC;AACA,iDAAiD,iDAAoB;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA,mBAAmB,4CAAe;;AAElC;AACA;AACA;AACA;AACA,+BAA+B,+CAAkB;AACjD,qCAAqC,0BAA0B;;AAE/D;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,4CAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,iEAAiE,oDAAuB;AACxF;;AAEA;AACA,iCAAiC,4CAAe;AAChD,qBAAqB,4CAAe;AACpC;AACA;AACA;AACA,0BAA0B,+CAAkB;AAC5C;AACA;;;AAGA,EAAE,kEAAqB,oCAAoC,WAAW;;;AAGtE;AACA,sEAAsE,yDAA4B;AAClG;AACA;;AAEA,UAAU,6CAA6C;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAiE,oDAAuB;AACxF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,6CAAgB;;AAE3C;AACA;AACA;;AAEA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;;AAEA,EAAE,kEAAqB,oCAAoC,WAAW;AACtE;;AAEA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,iBAAiB,oFAAoF,6EAA6E;AAC9L,YAAY,iBAAiB;AAC7B,YAAY,oBAAoB;AAChC,YAAY,kBAAkB;AAC9B,cAAc;AACd;AACA,uCAAuC,wEAAwE;AAC/G;;AAEA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;;AAEA;AACA,iCAAiC,4CAAe;AAChD,qBAAqB,4CAAe;AACpC;AACA;AACA;AACA,0BAA0B,+CAAkB;AAC5C;AACA;;AAEA,EAAE,kEAAqB,gCAAgC,2BAA2B;;AAElF;AACA,0CAA0C,8BAA8B;AACxE;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,wBAAwB;AAC5D;;AAEA,EAAE,kEAAqB,gCAAgC,2BAA2B;AAClF;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,qDAAwB;AAClD;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC70BmC;AAIV;AAKJ;;;AAGrB;AACA;AACA;AACA;AACO,4BAA4B,kDAAW;AAC9C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA;AACA,6BAA6B,+CAAkB;AAC/C,aAAa,0BAA0B;AACvC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,iCAAiC,sFAAsF,IAAI;AAC3H;AACA,mCAAmC,qDAAqD;;AAExF;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,4CAAe;AAChC,2CAA2C,iDAAoB;;AAE/D,gCAAgC;AAChC,cAAc,4CAAe,WAAW;AACxC;;AAEA;AACA,uBAAuB,4CAAe;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;;AAEA;AACA,gCAAgC,+CAAkB;AAClD;AACA,aAAa,6EAAgC;;AAE7C;AACA;;;AAGA;AACA,6CAA6C,wCAAwC;AACrF,6CAA6C,0FAA0F;AACvI;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB;AACA;AACA,mBAAmB,qDAAwB;AAC3C,sBAAsB,wDAA2B;;AAEjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B,EAAE,4DAA+B;AACjC;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB;AACA;AACA,mBAAmB,qDAAwB;AAC3C,sBAAsB,wDAA2B;;AAEjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B,EAAE,4DAA+B;AACjC;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,4BAA4B,yJAAyJ,IAAI;AACzL;AACA,mCAAmC,+CAA+C;;AAElF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,iFAAoC;;AAE5C;AACA;AACA;AACA,mBAAmB,4CAAe;AAClC;AACA,mBAAmB,4CAAe;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,4CAAe;AACxC;AACA;;AAEA;AACA,uBAAuB,+CAAkB;AACzC,wCAAwC,uDAA0B;AAClE;;AAEA;AACA,kCAAkC,uDAA0B;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+CAAkB;AACnD;AACA,qBAAqB,6EAAgC;AACrD;AACA;;AAEA;;AAEA;AACA,6CAA6C,gBAAgB;AAC7D,6CAA6C,wEAAwE;AACrH;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,4BAA4B,yGAAyG,IAAI;AACzI;AACA,mCAAmC,+CAA+C;;AAElF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,iFAAoC;;AAE5C;AACA;;AAEA;AACA,mBAAmB,4CAAe;AAClC,+CAA+C,iDAAoB;;AAEnE;AACA,sBAAsB,4CAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4CAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D,8CAA8C;AAC7G,6CAA6C,6DAA6D;AAC1G;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,qCAAqC,0NAA0N;AAC/P;AACA,mCAAmC,6DAA6D;;AAEhG,mDAAmD,UAAU,eAAe;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA,oGAAoG,wFAAwF,IAAI;AAChM;AACA,mCAAmC,8EAA8E,oBAAoB;;AAErI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,4CAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,4CAAe;AACrC;;AAEA;AACA,iBAAiB,4CAAe;AAChC,+CAA+C,iDAAoB;AACnE;AACA;AACA;;AAEA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;;AAEA;AACA,0BAA0B,+CAAkB;AAC5C;;AAEA;AACA,yBAAyB,6EAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;;AAEA;AACA,+BAA+B,0DAA0D;AACzF,UAAU,qBAAqB;AAC/B,gBAAgB,+DAA+D;AAC/E,aAAa,yCAAyC;AACtD,GAAG;;AAEH,2DAA2D,sFAAsF;AACjJ;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,yDAAyD,uKAAuK,IAAI;AACpO;AACA,mCAAmC,gGAAgG;;AAEnI;AACA;AACA,QAAQ,iFAAoC;;AAE5C;;AAEA;AACA,mBAAmB,4CAAe;AAClC;AACA,iDAAiD,iDAAoB;AACrE;AACA,iBAAiB,4CAAe;AAChC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,4CAAe;AAChC;;AAEA;AACA,yBAAyB,4CAAe;AACxC;AACA;;AAEA;AACA,uBAAuB,+CAAkB;AACzC,wCAAwC,uDAA0B;AAClE;;AAEA;AACA,gCAAgC,uDAA0B;AAC1D;;AAEA;AACA,2DAA2D,oJAAoJ;AAC/M,2DAA2D,8KAA8K;AACzO;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,mCAAmC,yDAAyD,IAAI;AAChG;AACA,mCAAmC,qDAAqD;;AAExF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;;AAEA,mBAAmB,4CAAe;AAClC,uCAAuC,iDAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,4CAAe;AACtC;;AAEA;AACA;AACA,6CAA6C,gHAAgH;AAC7J;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,0BAA0B,iKAAiK,IAAI;AAC/L;AACA;AACA;AACA,QAAQ,iFAAoC;;AAE5C;AACA;;AAEA;AACA,mBAAmB,4CAAe;AAClC,sBAAsB,4CAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAe;AAC5C,2DAA2D,iDAAoB;AAC/E;AACA;AACA;AACA;;AAEA,iBAAiB,4CAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,4CAAe;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iCAAiC,+CAAkB;AACnD,uBAAuB,uDAA0B;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iCAAiC,+CAAkB;AACnD,uBAAuB,uDAA0B;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,sEAAsE;AACnH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,mCAAmC,oDAAoD;AACvF;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,mCAAmC,sDAAsD;AACzF;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,+BAA+B,2IAA2I,IAAI;AAC9K;AACA,mCAAmC,2CAA2C;;AAE9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,4CAAe;AACnC;;AAEA;AACA,oBAAoB,4CAAe;AACnC;;AAEA;AACA;;AAEA;AACA,oBAAoB,4CAAe;AACnC;;AAEA;AACA,mBAAmB,4CAAe;AAClC;AACA,qCAAqC,uDAA0B;;AAE/D;AACA;AACA,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,+CAAkB;AACnD;AACA,UAAU,6EAAgC;AAC1C;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,yEAAyE;AACtH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,kCAAkC;AAClC;AACA,4BAA4B,4CAA4C;AACxE;AACA;AACA;AACA,4BAA4B,6CAA6C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,yBAAyB,kKAAkK,IAAI;AAC/L;AACA,mCAAmC,2CAA2C;;AAE9E;;AAEA;;AAEA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4CAAe;AAClC,0BAA0B,4CAAe;AACzC;AACA,+DAA+D,iDAAoB;AACnF;AACA;AACA;AACA,kBAAkB,4CAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,4CAAe;AAChC;AACA;AACA;AACA,gBAAgB,4CAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,4CAAe;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,+CAAkB;AACzC,wCAAwC,uDAA0B;AAClE;;AAEA;AACA;AACA,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,+CAAkB;AACnD;AACA,UAAU,6EAAgC;AAC1C;AACA;AACA;AACA;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,4CAAe;AACxC,+DAA+D,iDAAoB;AACnF;AACA,uBAAuB,4CAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,qDAAqD;AACnG;AACA;AACA;AACA,8CAA8C,kCAAkC;AAChF;;AAEA;AACA;AACA,6CAA6C,6EAA6E;AAC1H;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC;AACA,6DAA6D;AAC7D;AACA,mCAAmC,kEAAkE;;AAErG,uBAAuB,4CAAe;AACtC;AACA,2BAA2B,4CAAe;AAC1C;;AAEA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA,oDAAoD,iDAAoB;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wDAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC;AACA,mHAAmH;AACnH;AACA,mCAAmC,sEAAsE;;AAEzG,uBAAuB,4CAAe;AACtC;AACA,2BAA2B,4CAAe;AAC1C;;AAEA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA,oDAAoD,iDAAoB;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wDAA2B;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B;AACA,kDAAkD;AAClD;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1rCqB;AACc;AAIV;;AAEzB;AACA;AACA;AACO,gCAAgC,kDAAW;AAClD;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C,0CAAa;AACxD;AACA,4CAA4C,0CAAa;;AAEzD;AACA,EAAE,0DAAa;AACf,EAAE,0DAAa;AACf,EAAE,0DAAa;AACf,EAAE,0DAAa;;AAEf;AACA,kBAAkB,0DAAa,2BAA2B,wBAAwB;AAClF,mBAAmB,0DAAa,4BAA4B,wBAAwB;;AAEpF;AACA;AACA;AACA,yCAAyC,4CAAe;AACxD,wCAAwC,wDAA2B;AACnE;AACA;AACA,0CAA0C,4CAAe;AACzD,yCAAyC,wDAA2B;;AAEpE;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA,iCAAiC,yBAAyB;AAC1D,sCAAsC,8BAA8B;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,eAAe;AAC3C;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,eAAe;AAC3C;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,0DAAa;AACnC;AACA;AACA;AACA,gCAAgC,iDAAoB;AACpD,2BAA2B,+CAAkB;AAC7C;AACA;AACA,wCAAwC,iDAAoB;;AAE5D;AACA,8CAA8C,kDAAkD;AAChG;AACA;AACA,IAAI;AACJ;AACA;AACA,uBAAuB,0DAAa;AACpC;AACA;AACA;AACA,iCAAiC,iDAAoB;AACrD,2BAA2B,+CAAkB;AAC7C;AACA;AACA,yCAAyC,iDAAoB;;AAE7D;AACA,8CAA8C,kDAAkD;AAChG;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa;AACnE;AACA;;AAEA;AACA,mBAAmB,6EAAgC,yBAAyB,wDAA2B;AACvG,oBAAoB,6EAAgC,0BAA0B,wDAA2B;AACzG;AACA;;AAEA;AACA,iCAAiC,4CAAe;AAChD,kCAAkC,qDAAwB;AAC1D,kCAAkC,4CAAe;AACjD,mCAAmC,qDAAwB;;AAE3D;AACA;AACA;;AAEA;AACA,mDAAmD,UAAU,gDAAgD;AAC7G;;AAEA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAqB;AACvC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kBAAkB,kDAAqB;AACvC;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,aAAa;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAwB;AACtD;AACA,+BAA+B,qDAAwB;AACvD;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,YAAY,kDAAqB;AACjC;AACA;AACA,YAAY,kDAAqB;AACjC;AACA;AACA,YAAY,kDAAqB;AACjC;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;;AAEA,YAAY,uDAA0B;AACtC,yBAAyB,+CAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9eqC;AAMhB;;AAErB;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,UAAU;AACxB,cAAc,SAAS;AACvB,cAAc,0BAA0B;AACxC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;;AAEA;AACA;AACA;AACA;AACO,6BAA6B,kDAAW;AAC/C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,sBAAsB,wDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ,WAAW;AAC/B;AACA,wBAAwB;AACxB;AACA;AACA,mBAAmB,4DAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,GAAG;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,aAAa;AACzB,cAAc;AACd;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ,aAAa;AACjC,YAAY,aAAa;AACzB;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA,sBAAsB,4DAAqB;;AAE3C;AACA,kCAAkC,6DAAsB;AACxD;AACA;AACA,uBAAuB,wDAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yDAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,GAAG;AACf,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjnBqB;AACrB,cAAc,2BAA2B;;AAEzC;AACA;AACA;AACA;AACO,yBAAyB,kDAAW;AAC3C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B;AACA,oBAAoB,iDAAiD,IAAI;AACzE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,2EAA2E,sBAAsB;AACjG,qBAAqB,sEAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjImC;AACnC;AAMqB;AACI;;AAEzB;AACA;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ,IAAI,MAAM;AAC9B;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,kCAAkC,cAAc;AAChD;AACA;AACA,6CAA6C,8CAA8C;AAC3F,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,wBAAwB,oBAAoB,IAAI;AAChD;AACA;AACA;;AAEA,kBAAkB,4BAA4B;AAC9C,qEAAqE,OAAO;AAC5E;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,0CAA0C,oBAAoB,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,uBAAuB,oBAAoB,IAAI;AAC/C;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C,oEAAoE,OAAO;AAC3E;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,yCAAyC,oBAAoB,IAAI;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,aAAa,WAAW;AACxB;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,0BAA0B;AACtC,YAAY,0BAA0B;AACtC,YAAY,0BAA0B;AACtC,YAAY,2CAA2C;AACvD,YAAY,2CAA2C;AACvD,YAAY,2CAA2C;AACvD,YAAY,2CAA2C;AACvD,YAAY,eAAe;AAC3B,YAAY,eAAe;AAC3B,YAAY,gBAAgB;AAC5B;AACA,iBAAiB,0GAA0G,IAAI;AAC/H;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,YAAY;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,aAAa,EAAE,eAAe,EAAE,kBAAkB;AAChF;AACA,8BAA8B,6DAA6D;AAC3F;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACn/ByB;AAKR;AAQI;;AAErB;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA,aAAa,kDAAkD;AAC/D;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,cAAc;;AAEhD;AACA;AACA,YAAY;AACZ;AACA;AACA,oCAAoC,gBAAgB;;AAEpD;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,oCAAoC,UAAU;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B,YAAY,SAAS;AACrB,YAAY,wCAAwC;AACpD,YAAY,UAAU;AACtB;AACA,gBAAgB,uGAAuG;AACvH;AACA,iCAAiC,OAAO,KAAK;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA,wCAAwC,OAAO,KAAK;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,iCAAiC,sBAAsB;AACvD,gCAAgC,qBAAqB;AACrD,0BAA0B,eAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;;AAE3B;AACA;AACA,6EAA6E,uDAAkB;AAC/F;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,cAAc,UAAU;AACpC,YAAY,SAAS;AACrB;AACA,kCAAkC;AAClC,UAAU,uBAAuB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4CAA4C;AAC9D;AACA;AACA;;AAEA,kBAAkB,uCAAuC;AACzD;AACA;AACA;AACA;;AAEA;;AAEA,kCAAkC,cAAc;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yFAAyF,KAAK;AAC9F,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iCAAiC;AACnD;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iCAAiC;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wEAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wEAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,8CAA8C;AACjF;AACA;AACA;AACA;AACA,kCAAkC,8CAA8C;AAChF;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,GAAG;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,eAAe;AAC7B;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;;AAEA,oCAAoC,gBAAgB;AACpD;AACA,uCAAuC,yEAA4B;AACnE,qBAAqB,yEAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/jB4B;AAMP;;AAErB;AACA;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,qBAAqB,+CAAM;;AAE3B;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAqB;AACvC,kCAAkC,sBAAsB;AACxD;AACA,2CAA2C,SAAS,GAAG,KAAK,EAAE,YAAY;AAC1E;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,2BAA2B,kDAAW;AACtC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;;AAEP;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,kBAAkB;AACxB,MAAM,qBAAqB;AAC3B,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,4DAAqB;AACvC,WAAW;AACX;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E,sCAAsC,kCAAkC;AACxE;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,mBAAmB,6DAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wDAAiB;AACxC,wBAAwB,wDAAiB;AACzC,UAAU,yDAAkB;AAC5B;;AAEA;AACA;AACA,YAAY,QAAQ,gBAAgB;AACpC,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,wDAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,UAAU,yDAAkB;AAC5B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,kBAAkB,mBAAmB;AACrC,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2DAA2D,2BAA2B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,cAAc,UAAU;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qDAAqD;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe,sEAAsE,kBAAkB,sBAAsB,qBAAqB;AAC9J,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B,YAAY,SAAS;AACrB,cAAc,SAAS;AACvB;AACA,wCAAwC;AACxC,OAAO,6DAAsB;AAC7B;AACA,WAAW,kEAA2B,IAAI,KAAK,GAAG,MAAM;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,eAAe,sEAAsE,kBAAkB,sBAAsB,qBAAqB;AAC9J,YAAY,QAAQ;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4DAAqB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC12BqC;AACF;AASV;AASJ;;AAErB;AACA,aAAa,4DAA4D;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,cAAc;AAC5B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,UAAU;AACxB,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB,cAAc,aAAa;AAC3B;;AAEA;AACA;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,6BAA6B,4CAAe;;AAE5C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,0CAAa;AAC3D;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA,sDAAsD,YAAY;AAClE;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA,mEAAmE,OAAO;AAC1E;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA,iCAAiC,sBAAsB,eAAe;;AAEtE;AACA;AACA;AACA;AACA,IAAI,yEAA4B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yEAA4B;AAChC,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,IAAI,yEAA4B;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,yEAA4B;AAChC;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kCAAkC;AAC9C;AACA;AACA,kEAAkE,OAAO;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA,+BAA+B;AAC/B;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,kCAAkC,cAAc;AAChD;AACA,iDAAiD,OAAO;AACxD;AACA,OAAO,8EAAiC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,kCAAkC,cAAc;AAChD,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD,oCAAoC,gBAAgB;;AAEpD;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8EAAiC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,OAAO;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,iBAAiB,0DAAa;AAC9B;AACA;AACA;AACA;AACA,+BAA+B,8EAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,OAAO;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA,+DAA+D,OAAO;AACtE;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,qBAAqB,wEAA2B;AAChD;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,oEAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,GAAG;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,oEAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,iFAAoC;AAC5C;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D;AACA;AACA,+BAA+B,yBAAyB;AACxD,iCAAiC,oEAAuB;AACxD;AACA,gCAAgC,0CAAa;AAC7C;AACA;AACA;;AAEA;AACA,mCAAmC,cAAc;AACjD,qCAAqC,gBAAgB;AACrD;AACA,8BAA8B,0CAAa;AAC3C,sCAAsC,yBAAyB;AAC/D;AACA,8CAA8C,KAAK;AACnD;AACA;AACA;AACA,+CAA+C,4EAA4E;AAC3H;AACA;AACA;AACA,kFAAkF,4CAAe;AACjG,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4DAAqB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA,OAAO,wDAAiB;AACxB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,wCAAwC,gFAAgF,4CAAe,mDAAmD,IAAI;AAC9L;AACA;AACA,yBAAyB,iDAAoB;;AAE7C;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0CAAa;AACpC;AACA;;AAEA;AACA,+CAA+C,KAAK;AACpD,0BAA0B,iDAAoB;AAC9C;AACA,2BAA2B,yBAAyB;AACpD;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,kBAAkB;AAC9B,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,2DAA2D,yHAAyH,4CAAe,wDAAwD,IAAI;AAC/P;AACA;AACA,0BAA0B,iDAAoB;;AAE9C;AACA;AACA;;AAEA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA,uCAAuC,6CAAgB;;AAEvD;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0CAAa;AACpC;AACA;;AAEA;AACA,+CAA+C,KAAK;AACpD,0BAA0B,iDAAoB;AAC9C;AACA,2BAA2B,yBAAyB;AACpD;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA;AACA,MAAM,4DAAqB;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB;AACA;AACA,4BAA4B,gBAAgB;;AAE5C;AACA,wBAAwB,eAAe;AACvC;AACA,qBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kBAAkB,+CAAkB;AACpC,sCAAsC,0BAA0B;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mCAAmC;AACrD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,cAAc;AACd;AACA,iCAAiC,0DAA0D,IAAI;AAC/F,sBAAsB,qDAAwB;AAC9C;AACA;;AAEA;;AAEA;AACA,uBAAuB,uDAA0B;AACjD,oDAAoD,iDAAoB;AACxE;AACA;AACA,oDAAoD,iDAAoB;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,yDAA4B;AAC9B;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA,8BAA8B,mBAAmB,IAAI;AACrD,gBAAgB,qDAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,iDAAoB;AAClE;AACA;AACA,8CAA8C,iDAAoB;AAClE;;AAEA,EAAE,yDAA4B;;AAE9B;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA,QAAQ,iEAA0B;AAClC,QAAQ,iEAA0B;AAClC;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,uDAAgB;AACnE,kBAAkB,sDAAM,CAAC,iEAA0B;AACnD;AACA;AACA;AACA,cAAc,uDAA0B;AACxC;AACA,kBAAkB,yDAAS;AAC3B;AACA,kDAAkD,uDAAgB;AAClE,kBAAkB,sDAAM,CAAC,iEAA0B;AACnD;AACA;AACA;AACA,cAAc,uDAA0B;AACxC;AACA,kBAAkB,yDAAS;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChlD2B;AAIN;;AAErB;AACA;AACA;AACA;AACA;AACO,4BAA4B,kDAAW;AAC9C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ,WAAW;AAC/B;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,mBAAmB,+CAAI;AACvB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ,WAAW;AAC/B;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,mBAAmB,+CAAI;AACvB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AChImC;AAKd;;AAErB;AACA;AACA;AACA;AACO,+BAA+B,kDAAW;AACjD;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,sDAAsD,UAAU,0BAA0B;AAC1F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,aAAa,WAAW;AACxB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzLmC;AAGV;AAKJ;;AAErB;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD,mDAAsB,qCAAqC,mDAAsB;AAC1I,2CAA2C;AAC3C;AACA,uCAAuC,0CAAa;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,KAAK;AACjB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iDAAoB;AAC/C,8BAA8B,wDAA2B;;AAEzD,kDAAkD,oDAAuB;AACzE;AACA,wBAAwB,kDAAqB;AAC7C,8BAA8B,kDAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4CAAe;AACpC,GAAG,mEAAsC,YAAY,8CAAiB,IAAI,uDAA0B;AACpG;AACA,0BAA0B,kDAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,iFAAoC;AACtC,mBAAmB,kCAAkC;AACrD;;AAEA;AACA,gCAAgC,iDAAoB;AACpD,8CAA8C,mDAAsB,gCAAgC,mDAAsB;AAC1H;AACA,wBAAwB,0CAAa;AACrC;AACA,4BAA4B,4CAAe;AAC3C,8BAA8B,4CAAe;AAC7C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,+DAAwB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC/KmC;AACE;AAKhB;;AAErB;AACA;AACA;AACO,0BAA0B,kDAAW;AAC5C;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,+DAAe;;AAEvC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,yDAAS,CAAC,uDAA0B;AACpD,kBAAkB,yDAAS,CAAC,uDAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,aAAa,sDAAM;AACnB,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAS,CAAC,uDAA0B;;AAEnD;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,eAAe,iEAAe,EAAE;;AAEhC,iDAAiD;AACjD,4BAA4B,EAAE,gOAAgO,IAAI;AAClQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,0DAAU;AACf,KAAK,yDAAS;AACd;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,SAAS,yDAAS,CAAC,uDAA0B;AAC7C;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,iBAAiB,uDAA0B;AAC3C;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA,yBAAyB,yDAAS;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA,yBAAyB,yDAAS;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa,0DAAU;AACvB;AACA;AACA,aAAa,0DAAU,CAAC,yDAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,YAAY,sDAAM;AAClB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjmBqB;;AAErB;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,UAAU,iBAAiB;;AAE3B;AACA,uBAAuB,QAAQ,IAAI,oBAAoB,IAAI,OAAO;;AAElE;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/GmC;AACM;AACzC;AAMqB;;AAErB;AACA;AACA;AACO,2BAA2B,kDAAW;AAC7C;AACA;AACA,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,+BAA+B,yEAA4B;;AAE3D;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB,0CAAa;AAC7B,gBAAgB,0CAAa;AAC7B,cAAc,0CAAa;AAC3B,cAAc,0CAAa;AAC3B,aAAa,0CAAa;AAC1B,gBAAgB,0CAAa;AAC7B,eAAe,0CAAa;AAC5B,eAAe,0CAAa;AAC5B,gBAAgB,0CAAa;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,0CAAa;AACjC;AACA;;AAEA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,4BAA4B;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA,wCAAwC,0CAAa;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,kCAAkC,cAAc;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,wBAAwB,oBAAoB,IAAI;AAChD;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU,kCAAkC;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvdoB;;AAEpB;AACA;AACA,UAAU;AACV;AACA;;AAEA,yBAAyB,kDAAW;AACpC,8BAA8B,uDAAgB;AAC9C,0BAA0B,mDAAY;AACtC,0BAA0B,mDAAY;AACtC,0BAA0B,mDAAY;AACtC,iCAAiC,0DAAmB;;AAEpD,sBAAsB,+CAAQ;AAC9B,qBAAqB,8CAAO;AAC5B,sBAAsB,+CAAQ;AAC9B,wBAAwB,iDAAU;AAClC,mBAAmB,4CAAK;AACxB,2BAA2B,oDAAa;AACxC,mBAAmB,4CAAK;AACxB,wBAAwB,iDAAU;AAClC,oBAAoB,6CAAM;AAC1B,sBAAsB,+CAAQ;AAC9B,6BAA6B,sDAAe;;AAE5C,2BAA2B,oDAAa;AACxC,wBAAwB,iDAAU;AAClC,4BAA4B,qDAAc;AAC1C,uBAAuB,gDAAS;AAChC,mBAAmB,4CAAK;;AAEP;;;;;;;;;;;;;;;;ACzDjB;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,kGAAkG;AAC/I;AACA;AACA,OAAO,iBAAiB;AACxB,OAAO,iBAAiB;AACxB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,oFAAoF;AACxF,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxE8B;AACS;AACA;AACW;AACG;AACY;;AAEjE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,eAAe,oEAAoE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,iDAAiD,EAAE,oBAAoB,GAAG,YAAY;AAClG;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA,yBAAyB,KAAK,+BAA+B;AAC7D;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,kCAAkC,KAAK;AACvC;;AAEA,SAAS,gDAAK;AACd;;;AAGA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,sDAAQ;AACjB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,sDAAQ;AACjB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,wBAAwB,UAAU;AAC9C,cAAc;AACd;AACA,4CAA4C;AAC5C;AACA;;AAEA,gCAAgC,QAAQ;AACxC;AACA,mBAAmB,GAAG,KAAK;AAC3B;AACA;AACA;AACA,2BAA2B,aAAa;;AAExC;AACA;;AAEA;AACA;AACA,8BAA8B,KAAK;AACnC;AACA,qBAAqB,OAAO;AAC5B,oCAAoC,gBAAgB;AACpD,YAAY,QAAQ;AACpB,YAAY,wBAAwB,UAAU;AAC9C,cAAc;AACd;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,kDAAkD,iCAAiC,IAAI;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qEAAqE,aAAa;AAClF,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,aAAa;AACzB,YAAY,QAAQ;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,2BAA2B,UAAU;AACrC,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,2BAA2B,WAAW;AAClD,cAAc;AACd;AACA,0CAA0C;AAC1C,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH,SAAS,wDAAiB;AAC1B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,4CAA4C,8DAA8D;AAC1G;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA,qCAAqC;AACrC,0CAA0C,4DAA4D;AACtG;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,uBAAuB;AACnC,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA,0BAA0B,wCAAwC,IAAI;AACtE,2BAA2B,QAAQ;AACnC,oBAAoB,oDAAK;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA,0CAA0C,QAAQ;AAClD;AACA,GAAG,yDAAW;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;AACA,uBAAuB;AACvB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;;;AC/tBA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBA;AACO;;;;;;;;;;;;;;;;ACDP;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,wDAAwD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,wDAAwD;AACpE;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjGA;;AAEkC;;AAElC;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,6BAA6B;AACzC,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG,+CAAQ;;AAEX;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9UA;AAoBoB;;AAEpB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,gBAAgB,gBAAgB,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,yBAAyB,8CAAO;AAChC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,4CAAK;;AAEzB;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,6CAAM;;AAE3B;AACA;AACA,YAAY;AACZ;AACA;AACA,yBAAyB,iDAAU;;AAEnC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,iDAAU,0BAA0B,4CAAK;;AAE9D;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,iDAAU,6BAA6B,+CAAQ;;AAEvE;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,kBAAkB,0CAAG;;AAErB;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,yCAAyC;AACvD;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,0DAAmB;AAClD;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA,6BAA6B,oDAAa;AAC1C,uCAAuC,8DAAuB;;AAE9D;AACA,GAAG,0DAAmB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,gEAAyB;;AAE5B;AACA,+BAA+B,sDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,8CAAO;AAChB;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yGAAyG,6EAA6E;AACtL,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,SAAS,2DAAoB;AAC7B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC;AACA;AACA,MAAM,2DAAoB;AAC1B;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,EAAE,iEAAuB;AACzB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,SAAS,4DAAqB;AAC9B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,uBAAuB;AACnC;AACA;AACA,MAAM,4DAAqB;AAC3B;AACA;AACA,EAAE,4DAAqB;AACvB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,EAAE,kEAAwB;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;;AAEA;AACA,uDAAuD,OAAO;AAC9D,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7sB2B;;;;;;;;;;;;;;;;;ACA3B;AAKoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,6BAA6B,8CAAO;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,+BAA+B,8CAAO;;AAEtC;AACA;AACA,YAAY;AACZ;AACA,+BAA+B,8CAAO;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8CAAO;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,6BAA6B,8CAAO;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,8CAAO;AACtC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,gBAAgB;AACvB;AACA;AACA,mBAAmB,iCAAiC;AACpD;;AAEA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,IAAI,gBAAgB;AACvB;AACA;AACA,mBAAmB,iCAAiC;AACpD;;AAEA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA,2BAA2B,uDAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,2DAAoB;AAC3B,OAAO,2DAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrfA;AAC+B;AAC+E;AACtB;AACH;AACgB;AACH;AACe;;AAEjH;AAC0D;;AAE1D;AACiC;AACE;AACM;AACH;AACV;AACM;AACC;AACN;AACE;AACF;AACA;AACM;AACA;;AAEnC;AAC4B;AACE;AACG;AACA;AACA;AACA;AACQ;AACZ;AACM;AACH;AACA;;AAEhC;AAC8B;AACQ;AACC;AACN;AACE;AACC;AACF;AACW;AACG;AACT;AACJ;AACM;AACL;AACI;;AAExC;AAC+B;AACN;AACI;AACJ;AACM;AACK;AACZ;AACW;AACL;AACG;AACW;AAClB;AACC;;AAE3B;AACkD;AACM;AACJ;AACF;AACM;AACM;AACb;AACoB;AAClB;AACA;AACO;AACP;AACY;AACH;AACT;AACC;AACE;AACI;AACP;AACC;AACG;AACJ;;AAEnD;AACoD;AACC;AACG;AACA;AACF;AACD;AACU;AACP;AACI;AACJ;AACJ;AACS;AACR;AACS;AACE;AACZ;AACA;AACE;AACsB;AACvB;AACC;AACI;AACN;AACD;AACO;AACD;AACL;;AAEpD;AAC8B;;;;;;;;;;;;;;;;;;;;;;;;;AC7H9B;AAMoB;;AAEpB;AAC8C;AACW;AACU;AACvB;AACI;AACA;AACmB;AACrB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA,uBAAuB,uDAAW;AAClC,6BAA6B,kEAAgB;AAC7C,kCAAkC,4EAAqB;AACvD,sBAAsB,qDAAU;AAChC,wBAAwB,yDAAY;AACpC,wBAAwB,yDAAY;AACpC,kCAAkC,4EAAqB;AACvD,uBAAuB,uDAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAa;AACvC;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,sDAAe;AACvD,6BAA6B,gBAAgB,GAAG,uDAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAe,EAAE;AAC3C,yBAAyB,qDAAc,EAAE;AACzC,2BAA2B,uDAAgB,EAAE;AAC7C;AACA;AACA,+BAA+B,2DAAoB,EAAE;AACrD,iCAAiC,6DAAsB,EAAE;AACzD,oCAAoC,gEAAyB,EAAE;AAC/D,iCAAiC,6DAAsB,EAAE;AACzD,+BAA+B,2DAAoB,EAAE;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,kEAA2B;AACpC;AACA;AACA;AACA;AACA,SAAS,kEAA2B;AACpC;AACA;AACA,SAAS,4DAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAA2B;AACpC;AACA;AACA;AACA;AACA,SAAS,kEAA2B;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,8DAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kDAAW;AAC5B,IAAI;AACJ,GAAG,oDAAa;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,UAAU;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAa;AAC5B;AACA;AACA,eAAe,oDAAa;AAC5B;AACA;AACA,eAAe,oDAAa;AAC5B;AACA,eAAe,oDAAa;AAC5B;AACA,eAAe,oDAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACpYA;AAgBwB;;AAExB;AACA;AACA;AACO,kCAAkC,oDAAa;AACtD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,4CAAK;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,4CAAK;AAC/B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,mDAAY;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,uEAAgC;AAClC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,uEAAgC;AAClC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA;AACA,EAAE,sEAA+B;AACjC,EAAE,2DAAoB;;AAEtB;AACA,EAAE,2EAAoC;;AAEtC;AACA,EAAE,yEAAkC;;AAEpC;AACA,EAAE,2EAAoC;;AAEtC;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAuB;AAC9C;AACA,wBAAwB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACxK,qBAAqB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACrK,oBAAoB,oDAAa;AACjC,mBAAmB,oDAAa;;AAEhC,iBAAiB,oDAAa;AAC9B,qBAAqB,oDAAa;AAClC,oBAAoB,oDAAa;AACjC,0BAA0B,oDAAa;AACvC,qBAAqB,oDAAa;AAClC,wBAAwB,oDAAa,KAAK,oDAAa;AACvD,2BAA2B,oDAAa,KAAK,oDAAa;AAC1D,eAAe,oDAAa,KAAK,oDAAa;AAC9C,uBAAuB,oDAAa;AACpC,qBAAqB,oDAAa,KAAK,oDAAa;AACpD,yBAAyB,oDAAa;;AAEtC,OAAO,wEAAiC;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA,aAAa,2DAAoB;AACjC,GAAG;AACH,EAAE,oDAAa;AACf;;AAEA,iBAAiB,qEAA8B,oBAAoB,iCAAiC;AACpG;;AAEA;AACA;AACA;AACA,kBAAkB,mDAAY;AAC9B,kBAAkB,sDAAe;AACjC;AACA;AACA;AACA,cAAc,uDAAgB;AAC9B,cAAc,yDAAkB;AAChC,qBAAqB,oBAAoB;AACzC,8BAA8B,uDAAgB;AAC9C;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C,+BAA+B,mDAAY;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAsB;AACxB,EAAE,2DAAoB;AACtB,EAAE,gEAAyB;AAC3B,EAAE,+DAAwB;;AAE1B;AACA,EAAE,mEAA4B;;AAE9B;AACA,EAAE,mEAA4B;;AAE9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAA8B;AAClC,IAAI,qEAA8B;AAClC;AACA;AACA;AACA;AACA;AACA,IAAI,qEAA8B;AAClC,IAAI,qEAA8B;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG,qEAA8B;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iEAA0B;AAC9B,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG,uEAAgC;;AAEnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,mEAA4B;AAChC,EAAE;;;;;;;;;;;;;;;;;ACvqBF;AAOwB;;AAExB;AACA;AACA;AACO,4BAA4B,iDAAU;AAC7C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wCAAwC,8CAAO;;AAE/C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,kBAAkB,iCAAiC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iCAAiC;AACrD;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,mCAAmC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,2CAA2C,uDAAgB;;;;;;;;;;;;;;;;;AChkB3D;AAkBwB;;AAExB;AACA,sDAAsD,eAAe;AACrE;AACO,8BAA8B,oDAAa;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,yBAAyB,8CAAO;;AAEhC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8DAAuB;;AAEnD;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,yDAAkB;AAC5C;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qCAAqC,6DAAsB;AAC3D;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA,sBAAsB,0DAAmB;AACzC;AACA;AACA,qCAAqC,uDAAgB;AACrD;AACA,EAAE,8DAAuB;;AAEzB;AACA;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA,qCAAqC,uDAAgB;AACrD;AACA;AACA;;AAEA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,mBAAmB,wDAAiB;AACpC,kBAAkB,oCAAoC;AACtD;AACA,GAAG,8FAAuD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAqB;AACvB;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW,aAAa,cAAc;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,gCAAgC;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAa;AAChC;AACA;AACA,aAAa,4DAAqB;AAClC;AACA,2BAA2B,8DAAuB;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAqB;;AAEpD;AACA,0BAA0B,wDAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnnBA;AAqBwB;;AAExB;AACA;AACA;AACO,4BAA4B,oDAAa;AAChD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB,+CAA+C;AAC7E;AACA;AACA,wBAAwB,8CAAO;;AAE/B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO,yEAAyE;AAC5F;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,4CAAK;AAChC;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qCAAqC,mDAAY;AACjD;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,mDAAY;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,qCAAqC,oCAAoC;AACzE;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,2BAA2B,8BAA8B,8CAAO,uBAAuB,8CAAO,cAAc;AAC5G;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,iCAAiC,gDAAS;AAC1C;AACA;AACA,yDAAyD,OAAO;AAChE,GAAG,8DAAuB;AAC1B;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,oBAAoB,mDAAW;AAC/B;AACA;AACA;AACA,cAAc,yDAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uDAAgB;AAClC,uBAAuB,uDAAgB;AACvC;AACA,GAAG,qEAA8B;AACjC,GAAG,0DAAmB;AACtB;AACA;AACA;AACA;AACA,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB,IAAI,6DAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,2DAAoB;AACvB,GAAG,2DAAoB;AACvB;AACA,EAAE,6DAAsB;AACxB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,mEAAmE,8CAAO;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8CAAO;AACzC;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA,2EAA2E,mDAAY;AACvF;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,2EAAoC;;AAEtC;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,gEAAyB;AAC3B;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,kBAAkB,+CAA+C;AAC/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO,yEAAyE;AAC9F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2CAAI;AAC3B;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,8CAAO;AAC1B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,8CAAO;;AAE5B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8CAAO;;AAEnC;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,8CAAO;;AAErC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB,mBAAmB,OAAO;AAC1B,oBAAoB,2CAA2C;AAC/D;AACA,6GAA6G,8CAAO;AACpH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,mBAAmB,8CAAO;AAC1B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,wDAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAsB;AAC1B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC;AAClD;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iCAAiC;AACtC,KAAK,+BAA+B;AACpC,KAAK;AACL;AACA;AACA;AACA,qBAAqB,gCAAgC;AACrD,qBAAqB,kCAAkC;AACvD;AACA,kBAAkB,8BAA8B;AAChD;AACA;AACA,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA,wBAAwB,qEAA8B;AACtD;AACA,EAAE,mEAA4B;;AAE9B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAA2B;AAC7B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sBAAsB;AAC5B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,+BAA+B;AAC5C,sBAAsB,8CAAO;AAC7B,aAAa,0BAA0B;AACvC,wBAAwB,8CAAO;AAC/B,aAAa,0BAA0B;AACvC,uBAAuB,8CAAO;AAC9B,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA,kCAAkC,8CAAO;AACzC;AACA;AACA,iCAAiC,8CAAO;AACxC;AACA;;AAEA;AACA,uCAAuC,sDAAe,mFAAmF,sDAAe;AACxJ,uCAAuC,sDAAe,oFAAoF,sDAAe;AACzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,8CAAO;AAC1B,kBAAkB,8CAAO;AACzB,wBAAwB,8CAAO;AAC/B,iBAAiB,8CAAO;AACxB,sBAAsB,8CAAO;AAC7B,wBAAwB,8CAAO;AAC/B,kBAAkB,gDAAS;AAC3B;AACA,kBAAkB,eAAe;AACjC,mBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC,sBAAsB,uDAAgB;AACtC,sBAAsB,uDAAgB;AACtC,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B,MAAM,2DAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,gEAAyB;AAC3B,EAAE,gEAAyB;AAC3B;AACA,GAAG,gEAAyB;AAC5B,GAAG,gEAAyB;AAC5B;AACA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAyB;AAC7B;AACA;AACA,IAAI,gEAAyB;AAC7B;AACA;AACA,EAAE,+DAAwB;AAC1B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sDAAe;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA;AACA;AACA,GAAG,2DAAoB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,wEAAiC;;AAEnC;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oCAAoC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uDAAgB;AAC9B,eAAe,yDAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,2DAAoB;AACvB,GAAG,6DAAsB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,iCAAiC;AACjC;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mDAAY;AACrB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB;AACA,WAAW,sDAAe;AAC1B,WAAW,sDAAe;AAC1B,mDAAmD;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjqEAA8B;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE,oDAAa,EAAE,oDAAa,EAAE,oDAAa;AAC7C,EAAE,uDAAgB,EAAE,oDAAa,EAAE,oDAAa;AAChD,EAAE,uDAAgB,EAAE,oDAAa,EAAE,uDAAgB;AACnD,EAAE,oDAAa,EAAE,oDAAa,EAAE,uDAAgB;AAChD,EAAE,oDAAa,EAAE,uDAAgB,EAAE,oDAAa;AAChD,EAAE,oDAAa,EAAE,oDAAa,EAAE,uDAAgB;AAChD;;AAEA;AACA;AACA;AACA,oBAAoB,gDAAS;;AAE7B;AACA;AACA;AACA,oBAAoB,8CAAO;;AAE3B;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB,wBAAwB;AACxC,gBAAgB,wBAAwB;AACxC;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,WAAW;AACzB;;;;;;;;;;;;;;;;;AC72DA;AAcwB;;AAExB;AACA;AACA;AACO,iCAAiC,oDAAa;AACrD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,gDAAS;;AAEnC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,4CAAK;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD,+CAA+C,OAAO;AACtD;AACA;AACA,yBAAyB,qDAAc;AACvC;AACA;;AAEA;AACA;AACA,GAAG,qEAA8B;AACjC;AACA;AACA,GAAG,qEAA8B;AACjC;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA,IAAI,qEAA8B;AAClC;;AAEA;AACA,oBAAoB,uDAAgB;AACpC,0DAA0D,mDAAY;AACtE,GAAG,sEAA+B;AAClC,GAAG,2DAAoB;AACvB;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAiC;;AAEnC;AACA;AACA,EAAE,sEAA+B;;AAEjC;AACA;AACA;AACA;AACA;AACA,6EAA6E,wDAAiB;AAC9F;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAuB;AACrD;AACA,cAAc,oDAAa;AAC3B,oBAAoB,oDAAa;AACjC,0BAA0B,oDAAa,KAAK,oDAAa;AACzD,+BAA+B,oDAAa;AAC5C,oCAAoC,oDAAa;AACjD,0BAA0B,oDAAa,KAAK,oDAAa;AACzD,eAAe,oDAAa,KAAK,oDAAa;;AAE9C,OAAO,wEAAiC;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA,aAAa,6DAAsB;AACnC,SAAS,uDAAgB;AACzB,GAAG;AACH,EAAE,oDAAa;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,oEAA6B;AAC3D,+CAA+C,4DAAqB;AACpE,iDAAiD,qEAA8B;AAC/E,qDAAqD,qEAA8B;AACnF,6DAA6D,qEAA8B;AAC3F,+BAA+B,4DAAqB;AACpD;;AAEA;AACA,mCAAmC,iEAAiE,IAAI,kFAA2C;AACnJ;;AAEA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;;AAEA;AACA,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,uDAAgB;AACzC;AACA;AACA,gEAAgE,mDAAY;AAC5E;AACA;AACA,yCAAyC,cAAc;AACvD;AACA;AACA;AACA;AACA,EAAE,2DAAoB;;AAEtB;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,GAAG,qEAA8B;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,iEAA0B;AAC9B,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;;AAEA,GAAG,uEAAgC;;AAEnC;AACA;AACA;;AAEA,IAAI,mEAA4B;AAChC,EAAE;;;;;;;;;;;;;;;;;AC7aF;AAWwB;;AAExB;AACA;AACA;AACO,uCAAuC,oDAAa;AAC3D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB,gDAAS;;AAE/B;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8CAAO;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB,gDAAS;;AAE/B;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8CAAO;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,4CAAK;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,gEAAyB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uDAAgB;AACjC,8CAA8C,mDAAY;AAC1D;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,uDAAgB;AAC/C,+BAA+B,uDAAgB;AAC/C,mCAAmC,uDAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;;AAEtB;AACA;AACA,+BAA+B,uDAAgB;AAC/C,+BAA+B,uDAAgB;AAC/C;AACA;;AAEA;AACA,gBAAgB,uDAAgB;AAChC,gBAAgB,uDAAgB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uDAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,GAAG,2DAAoB;AACvB;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,uDAAgB;AAChD,gCAAgC,uDAAgB;AAChD;AACA;AACA,sBAAsB,uDAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;;AAEtB;AACA,EAAE,gEAAyB;;AAE3B;AACA,EAAE,sEAA+B;AACjC,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;;AAEhC;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAyB;AACjD,kBAAkB,2DAAoB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,gEAAyB;AAC3B,EAAE,8DAAuB;AACzB,EAAE,wEAAiC;AACnC,EAAE,sEAA+B;;AAEjC;AACA,wBAAwB,qEAA8B;AACtD,KAAK,iCAAiC;AACtC;;AAEA;AACA,EAAE,gEAAyB;AAC3B,EAAE,+DAAwB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;AACA;;;;;;;;;;;;;;;;;ACzjBA;AASwB;;AAExB;AACA;AACA;AACO,2BAA2B,oDAAa;AAC/C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oCAAoC,gDAAS;;AAE7C;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,8CAAO;AAC/B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,uBAAuB,8CAAO;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,wDAAiB;AACvC;;AAEA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uDAAgB;AAC5D;AACA;AACA,IAAI,2DAAoB;AACxB;AACA;AACA,wBAAwB,wDAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA;AACA;AACA;AACA,GAAG,2DAAoB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,KAAK,MAAM,IAAI;AAC3D;AACA;AACA;;;;;;;;;;;;;;;;;ACtRA;AAQwB;;AAExB;AACA;AACA;AACO,6CAA6C,oDAAa;AACjE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,4CAAK;AAChC;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,iDAAU;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,kDAAW;;AAEtC;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC,+DAAwB;;AAExD;AACA;AACA;AACA;AACA,4BAA4B,8DAAuB,2CAA2C,WAAW,yDAAkB,aAAa,yDAAkB,SAAS,gEAAyB,SAAS,gEAAyB,EAAE;;AAEhO;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,uEAAgC;AACnC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2CAA2C;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,qCAAqC,8DAAuB;AAC5D,gCAAgC,oDAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,8DAAuB,mCAAmC,WAAW,yDAAkB,aAAa,yDAAkB,EAAE;AACpJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAoB;AAC3C;AACA;AACA,wCAAwC,4DAAqB;AAC7D,wBAAwB,4DAAqB;;AAE7C;AACA;AACA,iBAAiB,oDAAa;AAC9B,iBAAiB,oDAAa;AAC9B,qBAAqB,oDAAa,KAAK,oDAAa;AACpD;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;AACA,uBAAuB,8DAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpkDAAkD;AAClD,wCAAwC;AACxC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,0BAA0B,iDAAU;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,mCAAmC,uDAAgB;;;;;;;;;;;;;;;;;ACzdnD;AAYwB;;AAExB;AACA;AACA;AACO,6BAA6B,oDAAa;AACjD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,yDAAyD;;AAEzD;AACA,GAAG,wEAAiC;;AAEpC,GAAG,2DAAoB;;AAEvB,uBAAuB,0DAAmB;AAC1C;AACA;AACA,GAAG,2EAAoC;AACvC,GAAG,8DAAuB;AAC1B;AACA;AACA;AACA,IAAI,2EAAoC;AACxC;AACA;AACA,IAAI,mEAA4B,8BAA8B,0DAAmB;AACjF;;AAEA;AACA,GAAG,wEAAiC;AACpC;AACA,EAAE,6DAAsB;;AAExB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uBAAuB,+CAAQ;AAC/B;AACA,qBAAqB,8CAAO;AAC5B,qBAAqB,8CAAO;AAC5B,qBAAqB,8CAAO;AAC5B,qBAAqB,8CAAO;AAC5B,qBAAqB,8CAAO;AAC5B,qBAAqB,8CAAO;AAC5B;AACA;AACA,kBAAkB,4CAAK;AACvB,kBAAkB,4CAAK;AACvB,kBAAkB,4CAAK;AACvB,kBAAkB,4CAAK;AACvB,kBAAkB,4CAAK;AACvB,kBAAkB,4CAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,yCAAyC,oDAAa;;;;;;;;;;;;;;;;;AC9OtD;AAewB;;AAExB;AACA;AACA;AACO,6BAA6B,oDAAa;AACjD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,4CAAK;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,8CAAO;AAC/B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,8CAAO;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,8CAAO;;AAE/B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;;AAEA,EAAE,wEAAiC;AACnC,EAAE,mEAA4B,8BAA8B,0DAAmB;;AAE/E;AACA,qBAAqB,uDAAgB;AACrC;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,uDAAgB;AACtC,oBAAoB,uDAAgB;AACpC,mBAAmB,uDAAgB;AACnC,sBAAsB,uDAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sEAA+B;AACjC,EAAE,sEAA+B;AACjC,EAAE,sEAA+B;AACjC,EAAE,sEAA+B;AACjC,EAAE,sEAA+B;;AAEjC;AACA;AACA;AACA;AACA,4CAA4C,2CAAI;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;;AAEtB;AACA;AACA;AACA;AACA,sBAAsB,wDAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,qDAAc;AAC9B;AACA;AACA,EAAE,wEAAiC;AACnC,EAAE,yDAAkB;AACpB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mEAA4B,IAAI,iCAAiC,IAAI,2BAA2B;AACrI,GAAG,gEAAyB;AAC5B,GAAG,gEAAyB;AAC5B,GAAG,+DAAwB;;AAE3B;AACA,yCAAyC,2DAAoB;AAC7D;AACA,0BAA0B,oDAAa,KAAK,oDAAa;AACzD,uBAAuB,oDAAa;AACpC,sBAAsB,oDAAa,KAAK,oDAAa;AACrD,oBAAoB,oDAAa,KAAK,oDAAa;AACnD,qBAAqB,oDAAa,KAAK,oDAAa;AACpD,mBAAmB,oDAAa,KAAK,oDAAa;AAClD,sBAAsB,oDAAa,KAAK,oDAAa;;AAErD,QAAQ,wEAAiC;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,qEAA8B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,QAAQ,iEAA0B;AAClC,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,uEAAgC;;AAEvC;AACA;AACA;;AAEA,QAAQ,mEAA4B;AACpC,MAAM;AACN,UAAU,uDAAgB;AAC1B,IAAI;AACJ,GAAG,2EAAoC;AACvC;AACA;;AAEA;AACA;AACA;AACA,EAAE,mEAA4B;AAC9B,EAAE,+DAAwB;AAC1B,EAAE,wEAAiC;;AAEnC;AACA,iBAAiB,kFAA2C;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oEAA6B;AAChC,GAAG,oEAA6B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,yDAAkB;AACzC,wBAAwB,yDAAkB;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA,0EAA0E,wDAAiB,sHAAsH,wDAAiB;;AAElO;AACA,EAAE,sEAA+B,2BAA2B,0EAAmC;AAC/F;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;;;;;AC9fA;AAKwB;;AAExB;AACA;AACA;AACO,mCAAmC,oDAAa;AACvD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,4CAAK;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5GA;AAgBwB;;AAExB;AACA;AACA;AACO,6BAA6B,oDAAa;AACjD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,8CAAO;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,uBAAuB,iDAAU;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8CAAO;;AAEnC;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,8CAAO;AAC3B;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAsB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,yDAAyD,OAAO;AAChE,GAAG,qEAA8B;AACjC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA,2CAA2C,+CAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAA8B;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,IAAI,8DAAuB;AAC3B,IAAI,sEAA+B;AACnC,IAAI,qEAA8B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM,eAAe,KAAK;AAC1E;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,yBAAyB,iDAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,iCAAiC,gDAAS;AAC1C;AACA;AACA,yDAAyD,OAAO;AAChE,GAAG,8DAAuB;AAC1B;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,wDAAiB;AAC5C;AACA;AACA;AACA,IAAI,qEAA8B;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,wEAAiC;;AAEnC;AACA,EAAE,2EAAoC;;AAEtC;AACA,EAAE,gEAAyB;AAC3B;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,2DAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,sBAAsB,wDAAiB;AACvC;AACA,mCAAmC,uEAAgC;AACnE;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,kFAA2C;AACjD;;AAEA;AACA;;AAEA;AACA,KAAK,gEAAyB;;AAE9B;AACA,KAAK,6DAAsB;;AAE3B;AACA,6BAA6B,iDAAU;AACvC;AACA;;AAEA;AACA,qBAAqB,4BAA4B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL,6CAA6C,MAAM;AACnD,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,4CAA4C,UAAU,KAAK,cAAc;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAU;AAClC,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA,yBAAyB,iDAAU,+BAA+B,2DAAoB;AACtF;AACA;AACA;AACA,0BAA0B,iDAAU,+BAA+B,qDAAc;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA,gCAAgC,iEAA0B;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,iDAAU;AACpC;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uEAAuE,2DAAoB;AAC3F,MAAM,oEAA6B;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,4BAA4B;AACxC,cAAc;AACd;AACA;AACA;AACA,sBAAsB,2DAAoB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC/0BA;AAUwB;;AAExB;AACA;AACA,cAAc,mBAAmB;AACjC,cAAc,SAAS;AACvB,cAAc,UAAU;AACxB;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACO,wCAAwC,oDAAa;AAC5D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,wEAAwE;AACnJ,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAgB;AACnC,mBAAmB,uDAAgB;AACnC;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA,+BAA+B,sDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3MA;AAawB;;AAExB;AACA;AACA;AACO,qCAAqC,oDAAa;AACzD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,4CAAK;AACpC;;AAEA;AACA;AACA,YAAY;AACZ;AACA,2BAA2B,8CAAO;AAClC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,8CAAO;AAC/B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B,0CAA0C,yDAAkB;AAC5F;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,EAAE,sEAA+B;AACjC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,EAAE,sEAA+B;;AAEjC;AACA,wBAAwB,uDAAgB;AACxC,uCAAuC,oDAAa;AACpD;AACA,wCAAwC,oDAAa;AACrD;AACA;AACA,EAAE,sEAA+B;AACjC,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA,eAAe,qDAAc;AAC7B,EAAE,qEAA8B;;AAEhC;AACA,wBAAwB,uDAAgB;AACxC,qBAAqB,uDAAgB;AACrC;AACA;AACA,GAAG,sEAA+B;AAClC,GAAG,sEAA+B;;AAElC;AACA,yBAAyB,uDAAgB;AACzC,kCAAkC,oDAAa;AAC/C;AACA,mCAAmC,oDAAa;AAChD;AACA;AACA,GAAG,sEAA+B;AAClC,GAAG,2DAAoB;;AAEvB,GAAG,2DAAoB;AACvB,GAAG,2DAAoB;AACvB;;AAEA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAuB;AACrD;AACA,gBAAgB,oDAAa;AAC7B,sBAAsB,oDAAa,KAAK,oDAAa;AACrD,mBAAmB,oDAAa,KAAK,oDAAa;AAClD,uBAAuB,oDAAa,KAAK,oDAAa;AACtD,gBAAgB,oDAAa;AAC7B,cAAc,oDAAa;AAC3B,mBAAmB,oDAAa;AAChC,qBAAqB,oDAAa,KAAK,oDAAa;;AAEpD,OAAO,wEAAiC;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA,aAAa,6DAAsB;AACnC,SAAS,uDAAgB;AACzB,GAAG;AACH,EAAE,oDAAa;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,oEAA6B;AAC3D,+CAA+C,4DAAqB;AACpE,6CAA6C,qEAA8B;AAC3E,4CAA4C,qEAA8B;AAC1E,2CAA2C,qEAA8B;AACzE,+BAA+B,4DAAqB;AACpD;;AAEA;AACA,mCAAmC,iEAAiE,IAAI,kFAA2C;AACnJ;;AAEA;AACA,EAAE,mEAA4B,8BAA8B,0DAAmB;;AAE/E;AACA;;AAEA;AACA,EAAE,qEAA8B;AAChC,EAAE,qEAA8B,0CAA0C,yDAAkB;AAC5F,EAAE,qEAA8B;AAChC,EAAE,sEAA+B;AACjC,EAAE,sEAA+B;AACjC,EAAE,wEAAiC;;AAEnC;AACA,wBAAwB,uDAAgB;AACxC,uCAAuC,oDAAa;AACpD;AACA,wCAAwC,oDAAa;AACrD;AACA;AACA,EAAE,sEAA+B;AACjC,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,gCAAgC,cAAc;AAC9C,+BAA+B,cAAc;;AAE7C;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA,4BAA4B;AAC5B,yBAAyB;AACzB,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,GAAG,qEAA8B;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,iEAA0B;AAC9B,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;;AAEA,GAAG,uEAAgC;;AAEnC;AACA;AACA;;AAEA,IAAI,mEAA4B;AAChC,EAAE;;;;;;;;;;;;;;;;;ACxfF;AAewB;;AAExB;AACA;AACA;AACO,6BAA6B,oDAAa;AACjD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,mDAAY;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,2EAAoC;AACtC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,2EAAoC;AACtC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,iCAAiC,gDAAS;AAC1C;AACA;AACA,yDAAyD,OAAO;AAChE,GAAG,8DAAuB;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAgB;AAC5C,uBAAuB,0DAAmB;AAC1C;AACA;AACA;AACA,GAAG,qEAA8B;AACjC,IAAI,qDAAc,OAAO,wDAAiB;AAC1C,GAAG,8DAAuB;AAC1B,GAAG,2DAAoB;AACvB;;AAEA;AACA,EAAE,2EAAoC;;AAEtC;AACA,EAAE,gEAAyB;;AAE3B;AACA,EAAE,2EAAoC;;AAEtC;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAyB;AAC9C,wBAAwB,gEAAyB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,2DAAoB;AAC3C;AACA,2BAA2B,oDAAa,KAAK,kDAAW;AACxD,wBAAwB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACxK,qBAAqB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACrK,oBAAoB,oDAAa;AACjC,mBAAmB,oDAAa;;AAEhC,mBAAmB,oDAAa,KAAK,oDAAa;AAClD,qBAAqB,oDAAa;AAClC,qBAAqB,oDAAa;AAClC,oBAAoB,oDAAa;AACjC,uBAAuB,oDAAa;AACpC,6BAA6B,oDAAa;AAC1C,kCAAkC,oDAAa;AAC/C,6BAA6B,oDAAa;;AAE1C;AACA,2BAA2B,oDAAa;AACxC,+BAA+B,oDAAa,MAAM,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa;AACnJ,2BAA2B,oDAAa;AACxC,qCAAqC,oDAAa;AAClD,kCAAkC,oDAAa,MAAM,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa;;AAEtJ,OAAO,wEAAiC;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA,aAAa,2DAAoB;AACjC,SAAS,uDAAgB;AACzB,GAAG;AACH,EAAE,2EAAoC;AACtC,EAAE,8DAAuB;AACzB;;AAEA,iBAAiB,qEAA8B;AAC/C,KAAK,iCAAiC;AACtC,KAAK,+BAA+B;;AAEpC;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gEAAyB;AAC3B,EAAE,gEAAyB;AAC3B,EAAE,+DAAwB;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAA8B;AAClC,IAAI,qEAA8B;AAClC;AACA;AACA,IAAI,qEAA8B;AAClC,IAAI,qEAA8B;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG,qEAA8B;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iEAA0B;AAC9B,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG,uEAAgC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,mEAA4B;AAChC,EAAE;;;;;;;;;;;;;;;;;AClkBF;AAWwB;;AAExB;AACO,8BAA8B,oDAAa;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,EAAE,2EAAoC;;AAEtC;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wDAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qEAA8B,oBAAoB,iCAAiC,IAAI,2BAA2B;AACnI;;AAEA;AACA,EAAE,mEAA4B;;AAE9B;AACA,kBAAkB,mDAAY;AAC9B,kBAAkB,mDAAY;AAC9B;;AAEA;AACA;AACA;;AAEA,cAAc,uDAAgB;AAC9B,cAAc,yDAAkB;AAChC,qBAAqB,0BAA0B;AAC/C,sBAAsB,kCAAkC;AACxD;AACA,+BAA+B,uDAAgB;AAC/C,+BAA+B,mDAAY;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,sDAAe;AAC9D,+CAA+C,mDAAY;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAsB;AACxB,EAAE,2DAAoB;AACtB,8BAA8B,YAAY;AAC1C,EAAE,gEAAyB;AAC3B,EAAE,gEAAyB;AAC3B,EAAE,+DAAwB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;AACA;;;;;;;;;;;;;;;;;ACnKA;AAWwB;;AAExB;AACA;AACA;AACO,gCAAgC,oDAAa;AACpD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,8CAAO;AACtC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA;AACA,cAAc,uDAAgB;AAC9B;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA,4BAA4B,yDAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAsB;AACxB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA,4BAA4B,yDAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAsB;AACxB;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,WAAW;AACvB;AACA;AACA,4BAA4B,yDAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAsB;AACxB;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA,YAAY,uDAAgB;AAC5B;AACA,4BAA4B,yDAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;AACA,aAAa,uDAAgB;AAC7B;AACA;AACA,kBAAkB,uDAAgB,sBAAsB;;AAExD;AACA;AACA,EAAE,2DAAoB;;AAEtB;AACA,gBAAgB,uDAAgB;AAChC;AACA,eAAe,uDAAgB;AAC/B;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,6DAAsB;AACxB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC,4BAA4B,uDAAgB;AAC5C;AACA;AACA,+BAA+B,2FAAoD;AACnF;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,cAAc,yDAAkB;AAChC;AACA;AACA;AACA,aAAa,uDAAgB;AAC7B;AACA,EAAE,6DAAsB;AACxB,EAAE,2DAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;AClZA;AAqBwB;;AAExB;AACA;AACA;AACO,mCAAmC,oDAAa;AACvD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,8CAAO;;AAEjC;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,8CAAO;;AAEjC;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,8CAAO;;AAElC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,gDAAS,EAAE,uDAAgB,GAAG,mDAAY;;AAExE;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,gDAAS,EAAE,uDAAgB,EAAE,mDAAY;;AAExE;AACA;AACA,YAAY;AACZ;AACA,4BAA4B,wEAAiC;;AAE7D;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qCAAqC,mDAAY;AACjD;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,mDAAY;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,aAAa,UAAU;AACvB;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C,2BAA2B,iDAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA,2CAA2C,UAAU;AACrD,4BAA4B,iDAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAU,oDAAa,EAAE;AACzB;AACA,UAAU,uDAAgB,EAAE;AAC5B;AACA,UAAU,oDAAa,EAAE;AACzB;AACA,UAAU,uDAAgB,EAAE;AAC5B;AACA,UAAU,oDAAa,EAAE;AACzB;AACA,UAAU,uDAAgB,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,iCAAiC,gDAAS;AAC1C;AACA;AACA,yDAAyD,OAAO;AAChE,GAAG,8DAAuB;AAC1B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA,iBAAiB,uDAAgB;AACjC;AACA,GAAG,0DAAmB;AACtB;AACA;AACA,eAAe,yDAAkB;AACjC;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAe;AACvC,GAAG,6DAAsB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAgB;AAC7D;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAmB;AAClD,wCAAwC,oDAAa;AACrD,kBAAkB,oBAAoB;AACtC,GAAG,2EAAoC;AACvC,GAAG,wEAAiC;AACpC;AACA,EAAE,8DAAuB;;AAEzB;AACA;;AAEA;AACA,EAAE,gEAAyB;AAC3B;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA,oBAAoB,wDAAiB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qEAA8B;AAChD,MAAM,iCAAiC;AACvC,MAAM,+BAA+B;AACrC,MAAM,2BAA2B;AACjC;;AAEA;AACA,GAAG,mEAA4B;;AAE/B;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;;AAE7C;AACA,kBAAkB,4BAA4B;AAC9C;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,mDAAY;AAC1E,8DAA8D,sDAAe;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,uDAAgB;AAC/B,eAAe,yDAAkB;AACjC,sBAAsB,oBAAoB;AAC1C,uBAAuB,oBAAoB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,6DAAsB;AACzB,GAAG,2DAAoB;;AAEvB,2BAA2B,kCAAkC;AAC7D,GAAG,gEAAyB;AAC5B,GAAG,gEAAyB;AAC5B,GAAG,gEAAyB;AAC5B,GAAG,+DAAwB;AAC3B;AACA,IAAI,oEAA6B;AACjC;AACA;AACA;AACA;;AAEA,eAAe,uDAAgB;AAC/B,eAAe,yDAAkB;AACjC,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,uDAAgB;AACpC;AACA;AACA;AACA;AACA,IAAI,2DAAoB;;AAExB;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA,MAAM,qEAA8B;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,kCAAkC;AAC9D,IAAI,gEAAyB;AAC7B,IAAI,gEAAyB;AAC7B,IAAI,gEAAyB;AAC7B,IAAI,+DAAwB;AAC5B;AACA,KAAK,oEAA6B;AAClC;AACA;AACA,GAAG,6DAAsB;AACzB,GAAG,2DAAoB;AACvB;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACt1BA;AAKwB;;AAExB;AACA;AACA;AACO,6BAA6B,sDAAe;AACnD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,iDAAU;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC,kDAAW;;AAE3C;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC,+DAAwB;;AAExD;AACA;AACA;AACA;AACA,uBAAuB,8DAAuB,SAAS,WAAW,yDAAkB,aAAa,0DAAmB,EAAE;;AAEtH;AACA;AACA;AACA;AACA,qBAAqB,8DAAuB,SAAS,WAAW,yDAAkB,aAAa,0DAAmB,EAAE;;AAEpH;AACA;AACA;AACA;AACA,sBAAsB,8DAAuB,SAAS,WAAW,yDAAkB,aAAa,0DAAmB,EAAE;;AAErH;AACA;AACA;AACA;AACA,2BAA2B,8DAAuB,6CAA6C,WAAW,yDAAkB,aAAa,0DAAmB,EAAE;;AAE9J;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,0DAAmB;AAC9D;;AAEA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,yDAAkB;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,qCAAqC,8DAAuB;AAC5D,gCAAgC,oDAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,8DAAuB,iDAAiD,WAAW,yDAAkB,aAAa,yDAAkB,EAAE;AAClK;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAoB;AAC3C;AACA;AACA,wCAAwC,4DAAqB;AAC7D,wBAAwB,4DAAqB;;AAE7C;AACA;AACA,iBAAiB,oDAAa;AAC9B;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;AACA,uBAAuB,8DAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA,iCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,SAAS,uDAAgB;AACzB,GAAG;;AAEH;AACA,0BAA0B,iDAAU;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,mCAAmC,uDAAgB;;;;;;;;;;;;;;;;;AChYnD;AAawB;;AAExB;AACA;AACA;AACO,8BAA8B,oDAAa;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,8CAAO;AAC1B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,4CAAK;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,8CAAO;AAC/B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,EAAE,sEAA+B;AACjC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA,EAAE,mEAA4B;AAC9B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,gEAAyB;AAC3B;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,mEAA4B;AAC9B;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAgB;AAChC;AACA;AACA,GAAG,sEAA+B;AAClC,GAAG,2DAAoB;AACvB;;AAEA;AACA;AACA;AACA,IAAI,8EAAuC;AAC3C;AACA;AACA,IAAI,2EAAoC;AACxC;AACA;;AAEA;AACA;AACA,4BAA4B,uDAAgB;AAC5C,uBAAuB,0DAAmB;AAC1C;AACA;AACA;AACA,GAAG,qEAA8B;AACjC,IAAI,qDAAc,OAAO,wDAAiB;AAC1C,GAAG,8DAAuB;AAC1B,GAAG,2DAAoB;AACvB;;AAEA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,mEAA4B,IAAI,iCAAiC,IAAI,2BAA2B;AACtI,GAAG,gEAAyB;AAC5B,GAAG,gEAAyB;AAC5B,GAAG,+DAAwB;;AAE3B;AACA,0CAA0C,2DAAoB;AAC9D;AACA,0BAA0B,oDAAa,KAAK,oDAAa;AACzD,8BAA8B,oDAAa;AAC3C,eAAe,oDAAa,KAAK,oDAAa;AAC9C,uBAAuB,oDAAa;AACpC,iBAAiB,oDAAa,KAAK,oDAAa;;AAEhD,QAAQ,wEAAiC;AACzC,KAAK;AACL;AACA;AACA;AACA;;AAEA,OAAO,qEAA8B;;AAErC;AACA;AACA;AACA;;AAEA,QAAQ,iEAA0B;AAClC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,uEAAgC;;AAEvC;AACA;AACA;AACA;;AAEA,QAAQ,mEAA4B;AACpC,MAAM;AACN,UAAU,uDAAgB;AAC1B,IAAI;AACJ,GAAG,2EAAoC;AACvC;AACA;;AAEA;AACA;AACA;AACA,EAAE,mEAA4B;AAC9B,EAAE,gEAAyB;AAC3B,EAAE,wEAAiC;AACnC,EAAE,qEAA8B;AAChC,EAAE,sEAA+B;AACjC,EAAE,sEAA+B;;AAEjC;AACA,iBAAiB,kFAA2C;AAC5D;AACA,EAAE,mEAA4B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,oEAA6B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,oEAA6B;AAChC,GAAG,oEAA6B;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA,iBAAiB,uDAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sEAA+B;AACnC,IAAI,2DAAoB;;AAExB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;;;;;ACveA;AAcwB;;AAExB,qCAAqC,iDAAU;;AAE/C;AACA;AACA;AACA;AACA;AACA,mBAAmB,4CAAK;AACxB,sBAAsB,8CAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,iCAAiC,oDAAa;AACrD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAgB;AACrC;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,qEAA8B;AAChC,EAAE,2DAAoB;;AAEtB;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,2DAAoB;AAC3C;AACA;AACA;AACA,aAAa,6DAAsB;AACnC;AACA;AACA,0BAA0B,oDAAa;;AAEvC,OAAO,wEAAiC;AACxC;AACA,GAAG;AACH,EAAE,2EAAoC;AACtC;;AAEA;AACA,8BAA8B,2DAAoB;AAClD,+CAA+C,4DAAqB;AACpE,4CAA4C,4DAAqB;AACjE,+BAA+B,4DAAqB;;AAEpD;AACA,4BAA4B,mDAAY;AACxC,EAAE,gEAAyB;AAC3B,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA,EAAE,gEAAyB;AAC3B,EAAE,gEAAyB;AAC3B,EAAE,+DAAwB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6CAAM;AAC5B;AACA,cAAc,QAAQ;AACtB;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,GAAG,qEAA8B;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,iEAA0B;AAC9B,EAAE;;AAEF;AACA;;AAEA;;AAEA,GAAG,uEAAgC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA,IAAI,mEAA4B;AAChC,EAAE;;;;;;;;;;;;;;;;;ACvQF;AAgBwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,8CAAO;;AAE7B;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,8CAAO;AAC7B;AACA;;AAEA;AACA;AACA;AACO,6BAA6B,oDAAa;AACjD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,4CAAK;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,gDAAS;;AAExC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,sCAAsC,gDAAS;;AAE/C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE,wEAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,GAAG,mEAA4B,2BAA2B,0DAAmB;AAC7E;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA,sBAAsB,8DAAuB;AAC7C,yCAAyC,uEAAgC;AACzE,6CAA6C,uEAAgC;AAC7E,6CAA6C,uEAAgC;AAC7E,qCAAqC,uEAAgC;AACrE,sCAAsC,uEAAgC;AACtE,2CAA2C,uEAAgC;;AAE3E;AACA,yBAAyB,4DAAqB;AAC9C;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,qEAA8B;AACtD,KAAK,iCAAiC;AACtC,KAAK,qCAAqC;AAC1C,KAAK,qCAAqC;AAC1C,KAAK,6BAA6B;AAClC,KAAK,8BAA8B;AACnC,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kFAA2C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAiB;AACvC;AACA,EAAE,qEAA8B;;AAEhC;AACA;AACA,oBAAoB,uDAAgB;AACpC,wBAAwB,qDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sEAA+B;AACjC,EAAE,2DAAoB;;AAEtB;AACA;AACA;AACA;AACA,GAAG,gEAAyB;;AAE5B;AACA;AACA,IAAI,mEAA4B;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAiB;;AAE7C;AACA;;AAEA;AACA;AACA,GAAG,4DAAqB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,wDAAiB;AACvC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,0DAAmB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,sKAAsK;AACtK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,sKAAsK;AACtK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAqB;AACvB,EAAE,8DAAuB;;AAEzB;;AAEA,+BAA+B,YAAY;AAC3C,4BAA4B,kCAAkC;AAC9D,2BAA2B,cAAc;AACzC,0FAA0F,UAAU;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,4DAAqB;AACvB;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yDAAkB;AAC3C,6BAA6B,SAAS;AACtC;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA,sBAAsB,8DAAuB;AAC7C,6CAA6C,uEAAgC;AAC7E,6CAA6C,uEAAgC;AAC7E,6CAA6C,uEAAgC;AAC7E,qCAAqC,uEAAgC;AACrE,sCAAsC,uEAAgC;AACtE,2CAA2C,uEAAgC;;AAE3E;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAqB;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mEAAmE,uDAAgB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAgB;AAClD,yBAAyB,uDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAW;AAC9B,mBAAmB,mDAAW;AAC9B;AACA;AACA;AACA;AACA,0DAA0D,mDAAY;AACtE,0DAA0D,mDAAY;AACtE;AACA;AACA,iBAAiB,mDAAW;AAC5B,iBAAiB,mDAAW;AAC5B;AACA;AACA,uCAAuC,0DAAmB;AAC1D;AACA;AACA;AACA,GAAG,8DAAuB;AAC1B;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACvkCA;AASwB;;AAExB;AACA;AACA;AACO,8BAA8B,qDAAc;AACnD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,8CAAO;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,gDAAS;AAC3C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC,8CAAO;AACvC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,8CAAO;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oCAAoC,gDAAS;AAC7C;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,8CAAO;AACzC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,8DAAuB;AACzB;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,uDAAgB;;AAErC;AACA,4BAA4B,uDAAgB;AAC5C,0BAA0B,0DAAmB;AAC7C,uBAAuB,0DAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0DAAmB;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,0DAAmB;AACvC;AACA,EAAE,2DAAoB;AACtB,EAAE,8DAAuB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,0DAAmB;AACjD,gCAAgC,uDAAgB;AAChD,kCAAkC,uDAAgB;AAClD;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAuB;AAC3B,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,8DAAuB;AACzB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,WAAW;AACvB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAmB;AACjD;AACA;AACA,GAAG,8DAAuB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mDAAY;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,6CAA6C,uDAAgB;;;;;;;;;;;;;;;;;ACthB7D;AASwB;;AAExB,qCAAqC,iDAAU;;AAE/C;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,8DAA8D,eAAe;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,8CAAO;;AAE7B;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,eAAe;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,yBAAyB,iDAAU;AACnC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,+CAAQ;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uEAAuE,eAAe;AACtF;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,+CAAQ;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6CAAM;AAC5B;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,sEAAsE,eAAe;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,+CAAQ;AAC9B;AACA;;AAEA,2DAA2D,eAAe;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6DAA6D,eAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,8EAA8E,eAAe;AAC7F;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6CAAM;AAC5B;AACA,kCAAkC,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA,qCAAqC,wCAAwC;AAC7E;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2FAA2F,eAAe;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,+CAAQ;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,gEAAgE,eAAe;AAC/E;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6CAAM;AAC5B;AACA,+BAA+B,8BAA8B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACO,iCAAiC,qDAAc;AACtD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,6BAA6B,+CAAQ;AACrC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAiB;AACxC;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAqB;AACvB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,0CAA0C,+CAAQ;AAClD;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,gDAAgD;AAC/E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,mCAAmC;AACrF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,8BAA8B,gDAAgD;AAC9E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,mDAAmD;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,6DAA6D;AACvG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7yBA;AAOwB;;AAExB;AACA;AACA;AACO,6BAA6B,iDAAU;AAC9C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,uBAAuB,+CAAQ;AAC/B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,4DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzMA;AAKwB;;AAExB;AACA;AACA;AACO,iCAAiC,qDAAc;AACtD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,sBAAsB,+CAAQ;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzJA;AAWwB;;AAExB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC,qBAAqB,mDAAW;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAY;AACjC;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAY;AAClC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC,qBAAqB,mDAAW;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC,6BAA6B,8CAAO;AACpC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,yBAAyB,iDAAU;AACnC,6BAA6B,8CAAO;AACpC;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,uBAAuB,0DAAmB;AAC1C,uBAAuB,0DAAmB;AAC1C;AACA;AACA;AACA;AACA,EAAE,8DAAuB;AACzB,EAAE,8DAAuB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA,uBAAuB,uDAAgB;AACvC,mBAAmB,0DAAmB;AACtC;AACA;AACA,EAAE,2DAAoB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAuB;AACzB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,wBAAwB,sDAAc;AACtC,4BAA4B,mDAAW;AACvC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,iDAAU;AACnC,6BAA6B,8CAAO;AACpC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,yBAAyB,iDAAU;AACnC;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,YAAY,wDAAiB;AAC7B;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,4BAA4B,mDAAY;AACxC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,wBAAwB,sDAAc;AACtC,4BAA4B,mDAAW;AACvC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,sDAAe;AAC/B;;AAEA,sBAAsB,8CAAO;AAC7B,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC,YAAY,wDAAiB;AAC7B;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,wBAAwB;AACpC,YAAY,SAAS;AACrB;AACA;AACA,sBAAsB,uDAAgB;AACtC,sBAAsB,uDAAgB;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC,qBAAqB,mDAAW;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,uBAAuB,+CAAQ;;AAE/B;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6CAAM;AAC5B;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,+BAA+B,qDAAc;AACpD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,+CAAQ;AACnC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAQ;AACpC;AACA,yBAAyB,+CAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAiB;AACzC;AACA;AACA;AACA;AACA,0BAA0B,+CAAQ;AAClC;AACA;AACA;AACA;AACA,EAAE,4DAAqB;AACvB;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC,2BAA2B,UAAU;AACrC,cAAc,wDAAiB;AAC/B,mCAAmC,qDAAc;AACjD,oCAAoC,qDAAc;AAClD,4BAA4B,qDAAc;AAC1C,wCAAwC,qDAAc;AACtD,yCAAyC,0DAAmB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAiB;AAC/B,WAAW,qDAAc,YAAY,UAAU,oDAAoD,UAAU;AAC7G;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAiB;AAC/B,WAAW,qDAAc,YAAY,UAAU,qDAAqD,UAAU;AAC9G;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAiB;AAC/B,yCAAyC,UAAU,wDAAwD,UAAU;AACrH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iBAAiB,mDAAW;AAC5B;AACA;AACA,iBAAiB,gCAAgC;AACjD,WAAW;AACX;AACA;AACA;AACA,mCAAmC;AACnC,kBAAkB,mDAAW;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iBAAiB,mDAAW;AAC5B;AACA;AACA,sBAAsB,gCAAgC;AACtD,WAAW;AACX;AACA;AACA;AACA,mCAAmC;AACnC,kBAAkB,mDAAW;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iCAAiC;AACjC,oBAAoB,sDAAc;AAClC;AACA;AACA,iBAAiB,sBAAsB;AACvC,WAAW;AACX;AACA;AACA;AACA,mCAAmC;AACnC,qBAAqB,sDAAc;AACnC;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,mDAAW;AAC3C,gCAAgC,mDAAW;AAC3C,mCAAmC,sDAAc;AACjD,uCAAuC,mDAAW;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,6CAAM;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,wDAAiB;AAC1C;AACA;AACA;AACA;AACA,GAAG,4DAAqB;AACxB,GAAG;AACH;AACA,6CAA6C,IAAI,aAAa,cAAc;AAC5E;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AC15CA;AAMwB;;AAExB;AACO,8BAA8B,qDAAc;AACnD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,yBAAyB,8CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA,4BAA4B,iDAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjJA;AAMwB;;AAExB;AACA;AACA;AACO,sCAAsC,qDAAc;AAC3D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oCAAoC,iDAAU;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAmB;AACvC;AACA;AACA,oBAAoB,uDAAgB;AACpC,uBAAuB,0DAAmB;AAC1C;AACA;AACA;AACA;AACA,GAAG,8DAAuB;AAC1B,GAAG,2DAAoB;AACvB,GAAG,8DAAuB;AAC1B;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjEA;AASwB;;AAExB;AACA;AACA;AACO,gCAAgC,qDAAc;AACrD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC,8CAAO;;AAEvC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,8CAAO;;AAElC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,0DAAmB;AACtD;AACA;AACA,oCAAoC,8CAAO;AAC3C;;AAEA;AACA,eAAe,uDAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;;AAEtB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA,oBAAoB,uDAAgB;AACpC;AACA,eAAe,yDAAkB;AACjC;AACA;AACA,GAAG,6DAAsB;AACzB,GAAG,2DAAoB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uDAAgB;AACtC,sBAAsB,uDAAgB;AACtC;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;ACnQA;AASwB;;AAExB;AACA,aAAa,QAAQ;AACrB,cAAc,0EAA0E;AACxF;;AAEA;AACA;AACA;AACO,oCAAoC,qDAAc;AACzD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,iCAAiC,mDAAY;;AAE7C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,iBAAiB,8CAAO;;AAExB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC,oBAAoB,uDAAgB;AACpC,kCAAkC,0DAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAgB;AACpC,6BAA6B,0DAAmB;AAChD;AACA;AACA,GAAG,8DAAuB;AAC1B;AACA;AACA,GAAG,2DAAoB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mDAAW;AAC5B;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,8DAAuB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC,oBAAoB,uDAAgB;AACpC,+DAA+D,mDAAY;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAgB;AACpC;AACA;AACA;AACA,GAAG,2DAAoB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;ACjNA;AASwB;;AAExB;AACA;AACA;AACO,iCAAiC,qDAAc;AACtD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO,+BAA+B;AAClD;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO,kCAAkC;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,uBAAuB,+CAAQ;;AAE/B;AACA,wBAAwB,8CAAO;AAC/B,wBAAwB,8CAAO;AAC/B,2BAA2B,iDAAU;AACrC,2BAA2B,iDAAU;AACrC,0BAA0B,8CAAO;AACjC,0BAA0B,8CAAO;AACjC,6BAA6B,iDAAU;AACvC,uBAAuB,8CAAO;AAC9B,uBAAuB,8CAAO;AAC9B,oBAAoB,8CAAO;AAC3B,oBAAoB,8CAAO;AAC3B;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA;AACA,4DAA4D,gDAAS;AACrE;AACA,kEAAkE,gDAAS;AAC3E;AACA,GAAG;AACH,EAAE,+CAAQ;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,gBAAgB,kDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,kEAAkE,gDAAS;AAC3E;AACA,GAAG;AACH,EAAE,+CAAQ;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,gBAAgB,kDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB,oDAAa;AAC7B,gDAAgD;AAChD,sBAAsB;AACtB,kDAAkD;AAClD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB,oDAAa;AAC7B,gDAAgD;AAChD,sBAAsB;AACtB,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB,oDAAa;AAC7B,mDAAmD;AACnD,sBAAsB;AACtB,qDAAqD;AACrD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAmB;AAC3C;AACA;AACA,IAAI,8DAAuB;AAC3B;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA;AACA;AACA;AACA,oCAAoC,uDAAgB;AACpD;AACA;AACA,sEAAsE,mDAAY;AAClF;AACA,IAAI,2DAAoB;AACxB;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,aAAa,oCAAoC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAc;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAiB;AACrC;AACA;AACA,wBAAwB,+CAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,YAAY,uDAAuD;AACnE,aAAa;AACb;;AAEA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;;;;;AChjBA;AAQwB;;AAExB;AACA;AACA;AACO,6BAA6B,qDAAc;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,0DAAmB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,qDAAc;AAC9C,kCAAkC,qDAAc;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uDAAgB;AAClC,wEAAwE;AACxE;AACA;AACA,6EAA6E;AAC7E;AACA;AACA,6EAA6E;AAC7E;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,0DAAmB;AACzC;;AAEA;AACA,mBAAmB,0DAAmB;AACtC,gBAAgB,uDAAgB;AAChC,gBAAgB,uDAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;;AAEtB;AACA,oBAAoB,uDAAgB;AACpC;;AAEA;AACA;AACA;AACA,EAAE,2DAAoB;;AAEtB;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,8DAAuB;;AAEzB;AACA;AACA,EAAE,8DAAuB;AACzB;AACA;;;;;;;;;;;;;;;;;ACnSA;AAQwB;;AAExB;AACA;AACA;AACO,qCAAqC,qDAAc;AAC1D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAoB;AACvD;AACA;;AAEA;AACA,gCAAgC,wDAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,qBAAqB;AACnC,cAAc,uBAAuB;AACrC;;;;;;;;;;;;;;;;;ACvHA;AAWwB;;AAExB;AACA;AACA;AACO,8BAA8B,qDAAc;AACnD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,6BAA6B,+CAAQ;AACrC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,+CAAQ;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,0DAAmB;AACtD;AACA;AACA,oCAAoC,8CAAO;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,qDAAc;AAC/C,mCAAmC,qDAAc;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uDAAgB;AAClC;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA,6EAA6E;AAC7E;AACA;AACA,6EAA6E;AAC7E;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,uDAAgB;AACpC;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA,iFAAiF;AACjF;AACA;AACA,iFAAiF;AACjF;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,0DAAmB;AACvC;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;;AAEtB;AACA,mBAAmB,uDAAgB;AACnC;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,sDAAe;AAC/B;;AAEA;AACA,cAAc,yDAAkB;AAChC,EAAE,qEAA8B;AAChC;AACA;;AAEA;AACA,yBAAyB,uDAAgB;AACzC,sBAAsB,uDAAgB;AACtC;AACA,gBAAgB,uDAAgB;AAChC,aAAa,uDAAgB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,qEAA8B;AAChC,EAAE,6DAAsB;AACxB;AACA,EAAE,8DAAuB;AACzB;AACA,EAAE,2DAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;ACpgBA;AAUwB;;AAEjB,sCAAsC,qDAAc;AAC3D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qCAAqC,8CAAO;;AAE5C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+CAAQ;AACX;AACA;AACA,iBAAiB,oDAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+CAAQ;AACX;AACA;AACA,iBAAiB,oDAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+CAAQ;AACX;AACA;AACA,iBAAiB,oDAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,+CAAQ;;AAEX;AACA;AACA;AACA;AACA,GAAG,+CAAQ;;AAEX;AACA;AACA;AACA;AACA,GAAG,+CAAQ;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,oDAAa;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,uDAAgB;AACtC,sBAAsB,uDAAgB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,SAAS,qDAAc;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,uDAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,uDAAgB;AAClC;;AAEA;AACA,aAAa,uDAAgB;AAC7B;;AAEA;AACA;AACA,6BAA6B,oDAAa;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAgB;AACvC,uBAAuB,uDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAoB;AACxB,IAAI,2DAAoB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,oDAAa;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,0DAAmB;AAC5C;AACA;AACA;AACA,EAAE,8DAAuB;AACzB,EAAE,2DAAoB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,8CAAO;;AAE7B;AACA;AACA,YAAY;AACZ;AACA,wBAAwB,gDAAS;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,mBAAmB,gDAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,gBAAgB,8CAAO;AACvB;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpgBA;AASwB;;AAExB;AACA;AACA;AACO,wCAAwC,qDAAc;AAC7D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,uBAAuB,+CAAQ;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B;AACA;AACA,EAAE,+CAAQ,GAAG,iCAAiC;AAC9C;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB,oDAAa;AAC7B;AACA;AACA,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC;AACA;AACA,YAAY,wDAAiB;AAC7B;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB,oDAAa;AAC7B;AACA;AACA,oBAAoB,uDAAgB;AACpC,oBAAoB,uDAAgB;AACpC;AACA;AACA,YAAY,wDAAiB;AAC7B;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,gBAAgB,sDAAe;AAC/B;AACA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,aAAa;AACb;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,0BAA0B,8CAAO;;AAEjC;AACA;AACA,UAAU;AACV;AACA,0BAA0B,8CAAO;;;;;;;;;;;;;;;;;AC3OjC;AAQwB;;AAExB;AACA;AACA;AACO,6BAA6B,qDAAc;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA,6BAA6B,8CAAO;AACpC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAgB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,wDAAiB;AACvC,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAgB;AAC7C;AACA;AACA;AACA,MAAM,8FAAuD;AAC7D;AACA;AACA,MAAM,2DAAoB;AAC1B;AACA;AACA;AACA,MAAM,8FAAuD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,4DAAqB;AAC1B,KAAK,2DAAoB;AACzB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvKA;AAOwB;;AAExB;AACA;AACA;AACO,6BAA6B,qDAAc;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAmB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sDAAe;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,qDAAc;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,0DAAmB;AAC7C,oBAAoB,0DAAmB;AACvC,6BAA6B,oDAAa;AAC1C;AACA;AACA,GAAG,8DAAuB;AAC1B,GAAG,8DAAuB;AAC1B;AACA;AACA;;;;;;;;;;;;;;;;;AC3IA;AAOwB;;AAExB;AACA;AACA;AACO,kDAAkD,qDAAc;AACvE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,gDAAS;;AAEjC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAmB;AACjD;AACA;AACA,IAAI,8DAAuB;AAC3B;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAmB;AACjD;AACA;AACA,IAAI,8DAAuB;AAC3B;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAmB;AACjD;AACA;AACA,IAAI,8DAAuB;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAgB;AACrC;AACA;AACA,IAAI,2DAAoB;AACxB;AACA;AACA,wBAAwB,0DAAmB;AAC3C;AACA;AACA,IAAI,8DAAuB;AAC3B;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5LA;AAMwB;;AAExB;AACA;AACA;AACO,+BAA+B,qDAAc;AACpD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,uBAAuB,iDAAU;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAgB;AACvC;AACA;AACA,GAAG,2DAAoB;AACvB;AACA;AACA,0BAA0B,0DAAmB;AAC7C;AACA;AACA,GAAG,8DAAuB;AAC1B;AACA;AACA;;;;;;;;;;;;;;;;;ACxKA;AAKwB;;AAExB;AACA;AACA;AACO,8BAA8B,qDAAc;AACnD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uDAAgB;AACtC;AACA;AACA,EAAE,2DAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;AC5EA;AAOwB;;AAExB;AACO,+BAA+B,qDAAc;AACpD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAgB;AAC5C;;AAEA;AACA;AACA;AACA,8BAA8B,uDAAgB;AAC9C;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,2DAAoB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,2DAAoB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpGA;AAKwB;;AAExB;AACA;AACA;AACA;AACO,kCAAkC,qDAAc;AACvD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,gDAAS;AAC9B;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5DA;AASwB;;AAExB;AACA;AACA;AACO,6BAA6B,qDAAc;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,8CAAO;AAC1B;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0DAAmB;AACvC;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,0DAAmB;AAC5C;AACA;AACA;AACA,KAAK,8DAAuB;AAC5B;;AAEA;AACA;AACA;AACA,GAAG,8DAAuB;AAC1B;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAmB;AACvC;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,0DAAmB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAuB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAmB;AACtD;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sDAAe;AAChC;AACA;AACA;;AAEA;AACA,mBAAmB,0DAAmB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,uDAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,2DAAoB;AACvB,GAAG,8DAAuB;;AAE1B;AACA;AACA,wBAAwB,uDAAgB;AACxC;AACA;AACA,IAAI,2DAAoB;AACxB;AACA;AACA,EAAE,8DAAuB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,mCAAmC,uDAAgB;;;;;;;;;;;;;;;;;AC3bnD;AAIwB;;AAExB;AACA;AACA;AACO,4BAA4B,qDAAc;AACjD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3DA;AASwB;;AAExB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACO,mCAAmC,qDAAc;AACxD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,8CAAO;AACrC;;AAEA;AACA,YAAY;AACZ;AACA;AACA,iCAAiC,iDAAU;AAC3C;;AAEA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,gDAAS;;AAErC;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,iDAAiD,8BAA8B;AAC/E;AACA,YAAY;AACZ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,wDAAiB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA,mBAAmB,uDAAgB;AACnC,sBAAsB,0DAAmB;AACzC;AACA;;AAEA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,8DAAuB;AACzB;AACA;;;;;;;;;;;;;;;;;ACzSA;AAMwB;;AAExB;AACA;AACA;AACO,kCAAkC,qDAAc;AACvD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,8CAAO;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,sBAAsB,uDAAgB;AACtC;AACA,uBAAuB,0DAAmB;AAC1C;AACA;AACA,GAAG,8DAAuB;AAC1B;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uDAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB;AACA;;;;;;;;;;;;;;;;;ACzGA;AASwB;;AAExB;AACA;AACO,6BAA6B,qDAAc;AAClD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,+CAAQ;AACpC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,sDAAe,CAAC,qDAAc;AAC1D;AACA;AACA;;AAEA;AACA;AACA,cAAc,yDAAkB;AAChC;AACA,+BAA+B,mBAAmB;AAClD;AACA,6BAA6B,uDAAgB;AAC7C;AACA;AACA;AACA,IAAI,2DAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,uDAAgB;AACtC;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,6DAAsB;AACxB;AACA;;;;;;;;;;;;;;;;;AC/NA;AAgBqB;;AAErB;AACA;AACA,aAAa;AACb;AACO,qBAAqB,qDAAc;AAC1C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,8CAAO;;AAEzC;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,8CAAO;;AAEzC;AACA;AACA,YAAY;AACZ;AACA;AACA,iCAAiC,8CAAO;;AAExC;AACA;AACA,YAAY;AACZ;AACA;AACA,uCAAuC,8CAAO;;AAE9C;AACA;AACA,YAAY;AACZ;AACA;AACA,sCAAsC,8CAAO;;AAE7C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,yBAAyB,iDAAU,OAAO,uDAAgB;;AAE1D;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,iDAAU,OAAO,wDAAiB;;AAE5D;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,+CAAQ;AACvC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,+CAAQ;AAC1C;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,uDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA,GAAG,2DAAoB;AACvB;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,uDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA,GAAG,2DAAoB;AACvB;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAiB;AACpC,EAAE,8FAAuD;AACzD;AACA,EAAE,4DAAqB;AACvB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,gBAAgB,oDAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uDAAgB;AACnC,6CAA6C,mDAAY;AACzD;AACA;AACA;AACA,EAAE,2DAAoB;;AAEtB;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,OAAO;AAClE;AACA;;AAEA;AACA;AACA,gEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA,mEAAmE,OAAO;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;;AAEA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,EAAE,+CAAQ;AACV;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gEAAgE;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gEAAgE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yDAAyD;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yDAAyD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,eAAe;AAC/B,YAAY,8DAA8D;AAC1E,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B,YAAY,8DAA8D;AAC1E,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,gBAAgB;AAChC,YAAY,8DAA8D;AAC1E,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B,YAAY,8DAA8D;AAC1E,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mDAAW;AACpB;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mDAAW;AACpB;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mDAAW;AACpB;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,8CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,8CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,8CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,2DAAoB;;AAEvB;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,WAAW;AACX;AACA,sBAAsB,8CAAO;AAC7B;;AAEA;AACA;AACA,WAAW;AACX;AACA,yBAAyB,iDAAU;AACnC;;AAEA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,8CAAO;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClvDA;AAIqB;;AAErB;AACA;AACA,aAAa;AACb;AACO,yBAAyB,qDAAc;AAC9C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3FA;AAcqB;;AAErB;AACA;AACA,aAAa;AACb;AACO,oBAAoB,qDAAc;AACzC;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,uBAAuB,iDAAU,2BAA2B,6CAAM;;AAElE;AACA;AACA,YAAY;AACZ;AACA;AACA,wCAAwC,sDAAe;;AAEvD;AACA;AACA,YAAY;AACZ;AACA;AACA,gCAAgC,4CAAK;AACrC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,2BAA2B,kDAAW;;AAEtC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA,uCAAuC,YAAY,kBAAkB,WAAW;AAChF;AACA;AACA;AACA,iCAAiC,oCAAoC,OAAO,mDAAY;AACxF;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY,kBAAkB,WAAW;AAC9E;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9WA;AACuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,8BAA8B;AAC3C;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,mCAAmC,0DAA2B;AAC9D,+BAA+B,sDAAuB;AACtD,6BAA6B,oDAAqB;AAClD,kCAAkC,yDAA0B;AAC5D,wCAAwC,+DAAgC;AACxE,4BAA4B,mDAAoB;AAChD,kCAAkC,qEAAsC;AACxE,8BAA8B,qDAAsB;AACpD,8BAA8B,qDAAsB;AACpD,oCAAoC,2DAA4B;AAChE,8BAA8B,qDAAsB;AACpD,yCAAyC,gEAAiC;AAC1E,sCAAsC,6DAA8B;AACpE,8BAA8B,qDAAsB;AACpD,+BAA+B,sDAAuB;AACtD,iCAAiC,wDAAyB;AAC1D,oCAAoC,2DAA4B;AAChE,8BAA8B,qDAAsB;AACpD,+BAA+B,sDAAuB;AACtD,kCAAkC,yDAA0B;AAC5D,8BAA8B,qDAAsB;;AAEpD;AACA,aAAa,+BAA+B;AAC5C;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,+BAA+B,sDAAuB;AACtD,kCAAkC,yDAA0B;AAC5D,kCAAkC,yDAA0B;AAC5D,gCAAgC,uDAAwB;AACxD,+BAA+B,sDAAuB;AACtD,uCAAuC,8DAA+B;AACtE,iCAAiC,wDAAyB;AAC1D,qCAAqC,4DAA6B;AAClE,kCAAkC,yDAA0B;AAC5D,8BAA8B,qDAAsB;AACpD,sCAAsC,6DAA8B;AACpE,+BAA+B,sDAAuB;AACtD,uCAAuC,8DAA+B;AACtE,yCAAyC,gEAAiC;AAC1E,8BAA8B,qDAAsB;AACpD,8BAA8B,qDAAsB;AACpD,gCAAgC,uDAAwB;AACxD,mDAAmD,0EAA2C;AAC9F,+BAA+B,sDAAuB;AACtD,gCAAgC,uDAAwB;AACxD,mCAAmC,0DAA2B;AAC9D,8BAA8B,qDAAsB;AACpD,6BAA6B,oDAAqB;AAClD,oCAAoC,2DAA4B;AAChE,mCAAmC,0DAA2B;AAC9D,8BAA8B,qDAAsB;;AAEnC;;;;;;;;;;;;;;;;;AC9EiC;;AAE3C;AACP;AACA;AACA;;AAEA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,sEAA8B;;AAElC;AACA;;AAEA,KAAK,kEAA0B;AAC/B;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK,wEAAgC;;AAErC;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChDkD;;AAE3C;AACP;AACA;AACA;;AAEA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,sEAA8B;;AAEnC;AACA;;AAEA,MAAM,kEAA0B;AAChC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK,wEAAgC;AACrC;AACA;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrDkD;;AAE3C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,sEAA8B;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,kEAA0B;AAChC,IAAI;AACJ,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,wEAAgC;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,oEAA4B;AAClC,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;AC3GkD;;AAE3C;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK,sEAA8B;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,kEAA0B;AAChC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK,wEAAgC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1I+B;;AAExB;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,0CAAa;AAChC,oBAAoB,0CAAa;AACjC,mBAAmB,0CAAa;AAChC;AACA;;;;;;;;;;;;;;;;;AChEkD;;AAE3C;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,sEAA8B;;AAEnC;;AAEA;AACA;AACA;;AAEA,MAAM,kEAA0B;AAChC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK,wEAAgC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpGkD;;AAE3C;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,KAAK,sEAA8B;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,kEAA0B;AAChC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,KAAK,wEAAgC;;AAErC;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnEkD;;AAE3C;AACP;AACA;AACA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,KAAK,sEAA8B;;AAEnC;AACA;AACA;AACA;AACA;;AAEA,MAAM,kEAA0B;AAChC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK,wEAAgC;;AAErC;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9DkD;;AAE3C;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,oEAA4B;AACjC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK,sEAA8B;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,kEAA0B;AAChC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK,wEAAgC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAM,oEAA4B;AAClC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1JA;AAKoB;;AAEpB;AACA;AACA;AACA,oFAAoF,oBAAoB;AACxG;AACO,4BAA4B,mDAAY;AAC/C;AACA;AACA,YAAY,YAAY;AACxB,YAAY,qBAAqB;AACjC;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,0DAAmB;;AAEtD;AACA;AACA;;AAEA;AACA,8CAA8C,4CAAK;AACnD,8CAA8C,4CAAK;AACnD,8CAA8C,4CAAK;AACnD,6CAA6C,4CAAK;AAClD,6CAA6C,4CAAK;;AAElD;AACA,EAAE,6EAAsC;AACxC;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA,0BAA0B,wDAAiB;AAC3C;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,uCAAuC,IAAI,IAAI,QAAQ;AACvD,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,iCAAiC;AAC7C,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,wDAAiB;AAC5C;AACA;AACA;AACA;AACA,eAAe,qEAA8B;AAC7C,eAAe,yDAAkB;AACjC;AACA,iBAAiB,kEAA2B;AAC5C;;AAEA,6BAA6B,2DAAoB;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,iCAAiC;AAC7C,YAAY,qEAAqE;AACjF,YAAY,0BAA0B;AACtC,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yDAAkB;AACpC,qBAAqB,uDAAgB;AACrC;AACA;;AAEA;AACA,2EAA2E,mBAAmB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yDAAkB;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0DAAmB;AAChC;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5WA;AAQoB;;AAEpB;AACA;AACA;AACA,oFAAoF,oBAAoB;AACxG;AACO,sCAAsC,oDAAa;AAC1D;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,uDAAgB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,iCAAiC;AAC7C,YAAY,qEAAqE;AACjF,YAAY,0BAA0B;AACtC,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mFAA4C;AACnF;AACA;AACA;AACA;AACA,gCAAgC;AAChC,yBAAyB,yDAAkB;AAC3C;AACA;AACA;AACA,wCAAwC;AACxC;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACrGA;AAMqB;;AAErB;AACO,kBAAkB,gDAAS;AAClC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,gBAAgB,yDAAkB,yBAAyB,yDAAkB;AAC7E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,WAAW;AACtB,kBAAkB,2CAAI;;;;;;;;;;;;;;;;;ACtJtB;AAGqB;;AAErB;AACA;AACA,cAAc,qBAAqB;AACnC,cAAc,qBAAqB;AACnC;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACO;AACP;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,4DAA4D;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxFA;AAIqB;;AAErB;AACA;AACA;AACA,aAAa;AACb;AACO,oBAAoB,mDAAY;AACvC;AACA;AACA,YAAY,uBAAuB;AACnC,YAAY,qBAAqB;AACjC;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB,2BAA2B;AACzD;AACA;AACA,4BAA4B,8CAAO;;AAEnC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1GA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA,aAAa,4EAA4E;AACzF;;AAEA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACO;AACP;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,8DAA8D;AAC1E;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;AACzB,YAAY,8CAA8C;AAC1D,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,aAAa,KAAK,KAAK,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;AACzB,YAAY,8CAA8C;AAC1D,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK,KAAK,cAAc;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,4CAA4C;AACxD,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3cA;AAKqB;;AAErB;AACO,oBAAoB,gDAAS;AACpC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,qDAAc;AAC1B,YAAY,qDAAc;AAC1B,YAAY,qDAAc;AAC1B,YAAY,qDAAc;AAC1B;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;AAEtB;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC/SA;AAMqB;;AAErB;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACO,2BAA2B,8CAAO;AACzC;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChJA;AAMqB;;AAErB;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACO,4BAA4B,8CAAO;AAC1C;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChJA;AAGqB;;AAEd;AACP;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,aAAa;AACzB;AACA;AACA,aAAa,WAAW;AACxB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAa,kBAAkB,uDAAgB;AACpE;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA,0BAA0B,oDAAa,kBAAkB,uDAAgB;AACzE;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA,yBAAyB,uDAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,EAAE,oDAAa,EAAE,oDAAa,EAAE,oDAAa;AAC7C,EAAE,uDAAgB,EAAE,oDAAa,EAAE,oDAAa;AAChD,EAAE,uDAAgB,EAAE,oDAAa,EAAE,uDAAgB;AACnD,EAAE,oDAAa,EAAE,oDAAa,EAAE,uDAAgB;AAChD,EAAE,oDAAa,EAAE,uDAAgB,EAAE,oDAAa;AAChD,EAAE,oDAAa,EAAE,oDAAa,EAAE,uDAAgB;AAChD;;;;;;;;;;;;;;;;AC7EA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe,IAAI,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/LA;AAMqB;;AAErB;AACA;AACA,aAAa;AACb;AACO,wBAAwB,8CAAO;AACtC;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzBA;AAGqB;;AAErB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO,sBAAsB,mDAAY;AACzC;AACA;AACA,YAAY,4CAA4C;AACxD;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7JA;AAGqB;;AAErB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO,sBAAsB,mDAAY;AACzC;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnHA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;;;;;;;;;;;;;;;;AClEA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7CA;AAKqB;;AAErB;AACA;AACO;AACP;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,WAAW;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5EA;AAIqB;;AAErB;AACO,uBAAuB,gDAAS;AACvC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;AAEtB;AACA;AACA,UAAU;AACV;AACA;AACA;;;;;;;;;;;;;;;;;AChMA;AAKqB;;AAErB;AACO,wBAAwB,gDAAS;AACxC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,gBAAgB,yDAAkB,qBAAqB,yDAAkB;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;;;;;;;;;;;;;;;;AC9ItB;AAYqB;;AAErB;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,uBAAuB,8CAAO;;AAE9B;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,iDAAU;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAgB;AACvC,uBAAuB,uDAAgB;AACvC,kBAAkB,uDAAgB;AAClC,iBAAiB,uDAAgB;AACjC,kBAAkB,uDAAgB;AAClC;AACA;AACA,4BAA4B,2CAA2C;AACvE,gCAAgC,kCAAkC;AAClE;AACA,mBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qDAAc;AAC1D,kCAAkC,qDAAc;AAChD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,qDAAc;AAC1D;AACA,kCAAkC,qDAAc;AAChD;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2CAA2C;AACvE,gCAAgC,kCAAkC;AAClE;AACA,mBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA,6BAA6B,2CAA2C;AACxE,iCAAiC,kCAAkC;AACnE;AACA,oBAAoB,oDAAoD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2CAA2C;AACxE,iCAAiC,kCAAkC;AACnE;AACA,oBAAoB,oDAAoD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,EAAE,qEAA8B;AAChC,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,6DAAsB;AACxB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,qEAA8B;AAChC;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA,oBAAoB,uDAAgB;;AAEpC;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sEAA+B;AACjC,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kEAA2B;AAC9B;AACA;AACA,mEAAmE,OAAO;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE,wBAAwB,qEAA8B;AACtD;AACA;AACA;AACA;AACA,IAAI,gEAAyB;AAC7B,IAAI,mEAA4B;AAChC,IAAI,6DAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB,8DAAuB;AAC5C,wCAAwC,uEAAgC;AACxE,4CAA4C,uEAAgC;AAC5E,4CAA4C,uEAAgC;AAC5E,qCAAqC,uEAAgC;AACrE,qCAAqC,uEAAgC;AACrE,0CAA0C,uEAAgC;;AAE1E;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAqB;AAC7C;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC5YA;AAaqB;;AAErB;AACO;AACP;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA,2BAA2B,qDAAc;AACzC;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,EAAE,yDAAkB;AACpB;;AAEA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB,YAAY,qBAAqB;AACjC,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC,OAAO;AAC/C,cAAc,sBAAsB;AACpC;AACA;;AAEA,2BAA2B,8DAAuB;AAClD;AACA;AACA,8BAA8B,qDAAc;AAC5C;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,gBAAgB;AACvD;AACA,qBAAqB,uDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAoB;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,oBAAoB,6DAAsB;;AAE1C;AACA;AACA,aAAa;AACb;AACA,uBAAuB,gEAAyB;;;;;;;;;;;;;;;;;AChMhD;AAKqB;;AAErB;AACO;AACP;AACA,cAAc;AACd;AACA;AACA;AACA,sCAAsC,2DAAoB;AAC1D;AACA;AACA,oBAAoB,oDAAa,KAAK,oDAAa;;AAEnD;AACA,4BAA4B,oDAAa,KAAK,kDAAW;AACzD,yBAAyB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACzK,sBAAsB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACtK,qBAAqB,oDAAa;AAClC,oBAAoB,oDAAa;;AAEjC;AACA,gBAAgB,oDAAa,KAAK,kDAAW;AAC7C,wBAAwB,oDAAa,KAAK,kDAAW;AACrD,4BAA4B,oDAAa;AACzC,2BAA2B,oDAAa;;AAExC;AACA,uBAAuB,oDAAa;AACpC,wBAAwB,oDAAa;AACrC,0BAA0B,oDAAa;AACvC,uBAAuB,oDAAa;AACpC,uBAAuB,oDAAa;;AAEpC,sBAAsB,oDAAa,KAAK,oDAAa;;AAErD;AACA,4BAA4B,oDAAa;AACzC,gCAAgC,oDAAa,MAAM,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa;AACpJ,4BAA4B,oDAAa;AACzC,sCAAsC,oDAAa;AACnD,mCAAmC,oDAAa,MAAM,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa;;AAEvJ;AACA,iCAAiC,oDAAa;AAC9C,iCAAiC,oDAAa;AAC9C,6BAA6B,oDAAa;AAC1C,4BAA4B,oDAAa,KAAK,oDAAa;;AAE3D;AACA,6BAA6B,oDAAa,KAAK,oDAAa;AAC5D,gCAAgC,oDAAa,KAAK,oDAAa;AAC/D,qCAAqC,oDAAa;AAClD,gCAAgC,oDAAa;AAC7C,4BAA4B,oDAAa;AACzC,gCAAgC,oDAAa;AAC7C,+BAA+B,oDAAa;AAC5C,0BAA0B,oDAAa,KAAK,oDAAa;AACzD,kCAAkC,oDAAa;AAC/C,gCAAgC,oDAAa,KAAK,oDAAa;AAC/D,oCAAoC,oDAAa;AACjD,qCAAqC,oDAAa;;AAElD,QAAQ,wEAAiC;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,qEAA8B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,iEAA0B;AAClC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,uEAAgC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8G;AAC9G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,mEAA4B;AACpC,MAAM;AACN,IAAI;AACJ;AACA;AACA,kBAAkB,gEAAgE;AAClF;AACA;AACA,kBAAkB,mEAAmE;AACrF;AACA;AACA,EAAE,2EAAoC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;;;;;AC1pBA;AAMqB;;AAEd;AACP;AACA,cAAc;AACd;AACA;AACA;AACA,yCAAyC,2DAAoB;AAC7D;AACA;AACA,4BAA4B,oDAAa,KAAK,kDAAW;AACzD,yBAAyB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACzK,sBAAsB,oDAAa,MAAM,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa,eAAe,oDAAa;AACtK,qBAAqB,oDAAa;AAClC,oBAAoB,oDAAa;AACjC,+BAA+B,oDAAa;AAC5C,gCAAgC,oDAAa;;AAE7C;AACA,oBAAoB,oDAAa,KAAK,oDAAa;;AAEnD;AACA,gBAAgB,oDAAa,KAAK,kDAAW;AAC7C,oBAAoB,oDAAa;AACjC,oBAAoB,oDAAa;AACjC,wBAAwB,oDAAa,KAAK,kDAAW;AACrD,0BAA0B,oDAAa;;AAEvC;AACA,uBAAuB,oDAAa;AACpC,2BAA2B,oDAAa;AACxC,2BAA2B,oDAAa;AACxC,wBAAwB,oDAAa;AACrC,0BAA0B,oDAAa;;AAEvC;AACA,4BAA4B,oDAAa;AACzC,gCAAgC,oDAAa,MAAM,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa;AACpJ,4BAA4B,oDAAa;AACzC,sCAAsC,oDAAa;AACnD,mCAAmC,oDAAa,MAAM,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa,QAAQ,oDAAa;;AAEvJ;AACA,qBAAqB,oDAAa;AAClC,sBAAsB,oDAAa;;AAEnC;AACA,wBAAwB,oDAAa;AACrC,yBAAyB,oDAAa;;AAEtC,sBAAsB,oDAAa,KAAK,oDAAa;;AAErD,QAAQ,wEAAiC;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,qEAA8B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,iEAA0B;AAClC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,uEAAgC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,oEAAoE;AACpE,SAAS;AACT,wEAAwE;AACxE,SAAS;AACT,sEAAsE;AACtE,SAAS;AACT,sEAAsE;AACtE,SAAS;AACT,sEAAsE;AACtE,SAAS;AACT,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA,oCAAoC,0BAA0B;AAC9D;AACA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,mEAA4B;AACpC,MAAM;AACN,IAAI;AACJ;AACA;AACA,kBAAkB,gEAAgE;AAClF;AACA;AACA,kBAAkB,mEAAmE;AACrF;AACA;AACA,EAAE,2EAAoC;AACtC,MAAM,kEAA2B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,sBAAsB;AACjC;;;;;;;;;;;;;;;;ACtvBA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5IA;AAKqB;;AAEd;AACP;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA,8BAA8B,iDAAU;AACxC;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,iBAAiB,qDAAc,eAAe,mDAAY,GAAG,mDAAY;AACzE;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA,0BAA0B,uDAAgB;AAC1C;AACA;AACA,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mDAAY,EAAE;AAC9D;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,UAAU,qDAAc;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU,qDAAc;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,uDAAgB;AAC5B;AACA;AACA;AACA,8BAA8B,oDAAa;AAC3C,EAAE,2DAAoB;AACtB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,uDAAgB;AAC5B;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,SAAS,qDAAc,8BAA8B,sDAAe;AACpE;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,uDAAgB;AAC5B,YAAY,uDAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,SAAS,qDAAc,yBAAyB,sDAAe;AAC/D;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS,sDAAe;AACxB;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,YAAY,uDAAgB;AAC5B,YAAY,uDAAgB;AAC5B,4BAA4B,0DAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA,EAAE,8DAAuB;AACzB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,uDAAgB;AAClD;;AAEA;AACA,0BAA0B,uDAAgB;AAC1C,6BAA6B,uDAAgB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,sDAAe;AAC7C;AACA;AACA;AACA;AACA,kBAAkB,sDAAe;AACjC;AACA;AACA,kBAAkB,sDAAe;AACjC;;AAEA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/XA;AAGqB;;AAErB;AACA;AACA;AACA;AACA;AACO,mBAAmB,mDAAY;AACtC;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;;AAEA;AACA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1MA;AAMqB;;AAErB;AACO,yBAAyB,gDAAS;AACzC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA,WAAW,uDAAgB;AAC3B;AACA;AACA;AACA;AACA,WAAW,uDAAgB;AAC3B;AACA;AACA;AACA;AACA,WAAW,uDAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA,eAAe,uDAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA,gBAAgB,uDAAgB;AAChC,gBAAgB,uDAAgB;AAChC;AACA,qBAAqB,oDAAa;AAClC;AACA,sBAAsB,oDAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;AAEtB;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC1kBA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AClPA;AAKqB;;AAErB;AACO,mBAAmB,gDAAS;AACnC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,8CAAO;;AAE5B;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,8CAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;;;;;;;;;;;;;;;;;AChItB;AAC+B;AAGV;;AAEd;AACP;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA,iBAAiB,4DAAqB;AACtC,oBAAoB,gEAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAW;AAC9C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtEA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,aAAa;AACzB,YAAY,uCAAuC;AACnD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,aAAa;AACzB,YAAY,uCAAuC;AACnD,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,aAAa;AACzB,YAAY,uCAAuC;AACnD,YAAY,uCAAuC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa;AACb;;;;;;;;;;;;;;;;;ACtGA;AAMqB;;AAErB;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,8BAA8B,oEAA6B;AAC3D,qDAAqD,4DAAqB;AAC1E,qCAAqC,4DAAqB;AAC1D,mDAAmD,qEAA8B;AACjF,kDAAkD,qEAA8B;AAChF,kDAAkD,qEAA8B;;AAEhF;AACA;;AAEA;AACA,mCAAmC,iEAAiE,IAAI,kFAA2C;AACnJ;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA,EAAE,wEAAiC;;AAEnC;AACA;AACA,GAAG,2EAAoC;AACvC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,2BAA2B,qEAA8B;AACzD;AACA;AACA;AACA;AACA;AACA,qDAAqD,qEAA8B;AACnF,oDAAoD,qEAA8B;AAClF,oDAAoD,qEAA8B;AAClF;AACA;AACA;AACA,2BAA2B,qEAA8B;AACzD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxLA;AAKqB;;AAErB;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;AC3PA;AAWqB;;AAErB;AACA;AACA,mCAAmC,kCAAkC;AACrE;AACO;AACP;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA,uBAAuB,2DAAoB;;AAE3C;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,iCAAiC,8DAAuB;AACxD;AACA,mBAAmB,uBAAuB;AAC1C,kDAAkD,uEAAgC;AAClF;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,kDAAkD,4DAAqB;AACvE;AACA;AACA,wBAAwB,4DAAqB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,+CAA+C;AAC3D,YAAY,sBAAsB;AAClC,cAAc;AACd;AACA;AACA;AACA,qBAAqB,iDAAU;;AAE/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,+CAA+C;AAC3D,cAAc,kCAAkC,IAAI;AACpD,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAU;AAClC;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,2DAAoB;AACvB;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,EAAE,+EAAwC;AAC1C;AACA,uCAAuC,OAAO;AAC9C,yCAAyC,2EAAoC;AAC7E;AACA;AACA;AACA,qCAAqC,2EAAoC;AACzE;AACA;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAmB;AACzC,kBAAkB,uDAAgB;AAClC,gBAAgB,uDAAgB;AAChC;AACA;AACA;AACA;AACA,EAAE,+EAAwC;AAC1C;AACA,uCAAuC,OAAO;AAC9C,yCAAyC,2EAAoC;AAC7E;AACA;AACA;AACA,qCAAqC,2EAAoC;AACzE;AACA,EAAE,8DAAuB;AACzB,EAAE,2DAAoB;AACtB,EAAE,2DAAoB;AACtB;;AAEA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,QAAQ;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+EAAwC;AAC3C;AACA;AACA,uBAAuB,0DAAmB;AAC1C;AACA,GAAG,+EAAwC;AAC3C,GAAG,8DAAuB;AAC1B;AACA;AACA,uCAAuC,OAAO;AAC9C,yCAAyC,2EAAoC;AAC7E;AACA;AACA;AACA,qCAAqC,2EAAoC;AACzE;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B;AACA;AACA;AACA,2BAA2B,4DAAqB;AAChD;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAqB;AACzD;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAqB;AAC9C;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA,MAAM,gEAAyB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,cAAc;AACd;AACA;AACA,sBAAsB,0DAAmB;AACzC,sBAAsB,0DAAmB;AACzC,sBAAsB,0DAAmB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,mCAAmC,WAAW,6BAA6B,YAAY;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,kCAAkC,wDAAiB,GAAG,2DAAoB;AAC1E;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2DAAoB;AAC5C;AACA;AACA,wBAAwB,6DAAsB;AAC9C;AACA;AACA,wBAAwB,gEAAyB;AACjD;AACA;AACA,wBAAwB,6DAAsB;AAC9C;AACA;AACA,wBAAwB,2DAAoB;AAC5C;AACA;AACA,wBAAwB,uDAAgB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,wCAAwC,oDAAa;;;;;;;;;;;;;;;;AC3pBrD;;AAEA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACO;AACP;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,YAAY;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvYA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtFA;AAMqB;;AAErB;AACO,sBAAsB,gDAAS;AACtC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,oBAAoB,sDAAe;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,YAAY,sDAAe;AAC3B,YAAY,sDAAe;AAC3B;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,qDAAc;AAC1B,YAAY,qDAAc;AAC1B;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;AAEtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7XA;AAQqB;;AAErB;AACO,sBAAsB,gDAAS;AACtC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,oBAAoB,sDAAe;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA,YAAY,sDAAe;AAC3B,YAAY,sDAAe;AAC3B,YAAY,sDAAe;AAC3B;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,qDAAc;AAC1B,YAAY,qDAAc;AAC1B,YAAY,qDAAc;AAC1B;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sDAAe;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,kBAAkB,2CAAI;;AAEtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACnmBA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;;;;;;;;;;;;;;;AC1BO;;;;;;;;;;;;;;;;;ACAP;AAUoB;;AAEpB;AACA;AACA;AACA,aAAa;AACb;AACO,uBAAuB,qDAAc;AAC5C;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,2CAAI;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,4CAAK;AACnC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qCAAqC,kDAAW;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAW;AACzC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAW;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnTA;AACmC;;AAEnC;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,qBAAqB;AACjC,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,uDAA0B;AACnF,qCAAqC,6CAAgB;AACrD;AACA;AACA,iBAAiB,kDAAqB;AACtC,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAY,wBAAwB;AACpC,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,uDAA0B;AACnF,qCAAqC,6CAAgB;AACrD;AACA;AACA;AACA;AACA,kBAAkB,kDAAqB;AACvC,uBAAuB;AACvB;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAsB;AAChD;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;;;;;AC9EA;AACmC;;AAEnC;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,WAAW,oBAAoB;AAC/B,WAAW,oBAAoB;AAC/B,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oDAAuB;AACzE;AACA;;AAEA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,mDAAmD,4BAA4B;AAC/E,4DAA4D,oDAAuB;AACnF;AACA,iCAAiC,kDAAqB;AACtD;AACA;AACA;AACA;AACA,qCAAqC,kDAAqB;AAC1D;AACA;AACA;AACA;AACA,qCAAqC,kDAAqB;AAC1D;AACA,2CAA2C,kDAAqB;AAChE;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,iBAAiB;AAC7B,YAAY,gBAAgB;AAC5B,YAAY,SAAS;AACrB;AACA,wDAAwD,iGAAiG;AACzJ;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,4CAAe;AACrC,mDAAmD,iDAAoB;AACvE;;AAEA;AACA,kBAAkB,sCAAsC;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,oDAAuB;AACnF;AACA,iCAAiC,kDAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAqB;AAC1D;AACA;AACA;AACA;AACA,qCAAqC,kDAAqB;AAC1D;AACA;AACA;AACA;;AAEA;AACA,iEAAiE,yDAA4B;AAC7F;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,iBAAiB,oFAAoF,6EAA6E;AAC9L,YAAY,iBAAiB,+EAA+E;AAC5G,YAAY,SAAS;AACrB,YAAY,oBAAoB;AAChC,cAAc;AACd;AACA,sDAAsD,2NAA2N;AACjR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,4CAAe;AAChD;AACA;AACA;AACA;AACA,+BAA+B,wDAA2B;AAC1D;AACA;;AAEA;AACA;AACA,qBAAqB,4CAAe;AACpC,yDAAyD,iDAAoB;AAC7E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,oDAAuB;AACnF;;AAEA;AACA;AACA,kCAAkC,4CAAe;AACjD,sBAAsB,4CAAe;AACrC;AACA;AACA;AACA,2BAA2B,+CAAkB;AAC7C;AACA;AACA;;AAEA;AACA,iFAAiF,wEAA2C;AAC5H;AACA;AACA;AACA;;AAEA,kDAAkD,aAAa;;AAE/D;AACA,iEAAiE,yDAA4B;AAC7F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,oDAAuB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,aAAa;AAC/D;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,wDAAwD;AACpE;AACA;AACA,2DAA2D,mDAAsB;AACjF;AACA;AACA,8DAA8D,sDAAyB;AACvF;AACA,oCAAoC,qDAAwB;AAC5D;AACA,gBAAgB,uDAA0B;AAC1C;AACA;AACA,IAAI,2DAA8B;AAClC,IAAI,yDAA4B;AAChC;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,oBAAoB;AAChC,YAAY,gBAAgB;AAC5B,YAAY,kBAAkB;AAC9B,cAAc;AACd;AACA;AACA,2DAA2D,oDAAuB;AAClF;AACA;AACA;;AAEA;AACA,2BAA2B,qDAAwB;AACnD;AACA;AACA;AACA;;AAEA,kBAAkB,qBAAqB;AACvC;AACA;AACA,qDAAqD,mDAAsB;AAC3E;AACA;AACA;;AAEA;AACA,wDAAwD,iDAAoB;AAC5E;;AAEA;AACA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B;AACA;AACA;;;;;;;;;;;;;;;;;AC9RA;AACmC;;AAEnC;AACA;AACA;AACO,+BAA+B,kDAAqB;AAC3D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,EAAE,yEAA4C;;AAE9C;AACA,EAAE,sEAAyC;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sDAAyB;AACpD,GAAG,sEAAyC;AAC5C;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;AACA,iBAAiB,mEAAsC,oBAAoB,iCAAiC;AAC5G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gEAAmC;AACrC,EAAE,kEAAqC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,4CAAe;AACvC,wBAAwB,4CAAe;;AAEvC;AACA;;AAEA,kBAAkB,6BAA6B;AAC/C,gDAAgD,oDAAuB;AACvE,kFAAkF,oDAAuB;;AAEzG;AACA;;AAEA,mEAAmE;AACnE;AACA;;AAEA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,EAAE,8DAAiC;AACnC,EAAE,6DAAgC;AAClC;AACA;AACA;;;;;;;;;;;;;;;;;ACnSA;AACmC;;AAEnC;AACA;AACA;AACO,qCAAqC,kDAAqB;AACjE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,2DAA8B;AAChC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sEAAyC;;AAE3C;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uBAAuB,6CAAgB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gFAAmD;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA,mBAAmB,uDAA0B;AAC7C,mBAAmB,uDAA0B;AAC7C,wBAAwB,WAAW;AACnC;AACA,oBAAoB,uDAA0B;AAC9C,oBAAoB,uDAA0B;AAC9C;AACA;AACA,wBAAwB,4CAAe;AACvC,wBAAwB,4CAAe;AACvC;AACA;AACA,uBAAuB,4CAAe;AACtC,uBAAuB,4CAAe;AACtC;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,iEAAoC,2BAA2B,wDAA2B;;AAE5F;AACA,EAAE,2DAA8B;;AAEhC;AACA;AACA;;;;;;;;;;;;;;;;;;AChLA;AACgD;AACb;;AAEnC;AACA;AACA;AACO,sCAAsC,kDAAqB;AAClE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;;AAEjC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,6BAA6B,0CAAa;;AAE1C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,kEAAkE,OAAO;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE,OAAO;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,yBAAyB;AACrC;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;;AAE3C;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,2CAAc;;AAEpC;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA,uBAAuB,4CAAe;AACtC;AACA;AACA;AACA,wBAAwB,6CAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,iEAAoC,2BAA2B,qFAAyC;;AAE1G;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA,yBAAyB,4CAAe;AACxC,yBAAyB,4CAAe;AACxC;AACA,mBAAmB,kBAAkB;AACrC;AACA,yBAAyB,4CAAe;AACxC;AACA,oBAAoB,qFAAyC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAAe;AACrC;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAA2B;AACzD;AACA;AACA,wDAAwD,iDAAoB;AAC5E,iCAAiC,4CAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC;AAClD;AACA;AACA;AACA,EAAE,gFAAmD;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,YAAY;AAC1B,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;;;;;;;;;;;;;;;;;AC3XA;AACmC;;AAEnC;AACA;AACA;AACO,gCAAgC,kDAAqB;AAC5D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uDAAuD,OAAO;AAC9D,GAAG,yEAA4C;;AAE/C;AACA,GAAG,sEAAyC;AAC5C;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAAgB;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gFAAmD;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA,mBAAmB,yBAAyB;AAC5C,6CAA6C,oDAAuB;AACpE,2EAA2E,oDAAuB;AAClG,uBAAuB,4CAAe;AACtC,uBAAuB,4CAAe;AACtC;AACA;AACA,kBAAkB,qBAAqB;AACvC,wCAAwC,oDAAuB;AAC/D,kBAAkB,iDAAoB;AACtC,sBAAsB,4CAAe;AACrC;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrSA;AACmC;;AAEnC;AACA;AACA;AACO,iCAAiC,kDAAqB;AAC7D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE,mEAAsC;AACxC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,mDAAsB,OAAO,sDAAyB;AAC3F;AACA;AACA;AACA;;AAEA;AACA,EAAE,sEAAyC;;AAE3C;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uBAAuB,6CAAgB;;AAEvC;AACA,+BAA+B,OAAO;AACtC,4BAA4B,4CAAe;AAC3C,yBAAyB,0CAAa;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,gFAAmD;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD,kDAAkD,qDAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;;AAEA;AACA,6EAA6E,uDAA0B;AACvG,mFAAmF,uDAA0B;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,oDAAuB;AACvC,gBAAgB,sDAAyB;AACzC,qBAAqB,mDAAsB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,oDAAuB;AACnD,qBAAqB,4CAAe;;;;;;;;;;;;;;;;;ACtUpC;AACmC;;AAEnC;AACA;AACA;AACO,kCAAkC,kDAAqB;AAC9D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,8CAAiB;;AAE5C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,8CAAiB;;AAE5C;AACA;AACA,YAAY;AACZ;AACA;AACA,sCAAsC,6CAAgB;AACtD;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,sEAAyC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,sEAAyC;;AAE3C;AACA,iBAAiB,mEAAsC,oBAAoB,iCAAiC;AAC5G;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gFAAmD;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,gCAAgC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,oBAAoB;AAClD,EAAE,8DAAiC;AACnC,EAAE,6DAAgC;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,qDAAwB;AACvC,qDAAqD,iDAAoB;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,qDAAwB;AAC9C,wDAAwD,iDAAoB;AAC5E;AACA,GAAG,yDAA4B;AAC/B;;AAEA;AACA,+BAA+B,oBAAoB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,sDAAyB;AACpE;AACA;;AAEA;AACA,kBAAkB,gCAAgC;AAClD,mDAAmD,oDAAuB;AAC1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,wDAA2B;AACjD,mBAAmB,wDAA2B;AAC9C,kBAAkB,qDAAwB;AAC1C;AACA;AACA;AACA;AACA,EAAE,iEAAoC;AACtC,EAAE,4DAA+B;AACjC,EAAE,yDAA4B;AAC9B,EAAE,4DAA+B;AACjC,EAAE,yDAA4B;;AAE9B;AACA;;;;;;;;;;;;;;;;;ACnWA;AACmC;;AAEnC;AACA;AACA;AACO,6BAA6B,kDAAqB;AACzD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAAa;AACjC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,sCAAsC,6CAAgB;AACtD;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,EAAE,yEAA4C;;AAE9C;AACA,EAAE,sEAAyC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,sEAAyC;AAC3C;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sEAAyC;;AAE3C;AACA,iBAAiB,mEAAsC,oBAAoB,iCAAiC;AAC5G;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gFAAmD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,0BAA0B;AAC5C,6CAA6C,oDAAuB;AACpE;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C,6CAA6C,oDAAuB;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,oBAAoB;AAClD,EAAE,8DAAiC;AACnC,EAAE,6DAAgC;AAClC;AACA;;;;;;;;;;;;;;;;;;;;ACvPA;AACmC;AACT;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,yCAAY;;AAEtC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0BAA0B,yCAAY;;AAEtC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAe;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAe;AAC3C;AACA,wBAAwB,4CAAe;AACvC,0BAA0B,4CAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,2BAA2B;AACvC;AACA;AACA,cAAc,uDAA0B;AACxC;AACA,YAAY,oDAAuB;AACnC,YAAY,oDAAuB;AACnC;AACA,aAAa,iDAAK;AAClB,UAAU,uDAA0B,SAAS,uDAA0B;AACvE;AACA;AACA,EAAE,2DAA8B;AAChC;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kDAAU;AACZ;AACA;AACA;;AAEA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAU;AACrC,8BAA8B,kDAAU;AACxC,yBAAyB,kDAAU;;AAMjC;;;;;;;;;;;;;;;;;;AC9fF;AACmC;AACyB;;AAE5D;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACO,4BAA4B,kDAAqB;AACxD;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qCAAqC,iDAAoB;AACzD;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mCAAmC,iDAAoB;AACvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAe;AACjD;AACA,yBAAyB,qDAAwB;AACjD,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA,EAAE,yDAA4B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,EAAE,yEAA4C;;AAE9C;AACA,EAAE,sEAAyC;;AAE3C;AACA;;AAEA;AACA,EAAE,8DAAiC;AACnC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAY;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,yCAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,cAAc;AACzD,2CAA2C,MAAM;AACjD;AACA,4CAA4C,kBAAkB;AAC9D,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,2BAA2B;AACvC,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yCAAY;AACnC;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,yBAAyB,yCAAY;AACrC;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,qBAAqB,4CAAe;;AAEpC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4CAAe;AACvC;AACA;AACA,kBAAkB,4CAAe;AACjC;AACA,qBAAqB,4CAAe;AACpC;AACA;AACA,+BAA+B,4CAAe;AAC9C;AACA;AACA;AACA,kBAAkB,4CAAe;AACjC,kBAAkB,4CAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4CAAe;AACtC;AACA;AACA;;AAEA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,yCAAY;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,sDAAyB;AACpD;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,WAAW;AAClC,uBAAuB,QAAQ;AAC/B,uBAAuB,QAAQ;AAC/B;AACA;AACA,UAAU,yEAA4C;AACtD;AACA;AACA,UAAU,yEAA4C;AACtD;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mEAAsC;AAC9D,KAAK,iCAAiC;AACtC,KAAK,+BAA+B;AACpC,KAAK;AACL;AACA;AACA,EAAE,iEAAoC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,4CAAe;AACtC,8BAA8B,4CAAe;AAC7C,kBAAkB,4CAAe;AACjC,kBAAkB,eAAe;AACjC;AACA,gBAAgB,mDAAsB;AACtC,uBAAuB,oDAAuB;AAC9C;AACA,mBAAmB,eAAe;AAClC;AACA,iBAAiB,mDAAsB;AACvC,wBAAwB,oDAAuB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,8DAAiC;AACnC,EAAE,8DAAiC;AACnC,EAAE,8DAAiC;AACnC,EAAE,6DAAgC;AAClC;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gEAAmC;AACrC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,qDAAwB;AACvC,qEAAqE,OAAO;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3hCA;AACmC;;AAEnC;AACA;AACA;AACO,yCAAyC,mDAAsB;AACtE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,wBAAwB,4CAAe;;AAEvC;AACA;;AAEA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,oBAAoB,wDAA2B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAA2B;AACpD;AACA,yBAAyB,wDAA2B;AACpD;AACA;AACA,EAAE,4DAA+B;AACjC;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA,gBAAgB,kDAAqB;AACrC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAwB;AAChD,wBAAwB,qDAAwB;AAChD;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAA2B;AAC9C;AACA;AACA,EAAE,4DAA+B;AACjC,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iDAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iDAAoB;AAC9E;AACA;AACA,sBAAsB,iDAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7LA;AACmC;;AAEnC;AACA;AACA;AACO,qCAAqC,mDAAsB;AAClE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,4CAAe;;AAElC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA,gBAAgB,mDAAsB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,oBAAoB,wDAA2B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAA2B;AACpD;AACA,yBAAyB,wDAA2B;AACpD;AACA;AACA,EAAE,4DAA+B;AACjC;;AAEA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA,gBAAgB,kDAAqB;AACrC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAsB;AACtC,eAAe,qDAAwB;AACvC;AACA,mBAAmB,wDAA2B;AAC9C;AACA;AACA,EAAE,yDAA4B;AAC9B,EAAE,4DAA+B;AACjC;AACA;;;;;;;;;;;;;;;;;AC1IA;AACmC;;AAEnC;AACO,oCAAoC,mDAAsB;AACjE;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB,kDAAkD;AACvF;AACA;AACA,uBAAuB,4CAAe;;AAEtC;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kBAAkB,8CAAiB;AACnC;;AAEA;AACA,mCAAmC,gBAAgB;;AAEnD;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC;AACA;;AAEA;AACA;AACA,iCAAiC,YAAY;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAwB;AACtD,mBAAmB,qDAAwB;;AAE3C;AACA;AACA,2CAA2C,OAAO;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,iDAAoB;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B;AACA;;;;;;;;;;;;;;;;;AC/GA;AACmC;;AAEnC;AACO,gCAAgC,mDAAsB;AAC7D;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;;AAEA;AACA;AACA,YAAY,0BAA0B,wBAAwB;AAC9D;AACA;AACA,uBAAuB,4CAAe;;AAEtC;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,kBAAkB,8CAAiB;AACnC;;AAEA;AACA,mCAAmC,KAAK;;AAExC;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,oDAAuB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,qDAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAwB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,qDAAwB;AAC3C,2CAA2C,OAAO;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,iDAAoB;;AAEpE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,yDAA4B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B;AACA;;;;;;;;;;;;;;;;;AC1LA;AACmC;;AAEnC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,mBAAmB,uDAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAoC,EAAE,OAAO;AACnE,gCAAgC,0DAA6B,oBAAoB,uDAA0B;AAC3G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAA0B;AACzC;AACA,uBAAuB,iEAAoC,EAAE,OAAO;AACpE,iCAAiC,0DAA6B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,sCAAsC,GAAG,uCAAuC,GAAG,sCAAsC,EAAE,sCAAsC,GAAG,wCAAwC,GAAG,wCAAwC,GAAG,+DAA+D;AACrU;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,sCAAsC,GAAG,yCAAyC;AAC9F;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;;;;;;;;;;;;;;;AC/RA;AACmC;AACU;AACV;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,4CAAe;AAC5B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,aAAa,4CAAe;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,6BAA6B,+CAAkB;;AAE/C;AACA,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACU;;;;;;;;;;;;;;;AC9VV;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;AC1DD;AACmC;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;;AC1CD;AACmC;AACU;AACV;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,4CAAe;AAC7B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjoBAAoB,+CAAkB;AACtC,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,4CAA4C,mDAAsB;AAClE;AACA,gBAAgB,uDAA0B;AAC1C,gBAAgB,qDAAwB;AACxC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA,sBAAsB,mDAAsB,iCAAiC,oDAAuB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gDAAgD,6DAAgC;AAChF;AACA;AACA,kCAAkC,4CAAe;AACjD;AACA,kCAAkC,4CAAe;AACjD;AACA,oCAAoC,0CAAa;AACjD;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA;AACA,iCAAiC,kCAAkC;AACnE;AACA,sBAAsB,mDAAsB,iCAAiC,oDAAuB;AACpG;AACA;AACA;AACA;AACA,+BAA+B,kCAAkC;AACjE,+BAA+B,kCAAkC;AACjE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gDAAgD,6DAAgC;AAChF;AACA;AACA,kCAAkC,4CAAe;AACjD;AACA,kCAAkC,4CAAe;AACjD;AACA,oCAAoC,0CAAa;AACjD;AACA;;AAEA,6CAA6C,6DAAgC;AAC7E;AACA;AACA,+BAA+B,4CAAe;AAC9C;AACA,+BAA+B,4CAAe;AAC9C;AACA,iCAAiC,0CAAa;AAC9C;;AAEA,6CAA6C,6DAAgC;AAC7E;AACA;AACA,+BAA+B,4CAAe;AAC9C;AACA,+BAA+B,4CAAe;AAC9C;AACA,iCAAiC,0CAAa;AAC9C;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,oCAAoC,4CAAe;AACnD,uCAAuC,4CAAe;AACtD,wCAAwC,4CAAe;;AAEvD;AACA,2CAA2C,oDAAuB;AAClE;AACA,wBAAwB,kDAAqB;AAC7C;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA,wBAAwB,kDAAqB;AAC7C;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,oDAAuB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,mDAAsB;AAC3E;AACA,yBAAyB,uDAA0B;AACnD,yBAAyB,kDAAqB;AAC9C;AACA,iCAAiC,6CAAgB,iCAAiC;;AAElF;AACA,GAAG,kFAAuC;;AAE1C;AACA,GAAG,kFAAuC;;AAE1C;AACA,GAAG,kFAAuC;;AAE1C;AACA,GAAG,kFAAuC;AAC1C;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAA2B;AAC3C,iBAAiB,4CAAe;AAChC;AACA,GAAG;AACH;AACA,iEAAiE,wEAA2C;AAC5G,6CAA6C,6CAAgB;AAC7D;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAA2B;AAC3C,iBAAiB,4CAAe;AAChC;AACA,GAAG;AACH;AACA,iEAAiE,wEAA2C;AAC5G,6CAA6C,6CAAgB;AAC7D;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAA2B;AAC3C,iBAAiB,4CAAe;AAChC;AACA,GAAG;AACH;AACA,iEAAiE,wEAA2C;AAC5G,6CAA6C,6CAAgB;AAC7D;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAA2B;AAC3C,iBAAiB,4CAAe;AAChC;AACA,GAAG;AACH;AACA,iEAAiE,wEAA2C;AAC5G,6CAA6C,6CAAgB;AAC7D;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,4CAA4C,mDAAsB;AAClE;AACA,gBAAgB,uDAA0B;AAC1C,gBAAgB,kDAAqB;AACrC;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;;;AC9+GkC;;AAEnC;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,sBAAsB;AAClC;AACA;AACA,mDAAmD,2DAA8B;AACjF;AACA;AACA;AACA,wCAAwC,0CAAa;AACrD;AACA;AACA;AACA,oCAAoC,4CAAe;AACnD,iCAAiC,4CAAe;AAChD;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,2CAA2C,mDAAsB;AACjE;AACA,yDAAyD,uDAA0B;AACnF,qCAAqC,6CAAgB;AACrD;AACA,4CAA4C,mDAAsB;AAClE;AACA,GAAG;AACH;AACA,4CAA4C,mDAAsB;AAClE;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;ACnDA;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;AC7iED;AACmC;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;AC7OD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,gBAAgB,kDAAqB;AACrC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH;AACA,SAAS,qDAAwB;AACjC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;AC7gBD;AACmC;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;AC3DD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,uBAAuB;AACvB,mDAAmD,wDAA2B;AAC9E,kCAAkC,4CAAe;AACjD;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,0DAA6B;AACjF;AACA;AACA,sBAAsB,qDAAwB;AAC9C,gCAAgC,6CAAgB;AAChD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2CAA2C,iDAAoB;AAC/D;AACA,IAAI;AACJ;AACA,2CAA2C,iDAAoB;AAC/D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA,0BAA0B,+CAAkB;AAC5C,6BAA6B,4CAAe;AAC5C,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA,0BAA0B,+CAAkB;AAC5C,6BAA6B,4CAAe;AAC5C;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,uBAAuB;AACvB,mDAAmD,wDAA2B;AAC9E,kCAAkC,4CAAe;AACjD;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oDAAoD,0DAA6B;AACjF;AACA;AACA,sBAAsB,qDAAwB;AAC9C,gCAAgC,6CAAgB;AAChD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2CAA2C,iDAAoB;AAC/D;AACA,IAAI;AACJ;AACA,2CAA2C,iDAAoB;AAC/D;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,2BAA2B,+CAAkB;AAC7C,8BAA8B,4CAAe;AAC7C;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,2BAA2B,+CAAkB;AAC7C,8BAA8B,4CAAe;AAC7C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;;AAEA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC,IAAI;AACJ;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8CAA8C,oDAAuB;AACrE;AACA;AACA,0BAA0B,kDAAqB;AAC/C;AACA;AACA,IAAI;AACJ;AACA,8CAA8C,oDAAuB;AACrE;AACA;AACA,0BAA0B,qDAAwB;AAClD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,8CAA8C,qDAAwB;AACtE,qBAAqB,+CAAkB;AACvC,qBAAqB,kDAAqB,EAAE,qDAAwB;AACpE;AACA;AACA,0BAA0B,6CAAgB;;AAE1C;AACA,iEAAiE,wEAA2C,uDAAuD,oDAAuB;AAC1L,6CAA6C,6CAAgB;AAC7D;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC,IAAI;AACJ;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8CAA8C,oDAAuB;AACrE;AACA;AACA,0BAA0B,kDAAqB;AAC/C;AACA;AACA,IAAI;AACJ;AACA,8CAA8C,oDAAuB;AACrE;AACA;AACA,0BAA0B,qDAAwB;AAClD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,8CAA8C,qDAAwB;AACtE,qBAAqB,+CAAkB;AACvC,qBAAqB,kDAAqB,EAAE,qDAAwB;AACpE;AACA;AACA,0BAA0B,6CAAgB;AAC1C;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,sBAAsB,8CAAiB;AACvC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,2BAA2B,+CAAkB;AAC7C,0BAA0B,iDAAoB;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,2BAA2B,+CAAkB;AAC7C,8BAA8B,4CAAe;AAC7C;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,4CAAe;AAC7B,IAAI;AACJ;AACA;AACA;AACA,cAAc,4CAAe;AAC7B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,iBAAiB,4CAAe;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,8CAA8C,mDAAsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,2CAA2C,oDAAuB;AAClE;AACA,wBAAwB,kDAAqB;AAC7C,0BAA0B,kDAAqB;AAC/C;AACA;AACA;AACA,uCAAuC,oDAAuB;AAC9D;AACA,wBAAwB,kDAAqB;AAC7C,0BAA0B,kDAAqB;AAC/C;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;AC33CD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;AClHD;AACmC;AACA;;AAEnC;AACA;AACA;;AAEA,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,mDAAmD,iDAAoB;AACvE;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,SAAS;AACf,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,aAAa,4CAAe;AAC5B;AACA,GAAG;AACH;AACA,4CAA4C,mDAAsB;AAClE;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,8DAAiC,yCAAyC,oDAAuB;AACrJ,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,oBAAoB,+CAAkB;AACtC,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,SAAS,kDAAqB;AAC9B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa,4CAAe;AAC5B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,8DAAiC,yCAAyC,oDAAuB;AACrJ,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,8DAAiC;AACrF,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,8DAAiC;AACrF,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,8DAAiC;AACrF,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;AC9lGD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;;;AC9VD;AACmC;AACA;AACsD;AACR;;AAEjF,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,4BAA4B,kDAAqB;AACjD;AACA;AACA,eAAe,sDAAyB;AACxC,wBAAwB,mDAAsB;AAC9C;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qDAAqD,2DAA8B;AACnF;AACA,2BAA2B,kDAAqB;AAChD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qDAAqD,2DAA8B;AACnF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,wDAAwD,iGAA0B;AAClF;AACA,iCAAiC,kDAAqB;AACtD,oCAAoC,6CAAgB;;AAEpD;AACA,oDAAoD,yFAAsB;AAC1E;AACA,wBAAwB,kDAAqB;AAC7C,gCAAgC,6CAAgB;AAChD,yCAAyC;;AAEzC;AACA,oDAAoD,2DAA8B;AAClF;AACA;AACA;AACA,yCAAyC,0CAAa;AACtD;AACA;AACA;AACA,qCAAqC,4CAAe;AACpD,8BAA8B,qDAAwB;AACtD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qDAAqD,2DAA8B;AACnF;AACA,2BAA2B,kDAAqB;AAChD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qDAAqD,2DAA8B;AACnF;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sDAAsD,mDAAsB;AAC5E;AACA;AACA;AACA,IAAI;AACJ;AACA,sDAAsD,mDAAsB;AAC5E;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD,2DAA8B;AAClF;AACA;AACA;AACA,yCAAyC,0CAAa;AACtD;AACA;AACA;AACA,qCAAqC,4CAAe;AACpD,8BAA8B,kDAAqB;AACnD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,4CAA4C,mDAAsB;AAClE;AACA;AACA,gBAAgB,qDAAwB;AACxC;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C;AACA,GAAG;AACH;AACA;AACA;AACA,2CAA2C,iDAAoB;AAC/D;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,4DAA4D,wDAA2B;AACvF,2CAA2C,4CAAe;AAC1D,IAAI;AACJ;AACA,2CAA2C,iDAAoB;AAC/D;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,4DAA4D,wDAA2B;AACvF,2CAA2C,4CAAe;AAC1D;AACA,GAAG;AACH;AACA;AACA,4CAA4C,mDAAsB;AAClE,4BAA4B,4CAAe;;AAE3C;AACA,2DAA2D,wDAA2B;AACtF,0CAA0C,4CAAe;AACzD;AACA,uCAAuC,6CAAgB;;AAEvD;AACA,iEAAiE,wEAA2C;AAC5G,6CAA6C,6CAAgB;AAC7D,6CAA6C,oDAAuB;AACpE,4BAA4B,+CAAkB;AAC9C,yBAAyB,6CAAgB;AACzC;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,oBAAoB,+CAAkB;AACtC,GAAG;AACH;AACA;AACA;AACA,4DAA4D,uDAA0B;AACtF;AACA,SAAS,4CAAe;AACxB;AACA,SAAS,4CAAe;AACxB;AACA,SAAS,4CAAe;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,4DAA4D,uDAA0B;AACtF;AACA,SAAS,4CAAe;AACxB;AACA,SAAS,4CAAe;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,4DAA4D,wDAA2B;AACvF,2CAA2C,4CAAe;AAC1D;AACA,wCAAwC,6CAAgB;AACxD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qDAAqD,yFAAsB;AAC3E;AACA,yBAAyB,qDAAwB;AACjD,iCAAiC,6CAAgB;AACjD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sDAAsD,mDAAsB;AAC5E;AACA;AACA;AACA,IAAI;AACJ;AACA,sDAAsD,mDAAsB;AAC5E;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,4CAA4C,mDAAsB;AAClE,4BAA4B,4CAAe;AAC3C;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACliCA;AACmC;AACa;AACb;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;;AAEA,uDAAuD,oDAAuB;AAC9E;AACA;AACA;AACA;AACA,yBAAyB,4CAAe;AACxC;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAAe;AACrC;AACA;AACA;AACA;AACA;AACA,2BAA2B,+CAAkB;AAC7C;AACA;;AAEA;AACA;AACA,8CAA8C,oDAAuB;AACrE;AACA,uBAAuB,4CAAe;AACtC;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,mDAAsB;AAC5E,8BAA8B,4CAAe;AAC7C;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa,iDAAoB;AACjC,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA,2DAA2D,yDAA4B;AACvF;;AAEA;AACA,oDAAoD,wDAA2B;AAC/E;AACA;AACA;AACA,8BAA8B,0CAAa;;AAE3C;AACA,oDAAoD,oDAAuB;AAC3E;AACA;AACA,6BAA6B,4CAAe;AAC5C;AACA;AACA,wCAAwC,0CAAa;AACrD,qCAAqC;;AAErC;AACA;AACA;AACA,oDAAoD,8DAAiC;AACrF,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,oDAAuB;AAC9E;AACA;AACA;AACA,uDAAuD,uDAA0B;AACjF;AACA,oBAAoB,OAAO;AAC3B,2DAA2D,uDAA0B;AACrF;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,uBAAuB,4CAAe;AACtC;AACA;AACA,wBAAwB,8CAAiB,8BAA8B;AACvE,wBAAwB,4CAAe;AACvC,IAAI,mEAAsC;AAC1C,mBAAmB,qFAAyC;AAC5D;AACA,yBAAyB,+CAAkB;AAC3C;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,4DAA4D,yDAA4B;AACxF;AACA;;AAEA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD;AACA,0CAA0C,0CAAa;AACvD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD;AACA,0CAA0C,0CAAa;AACvD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,6CAA6C,2BAA2B,uFAAuF,gBAAgB,8BAA8B;;AAE7N;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B,uFAAuF,2EAA2E;;AAE7M;AACA,qBAAqB,8CAA8C;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,wCAAwC;AACxC;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAsB;AAC9C;AACA;AACA;AACA,mDAAmD,yDAA4B;AAC/E;AACA,sCAAsC,uDAA0B;AAChE;AACA;AACA,GAAG;AACH;AACA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,qDAAqD,mDAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,qDAAqD,mDAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD,0CAA0C,0CAAa;AACvD;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,qDAAqD,mDAAsB;AAC3E;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzoBA;AACmC;AACU;AACV;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;;AAExB;AACA,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;;AAExB;AACA,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;;AAExB;AACA,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB,GAAG,gEAAqB;AACxB;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,0DAA0D,wDAA2B;AACrF;AACA;AACA,oCAAoC,0CAAa;AACjD,0CAA0C,0CAAa;AACvD;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;AC/RD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA,oDAAoD,8DAAiC,yCAAyC,oDAAuB;AACrJ,kBAAkB,oDAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;;AC7vGD;AACmC;AACM;AACN;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2DAA2D,uDAA0B;AACrF;AACA,SAAS,4CAAe;AACxB;AACA,SAAS,4CAAe;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,+CAAkB;AACtC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2DAA2D,uDAA0B;AACrF;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA,SAAS,4CAAe;AACxB;AACA;AACA,SAAS,4CAAe;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA,iBAAiB,4CAAe;AAChC,gBAAgB,wDAA2B;AAC3C;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,+CAAkB;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAAe;AAChC,gBAAgB,wDAA2B;AAC3C;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,IAAI;AACJ;AACA;AACA,UAAU,qDAAwB;AAClC;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qDAAqD,8DAAiC;AACtF,mBAAmB,oDAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAAgB;AACjD;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,+CAAkB;AACtC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,iBAAiB,4CAAe;AAChC,oBAAoB,+CAAkB;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAAe;AAChC,oBAAoB,+CAAkB;AACtC;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,IAAI;AACJ;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sDAAsD,mDAAsB;AAC5E;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,sDAAsD,mDAAsB;AAC5E;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,4DAA4D,oDAAuB;AACnF;AACA;AACA,yCAAyC,kDAAqB;AAC9D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6DAA6D,oDAAuB;AACpF;AACA;AACA,0CAA0C,kDAAqB;AAC/D;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAAe;AAChC,gBAAgB,wDAA2B;AAC3C;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,4CAAe;AAC7B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,+EAAuC;AAClD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,+EAAuC;AAClD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,4EAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C,mDAAsB;AACnE,WAAW,+EAAuC;AAClD;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,oBAAoB,+CAAkB;AACtC,GAAG;AACH;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD,wDAA2B;AAC7E,iCAAiC,4CAAe;AAChD;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA,4CAA4C,mDAAsB;AAClE,4BAA4B,4CAAe;AAC3C;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,+CAAkB;AACtC,GAAG;AACH;AACA;AACA;AACA,6BAA6B,4CAAe;AAC5C,4BAA4B,4CAAe;AAC3C,4DAA4D,wDAA2B;AACvF;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAAe;AAChC,gBAAgB,wDAA2B;AAC3C;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH;AACA;AACA,4DAA4D,oDAAuB;AACnF;AACA;AACA,yCAAyC,kDAAqB;AAC9D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6DAA6D,oDAAuB;AACpF;AACA;AACA,0CAA0C,kDAAqB;AAC/D;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,+CAAkB;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,4CAA4C,mDAAsB;AAClE,yCAAyC,QAAQ,oBAAoB,QAAQ,yBAAyB,QAAQ;AAC9G,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,4EAAoC;AACvC,GAAG,4EAAoC;AACvC,GAAG,4EAAoC;AACvC;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,oBAAoB,+CAAkB;AACtC,GAAG;AACH;AACA;AACA;AACA;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,6CAA6C,mDAAsB;AACnE;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,kEAAkE,uDAA0B;AAC5F;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,+DAA+D,uDAA0B;AACzF;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA,SAAS,4CAAe;AACxB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;ACvvCD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,gBAAgB,kDAAqB;AACrC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,oBAAoB,4CAAe;AACnC,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM,QAAQ;AACd,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,oBAAoB,+CAAkB;AACtC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA;AACA,UAAU,qDAAwB;AAClC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;AC3SD;AACmC;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;AC9KD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;ACrhBD;AACmC;AACA;;AAEnC,oDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2DAA2D,8DAAiC;AAC5F,yBAAyB,oDAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,wDAAwD,8DAAiC;AACzF;AACA,sBAAsB,oDAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,UAAU,kDAAqB;AAC/B,IAAI;AACJ;AACA;AACA,cAAc,4CAAe;AAC7B;AACA,gBAAgB,qDAAwB;AACxC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,gBAAgB,wDAA2B;AAC3C,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;;;;;AClHD;AACmC;;AAEnC;AACA;AACA,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,oBAAoB;AAClC,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB,cAAc,cAAc;AAC5B,cAAc,iBAAiB;AAC/B,cAAc,oBAAoB;AAClC,cAAc,aAAa;AAC3B,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,sBAAsB;AACpC,cAAc,+DAA+D;AAC7E;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;;AAEA;AACA,aAAa,8KAA8K;AAC3L;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,oBAAoB;AAClC,cAAc,kCAAkC;AAChD,cAAc,QAAQ;AACtB,cAAc,4BAA4B;AAC1C;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB,cAAc,yCAAyC;AACvD,cAAc,UAAU;AACxB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,UAAU;AACxB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,yBAAyB;AACvC,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,sBAAsB;AACpC,cAAc,mCAAmC;AACjD,cAAc,UAAU;AACxB,cAAc,4BAA4B;AAC1C,cAAc,SAAS;AACvB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,iBAAiB;AAC/B,cAAc,oBAAoB;AAClC,cAAc,QAAQ;AACtB,cAAc,mBAAmB;AACjC,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,iBAAiB;AAC/B,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,iBAAiB;AAC/B,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA,cAAc,6BAA6B;AAC3C,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,mBAAmB;AACjC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,oBAAoB;AAClC,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC,cAAc,kCAAkC;AAChD,cAAc,kCAAkC;AAChD,cAAc,kCAAkC;AAChD,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,UAAU;AACxB,cAAc,oDAAoD;AAClE,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,cAAc;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B,YAAY,cAAc;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,iDAAoB;AACrE;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,iDAAoB;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,mDAAsB;AACvE;AACA;AACA,4BAA4B,0CAAa;AACzC;AACA;AACA,4BAA4B,0CAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,OAAO;AACtE;AACA,6DAA6D,uDAA0B,2BAA2B,EAAE;AACpH,yCAAyC,6CAAgB;AACzD;AACA,gDAAgD,mDAAsB;AACtE;AACA;AACA;AACA,OAAO;AACP;AACA,gDAAgD,mDAAsB;AACtE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,iDAAiD,sDAAyB;AAC1E;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,yDAA4B;AAC7E;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,kDAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD,mDAAsB;AACvE;AACA;AACA,0BAA0B,+CAAkB;AAC5C;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA,kBAAkB,4CAAe;AACjC;AACA;AACA;AACA,kBAAkB,4CAAe;AACjC;AACA;AACA;AACA,kBAAkB,4CAAe;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc,uDAA0B;AACxC,oBAAoB,+CAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,uDAA0B;AAC1E;AACA;AACA;AACA;;AAEA,+CAA+C,uDAA0B;AACzE;AACA,yBAAyB,0CAAa;AACtC;AACA;;AAEA,4CAA4C,uDAA0B;AACtE;AACA;AACA,sBAAsB,0CAAa;AACnC;AACA;AACA;;AAEA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA,+CAA+C,oDAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,wEAA2C;AAC1H;AACA;AACA,4DAA4D,6CAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sDAAyB;AAC7E;AACA;AACA;AACA;AACA,oCAAoC,6CAAgB;AACpD;AACA;AACA,6BAA6B,4CAAe;AAC5C;AACA;AACA;AACA,gCAAgC,+CAAkB;AAClD;AACA;AACA;AACA,sEAAsE,wEAA2C;AACjH;AACA,mDAAmD,6CAAgB;AACnE;AACA,wDAAwD,0DAA6B;AACrF;AACA;AACA,qCAAqC,6CAAgB;AACrD;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uDAA0B;AACzE;AACA;AACA;AACA,+CAA+C,oDAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,mDAAsB;AACrE;AACA,yBAAyB,oDAAuB;AAChD;AACA;AACA;AACA;AACA;AACA,+CAA+C,wEAA2C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8DAAiC;AAChF;AACA,kCAAkC,oDAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uDAA0B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA,iCAAiC,6CAAgB;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW,KAAK,cAAc;AACrE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;;;;;;ACnsBmC;AACD;;AAElC;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,8DAA8D,aAAa,MAAM,WAAW;AAC5F;AACA;AACA;AACA,8DAA8D,aAAa,MAAM,WAAW;AAC5F;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,8DAA8D,aAAa,MAAM,WAAW;AAC5F;AACA;AACA;AACA,8DAA8D,aAAa,MAAM,WAAW;AAC5F;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,SAAS;AACrB;AACA;AACA;AACA,GAAG,6DAAwB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,KAAK;AACL;AACA;AACA,eAAe,iDAAoB;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,kDAAqB;AACjC,kBAAkB,kDAAqB;AACvC,MAAM;AACN;AACA;AACA;AACA,YAAY,kDAAqB;AACjC;AACA,KAAK;AACL;AACA;AACA,kDAAkD,mDAAsB;AACxE;AACA;AACA,+BAA+B,+CAAkB;AACjD,iDAAiD,6CAAgB;AACjE;AACA;AACA,MAAM;AACN,mDAAmD,mDAAsB;AACzE,kDAAkD,6CAAgB;AAClE;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,2CAA2C,mDAAsB;AACjE,4CAA4C,UAAU,GAAG,KAAK,GAAG,UAAU,GAAG,SAAS;AACvF;AACA;AACA;AACA,wBAAwB,+CAAkB,oCAAoC;AAC9E,wBAAwB,+CAAkB,oCAAoC;AAC9E;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpPA;AACA;AACA;AAC0B;AACE;AACH;AACE;AACD;AACE;AACC;AACG;AACF;;AAE9B;AAC+C;AACO;AACA;AACL;AACE;AACD;AACL;AACD;;AAE5C;AAC2D;AACJ;AACD;AACJ;;AAEJ;AACJ;AACP;AACI;AACW;AACE;AACb;AACG;AACK;AACA;AACA;AACA;AACF;AACA;AACD;AACG;AACK;AACF;AACL;AACA;AACN;;;;;;;;;;;;;;;;;ACjDJ;;AAEnC;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,2CAA2C,kDAAqB;AAChE;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAe,2FAA2F;AACrI,2BAA2B,4CAAe,6FAA6F;AACvI,2BAA2B,4CAAe,mFAAmF;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClIkC;AACC;;AAEnC;AACA;AACA;AACO;;AAEP;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,wBAAwB,4DAAuB;AAC/C;AACA,sDAAsD,WAAW;AACjE;AACA;AACA,gBAAgB,kDAAqB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA;AACA;AACA,wBAAwB,4DAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzEA;AACmC;;AAEnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,iDAAoB;AACzE,gCAAgC,4CAAe;AAC/C;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA;AACA,yDAAyD,oDAAuB;AAChF,qDAAqD,sDAAyB;AAC9E;AACA;AACA;;AAEA,cAAc,uDAA0B;AACxC,kBAAkB,qDAAwB;;AAE1C;AACA,UAAU,uDAA0B,YAAY,uDAA0B;AAC1E;AACA;AACA,EAAE,yDAA4B;;AAE9B;AACA;AACA,mBAAmB,wDAA2B;AAC9C,gBAAgB,qDAAwB;AACxC,iBAAiB,qDAAwB;AACzC;AACA;AACA;AACA;AACA,GAAG,yDAA4B;AAC/B,GAAG,yDAA4B;AAC/B,GAAG,4DAA+B;AAClC;;AAEA,EAAE,2DAA8B;AAChC;AACA;;;;;;;;;;;;;;;;;;AC9EA;AACmC;AACD;;AAElC;AACA;AACA;AACA;AACO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAwB;AAC7C,wBAAwB,wDAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAA+B;AACnC,IAAI,yDAA4B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,gBAAgB;AAC5B,YAAY,mBAAmB;AAC/B,YAAY,SAAS;AACrB;AACA;AACA,8CAA8C,sDAAyB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B,YAAY,gBAAgB;AAC5B,YAAY,iBAAiB;AAC7B,YAAY,SAAS;AACrB;AACA;AACA,8CAA8C,sDAAyB;AACvE;AACA,sBAAsB,qDAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,yDAA4B;AAC/B;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA;AACA;AACA,wBAAwB,4DAAuB;AAC/C;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,+CAAkB;AAC/D;;;;;;;;;;;;;;;;;ACzMA;AACmC;;AAEnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,YAAY,gBAAgB;AAC5B,YAAY,gBAAgB;AAC5B,YAAY,iBAAiB;AAC7B,YAAY,iBAAiB;AAC7B,YAAY,oBAAoB;AAChC,YAAY,oBAAoB;AAChC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,qDAAwB;AACrD,2BAA2B,qDAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD,oDAAoD;;AAEpD;AACA,kBAAkB,qDAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qDAAwB;AACrC,aAAa,qDAAwB;AACrC,gBAAgB,wDAA2B;AAC3C;AACA;AACA;AACA;AACA,eAAe,uDAA0B;AACzC,eAAe,uDAA0B;AACzC,EAAE,mEAAsC;AACxC,EAAE,mEAAsC;AACxC,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,qDAAwB;AACpC;AACA;AACA;AACA,EAAE,yDAA4B;;AAE9B;AACA,sBAAsB,qDAAwB;AAC9C;AACA;AACA,cAAc,uDAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAsB;AAClC,YAAY,wDAA2B;AACvC;AACA;AACA,EAAE,mEAAsC;AACxC;AACA,EAAE,2DAA8B;AAChC,EAAE,2DAA8B;AAChC,EAAE,2DAA8B;AAChC,EAAE,4DAA+B;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;;AAE9B;AACA,mBAAmB,qDAAwB;AAC3C,qDAAqD,iDAAoB;AACzE;AACA,aAAa,qDAAwB;AACrC,sBAAsB,wDAA2B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAA4B;AAC9B,EAAE,4DAA+B;AACjC,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B,EAAE,yDAA4B;AAC9B;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChOA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA,8CAA8C;;WAE9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,iCAAiC,mCAAmC;WACpE;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UElDA;UACA;UACA;UACA,qFAAqF,6CAA6C;UAClI","sources":["webpack://asteroids/./src/app.html","webpack://asteroids/./src/components/asteroid_modals/asteroid_modals.html","webpack://asteroids/./src/components/asteroid_modals/modals/filters_modal/filters_modal.html","webpack://asteroids/./src/components/asteroid_modals/modals/learn_modal/learn_modal.html","webpack://asteroids/./src/components/countdown/countdown.html","webpack://asteroids/./src/components/definition_overlay/definition_overlay.html","webpack://asteroids/./src/components/navigation/navigation.html","webpack://asteroids/./src/components/splash_screen/splash_screen.html","webpack://asteroids/./src/components/time_slider/time_slider.html","webpack://asteroids/./src/components/watch_panel/watch_card.html","webpack://asteroids/../eyes/src/components/breadcrumb/breadcrumb.html","webpack://asteroids/../eyes/src/components/carousel/carousel.html","webpack://asteroids/../eyes/src/components/carousel/slide_template.html","webpack://asteroids/../eyes/src/components/carousel_panel/carousel_panel.html","webpack://asteroids/../eyes/src/components/checkbox/checkbox.html","webpack://asteroids/../eyes/src/components/clock/clock.html","webpack://asteroids/../eyes/src/components/clock_shortcut/clock_shortcut.html","webpack://asteroids/../eyes/src/components/kiosk_base/kiosk_base.html","webpack://asteroids/../eyes/src/components/layer_panel/layer_panel.html","webpack://asteroids/../eyes/src/components/load_icon/load_icon.html","webpack://asteroids/../eyes/src/components/overlay/overlay.html","webpack://asteroids/../eyes/src/components/search/search.html","webpack://asteroids/../eyes/src/components/settings/settings.html","webpack://asteroids/../eyes/src/components/share_modal/share_modal.html","webpack://asteroids/../eyes/src/components/story/blocks/buttons_block/buttons_block.html","webpack://asteroids/../eyes/src/components/story/blocks/checkbox_block/checkbox_block.html","webpack://asteroids/../eyes/src/components/story/blocks/description_block/description_block.html","webpack://asteroids/../eyes/src/components/story/blocks/hint_block/hint_block.html","webpack://asteroids/../eyes/src/components/story/blocks/image_block/image_block.html","webpack://asteroids/../eyes/src/components/story/blocks/replay_button_block/replay_button_block.html","webpack://asteroids/../eyes/src/components/story/blocks/title_block/title_block.html","webpack://asteroids/../eyes/src/components/story/blocks/toggle_block/toggle_block.html","webpack://asteroids/../eyes/src/components/time_controller/time_controller.html","webpack://asteroids/../eyes/src/components/toast/toast.html","webpack://asteroids/../eyes/src/components/tutorial_overlay/tutorial_overlay.html","webpack://asteroids/./src/assets/css/asteroid.css?6681","webpack://asteroids/./src/assets/css/clock.css?0190","webpack://asteroids/./src/assets/css/color.css?40f9","webpack://asteroids/./src/assets/css/font.css?c745","webpack://asteroids/./src/assets/css/grid.css?15ef","webpack://asteroids/./src/assets/css/icon.css?3963","webpack://asteroids/./src/assets/css/label.css?ec4b","webpack://asteroids/./src/assets/css/search.css?ebcf","webpack://asteroids/./src/assets/css/settings.css?0742","webpack://asteroids/./src/assets/css/viewport.css?b260","webpack://asteroids/./src/components/asteroid_modals/asteroid_modals.css?aedf","webpack://asteroids/./src/components/asteroid_modals/modals/filters_modal/filters_modal.css?3b85","webpack://asteroids/./src/components/asteroid_modals/modals/learn_modal/learn_modal.css?89f1","webpack://asteroids/./src/components/asteroid_panel/asteroid_panel.css?3301","webpack://asteroids/./src/components/breadcrumb/breadcrumb.css?349d","webpack://asteroids/./src/components/countdown/countdown.css?e315","webpack://asteroids/./src/components/definition_overlay/definition_overlay.css?95cb","webpack://asteroids/./src/components/following_panel/following_panel.css?1353","webpack://asteroids/./src/components/home_button/home_button.css?df5f","webpack://asteroids/./src/components/mission_panel/mission_panel.css?a265","webpack://asteroids/./src/components/navigation/navigation.css?6e78","webpack://asteroids/./src/components/splash_screen/splash_screen.css?6ee0","webpack://asteroids/./src/components/time_slider/time_slider.css?9aaf","webpack://asteroids/./src/components/watch_panel/watch_card.css?1879","webpack://asteroids/./src/components/watch_panel/watch_panel.css?d94f","webpack://asteroids/../eyes/src/assets/css/animation.css?ca28","webpack://asteroids/../eyes/src/assets/css/camera_follow.css?8c1f","webpack://asteroids/../eyes/src/assets/css/color.css?b62a","webpack://asteroids/../eyes/src/assets/css/components.css?0cc7","webpack://asteroids/../eyes/src/assets/css/font.css?cdea","webpack://asteroids/../eyes/src/assets/css/grid.css?c978","webpack://asteroids/../eyes/src/assets/css/grid_layout.css?53b1","webpack://asteroids/../eyes/src/assets/css/icon.css?699e","webpack://asteroids/../eyes/src/assets/css/label.css?6720","webpack://asteroids/../eyes/src/assets/css/layout.css?8631","webpack://asteroids/../eyes/src/assets/css/scrollbar.css?04de","webpack://asteroids/../eyes/src/assets/css/sprite.css?2b85","webpack://asteroids/../eyes/src/assets/css/style.css?1798","webpack://asteroids/../eyes/src/components/breadcrumb/breadcrumb.css?6973","webpack://asteroids/../eyes/src/components/carousel/carousel.css?131f","webpack://asteroids/../eyes/src/components/carousel_panel/carousel_panel.css?a48e","webpack://asteroids/../eyes/src/components/checkbox/checkbox.css?7aec","webpack://asteroids/../eyes/src/components/clock/clock.css?dc10","webpack://asteroids/../eyes/src/components/clock_shortcut/clock_shortcut.css?f02c","webpack://asteroids/../eyes/src/components/kiosk_base/kiosk_base.css?06b1","webpack://asteroids/../eyes/src/components/layer_panel/layer_panel.css?a7ed","webpack://asteroids/../eyes/src/components/load_icon/load_icon.css?a91e","webpack://asteroids/../eyes/src/components/overlay/overlay.css?b9f4","webpack://asteroids/../eyes/src/components/search/search.css?2feb","webpack://asteroids/../eyes/src/components/settings/settings.css?ea85","webpack://asteroids/../eyes/src/components/share_modal/share_modal.css?9ae3","webpack://asteroids/../eyes/src/components/story/blocks/buttons_block/buttons_block.css?de0c","webpack://asteroids/../eyes/src/components/story/blocks/checkbox_block/checkbox_block.css?25ed","webpack://asteroids/../eyes/src/components/story/blocks/description_block/description_block.css?e967","webpack://asteroids/../eyes/src/components/story/blocks/hint_block/hint_block.css?0fb9","webpack://asteroids/../eyes/src/components/story/blocks/image_block/image_block.css?0d50","webpack://asteroids/../eyes/src/components/story/blocks/replay_button_block/replay_button_block.css?d027","webpack://asteroids/../eyes/src/components/story/blocks/story_base_content_block/story_base_content_block.css?40ad","webpack://asteroids/../eyes/src/components/story/blocks/toggle_block/toggle_block.css?eaf9","webpack://asteroids/../eyes/src/components/story/story.css?7c7b","webpack://asteroids/../eyes/src/components/time_controller/time_controller.css?87d8","webpack://asteroids/../eyes/src/components/toast/toast.css?b288","webpack://asteroids/../eyes/src/components/tutorial_overlay/tutorial_overlay.css?e24e","webpack://asteroids/./src/app.js","webpack://asteroids/./src/assets/index.js","webpack://asteroids/./src/components/asteroid_menu_bottom/asteroid_menu_bottom.js","webpack://asteroids/./src/components/asteroid_menu_top/asteroid_menu_top.js","webpack://asteroids/./src/components/asteroid_modals/asteroid_modals.js","webpack://asteroids/./src/components/asteroid_modals/modals/filters_modal/filters_modal.js","webpack://asteroids/./src/components/asteroid_modals/modals/filters_modal/index.js","webpack://asteroids/./src/components/asteroid_modals/modals/index.js","webpack://asteroids/./src/components/asteroid_modals/modals/learn_modal/index.js","webpack://asteroids/./src/components/asteroid_modals/modals/learn_modal/learn_modal.js","webpack://asteroids/./src/components/asteroid_panel/asteroid_panel.js","webpack://asteroids/./src/components/breadcrumb/breadcrumb.js","webpack://asteroids/./src/components/countdown/countdown.js","webpack://asteroids/./src/components/definition_overlay/definition_overlay.js","webpack://asteroids/./src/components/following_panel/following_panel.js","webpack://asteroids/./src/components/home_button/home_button.js","webpack://asteroids/./src/components/mission_panel/mission_panel.js","webpack://asteroids/./src/components/navigation/navigation.js","webpack://asteroids/./src/components/search/search.js","webpack://asteroids/./src/components/settings/asteroids_settings.js","webpack://asteroids/./src/components/splash_screen/splash_screen.js","webpack://asteroids/./src/components/time_slider/time_slider.js","webpack://asteroids/./src/components/watch_panel/watch_card.js","webpack://asteroids/./src/components/watch_panel/watch_panel.js","webpack://asteroids/./src/configs/components_info.js","webpack://asteroids/./src/data/stories/asteroids_101.js","webpack://asteroids/./src/data/stories/asteroids_close_approach.js","webpack://asteroids/./src/data/stories/asteroids_missions.js","webpack://asteroids/./src/data/stories/index.js","webpack://asteroids/./src/internal.js","webpack://asteroids/./src/managers/filters_manager.js","webpack://asteroids/./src/managers/label_manager.js","webpack://asteroids/./src/managers/link_manager.js","webpack://asteroids/./src/managers/neos_manager.js","webpack://asteroids/./src/managers/selection_manager.js","webpack://asteroids/./src/managers/trail_manager.js","webpack://asteroids/./src/managers/watch_manager.js","webpack://asteroids/./src/neos.js","webpack://asteroids/./src/types.js","webpack://asteroids/./src/views/asteroid_view.js","webpack://asteroids/./src/views/base_view.js","webpack://asteroids/./src/views/following_view.js","webpack://asteroids/./src/views/home_view.js","webpack://asteroids/./src/views/index.js","webpack://asteroids/./src/views/mission_view.js","webpack://asteroids/./src/views/story_view.js","webpack://asteroids/./src/views/watch_view.js","webpack://asteroids//home/orourley/workspace/eyes/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack://asteroids/../eyes/src/app.js","webpack://asteroids/../eyes/src/assets/index.js","webpack://asteroids/../eyes/src/base_view.js","webpack://asteroids/../eyes/src/components/base_component.js","webpack://asteroids/../eyes/src/components/breadcrumb/breadcrumb.js","webpack://asteroids/../eyes/src/components/carousel/carousel.js","webpack://asteroids/../eyes/src/components/carousel/index.js","webpack://asteroids/../eyes/src/components/carousel_panel/carousel_panel.js","webpack://asteroids/../eyes/src/components/carousel_panel/index.js","webpack://asteroids/../eyes/src/components/checkbox/checkbox.js","webpack://asteroids/../eyes/src/components/checkbox/index.js","webpack://asteroids/../eyes/src/components/clock/clock.js","webpack://asteroids/../eyes/src/components/clock/index.js","webpack://asteroids/../eyes/src/components/clock_shortcut/clock_shortcut.js","webpack://asteroids/../eyes/src/components/clock_shortcut/index.js","webpack://asteroids/../eyes/src/components/kiosk_base/kiosk_base.js","webpack://asteroids/../eyes/src/components/layer_panel/layer_panel.js","webpack://asteroids/../eyes/src/components/load_icon/index.js","webpack://asteroids/../eyes/src/components/load_icon/load_icon.js","webpack://asteroids/../eyes/src/components/overlay/index.js","webpack://asteroids/../eyes/src/components/overlay/overlay.js","webpack://asteroids/../eyes/src/components/search/index.js","webpack://asteroids/../eyes/src/components/search/search.js","webpack://asteroids/../eyes/src/components/settings/index.js","webpack://asteroids/../eyes/src/components/settings/settings.js","webpack://asteroids/../eyes/src/components/share_modal/index.js","webpack://asteroids/../eyes/src/components/share_modal/share_modal.js","webpack://asteroids/../eyes/src/components/story/blocks/buttons_block/buttons_block.js","webpack://asteroids/../eyes/src/components/story/blocks/checkbox_block/checkbox_block.js","webpack://asteroids/../eyes/src/components/story/blocks/description_block/description_block.js","webpack://asteroids/../eyes/src/components/story/blocks/hint_block/hint_block.js","webpack://asteroids/../eyes/src/components/story/blocks/image_block/image_block.js","webpack://asteroids/../eyes/src/components/story/blocks/replay_button_block/replay_button_block.js","webpack://asteroids/../eyes/src/components/story/blocks/story_base_content_block/story_base_content_block.js","webpack://asteroids/../eyes/src/components/story/blocks/title_block/title_block.js","webpack://asteroids/../eyes/src/components/story/blocks/toggle_block/toggle_block.js","webpack://asteroids/../eyes/src/components/story/story.js","webpack://asteroids/../eyes/src/components/time_controller/index.js","webpack://asteroids/../eyes/src/components/time_controller/time_controller.js","webpack://asteroids/../eyes/src/components/toast/toast.js","webpack://asteroids/../eyes/src/components/tutorial_overlay/index.js","webpack://asteroids/../eyes/src/components/tutorial_overlay/tutorial_overlay.js","webpack://asteroids/../eyes/src/data/embed_controls.js","webpack://asteroids/../eyes/src/data/entity_spheroid_features.js","webpack://asteroids/../eyes/src/data/entity_spheroid_layers.js","webpack://asteroids/../eyes/src/index.js","webpack://asteroids/../eyes/src/internal.js","webpack://asteroids/../eyes/src/lib/distance_line_component.js","webpack://asteroids/../eyes/src/lib/orbiter_line_of_sight_component.js","webpack://asteroids/../eyes/src/lib/quadtree.js","webpack://asteroids/../eyes/src/managers/base_manager.js","webpack://asteroids/../eyes/src/managers/camera_follow_manager.js","webpack://asteroids/../eyes/src/managers/camera_manager.js","webpack://asteroids/../eyes/src/managers/camera_scripts.js","webpack://asteroids/../eyes/src/managers/comparison_manager.js","webpack://asteroids/../eyes/src/managers/content_manager.js","webpack://asteroids/../eyes/src/managers/ert_manager.js","webpack://asteroids/../eyes/src/managers/label_manager.js","webpack://asteroids/../eyes/src/managers/layer_manager.js","webpack://asteroids/../eyes/src/managers/route_manager.js","webpack://asteroids/../eyes/src/managers/scene_manager.js","webpack://asteroids/../eyes/src/managers/search_manager.js","webpack://asteroids/../eyes/src/managers/selection_manager.js","webpack://asteroids/../eyes/src/managers/spout_manager.js","webpack://asteroids/../eyes/src/managers/time_manager.js","webpack://asteroids/../eyes/src/managers/title_manager.js","webpack://asteroids/../eyes/src/managers/trail_manager.js","webpack://asteroids/../eyes/src/types.js","webpack://asteroids/../eyes/src/utils/animation_utils.js","webpack://asteroids/../eyes/src/utils/app_utils.js","webpack://asteroids/../eyes/src/utils/cancel_token.js","webpack://asteroids/../eyes/src/version.js","webpack://asteroids/../pioneer/engine/src/capabilities.js","webpack://asteroids/../pioneer/engine/src/config.js","webpack://asteroids/../pioneer/engine/src/downloader.js","webpack://asteroids/../pioneer/engine/src/engine.js","webpack://asteroids/../pioneer/engine/src/index.js","webpack://asteroids/../pioneer/engine/src/input.js","webpack://asteroids/../pioneer/engine/src/internal.js","webpack://asteroids/../pioneer/engine/src/material_manager.js","webpack://asteroids/../pioneer/engine/src/scene/components/atmosphere_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/base_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/camera_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/cmts_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/comet_tail_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/connected_sprite_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/div_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/dynamic_environment_map_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/gizmo_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/label_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/light_source_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/model_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/orbital_particles_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/particle_spray_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/rings_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/skybox_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/spheroid_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/spheroid_lod_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/spout_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/sprite_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/starfield_component.js","webpack://asteroids/../pioneer/engine/src/scene/components/trail_component.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/align_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/animdata_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/base_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/coverage_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/dynamo_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/fixed_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/fixed_to_parent_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/free_fly_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/ground_clamp_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/keyframe_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/look_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/model_animate_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/orbit_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/orbit_keyframe_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/orbital_elements_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/pick_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/roll_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/rotate_by_entity_orientation_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/rotate_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/scale_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/select_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/set_parent_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/spin_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/tap_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/transition_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/translate_controller.js","webpack://asteroids/../pioneer/engine/src/scene/controllers/zoom_controller.js","webpack://asteroids/../pioneer/engine/src/scene/entity.js","webpack://asteroids/../pioneer/engine/src/scene/entity_item.js","webpack://asteroids/../pioneer/engine/src/scene/scene.js","webpack://asteroids/../pioneer/engine/src/scene/types.js","webpack://asteroids/../pioneer/engine/src/shaders/basic.js","webpack://asteroids/../pioneer/engine/src/shaders/basic_alpha.js","webpack://asteroids/../pioneer/engine/src/shaders/connected_sprite.js","webpack://asteroids/../pioneer/engine/src/shaders/line.js","webpack://asteroids/../pioneer/engine/src/shaders/log_depth.js","webpack://asteroids/../pioneer/engine/src/shaders/plumes.js","webpack://asteroids/../pioneer/engine/src/shaders/sprite.js","webpack://asteroids/../pioneer/engine/src/shaders/sprite_particles.js","webpack://asteroids/../pioneer/engine/src/shaders/trail.js","webpack://asteroids/../pioneer/engine/src/texture_loader.js","webpack://asteroids/../pioneer/engine/src/texture_loader_compressed.js","webpack://asteroids/../pioneer/engine/src/utils/aer.js","webpack://asteroids/../pioneer/engine/src/utils/base_ref.js","webpack://asteroids/../pioneer/engine/src/utils/cache.js","webpack://asteroids/../pioneer/engine/src/utils/collection.js","webpack://asteroids/../pioneer/engine/src/utils/color.js","webpack://asteroids/../pioneer/engine/src/utils/component_ref.js","webpack://asteroids/../pioneer/engine/src/utils/controller_ref.js","webpack://asteroids/../pioneer/engine/src/utils/cube_map.js","webpack://asteroids/../pioneer/engine/src/utils/dependency_graph.js","webpack://asteroids/../pioneer/engine/src/utils/entity_ref.js","webpack://asteroids/../pioneer/engine/src/utils/fast_iterable.js","webpack://asteroids/../pioneer/engine/src/utils/fast_map.js","webpack://asteroids/../pioneer/engine/src/utils/fast_set.js","webpack://asteroids/../pioneer/engine/src/utils/fps.js","webpack://asteroids/../pioneer/engine/src/utils/freezable.js","webpack://asteroids/../pioneer/engine/src/utils/geometry.js","webpack://asteroids/../pioneer/engine/src/utils/interval.js","webpack://asteroids/../pioneer/engine/src/utils/lat_lon_alt.js","webpack://asteroids/../pioneer/engine/src/utils/line_mesh.js","webpack://asteroids/../pioneer/engine/src/utils/material_utils.js","webpack://asteroids/../pioneer/engine/src/utils/material_utils_phong.js","webpack://asteroids/../pioneer/engine/src/utils/material_utils_standard.js","webpack://asteroids/../pioneer/engine/src/utils/math_utils.js","webpack://asteroids/../pioneer/engine/src/utils/orbital_elements.js","webpack://asteroids/../pioneer/engine/src/utils/pool.js","webpack://asteroids/../pioneer/engine/src/utils/quaternion.js","webpack://asteroids/../pioneer/engine/src/utils/reader.js","webpack://asteroids/../pioneer/engine/src/utils/rect.js","webpack://asteroids/../pioneer/engine/src/utils/shader_fix.js","webpack://asteroids/../pioneer/engine/src/utils/sort.js","webpack://asteroids/../pioneer/engine/src/utils/sprite_particles.js","webpack://asteroids/../pioneer/engine/src/utils/texture_lod.js","webpack://asteroids/../pioneer/engine/src/utils/three_js_helper.js","webpack://asteroids/../pioneer/engine/src/utils/tile.js","webpack://asteroids/../pioneer/engine/src/utils/time_utils.js","webpack://asteroids/../pioneer/engine/src/utils/vector2.js","webpack://asteroids/../pioneer/engine/src/utils/vector3.js","webpack://asteroids/../pioneer/engine/src/utils/wait_until.js","webpack://asteroids/../pioneer/engine/src/version.js","webpack://asteroids/../pioneer/engine/src/viewport.js","webpack://asteroids/../pioneer/scripts/src/animation.js","webpack://asteroids/../pioneer/scripts/src/cameras.js","webpack://asteroids/../pioneer/scripts/src/components/annulus_component.js","webpack://asteroids/../pioneer/scripts/src/components/celestial_grid_component.js","webpack://asteroids/../pioneer/scripts/src/components/constellations_component.js","webpack://asteroids/../pioneer/scripts/src/components/disc_grid_component.js","webpack://asteroids/../pioneer/scripts/src/components/orbit_line_component.js","webpack://asteroids/../pioneer/scripts/src/components/shadow_cone_component.js","webpack://asteroids/../pioneer/scripts/src/components/torus_component.js","webpack://asteroids/../pioneer/scripts/src/components/wmts.js","webpack://asteroids/../pioneer/scripts/src/components/wmts_component.js","webpack://asteroids/../pioneer/scripts/src/controllers/keyframe_pointing_controller.js","webpack://asteroids/../pioneer/scripts/src/controllers/keyframe_spin_controller.js","webpack://asteroids/../pioneer/scripts/src/controllers/position_sum_controller.js","webpack://asteroids/../pioneer/scripts/src/controllers/zoom_fit_controller.js","webpack://asteroids/../pioneer/scripts/src/date_time.js","webpack://asteroids/../pioneer/scripts/src/entities/comets.js","webpack://asteroids/../pioneer/scripts/src/entities/comparison.js","webpack://asteroids/../pioneer/scripts/src/entities/earth_moon.js","webpack://asteroids/../pioneer/scripts/src/entities/earth_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/entity_utils.js","webpack://asteroids/../pioneer/scripts/src/entities/jupiter_irregular_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/jupiter_regular_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/lunar_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/mars_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/mars_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/mercury_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/minor_planets.js","webpack://asteroids/../pioneer/scripts/src/entities/neptune_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/outer_planet_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/planets_and_stars.js","webpack://asteroids/../pioneer/scripts/src/entities/saturn_major_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/saturn_minor_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/small_body_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/solar_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entities/uranus_major_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/uranus_minor_moons.js","webpack://asteroids/../pioneer/scripts/src/entities/venus_spacecraft.js","webpack://asteroids/../pioneer/scripts/src/entity.js","webpack://asteroids/../pioneer/scripts/src/features.js","webpack://asteroids/../pioneer/scripts/src/index.js","webpack://asteroids/../pioneer/scripts/src/mapping.js","webpack://asteroids/../pioneer/scripts/src/parenting.js","webpack://asteroids/../pioneer/scripts/src/placemarks.js","webpack://asteroids/../pioneer/scripts/src/scene_helpers.js","webpack://asteroids/../pioneer/scripts/src/transitions.js","webpack://asteroids/webpack/bootstrap","webpack://asteroids/webpack/runtime/chunk loaded","webpack://asteroids/webpack/runtime/compat get default export","webpack://asteroids/webpack/runtime/define property getters","webpack://asteroids/webpack/runtime/global","webpack://asteroids/webpack/runtime/hasOwnProperty shorthand","webpack://asteroids/webpack/runtime/make namespace object","webpack://asteroids/webpack/runtime/node module decorator","webpack://asteroids/webpack/runtime/jsonp chunk loading","webpack://asteroids/webpack/before-startup","webpack://asteroids/webpack/startup","webpack://asteroids/webpack/after-startup"],"sourcesContent":["// Module\nvar code = \"<header class=\\\"header\\\">\\n  <Breadcrumb></Breadcrumb>\\n  <AsteroidMenuTop></AsteroidMenuTop>\\n  <Search></Search>\\n</header>\\n<HomeButton></HomeButton>\\n<WatchPanel></WatchPanel>\\n<AsteroidPanel></AsteroidPanel>\\n<MissionPanel></MissionPanel>\\n<FollowingPanel></FollowingPanel>\\n<Story></Story>\\n<div id=\\\"float-mid\\\" class=\\\"float-mid\\\"></div>\\n<div id=\\\"float-mid-bottom\\\" class=\\\"float-mid-bottom\\\">\\n\\t<div id=\\\"time-slider-container\\\" class=\\\"time-container\\\">\\n\\t\\t<ClockShortcut></ClockShortcut>\\n\\t\\t<Clock></Clock>\\n\\t\\t<TimeSlider></TimeSlider>\\n\\t</div>\\n\\t<AsteroidMenuBottom></AsteroidMenuBottom>\\n</div>\\n<div id=\\\"float-right-bottom\\\" class=\\\"float-right-bottom\\\">\\n  <LayerPanel></LayerPanel>\\n  <AsteroidsSettings></AsteroidsSettings>\\n</div>\\n<AsteroidModals></AsteroidModals>\\n<DefinitionOverlay></DefinitionOverlay>\\n<SplashScreen></SplashScreen>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"asteroid-modals\\\" class=\\\"{{isVisibleClass}}\\\">\\n  <div class=\\\"asteroid-modals-backdrop\\\" onclick=\\\"close\\\"></div>\\n  <div class=\\\"asteroid-modal\\\">\\n    <div key=\\\"header\\\" class=\\\"asteroid-modal-header\\\">\\n      <h3 class=\\\"asteroid-modal-title\\\">{{title}}</h3>\\n      <div class=\\\"asteroid-modal-close\\\" onclick=\\\"close\\\">\\n        <span class=\\\"icon icon-close clickable\\\"></span>\\n      </div>\\n      <div class=\\\"asteroid-modal-collapse\\\" onclick=\\\"close\\\">\\n        <svg width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 22 22\\\" fill=\\\"none\\\">\\n          <path\\n            d=\\\"M14.234 8.4695L11 11.7035L7.766 8.4695L6.275 9.95L11 14.675L15.725 9.95L14.234 8.4695ZM11 0.5C5.204 0.5 0.5 5.204 0.5 11C0.5 16.796 5.204 21.5 11 21.5C16.796 21.5 21.5 16.796 21.5 11C21.5 5.204 16.796 0.5 11 0.5ZM11 19.4C6.359 19.4 2.6 15.641 2.6 11C2.6 6.359 6.359 2.6 11 2.6C15.641 2.6 19.4 6.359 19.4 11C19.4 15.641 15.641 19.4 11 19.4Z\\\"\\n            fill=\\\"currentColor\\\" />\\n        </svg>\\n      </div>\\n    </div>\\n    <div class=\\\"asteroid-modal-content scrollable\\\">\\n      <FiltersModal></FiltersModal>\\n      <LearnModal></LearnModal>\\n    </div>\\n  </div>\\n</div>\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div key=\\\"filtersModal\\\" class=\\\"filters-modal {{isVisibleClass}}\\\">\\n  <h4 class=\\\"filters-modal-description\\\">\\n    Apply a variety of filters to visualize the different groups of astronomical\\n    objects\\n  </h4>\\n  <div class=\\\"filters-modal-body\\\">\\n    <div class=\\\"filters-section\\\">\\n      <div class=\\\"filters-section-h\\\">Composition</div>\\n      <div class=\\\"filters-section-content\\\">\\n        <div class=\\\"filters-section-item\\\">\\n          <div class=\\\"filters-section-h2\\\">\\n            <div>\\n              <div>Asteroids</div>\\n              <div\\n                class=\\\"filters-help\\\"\\n                data-def=\\\"asteroid\\\"\\n                onclick=\\\"handleHelp\\\"\\n              >\\n                <svg width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 14 14\\\" fill=\\\"none\\\">\\n                  <path\\n                    d=\\\"M7.8127 8.62501H6.1877C6.1877 7.00001 7.1627 6.51251 7.8127 6.18751C8.05645 6.10626 8.21895 6.02501 8.38144 5.86251C8.4627 5.78126 8.6252 5.61876 8.4627 5.29376C8.3002 4.88751 7.8127 4.48126 7.08145 4.48126C5.94395 4.48126 5.78145 5.45626 5.7002 5.70001L4.0752 5.45626C4.15645 4.56251 4.8877 2.85626 7.0002 2.85626C8.3002 2.85626 9.4377 3.58751 9.9252 4.64376C10.2502 5.53751 10.0877 6.43126 9.4377 7.08126C9.1127 7.40626 8.7877 7.56876 8.4627 7.65001C7.9752 7.97501 7.8127 7.81251 7.8127 8.62501Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                  <path\\n                    d=\\\"M7 1.3125C10.1687 1.3125 12.6875 3.83125 12.6875 7C12.6875 10.1687 10.1687 12.6875 7 12.6875C3.83125 12.6875 1.3125 10.1687 1.3125 7C1.3125 3.83125 3.83125 1.3125 7 1.3125ZM7 0.5C3.425 0.5 0.5 3.425 0.5 7C0.5 10.575 3.425 13.5 7 13.5C10.575 13.5 13.5 10.575 13.5 7C13.5 3.425 10.575 0.5 7 0.5Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                  <path\\n                    d=\\\"M6.10645 9.4375H7.73145V11.0625H6.10645V9.4375Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                </svg>\\n              </div>\\n            </div>\\n            <div>Made up of rock, metals and dust</div>\\n          </div>\\n          <div>\\n            <div class=\\\"eyes-checkbox\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                id=\\\"filters-asteroids-checkbox\\\"\\n                onclick=\\\"handleAsteroidCheck\\\"\\n              />\\n              <label for=\\\"filters-asteroids-checkbox\\\"></label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"filters-section-item\\\">\\n          <div class=\\\"filters-section-h2\\\">\\n            <div>\\n              <div>Comets</div>\\n              <div class=\\\"filters-help\\\" data-def=\\\"comet\\\" onclick=\\\"handleHelp\\\">\\n                <svg width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 14 14\\\" fill=\\\"none\\\">\\n                  <path\\n                    d=\\\"M7.8127 8.62501H6.1877C6.1877 7.00001 7.1627 6.51251 7.8127 6.18751C8.05645 6.10626 8.21895 6.02501 8.38144 5.86251C8.4627 5.78126 8.6252 5.61876 8.4627 5.29376C8.3002 4.88751 7.8127 4.48126 7.08145 4.48126C5.94395 4.48126 5.78145 5.45626 5.7002 5.70001L4.0752 5.45626C4.15645 4.56251 4.8877 2.85626 7.0002 2.85626C8.3002 2.85626 9.4377 3.58751 9.9252 4.64376C10.2502 5.53751 10.0877 6.43126 9.4377 7.08126C9.1127 7.40626 8.7877 7.56876 8.4627 7.65001C7.9752 7.97501 7.8127 7.81251 7.8127 8.62501Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                  <path\\n                    d=\\\"M7 1.3125C10.1687 1.3125 12.6875 3.83125 12.6875 7C12.6875 10.1687 10.1687 12.6875 7 12.6875C3.83125 12.6875 1.3125 10.1687 1.3125 7C1.3125 3.83125 3.83125 1.3125 7 1.3125ZM7 0.5C3.425 0.5 0.5 3.425 0.5 7C0.5 10.575 3.425 13.5 7 13.5C10.575 13.5 13.5 10.575 13.5 7C13.5 3.425 10.575 0.5 7 0.5Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                  <path\\n                    d=\\\"M6.10645 9.4375H7.73145V11.0625H6.10645V9.4375Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                </svg>\\n              </div>\\n            </div>\\n            <div>Made up of rock, dust and frozen ices</div>\\n          </div>\\n          <div>\\n            <div class=\\\"eyes-checkbox\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                id=\\\"filters-comets-checkbox\\\"\\n                onclick=\\\"handleCometCheck\\\"\\n              />\\n              <label for=\\\"filters-comets-checkbox\\\"></label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"filters-section\\\">\\n      <div class=\\\"filters-section-h\\\">Potential Threats</div>\\n      <div class=\\\"filters-section-content\\\">\\n        <div class=\\\"filters-section-item\\\">\\n          <div class=\\\"filters-section-h2\\\">\\n            <div>\\n              <div>PHOs</div>\\n              <div class=\\\"filters-help\\\" data-def=\\\"pho\\\" onclick=\\\"handleHelp\\\">\\n                <svg width=\\\"18\\\" height=\\\"18\\\" viewBox=\\\"0 0 14 14\\\" fill=\\\"none\\\">\\n                  <path\\n                    d=\\\"M7.8127 8.62501H6.1877C6.1877 7.00001 7.1627 6.51251 7.8127 6.18751C8.05645 6.10626 8.21895 6.02501 8.38144 5.86251C8.4627 5.78126 8.6252 5.61876 8.4627 5.29376C8.3002 4.88751 7.8127 4.48126 7.08145 4.48126C5.94395 4.48126 5.78145 5.45626 5.7002 5.70001L4.0752 5.45626C4.15645 4.56251 4.8877 2.85626 7.0002 2.85626C8.3002 2.85626 9.4377 3.58751 9.9252 4.64376C10.2502 5.53751 10.0877 6.43126 9.4377 7.08126C9.1127 7.40626 8.7877 7.56876 8.4627 7.65001C7.9752 7.97501 7.8127 7.81251 7.8127 8.62501Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                  <path\\n                    d=\\\"M7 1.3125C10.1687 1.3125 12.6875 3.83125 12.6875 7C12.6875 10.1687 10.1687 12.6875 7 12.6875C3.83125 12.6875 1.3125 10.1687 1.3125 7C1.3125 3.83125 3.83125 1.3125 7 1.3125ZM7 0.5C3.425 0.5 0.5 3.425 0.5 7C0.5 10.575 3.425 13.5 7 13.5C10.575 13.5 13.5 10.575 13.5 7C13.5 3.425 10.575 0.5 7 0.5Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                  <path\\n                    d=\\\"M6.10645 9.4375H7.73145V11.0625H6.10645V9.4375Z\\\"\\n                    fill=\\\"currentColor\\\"\\n                  />\\n                </svg>\\n              </div>\\n            </div>\\n            <div>Potentially hazardous objects</div>\\n          </div>\\n          <div>\\n            <div class=\\\"eyes-toggle\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                id=\\\"filters-phos-toggle\\\"\\n                onclick=\\\"handlePHOToggle\\\"\\n              />\\n              <label for=\\\"filters-phos-toggle\\\"></label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"filters-modal-footer\\\">\\n    <div class=\\\"filters-modal-count\\\"></div>\\n    <button class=\\\"filters-modal-reset\\\" onclick=\\\"handleResetFilters\\\">\\n      Clear all filters\\n    </button>\\n  </div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"learn-modal {{isVisibleClass}}\\\">\\n  <h4 class=\\\"learn-modal-description\\\">\\n    Take a deeper dive into Asteroids with our interactive scrollable stories\\n  </h4>\\n  <div\\n    key=\\\"asteroidLearnModalBody\\\"\\n    id=\\\"asteroid-learn-modal-body\\\"\\n    class=\\\"learn-modal-body\\\"\\n  ></div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"countdown {{isVisibleClass}}\\\">\\n\\t<span class=\\\"countdown-title small semi\\\">LIVE COUNTDOWN</span>\\n\\t<div class=\\\"digits-container\\\">\\n\\t\\t<h5 class=\\\"digit t-text semi\\\">{{tText}}</h5>\\n\\t\\t<div class=\\\"digit-block days\\\">\\n\\t\\t\\t<h3 class=\\\"digit\\\">{{numDays}}</h3>\\n\\t\\t\\t<span class=\\\"digit-unit tiny semi\\\">DAYS</span>\\n\\t\\t</div>\\n\\t\\t<h4 class=\\\"digit digit-colon semi\\\">:</h4>\\n\\t\\t<div class=\\\"digit-block hours\\\">\\n\\t\\t\\t<h3 class=\\\"digit\\\">{{numHours}}</h3>\\n\\t\\t\\t<span class=\\\"digit-unit tiny semi\\\">HOURS</span>\\n\\t\\t</div>\\n\\t\\t<h4 class=\\\"digit digit-colon semi\\\">:</h4>\\n\\t\\t<div class=\\\"digit-block minutes\\\">\\n\\t\\t\\t<h3 class=\\\"digit\\\">{{numMinutes}}</h3>\\n\\t\\t\\t<span class=\\\"digit-unit tiny semi\\\">MINUTES</span>\\n\\t\\t</div>\\n\\t\\t<h4 class=\\\"digit digit-colon semi\\\">:</h4>\\n\\t\\t<div class=\\\"digit-block seconds\\\">\\n\\t\\t\\t<h3 class=\\\"digit\\\">{{numSeconds}}</h3>\\n\\t\\t\\t<span class=\\\"digit-unit tiny semi\\\">SECONDS</span>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"definition-overlay\\\" class=\\\"definition-overlay {{isVisibleClass}}\\\" onclick=\\\"_handleOutsideClick\\\">\\n\\t<div class=\\\"definition-container\\\" onclick=\\\"_handleContainerClick\\\">\\n\\t\\t<div class=\\\"definition-header\\\">\\n\\t\\t\\t<div class=\\\"definition-info\\\"><span class=\\\"icon icon-info\\\"></span></div>\\n\\t\\t\\t<h4 class=\\\"definition-title\\\">{{title}}</h4>\\n\\t\\t\\t<div class=\\\"definition-close\\\" onclick=\\\"_handleOutsideClick\\\"><span class=\\\"icon icon-close clickable\\\"></span></div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"definition-content os-host-flexbox scrollable\\\" key=\\\"contentEl\\\">{{content}}</div>\\n\\t\\t<div class=\\\"definition-footer\\\">\\n\\t\\t\\t<div class=\\\"definition-divider\\\"><span class=\\\"x-small\\\">RELATED TERMS</span></div>\\n\\t\\t\\t<div class=\\\"definition-related\\\" key=\\\"relatedEl\\\"></div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<nav key=\\\"list\\\" class=\\\"navigation menu-div {{position}} {{isVisibleClass}}\\\"></nav>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"splash-screen\\\" key=\\\"splashScreen\\\">\\n\\t<div class=\\\"splash-screen-wrapper\\\">\\n\\t\\t<div class=\\\"splash-screen-stars1\\\" key=\\\"splashScreenStars1\\\"></div>\\n\\t\\t<div class=\\\"splash-screen-stars2\\\" key=\\\"splashScreenStars2\\\"></div>\\n\\t\\t<div class=\\\"splash-screen-asteroid\\\" key=\\\"splashScreenAsteroid\\\"></div>\\n\\t\\t<div class=\\\"splash-screen-logo\\\" key=\\\"splashScreenLogo\\\"></div>\\n\\t\\t<div class=\\\"splash-screen-text\\\" key=\\\"splashScreenText\\\">\\n\\t\\t\\t<div key=\\\"splashScreenTextEyes\\\">Eyes</div>\\n\\t\\t\\t<div key=\\\"splashScreenTextOn\\\">on</div>\\n\\t\\t\\t<div key=\\\"splashScreenTextAsteroids\\\">Asteroids</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"splash-screen-enter-background\\\" key=\\\"splashScreenEnterBackground\\\"></div>\\n\\t\\t<div class=\\\"splash-screen-enter\\\" key=\\\"splashScreenEnter\\\">\\n\\t\\t\\t<div class=\\\"splash-screen-swipe\\\">\\n\\t\\t\\t\\t<div class=\\\"splash-screen-swipe-text\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"splash-screen-swipe-arrow\\\" key=\\\"splashScreenSwipeArrow\\\">\\n\\t\\t\\t\\t\\t<svg width=\\\"67\\\" height=\\\"31\\\" viewBox=\\\"0 0 67 31\\\" fill=\\\"none\\\">\\n\\t\\t\\t\\t\\t\\t<path d=\\\"M53.8254 1.02176C54.1822 0.794206 54.6633 0.666626 55.1646 0.666626C55.6659 0.666626 56.147 0.794206 56.5038 1.02176C56.6796 1.13365 56.8192 1.26703 56.9145 1.41413C57.0097 1.56122 57.0588 1.7191 57.0588 1.87857C57.0588 2.03804 57.0097 2.19592 56.9145 2.34302C56.8192 2.49011 56.6796 2.62349 56.5038 2.73539L34.8686 16.5823C34.5118 16.8099 34.0307 16.9375 33.5294 16.9375C33.0281 16.9375 32.547 16.8099 32.1902 16.5823L10.555 2.73539C10.3792 2.62349 10.2396 2.49011 10.1444 2.34302C10.0491 2.19592 10 2.03804 10 1.87857C10 1.7191 10.0491 1.56122 10.1444 1.41413C10.2396 1.26703 10.3792 1.13365 10.555 1.02176C10.9118 0.794206 11.3929 0.666626 11.8942 0.666626C12.3955 0.666626 12.8766 0.794206 13.2334 1.02176L33.5308 13.6502L53.8254 1.02176Z\\\" fill=\\\"currentColor\\\" fill-opacity=\\\"0.8\\\"/>\\n\\t\\t\\t\\t\\t\\t<path d=\\\"M61.8921 8.43787C62.3908 8.12383 63.0632 7.94775 63.7638 7.94775C64.4643 7.94775 65.1367 8.12383 65.6354 8.43787C65.881 8.5923 66.0761 8.77637 66.2093 8.97938C66.3424 9.18238 66.411 9.40027 66.411 9.62035C66.411 9.84044 66.3424 10.0583 66.2093 10.2613C66.0761 10.4643 65.881 10.6484 65.6354 10.8028L35.3989 29.9129C34.9002 30.227 34.2278 30.4031 33.5273 30.4031C32.8267 30.4031 32.1544 30.227 31.6557 29.9129L1.41921 10.8028C1.17355 10.6484 0.978457 10.4643 0.845295 10.2613C0.712132 10.0583 0.643555 9.84044 0.643555 9.62035C0.643555 9.40027 0.712132 9.18238 0.845295 8.97938C0.978457 8.77637 1.17355 8.5923 1.41921 8.43787C1.91791 8.12383 2.59028 7.94775 3.29082 7.94775C3.99137 7.94775 4.66374 8.12383 5.16244 8.43787L33.5292 25.8664L61.8921 8.43787Z\\\" fill=\\\"currentColor\\\"/>\\n\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"time-slider\\\">\\n\\t<button key=\\\"realtimeEl\\\" class=\\\"realtime {{realtimeVisibleClass}}\\\" onclick=\\\"_onRealtimeClick\\\"></button>\\n\\t<div key=\\\"iconEl\\\" class=\\\"slider-icon\\\"></div>\\n\\t<div key=\\\"lineEl\\\" class=\\\"slider-line\\\"></div>\\n</div>;\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"watch-card\\\">\\n\\t<div class=\\\"text-group\\\">\\n\\t\\t<h3 class=\\\"semi\\\">{{title}}</h3>\\n\\t\\t<div class=\\\"date-block\\\">\\n\\t\\t\\t<span class=\\\"date-label small\\\">DATE</span>\\n\\t\\t\\t<div class=\\\"date-text\\\">\\n\\t\\t\\t\\t<h5 class=\\\"date-day semi\\\">{{date}}</h5>\\n\\t\\t\\t\\t<span class=\\\"date-time small\\\">{{time}}</span>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t\\t<div class=\\\"distance-block\\\">\\n\\t\\t\\t<span class=\\\"distance-label small\\\">DISTANCE</span>\\n\\t\\t\\t<div class=\\\"distance-text\\\">\\n\\t\\t\\t\\t<h5 class=\\\"distance-value semi\\\">{{distance}}</h5>\\n\\t\\t\\t\\t<h5 class=\\\"distance-unit clickable\\\" onclick=\\\"handleToggleUnit\\\">{{distanceUnit}}</h5>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"rock-group\\\">\\n\\t\\t<div class=\\\"icon rock\\\"></div>\\n\\t\\t<div class=\\\"icon ruler\\\"></div>\\n\\t\\t<div class=\\\"diameter-text\\\">\\n\\t\\t\\t<span class=\\\"diameter-value small semi\\\">{{diameter}}</span>\\n\\t\\t\\t<span class=\\\"diameter-unit small clickable\\\" onclick=\\\"handleToggleUnit\\\">{{diameterUnit}}</span>\\n\\t\\t\\t<span class=\\\"diameter-estimated\\\">{{diameterEstimatedText}}</span>\\n\\t\\t</div>\\n\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<nav class=\\\"breadcrumb semi\\\">\\n\\t<nav key=\\\"static\\\" class=\\\"container clickable home {{isHomeActiveClass}}\\\" onclick=\\\"_goToHome\\\">\\n\\t\\t<span key=\\\"staticLogo\\\" class=\\\"icon icon-nasa-logo\\\"></span>\\n\\t\\t<h1 class=\\\"text uppercase\\\">{$title}</h1>\\n\\t</nav>\\n</nav>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"carousel-container {{isVisibleClass}} {{slideType}}\\\">\\n\\t<button class=\\\"close-button clickable {{isCloseButtonVisibleClass}}\\\" onclick=\\\"close\\\">\\n\\t\\t<span class=\\\"text\\\">{{closeButtonText}}</span>\\n\\t\\t<span class=\\\"icon icon-close\\\"></span>\\n\\t</button>\\n\\t<div class=\\\"progress {{slideType}}\\\">\\n\\t\\t<span key=\\\"progress\\\" class=\\\"icon icon-triangle\\\"></span>\\n\\t</div>\\n\\t<div key=\\\"carousel\\\" class=\\\"carousel {{collapseClass}} {{isScrollingClass}} {{slideType}}\\\">\\n\\t\\t<div class=\\\"track\\\" key=\\\"track\\\"></div>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"slide hidden {$type}\\\">\\n\\t<div class=\\\"container {{collapseClass}}\\\">\\n\\t\\t<div class=\\\"container-wrapper\\\">\\n\\t\\t\\t<div class=\\\"mobile-hint small\\\">\\n\\t\\t\\t\\t<span class=\\\"icon icon-greater up clickable\\\" onclick=\\\"goToPrevSlide\\\"></span>\\n\\t\\t\\t\\t<span class=\\\"hint-text\\\">{$hintText}</span>\\n\\t\\t\\t\\t<span class=\\\"icon icon-greater down clickable\\\" onclick=\\\"goToNextSlide\\\"></span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"content-container\\\">\\n\\t\\t\\t\\t<div class=\\\"content-wrapper\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"content\\\"></div>\\n\\t\\t\\t\\t\\t<div class=\\\"controls {{isControlsVisibleClass}}\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"icon icon-clock clickable\\\" onclick=\\\"_onControlsToggle\\\"></button>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"icon collapse-button clickable {{collapseButtonClass}}\\\" onclick=\\\"_toggleCollapse\\\"></button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button class=\\\"navigation-button replay mobile clickable\\\" onclick=\\\"goToFirstSlide\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"icon {$replayButtonIcon}\\\"></span>\\n\\t\\t\\t\\t\\t\\t{$replayButtonText}\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"navigation-button next clickable\\\" onclick=\\\"goToNextSlide\\\">\\n\\t\\t\\t\\t{$nextButtonText}\\n\\t\\t\\t\\t<span class=\\\"icon {$nextButtonIcon}\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"navigation-button replay clickable\\\" onclick=\\\"goToFirstSlide\\\">\\n\\t\\t\\t\\t<span class=\\\"icon {$replayButtonIcon}\\\"></span>\\n\\t\\t\\t\\t{$replayButtonText}\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"collapse-container {{collapseClass}}\\\">\\n\\t\\t<button class=\\\"mobile-collapse icon clickable {{collapseButtonClass}}\\\" onclick=\\\"_toggleCollapse\\\"></button>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<section id=\\\"panel-container\\\" class=\\\"{{panelTypeClass}} {{isVisibleClass}} {{isExpandedClass}}\\\">\\n\\n\\t<!-- Simple panel (collapsed) -->\\n\\t<div class=\\\"panel-simple clickable\\\" onclick=\\\"expand\\\">\\n\\t\\t<div class=\\\"expand-button\\\">\\n\\t\\t\\t<div class=\\\"icon circle-arrow\\\"></div>\\n\\t\\t</div>\\n\\t\\t<h5 class=\\\"simple-pretitle\\\">{{preTitle}}</h5>\\n\\t\\t<h4 class=\\\"simple-title\\\">{{title}}</h4>\\n\\t</div>\\n\\n\\t<!-- Main panel (expanded) -->\\n\\t<div class=\\\"panel-main\\\">\\n\\n\\t\\t<div class=\\\"panel-header\\\">\\n\\t\\t\\t<div class=\\\"header-title\\\">\\n\\t\\t\\t\\t<div class=\\\"title-icon icon icon-large {{headerIconClass}}\\\"></div>\\n\\t\\t\\t\\t<h4 class=\\\"title-text\\\">{{title}}</h4>\\n\\t\\t\\t\\t<div class=\\\"collapse-button clickable\\\" onclick=\\\"collapse\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"icon circle-arrow\\\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<h5 class=\\\"header-caption {{captionClass}}\\\">{{caption}}</h5>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Carousel content -->\\n\\t\\t<div key=\\\"content\\\" class=\\\"panel-content\\\">\\n\\t\\t\\t<nav key=\\\"tabsContainer\\\" class=\\\"tabs-container {{tabsVisibleClass}} {{tabNumClass}}\\\"></nav>\\n\\t\\t\\t<div class=\\\"swiper {{carouselClass}}\\\">\\n\\t\\t\\t\\t<div key=\\\"swiperSlides\\\" class=\\\"swiper-wrapper\\\"></div>\\n\\n\\n\\t\\t\\t\\t<div class=\\\"swiper-pagination {{paginationClass}}\\\"></div>\\n\\n\\t\\t\\t\\t<div class=\\\"swiper-button-prev icon prev-arrow {{prevButtonClass}}\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"swiper-button-next icon next-arrow {{nextButtonClass}}\\\"></div>\\n\\n\\t\\t\\t\\t<div key=\\\"bullets\\\" class=\\\"bullet-container\\\"></div>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\n\\n</section>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<li class=\\\"checkbox-option clickable {{checkboxClass}} {{isCheckedClass}}\\\">\\n\\t<span key=\\\"icon\\\" class=\\\"icon checkbox bg-color {{iconCheckmarkClass}} {{colorClass}}\\\"></span>\\n\\t<span key=\\\"text\\\" class=\\\"text {{textClass}}\\\">{{text}}</span>\\n</li>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<time class=\\\"clock {{isVisibleClass}}\\\">\\n\\t<div class=\\\"datetime-container {{alert}}\\\">\\n\\t\\t<div key=\\\"displayContainer\\\" class=\\\"display-container\\\">\\n\\t\\t\\t<div key=\\\"date\\\" class=\\\"date {{isDateVisibleClass}} monospace\\\" onclick=\\\"onDateTimeClick\\\">{{date}}</div>\\n\\t\\t\\t<div key=\\\"time\\\" class=\\\"time {{isTimeVisibleClass}} monospace\\\" onclick=\\\"onDateTimeClick\\\">{{time}}</div>\\n\\t\\t\\t<div key=\\\"meridiem\\\" class=\\\"meridiem {{isMeridiemVisibleClass}} monospace\\\" onclick=\\\"onDateTimeClick\\\">{{meridiem}}</div>\\n\\t\\t</div>\\n\\t\\t<form key=\\\"timeForm\\\" class=\\\"hidden\\\" method=\\\"post\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\">\\n\\t\\t\\t<input key=\\\"timeInput\\\" type=\\\"text\\\" name=\\\"hour\\\" class=\\\"hour-input\\\" placeholder=\\\"hour\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" size=\\\"25\\\"></input>\\n\\t\\t</form>\\n\\t</div>\\n</time>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<nav class=\\\"clock-shortcut shortcut {{isVisibleClass}}\\\">\\n\\t<div class=\\\"{{replayClass}} replay-container clickable\\\" onclick=\\\"_replay\\\" key=\\\"replayContainer\\\">\\n\\t\\t<span class=\\\"icon {{replayIcon}}\\\" key=\\\"iconReplay\\\"></span>\\n\\t\\t<div class=\\\"replay text semi\\\" key=\\\"replay\\\">Replay</div>\\n\\t</div>\\n\\t<div class=\\\"{{liveContainerClass}} live-container container\\\" onclick=\\\"backToLive\\\" key=\\\"liveContainer\\\" data-tippy-content=\\\"Reset time to live.\\\">\\n\\t\\t<span class=\\\"icon {{liveIcon}}\\\" key=\\\"iconLive\\\"></span>\\n\\t\\t<div class=\\\"{{liveClass}} text\\\" key=\\\"live\\\">{{liveText}}</div>\\n\\t</div>\\n</nav>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div key=\\\"kioskContainer\\\" class='kiosk-container {{isVisibleClass}}' onclick=\\\"onWindowInteract\\\" ontouchstart=\\\"onWindowInteract\\\">\\n\\t<div key=\\\"kioskLoadingText\\\" class='loading-text {{loadingTextVisibleClass}}'>\\n\\t\\tStarting experience...\\n\\t</div>\\n\\t<div key=\\\"kioskSessionEnd\\\" class=\\\"session-end-container {{sessionEndVisibleClass}}\\\">\\n\\t\\t<div key=\\\"sessionEndButtons\\\" class=\\\"session-end-buttons-container\\\">\\n\\t\\t\\t<div class=\\\"session-ended-msg\\\">\\n\\t\\t\\t\\tThis session has ended\\n\\t\\t\\t</div>\\n\\t\\t\\t<div key=\\\"kioskStartOverBtn\\\" class='kiosk-btn session-end-btn {{forceRestartClass}}' onclick=\\\"sessionStartOverButtonClick\\\" ontouchstart=\\\"sessionStartOverButtonClick\\\">\\n\\t\\t\\t\\tSTART OVER\\n\\t\\t\\t</div>\\n\\t\\t\\t<div key=\\\"kioskContinueBtn\\\" class='kiosk-btn session-end-btn {{continueButtonVisibleClass}}'>\\n\\t\\t\\t\\tCONTINUE\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div key=\\\"kioskAutoplay\\\" class=\\\"autoplay-container {{autoplayVisibleClass}}\\\">\\n\\t\\t<div class='kiosk-btn touch-to-start-btn'>\\n\\t\\t\\tTOUCH TO START\\n\\t\\t</div>\\n\\t</div>\\n\\t<div key=\\\"kioskSessionTimer\\\" class=\\\"session-timer-container {{sessionTimerVisibleClass}}\\\">\\n\\t\\t<div class=\\\"session-countdown-timer\\\">Time left: </div>\\n\\t\\t<Clock id=\\\"kioskSessionClock\\\" class=\\\"session-countdown-timer {{isKioskCountdownClass}}\\\"></Clock>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"layer-panel {{isVisibleClass}}\\\" id=\\\"layer-panel\\\">\\n\\t<div class=\\\"header\\\" onclick=\\\"hide\\\">\\n\\t\\t<h5 class=\\\"title\\\">Layers</h5>\\n\\t\\t<button class=\\\"icon icon-greater clickable close\\\"></button>\\n\\t</div>\\n\\t<div key=\\\"layerPanelBody\\\">\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"load-icon {{isVisibleClass}}\\\">\\n\\t<div class=\\\"bg face\\\"></div>\\n\\t<div class=\\\"front face\\\"></div>\\n\\t<div class=\\\"left face\\\"></div>\\n\\t<div class=\\\"top face\\\"></div>\\n\\t<div class=\\\"right face\\\"></div>\\n\\t<div class=\\\"bottom face\\\"></div>\\n\\t<div class=\\\"text\\\">Loading</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"overlay-container\\\">\\n\\t<button class=\\\"open-button icon icon-info clickable {{isOpenButtonVisibleClass}}\\\" onclick=\\\"show\\\"></button>\\n\\t<div key=\\\"overlay\\\" class=\\\"overlay {{isVisibleClass}}\\\">\\n\\t\\t<div key=\\\"overlayContent\\\" class=\\\"container\\\"></div>\\n\\t\\t<button class=\\\"close-button icon icon-close clickable\\\" onclick=\\\"hide\\\"></button>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"search {{isVisibleClass}}\\\">\\n\\t<span class=\\\"icon icon-search clickable {{magClass}}\\\" onclick=\\\"onIconClick\\\"></span>\\n\\t<div class=\\\"{{searchClass}} {{focusedClass}}\\\">\\n\\t\\t<div class=\\\"cover\\\" onclick=\\\"reset\\\"></div>\\n\\t\\t<div key=\\\"container\\\" class=\\\"bar\\\">\\n\\t\\t\\t<span class=\\\"icon icon-search clickable\\\"></span>\\n\\t\\t\\t<input key=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"{$placeholderText}\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" oninput=\\\"_find\\\" onfocus=\\\"onInputFocus\\\" onkeydown=\\\"keydown\\\"></input>\\n\\t\\t\\t<span class=\\\"close icon icon-close clickable search-close-icon\\\" onclick=\\\"reset\\\"></span>\\n\\t\\t\\t<div class=\\\"results-container\\\">\\n\\t\\t\\t\\t<div key=\\\"results\\\" class=\\\"scrollable results gradient\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<span class=\\\"search-info tiny {{allowInfoClass}}\\\">{{searchInfo}}</span>\\n\\t\\t\\t<div class=\\\"featured gradient scrollable {{allowFeaturedClass}} {{isFeaturedVisibleClass}}\\\">\\n\\t\\t\\t\\t<ul key=\\\"featured\\\"></ul>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"settings {{isVisibleClass}} {{orientationClass}}\\\">\\n\\t<div key=\\\"container\\\" class=\\\"container {{containerClass}}\\\">\\n\\t\\t<div key=\\\"content\\\" class=\\\"content\\\">\\n\\t\\t\\t<button class=\\\"clickable icon icon-box {{allowInfoPanelClass}}\\\" onclick=\\\"toggleInfoPanel\\\" data-tippy-content=\\\"Show info panel\\\" aria-label=\\\"show info panel\\\">\\n\\t\\t\\t\\t<span class=\\\"icon {{infoButton}}\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"clickable icon icon-layers {{allowLayersClass}}\\\" onclick=\\\"toggleLayers\\\" data-tippy-content=\\\"Toggle layers\\\" aria-label=\\\"toggle layers\\\"></button>\\n\\t\\t\\t<button class=\\\"clickable icon {{unitButton}} {{allowToggleUnitClass}}\\\" onclick=\\\"toggleUnit\\\" data-tippy-content=\\\"Toggle between metric and imperial units\\\" aria-label=\\\"toggle between metric and imperial units\\\"></button>\\n\\t\\t\\t<button class=\\\"clickable icon icon-hide {{photoModeClass}} {{allowPhotoModeClass}}\\\" onclick=\\\"togglePhotoMode\\\" data-tippy-content=\\\"Show or hide UI\\\" aria-label=\\\"show or hide UI\\\"></button>\\n\\t\\t\\t<button class=\\\"clickable icon-bg zoom {{allowZoomClass}}\\\">\\n\\t\\t\\t\\t<span key=\\\"zoomInButton\\\" class=\\\"icon icon-plus\\\" data-tippy-content=\\\"Zoom in\\\" aria-label=\\\"zoom in\\\" role=\\\"button\\\"></span>\\n\\t\\t\\t\\t<div class=\\\"horizontal-line\\\"></div>\\n\\t\\t\\t\\t<span key=\\\"zoomOutButton\\\" class=\\\"icon icon-minus\\\" data-tippy-content=\\\"Zoom out\\\" aria-label=\\\"zoom out\\\" role=\\\"button\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<button key=\\\"lightToggle\\\" class=\\\"light-toggle clickable icon icon-box {{allowLightingClass}}\\\" onclick=\\\"toggleLight\\\" data-tippy-content=\\\"Toggle light modes\\\" aria-label=\\\"toggle light modes\\\">\\n\\t\\t\\t\\t<span class=\\\"icon {{lightClass}}\\\"></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"clickable icon {{guidedClass}} {{allowGuidedCameraClass}}\\\" onclick=\\\"toggleGuidedCamera\\\" data-tippy-content=\\\"Toggle auto camera\\\" aria-label=\\\"toggle auto camera\\\"></button>\\n\\t\\t\\t<div key=\\\"lightOptions\\\" class=\\\"lighting-option-container small {{showLightingOptionsClass}}\\\">\\n\\t\\t\\t\\t<button key=\\\"flood\\\" class=\\\"button lighting-option clickable\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"lighting-icon icon icon-flood-light\\\"></span>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">Flood Lighting</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button key=\\\"shadow\\\" class=\\\"button lighting-option clickable\\\" value=\\\"shadow\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"lighting-icon icon icon-shadow-light\\\"></span>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">Shadow Lighting</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button key=\\\"natural\\\" class=\\\"button lighting-option clickable\\\" value=\\\"natural\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"lighting-icon icon icon-natural-light\\\"></span>\\n\\t\\t\\t\\t\\t<span class=\\\"title\\\">Natural Lighting</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button class=\\\"clickable icon icon-fullscreen {{fullscreenClass}} {{allowFullscreenClass}}\\\" onclick=\\\"toggleFullscreen\\\" data-tippy-content=\\\"Toggle fullscreen\\\" aria-label=\\\"toggle fullscreen\\\"></button>\\n\\t\\t</div>\\n\\t</div>\\n\\t<button class=\\\"toggle clickable icon icon-controls {{isCollapsibleClass}}\\\" onclick=\\\"toggleCollapse\\\" data-tippy-content=\\\"Show or hide settings\\\" aria-label=\\\"show or hide settings\\\"></button>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"share-modal\\\" class=\\\"{{isVisibleClass}}\\\" onclick=\\\"handleClick\\\">\\n\\t<article class=\\\"modal-main\\\" >\\n\\t\\t<header class=\\\"modal-header\\\">\\n\\t\\t\\t<div class=\\\"modal-icon icon icon-share\\\"></div>\\n\\t\\t\\t<h3 class=\\\"modal-title\\\">Share</h3>\\n\\t\\t\\t<!-- Tab headers -->\\n\\t\\t\\t<ul class=\\\"tab-headers\\\" onclick=\\\"handleTabClick\\\" key=\\\"tabHeaders\\\">\\n\\t\\t\\t\\t<li class=\\\"tab-header link\\\"><button class=\\\"clickable\\\">Link</button></li>\\n\\t\\t\\t\\t<li class=\\\"tab-header embed\\\"><button class=\\\"clickable\\\">Embed</button></li>\\n\\t\\t\\t</ul>\\n\\t\\t\\t<button class=\\\"modal-close clickable icon icon-close\\\" key=\\\"closeButton\\\"></button>\\n\\t\\t</header>\\n\\t\\t<section class=\\\"modal-content\\\">\\n\\t\\t\\t <!-- Tab content -->\\n\\t\\t\\t<div class=\\\"tab-content\\\" key=\\\"tabContent\\\">\\n\\t\\t\\t\\t<div class=\\\"tab-pane link\\\" key=\\\"linkContainer\\\">\\n\\t\\t\\t\\t\\t<!-- Content for Link tab -->\\n\\t\\t\\t\\t\\t<img key=\\\"linkImage\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"link-container\\\">\\n\\t\\t\\t\\t\\t\\t<span>{{linkTitle}}</span>\\n\\t\\t\\t\\t\\t\\t<code class=\\\"scrollable\\\" key=\\\"linkCode\\\"></code>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button class=\\\"copy-link clickable\\\" onclick=\\\"copyToClipboard\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"icon icon-copy\\\"></div>\\n\\t\\t\\t\\t\\t\\t<span>Copy Link</span>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"tab-pane embed\\\" key=\\\"embedContainer\\\">\\n\\t\\t\\t\\t\\t<!-- Content for Embed tab -->\\n\\t\\t\\t\\t\\t<section class=\\\"main-section\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"preview-container {{previewDevice}} {{previewVisibleClass}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span>Interactive Preview</span>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"preview\\\" key=\\\"embedPreviewParent\\\"></div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<code class=\\\"scrollable\\\" key=\\\"embedCode\\\"></code>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"clickable\\\" type=\\\"checkbox\\\" id=\\\"iframe-elements-checkbox\\\" onchange=\\\"toggleIframeElements\\\" checked />\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"clickable\\\" for=\\\"iframe-elements-checkbox\\\">Include i-frame elements</label>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"clickable icon icon-help\\\" data-tippy-content=\\\"Include the iframe HTML tags in the embed code\\\" aria-label=\\\"Help: Include the iframe HTML tags in the embed code\\\" tabindex=\\\"0\\\"></span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<button class=\\\"copy-link clickable\\\" onclick=\\\"copyToClipboard\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"icon icon-copy\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<span>Copy Embed Code</span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</section>\\n\\t\\t\\t\\t\\t<section class=\\\"options-section\\\">\\n\\t\\t\\t\\t\\t\\t<h5>Embed Options</h5>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"options-container scrollable\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"options basic-options\\\" key=\\\"embedOptsContent\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t<details class=\\\"advanced\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<summary class=\\\"clickable\\\">Advanced Options</summary>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"options embed-adv-container\\\" key=\\\"embedAdvOptsContent\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t</details>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</section>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</section>\\n\\t\\t<h3 class=\\\"copied-overlay\\\" key=\\\"copiedOverlay\\\">Copied to clipboard!</h3>\\n\\n\\t</article>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"buttons-block\\\">\\n\\t<div class=\\\"block-title\\\">{$blockTitle}</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"checkboxes-block\\\">\\n\\t<div class=\\\"cb-block-title\\\">{$checkboxBlockTitle}</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"description-block\\\">\\n\\t<div key=\\\"header\\\" class=\\\"header\\\">\\n\\t\\t<h2 class=\\\"title\\\">{$title}</h2>\\n\\t\\t<h3 class=\\\"subtitle semi\\\">{$subtitle}</h3>\\n\\t</div>\\n\\t<div key=\\\"body\\\" class=\\\"body\\\">\\n\\t\\t<div class=\\\"description\\\">{$description}</div>\\n\\t\\t<span class=\\\"more-description {{moreClass}}\\\" >\\n\\t\\t\\t{$more}\\n\\t\\t</span>\\n\\t\\t<span class=\\\"clickable more-toggle {{hasMoreClass}}\\\" onclick=\\\"toggleMore\\\">\\n\\t\\t\\t<span class=\\\"x-small more-message\\\">\\n\\t\\t\\t\\t{{moreMessage}}\\n\\t\\t\\t</span>\\n\\t\\t\\t<span class=\\\"button clickable icon more-icon {{moreIcon}}\\\"></span>\\n\\t\\t</span>\\n\\t</div>\\n\\t<div key=\\\"footer\\\" class=\\\"footer\\\"></div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"hint-block {$class}\\\">\\n\\t<span class=\\\"icon before {{iconBefore}} {{isIconBeforeVisibleClass}}\\\"></span>\\n\\t<span class=\\\"text\\\">{{text}}</span>\\n\\t<span class=\\\"icon after {{iconAfter}} {{isIconAfterVisibleClass}}\\\"></span>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"image-block\\\">\\n\\t<img class=\\\"{$className}\\\" src=\\\"{$src}\\\" alt=\\\"{$alt}\\\">\\n\\t<span class=\\\"title\\\">{$title}</span>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"clickable replay-button-block\\\" onclick=\\\"onClick\\\">\\n\\t<button>\\n\\t\\t<span class=\\\"icon icon-replay\\\"></span>\\n\\t\\t<span class=\\\"text semi\\\">{$text}</span>\\n\\t</button>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"title-block\\\">\\n\\t<h1 class=\\\"title\\\">{$title}</h1>\\n\\t<h2 class=\\\"subtitle\\\">{$subtitle}</h2>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"clickable toggle-block {{isSelectedClass}}\\\">\\n\\t<button>\\n\\t\\t{$text}\\n\\t</button>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"time-controller {{isVisibleClass}}\\\">\\n\\t<div class=\\\"rate-container\\\">\\n\\t\\t<button key=\\\"toggleBtn\\\" class=\\\"icon {{playClass}} clickable play-pause\\\" data-tippy-content=\\\"Pause / play\\\" onclick=\\\"togglePlayPause\\\"></button>\\n\\t\\t<label key=\\\"label\\\" class=\\\"rate-label\\\">rate</label>\\n\\t\\t<button key=\\\"decreaseBtn\\\" class=\\\"prev-rate clickable\\\" data-tippy-content=\\\"Decrease time rate\\\" onclick=\\\"decreaseRate\\\">\\n\\t\\t\\t<span key=\\\"decreaseContainer\\\" class=\\\"container\\\">\\n\\t\\t\\t\\t<span class=\\\"icon icon-backward\\\"></span>\\n\\t\\t\\t</span>\\n\\t\\t</button>\\n\\t\\t<div class=\\\"vertical-line\\\"></div>\\n\\t\\t<button key=\\\"increaseBtn\\\" class=\\\"next-rate clickable\\\" data-tippy-content=\\\"Increase time rate\\\" onclick=\\\"increaseRate\\\">\\n\\t\\t\\t<span key=\\\"increaseContainer\\\" class=\\\"container\\\">\\n\\t\\t\\t\\t<span class=\\\"icon icon-forward\\\"></span>\\n\\t\\t\\t</span>\\n\\t\\t</button>\\n\\t\\t<label key=\\\"rateDisplay\\\" class=\\\"rate-display-label\\\">{{rateDisplay}}</label>\\n\\t</div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div class=\\\"toast-container {{isVisibleClass}}\\\" role=\\\"alert\\\" aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\">\\n\\t<span class=\\\"icon {{iconClass}}\\\" aria-hidden=\\\"true\\\"></span>\\n\\t<div key=\\\"toastContent\\\" class=\\\"toast-content\\\">{{toastContent}}</div>\\n\\t<button type=\\\"button\\\" class=\\\"close clickable icon icon-close\\\" data-dismiss=\\\"toast\\\" aria-label=\\\"Close alert\\\" onclick=\\\"hide\\\"></button>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<div id=\\\"tutorial-overlay\\\" class=\\\"{{isVisibleClass}} {{slideClass}}\\\">\\n\\n\\t<div class=\\\"swiper {{carouselClass}}\\\">\\n\\t\\t<div key=\\\"swiperSlides\\\" class=\\\"swiper-wrapper\\\"></div>\\n\\n\\t\\t<div class=\\\"swiper-button-prev icon prev-arrow tutorial-carousel-prev\\\"></div>\\n\\t\\t<div class=\\\"swiper-button-next icon next-arrow tutorial-carousel-next\\\"></div>\\n\\n\\t\\t<div key=\\\"bullets\\\" class=\\\"bullet-container\\\"></div>\\n\\n\\t</div>\\n\\n\\t<div class=\\\"dismiss-container\\\">\\n\\t\\t<button class=\\\"dismiss-button clickable\\\" onclick=\\\"close\\\">{{dismissText}}</button>\\n\\t</div>\\n\\n\\n\\t<footer>\\n\\t\\t<p class='tutorial-smallprint'>The data used to generate this visualization is from the <a href='https://cneos.jpl.nasa.gov' target='_blank'>Center for Near-Earth Object Studies</a> and JPL's <a href='https://ssd.jpl.nasa.gov' target='_blank'>Solar System Dynamics</a> website. Visit the <a href='https://www.nasa.gov/planetarydefense/overview' target='_blank'>Planetary Defense Coordination Office</a> for more information on how NASA monitors for potentially hazardous asteroids and comets.</p>\\n\\t</footer>\\n</div>\\n\";\n// Exports\nmodule.exports = code;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import {\n\tAppUtils,\n\tBaseApp\n} from 'eyes';\nimport './assets';\nimport { Entity, SceneHelpers } from 'pioneer-scripts';\nimport * as Pioneer from 'pioneer';\nimport {\n\tNEO,\n\tNEOUtils,\n\tFiltersManager,\n\tNEOsManager,\n\tWatchManager,\n\tLinkManager,\n\tTypes\n} from './internal';\nimport componentsInfo from './configs/components_info';\nimport heroes from './data/heroes.json';\nimport tutorials from './data/tutorials.json';\nimport timeInfo from './configs/time_info.json';\nimport sceneInfo from './configs/scene_info.json';\nimport viewInfo from './configs/view_info.json';\nimport storyInfo from './configs/story_info.json';\nimport VIEWS from './views';\nimport { STORY_LIST, STORIES } from './data/stories';\nimport html from './app.html';\n\n/**\n * Asteroids app class.\n * ToDo: It doesn't really make sense to store the _heroes and the _neos here.\n * Maybe they could be moved to an extended content manager\n */\nexport class AsteroidsApp extends BaseApp {\n\t/**\n\t * Constructor.\n\t */\n\tconstructor() {\n\t\tsuper(Types);\n\n\t\t/** @inheritdoc */\n\t\tthis._timeInfo = timeInfo;\n\n\t\t/** @inheritdoc */\n\t\tthis._sceneInfo = sceneInfo;\n\n\t\t/** @inheritdoc */\n\t\tthis._viewClasses = { ...VIEWS };\n\n\t\t/** @inheritdoc */\n\t\tthis._viewInfo = viewInfo;\n\n\t\t/** @inheritdoc */\n\t\tthis._componentInfo = componentsInfo;\n\n\t\t/**\n\t\t * The hero asteroids\n\t\t */\n\t\tthis._heroes = heroes;\n\n\t\t/**\n\t\t * The NEO information objects.\n\t\t * @type {Map<string, NEO>}\n\t\t * @private\n\t\t */\n\t\tthis._neos = new Map();\n\n\t\tthis._particleMatchFunctions = {};\n\n\t\t/**\n\t\t * Off white colors for Pioneer\n\t\t */\n\t\tthis._colors = {\n\t\t\tneos: [0.823, 0.882, 0.909],\n\t\t\tspacecraft: [0.969, 0.957, 0.875]\n\t\t};\n\n\t\t/**\n\t\t * Stored values to reset on leaving.\n\t\t * @type {object}\n\t\t */\n\t\tthis._resetValues = {};\n\n\t\tthis.tutorials = tutorials;\n\n\t\tthis.bindFunctions(['addParticleMatchFunction', 'removeParticleMatchFunction', 'createAsteroidParticles']);\n\t}\n\n\t/**\n\t * Getters\n\t */\n\n\t/**\n\t * Returns hero asteroids\n\t * @returns {object}\n\t */\n\tget heroes() {\n\t\treturn this._heroes;\n\t}\n\n\t/**\n\t * Gets the NEOs data.\n\t * @returns {Map}\n\t */\n\tget neos() {\n\t\treturn this._neos;\n\t}\n\n\t/**\n\t * Set up routes.\n\t * @override\n\t */\n\tsetUpRoutes() {\n\t\tthis.getManager('router').addRoutes([\n\t\t\t{ route: this.getManager('router').homeRoute, view: 'home' },\n\t\t\t{ route: '/story/:id', view: 'story' },\n\t\t\t{ route: '/missions/:spacecraft', view: 'mission' },\n\t\t\t{ route: '/planets/:planet', view: 'following' },\n\t\t\t{ route: '/stars/:star', view: 'following' },\n\t\t\t{ route: '/moons/:moon', view: 'following' },\n\t\t\t{ route: '/watch', view: 'watch' },\n\t\t\t{ route: '/watch/:neoName', view: 'watch' },\n\t\t\t{ route: '/:spaceObject', view: 'asteroid' }\n\t\t]);\n\t}\n\n\t/**\n\t * Set up scene.\n\t * @override\n\t */\n\tasync setUpScene() {\n\t\t// Load the NEOs.\n\t\tthis._neos = await NEOUtils.loadNEOs(this.pioneer);\n\n\t\t// Update the label manager icon map to adjusst icon classes.\n\t\tconst labelManager = this.getManager('label');\n\t\tlabelManager._iconMap.Asteroid = 'asteroid';\n\t\tlabelManager._iconMap['Dwarf Planet'] = 'asteroid';\n\t\tlabelManager._iconMap.Comet = 'comet';\n\t\tlabelManager._iconMap.Spacecraft = 'spacecraft';\n\t\tlabelManager._iconMap.Default = '';\n\n\t\t// Load up the main entities.\n\t\tawait super.setUpScene();\n\n\t\t// Add in the hero asteroids, if they aren't already added.\n\t\tconst scene = /** @type {Pioneer.Scene} */(this.scene);\n\n\t\tfor (const name of Object.keys(this._heroes)) {\n\t\t\tif (scene.getEntity(name) === null && this._neos.has(name)) {\n\t\t\t\tconst entity = NEOUtils.createEntity(this._neos.get(name), scene);\n\t\t\t\tthis.setUpLabels(entity, { category: heroes[name].category });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Re-define label weight map and set label weights again.\n\t\t * For asteroids, we want to prioritise comets, asteroids and missions, while making planet and moon clicking harder.\n\t\t */\n\t\tlabelManager._weightMap.Moon = '5';\n\t\tlabelManager._weightMap.Planet = '10';\n\t\tlabelManager._weightMap.Spacecraft = '15';\n\t\tlabelManager._weightMap.Comet = '20';\n\t\tlabelManager._weightMap.Asteroid = '20';\n\t\tlabelManager._weightMap['Dwarf Planet'] = '20';\n\t\tlabelManager._weightMap.Star = '30';\n\t\tlabelManager._weightMap.Watch = '40';\n\t\tlabelManager._weightMap.Focus = '50';\n\n\t\tlabelManager.setWeights(this.getManager('content').getEntityList());\n\n\t\t// Create the asteroid orbital particles (after neos have loaded)\n\t\tif (this._neos.size) {\n\t\t\tthis.createAsteroidParticles();\n\t\t}\n\t\telse {\n\t\t\tconsole.error('NEOs data could not be loaded.');\n\t\t}\n\n\t\t// Change planet trails\n\t\tconst trailManager = this.getManager('trail');\n\t\tconst defaultOpacity = trailManager._opacity.primary;\n\n\t\tconst width = {\n\t\t\tdefault: [4, 4],\n\t\t\thover: [5, 5]\n\t\t};\n\t\tconst planets = Entity.getEntityNamesInGroup('planets');\n\t\tplanets.forEach(id => {\n\t\t\tthis._resetValues[id] = {};\n\t\t});\n\n\t\t// Add line of sight component\n\t\tconst sun = this.scene.get('sun');\n\t\tif (!sun.get('orbiterLineOfSight')) {\n\t\t\tconst lineOfSight = sun.addComponent('orbiterLineOfSight');\n\t\t\tlineOfSight.setEnabled(false);\n\t\t}\n\n\t\t// Create rings for Sun and Earth\n\t\tconst sceneManager = this.getManager('scene');\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(scene, ['earth']);\n\t\tsceneManager.createRing('sunRing', AppUtils.conversionTable.auToKm * 1.3, 'sun', {\n\t\t\torbitPlaneEntityName: 'earth',\n\t\t\tcolor: new Pioneer.Color(1, 1, 1),\n\t\t\tlabelText: '1.3 AU distance from Sun',\n\t\t\tisEnable: false\n\t\t});\n\t\tsceneManager.createTorus('sunTorus', 1.496e8 * 0.95 /* - 0.05 AU */, 1.496e8 * 1.05 /* + 0.05 AU */, 'sun', {\n\t\t\torbitPlaneEntityName: 'earth',\n\t\t\tcolor: new Pioneer.Color(1, 1, 1, 0.2),\n\t\t\tlabelText: 'PHO boundary zone',\n\t\t\tisEnable: false\n\t\t});\n\n\t\t// Make these labels always show, also 'Earth' can always\n\t\tlabelManager.addException('sunRingLabel');\n\t\tlabelManager.addException('sunTorusLabel');\n\t}\n\n\t/**\n\t * Setup labels.\n\t * @param {Pioneer.Entity} entity\n\t * @param {object} options - the options\n\t * @param {string} [options.category = undefined] - optional category.\n\t */\n\tsetUpLabels(entity, { category = undefined } = {}) {\n\t\tconst contentManager = this.getManager('content');\n\t\tconst labelManager = this.getManager('label');\n\n\t\t// If it's a planet, set color labels\n\t\tconst colorLabels = ['mercury', 'venus', 'earth', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune'];\n\n\t\tconst handleMouseEnter = (_, entityName) => labelManager.triggerCallbacks('hoverchange', [entityName, true, colorLabels.includes(entityName)]);\n\t\tconst handleMouseLeave = (e, entityName) => {\n\t\t\t// Determine if were hovering on a selected asteroids watch asteroid.\n\t\t\tif (e.target?.classList?.contains('selected') && e.target?.classList?.contains('asteroid-watch-label')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlabelManager.triggerCallbacks('hoverchange', [entityName, false, colorLabels.includes(entityName)]);\n\t\t};\n\n\t\tlabelManager.addEntity(entity);\n\t\tlabelManager.setLabelProps({\n\t\t\tgetLabelClass: entityName => `no-select ${colorLabels.includes(entityName) ? 'color' : ''} ${contentManager.getClassName(entityName, category) ?? ''}`,\n\t\t\thandleMouseEnter,\n\t\t\thandleMouseLeave,\n\t\t\t...category && { getIconClass: _ => category.toLowerCase() }\n\t\t}, [entity.getName()]);\n\t}\n\n\t/**\n\t * Set up managers.\n\t */\n\tsetUpManagers() {\n\t\tsuper.setUpManagers();\n\n\t\t// Add managers\n\t\tthis.addManager('watch', WatchManager);\n\t\tthis.addManager('filters', FiltersManager, this._scene);\n\t\tthis.addManager('neos', NEOsManager, this._scene);\n\t\tthis.addManager('link', LinkManager);\n\n\t\t// Set up title manager and pparsing function.\n\n\t\tconst titleManagerOptions = {\n\t\t\t...this._sceneInfo.title,\n\t\t\tparseFn: ({ url, params, query } = {}) => {\n\t\t\t\tconst { spaceObject, spacecraft, planet, star, moon } = params;\n\t\t\t\tconst entityName = spaceObject || spacecraft || planet || star || moon;\n\n\t\t\t\tif (query?.includes('=learn')) {\n\t\t\t\t\treturn 'Learn';\n\t\t\t\t}\n\t\t\t\tif (query?.includes('=filters')) {\n\t\t\t\t\treturn 'Filters';\n\t\t\t\t}\n\t\t\t\tif (url?.includes('/story') && params.id) {\n\t\t\t\t\tconst story = storyInfo?.find(({ path }) => path === params.id);\n\t\t\t\t\tif (story?.title) {\n\t\t\t\t\t\treturn story.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (url?.includes('/watch')) {\n\t\t\t\t\treturn 'Asteroid Watch';\n\t\t\t\t}\n\t\t\t\tif (entityName) {\n\t\t\t\t\tconst entity = this.scene.get(entityName);\n\t\t\t\t\tconst { innerText: label } = entity?.getComponentByType('div')?.getDiv() || {};\n\t\t\t\t\tif (label) {\n\t\t\t\t\t\treturn label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 'Home';\n\t\t\t}\n\t\t};\n\n\t\tconst titleManagerClass = Types.get('TitleManager');\n\t\tconst titleManager = this.addManager('title', titleManagerClass, titleManagerOptions);\n\t}\n\n\t/**\n\t * Builds search database from the content managers entity list info and a list of exceptions.\n\t * @returns {object}\n\t */\n\t_buildSearchDatabase() {\n\t\tconst entityInfo = AppUtils.deepCopy(this.getManager('content').getEntityList());\n\t\tconst entityList = this.scene._entities._itemsByName;\n\n\t\tconst exceptions = ['observable_universe', 'milky_way'];\n\t\tconst database = {};\n\n\t\t// Add entities to search database\n\t\tentityList.forEach(key => {\n\t\t\tconst info = entityInfo[key];\n\t\t\tif (!exceptions.includes(key) && info) {\n\t\t\t\t// Add url to info\n\t\t\t\tinfo.url = `/${info.id}`;\n\t\t\t\tdatabase[key] = info;\n\t\t\t}\n\t\t});\n\n\t\t// Add NEO to search database\n\t\tthis._neos.forEach((value, key) => {\n\t\t\tif (key in database) {\n\t\t\t\tdatabase[key].neo = value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdatabase[key] = {\n\t\t\t\t\tid: key,\n\t\t\t\t\tiauName: value.name,\n\t\t\t\t\turl: `/${key}`,\n\t\t\t\t\tneo: value\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\treturn database;\n\t}\n\n\t/**\n\t * Set up components.\n\t */\n\tasync setUpComponents() {\n\t\tawait super.setUpComponents();\n\n\t\tconst entityInfo = this.getManager('content').getEntityList();\n\n\t\t// Update story list\n\t\tconst contentManager = this.getManager('content');\n\t\tcontentManager.setStoryList(STORY_LIST);\n\t\tcontentManager.setStories(STORIES);\n\n\t\t// Build and set search database.\n\t\tconst searchDatabase = this._buildSearchDatabase();\n\t\tthis.getManager('search').setDatabase(searchDatabase);\n\n\t\t// Hero asteroids populate the featured search items (most popular).\n\t\tconst featuredItems = Object.keys(this.heroes).map(heroName => {\n\t\t\tconst heroEntity = entityInfo[heroName];\n\t\t\tif (!heroEntity) {\n\t\t\t\tconst heroData = heroes[heroName];\n\n\t\t\t\tif (heroData.iauName && heroData.id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: heroData.iauName,\n\t\t\t\t\t\tsortText: heroData.displayName || heroData.iauName,\n\t\t\t\t\t\turl: `/${heroData.id}`\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.error(`No entity found for hero: ${heroName}`);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: heroEntity.iauName,\n\t\t\t\tsortText: heroEntity.displayName || heroEntity.iauName,\n\t\t\t\turl: `/${heroEntity.id}`\n\t\t\t};\n\t\t});\n\n\t\t// Sort alphabetically by display name and set up.\n\t\tfeaturedItems.sort((a, b) => a.sortText > b.sortText ? 1 : -1);\n\t\tthis.getComponent('search').setupFeaturedSuggestion(featuredItems);\n\n\t\t// Create filter array of the heroes to update trail colors.\n\t\tconst trailManager = this.getManager('trail');\n\t\tconst neoIds = ['73p_schwassmann_wachmann_3'];\n\t\tconst spacecraftIds = [];\n\n\t\tthis.scene._entities._items.forEach(entity => {\n\t\t\tconst id = entity.getName();\n\t\t\tconst { category } = entityInfo[id] || {};\n\n\t\t\tif (category === 'Asteroid' || category === 'Dwarf Planet' || category === 'Comet') neoIds.push(id);\n\t\t\telse if (category === 'Spacecraft') spacecraftIds.push(id);\n\t\t});\n\t\t// Set trail colors.\n\t\ttrailManager.setColor(neoIds, new Pioneer.Color(...this._colors.neos, 0.35));\n\t\ttrailManager.setColor(spacecraftIds, new Pioneer.Color(...this._colors.spacecraft, 0.5));\n\n\t\t// Enable layers\n\t\tconst layerManager = this.getManager('layer');\n\t\tconst layerPanel = this.getComponent('layerPanel');\n\t\tif (!layerManager.getLayer('asteroids').visible) {\n\t\t\tlayerPanel.toggleLayer('asteroids');\n\t\t}\n\t\tif (!layerManager.getLayer('comets').visible) {\n\t\t\tlayerPanel.toggleLayer('comets');\n\t\t}\n\t\tif (!layerManager.getLayer('dwarfPlanets').visible) {\n\t\t\tlayerPanel.toggleLayer('dwarfPlanets');\n\t\t}\n\t\tlayerManager.getLayer('starfield').toggleCallback[0](false);\n\t}\n\n\t/**\n\t * Goes through tutorials to find and replace function calls between double braces {{}}\n\t * Works in the same way as component's setVariables, but uses a function call instead.\n\t * @param {Array<object>} allTutorials\n\t * @returns {Array<object>}\n\t */\n\tsetTutorialVariables(allTutorials) {\n\t\tconst allTutorialsStr = JSON.stringify(allTutorials);\n\n\t\tconst replacedJsonString = allTutorialsStr.replace(/\\{\\{(.+?)\\}\\}/g, (match, functionName) => {\n\t\t\tif (this[functionName] && typeof this[functionName] === 'function') {\n\t\t\t\treturn this[functionName]();\n\t\t\t}\n\t\t\treturn match;\n\t\t});\n\n\t\treturn JSON.parse(replacedJsonString);\n\t}\n\n\t/**\n\t * Adds (or replaces) a createAsteroidParticles matchFunction\n\t * @param {(neo: NEO) => boolean} matchFunction - A match function that returns true if the NEO should be shown.\n\t * @param {string} functionId - matchFunction identifier\n\t * @param {boolean?} andRun - whether to run createAsteroidParticles after\n\t * @param {(orbitalElements: Pioneer.OrbitalElements[]) => null?} callback - if andRun, callback for createAsteroidParticles\n\t */\n\taddParticleMatchFunction(matchFunction, functionId, andRun, callback) {\n\t\tthis._particleMatchFunctions[functionId] = matchFunction;\n\t\tif (andRun) this.createAsteroidParticles(callback);\n\t}\n\n\t/**\n\t * Removes a createAsteroidParticles matchFunction\n\t * @param {string} functionId - matchFunction identifier\n\t * @param {boolean?} andRun - whether to run createAsteroidParticles after\n\t * @param {(orbitalElements: Pioneer.OrbitalElements[]) => null?} callback - if andRun, callback for createAsteroidParticles\n\t */\n\tremoveParticleMatchFunction(functionId, andRun, callback) {\n\t\tdelete this._particleMatchFunctions[functionId];\n\t\tif (andRun) this.createAsteroidParticles(callback);\n\t}\n\n\t/**\n\t * Creates the asteroids as a component of the sun.\n\t * @param {(orbitalElements: Pioneer.OrbitalElements[]) => null} callback - Callback for when all orbitalElement are first captured\n\t */\n\tcreateAsteroidParticles(callback) {\n\t\t// Get the sun.\n\t\tconst sun = this.scene.getEntity('sun');\n\n\t\t// First remove the component if it already exists.\n\t\tif (sun.getComponentByType('orbitalParticles') !== null) {\n\t\t\tsun.removeComponent(sun.getComponentByType('orbitalParticles'));\n\t\t}\n\n\t\t// The colors of the asteroids will be random between these two shades.\n\t\tconst minColor = new Pioneer.Color(0, 0.25, 0.35);\n\t\tconst maxColor = new Pioneer.Color(0, 0.45, 0.65);\n\n\t\t// Brighten them up a bit.\n\t\tconst white = new Pioneer.Color(1, 1, 1);\n\t\tminColor.lerp(minColor, white, 0.10);\n\t\tmaxColor.lerp(maxColor, white, 0.15);\n\n\t\t// Add the component.\n\t\tconst orbitalParticles = /** @type {Pioneer.OrbitalParticlesComponent} */(sun.addComponent('orbitalParticles'));\n\t\torbitalParticles.setLoadFunction(async () => {\n\t\t\tconst colors = /** @type {Pioneer.Color[]} */([]);\n\t\t\tconst scales = /** @type {number[]} */([]);\n\t\t\tconst orbitalElements = /** @type {Pioneer.OrbitalElements[]} */([]);\n\t\t\t// const viewportSize = this._pioneer.getViewport('main-viewport').getBounds().size;\n\t\t\t// const maxAspectRatio = Math.max(viewportSize.x / viewportSize.y, viewportSize.y / viewportSize.x);\n\t\t\tlet shouldSkip;\n\n\t\t\tfor (const neo of this._neos.values()) {\n\t\t\t\t// If the neo doesn't match, skip it.\n\t\t\t\tshouldSkip = false;\n\t\t\t\tfor (const f in this._particleMatchFunctions) {\n\t\t\t\t\tif (!this._particleMatchFunctions[f](neo)) {\n\t\t\t\t\t\tshouldSkip = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (shouldSkip) continue;\n\n\t\t\t\tif (Entity.getEntityOptions(neo.pioneerName) !== undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Set the color.\n\t\t\t\tconst color = new Pioneer.Color();\n\t\t\t\tif (neo.comet) {\n\t\t\t\t\tcolor.set(...this._colors.neos);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst u = Math.random();\n\t\t\t\t\tcolor.lerp(minColor, maxColor, u);\n\t\t\t\t}\n\t\t\t\tcolors.push(color);\n\n\t\t\t\t// Set the scale.\n\t\t\t\tconst scale = (neo.comet ? 1.3 : 1) * (neo.pho ? 1.5 : 1) * 3e-3 * Math.max(1.0, Math.log10(1.0 + neo.diameter));\n\t\t\t\tscales.push(scale);\n\n\t\t\t\t// Set the orbital elements.\n\t\t\t\torbitalElements.push(neo.orbitalElements);\n\t\t\t}\n\t\t\tif (typeof callback === 'function') callback(orbitalElements);\n\t\t\treturn {\n\t\t\t\tcolors,\n\t\t\t\tscales,\n\t\t\t\torbitalElements\n\t\t\t};\n\t\t});\n\t\torbitalParticles.setResourcesLoadedCallback(() => {\n\t\t\tconst material = /** @type {Pioneer.OrbitalParticlesComponent} */(this._pioneer.get('main', 'sun', 'orbitalParticles')).getThreeJsMaterials()[0];\n\n\t\t\t// Added master opacity uniform.\n\t\t\tmaterial.uniforms['masterOpacity'] = new Pioneer.THREE.Uniform(0.5);\n\n\t\t\tmaterial.vertexShader = material.vertexShader.replace(\n\t\t\t\t'vec4 viewPosition = modelViewMatrix * vec4(offset, 1.0) + vec4(position, 0.0) * scale;',\n\t\t\t\t`\n\t\t\t\tvec4 viewOffset = modelViewMatrix * vec4(offset, 1.0);\n\t\t\t\tvec4 viewPosition = viewOffset + vec4(position, 0.0) * scale;\n\t\t\t\t`);\n\t\t\tmaterial.vertexShader = material.vertexShader.replace(\n\t\t\t\t'gl_Position = projectionMatrix * viewPosition;',\n\t\t\t\t`\n\t\t\t\tfloat aspect_ratio_h = min(1.0, projectionMatrix[0][0] / projectionMatrix[2][1]);\n\t\t\t\tfloat aspect_ratio_v = min(1.0, projectionMatrix[2][1] / projectionMatrix[0][0]);\n\t\t\t\tgl_Position = projectionMatrix * viewOffset + vec4(position.x * viewOffset.y * scale * aspect_ratio_h, position.z * viewOffset.y * scale * aspect_ratio_v, 0, 0);\n\t\t\t\t`);\n\t\t\tmaterial.vertexShader = material.vertexShader.replace(\n\t\t\t\t'fColor = color;',\n\t\t\t\t'fColor = color * clamp((length(viewPosition) - 21937.0) / 40000.0, 0.0, 1.0);'\n\t\t\t);\n\n\t\t\tmaterial.fragmentShader = material.fragmentShader.replace(\n\t\t\t\t'varying vec2 fPosition;',\n\t\t\t\t`uniform float masterOpacity;\n\t\t\t\tvarying vec2 fPosition;\n\t\t\t\t`);\n\t\t\t// including master opacity\n\t\t\tmaterial.fragmentShader = material.fragmentShader.replace(\n\t\t\t\t'gl_FragColor = fColor * (1.0 - length(fPosition));',\n\t\t\t\t'gl_FragColor = fColor * (1.0 - step(1.0, length(fPosition))) * vec4(1.0, 1.0, 1.0, masterOpacity);'\n\t\t\t);\n\t\t\tmaterial.needsUpdate = true;\n\t\t\tmaterial.blending = Pioneer.THREE.NormalBlending;\n\t\t});\n\t}\n\n\t/**\n\t * Gets the total NEO count to maximumSignificantDigits.\n\t * @param {number} maximumSignificantDigits\n\t * @returns {string}\n\t */\n\tgetNeoTotal(maximumSignificantDigits = 2) {\n\t\treturn this.neos?.size.toLocaleString(undefined, { maximumSignificantDigits, roundingMode: 'floor' });\n\t}\n}\n\nAsteroidsApp.html = html;\n\nAsteroidsApp.setAppClass();\n","import './css/font.css';\nimport './css/viewport.css';\nimport './css/color.css';\nimport './css/asteroid.css';\nimport './css/label.css';\nimport './css/grid.css';\nimport './css/icon.css';\nimport './css/search.css';\nimport './css/settings.css';\nimport './css/clock.css';\n","import { Navigation } from '../navigation/navigation';\n\n/**\n * @inheritdoc\n * @extends Navigation\n */\nexport class AsteroidMenuBottom extends Navigation {\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis.bindFunctions(['isFilteringChange']);\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('filters'),\n\t\t\tevent: 'isFilteringChange',\n\t\t\tcallback: this.isFilteringChange\n\t\t});\n\n\t\tconst param = {\n\t\t\tposition: 'bottom',\n\t\t\tentry: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Learn',\n\t\t\t\t\tsvg: './assets/default/svg/learn.svg',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis._app.getManager('router').navigate({ modal: 'learn' });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Asteroid Watch',\n\t\t\t\t\tsvg: './assets/svg/asteroid.svg',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis._app.getManager('watch').onWatchClick();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Filters',\n\t\t\t\t\tsvg: './assets/svg/filter_inactive.svg',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis._app.getManager('router').navigate({ modal: 'filters' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tsuper.setup(param);\n\t}\n\n\t/**\n\t * Toggles the filters badge\n\t * @param {boolean} isFiltering\n\t */\n\tisFilteringChange(isFiltering) {\n\t\tsuper.toggleBadge('Filters', isFiltering);\n\t}\n}\n","import { Navigation } from '../navigation/navigation';\n\n/**\n * @inheritdoc\n * @extends Navigation\n */\nexport class AsteroidMenuTop extends Navigation {\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis.bindFunctions(['isFilteringChange']);\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('filters'),\n\t\t\tevent: 'isFilteringChange',\n\t\t\tcallback: this.isFilteringChange\n\t\t});\n\n\t\tconst currentRoute = this._app.getManager('router')._currentRoute;\n\t\tconst query = currentRoute?.query || '';\n\n\t\tconst param = {\n\t\t\tposition: 'top',\n\t\t\tentry: [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Learn',\n\t\t\t\t\tsvg: './assets/default/svg/learn.svg',\n\t\t\t\t\tactive: query.includes('modal=learn'),\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tconst router = this._app.getManager('router');\n\t\t\t\t\t\trouter.navigate({ modal: 'learn' }, router.currentRoute.url);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Asteroid Watch',\n\t\t\t\t\tsvg: './assets/svg/asteroid.svg',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis._app.getManager('watch').onWatchClick();\n\t\t\t\t\t},\n\t\t\t\t\tactive: currentRoute.url?.includes('watch')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Filters',\n\t\t\t\t\tsvg: './assets/svg/filter_inactive.svg',\n\t\t\t\t\tactive: query.includes('modal=filters'),\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis._app.getManager('router').navigate({ modal: 'filters' });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t\tsuper.setup(param);\n\t}\n\n\t/**\n\t * Called when the url get params change.\n\t * @param {string} modal\n\t */\n\tasync onQueryChange({ modal } = {}) {\n\t\tsuper.toggleActive('Learn', modal === 'learn');\n\t\tsuper.toggleActive('Filters', modal === 'filters');\n\t}\n\n\t/**\n\t * Toggles the filters badge\n\t * @param {boolean} isFiltering\n\t */\n\tisFilteringChange(isFiltering) {\n\t\tsuper.toggleBadge('Filters', isFiltering);\n\t}\n}\n","import { BaseComponent, BaseApp, CancelToken } from 'eyes';\nimport { FiltersModal, LearnModal } from './modals';\n\nimport html from './asteroid_modals.html';\nimport './asteroid_modals.css';\n\n/**\n * A generic modal component.\n * @extends BaseComponent\n */\nexport class AsteroidModals extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, null, {\n\t\t\ttitle: '',\n\t\t\tisVisible: false,\n\t\t\t...options\n\t\t});\n\n\t\tthis._components = ['filtersModal', 'learnModal'];\n\n\t\tthis._eventNames.push('overlay');\n\t\tthis._initCallbacks();\n\n\t\t/**\n\t\t * Stored values to reset on leaving.\n\t\t * @type {Object<FiltersModal, LearnModal>}\n\t\t * @private\n\t\t */\n\t\tthis._modals = {};\n\n\t\t/**\n\t\t * Stored values to reset on leaving.\n\t\t * @type {FiltersModal|LearnModal}\n\t\t * @private\n\t\t */\n\t\tthis._activeModal = null;\n\n\t\tthis.bindFunctions(['close']);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tasync init() {\n\t\tsuper.init();\n\n\t\t// Load modals\n\t\tthis._modals.filters = await this._app.addComponentWithPlaceholder({ type: FiltersModal, name: 'filtersModal' }, this._element);\n\t\tthis._modals.learn = await this._app.addComponentWithPlaceholder({ type: LearnModal, name: 'learnModal' }, this._element);\n\n\t\t// Create and store a reference to icon element.\n\t\tthis._iconEl = document.createElement('img');\n\t\tthis._children.header?.prepend(this._iconEl);\n\t}\n\n\t/**\n\t * Execute actions on query change.\n\t * @param {object} params\n\t * @param {CancelToken} params.cancelToken\n\t * @param {string} params.modal\n\t */\n\tonQueryChange({ cancelToken, modal } = {}) {\n\t\t// Check if route was canceled\n\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeModal = this._modals[modal] ?? null;\n\n\t\t// If we're already at the activeModal or at no-modal (null), return early.\n\t\tif (this._activeModal === activeModal) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set active modal.\n\t\tthis._activeModal = activeModal;\n\n\t\t// Disable all modals by default.\n\t\tthis._disableAllModals();\n\n\t\tif (this._activeModal) {\n\t\t\tconst { _title: title, _svg: svg } = this._activeModal;\n\n\t\t\t// Set title state.\n\t\t\tthis.setState({ title });\n\n\t\t\t// Set icon image properties.\n\t\t\tthis._iconEl.src = svg ?? '';\n\t\t\tthis._iconEl.alt = title ?? '';\n\n\t\t\t// Enable and show this main component.\n\t\t\tthis.setEnabled(true);\n\t\t\tthis.show();\n\n\t\t\t// Enable and show specific modal component.\n\t\t\tthis._activeModal.setEnabled(true);\n\t\t\tthis._activeModal.show();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the URL query to remove the modal parameter.\n\t */\n\tclose() {\n\t\tconst router = this._app.getManager('router');\n\t\trouter.navigate({ __remove: ['modal'] }, router.currentRoute.url, { keepTime: true });\n\t}\n\n\t/**\n\t * Get the child components.\n\t * @returns {string[]}\n\t */\n\tget components() {\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Disables this, and all child components\n\t */\n\t_disableAllModals() {\n\t\tObject.values(this._modals).forEach(modal => {\n\t\t\tmodal.hide();\n\t\t\tmodal.setEnabled(false);\n\t\t});\n\n\t\tthis.hide();\n\t\tthis.setEnabled(false);\n\t}\n}\n\nAsteroidModals.html = html;\n","import { BaseApp, BaseComponent } from 'eyes';\n\nimport html from './filters_modal.html';\nimport './filters_modal.css';\n\n/**\n * Filter modal component.\n * @extends BaseComponent\n */\nclass FiltersModal extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {import('eyes').Options} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, null, {\n\t\t\t...options\n\t\t});\n\n\t\tthis.state = {\n\t\t\tasteroids: false,\n\t\t\tcomets: false,\n\t\t\tphos: false\n\t\t};\n\n\t\tthis._app = app;\n\n\t\tthis._title = 'Filters';\n\t\tthis._svg = './assets/svg/filter_inactive.svg';\n\n\t\tthis._lastSize = null;\n\n\t\tthis.bindFunctions([\n\t\t\t'_filterCallback'\n\t\t]);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\t\tthis.filtersManager = this._app.getManager('filters');\n\t}\n\n\t/**\n\t * Called when the modal is opened\n\t */\n\tonShow() {\n\t\t// Ensure checks and toggles match filter state\n\t\tconst filters = this.filtersManager.getFilters();\n\t\tdocument.getElementById('filters-asteroids-checkbox').checked = filters.asteroids;\n\t\tdocument.getElementById('filters-comets-checkbox').checked = filters.comets;\n\t\tdocument.getElementById('filters-phos-toggle').checked = filters.phos;\n\n\t\t// Count the objects and update the indicator\n\t\tthis._lastSize = this._lastSize != null ? this._lastSize : this._app.neos.size;\n\t\tdocument.getElementsByClassName('filters-modal-count')[0].innerHTML = `${this._lastSize != null ? `${this._lastSize.toLocaleString()}` : 'All'} objects`;\n\t}\n\n\t/**\n\t * @override\n\t */\n\tshow() {\n\t\tthis.onShow();\n\t\tsuper.show();\n\t}\n\n\t/**\n\t * On asteroid checkbox change\n\t * @param {Event} e - input event\n\t */\n\thandleAsteroidCheck(e) {\n\t\tconst checked = e.target.checked;\n\t\tthis.filtersManager.setFilter('asteroids', checked, this._filterCallback);\n\t}\n\n\t/**\n\t * On comet checkbox change\n\t * @param {Event} e - input event\n\t */\n\thandleCometCheck(e) {\n\t\tconst checked = e.target.checked;\n\t\tthis.filtersManager.setFilter('comets', checked, this._filterCallback);\n\t}\n\n\t/**\n\t * On PHO toggle\n\t * @param {Event} e - input event\n\t */\n\thandlePHOToggle(e) {\n\t\tconst checked = e.target.checked;\n\t\tthis.filtersManager.setFilter('phos', checked, this._filterCallback);\n\t}\n\n\t/**\n\t * Execute after filtering\n\t * @param {number} size\n\t */\n\t_filterCallback(size) {\n\t\tthis._lastSize = size;\n\t\tdocument.getElementsByClassName('filters-modal-count')[0].innerHTML = `${this._lastSize?.toLocaleString()} objects`;\n\t}\n\n\t/**\n\t * Clicked 'CLear all filters'\n\t */\n\thandleResetFilters() {\n\t\tconst filters = this.filtersManager.getFilters();\n\n\t\tif (filters.asteroids) document.getElementById('filters-asteroids-checkbox').click();\n\t\tif (filters.comets) document.getElementById('filters-comets-checkbox').click();\n\t\tif (filters.phos) document.getElementById('filters-phos-toggle').click();\n\n\t\t// Reset obj count label when filters are reset\n\t\tthis._lastSize = this._app.neos.size;\n\t}\n\n\t/**\n\t * Help ? clicked\n\t * @param {Event} e - HTMLElement event\n\t */\n\thandleHelp(e) {\n\t\tthis._app.getComponent('definitionOverlay').navigateToDefinition(e.target?.dataset?.def);\n\t}\n}\n\nFiltersModal.html = html;\n\nexport default FiltersModal;\n","import FiltersModal from './filters_modal';\nimport './filters_modal.css';\n\nexport default FiltersModal;\n","import FiltersModal from './filters_modal';\nimport LearnModal from './learn_modal';\n\nexport {\n\tFiltersModal,\n\tLearnModal\n};\n","import LearnModal from './learn_modal';\nimport './learn_modal.css';\n\nexport default LearnModal;\n","import { BaseApp, BaseComponent } from 'eyes';\n\nimport html from './learn_modal.html';\nimport './learn_modal.css';\n\nimport storyInfo from '../../../../configs/story_info.json';\n\n/**\n * Learn modal component.\n * @extends BaseComponent\n */\nclass LearnModal extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {import('eyes').Options} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, null, {\n\t\t\t...options\n\t\t});\n\n\t\tthis._title = 'Learn';\n\t\tthis._svg = './assets/default/svg/learn.svg';\n\t}\n\n\t/**\n\t * Navigates router to a story\n\t * @param {object} story\n\t */\n\tgoToStory(story) {\n\t\tconst router = this._app.getManager('router');\n\t\tdocument.getElementsByClassName('asteroid-modal-close')[0]?.click();\n\t\t// Use a 0.2s timeout to allow the modal to fade out cleanly\n\t\t// Otherwise returning from a story keeps the modal on screen for that brief second\n\t\tsetTimeout(() => {\n\t\t\trouter.navigate({ __remove: ['modal'] }, `/story/${story.path}`);\n\t\t}, 200);\n\t}\n\n\t/**\n\t * Called when the modal is opened\n\t */\n\tonShow() {\n\t\tconst stories = storyInfo || [];\n\t\tconst modalBody = this._children.asteroidLearnModalBody;\n\t\tif (modalBody) {\n\t\t\tmodalBody.textContent = '';\n\t\t\tstories.forEach(story => {\n\t\t\t\tconst markup = [\n\t\t\t\t\t'<div class=\"learn-modal-story-card-hover\"></div>',\n\t\t\t\t\t`<h3 class=\"learn-modal-story-card-title\">${story.title}</h3>`,\n\t\t\t\t\tstory.questions.map((q) => {\n\t\t\t\t\t\treturn `<div class=\"learn-modal-story-card-question\">${q}</div>`;\n\t\t\t\t\t}).join('\\n')\n\t\t\t\t].join('\\n');\n\n\t\t\t\tconst card = document.createElement('div');\n\t\t\t\tcard.className = 'learn-modal-story-card';\n\t\t\t\tcard.innerHTML = markup;\n\t\t\t\tcard.addEventListener('click', () => {\n\t\t\t\t\tthis.goToStory(story);\n\t\t\t\t});\n\n\t\t\t\tmodalBody.append(card);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @override\n\t */\n\tshow() {\n\t\tthis.onShow();\n\t\tsuper.show();\n\t}\n}\n\nLearnModal.html = html;\n\nexport default LearnModal;\n","import { BaseApp, CarouselPanel, AppUtils } from 'eyes';\nimport { MathUtils, OrbitalElements, Quaternion, TimeUtils, Vector3 } from 'pioneer';\n\nimport './asteroid_panel.css';\n\n/**\n * AsteroidPanel extends CarouselPanel\n */\nexport class AsteroidPanel extends CarouselPanel {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, {\n\t\t\t// Class names\n\t\t\tpanelTypeClass: 'asteroid-panel',\n\t\t\tcarouselClass: 'asteroid-carousel',\n\t\t\tprevButtonClass: 'asteroid-carousel-prev',\n\t\t\tnextButtonClass: 'asteroid-carousel-next',\n\n\t\t\t// Options\n\t\t\ttitle: 'Asteroid Panel',\n\t\t\tcaption: '',\n\t\t\theaderIconClass: 'asteroid',\n\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Boolean to say whether the panel is populated with data.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isPopulated = false;\n\n\t\tthis._expandOnShow = true;\n\t}\n\n\t/**\n\t * Compose the watch carousel slides\n\t * @param {object} neoData\n\t * @param {object} heroData\n\t */\n\tpopulate(neoData, heroData) {\n\t\t// Set title and icon\n\t\tconst icon = neoData.comet ? 'comet' : 'asteroid';\n\t\tthis.setState({\n\t\t\ttitle: neoData.name,\n\t\t\theaderIconClass: icon\n\t\t});\n\n\t\t// Generate tab content.\n\t\tconst allTabsContent = [];\n\n\t\tconst essentialStats = this.getEssentialStats(neoData, heroData);\n\t\tessentialStats.length && allTabsContent.push({\n\t\t\ttitle: 'Essential stats',\n\t\t\tcontent: essentialStats\n\t\t});\n\n\t\tconst orbitalPath = this.getOrbitalPath(neoData);\n\t\torbitalPath.length && allTabsContent.push({\n\t\t\ttitle: 'Orbital path',\n\t\t\tcontent: orbitalPath\n\t\t});\n\n\t\tconst closeApproach = this.getCloseApproach(neoData, heroData);\n\t\tcloseApproach.length && allTabsContent.push({\n\t\t\ttitle: 'Close approach',\n\t\t\tcontent: closeApproach\n\t\t});\n\n\t\t// Create the tabs and init the swiper.\n\t\tthis.createTabs(allTabsContent);\n\n\t\t// Set populated to true;\n\t\tthis._isPopulated = true;\n\t}\n\n\t/**\n\t * Return essential stats\n\t * @param {object} neoData\n\t * @param {object} heroData\n\t * @returns {Array}\n\t */\n\tgetEssentialStats(neoData, heroData) {\n\t\tconst { pioneerName, diameter, diameterEstimated, nextClosestApproachTime } = neoData;\n\n\t\tconst neoEntity = this._app._scene.get(pioneerName);\n\t\tconst earthEntity = this._app._scene.get('earth');\n\t\tconst essentialStats = [];\n\n\t\t// Add discovery content.\n\t\tif (heroData?.stats?.discovery) {\n\t\t\tessentialStats.push({\n\t\t\t\ttitle: 'Discovery',\n\t\t\t\tcontent: heroData.stats.discovery\n\t\t\t});\n\t\t}\n\n\t\t// Add size content.\n\t\tif (diameter) {\n\t\t\tessentialStats.push({\n\t\t\t\ttitle: 'Size',\n\t\t\t\tcontent: `<p>Average ${diameterEstimated ? 'estimated' : ''} diameter</p>`,\n\t\t\t\tvalue: `${AppUtils.formatNumber(diameter * 1000, 2)} m`\n\t\t\t});\n\t\t}\n\n\t\t// Add distance content.\n\t\tconst posDifference = new Vector3();\n\t\tneoEntity.getPositionRelativeToEntity(posDifference, Vector3.Zero, earthEntity);\n\t\tconst distanceKm = posDifference.magnitude();\n\t\tconst distanceAU = distanceKm / AppUtils.conversionTable.auToKm;\n\n\t\tif (!posDifference.isNaN()) {\n\t\t\tessentialStats.push({\n\t\t\t\ttitle: 'Distance',\n\t\t\t\tcontent: '<p>Current distance from Earth</p>',\n\t\t\t\tvalue: `${AppUtils.formatNumber(distanceAU, 2)} <span class=\"clickable underline\" data-def=\"au\">AU</span>`\n\t\t\t});\n\t\t}\n\n\t\t// Add velocity.\n\t\tconst asteroidVelocity = new Vector3();\n\t\tneoEntity.getVelocityAtTime(asteroidVelocity, nextClosestApproachTime);\n\n\t\tconst magnitude = asteroidVelocity.magnitude();\n\t\tif (magnitude) {\n\t\t\tessentialStats.push({\n\t\t\t\ttitle: 'Velocity',\n\t\t\t\tcontent: '<p>Current velocity relative to the Sun</p>',\n\t\t\t\tvalue: `${AppUtils.formatNumber(magnitude, 2)} km/s`\n\t\t\t});\n\t\t}\n\n\t\t// Add rotation period.\n\t\tif (heroData?.stats?.rotation) {\n\t\t\tessentialStats.push({\n\t\t\t\ttitle: 'Period of Rotation',\n\t\t\t\tcontent: '<p>Time to complete one full rotation</p>',\n\t\t\t\tvalue: `${AppUtils.formatNumber(heroData.stats.rotation, 2)} hours`\n\t\t\t});\n\t\t}\n\n\t\treturn essentialStats;\n\t}\n\n\t/**\n\t * Return orbital path\n\t * @param {object} neoData\n\t * @returns {Array}\n\t */\n\tgetOrbitalPath(neoData) {\n\t\tconst { orbitalElements } = neoData;\n\n\t\tconst orbitalPath = [];\n\n\t\tif (orbitalElements) {\n\t\t\t// Add orbital period.\n\t\t\tconst period = orbitalElements.getPeriod();\n\t\t\tconst days = Math.round(period / 86400); // seconds to days\n\t\t\tconst years = days / 365;\n\t\t\tconst time = years >= 1\n\t\t\t\t? `${AppUtils.formatNumber(years, 2)} ${years === 1 ? 'year' : 'years'}`\n\t\t\t\t: `${AppUtils.formatNumber(days, 1)} ${days === 1 ? 'day' : 'days'}`;\n\n\t\t\torbitalPath.push({\n\t\t\t\ttitle: 'Orbital Period',\n\t\t\t\tcontent: '<p>Time to complete one solar orbit</p>',\n\t\t\t\tvalue: time\n\t\t\t});\n\n\t\t\t// Add eccentricity.\n\t\t\tconst { eccentricity } = orbitalElements;\n\n\t\t\tif (eccentricity) {\n\t\t\t\torbitalPath.push({\n\t\t\t\t\ttitle: 'Eccentricity',\n\t\t\t\t\tcontent: '<p>Deviation from circular orbit</p>',\n\t\t\t\t\tvalue: AppUtils.formatNumber(eccentricity, 3)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Perihelion, aphelion and inclination calculations.\n\t\t\t// The transformation from J2000Ecipse to J2000 coordinates.\n\t\t\tconst eclipJ2000ToJ2000Rotation = new Quaternion(0.9791532214288992, 0.2031230389823101, 0, 0);\n\n\t\t\tconst orbitalElementsRelEcliptic = new OrbitalElements();\n\t\t\torbitalElementsRelEcliptic.copy(orbitalElements);\n\t\t\torbitalElementsRelEcliptic.orbitOrientation.multInverseL(eclipJ2000ToJ2000Rotation, orbitalElementsRelEcliptic.orbitOrientation);\n\n\t\t\tconst periapsisKm = orbitalElementsRelEcliptic.getPeriapsis();\n\t\t\tif (periapsisKm) {\n\t\t\t\torbitalPath.push({\n\t\t\t\t\ttitle: 'Perihelion',\n\t\t\t\t\tcontent: '<p>Closest distance to the Sun<p/>',\n\t\t\t\t\tvalue: `${AppUtils.formatNumber(periapsisKm / AppUtils.conversionTable.auToKm, 2)} <span class=\"clickable underline\" data-def=\"au\">AU</span>`\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst apoapsisKm = orbitalElementsRelEcliptic.getApoapsis();\n\t\t\tif (apoapsisKm) {\n\t\t\t\torbitalPath.push({\n\t\t\t\t\ttitle: 'Aphelion',\n\t\t\t\t\tcontent: '<p>Farthest distance from the Sun</p>',\n\t\t\t\t\tvalue: `${AppUtils.formatNumber(apoapsisKm / AppUtils.conversionTable.auToKm, 2)} <span class=\"clickable underline\" data-def=\"au\">AU</span>`\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst inclination = orbitalElementsRelEcliptic.getInclination();\n\t\t\tif (inclination) {\n\t\t\t\torbitalPath.push({\n\t\t\t\t\ttitle: 'Inclination',\n\t\t\t\t\tcontent: '<p>Angle relative to the x-y ecliptic plane</p>',\n\t\t\t\t\tvalue: `${AppUtils.formatNumber(MathUtils.radToDeg(inclination), 3)} deg`\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn orbitalPath;\n\t}\n\n\t/**\n\t * Return close approach\n\t * @param {object} neoData\n\t * @param {object} heroData\n\t * @returns {Array}\n\t */\n\tgetCloseApproach(neoData, heroData) {\n\t\tconst { nextClosestApproachDistance, nextClosestApproachTime } = neoData;\n\t\tconst closeApproach = [];\n\n\t\tif (heroData?.approach?.fact) {\n\t\t\tcloseApproach.push({\n\t\t\t\tcontent: heroData.approach.fact\n\t\t\t});\n\t\t}\n\n\t\tif (nextClosestApproachTime) {\n\t\t\tconst unixSeconds = TimeUtils.etToUnix(nextClosestApproachTime);\n\t\t\tconst date = new Date(unixSeconds * 1000);\n\n\t\t\tif (date) {\n\t\t\t\tcloseApproach.push({\n\t\t\t\t\ttitle: 'Date',\n\t\t\t\t\tcontent: '<p>Closest approach to Earth < 0.05 <span class=\"clickable underline\" data-def=\"au\">AU</span></p>',\n\t\t\t\t\tvalue: AppUtils.formatDate(date)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (nextClosestApproachDistance) {\n\t\t\tcloseApproach.push({\n\t\t\t\ttitle: 'Distance',\n\t\t\t\tcontent: '<p>Nearest distance to Earth</p>',\n\t\t\t\tvalue: `${AppUtils.formatNumber(nextClosestApproachDistance, 0)} km`\n\t\t\t});\n\t\t}\n\n\t\treturn closeApproach;\n\t}\n\n\t/**\n\t * Only show panel when it's populated.\n\t * @override\n\t */\n\tshow(initSwiper = true) {\n\t\tthis._isPopulated && super.show(initSwiper);\n\t}\n\n\t/**\n\t * @override\n\t */\n\t_destroy() {\n\t\tthis._isPopulated = false;\n\n\t\tsuper._destroy();\n\t}\n}\n","import {\n\tBreadcrumb as BaseBreadcrumb\n} from 'eyes';\nimport './breadcrumb.css';\n\n/**\n * Breadcrumb for Asteroids.\n * @extends BaseBreadcrumb\n */\nexport class Breadcrumb extends BaseBreadcrumb {\n\t/**\n\t * @inheritdoc\n\t * @override\n\t */\n\tasync init() {\n\t\tsuper.init();\n\t\tthis.setState({\n\t\t\tmoduleText: this._crumbTexts.asteroids\n\t\t});\n\t}\n\n\t/**\n\t * @inheritdoc\n\t * @override\n\t */\n\t_goToHome() {\n\t\tthis._app.getManager('router').navigate({ __remove: 'all' }, '/home');\n\t}\n}\n","import { BaseApp, BaseComponent } from 'eyes';\nimport { TimeUtils } from 'pioneer';\nimport html from './countdown.html';\n\nimport './countdown.css';\n\n/**\n * Countdown component.\n */\nexport class Countdown extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, null, {\n\t\t\tisVisible: true,\n\t\t\ttText: 'T -',\n\t\t\tnumDays: '00',\n\t\t\tnumHours: '00',\n\t\t\tnumMinutes: '00',\n\t\t\tnumSeconds: '00',\n\t\t\t...options\n\t\t});\n\n\t\tthis._timeTarget = null;\n\t\tthis._remainingSeconds = null;\n\n\t\tthis.bindFunctions(['update']);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('time'),\n\t\t\tevent: 'update',\n\t\t\tcallback: this.update\n\t\t});\n\t}\n\n\t/**\n\t * Parse remaining seconds\n\t * @param {number} remaining\n\t * @returns {object}\n\t */\n\t_parseRemaining(remaining) {\n\t\tconst minuteSeconds = 60;\n\t\tconst hourSeconds = minuteSeconds * 60;\n\t\tconst daySeconds = hourSeconds * 24;\n\n\t\tlet numSeconds = parseInt(Math.abs(remaining), 10);\n\n\t\tconst numDays = Math.floor(numSeconds / daySeconds);\n\t\tnumSeconds -= numDays * daySeconds;\n\t\tconst numHours = Math.floor(numSeconds / hourSeconds);\n\t\tnumSeconds -= numHours * hourSeconds;\n\t\tconst numMinutes = Math.floor(numSeconds / minuteSeconds);\n\t\tnumSeconds -= numMinutes * minuteSeconds;\n\n\t\treturn {\n\t\t\ttText: remaining > 0 ? 'T﹣' : 'T﹢',\n\t\t\tnumDays: String(numDays).padStart(2, '0'),\n\t\t\tnumHours: String(numHours).padStart(2, '0'),\n\t\t\tnumMinutes: String(numMinutes).padStart(2, '0'),\n\t\t\tnumSeconds: String(numSeconds).padStart(2, '0')\n\t\t};\n\t}\n\n\t/**\n\t * Update time display.\n\t * @param {import('moment').Moment} currentMoment\n\t */\n\tupdate(currentMoment) {\n\t\t// Don't update if not visible\n\t\t// Todo: make sure to set hide countdown when it's not visible (not sure if hiding parent component affects it)\n\t\tif (!this._state.isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the pioneer ET time in order to reduce multiple ET to UNIX conversions\n\t\tconst currentEtTime = this._app?._pioneer?.getTime() || TimeUtils.unixToEt(currentMoment.valueOf() * 0.001);\n\n\t\t// Calculate remaining seconds and only update if it's changed.\n\t\tconst remainingSeconds = Math.round(this._timeTarget - currentEtTime);\n\n\t\tif (remainingSeconds !== this._remainingSeconds) {\n\t\t\t// parse remaining, set states, and _remainingSeconds prop\n\n\t\t\tconst {\n\t\t\t\ttText,\n\t\t\t\tnumDays,\n\t\t\t\tnumHours,\n\t\t\t\tnumMinutes,\n\t\t\t\tnumSeconds\n\t\t\t} = this._parseRemaining(remainingSeconds);\n\n\t\t\tthis.setState({\n\t\t\t\ttText,\n\t\t\t\tnumDays,\n\t\t\t\tnumHours,\n\t\t\t\tnumMinutes,\n\t\t\t\tnumSeconds\n\t\t\t});\n\n\t\t\tthis._remainingSeconds = remainingSeconds;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the time target in Ephemeris Time (ET)\n\t * @param {number} time\n\t */\n\tsetTimeTarget(time) {\n\t\tthis._timeTarget = time;\n\t}\n\n\t/**\n\t * Gets time target.\n\t * @returns {number}\n\t */\n\tgetTimeTarget() {\n\t\treturn this._timeTarget;\n\t}\n\n\t/**\n\t *\n\t */\n\thide() {\n\t\tconsole.log('hide');\n\t\tsuper.hide();\n\t}\n}\n\nCountdown.html = html;\n","import { AppUtils, BaseComponent, CancelToken } from 'eyes';\nimport html from './definition_overlay.html';\nimport definitions from '../../data/definitions.json';\n\nimport './definition_overlay.css';\n\n/**\n * Layer panel component.\n */\nexport class DefinitionOverlay extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\t// Add state options\n\t\tsuper(app, null, {\n\t\t\tisVisible: false\n\t\t});\n\n\t\t// Store imported json definitions in class variable.\n\t\tthis._definitions = definitions;\n\n\t\t// Define router reference.\n\t\tthis._router = null;\n\n\t\t// Define the query unsubscribe reference.\n\t\tthis._queryUnsubscribe = null;\n\n\t\t// Define the scrollbar component.\n\t\tthis._scrollbar = null;\n\n\t\t// Override small font size.\n\t\tthis._class.fontSize.small = '';\n\n\t\t// Keep track of definition histories\n\t\tthis._activeDef = null;\n\t\tthis._prevDef = null;\n\n\t\t// Add default class to state\n\t\tObject.assign(this._state, {\n\t\t\ttitle: null,\n\t\t\tcontent: null,\n\t\t\tfontSizeClass: ''\n\t\t});\n\n\t\t// Bind functions called outside this class that need use 'this'.\n\t\tthis.bindFunctions([\n\t\t\t'navigateToDefinition',\n\t\t\t'_updateDefinition',\n\t\t\t'_handleOutsideClick',\n\t\t\t'_handleContainerClick'\n\t\t]);\n\t}\n\n\t/**\n\t * Initialization.\n\t */\n\tinit() {\n\t\tsuper.init();\n\n\t\t// Assign _router and subscribe to the definition query.\n\t\tthis._router = this._app.getManager('router');\n\t}\n\n\t/**\n\t * Called when the url get params change. Wraps _updateDefinition\n\t * @param {object} params\n\t * @param {CancelToken} params.cancelToken\n\t * @param {string} params.definition\n\t */\n\tasync onQueryChange({ cancelToken, definition } = {}) {\n\t\t// Check if route was canceled\n\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._prevDef = this._activeDef;\n\t\tthis._activeDef = definition;\n\t\tthis._updateDefinition(this._activeDef, this._prevDef);\n\t}\n\n\t/**\n\t * Determine if the definition string has a matching object config\n\t * @param {string} currDefinition\n\t * @param {string} prevDefinition\n\t */\n\t_updateDefinition(currDefinition, prevDefinition) {\n\t\t// Validate definition by checking if its in our definitions data object.\n\t\tconst currDefObj = this._definitions[currDefinition] ?? false;\n\t\tconst prevDefObj = this._definitions[prevDefinition] ?? false;\n\n\t\tif (currDefObj) {\n\t\t\tconst { title, html: content, related } = currDefObj;\n\n\t\t\t// Set the states to populate the content.\n\t\t\tthis.setState({ title, content });\n\n\t\t\t// A nice extension to Mi's nullish coalescing operator skillshare:\n\t\t\t// https://stackoverflow.com/questions/1011317/replace-a-value-if-null-or-undefined-in-javascript\n\t\t\tthis._scrollbar ??= AppUtils.addScrollbar(this._children.contentEl, {\n\t\t\t\tsizeAutoCapable: true\n\t\t\t});\n\n\t\t\t// Make sure to scroll to the top of the content (it may have previosly scrolled down in portrait mobile)\n\t\t\tthis._scrollbar.scroll(0, 300);\n\n\t\t\t// Create the related terms elements\n\t\t\tconst relatedElements = related.map(defId => {\n\t\t\t\tconst title = this._definitions[defId]?.title;\n\t\t\t\tconst relatedItem = document.createElement('div');\n\t\t\t\trelatedItem.className = 'definition-related-item small clickable';\n\t\t\t\trelatedItem.setAttribute('data-def', defId);\n\t\t\t\trelatedItem.innerText = title;\n\t\t\t\treturn relatedItem;\n\t\t\t});\n\n\t\t\t// Replace the children of the related element container\n\t\t\tthis._children.relatedEl.replaceChildren(...relatedElements);\n\n\t\t\t// Only show if we had no prev definition.\n\t\t\tif (!prevDefObj) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}\n\t\telse if (prevDefObj) {\n\t\t\t// We had a prev definition but now we dont have one at all so we need to hide the overlay\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Update the router query.\n\t * @param {string} definitionId\n\t */\n\tnavigateToDefinition(definitionId) {\n\t\tif (definitionId) {\n\t\t\tthis._router.navigate({ definition: definitionId }, this._router.currentRoute.url);\n\t\t}\n\t\t// if false is specifically passed, remove the query\n\t\telse if (definitionId === false) {\n\t\t\tthis._router.navigate({ __remove: ['definition'] }, this._router.currentRoute.url);\n\t\t}\n\t}\n\n\t/**\n\t * Update the route to navigate to a story (slide number optional).\n\t * @param {string} storyId\n\t * @param {string} storySlide\n\t */\n\tnavigateToStory(storyId, storySlide = '1') {\n\t\tconst query = { slide: `slide_${storySlide}` };\n\t\tconst path = `/story/${storyId}`;\n\t\tconst options = { __remove: ['modal', 'definition'] };\n\n\t\tthis.app.getManager('router').navigate(query, path, options);\n\t}\n\n\t/**\n\t * Handle click outside overlay\n\t * @param {event} e\n\t */\n\t_handleOutsideClick(e) {\n\t\te.stopPropagation();\n\t\tthis.navigateToDefinition(false);\n\t}\n\n\t/**\n\t * Handle click in container, if we find a data-def attribute, navigate to the definition\n\t * @param {event} e\n\t */\n\t_handleContainerClick(e) {\n\t\te.stopPropagation();\n\n\t\tconst { storyid: storyId, storyslide: storySlide, def: definitionId } = e?.target?.dataset || {};\n\n\t\tif (storyId) {\n\t\t\tthis.navigateToStory(storyId, storySlide);\n\t\t}\n\t\telse if (definitionId) {\n\t\t\tthis.navigateToDefinition(definitionId);\n\t\t}\n\t}\n\n\t/**\n\t * Overrides destroy method.\n\t */\n\t__destroy() {\n\t\t// Unsubscribe from query.\n\t\tif (typeof this._queryUnsubscribe === 'function') {\n\t\t\tthis._queryUnsubscribe();\n\t\t}\n\n\t\t// Make sure references are null.\n\t\tthis._queryUnsubscribe = null;\n\n\t\tthis._router = null;\n\n\t\tthis._definitions = null;\n\n\t\t// Call superclass __destroy method.\n\t\tsuper.__destroy();\n\t}\n}\n\nDefinitionOverlay.html = html;\n","import { BaseApp, CarouselPanel } from 'eyes';\n\nimport './following_panel.css';\n\n/**\n * FollowingPanel extends CarouselPanel\n */\nexport class FollowingPanel extends CarouselPanel {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, {\n\t\t\t// Class names\n\t\t\tpanelTypeClass: 'following-panel',\n\n\t\t\t// Options\n\t\t\ttitle: '',\n\t\t\tpreTitle: 'following',\n\n\t\t\t...options\n\t\t});\n\t}\n}\n","import { BaseComponent } from 'eyes';\n\nimport './home_button.css';\n\n/**\n * HomeButton component\n */\nexport class HomeButton extends BaseComponent {\n\t/**\n\t * Initilizing the component\n\t */\n\tinit() {\n\t\tthis._element = document.createElement('h5');\n\t\tthis._element.innerText = 'See all asteroids';\n\t\tthis._element.className = 'home-button clickable {{isVisibleClass}}';\n\n\t\t// Add the click event.\n\t\tthis._element.addEventListener('click', () => {\n\t\t\t// Navigate home, resetting query.\n\t\t\tconst routeManager = this._app.getManager('router');\n\n\t\t\t// const currentQuery = routeManager.buildQuery(routeManager.query);\n\t\t\trouteManager.navigate({ __remove: 'all' }, '/home');\n\t\t});\n\n\t\tsuper.init();\n\t}\n}\n","import { BaseApp, CarouselPanel, AppUtils, TimeManager, RouteManager } from 'eyes';\n\nimport './mission_panel.css';\n\n/**\n * MissionPanel extends CarouselPanel\n */\nexport class MissionPanel extends CarouselPanel {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, {\n\t\t\t// Class names\n\t\t\tpanelTypeClass: 'mission-panel',\n\t\t\tcarouselClass: 'mission-carousel',\n\t\t\tprevButtonClass: 'mission-carousel-prev',\n\t\t\tnextButtonClass: 'mission-carousel-next',\n\n\t\t\t// Options\n\t\t\ttitle: 'Mission Panel',\n\t\t\tcaption: '',\n\t\t\theaderIconClass: 'spacecraft',\n\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Boolean to say whether the panel is populated with data.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isPopulated = false;\n\n\t\tthis._expandOnShow = true;\n\t}\n\n\t/**\n\t * Compose the watch carousel slides\n\t * @param {string} title\n\t * @param {string} blurb\n\t * @param {string} cameraTarget\n\t * @param {object} events\n\t */\n\tpopulate(title, blurb, cameraTarget, events = {}) {\n\t\tconst { hideExternalLinks } = this._app.getManager('router').configs;\n\n\t\tconst panelTitle = hideExternalLinks === true ? this._app.getManager('content').hideExternalLinksInText(title) : title;\n\n\t\t// Set title\n\t\tthis.setState({ title: panelTitle });\n\n\t\t// Generate tab content.\n\t\tconst allTabsContent = [];\n\n\t\tconst panelBlurb = hideExternalLinks === true ? this._app.getManager('content').hideExternalLinksInText(blurb) : blurb;\n\n\t\tpanelBlurb && allTabsContent.push({\n\t\t\ttitle: 'Overview',\n\t\t\tcontent: [{ content: `<p class='long'>${panelBlurb}</p>` }]\n\t\t});\n\n\t\t// Filter events with 'visual' flag\n\t\tconst filteredEvents = events ? Object.values(events).filter(({ visual }) => visual) : [];\n\n\t\t// Create content array\n\t\tif (filteredEvents.length) {\n\t\t\tconst timeManager = /** @type {TimeManager} */(this.app.getManager('time'));\n\t\t\tconst routeManager = /** @type {RouteManager} */(this.app.getManager('router'));\n\t\t\tconst content = filteredEvents.map(({ title, start, rate, target, id, distance, verticleOffset, horizontalOffset }) => {\n\t\t\t\tconst dateInt = start?.valueOf();\n\t\t\t\tconst date = dateInt && new Date(dateInt);\n\n\t\t\t\treturn {\n\t\t\t\t\ttitle,\n\t\t\t\t\t...date && {\n\t\t\t\t\t\tcontent: `<p>${AppUtils.formatDate(date)}</p>`,\n\t\t\t\t\t\tvalue: 'Watch'\n\t\t\t\t\t},\n\t\t\t\t\tonClick: async () => {\n\t\t\t\t\t\tif (start && routeManager?.currentRoute) {\n\t\t\t\t\t\t\t// Prevent clock to stop due to min time limit reached\n\t\t\t\t\t\t\tif (id === 'launch') {\n\t\t\t\t\t\t\t\tstart = start.clone().add(1, 's');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttimeManager.setTime(start);\n\t\t\t\t\t\t\ttimeManager.setTimeRate(rate || 1);\n\t\t\t\t\t\t\tconst query = {\n\t\t\t\t\t\t\t\ttime: timeManager.getTimeUrl(),\n\t\t\t\t\t\t\t\trate: timeManager.getTimeRate()\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Reset filters to avoid missing entities\n\t\t\t\t\t\t\tthis.app.getComponent('filtersModal').handleResetFilters();\n\n\t\t\t\t\t\t\tawait routeManager.navigate(query, routeManager.currentRoute.url);\n\t\t\t\t\t\t\t// Align to target\n\t\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\t\t// Make sure targets are loaded\n\t\t\t\t\t\t\t\tawait this.app.getManager('scene').isListReady([cameraTarget, target]);\n\t\t\t\t\t\t\t\tawait this.app.scene.getEntity(cameraTarget).getLoadedPromise();\n\t\t\t\t\t\t\t\tawait this.app.scene.getEntity(target).getLoadedPromise();\n\t\t\t\t\t\t\t\tawait this.app.cameraScripts.alignObjects(cameraTarget, target, {\n\t\t\t\t\t\t\t\t\tduration: 1,\n\t\t\t\t\t\t\t\t\tdistance: distance ?? 0.1,\n\t\t\t\t\t\t\t\t\tverticleOffset: verticleOffset ?? 0,\n\t\t\t\t\t\t\t\t\thorizontalOffset: horizontalOffset ?? 0\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tallTabsContent.push({\n\t\t\t\ttitle: 'Events',\n\t\t\t\tcontent\n\t\t\t});\n\t\t}\n\n\t\t// Create the tabs and init the swiper.\n\t\tthis.createTabs(allTabsContent);\n\n\t\t// Set populated to true;\n\t\tthis._isPopulated = true;\n\t}\n\n\t/**\n\t * Only show panel when it's populated.\n\t * @override\n\t */\n\tshow(initSwiper = true) {\n\t\tthis._isPopulated && super.show(initSwiper);\n\t}\n\n\t/**\n\t * @override\n\t */\n\t_destroy() {\n\t\tthis._isPopulated = false;\n\n\t\tsuper._destroy();\n\t}\n}\n","import { BaseApp, BaseComponent } from 'eyes';\n\nimport html from './navigation.html';\nimport './navigation.css';\n\n/**\n * Navigation component.\n * @extends BaseComponent\n */\nexport class Navigation extends BaseComponent {\n\t/**\n\t * Constructor\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app, null, {\n\t\t\tposition: 'top'\n\t\t});\n\n\t\tthis._entries = {};\n\n\t\t// Binds\n\t\tthis.bindFunctions(['toggleBadge']);\n\t}\n\n\t/**\n\t * Setup menu elements\n\t * @param {Array} param - list of menu elements\n\t */\n\tsetup(param) {\n\t\tconst { position = 'top', entry = [] } = param;\n\t\tthis.setState({ position });\n\n\t\tthis._children.list.innerHTML = '';\n\t\tfor (let i = 0; i < entry.length; i += 1) {\n\t\t\tconst div = document.createElement('div');\n\t\t\tdiv.className = 'clickable';\n\t\t\tif (entry[i].active) {\n\t\t\t\tdiv.classList.add('active');\n\t\t\t}\n\t\t\tconst button = document.createElement('button');\n\n\t\t\tbutton.innerHTML = `<div><h2>${entry[i].title}</h2><div class=\"navigation-badge\"></div></div>`;\n\n\t\t\tif (entry[i].svg) {\n\t\t\t\tconst img = document.createElement('img');\n\t\t\t\timg.src = entry[i].svg;\n\t\t\t\timg.alt = entry[i].title;\n\t\t\t\tdiv.appendChild(img);\n\t\t\t}\n\t\t\tdiv.appendChild(button);\n\n\t\t\tif (entry[i].onClick) {\n\t\t\t\tdiv.addEventListener(\n\t\t\t\t\t'click',\n\t\t\t\t\te => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tentry[i].onClick(entry[i], e);\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tdiv.addEventListener(\n\t\t\t\t\t'touchend',\n\t\t\t\t\te => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tentry[i].onClick(entry[i], e);\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._entries[entry[i].title] = { entry: entry[i], element: div };\n\n\t\t\tthis._children.list.append(div);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles or sets the navigation item's active state\n\t * @param {string} entryName\n\t * @param {boolean?} on\n\t */\n\ttoggleActive(entryName, on) {\n\t\tif (this._entries[entryName]) {\n\t\t\tconst elm = this._entries[entryName].element;\n\t\t\tconst wasOn = elm.classList.contains('active');\n\t\t\tif (wasOn !== on) {\n\t\t\t\telm.classList.toggle('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles or sets the navigation item's badged state\n\t * @param {string} entryName\n\t * @param {boolean?} on\n\t */\n\ttoggleBadge(entryName, on) {\n\t\tif (this._entries[entryName]) {\n\t\t\tconst elm = this._entries[entryName].element;\n\t\t\tconst wasOn = elm.classList.contains('badged');\n\t\t\tif (wasOn !== on) {\n\t\t\t\telm.classList.toggle('badged');\n\t\t\t}\n\t\t}\n\t}\n}\n\nNavigation.html = html;\n","import { Search as EyesSearch } from 'eyes';\n\n/**\n * @inheritdoc\n * @extends EyesSearch\n */\nexport class Search extends EyesSearch {\n\t/**\n\t * @inheritdoc\n\t * @override\n\t */\n\t_getLink(link) {\n\t\treturn this._app.getManager('link')?.getParsedLink?.(link) || link;\n\t}\n}\n","import { Settings as EyesSettings } from 'eyes';\n\n/**\n * AsteroidsSettings.\n */\nexport class AsteroidsSettings extends EyesSettings {\n\t/**\n\t * Toggle info panel override.\n\t */\n\ttoggleInfoPanel() {\n\t\tconst tutorialIndex = 0;\n\t\tconst goHome = true;\n\t\tthis._app.getComponent('tutorialOverlay')?.navigateToTutorial(tutorialIndex, goHome);\n\t}\n}\n","import { BaseApp, BaseComponent } from 'eyes';\nimport html from './splash_screen.html';\n\nimport './splash_screen.css';\n\n/**\n * A Splash screen component.\n */\nexport class SplashScreen extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options = {}) {\n\t\t// call super class and  pass default state object.\n\t\tsuper(app, null, {\n\t\t\t...options\n\t\t});\n\n\t\tthis._dragging = false;\n\t\tthis._mousedownY = null;\n\t\tthis._mousewheelDeltaY = 0;\n\t\tthis._animationPercent = 0;\n\t\tthis._timeout = null;\n\t\tthis._lockEnd = false;\n\t}\n\n\t/**\n\t * Display the splash screen.\n\t */\n\t_displaySplash() {\n\t\tthis._element.style.pointerEvents = 'all';\n\n\t\tthis._element.addEventListener('mousedown', this._onDown.bind(this));\n\t\tthis._element.addEventListener('touchstart', this._onDown.bind(this));\n\t\tthis._element.addEventListener('mousemove', this._onMove.bind(this));\n\t\tthis._element.addEventListener('touchmove', this._onMove.bind(this));\n\t\tthis._element.addEventListener('mouseup', this._onUp.bind(this));\n\t\tthis._element.addEventListener('touchend', this._onUp.bind(this));\n\t\tthis._element.addEventListener('wheel', this._onWheel.bind(this));\n\n\t\t// Move past the splash screen after a timeout too\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._setAnimationPercent(1, true);\n\t\t}, 5500);\n\n\t\t// Create Random Stars\n\t\tlet starsBoxShadow1 = '';\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tstarsBoxShadow1 += `${parseInt(Math.random() * window.innerWidth)}px ${parseInt(Math.random() * window.innerHeight)}px hsl(0deg, 0%, ${parseInt(Math.random() * 80) + 20}%), `;\n\t\t}\n\t\tthis._children.splashScreenStars1.style.boxShadow = starsBoxShadow1.slice(0, -2);\n\n\t\tlet starsBoxShadow2 = '';\n\t\tfor (let i = 0; i < 24; i++) {\n\t\t\tstarsBoxShadow2 += `${parseInt(Math.random() * window.innerWidth)}px ${parseInt(Math.random() * window.innerHeight)}px hsl(0deg, 0%, ${parseInt(Math.random() * 80) + 20}%), `;\n\t\t}\n\t\tthis._children.splashScreenStars2.style.boxShadow = starsBoxShadow2.slice(0, -2);\n\n\t\t// Set default pioneer transition styles\n\t\tconst pioneerElm = document.getElementById('pioneer');\n\t\tif (pioneerElm) {\n\t\t\tpioneerElm.style.transform = 'scale(1.2)';\n\t\t\tpioneerElm.style.filter = 'brightness(0) grayscale(0)';\n\t\t\tpioneerElm.style.opacity = '0';\n\t\t}\n\n\t\t// End the loading screen.\n\t\tthis.app.endLoadingScreen();\n\t}\n\n\t/**\n\t * On Splash Screen mouse wheel\n\t * @param {MouseEvent} e\n\t */\n\t_onWheel(e) {\n\t\tthis._setAnimationPercent(1, true);\n\t}\n\n\t/**\n\t * On Splash Screen mouse or touch down\n\t * @param {MouseEvent} e\n\t */\n\t_onDown(e) {\n\t\tif (e.touches?.length > 0) e = e.touches[0];\n\t\tthis._mousedownY = e.clientY;\n\t}\n\n\t/**\n\t * On Splash Screen drag\n\t * @param {MouseEvent} e\n\t */\n\t_onMove(e) {\n\t\tif (e.touches?.length > 0) e = e.touches[0];\n\t\tconst dragDistance = this._mousedownY - e.clientY;\n\t\tif (this._mousedownY != null && dragDistance > 6) {\n\t\t\tthis._dragging = true;\n\t\t}\n\t\tif (this._dragging) {\n\t\t\tthis._setAnimationPercent(1, true);\n\t\t}\n\t}\n\n\t/**\n\t * On Splash Screen mouse or touch up\n\t */\n\t_onUp() {\n\t\tthis._setAnimationPercent(1, true);\n\n\t\tthis._dragging = false;\n\t\tthis._mousedownY = null;\n\t}\n\n\t/**\n\t * Sets the overall splash screen's animation completion\n\t * When percent == 1, the splash screen ends\n\t * @param {number} percent - actually between 0 and 1\n\t * @param {boolean} useTransitions\n\t */\n\t_setAnimationPercent(percent, useTransitions) {\n\t\tconst previousPercent = this._animationPercent;\n\n\t\tthis._animationPercent = percent;\n\t\tconst baseTransition = 'all 0.8s cubic-bezier(0.645, 0.045, 0.355, 1)';\n\t\tconst longTransition = 'all 1.1s cubic-bezier(0.645, 0.045, 0.355, 1)';\n\n\t\tthis._children.splashScreen.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreen.style.opacity = `${1 - (Math.pow(percent, 2))}`;\n\t\tthis._children.splashScreenAsteroid.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenAsteroid.style.width = `${68 - (percent * 30)}vh`;\n\t\tthis._children.splashScreenAsteroid.style.height = `${68 - (percent * 30)}vh`;\n\t\tthis._children.splashScreenEnterBackground.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenEnterBackground.style.top = `calc(${86 - (percent * 44)}% - 54px)`;\n\t\tthis._children.splashScreenEnterBackground.style.width = `${100 + (percent * 1200)}vw`;\n\t\tthis._children.splashScreenEnterBackground.style.height = `${100 + (percent * 1200)}vw`;\n\t\tthis._children.splashScreenText.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenText.style.top = `${55 - (percent * 40)}%`;\n\t\tthis._children.splashScreenTextEyes.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenTextEyes.style.lineHeight = `${60 - (percent * 50)}px`;\n\t\tthis._children.splashScreenTextOn.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenTextOn.style.lineHeight = `${40 - (percent * 50)}px`;\n\t\tthis._children.splashScreenTextAsteroids.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenTextAsteroids.style.lineHeight = `${80 - (percent * 50)}px`;\n\t\tthis._children.splashScreenEnter.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenEnter.style.top = `${81 - (percent * 30)}%`;\n\t\tthis._children.splashScreenStars1.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenStars1.style.marginTop = `${(percent * 1)}%`;\n\t\tthis._children.splashScreenStars2.style.transition = useTransitions ? baseTransition : 'unset';\n\t\tthis._children.splashScreenStars2.style.marginTop = `${(percent * 0.5)}%`;\n\n\t\t// Set pioneer transition styles\n\t\tconst pioneerElm = document.getElementById('pioneer');\n\t\tif (pioneerElm) {\n\t\t\tpioneerElm.style.transition = useTransitions ? longTransition : 'unset';\n\t\t\tpioneerElm.style.transform = `scale(${1.2 - (percent * 0.2)})`;\n\t\t\tpioneerElm.style.opacity = `${percent}`;\n\t\t\tpioneerElm.style.filter = `brightness(${percent}) grayscale(${1 - percent})`;\n\t\t}\n\n\t\t// Set the pointer events early so pioneer interaction is immediate\n\t\tif (this._animationPercent >= 1) {\n\t\t\tthis._element.style.pointerEvents = 'none';\n\t\t}\n\t\telse {\n\t\t\tthis._element.style.pointerEvents = 'all';\n\t\t}\n\n\t\tif (!this._dragging && this._animationPercent >= 1 && !this._lockEnd) {\n\t\t\tthis._lockEnd = true;\n\t\t\t// Remove the splash screen\n\t\t\tsetTimeout(() => {\n\t\t\t\tclearTimeout(this._timeout);\n\n\t\t\t\tif (pioneerElm) {\n\t\t\t\t\tpioneerElm.style.transform = 'unset';\n\t\t\t\t\tpioneerElm.style.transition = 'unset';\n\t\t\t\t\tpioneerElm.style.opacity = 'unset';\n\t\t\t\t\tpioneerElm.style.filter = 'unset';\n\t\t\t\t}\n\n\t\t\t\tthis.destroy();\n\t\t\t}, 1100 * (1 - previousPercent));\n\t\t}\n\t}\n\n\t/**\n\t * @override\n\t * Override splash screen enable to determine visibility from router logic.\n\t */\n\t__enable() {\n\t\tsuper.__enable();\n\n\t\tconst { currentRoute, previousRoute, homeRoute } = this.app.getManager('router');\n\t\t// Only trigger splash on the base or undefined route without a previous route.\n\t\tif (previousRoute.url === undefined && (currentRoute.url === undefined || currentRoute.url === homeRoute)) {\n\t\t\tthis._displaySplash();\n\t\t}\n\t\telse {\n\t\t\tthis.destroy();\n\t\t}\n\t}\n}\n\nSplashScreen.html = html;\n","import {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from 'eyes';\n\nimport './time_slider.css';\nimport html from './time_slider.html';\n\nconst { debounce } = AppUtils;\n\n/**\n * Time slider component.\n * @extends BaseComponent\n */\nexport class TimeSlider extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\t// Set default config.\n\t\toptions.config = {\n\t\t\tsnapPoints: [\n\t\t\t\t1, // 1 sec\n\t\t\t\t10, // 10 secs\n\t\t\t\t60, // 1 min\n\t\t\t\t300, // 5 mins\n\t\t\t\t600, // 10 mins\n\t\t\t\t3600, // 1 hr\n\t\t\t\t86400, // 1 day\n\t\t\t\t604800, // 1 week\n\t\t\t\t5256000, // 2 months\n\t\t\t\t31540000 // 1 year\n\t\t\t],\n\n\t\t\t// apply a dynamic rate coefficient to the fastest rate\n\t\t\tenableDynamicRate: false,\n\t\t\t// default camera distance value if not measurable\n\t\t\tdefaultCamDistance: 700000000,\n\t\t\t// variation in fastest time rates (seconds per second)\n\t\t\tfastestRate: {\n\t\t\t\tmin: 86400, // 1 day / sec\n\t\t\t\tmax: 157700000 // 5 yrs / sec\n\t\t\t},\n\n\t\t\t...options.config\n\t\t};\n\n\t\tsuper(app, null, {\n\t\t\tstartX: null,\n\t\t\ttransX: 0,\n\t\t\tlineMeasures: { left: null, width: null, isMeasured: false },\n\t\t\tfastestRate: null,\n\t\t\trateArray: null,\n\t\t\trealtimeVisibleClass: 'hidden',\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Current time rate\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._currentRate = null;\n\n\t\t/**\n\t\t * Current camera distance to it's target\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._camDistance = null;\n\n\t\t/**\n\t\t * Whether we're at a time limit.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._limit = null;\n\n\t\t/**\n\t\t * Additional classes for various screen sizes.\n\t\t * @type {Array<string>}\n\t\t * @private\n\t\t */\n\t\tthis._extraClasses = ['offset-right', 'v-squeezy', 'h-squeezy', 'portrait', 'landscape'];\n\n\t\t/**\n\t\t * Called if set, once cam distance has been established.\n\t\t * @type {function(number):void}\n\t\t * @private\n\t\t */\n\t\tthis._camDistanceResolve = null;\n\n\t\tthis.bindFunctions([\n\t\t\t'_onMouseTouchDown',\n\t\t\t'_onMouseTouchMove',\n\t\t\t'_onMouseTouchUp',\n\t\t\t'_getFastestRate',\n\t\t\t'_snapToRate',\n\t\t\t'_getRateArray',\n\t\t\t'_onRealtimeClick',\n\t\t\t'_update'\n\t\t]);\n\n\t\t// Debounced resize\n\t\tthis._resizeDebounced = debounce(this._onResize, 300);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t * @override\n\t */\n\tinit() {\n\t\tsuper.init();\n\n\t\tconst timeManager = this.app.getManager('time');\n\n\t\t// Add update callback.\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: timeManager,\n\t\t\tevent: 'update',\n\t\t\tcallback: this._update\n\t\t},\n\t\t{\n\t\t\temitter: timeManager,\n\t\t\tevent: 'forcedpause',\n\t\t\tcallback: (_, limit) => this._setLimit(limit)\n\t\t});\n\n\t\tthis._addHandlers();\n\t}\n\n\t/**\n\t * Called when the url get params change.\n\t * @param {object} params\n\t * @param {number|undefined} params.rate\n\t */\n\tasync onQueryChange({ rate }) {\n\t\tconst negative = rate < 0;\n\t\tconst absRate = Math.abs(rate ?? 1);\n\n\t\t// If rate is paused, save come calculations.\n\t\tif (rate === 0) {\n\t\t\tthis.setCurrentRate(0);\n\t\t\tthis._setTransX(0);\n\t\t\treturn;\n\t\t}\n\n\t\t// Measure line so we have a left and width values.\n\t\tconst { width } = this._measureLine();\n\n\t\t/**\n\t\t * onQueryChange runs into a problem:\n\t\t * - the 3D camera is not yet positioned (or is at NaN) so we have no distance, and cant generate the fastest rate.\n\t\t *\n\t\t * To resolve it (literally), we have a custom promise to wait for...\n\t\t */\n\t\tawait this._waitForCamDistance();\n\n\t\tconst { rateArray } = this._state;\n\n\t\t// Determine the snapped rate if snapping enabled,\n\t\tlet snappedAbsRate = this._snapToRate(absRate);\n\n\t\t// Snap to first value in rate array if less than second.\n\t\tif (snappedAbsRate < rateArray[1]) {\n\t\t\tsnappedAbsRate = rateArray[0];\n\t\t}\n\n\t\t// Determine if we're trying to go over a max limit or under a min.\n\t\tconst belowMin = this._limit === 'min' && negative && rate !== undefined;\n\t\tconst aboveMax = this._limit === 'max' && !negative && rate !== undefined;\n\n\t\t// Calculate snapped rate.\n\t\tconst snappedRate = belowMin || aboveMax\n\t\t\t? 0\n\t\t\t: negative && snappedAbsRate !== rateArray[0] ? snappedAbsRate * -1 : snappedAbsRate;\n\n\t\t// Determine if we need to re-update the query, ie. query rate is different to the snapped rate.\n\t\tconst reupdateQuery = rate !== snappedRate && rate !== undefined;\n\n\t\t// Set rate.\n\t\tthis.setCurrentRate(snappedRate);\n\n\t\t// Calc and set transX.\n\t\tconst normVal = this._calculateNormValue(snappedAbsRate);\n\t\tconst absTransX = normVal * width * 0.5;\n\t\tconst transX = negative ? absTransX * -1 : absTransX;\n\n\t\tthis._setTransX(transX);\n\n\t\t// Reupdate query if needed.\n\t\treupdateQuery && this.updateQuery();\n\t}\n\n\t/**\n\t * Sets a local var for a reached limit.\n\t * @param {string} limit\n\t */\n\t_setLimit(limit) {\n\t\tthis._limit = limit;\n\t}\n\n\t/**\n\t * Async check for when camera is correctly positioned.\n\t * Resolve in _update once cam position is not NaN\n\t * @returns {Promise<void|number>}\n\t */\n\tasync _waitForCamDistance() {\n\t\tif (this._camDistance && !isNaN(this._camDistance)) {\n\t\t\treturn Promise.resolve(this._camDistance);\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis._camDistanceResolve = resolve;\n\t\t});\n\t}\n\n\t/**\n\t * Add the initial event handlers.\n\t */\n\t_addHandlers() {\n\t\tconst { iconEl } = this._children;\n\t\t// Add both mouse and touch down events as some devices allow both.\n\t\ticonEl.addEventListener('mousedown', this._onMouseTouchDown);\n\t\ticonEl.addEventListener('touchstart', this._onMouseTouchDown);\n\t}\n\n\t/**\n\t * The mouse and touch down event handler.\n\t * @param {MouseEvent|Touch} e\n\t */\n\t_onMouseTouchDown(e) {\n\t\t// Prevent default to stop touches making weird highlights.\n\t\te?.preventDefault();\n\n\t\t// Measure line so we have a left and width values.\n\t\tthis._measureLine();\n\n\t\tconst { iconEl } = this._children;\n\n\t\t// Determine if it was a touch.\n\t\tconst { isTouch, canHover } = this.app;\n\n\t\t// Get the first startX point depending on touch or mouse.\n\t\tconst xSource = e.touches?.length ? e.touches[0] : e;\n\t\tconst { clientX: startX } = xSource;\n\n\t\t// Make sure we have immediate transition, ie. none.\n\t\ticonEl.style.setProperty('transition', 'none');\n\n\t\t// Set cursor to grabbing (set on document so you can move mouse outside slider area).\n\t\tdocument.body.style.setProperty('cursor', 'grabbing');\n\n\t\t// Depending on hover and touch, add event listeners accordingly.\n\t\tif (isTouch) {\n\t\t\tdocument.addEventListener('touchmove', this._onMouseTouchMove);\n\t\t\tdocument.addEventListener('touchend', this._onMouseTouchUp);\n\t\t}\n\t\tif (canHover) {\n\t\t\tdocument.addEventListener('mousemove', this._onMouseTouchMove);\n\t\t\tdocument.addEventListener('mouseup', this._onMouseTouchUp);\n\t\t}\n\n\t\t// Set startX state.\n\t\tthis.setState({ startX });\n\t}\n\n\t/**\n\t * TODO:\n\t * Check if default camera distance works for other entities, do we need to delay until cam is positioned?\n\t *\n\t * Fix manual time input css.\n\t */\n\n\t/**\n\t * The mouse and touch move event handler.\n\t * @param {MouseEvent|Touch} e\n\t */\n\t_onMouseTouchMove(e) {\n\t\t// Destructure state and set new vars.\n\t\tconst { lineMeasures: { left, width } } = this._state;\n\t\tconst xSource = e.touches?.length ? e.touches[0] : e;\n\t\tlet { clientX: newTransX } = xSource;\n\n\t\tconst min = left;\n\t\tconst max = left + width;\n\t\tconst halfWidth = width * 0.5;\n\n\t\t// Don't allow less than min or more than max.\n\t\tnewTransX = Math.max(newTransX, min);\n\t\tnewTransX = Math.min(newTransX, max);\n\t\tnewTransX -= (left + halfWidth);\n\n\t\t// Calculate normalized value\n\t\tconst normValue = newTransX / halfWidth;\n\n\t\t// Calculate rate.\n\t\tlet rate = this._calculateRate(normValue);\n\n\t\t// Return if we havev bad calculations.\n\t\tif (isNaN(normValue) || isNaN(rate)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine if we're going over a max limit or under a min.\n\t\tconst negative = normValue < 0;\n\t\tconst belowMin = this._limit === 'min' && negative;\n\t\tconst aboveMax = this._limit === 'max' && !negative;\n\n\t\tif (belowMin || aboveMax) {\n\t\t\tnewTransX = 0;\n\t\t\trate = 0;\n\t\t}\n\n\t\t// Set translateX.\n\t\tthis._setTransX(newTransX);\n\n\t\t// Mobile - If rate is at very left or very right of screen, update margin so the screen doesn't eat the label\n\t\tif (AppUtils.isMobilePortrait()) {\n\t\t\tconst { snapPoints } = this._config;\n\t\t\tconst rateIsExtreme = Math.abs(rate) > snapPoints[snapPoints.length - 3];\n\t\t\tconst rateIsFarLeft = rateIsExtreme && (rate < (snapPoints[snapPoints.length - 3] * -1));\n\t\t\tconst rateIsFarRight = rateIsExtreme && (rate > (snapPoints[snapPoints.length - 3]));\n\t\t\tconst customMargin = rateIsFarLeft ? '100%' : rateIsFarRight ? '-10%' : '50%';\n\t\t\tdocument.documentElement.style.setProperty('--customIconLabelMargin', customMargin);\n\t\t}\n\n\t\t// Call onUpdate.\n\t\tthis.setCurrentRate(rate);\n\t}\n\n\t/**\n\t * The mouse and touch up event handler.\n\t * @param {MouseEvent|Touch} e\n\t */\n\t_onMouseTouchUp(e) {\n\t\t// Prevent default.\n\t\te?.preventDefault();\n\n\t\tconst { isTouch, canHover } = this.app;\n\t\tconst { iconEl } = this._children;\n\t\t// Remove eventListeners depending on isTouch and canHover.\n\t\tif (isTouch) {\n\t\t\tdocument.removeEventListener('touchmove', this._onMouseTouchMove);\n\t\t\tdocument.removeEventListener('touchend', this._onMouseTouchUp);\n\t\t}\n\t\tif (canHover) {\n\t\t\tdocument.removeEventListener('mousemove', this._onMouseTouchMove);\n\t\t\tdocument.removeEventListener('mouseup', this._onMouseTouchUp);\n\t\t}\n\n\t\t// Add transition back.\n\t\ticonEl.style.setProperty('transition', 'transform 0.5s cubic-bezier(.3,1.24,.34,.98)');\n\n\t\t// Set document cursor back to default.\n\t\tdocument.body.style.setProperty('cursor', 'default');\n\n\t\t// Call updateQuery.\n\t\tthis.updateQuery();\n\t}\n\n\t/**\n\t * Handle clicking realtime button\n\t * @param {Event} e\n\t */\n\t_onRealtimeClick(e) {\n\t\tthis.updateQuery(1);\n\t}\n\n\t/**\n\t * Sets the translate X CSS property and local state.\n\t * @param {number} transX\n\t */\n\t_setTransX(transX) {\n\t\tconst { trans: currTransX } = this._state;\n\n\t\t// Return if already matches current transX.\n\t\tif (transX === currTransX) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set --x-icon-trans CSS var.\n\t\tthis._element.style.setProperty('--x-icon-trans', `${transX}px`);\n\n\t\tthis.setState({ transX });\n\t}\n\n\t/**\n\t * To make it easier for the user to be able to reach the snap points, we can lay out\n\t * the time slider line into the snap points rather than a linear interpolation\n\t * (which can be hard to drag to the finer values)\n\t * @param {number} fastestRate\n\t * @returns {Array<number>}\n\t */\n\t_getRateArray(fastestRate) {\n\t\tconst { snapPoints } = this._config;\n\n\t\tconst nearestIndex = snapPoints.findIndex(point => fastestRate <= point);\n\t\tconst largerThanAllPoints = nearestIndex === -1;\n\n\t\t// If the fastest rate is really fast, it makes sense to slice out the early snap points (up to seconds, 10 seconds, minutes, 10 minutes, and hours)\n\t\tlet maxSliceStart = 8;\n\n\t\tif (!largerThanAllPoints) {\n\t\t\tmaxSliceStart -= (snapPoints.length - nearestIndex) * 2;\n\t\t}\n\n\t\t// If greater than all snap points, simply add it to the end\n\t\tif (largerThanAllPoints) {\n\t\t\treturn [1, ...snapPoints.slice(maxSliceStart), fastestRate];\n\t\t}\n\n\t\tconst sliceRefIndex = snapPoints.length - maxSliceStart;\n\t\tconst sliceStart = nearestIndex - sliceRefIndex;\n\n\t\treturn [1, ...snapPoints.slice(sliceStart, nearestIndex), fastestRate];\n\t}\n\n\t/**\n\t * Calculate rate depending on whether snapping is enabled\n\t * @param {number} normValue - between -1 and 1\n\t * @returns {number}\n\t */\n\t_calculateRate(normValue) {\n\t\tconst { fastestRate, rateArray } = this._state;\n\n\t\tconst negative = normValue < 0;\n\t\tconst absValue = Math.abs(normValue);\n\t\tconst maxIndex = rateArray.length - 1;\n\n\t\t// Calculate interpolated rate.\n\t\tlet interpolatedRate = absValue * fastestRate;\n\n\t\tif (rateArray) {\n\t\t\tconst interpIndex = absValue * maxIndex;\n\t\t\tconst interpFraction = interpIndex % 1;\n\n\t\t\tconst rateIndex = Math.floor(interpIndex);\n\t\t\tinterpolatedRate = rateArray[rateIndex];\n\n\t\t\tif (rateIndex < maxIndex) {\n\t\t\t\tconst nextRate = rateArray[rateIndex + 1];\n\t\t\t\tconst additionalRate = (nextRate - interpolatedRate) * interpFraction;\n\t\t\t\tinterpolatedRate += Math.round(additionalRate);\n\t\t\t}\n\t\t}\n\n\t\t// Snap rate if config says so.\n\t\tlet snappedAbsRate = this._snapToRate(interpolatedRate);\n\n\t\t// Snap to first value in rate array if less than second.\n\t\tif (snappedAbsRate < rateArray[1]) {\n\t\t\tsnappedAbsRate = rateArray[0];\n\t\t}\n\n\t\t// Reapply negation if needed.\n\t\treturn negative && snappedAbsRate !== rateArray[0] ? snappedAbsRate * -1 : snappedAbsRate;\n\t}\n\n\t/**\n\t * Blah\n\t * @param {number} absRate\n\t * @returns {number}\n\t */\n\t_calculateNormValue(absRate) {\n\t\tconst { rateArray } = this._state;\n\t\tconst maxIndex = rateArray.length - 1;\n\n\t\t// Find the corresponding rate index in rateArray.\n\t\tlet rateIndex = -1;\n\t\tfor (let i = 0; i < rateArray.length; i++) {\n\t\t\tif (absRate >= rateArray[i]) {\n\t\t\t\trateIndex = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (rateIndex === maxIndex || rateIndex === -1) {\n\t\t\t// If rate is maximum, or more than the largest rate in rateArray, limit to the max value.\n\t\t\treturn 1;\n\t\t}\n\t\telse {\n\t\t\t// Calculate the normalized value based on rate index and interpolated rate.\n\t\t\tconst lowerRate = rateArray[rateIndex];\n\t\t\tconst upperRate = rateArray[rateIndex + 1];\n\t\t\tconst rateFraction = (absRate - lowerRate) / (upperRate - lowerRate);\n\t\t\tconst normValue = (rateIndex + rateFraction) / maxIndex;\n\t\t\treturn normValue;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the nearest snapped rate or multiple of that rate\n\t * @param {number} value - only deals with positive values\n\t * @returns {number}\n\t */\n\t_snapToRate(value) {\n\t\tconst { snapPoints } = this._config;\n\n\t\t// dont even THINK about using the reduce function, you wrectched fiend.\n\t\tconst nearestIndex = snapPoints.findIndex(point => value < point);\n\n\t\tif (nearestIndex === 0) {\n\t\t\treturn snapPoints[nearestIndex];\n\t\t}\n\n\t\t// If the input value is bigger than all of the snap points (nearestIndex is -1) we calculate the value divided by the last snap point and round it.\n\n\t\t// Get the previous point.\n\t\tconst prevPoint = nearestIndex > -1 ? snapPoints[nearestIndex - 1] : snapPoints[snapPoints.length - 1];\n\n\t\t// Get the snapped multiple.\n\t\tconst snappedMultiple = Math.round(value / prevPoint);\n\n\t\t// Snapped rate is the prev point times the snapped multiple.\n\t\treturn snappedMultiple * prevPoint;\n\t}\n\n\t/**\n\t * Set current time rate in pioneer and css variable.\n\t * @param {number} rate\n\t */\n\tsetCurrentRate(rate) {\n\t\t// Remove the limit if we're not at 0.\n\t\trate !== 0 && this._setLimit(null);\n\n\t\t// Set pioneer rate and local var.\n\t\tthis.app.pioneer.setTimeRate(rate);\n\t\tthis._currentRate = rate;\n\n\t\t// Set formatted rate.\n\t\tconst formattedRate = this.formatRate(rate);\n\t\tthis._element.style.setProperty('--x-rate', `'${formattedRate}'`);\n\n\t\t// Set realtime button visibility depending on ratet.\n\t\tconst realtimeVisibleClass = (rate === 1 || rate === 0) ? 'hidden' : '';\n\t\tthis.setState({ realtimeVisibleClass });\n\t}\n\n\t/**\n\t * updateQuery handler.\n\t * @param {number} rate\n\t */\n\tupdateQuery(rate = this.app.pioneer.getTimeRate()) {\n\t\t//  Set time query in route\n\t\tconst router = this.app.getManager('router');\n\t\tconst time = this.app.getManager('time').getTimeUrl();\n\t\trouter.navigate({ time, rate }, router.currentRoute.url);\n\t}\n\n\t/**\n\t * Calculates the dynamic fastest time rate based on dynamic camera distance.\n\t * @returns {number} - seconds per second\n\t */\n\t_getFastestRate() {\n\t\tconst { enableDynamicRate, fastestRate, defaultCamDistance } = this._config;\n\n\t\t// Calculate the rate coefficient by getting the current camera position and comparing it to the max zoom distance (_defaultMaxDistance)\n\t\tconst { defaultMaxDistance } = this._app.getManager('camera');\n\n\t\tlet camDistance = this._camDistance;\n\n\t\t// Fallback to deefault cam distance if necessary (shouldnt be needed)\n\t\tif (!camDistance || isNaN(camDistance)) {\n\t\t\tconsole.warn('Time Slider:: Missing camera distance.');\n\t\t\tcamDistance = defaultCamDistance;\n\t\t}\n\n\t\t// Make sure the values are valid.\n\t\tconst rateCoefficient = defaultMaxDistance && !isNaN(defaultMaxDistance)\n\t\t\t? Math.round(camDistance) / defaultMaxDistance\n\t\t\t: 1;\n\n\t\treturn enableDynamicRate\n\t\t\t? fastestRate.min + (fastestRate.max - fastestRate.min) * rateCoefficient\n\t\t\t: fastestRate.max;\n\t}\n\n\t/**\n\t * Creates a clean formatted string from the rate value\n\t * @param {number} rate\n\t * @returns {string}\n\t */\n\tformatRate(rate) {\n\t\tif (rate === 1) {\n\t\t\treturn '';\n\t\t}\n\t\tif (rate === 0) {\n\t\t\treturn 'Paused';\n\t\t}\n\n\t\tconst negative = rate < 0;\n\t\tconst absRate = Math.abs(rate);\n\n\t\tconst yrs = absRate / 31540000;\n\t\tconst months = absRate / 2628000;\n\t\tconst weeks = absRate / 604800;\n\t\tconst days = absRate / 86400;\n\t\tconst hrs = absRate / 3600;\n\t\tconst mins = absRate / 60;\n\n\t\tconst oneDP = (val) => {\n\t\t\tconst toOneDP = Number(`${Math.round(`${val}e1`)}e-1`);\n\t\t\treturn negative ? toOneDP * -1 : toOneDP;\n\t\t};\n\n\t\tif (yrs >= 1) {\n\t\t\treturn `${oneDP(yrs)} yrs/s`;\n\t\t}\n\t\tif (months >= 2) {\n\t\t\treturn `${Math.round(negative ? months * -1 : months)} mths/s`;\n\t\t}\n\t\tif (weeks >= 1) {\n\t\t\treturn `${Math.round(negative ? weeks * -1 : weeks)} wks/s`;\n\t\t}\n\t\tif (days >= 1) {\n\t\t\treturn `${oneDP(days)} days/s`;\n\t\t}\n\t\tif (hrs >= 1) {\n\t\t\treturn `${oneDP(hrs)} hrs/s`;\n\t\t}\n\t\tif (mins >= 1) {\n\t\t\treturn `${oneDP(mins)} mins/s`;\n\t\t}\n\t\treturn `${rate} secs/s`;\n\t}\n\n\t/**\n\t * Classes are determined by the device and screen we're using.\n\t * @param {object} options\n\t * @returns {Array<string>}\n\t */\n\t_getClasses(options) {\n\t\tconst classes = [];\n\n\t\tif (options.removeAll) {\n\t\t\treturn classes;\n\t\t}\n\n\t\tconst limitedHeightThreshold = 641;\n\t\tconst limitedWidthThreshold = 961;\n\t\tconst offsetRightThreshold = 641;\n\n\t\tconst portrait = AppUtils.isMobilePortrait();\n\t\tconst landscape = AppUtils.isLandscape();\n\n\t\tconst limitedHeight = window.innerHeight < limitedHeightThreshold;\n\t\tconst limitedWidth = window.innerWidth < limitedWidthThreshold;\n\t\tconst offsetRight = window.innerHeight < offsetRightThreshold && !portrait;\n\n\t\t// Expanded or not.\n\t\tif (options.expanded && offsetRight) {\n\t\t\tclasses.push('offset-right');\n\t\t}\n\n\t\t// Limited height.\n\t\tif (limitedHeight) {\n\t\t\tclasses.push('v-squeezy');\n\t\t}\n\n\t\t// Limited width.\n\t\tif (limitedWidth) {\n\t\t\tclasses.push('h-squeezy');\n\t\t}\n\n\t\t// Portrait or landsape.\n\t\tif (portrait) {\n\t\t\tclasses.push('portrait');\n\t\t}\n\t\telse if (landscape) {\n\t\t\tclasses.push('landscape');\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\t/**\n\t * Sets the position using an array of positional class names\n\t * @param {object} options\n\t */\n\ttoggleExtraClasses(options) {\n\t\tconst classes = this._getClasses(options);\n\n\t\tthis._extraClasses.forEach(extraClass => {\n\t\t\tconst addClass = (classes.includes(extraClass) && !options.removeAll);\n\t\t\tthis._parent.classList.toggle(extraClass, addClass);\n\t\t});\n\t}\n\n\t/**\n\t * Gets the current extra classes.\n\t * @returns {DOMTokenList}\n\t */\n\tget extraClasses() {\n\t\treturn this._parent.classList;\n\t}\n\n\t/**\n\t * Measures the line element and stores left and width values.\n\t * @returns {object}\n\t */\n\t_measureLine() {\n\t\t// We need to run a separate getBoundingClientRect in order to get the correct 'left' value.\n\t\tconst { left, width } = this._children?.lineEl?.getBoundingClientRect() || {};\n\n\t\tif (left === undefined || width === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Set states.\n\t\tthis.setState({\n\t\t\tlineMeasures: { left, width, isMeasured: true }\n\t\t});\n\n\t\treturn { left, width };\n\t}\n\n\t/**\n\t * Handle component resize.\n\t */\n\t_onResize() {\n\t\tconst { width } = this._measureLine();\n\n\t\t// Update transX.\n\t\tconst rate = this._currentRate ?? 1;\n\t\tconst negative = rate < 0;\n\t\tconst absRate = Math.abs(rate);\n\t\tconst normVal = this._calculateNormValue(absRate);\n\t\tconst absTransX = normVal * width * 0.5;\n\t\tconst transX = negative ? absTransX * -1 : absTransX;\n\n\t\tthis._setTransX(transX);\n\t}\n\n\t/**\n\t * Handle element resize.\n\t * @override\n\t */\n\tresize() {\n\t\t// Debounce resize for improved performance.\n\t\tthis._resizeDebounced();\n\t}\n\n\t/**\n\t * Update called eevery frame.\n\t */\n\t_update() {\n\t\t// Set our camDistance\n\t\tconst { cameraEntity } = this.app.getManager('camera');\n\t\tconst camDistance = cameraEntity.getPosition().magnitude();\n\n\t\t// Update cam distance.\n\t\tif (this._camDistance?.toFixed(4) !== camDistance?.toFixed(4)) {\n\t\t\tthis._camDistance = camDistance;\n\n\t\t\t// Set fastestRate and rateArray when cam distance is valid.\n\t\t\tif (this._camDistance && !isNaN(this._camDistance)) {\n\t\t\t\t// Calculate and store fastest rate.\n\t\t\t\tconst fastestRate = this._snapToRate(this._getFastestRate());\n\n\t\t\t\t// Calculate and store rateArray.\n\t\t\t\tconst rateArray = this._getRateArray(fastestRate);\n\n\t\t\t\t// Set states.\n\t\t\t\tthis.setState({ fastestRate, rateArray });\n\t\t\t}\n\t\t}\n\n\t\t// Call and reset resolve if needed\n\t\tif (this._camDistanceResolve && this._camDistance && !isNaN(this._camDistance)) {\n\t\t\tthis._camDistanceResolve(this._camDistance);\n\t\t\tthis._camDistanceResolve = null;\n\t\t}\n\t}\n\n\t/**\n\t * Custom show override to set classes on parent (this is necessary when reusing the clock and clockshortcut components as children)\n\t * @override\n\t */\n\tshow() {\n\t\tthis._parent?.classList.toggle('hidden', false);\n\t}\n\n\t/**\n\t * Custom hide override to set classes on parent (this is necessary when reusing the clock and clockshortcut components as children)\n\t * @override\n\t */\n\thide() {\n\t\tthis._parent?.classList.toggle('hidden', true);\n\t}\n\n\t/**\n\t * Set visibility of just time slider\n\t * @param {boolean} visible\n\t */\n\tsetSliderVisibility(visible) {\n\t\tthis._parent?.classList.toggle('no-slider', !visible);\n\t}\n}\n\nTimeSlider.html = html;\n","import { BaseApp, BaseComponent } from 'eyes';\nimport { TimeUtils } from 'pioneer';\n\nimport { NEO } from '../../neos';\nimport html from './watch_card.html';\n\nimport './watch_card.css';\n\n/**\n *\n */\nexport class WatchCard extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options = {}) {\n\t\t// call super class and  pass default state object.\n\t\tsuper(app, null, {\n\t\t\ttitle: 'Asteroid Name',\n\t\t\tdate: 'April 13, 2029',\n\t\t\ttime: '10:52am',\n\t\t\tdiameterUnit: 'km',\n\t\t\tdiameter: '0.5',\n\t\t\tdiameterEstimatedText: '',\n\t\t\tdiameterRaw: 0.5,\n\t\t\tdistanceUnit: 'km',\n\t\t\tdistance: '512,321',\n\t\t\tdistanceRaw: 512321,\n\t\t\tunitType: 'metric',\n\t\t\t...options\n\t\t});\n\n\t\tthis.bindFunctions(['toggleUnit']);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('watch'),\n\t\t\tevent: 'toggleUnit',\n\t\t\tcallback: this.toggleUnit\n\t\t});\n\t}\n\n\t/**\n\t * On html handleToggleUnit click\n\t * @param {Event} e\n\t */\n\thandleToggleUnit(e) {\n\t\tthis._app.getManager('watch')?.toggleUnit();\n\t}\n\n\t/**\n\t *\tToggles the card between km and mi units\n\t * @param {string} newUnitType - unit to swap to\n\t */\n\ttoggleUnit(newUnitType) {\n\t\t// This is a quick, dirty band-aid change from Jack. We need a task for a central unit manager.\n\t\tconst metric = newUnitType === 'metric';\n\t\tconst kmMiRatio = 1.609344;\n\t\tconst ftInMiles = 5280;\n\t\tconst mInKm = 1000;\n\n\t\tconst { diameterRaw, distanceRaw } = this._state;\n\n\t\tconst currentDiameter = diameterRaw || 0;\n\t\tlet newDiameter = currentDiameter;\n\t\tlet newDiameterUnit = metric ? 'km' : 'mi';\n\n\t\tconst currentDistance = distanceRaw || 0;\n\t\tlet newDistance = currentDistance;\n\t\tlet newDistanceUnit = metric ? 'km' : 'mi';\n\n\t\tif (metric) {\n\t\t\t// Working in metric.\n\n\t\t\tif (newDiameter < 1) {\n\t\t\t\tnewDiameterUnit = 'm';\n\t\t\t\tnewDiameter *= mInKm;\n\t\t\t}\n\n\t\t\tif (newDistance < 1) {\n\t\t\t\tnewDistanceUnit = 'm';\n\t\t\t\tnewDistance *= mInKm;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Working in imperial.\n\t\t\tnewDiameter = currentDiameter / kmMiRatio;\n\t\t\tnewDistance = currentDistance / kmMiRatio;\n\n\t\t\tif (newDiameter < 1) {\n\t\t\t\tnewDiameterUnit = 'ft';\n\t\t\t\tnewDiameter *= ftInMiles;\n\t\t\t}\n\n\t\t\tif (newDistance < 1) {\n\t\t\t\tnewDistanceUnit = 'ft';\n\t\t\t\tnewDistance *= ftInMiles;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdiameterUnit: newDiameterUnit,\n\t\t\tdiameter: this._parseDiameter(newDiameter),\n\t\t\tdistanceUnit: newDistanceUnit,\n\t\t\tdistance: `${Math.round(newDistance).toLocaleString(undefined)}`,\n\t\t\tunitType: newUnitType\n\t\t});\n\t}\n\n\t/**\n\t * Make diameter value prettier and rounded\n\t * @param {number} diameter\n\t * @returns {string}\n\t */\n\t_parseDiameter(diameter) {\n\t\treturn parseFloat(diameter).toFixed(1).replace(/\\.0+$/, '');\n\t}\n\n\t/**\n\t * Parses NEO data and sets state\n\t * @param {NEO} neoData\n\t */\n\tsetTarget(neoData) {\n\t\tconst { name, nextClosestApproachTime, nextClosestApproachDistance, diameter, diameterEstimated } = neoData;\n\n\t\tconst unixSeconds = TimeUtils.etToUnix(nextClosestApproachTime);\n\t\tconst date = new Date(unixSeconds * 1000);\n\n\t\tthis.setState({\n\t\t\ttitle: name,\n\t\t\tdate: date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' }),\n\t\t\ttime: date.toLocaleTimeString(undefined),\n\n\t\t\tdiameter: this._parseDiameter(diameter),\n\t\t\tdiameterRaw: diameter,\n\t\t\tdiameterEstimatedText: diameterEstimated ? '〚estimated〛' : '',\n\n\t\t\tdistance: `${Math.round(nextClosestApproachDistance).toLocaleString(undefined)}`,\n\t\t\tdistanceRaw: nextClosestApproachDistance\n\t\t});\n\n\t\t// Trigger a toggle on init.\n\t\tthis.toggleUnit(this._state.unitType);\n\t}\n}\n\nWatchCard.html = html;\n","import { BaseApp, CarouselPanel } from 'eyes';\n\nimport { Countdown } from '../countdown/countdown';\nimport { WatchCard } from './watch_card';\nimport { NEO } from '../../neos';\n\nimport './watch_panel.css';\n\n/**\n * WatchPanel extends CarouselPanel\n */\nexport class WatchPanel extends CarouselPanel {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, {\n\n\t\t\t// States\n\t\t\t// isVisible: false,\n\n\t\t\t// Class names\n\t\t\tpanelTypeClass: 'watch-panel',\n\t\t\tcarouselClass: 'watch-carousel',\n\t\t\tpaginationClass: 'watch-carousel-fraction',\n\t\t\tprevButtonClass: 'watch-carousel-prev',\n\t\t\tnextButtonClass: 'watch-carousel-next',\n\n\t\t\t// Options\n\t\t\ttitle: 'Asteroid Watch',\n\t\t\tcaption: 'The next five closest approaches to Earth',\n\t\t\theaderIconClass: 'asteroid',\n\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Store showBeExpanded state (for when showing and hiding UI)\n\t\t */\n\t\tthis.shouldBeExpanded = null;\n\n\t\t/**\n\t\t * Slide change callback\n\t\t * @param {object} params\n\t\t * @param {number} params.realIndex\n\t\t */\n\t\tthis._onSlideChange = ({ realIndex }) => {\n\t\t\tconst watchManager = this._app.getManager('watch');\n\n\t\t\t// Get the neo to navigate to the correct URL\n\t\t\tconst neoName = watchManager.getNeoNameByIndex(realIndex);\n\t\t\twatchManager.updateURL(neoName);\n\t\t};\n\t}\n\n\t/**\n\t * Compose the watch carousel slides\n\t * @param {Array<NEO>} nextFive\n\t */\n\tpopulate(nextFive) {\n\t\t// Compose the watch card and countdown components\n\t\tnextFive.forEach(asteroid => {\n\t\t\t// create watch card\n\t\t\tconst watchCard = new WatchCard(this._app);\n\t\t\twatchCard.init();\n\t\t\twatchCard.setTarget(asteroid);\n\t\t\tthis._components.push(watchCard);\n\n\t\t\t// create countdown and register update callback\n\t\t\tconst countdown = new Countdown(this._app);\n\t\t\tcountdown.init();\n\t\t\tcountdown.setTimeTarget(asteroid.nextClosestApproachTime);\n\t\t\tthis._components.push(countdown);\n\n\t\t\t// Add HTML slides.\n\t\t\tthis.addSlide([watchCard.element, countdown.element]);\n\t\t});\n\t}\n\n\t/** @inheritdoc */\n\tsetExpandState() {\n\t\tsuper.setExpandState(this.shouldBeExpanded);\n\t}\n\n\t/**\n\t * Show override\n\t */\n\tshow() {\n\t\tthis.setExpandState();\n\t\tsuper.show(false);\n\t}\n\n\t/**\n\t * Replacing expand method in Panel super class\n\t * Rather than directly expanding or collapsing by adding or removing a class,\n\t * we instead change the URL and respond to the onRouteChange in the watch view.\n\t * It's therefore in the watch view that we set the expand/collapse state.\n\t * This method is a little convoluted but it reduces the chance of going out of sync with the URL.\n\t */\n\texpand() {\n\t\tconst watchManager = this._app.getManager('watch');\n\t\tconst currentSwiperSlide = this._swiper?.realIndex;\n\t\twatchManager.setSlideUrlByIndex(currentSwiperSlide);\n\t}\n\n\t/**\n\t * Replacing collapse method in CarouselPanel super class\n\t */\n\tcollapse() {\n\t\tconst watchManager = this._app.getManager('watch');\n\t\twatchManager.updateURL('');\n\t}\n}\n","export default [\n\t{\n\t\ttype: 'Search',\n\t\tname: 'search',\n\t\toptions: {\n\t\t\tconfig: {\n\t\t\t\tplaceholderText: 'Search asteroids and comets...',\n\t\t\t\tallowFeatured: true,\n\t\t\t\tallowDetail: false,\n\t\t\t\tallowInfo: true,\n\t\t\t\tstopOnExactMatch: false,\n\t\t\t\tmaxSuggestions: 3\n\t\t\t}\n\t\t}\n\t},\n\t{ type: 'TutorialOverlay', name: 'tutorialOverlay' },\n\t{ type: 'AsteroidMenuTop', name: 'asteroid_menu_top' },\n\t{ type: 'AsteroidMenuBottom', name: 'asteroid_menu_bottom' },\n\t{ type: 'AsteroidModals', name: 'asteroid_modals' },\n\t{\n\t\ttype: 'Breadcrumb',\n\t\tname: 'breadcrumb',\n\t\toptions: {\n\t\t\tparams: {\n\t\t\t\ttitle: 'Eyes on Asteroids'\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\ttype: 'Clock',\n\t\tname: 'clock',\n\t\tpostCreationFunction: (_, component) => {\n\t\t\t// add x-small class to make time font smaller\n\t\t\tconst timeNodes = component._element?.querySelectorAll('.time, .meridiem');\n\t\t\ttimeNodes.forEach(node => node.classList.add('x-small'));\n\t\t}\n\t},\n\t{ type: 'ClockShortcut', name: 'clockShortcut' },\n\t{\n\t\ttype: 'TimeSlider',\n\t\tname: 'timeSlider',\n\t\toptions: {\n\t\t\tconfig: {\n\t\t\t\t// dynamic based off how close the camera is to an entity\n\t\t\t\tenableDynamicRate: true,\n\t\t\t\t// variation in fastest time rates (seconds per second)\n\t\t\t\tfastestRate: {\n\t\t\t\t\tmin: 3629000, // 6 weeks / sec\n\t\t\t\t\tmax: 157700000 // 5 yrs / sec\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\ttype: 'AsteroidsSettings',\n\t\tname: 'settings'\n\t},\n\t{ type: 'HomeButton', name: 'homeButton' },\n\t{ type: 'AsteroidPanel', name: 'asteroidPanel' },\n\t{ type: 'MissionPanel', name: 'missionPanel' },\n\t{ type: 'FollowingPanel', name: 'followingPanel' },\n\t{ type: 'WatchPanel', name: 'watchPanel' },\n\t{\n\t\ttype: 'LayerPanel',\n\t\tname: 'layerPanel',\n\t\toptions: {\n\t\t\tlayers: [['planets'], ['spacecraft'], ['trails', 'labels', 'icons', 'starfield'], ['ui']],\n\t\t\tcheckboxType: 'eyes'\n\t\t}\n\t},\n\t{ type: 'DefinitionOverlay', name: 'definitionOverlay' },\n\t{ type: 'SplashScreen', name: 'splashScreen' },\n\t{ type: 'Story', name: 'story' }\n];\n","import { AppUtils } from 'eyes';\n\n// An incrementing int used to cancel outdated camera transition awaits\nlet globalNonce = 0;\n\nexport default {\n\ttype: 'nonsequential',\n\tentities: [\n\t\t'4_vesta',\n\t\t'67p_churyumov_gerasimenko'\n\t],\n\tslides: [\n\t\t{\n\t\t\tid: 'slide_1',\n\t\t\ttype: 'overlay',\n\t\t\tclassList: ['opaque', 'black'],\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'title',\n\t\t\t\t\ttitle: 'Asteroids and Comets 101'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 'slide_2',\n\t\t\ttype: 'overlay',\n\t\t\tclassList: ['opaque', 'black'],\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'image',\n\t\t\t\t\tsrc: 'assets/images/outterAsteroidBelt.png',\n\t\t\t\t\ttitle: 'Main Asteroid Belt. Credit: NASA/JPL',\n\t\t\t\t\talt: 'This image illustrates the millions of asteroids between the Sun and Jupiter — know as the asteroid belt.',\n\t\t\t\t\tclickable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Asteroids and comets are remnants left over from the early formation of our solar system 4.6 billion years ago. Asteroids are mostly rocky bodies that formed closer to the Sun than Jupiter, while comets formed farther from the Sun and contain substantial amounts of frozen ices. The vast majority of these small bodies are asteroids, and most of them reside within the main belt, between the orbits of Mars and Jupiter. <br><br>The current number of known asteroids in the entire solar system is:<br><span class=\"big semi tween-count test\">0</span><br><br>',\n\t\t\t\t\tonEnter: async (app, block) => {\n\t\t\t\t\t\tconst element = block.element.querySelector('.tween-count');\n\t\t\t\t\t\tconst response = await fetch('https://solarsystem.nasa.gov/api/v1/static_stellar_counts/1/');\n\t\t\t\t\t\tconst count = (await response.json()).asteroids;\n\n\t\t\t\t\t\tAppUtils.tween({ i: 0 }, { i: count }, {\n\t\t\t\t\t\t\tonUpdate: object => {\n\t\t\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\t\t\tconst value = Math.round(object.i);\n\t\t\t\t\t\t\t\t\telement.innerHTML = Number(value).toLocaleString();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tduration: 3000\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 'slide_3',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Asteroids range in size from Vesta (shown here) – one of the largest at about 329 miles (530 kilometers) in diameter – to bodies that are as small as 3 feet (1 meter) across. Most asteroids are small: the total mass of all them combined is far less than that of the Earth’s Moon.<br>Asteroids less than about one meter across are called meteoroids, and are generally too small to be detected by telescopes. Meteoroids (or asteroids) that happen to hit Earth’s atmosphere become visible as meteors and largely disintegrate. Larger asteroids (car-sized or bus-sized) produce bright meteors called fireballs or bolides, but they also mostly disintegrate. Any solid leftover pieces that make it all the way to the ground are called meteorites.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tawait app.getManager('scene').isReady('4_vesta');\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\tawait app.cameraScripts.goToSystem('inner_solar_system', { duration: 1 });\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\tawait app.cameraScripts.goToCelestialObject('4_vesta', { duration: 4 });\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 'slide_4',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Comets (like 67P/Churyumov-Gerasimenko, shown here) also have dust and rock, but also contain large amounts of various frozen ices. Comets generally follow long elliptical orbits in which they spend most of their time far from the Sun, where the ices can remain frozen.<br>When a comet’s orbit brings it closer to the Sun, the ices start heating up, creating explosive jets which spew out gas and dust. The expelled material forms into a cloud around the solid nucleus called the “coma”, that can be larger than a planet. The material is also swept back away from the Sun into diffuse tails that can stretch for millions of miles (use Shift-S to zoom out quickly to see the tail, Shift-W to zoom in; pinch to zoom on mobiles). Eventually, after thousands of orbits, a comet’s ices will be depleted. Some objects now classified as asteroids may simply be “dead” comets.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tawait app.getManager('scene').isReady('67p_churyumov_gerasimenko');\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\tawait app.cameraScripts.goToSystem('inner_solar_system', { duration: 1 });\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\tawait app.cameraScripts.goToCelestialObject('67p_churyumov_gerasimenko', { duration: 4 });\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 'slide_5',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Many asteroids orbit nearby. On occasion, one impacts our planet. For example, the dinosaurs are thought to have been made extinct by the impact of a large asteroid 6-9 miles wide (10-15 km) that collided with Earth 66 million years ago.<br>NASA established the <a class=\"clickable\" href=\"https://www.nasa.gov/planetarydefense/overview\" target=\"_blank\">Planetary Defense Coordination Office (PDCO)</a> to manage its ongoing mission of planetary defense, which includes tracking potentially hazardous objects. The PDCO has a lead role in coordinating U.S. government planning for response to an actual impact threat, and is supported by the <a class=\"clickable\" href=\"https://cneos.jpl.nasa.gov\" target=\"_blank\">Center for Near-Earth Object Studies (CNEOS)</a>, which is NASA’s center for computing asteroid and comet orbits and their odds of impacting Earth. <br>For more on close approaches, click <a class=\"clickable\" href=\"#/story/asteroids_close_approach\">here</a>.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\t++globalNonce;\n\t\t\t\t\tawait app.cameraScripts.goToSystem('inner_solar_system', { duration: 2 });\n\t\t\t\t}\n\t\t\t],\n\t\t\trate: 604800\n\t\t}\n\t]\n};\n","import { AppUtils } from 'eyes';\nimport { Entity } from 'pioneer-scripts';\n\nexport default {\n\ttype: 'nonsequential',\n\tentities: [\n\t\t'moon',\n\t\t'99942_apophis'\n\t],\n\tslides: [\n\t\t{\n\t\t\tid: 'slide_1',\n\t\t\ttype: 'overlay',\n\t\t\tclassList: ['opaque', 'black'],\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'title',\n\t\t\t\t\ttitle: 'What is a Close Approach?'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tawait app.cameraScripts.goToSystem('outer_solar_system');\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 'slide_2',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Some asteroids will inevitably approach Earth, and these are tracked by NASA. The <a class=\"clickable\" href=\"https://cneos.jpl.nasa.gov\" target=\"_blank\">Center for Near-Earth Object Studies (CNEOS)</a> computes the orbits of asteroids and comets and their odds of impacting Earth. The orbits of all asteroids seen here are publicly available from NASA’s <a class=\"clickable\" href=\"https://ssd.jpl.nasa.gov\" target=\"_blank\">Solar System Dynamics (SSD)</a> group.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tawait app.cameraScripts.goToSystem('inner_solar_system');\n\t\t\t\t}\n\t\t\t],\n\t\t\trate: 259200\n\t\t},\n\t\t{\n\t\t\tid: 'slide_3',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Apophis is a near-Earth asteroid more than 1000 feet (over 300 meters) in size that will harmlessly pass close to Earth on April 13, 2029. When it was discovered in 2004, the asteroid caused a stir because initial calculations indicated a small possibility it would impact Earth.'\n\t\t\t\t}\n\t\t\t],\n\t\t\ttime: '2029-04-13T14:40:12-07:00',\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\t// Go to Apophis looking at Earth\n\t\t\t\t\tawait app.getManager('scene').isListReady(['99942_apophis', 'earth']);\n\t\t\t\t\tapp.getManager('time').pause();\n\t\t\t\t\tawait app.cameraScripts.alignObjects('99942_apophis', 'earth', {\n\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\tverticalOffset: 15,\n\t\t\t\t\t\thorizontalOffset: -15\n\t\t\t\t\t});\n\t\t\t\t\tapp.getManager('time').play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: app => {\n\t\t\t\tapp.scene.get('sun').getComponentByType('orbitalParticles').setEnabled(false);\n\t\t\t},\n\t\t\tonLeave: app => {\n\t\t\t\tapp.scene.get('sun').getComponentByType('orbitalParticles').setEnabled(true);\n\t\t\t},\n\t\t\trate: 60\n\t\t},\n\t\t{\n\t\t\tid: 'slide_4',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tclassList: ['large', 'semi'],\n\t\t\t\t\tdescription: '<div><span>Distance: </span><span class=\"number highlight\">{{distance}}</span><span> km</span></div>',\n\t\t\t\t\tonEnter: (app, block) => {\n\t\t\t\t\t\tblock.addState('distance', '0');\n\n\t\t\t\t\t\tblock.update = () => {\n\t\t\t\t\t\t\tconst distance = app.getManager('scene').getDistance('earth', '99942_apophis', { precision: 3 }).toLocaleString();\n\t\t\t\t\t\t\tblock.setState({ distance });\n\t\t\t\t\t\t};\n\t\t\t\t\t\tapp.pioneer.addCallback(block.update, true);\n\t\t\t\t\t},\n\t\t\t\t\tonLeave: (app, block) => {\n\t\t\t\t\t\tapp.pioneer.removeCallback(block.update);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'It’s now predicted the asteroid will safely pass about 23,189 miles (37,320 kilometers) from our planet’s surface. While that’s a safe distance, it’s close enough that the asteroid will come between Earth and our Moon, which is about 238,855 miles (384,400 kilometers) away. It’s also near the distance that some spacecraft orbit Earth. <br>This asteroid has the official designation of being both a “Near Earth Object” and a “Potentially Hazardous Object.”'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'replay'\n\t\t\t\t}\n\t\t\t],\n\t\t\ttime: '2029-04-12T12:00:00-07:00',\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\t// View of the Earth, Moon and Apophis\n\t\t\t\t\tawait app.getManager('scene').isListReady(['earth', 'moon', '99942_apophis']);\n\t\t\t\t\tapp.getManager('time').pause();\n\t\t\t\t\tawait app.cameraScripts.goToSystem('earth', {\n\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\tplaneId: 'moon',\n\t\t\t\t\t\totherEntityNames: ['moon'],\n\t\t\t\t\t\tdistance: 385000 * 2.5,\n\t\t\t\t\t\tangle: 35,\n\t\t\t\t\t\tincludeChildren: false,\n\t\t\t\t\t\tisRelativeToPreviousCamera: false\n\t\t\t\t\t});\n\t\t\t\t\tapp.getManager('time').play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: async (app, slide) => {\n\t\t\t\tawait app.getManager('scene').isListReady(['sun', 'earth', 'moon', '99942_apophis']);\n\t\t\t\tconst sun = app.scene.get('sun');\n\n\t\t\t\tsun.getComponentByType('orbitalParticles').setEnabled(false);\n\n\t\t\t\tconst lineOfSight = sun.get('orbiterLineOfSight');\n\t\t\t\tlineOfSight.setEnabled(true);\n\t\t\t\tlineOfSight.setTargets('earth', '99942_apophis');\n\n\t\t\t\t// Turn off Earth's trail\n\t\t\t\tapp.scene.get('earth').get('orbitLine').setEnabled(false);\n\n\t\t\t\t// TODO 9 moons in future\n\n\t\t\t\t// Only when slide changes\n\t\t\t\tif (slide.getState('previousIndex') !== slide.getState('currentIndex')) {\n\t\t\t\t\tslide.reset = {};\n\n\t\t\t\t\tconst apophis = app.scene.get('99942_apophis');\n\t\t\t\t\t// Disable default dynamo\n\t\t\t\t\tapophis.getControllerByType('dynamo', 0)?.setEnabled(false);\n\t\t\t\t\t// Add dynamo controller to Apophis for higher accuracy SSD\n\t\t\t\t\t// Apophis uses orbital elements controller and has no dynamo by default\n\t\t\t\t\tconst dynamoController = apophis.addController('dynamo', 'earth_centric');\n\t\t\t\t\tdynamoController.setBaseUrl('$DYNAMIC_ASSETS_URL/dynamo/ssd/99942_apophis/earth/orb/');\n\n\t\t\t\t\t// Change Apophis's parent\n\t\t\t\t\tapophis.removeParentingTableEntry(Number.NEGATIVE_INFINITY);\n\t\t\t\t\tapophis.addParentingTableEntry(Number.NEGATIVE_INFINITY, 'earth');\n\t\t\t\t}\n\n\t\t\t\tapp.getManager('time').setMax('2029-04-14T12:00:00-07:00');\n\t\t\t},\n\t\t\tonLeave: async (app, slide) => {\n\t\t\t\t// Remove added Apophis dynamo controller\n\t\t\t\tconst apophis = app.scene.get('99942_apophis');\n\t\t\t\tapophis.removeParentingTableEntry(Number.NEGATIVE_INFINITY);\n\t\t\t\tapophis.addParentingTableEntry(Number.NEGATIVE_INFINITY, 'sun');\n\t\t\t\tapophis.removeController(apophis.getController('earth_centric'));\n\t\t\t\tapophis.getControllerByType('dynamo', 0)?.setEnabled(true);\n\n\t\t\t\tconst sun = app.scene.get('sun');\n\n\t\t\t\tsun.getComponentByType('orbitalParticles').setEnabled(true);\n\n\t\t\t\tconst lineOfSight = sun.get('orbiterLineOfSight');\n\t\t\t\tlineOfSight.setEnabled(false);\n\n\t\t\t\t// Turn on Earth's trail\n\t\t\t\tapp.scene.get('earth').get('orbitLine').setEnabled(true);\n\n\t\t\t\tapp.getManager('time').resetMax();\n\n\t\t\t\tawait app.scene.getLoadedPromise();\n\t\t\t\tawait app.pioneer.waitUntilNextFrame();\n\t\t\t},\n\t\t\trate: 1800\n\t\t},\n\t\t{\n\t\t\tid: 'slide_5',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\ttitle: 'What is a Near Earth Object (NEO)?',\n\t\t\t\t\tdescription: 'Over millions of years, some main belt asteroids have been influenced by collisions and gravitational interactions with planets that have gradually changed their orbits so that they now pass through Earth’s general region of space. These are the Near-Earth Objects (NEOs).<br>Specifically, an NEO is defined as an asteroid or comet whose orbit brings it to within 1.3 astronomical units (<a class=\"clickable\" key=\"auLink\">AU</a>s) of the sun. Near-Earth Comets (NECs) are further restricted to only those with “short” orbital periods less than 200 years.',\n\t\t\t\t\tonEnter: (app, block) => {\n\t\t\t\t\t\tblock.auLinkClick = () => {\n\t\t\t\t\t\t\tapp.getComponent('definitionOverlay').navigateToDefinition('au');\n\t\t\t\t\t\t};\n\t\t\t\t\t\tblock._children.auLink?.addEventListener('click', block.auLinkClick);\n\t\t\t\t\t\tblock._children.auLink?.addEventListener('click', block.auLinkClick);\n\t\t\t\t\t},\n\t\t\t\t\tonLeave: (app, block) => {\n\t\t\t\t\t\tblock._children.auLink?.removeEventListener('click', block.auLinkClick);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\ttime: '2029-03-01T10:45:12-07:00',\n\t\t\trate: 300000,\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\t// Top down view of the Sun, with ring shown around the Sun\n\t\t\t\t\tawait app.getManager('scene').isListReady(['sun', 'earth', '99942_apophis']);\n\t\t\t\t\tapp.getManager('time').pause();\n\t\t\t\t\tawait app.cameraScripts.showLocation('sun', 'earth', 'earth', 'planeNormal', {\n\t\t\t\t\t\tdistance: AppUtils.conversionTable.auToKm * 1.3 * 1.5,\n\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\tstartFromTarget: false,\n\t\t\t\t\t\trotateByScreenRatio: false\n\t\t\t\t\t});\n\t\t\t\t\tapp.getManager('time').play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: app => {\n\t\t\t\t// Hide all planets except Earth\n\t\t\t\tconst planets = Entity.getEntityNamesInGroup('planets');\n\t\t\t\tplanets.forEach(planet => {\n\t\t\t\t\tif (planet !== 'earth') {\n\t\t\t\t\t\tapp.scene.get(planet).setEnabled(false);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Hide all trails, except Earth\n\t\t\t\tapp.getManager('layer').toggleLayer('trails');\n\t\t\t\tapp.scene.get('earth').get('orbitLine').setEnabled(true);\n\n\t\t\t\t// Make Apophis and Earth labels always show on collision\n\t\t\t\tapp.getManager('label').addException('earth');\n\t\t\t\tapp.getManager('label').addException('99942_apophis');\n\n\t\t\t\t// Show ring\n\t\t\t\tconst ringEntity = app.scene.get('sunRing');\n\t\t\t\tconst labelEntity = app.scene.get('sunRingLabel');\n\t\t\t\tringEntity.setEnabled(true);\n\t\t\t\tlabelEntity.setEnabled(true);\n\t\t\t},\n\t\t\tonLeave: app => {\n\t\t\t\t// Reset planets\n\t\t\t\tconst planets = Entity.getEntityNamesInGroup('planets');\n\t\t\t\tplanets.forEach(planet => {\n\t\t\t\t\tif (planet !== 'earth') {\n\t\t\t\t\t\tapp.scene.get(planet).setEnabled(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reset trails\n\t\t\t\tapp.getManager('layer').toggleLayer('trails', undefined, true);\n\n\t\t\t\t// Reset Apophis and Earth labels\n\t\t\t\tapp.getManager('label').removeException('earth');\n\t\t\t\tapp.getManager('label').removeException('99942_apophis');\n\n\t\t\t\t// Hide ring\n\t\t\t\tconst ringEntity = app.scene.get('sunRing');\n\t\t\t\tringEntity.setEnabled(false);\n\t\t\t\tconst labelEntity = app.scene.get('sunRingLabel');\n\t\t\t\tlabelEntity.setEnabled(false);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_6',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\ttitle: 'What is a Potentially Hazardous Object?',\n\t\t\t\t\tdescription: '<span>A Potentially Hazardous Object (PHO) is a Near-Earth Object (NEO) that is at least 140 meters (460 feet) in size, and whose orbit approaches Earth’s orbit to within 0.05 AU (7,480,000 km or 4,675,000 miles). PHOs are “potentially hazardous” only in a long-term sense: almost all are not currently on Earth-crossing orbits, but their orbits are close enough that over hundreds or thousands of years, they may evolve to become Earth-crossing.<br>There are </span><span>{{phoCount}}</span><span> PHOs currently.</span>',\n\t\t\t\t\tonEnter: (app, block) => {\n\t\t\t\t\t\t// Turn on PHO filter\n\t\t\t\t\t\tblock.addState('phoCount', '0');\n\t\t\t\t\t\tapp.getManager('filters').setFilter({ asteroids: true, comets: true, phos: true }, null, (size) => {\n\t\t\t\t\t\t\tblock.setState({ phoCount: Number(size).toLocaleString() });\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonLeave: (app, block) => {\n\t\t\t\t\t\t// Reset PHO filter\n\t\t\t\t\t\tconst filtersManager = app.getManager('filters');\n\t\t\t\t\t\tfiltersManager.setFilter(filtersManager.getPreviousFilters());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\ttime: '2029-03-27T14:45:12-07:00',\n\t\t\trate: 10000,\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tawait app.getManager('scene').isListReady(['earth', '99942_apophis']);\n\t\t\t\t\tapp.getManager('time').pause();\n\t\t\t\t\tawait app.cameraScripts.showLocation('sun', 'earth', 'earth', 'planeNormal', {\n\t\t\t\t\t\tdistance: AppUtils.conversionTable.auToKm * 1.3 * 1.5,\n\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\tstartFromTarget: false,\n\t\t\t\t\t\trotateByScreenRatio: false\n\t\t\t\t\t});\n\t\t\t\t\tawait app.cameraScripts.goToSystemSideway('earth', {\n\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\tdistance: AppUtils.conversionTable.auToKm * 0.05 * 20,\n\t\t\t\t\t\tangleInDegree: 30,\n\t\t\t\t\t\tincludeChildren: false\n\t\t\t\t\t});\n\n\t\t\t\t\tapp.getManager('time').play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: async app => {\n\t\t\t\t// Show torus\n\t\t\t\tconst torus = app.scene.get('sunTorus');\n\t\t\t\ttorus.setEnabled(true);\n\t\t\t\tconst torusLabel = app.scene.get('sunTorusLabel');\n\t\t\t\ttorusLabel.setEnabled(true);\n\t\t\t},\n\t\t\tonLeave: app => {\n\t\t\t\t// Hide torus\n\t\t\t\tconst torus = app.scene.get('sunTorus');\n\t\t\t\ttorus.setEnabled(false);\n\t\t\t\tconst torusLabel = app.scene.get('sunTorusLabel');\n\t\t\t\ttorusLabel.setEnabled(false);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_7',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Explore the next 5 closest approaches <a class=\"clickable\" href=\"#/watch\">here</a>. These are continuously updated, as NASA is constantly on the lookout.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tawait app.cameraScripts.goToSystem('inner_solar_system');\n\t\t\t\t}\n\t\t\t],\n\t\t\trate: 259200\n\t\t}\n\t],\n\tonEnter: app => {\n\t},\n\tonLeave: app => {\n\t\t// Reset force load\n\t\tconst sceneManager = app.getManager('scene');\n\t\tapp.getManager('layer').toggleLayer('trails', undefined, true);\n\t\tapp.scene.get('earth').get('orbitLine').setEnabled(true);\n\t}\n};\n","import { BaseApp } from \"eyes\";\n\nconst forceLoad = [\n\t// ['67p_churyumov_gerasimenko', 'model'],\n\t// ['sc_rosetta', 'model'],\n\n\t// ['433_eros', 'model'],\n\t// ['sc_near_shoemaker', 'model'],\n\n\t// ['9p_tempel_1', 'model'],\n\t// ['sc_deep_impact_impactor', 'model'],\n\n\t// ['4_vesta', 'model'],\n\t// ['sc_dawn', 'model'],\n\n\t// ['1_ceres', 'spheroid'],\n\n\t// ['sc_stardust', 'model'],\n\n\t// ['101955_bennu', 'model'],\n\t// ['sc_osiris_rex', 'model'],\n\n\t// ['16_psyche', 'model'],\n\t// ['sc_lucy', 'model'],\n\n\t// ['dimorphos', 'model'],\n\t// ['sc_dart', 'model'],\n\n\t// ['earth', 'spheroid']\n];\n\n// An incrementing int used to cancel outdated camera transition awaits\nlet globalNonce = 0;\n\n// Indicate that a label is clicked\nlet isLabelClicked = false;\nconst resetLabelClick = () => {\n\tisLabelClicked = false;\n};\n\n/**\n * Add click callback to an entity's label.\n * @param {App} app\n * @param {string} entityName\n * @param {Function} callback\n */\nconst addLabelClick = (app, entityName, callback) => {\n\tconst labelEl = app.scene.getEntity(entityName)?.get('div')?.getDiv();\n\n\tif (labelEl) {\n\t\tlabelEl.classList.remove('unclickable');\n\t\tlabelEl.addEventListener('click', async () => {\n\t\t\tisLabelClicked = true;\n\t\t\tawait callback(entityName, app);\n\t\t});\n\t}\n};\n\n/**\n * Remove click callback from an entity's label.\n * @param {App} app\n * @param {string} entityName\n * @param {Function} callback\n */\nconst removeLabelClick = (app, entityName, callback) => {\n\tconst labelEl = app.scene.getEntity(entityName)?.get('div')?.getDiv();\n\n\tif (labelEl) {\n\t\tlabelEl.classList.add('unclickable');\n\t\tlabelEl.removeEventListener('click', callback);\n\t}\n};\n\n/**\n * Wrapper for camera goToSpacecraft.\n * @param {string} entityName\n * @param {BaseApp} app\n */\nconst goToSpacecraft = async (entityName, app) => {\n\tawait app.cameraScripts.goToSpacecraft(entityName);\n};\n\n/**\n * Wrapper for camera goToCelestialObject.\n * @param {string} entityName\n * @param {BaseApp} app\n */\nconst goToCelestialObject = async (entityName, app) => {\n\tawait app.cameraScripts.goToCelestialObject(entityName);\n};\n\nexport default {\n\ttype: 'nonsequential',\n\tslides: [\n\t\t{\n\t\t\tid: 'slide_1',\n\t\t\ttype: 'overlay',\n\t\t\tclassList: ['opaque', 'black'],\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'title',\n\t\t\t\t\ttitle: 'Asteroid and Comet Missions'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\t++globalNonce;\n\t\t\t\t\tawait app.cameraScripts.goToSystem('inner_solar_system');\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 'slide_2',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2015-02-14T08:14:00Z',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'NASA and other space agencies have sent spacecraft to visit, photograph, sample, and even collide with various asteroids like Bennu, Vesta, and Eros, and the comets Tempel 1, 19P/Borrelly, and 67P Churyumov-Gerasimenko (seen here with the Rosetta spacecraft).'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['67p_churyumov_gerasimenko', 'sc_rosetta']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToSpacecraft('sc_rosetta', { cinematic: true, duration: 3 });\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_rosetta', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '67p_churyumov_gerasimenko', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '67p_churyumov_gerasimenko') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_rosetta') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_rosetta', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '67p_churyumov_gerasimenko', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_3',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2001-02-12T18:00:00Z',\n\t\t\trate: 0,\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'The very first mission to both orbit and land on an asteroid was the NEAR mission (Near Earth Asteroid Rendezvous, later renamed NEAR Shoemaker after the renowned geologist Eugene Shoemaker). The mission successfully orbited the asteroid Eros for a year, and ended the mission by landing on the surface on February 12th, 2001.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['433_eros', 'sc_near_shoemaker']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.alignObjects('sc_near_shoemaker', '433_eros', {\n\t\t\t\t\t\tduration: 3,\n\t\t\t\t\t\tverticalOffset: 15,\n\t\t\t\t\t\thorizontalOffset: -15,\n\t\t\t\t\t\tdistance: 0.05\n\t\t\t\t\t});\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_near_shoemaker', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '433_eros', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '433_eros') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_near_shoemaker') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_near_shoemaker', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '433_eros', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_4',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2005-07-04T05:44:20Z',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'NASA has also sent several missions to study comets. On the 4th of July, 2005, NASA’s Deep Impact mission actually collided with a comet named Tempel 1 (9P/Tempel). The spacecraft (Deep Impact) sent a washing-machine sized probe (the Deep Impact Impactor) to hit the comet itself, and then flew through the resulting cloud of space debris to analyze the composition. The comet’s nucleus had more dust and less ice than models had suggested.'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'replay'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['9p_tempel_1', 'sc_deep_impact', 'sc_deep_impact_impactor']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.alignObjects('sc_deep_impact_impactor', '9p_tempel_1', {\n\t\t\t\t\t\tduration: 3,\n\t\t\t\t\t\tdistance: 0.005,\n\t\t\t\t\t\tverticalOffset: 15,\n\t\t\t\t\t\thorizontalOffset: 15\n\t\t\t\t\t});\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tconst maxTime = '2005-07-04T05:44:33Z';\n\t\t\t\tslide.update = () => {\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tif (time.getTime().valueOf() >= time.parseTime(maxTime).valueOf()) {\n\t\t\t\t\t\ttime.pause();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tapp.pioneer.addCallback(slide.update, true);\n\t\t\t\tapp.getManager('time').setMax(maxTime);\n\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_deep_impact_impactor', goToSpacecraft);\n\t\t\t\taddLabelClick(app, 'sc_deep_impact', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '9p_tempel_1', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '9p_tempel_1') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_deep_impact_impactor') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\tapp.pioneer.removeCallback(slide.update);\n\t\t\t\tapp.getManager('time').resetMax();\n\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_deep_impact_impactor', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '9p_tempel_1', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_5',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2012-07-21T12:01:00Z',\n\t\t\trate: 35,\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: \"The Dawn mission was the first to orbit an object in the main asteroid belt, as well as the first mission to orbit two separate destinations.<br>Dawn spent over a year in orbit around Vesta, from July of 2011 until September of 2012. Dawn mapped Vesta's geology, composition, cratering record and more.\"\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['4_vesta', 'sc_dawn']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToSpacecraft('sc_dawn', { cinematic: true, duration: 3 });\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_dawn', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '4_vesta', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '4_vesta') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_dawn') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_dawn', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '4_vesta', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_6',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2016-03-18T13:30:00Z',\n\t\t\trate: 40,\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Dawn then traveled to Ceres, which is the largest object in the asteroid belt. (Ceres is still considered to be an asteroid, but was designated as a dwarf planet in 2006.) The spacecraft arrived in 2015 and continued to collect data until running out of thruster fuel. <br>Dawn found abundant proof of water ice in the higher latitudes, as well as active geological features. Dawn remains in orbit around Ceres but will eventually impact the surface.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['1_ceres', 'sc_dawn']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToCelestialObject('1_ceres', { cinematic: false, duration: 3, distance: 2 });\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_dawn', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '1_ceres', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '1_ceres') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_dawn') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_dawn', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '1_ceres', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_7',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2003-12-24T00:00:00Z',\n\t\t\trate: 90,\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'Other missions actually take samples of asteroids and comets. The Stardust mission flew by the comet Wild 2 and collected samples from the dust trail of the comet, as well as interstellar dust. <br>These samples were later brought back to Earth via a detachable sample return capsule, which re-entered Earth’s atmosphere on January 15th, 2006. The sample capsule landed in Utah and the millions of dust particles are still being studied to this day.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isReady('sc_stardust');\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToSpacecraft('sc_stardust', { distance: -0.01, cinematic: false, duration: 3 });\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_stardust', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '81p_wild_2', goToCelestialObject);\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_stardust', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '81p_wild_2', goToCelestialObject);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_8',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2020-10-20T21:50:24Z',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'In October of 2020, the OSIRIS-REx mission successfully sampled the surface of the asteroid Bennu, collecting approximately 60 grams of surface material. The mission successfully dropped off the sample return capsule to Earth on September 24th, 2023, and is now on course to visit the asteroid Apophis.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['101955_bennu', 'sc_osiris_rex']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.alignObjects('sc_osiris_rex', '101955_bennu', {\n\t\t\t\t\t\tduration: 4,\n\t\t\t\t\t\tdistance: 0.1,\n\t\t\t\t\t\tverticalOffset: 30,\n\t\t\t\t\t\thorizontalOffset: -80\n\t\t\t\t\t});\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tapp.getComponent('settings').toggleLightOptions('flood');\n\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_osiris_rex', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '101955_bennu', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tif (isLabelClicked) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '101955_bennu') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_osiris_rex') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\tapp.getComponent('settings').toggleLightOptions('shadow');\n\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_osiris_rex', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '101955_bennu', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_9',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2029-08-17T01:02:00Z',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'NASA has several new missions to investigate asteroids, including Lucy and Psyche. Each mission promises to unlock further secrets of the formation and evolution of our solar system by studying asteroids. The Lucy mission is investigating the ancient Trojan asteroids that share Jupiter’s orbit, and the Psyche mission (seen here) is en route to the unique metal asteroid 16 Psyche.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['16_psyche', 'sc_psyche']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToSpacecraft('sc_psyche', { cinematic: true, duration: 3, distance: 0.05 });\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tapp.getComponent('settings').toggleLightOptions('flood');\n\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_psyche', goToSpacecraft);\n\t\t\t\taddLabelClick(app, '16_psyche', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (entityName === '16_psyche') {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_psyche') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\tapp.getComponent('settings').toggleLightOptions('shadow');\n\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_psyche', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, '16_psyche', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_10',\n\t\t\ttype: 'panel',\n\t\t\ttime: '2022-09-26T23:14:11Z',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'The Double Asteroid Redirection Test, or DART, is a NASA mission that could be a plot from a Hollywood movie. As the very first planetary defense test mission, DART will test whether a spacecraft impact could deflect the orbit of an asteroid. Even a slight change in the orbit of an asteroid could avert a collision with Earth if the change happens early enough. DART successfully impacted the asteroid moon Dimorphos, which is in a binary system with the larger asteroid Didymos. The orbital period of Dimorphos changed by 33 minutes.'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'replay'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isListReady(['65803_didymos', 'dimorphos', 'sc_dart']);\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToSpacecraft('sc_dart', {\n\t\t\t\t\t\tcinematic: false,\n\t\t\t\t\t\tduration: 3,\n\t\t\t\t\t\tverticalOffset: 15\n\t\t\t\t\t});\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t],\n\t\t\tonEnter: (app, slide) => {\n\t\t\t\tapp.getManager('time').setMax('2022-09-26T23:14:18.054Z');\n\n\t\t\t\tconst camera = app.getManager('camera');\n\n\t\t\t\t// Make label(s) clickable\n\t\t\t\taddLabelClick(app, 'sc_dart', goToSpacecraft);\n\t\t\t\taddLabelClick(app, 'dimorphos', goToCelestialObject);\n\t\t\t\taddLabelClick(app, '65803_didymos', goToCelestialObject);\n\n\t\t\t\t// Make object(s) clickable\n\t\t\t\tslide.selectionCallback = camera.getSelectionCallback();\n\t\t\t\tcamera.setSelectionCallback(async entity => {\n\t\t\t\t\tconst entityName = entity?.getName();\n\t\t\t\t\tif (['dimorphos', '65803_didymos'].includes(entityName)) {\n\t\t\t\t\t\tawait app.cameraScripts.goToCelestialObject(entityName);\n\t\t\t\t\t}\n\t\t\t\t\telse if (entityName === 'sc_dart') {\n\t\t\t\t\t\tawait app.cameraScripts.goToSpacecraft(entityName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLeave: (app, slide) => {\n\t\t\t\tapp.getManager('time').resetMax();\n\n\t\t\t\t// Make label(s) unclickable\n\t\t\t\tremoveLabelClick(app, 'sc_dart', goToSpacecraft);\n\t\t\t\tremoveLabelClick(app, 'dimorphos', goToCelestialObject);\n\t\t\t\tremoveLabelClick(app, '65803_didymos', goToCelestialObject);\n\n\t\t\t\t// Reset object callback\n\t\t\t\tapp.getManager('camera').setSelectionCallback(slide.selectionCallback);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'slide_11',\n\t\t\ttype: 'panel',\n\t\t\tcontent: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'description',\n\t\t\t\t\tdescription: 'NASA and other space agencies will continue to send robotic explorers throughout our solar system.  The journey of discovery is just beginning.'\n\t\t\t\t}\n\t\t\t],\n\t\t\tcamera: [\n\t\t\t\tasync app => {\n\t\t\t\t\tconst localNonce = ++globalNonce;\n\t\t\t\t\tconst time = app.getManager('time');\n\t\t\t\t\tawait app.getManager('scene').isReady('earth');\n\t\t\t\t\tif (localNonce !== globalNonce) return;\n\t\t\t\t\ttime.pause();\n\t\t\t\t\tawait app.cameraScripts.goToCelestialObject('earth', { cinematic: true, duration: 3 });\n\t\t\t\t\ttime.play();\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\tonEnter: app => {\n\t\tapp.scene.get('sun', 'orbitalParticles').setEnabled(false);\n\t\tapp.getManager('layer').toggleLayer('starfield', { category: 'Star Field' }, true);\n\n\t\twindow.addEventListener('mousedown', resetLabelClick);\n\t\twindow.addEventListener('touchstart', resetLabelClick);\n\t},\n\tonLeave: app => {\n\t\tapp.scene.get('sun', 'orbitalParticles').setEnabled(true);\n\t\tapp.getManager('layer').toggleLayer('starfield', { category: 'Star Field' }, false);\n\n\t\twindow.removeEventListener('mousedown', resetLabelClick);\n\t\twindow.removeEventListener('touchstart', resetLabelClick);\n\t}\n};\n","import Asteroids101Story from './asteroids_101';\nimport AsteroidsCloseApproachStory from './asteroids_close_approach';\nimport AsteroidsMissionsStory from './asteroids_missions';\nimport STORY_LIST from './story_list.json';\n\nconst STORIES = {\n\tasteroids_101: Asteroids101Story,\n\tasteroids_close_approach: AsteroidsCloseApproachStory,\n\tasteroids_missions: AsteroidsMissionsStory\n};\n\nexport {\n\tSTORY_LIST,\n\tSTORIES\n};\n","/* eslint-disable import/first */\n\nexport * from './managers/filters_manager';\nexport * from './managers/neos_manager';\nexport * from './managers/watch_manager';\nexport * from './managers/link_manager';\nexport * from './managers/selection_manager';\nexport * from './managers/label_manager';\nexport * from './managers/trail_manager';\n\nexport * from './components/asteroid_menu_top/asteroid_menu_top';\nexport * from './components/asteroid_menu_bottom/asteroid_menu_bottom';\nexport * from './components/asteroid_modals/asteroid_modals';\nexport * from './components/home_button/home_button';\nexport * from './components/watch_panel/watch_panel';\nexport * from './components/asteroid_panel/asteroid_panel';\nexport * from './components/mission_panel/mission_panel';\nexport * from './components/following_panel/following_panel';\nexport * from './components/countdown/countdown';\nexport * from './components/splash_screen/splash_screen';\nexport * from './app';\nexport * from './neos';\nexport * from './components/definition_overlay/definition_overlay';\nexport * from './components/time_slider/time_slider';\nexport * from './components/breadcrumb/breadcrumb';\nexport * from './components/settings/asteroids_settings';\nexport * from './components/search/search';\n\n// Types\nexport * from './types';\n","/**\n * An Asteroids manager for handling the application's filter state\n * This is very basic. Logic from the filters_modal could be pulled in here\n */\n\nimport * as Pioneer from 'pioneer';\nimport { BaseManager } from 'eyes';\nimport { NEO } from '../internal';\n\n/**\n * Filters Manager class.\n */\nexport class FiltersManager extends BaseManager {\n\t/**\n\t * Constructs the filters manager.\n\t * @param {BaseApp} app\n\t * @param {Pioneer.Scene} scene\n\t */\n\tconstructor(app, scene) {\n\t\tsuper(app, scene);\n\n\t\tthis.state = {\n\t\t\tisFiltering: false,\n\t\t\t// filter keys are always {originalFilter} + s (ex. news -> newss)\n\t\t\tfilters: {\n\t\t\t\tasteroids: false,\n\t\t\t\tcomets: false,\n\t\t\t\tphos: false\n\t\t\t},\n\t\t\tlastSize: null\n\t\t};\n\n\t\t// The previous filters state\n\t\tthis.previousFilters = {\n\t\t\tasteroids: false,\n\t\t\tcomets: false,\n\t\t\tphos: false\n\t\t};\n\n\t\tthis._app = app;\n\n\t\tthis._eventNames.push('isFilteringChange');\n\t\tthis._eventNames.push('lastSizeChange');\n\t\tthis._initCallbacks();\n\n\t\tthis.bindFunctions([\n\t\t\t'getFilters',\n\t\t\t'getLastSize',\n\t\t\t'_matchFunction'\n\t\t]);\n\t}\n\n\t/**\n\t * Sets the application's filtering state\n\t * @param {boolean} isFiltering\n\t */\n\t_setFiltering(isFiltering) {\n\t\tif (this.state.isFiltering !== isFiltering) {\n\t\t\tthis.state.isFiltering = isFiltering;\n\t\t\tthis.triggerCallbacks('isFilteringChange', [this.state.isFiltering]);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the final size of the filtered results\n\t * @param {number} lastSize - the final size of the filtered results\n\t */\n\t_setLastSize(lastSize) {\n\t\tif (this.state.lastSize !== lastSize) {\n\t\t\tthis.state.lastSize = lastSize;\n\t\t\tthis.triggerCallbacks('lastSizeChange', [this.state.lastSize]);\n\t\t}\n\t}\n\n\t/**\n\t * Whether the application is in a filtered state or not\n\t * @returns {boolean} filter state\n\t */\n\tget isFiltering() {\n\t\treturn this.state.isFiltering;\n\t}\n\n\t/**\n\t * The filters state\n\t * @returns {object} filters state\n\t */\n\tgetFilters() {\n\t\treturn this.state.filters;\n\t}\n\n\t/**\n\t * The previous filters state\n\t * @returns {object} filters state\n\t */\n\tgetPreviousFilters() {\n\t\treturn this.previousFilters;\n\t}\n\n\t/**\n\t * Gets the size of filtered results\n\t * @returns {number} - number of filtered results\n\t */\n\tgetLastSize() {\n\t\treturn this.state.lastSize;\n\t}\n\n\t/**\n\t * Sets a filter\n\t * @param {string | object} filter - One of 'asteroids' | 'comets' | 'phos' or filtersState object\n\t * @param {boolean} on - on or not\n\t * @param {Function} callback\n\t */\n\tsetFilter(filter, on, callback) {\n\t\tthis.previousFilters = this.state.filters;\n\t\t// Only trigger filter on state change, to prevent unncessary executions and flash off/on\n\t\tif (typeof filter === 'string') {\n\t\t\tif (this.state.filters[filter] != null && this.state.filters[filter] !== on) {\n\t\t\t\tthis.state.filters[filter] = on;\n\t\t\t\tthis._filter(callback);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (const key in filter) {\n\t\t\t\tif (this.state.filters[key] !== filter[key]) {\n\t\t\t\t\tthis.state.filters = { ...this.state.filters, ...filter };\n\t\t\t\t\tthis._filter(callback);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Minimally changes the current filter state to reveal an object based on the object's filter state\n\t * @param {object} reveal - Can be neo object itself or just: { asteroid: false, comet: true, pho: false }\n\t * @param {boolean} resetAll - If true and reveal is presently hidden, resets all filters to show everything instead of just being selective about it\n\t * @param {Function} callback - callback for after filter completes\n\t * @returns {boolean} Whether or not the filter state had to change to accommodate the reveal\n\t */\n\tsetFilterToReveal(reveal, resetAll, callback) {\n\t\tlet refilterNeeded = false;\n\t\t// Turn off showing only phos if reveal is not a pho\n\t\tif (reveal.pho !== true && this.state.filters.phos === true) {\n\t\t\tthis.state.filters.phos = false;\n\t\t\trefilterNeeded = true;\n\t\t}\n\n\t\t// Only check these if at least one of them is true\n\t\t// (because both false means everything is shown)\n\t\tif (!(this.state.filters.asteroids === false && this.state.filters.comets === false)) {\n\t\t\t// So now we can only worry about checking them on if needed\n\t\t\tif (reveal.asteroid === true && this.state.filters.asteroids === false) {\n\t\t\t\tthis.state.filters.asteroids = true;\n\t\t\t\trefilterNeeded = true;\n\t\t\t};\n\t\t\tif (reveal.comet === true && this.state.filters.comets === false) {\n\t\t\t\tthis.state.filters.comets = true;\n\t\t\t\trefilterNeeded = true;\n\t\t\t};\n\t\t}\n\n\t\tif (refilterNeeded) {\n\t\t\tif (resetAll === true) {\n\t\t\t\tthis.state.filters = { asteroids: false, comets: false, phos: false };\n\t\t\t};\n\t\t\tthis._filter(callback);\n\t\t};\n\t\treturn refilterNeeded;\n\t}\n\n\t/**\n\t * Toggles a layer\n\t * @param {string} key - layer key\n\t * @param {boolean} on - can be unset for a true toggle, otherwise forces\n\t */\n\t_toggleLayer(key, on) {\n\t\tconst layerManager = this._app.getManager('layer');\n\t\tconst categories = {\n\t\t\tui: 'User Interface',\n\t\t\tplanets: 'Planet',\n\t\t\tasteroids: 'Asteroid',\n\t\t\tcomets: 'Comet',\n\t\t\tdwarfPlanets: 'Dwarf Planet',\n\t\t\tspacecraft: 'Spacecraft',\n\t\t\ttrails: 'Trail',\n\t\t\tlabels: 'Label'\n\t\t};\n\t\tif (\n\t\t\ton == null\n            || (on === true && layerManager._layers[key]?.visible === false)\n            || (on === false && layerManager._layers[key]?.visible === true)) {\n\t\t\tlayerManager.toggleLayer(key, { category: categories[key] });\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not the NEO fits in the filter\n\t * @param {NEO} neo\n\t * @returns {boolean}\n\t */\n\t_matchFunction(neo) {\n\t\tif (this.app.getManager('selection')?._id === neo.pioneerName) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.state.filters.asteroids && !this.state.filters.comets && neo.comet === true) {\n\t\t\treturn false;\n\t\t};\n\t\tif (this.state.filters.comets && !this.state.filters.asteroids && neo.comet === false) {\n\t\t\treturn false;\n\t\t};\n\t\tif (this.state.filters.phos && neo.pho === false) {\n\t\t\treturn false;\n\t\t};\n\t\treturn true;\n\t}\n\n\t/**\n\t * Narrow orbital particles, layers and entities based on the user's filters\n\t * @param {Function} callback\n\t */\n\t_filter(callback) {\n\t\tconst filtersAreActive = (this.state.filters.asteroids || this.state.filters.comets || this.state.filters.phos);\n\t\t// Filter particles\n\t\tthis._app.addParticleMatchFunction(this._matchFunction, 'filters_manager', true, (orbitalElements) => {\n\t\t\tthis._setLastSize((filtersAreActive ? orbitalElements.length : this.app.neos.size) || 0);\n\t\t\tthis._setFiltering(filtersAreActive);\n\t\t\tif (typeof callback === 'function') callback(this.state.lastSize);\n\t\t});\n\n\t\t// Filter layers\n\t\t// If both are off, both are on\n\t\tif (!this.state.filters.asteroids && !this.state.filters.comets) {\n\t\t\tthis._toggleLayer('asteroids', true);\n\t\t\tthis._toggleLayer('comets', true);\n\t\t}\n\t\telse {\n\t\t\tthis._toggleLayer('asteroids', this.state.filters.asteroids);\n\t\t\tthis._toggleLayer('comets', this.state.filters.comets);\n\t\t}\n\n\t\t// Filter on a per entity level for PHOs\n\t\tconst { neos } = this._app;\n\t\tconst { _itemsByName: sceneEntities } = this.app.scene?._entities || {};\n\t\tconst sceneEntityNames = sceneEntities ? Array.from(sceneEntities.keys()) : [];\n\n\t\tconst foundNeos = [];\n\n\t\tfor (const neoName of neos.keys()) {\n\t\t\tif (sceneEntityNames.includes(neoName)) {\n\t\t\t\tfoundNeos.push(neoName);\n\t\t\t\tsceneEntities.get(neoName).setEnabled(this._matchFunction(neos.get(neoName)));\n\t\t\t}\n\t\t}\n\n\t\t// Now, for all the entities without matching neos\n\t\tconst allEntities = this._app.getManager('content')?.getEntityList();\n\n\t\tfor (const sceneEntityName of sceneEntityNames) {\n\t\t\t// Find the entities that are asteroids, comets or dwarf planets\n\t\t\tif (!foundNeos.includes(sceneEntityName) && allEntities[sceneEntityName] && ['Asteroid', 'Comet', 'Dwarf Planet'].includes(allEntities[sceneEntityName].category)) {\n\t\t\t\t// Apply the match function to them at a asteroid/comet basis\n\t\t\t\t// Note: This treats Dwarf planets as asteroids (Ceres, then, is an asteroid here)\n\t\t\t\tsceneEntities.get(sceneEntityName)?.setEnabled(this._matchFunction({\n\t\t\t\t\tcomet: allEntities[sceneEntityName].category === 'Comet',\n\t\t\t\t\tpho: false\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n}\n","import { LabelManager as EyesLabelManager } from 'eyes';\n\n/**\n * @inheritdoc\n * @extends EyesSelectionManager\n */\nexport class LabelManager extends EyesLabelManager {\n\t/**\n\t * @inheritdoc\n\t * @override\n\t */\n\t_getLink(entityName) {\n\t\tconst link = super._getLink(entityName);\n\t\treturn this._app.getManager('link')?.getParsedLink?.(link) || link;\n\t}\n}\n","import { BaseManager } from 'eyes';\n\n/**\n * Extends the main Eyes RouteManager\n */\nexport class LinkManager extends BaseManager {\n\t/**\n\t * Asteroids-specific parsed link method\n\t * @param {string} link\n\t * @returns {string}\n\t */\n\tgetParsedLink(link) {\n\t\tconst entityName = link.startsWith('/') ? link.slice(1) : link;\n\n\t\tconst info = this._app?.getManager('content')?.getEntityInfo(entityName);\n\t\tif (info) {\n\t\t\tif (info.id === 'sun') {\n\t\t\t\treturn `/stars/${entityName}`;\n\t\t\t}\n\n\t\t\tif (info.id === 'moon') {\n\t\t\t\treturn `/moons/${entityName}`;\n\t\t\t}\n\n\t\t\tif (info.category === 'Spacecraft') {\n\t\t\t\treturn `/missions/${entityName}`;\n\t\t\t}\n\n\t\t\tif (info.category === 'Planet') {\n\t\t\t\treturn `/planets/${entityName}`;\n\t\t\t}\n\t\t}\n\n\t\treturn `/${entityName}`;\n\t}\n}\n","/**\n * An Asteroids manager for handling the application's NEOs.\n * This is very basic. Logic from the filters_modal could be pulled in here\n */\n\nimport * as Pioneer from 'pioneer';\nimport { BaseManager } from 'eyes';\nimport { NEOUtils } from '../internal';\n\n/**\n * Filters Manager class.\n */\nexport class NEOsManager extends BaseManager {\n\t/**\n\t * Creates a temporary NEO entity.\n\t * @param {object} data - NEO data\n\t * @param {Pioneer.Scene} scene\n\t * @param {boolean} addLabel\n\t * @returns {Pioneer.Entity}\n\t */\n\tcreateTempNEO(data, scene = this._app.scene, addLabel = true) {\n\t\tconst entity = NEOUtils.createEntity(data, scene);\n\t\tthis._app.getManager('label').addEntity(entity);\n\t\tthis._app.getManager('scene').addTempEntity(entity);\n\n\t\tif (addLabel) {\n\t\t\t//  Set the label properties\n\t\t\tconst contentManager = this._app.getManager('content');\n\t\t\tconst labelManager = this._app.getManager('label');\n\n\t\t\tconst { dwarfPlanet, asteroid, comet } = data;\n\n\t\t\tconst iconClass = asteroid || dwarfPlanet\n\t\t\t\t? 'asteroid'\n\t\t\t\t: (comet ? 'comet' : '');\n\n\t\t\tlabelManager.setLabelProps({\n\t\t\t\tgetLabelClass: entityName => `no-select asteroid ${contentManager.getClassName(entityName) ?? ''}`,\n\t\t\t\tgetIconClass: () => iconClass\n\t\t\t}, [entity.getName()]);\n\t\t}\n\n\t\treturn entity;\n\t}\n}\n","import { SelectionManager as EyesSelectionManager } from 'eyes';\n\n/**\n * @inheritdoc\n * @extends EyesSelectionManager\n */\nexport class SelectionManager extends EyesSelectionManager {\n\t/**\n\t * @inheritdoc\n\t * @override\n\t */\n\t_getLink(entityName) {\n\t\tconst link = super._getLink(entityName);\n\t\treturn this._app.getManager('link')?.getParsedLink?.(link) || link;\n\t}\n}\n","import { TrailManager as EyesTrailManager } from 'eyes';\n\n/**\n * @inheritdoc\n * @extends EyesTrailManager\n */\nexport class TrailManager extends EyesTrailManager {\n\t/**\n\t * @inheritdoc\n\t * @override\n\t * Trials and orbit lines are treated as the same in Asteroids.\n\t */\n\ttoggleTrails(active) {\n\t\tsuper.toggleTrails(active, { scene: this._scene });\n\t\tthis.toggleOrbits(active);\n\t}\n}\n","/**\n * An Asteroids manager for handling the asteroid watch state.\n * For Asteroid Watch, although the URL is the primary state source, a manager makes sense because\n * we require both UI and Pioneer changes\n */\n\nimport { BaseManager } from 'eyes';\nimport { Entity, TimeUtils, Interval, Color } from 'pioneer';\nimport { NEO } from '../neos';\n\n/**\n * WatchManager\n */\nexport class WatchManager extends BaseManager {\n\t/**\n\t * Constructs the filters manager.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * have we redirected?\n\t\t * @property {boolean}\n\t\t */\n\t\tthis._hasRedirected = null;\n\n\t\t/**\n\t\t * Ephermeris time (ET)\n\t\t * @property {number}\n\t\t */\n\t\tthis._currentTime = TimeUtils.now();\n\n\t\t/**\n\t\t * Calculated next five approaches\n\t\t * @property {Array<NEO>}\n\t\t */\n\t\tthis._nextFiveData = null;\n\n\t\t/**\n\t\t * Next five entitoes\n\t\t * @property {Array<Entity>}\n\t\t */\n\t\tthis._nextFiveEntities = null;\n\n\t\t/**\n\t\t * Next five names only\n\t\t * @property {Array<string>}\n\t\t */\n\t\tthis._nextFiveNames = null;\n\n\t\t/**\n\t\t * Object to apply Watch and focus label weighting.\n\t\t * @property {Array<string>}\n\t\t */\n\t\tthis._labelWeights = null;\n\n\t\t/**\n\t\t * Focus entity names\n\t\t * @property {Array<string>}\n\t\t */\n\t\tthis._focusEntityNames = null;\n\n\t\t/**\n\t\t * The background planets.\n\t\t * @property {Array<string>}\n\t\t */\n\t\tthis._backgroundPlanets = ['mercury', 'venus', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune'];\n\n\t\t/**\n\t\t * The default width of the unhovered planet trail.\n\t\t * (as seen in asteroids.js - this should probably be in a config)\n\t\t * @property {number}\n\t\t */\n\t\tthis._defaultPlanetTrailWidth = 4;\n\n\t\t/**\n\t\t * _slideIndex - which of the next five is selected (null means the panel is collapsed)\n\t\t * @property {number}\n\t\t */\n\t\tthis._slideIndex = null;\n\n\t\t/**\n\t\t * store Earths dynamo coverage\n\t\t * @property {Interval}\n\t\t */\n\t\tthis._dynamoCoverage = null;\n\n\t\t/**\n\t\t * _unitType - current unit of measurement\n\t\t */\n\t\tthis._unitType = 'metric';\n\n\t\tthis._eventNames.push('toggleUnit');\n\t\tthis._initCallbacks();\n\n\t\tthis.bindFunctions(['setData', '_calculateNextNEOs', '_createEntities', '_calculateTimeLimits', 'getNeoNameByIndex', 'updateURL', 'toggleUnit']);\n\t}\n\n\t/**\n\t * Use neo data to calculate _nextFiveData\n\t */\n\tsetData() {\n\t\tif (this._nextFiveData) {\n\t\t\treturn;\n\t\t};\n\n\t\t// Filter the next five.\n\t\tconst allNEOs = this._app.neos;\n\n\t\tif (!allNEOs) {\n\t\t\tthrow Error('Cannot get NEO data.');\n\t\t}\n\n\t\tthis._nextFiveData = this._calculateNextNEOs(allNEOs);\n\n\t\tthis._setLabelWeights();\n\t}\n\n\t/**\n\t * Set the label weights.\n\t * @param {string} focusName\n\t */\n\t_setLabelWeights(focusName) {\n\t\tthis._labelWeights = Object.fromEntries(\n\t\t\tthis._nextFiveData.map(({ pioneerName }) => [pioneerName, {\n\t\t\t\tcategory: pioneerName === focusName ? 'Focus' : 'Watch'\n\t\t\t}])\n\t\t);\n\n\t\tthis._app.getManager('label')?.setWeights(this._labelWeights, false);\n\t}\n\n\t/**\n\t * Determines the index of an asteroid with a given name\n\t * @param {string} neoName\n\t * @returns {number|null}\n\t */\n\tdetermineSlideIndex(neoName) {\n\t\treturn neoName ? this._nextFiveData.findIndex(neo => neo.pioneerName === neoName) : null;\n\t}\n\n\t/**\n\t * Set the slide index\n\t * @param {number|null} index\n\t */\n\tsetSlideIndex(index) {\n\t\tthis._slideIndex = index;\n\t}\n\n\t/**\n\t * Adds correct selection classes to the labels so they're highlighted correctly.\n\t * Also triggers the trail hover\n\t */\n\tsetAsteroidSelection() {\n\t\tconst labelManager = this._app.getManager('label');\n\t\tconst asteroidName = this._nextFiveData[this._slideIndex]?.pioneerName ?? false;\n\n\t\t// Set focused label weights\n\t\tthis._setLabelWeights(asteroidName);\n\n\t\t// First remove all selections.\n\t\tlabelManager.removeClassFromLabels('selected', this._nextFiveNames);\n\n\t\t// Select the selected.\n\t\tconst selected = this._nextFiveNames.find(name => name === asteroidName);\n\t\tselected && labelManager.addClassToLabels('selected', [selected]);\n\n\t\t// Set all trails to unhighlight except asteroidName\n\t\tfor (const name of this._nextFiveNames) {\n\t\t\tlabelManager.triggerCallbacks('hoverchange', [name, name === asteroidName]);\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the next <amount> of NEOs to pass earth according to their close approach time\n\t * @param {Array<NEO>} allNEOs\n\t * @param {number} amount\n\t * @returns {Array<NEO>}\n\t */\n\t_calculateNextNEOs(allNEOs, amount = 5) {\n\t\tconst maxDistance = 7479893.535; // 0.05 AUs in km\n\t\tconst nextFive = [];\n\t\tconst nearestDiffs = [];\n\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tfor (const [_, value] of allNEOs.entries()) {\n\t\t\t// Make sure its in the future\n\t\t\tconst inTheFuture = value.nextClosestApproachTime > this._currentTime;\n\t\t\t// Make sure it's closer than the maxDistance\n\t\t\tconst withinDistance = value.nextClosestApproachDistance < maxDistance;\n\n\t\t\tif (withinDistance && inTheFuture) {\n\t\t\t\tconst diff = value.nextClosestApproachTime - this._currentTime;\n\t\t\t\t// Push to nextFive array if it's not yet filled.\n\t\t\t\tif (nearestDiffs.length < amount) {\n\t\t\t\t\tnearestDiffs.push(diff);\n\t\t\t\t\tnextFive.push(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Check if the diff is smaller than the largest diff in the array. If so, replace it.\n\t\t\t\t\tconst largestDiff = Math.max(...nearestDiffs);\n\t\t\t\t\tif (diff < largestDiff) {\n\t\t\t\t\t\tconst replaceIndex = nearestDiffs.indexOf(largestDiff);\n\t\t\t\t\t\tnearestDiffs[replaceIndex] = diff;\n\t\t\t\t\t\tnextFive[replaceIndex] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn nextFive.sort((a, b) => (a.nextClosestApproachTime >= b.nextClosestApproachTime) ? 1 : -1);\n\t}\n\n\t/**\n\t * Creates the next five entities\n\t * @returns {Promise}\n\t */\n\t_createEntities() {\n\t\tif (this._nextFiveEntities) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst sceneManager = this._app.getManager('scene');\n\t\tconst neosManager = this._app.getManager('neos');\n\t\tconst labelManager = this._app.getManager('label');\n\t\tconst contentManager = this._app.getManager('content');\n\t\tconst trailManager = this._app.getManager('trail');\n\n\t\t// Create the next five entities.\n\t\tthis._nextFiveEntities = this._nextFiveData.map(neo => neosManager.createTempNEO(neo, sceneManager.main, false));\n\n\t\t// Store the name vars.\n\t\tthis._nextFiveNames = this._nextFiveData.map(neo => neo.pioneerName);\n\t\tthis._focusEntityNames = ['earth', 'moon', ...this._nextFiveNames];\n\n\t\tconst handleMouseLeave = (e, entityName) => {\n\t\t\t// Determine if were hovering on a selected asteroids watch asteroid.\n\t\t\tif (e.target?.classList?.contains('selected') && e.target?.classList?.contains('asteroid-watch-label')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlabelManager.triggerCallbacks('hoverchange', [entityName, false]);\n\t\t};\n\n\t\t//  Set the label properties\n\t\tlabelManager.setLabelProps({\n\t\t\tgetLabelClass: entityName => `no-select asteroid-watch-label ${contentManager.getClassName(entityName) ?? ''}`,\n\t\t\tgetIconClass: () => 'asteroid-watch-icon',\n\t\t\tgetTextClass: () => 'asteroid-watch-text',\n\t\t\thandleClick: (_, entityName) => {\n\t\t\t\tthis.updateURL(entityName);\n\t\t\t},\n\t\t\thandleTouch: (_, entityName) => {\n\t\t\t\tif (!this.app.isDragging() && !this.app.isTouchMax()) {\n\t\t\t\t\tthis.updateURL(entityName);\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleMouseLeave\n\t\t}, this._nextFiveNames);\n\n\t\t// Set the trail colors.\n\t\tconst trailColorArray = this._app._colors?.neos;\n\t\ttrailColorArray && trailManager.setColor(this._nextFiveNames, new Color(...trailColorArray, 0.35));\n\n\t\t// Expect all entity loaded promises to eventually be resolved.\n\t\treturn Promise.all(this._nextFiveEntities.map(neoEntity => neoEntity.getLoadedPromise()));\n\t}\n\n\t/**\n\t * Determines the max and min time limits depending on the close approach times of the next five\n\t * @returns {Interval}\n\t */\n\t_calculateTimeLimits() {\n\t\t// Padding is 99 days (in seconds) - to stop the day countdown getting to 3 figures.\n\t\tconst padding = 86400 * 99;\n\n\t\tconst timeManager = this.app.getManager('time');\n\t\tconst now = timeManager.getNow();\n\t\tconst todayEtTime = timeManager.momentToET(now);\n\t\tconst { nextClosestApproachTime: lastApproachTime } = this._nextFiveData[this._nextFiveData.length - 1];\n\n\t\t// Get the largest remaining time in ET seconds.\n\t\tconst largestRemainingTime = lastApproachTime - todayEtTime;\n\t\tconst maxPadding = padding - largestRemainingTime;\n\n\t\tconst minET = lastApproachTime - maxPadding;\n\t\tconst maxET = lastApproachTime + maxPadding;\n\n\t\treturn new Interval(minET, maxET);\n\t}\n\n\t/**\n\t * Restrict the earth controller coverage to time limits.\n\t */\n\trestrictEarthCoverage() {\n\t\tconst earthController = this._app.scene.getEntity('earth')?.getControllerByType('dynamo');\n\n\t\tif (!earthController) {\n\t\t\tconsole.warn('Could not find Earth dynamo.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Store previous coverage.\n\t\tthis._dynamoCoverage = new Interval();\n\t\tthis._dynamoCoverage.copy(earthController.getCoverage());\n\n\t\t// Set to time restriction.\n\t\tearthController.setCoverage(this._calculateTimeLimits());\n\t}\n\n\t/**\n\t * Reset earth coverage to defaults.\n\t */\n\trestoreEarthCoverage() {\n\t\tconst earthController = this._app.scene.getEntity('earth')?.getControllerByType('dynamo');\n\n\t\tif (!earthController) {\n\t\t\tconsole.warn('Could not find Earth dynamo.');\n\t\t\treturn;\n\t\t}\n\n\t\tearthController.setCoverage(this._dynamoCoverage);\n\t}\n\n\t/**\n\t * Dim the background labels by adding class\n\t * @param {boolean} value\n\t */\n\tdimBackgroundLabels(value) {\n\t\tconst labelManager = this._app.getManager('label');\n\t\tconst dimClass = 'watch-dim';\n\n\t\tconst backgroundLabels = Object.keys(labelManager._labels).filter(labelName => !this._focusEntityNames?.includes(labelName));\n\n\t\tif (value) {\n\t\t\tlabelManager.addClassToLabels(dimClass, backgroundLabels);\n\t\t}\n\t\telse {\n\t\t\tlabelManager.removeClassFromLabels(dimClass, backgroundLabels);\n\t\t}\n\t}\n\n\t/**\n\t * set the default trail width for background planets\n\t * @param {number} value\n\t */\n\tsetBgTrailWidthDefault(value = this._defaultPlanetTrailWidth) {\n\t\tfor (const planetId of this._backgroundPlanets) {\n\t\t\tconst entity = this.app.scene.get(planetId);\n\n\t\t\tif (entity?.trailHover?.width?.default) {\n\t\t\t\tentity.trailHover.width.default = [value, value];\n\t\t\t}\n\t\t}\n\n\t\tif (value === this._defaultPlanetTrailWidth) {\n\t\t\t// We're reseting to default.\n\t\t\t// Todo: put in some sort of onleave smoother camera transition function?\n\t\t\tconst trailManager = this._app.getManager('trail');\n\t\t\ttrailManager.setMultipleWidths(this._backgroundPlanets, value, value);\n\t\t}\n\t}\n\n\t/**\n\t * Get the neo name by index number\n\t * @param {number} index\n\t * @returns {string}\n\t */\n\tgetNeoNameByIndex(index) {\n\t\treturn this._nextFiveData?.[index]?.pioneerName;\n\t}\n\n\t/**\n\t * Navigates to correct URL\n\t * @param {string} neoName\n\t * @param {boolean} removeQuery\n\t */\n\tupdateURL(neoName, removeQuery = false) {\n\t\tconst routeManager = this._app.getManager('router');\n\t\tconst options = { ...removeQuery && { __remove: 'all', keepTime: false } };\n\n\t\trouteManager.navigate({}, `/watch/${neoName}`, options);\n\t}\n\n\t/**\n\t * Handle the menu item click.\n\t * Determine which URL to go to depending on whether we've already set the data\n\t */\n\tonWatchClick() {\n\t\t// Do not update if we are currently transitioning\n\t\tconst transitioning = this._app.getManager('camera')?._isTransitioning;\n\n\t\tif (transitioning) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we're already in the watch view, we can go live back to the main /watch overview\n\t\tconst inWatchView = this._app.getManager('router').currentView === 'watch';\n\n\t\tif (this._nextFiveData && !inWatchView) {\n\t\t\tconst index = this.slideIndex === null ? 0 : this.slideIndex;\n\t\t\tconst removeQuery = true;\n\t\t\tthis.setSlideUrlByIndex(index, removeQuery);\n\t\t}\n\t\telse {\n\t\t\tthis._app.getManager('router').navigate({}, 'watch', { __remove: 'all', keepTime: false });\n\t\t}\n\t}\n\n\t/**\n\t * Goes to the slide at index zero\n\t * @param {number} index\n\t * @param {boolean} removeQuery\n\t * @returns {string}\n\t */\n\tsetSlideUrlByIndex(index, removeQuery = false) {\n\t\t// Get the neoName from index zero\n\t\tconst neoName = this.getNeoNameByIndex(index);\n\t\t// Update URL with passed replaceState bool\n\t\tthis.updateURL(neoName, removeQuery);\n\n\t\treturn neoName;\n\t}\n\n\t/**\n\t * Set references to null (except data ones) and remove label weights.\n\t */\n\tremoveReferences() {\n\t\tthis._app.getManager('label')?.removeWeights(this._labelWeights);\n\t\tthis._labelWeights = null;\n\n\t\tthis.setSlideIndex(null);\n\t\tthis._nextFiveEntities = null;\n\t}\n\n\t/**\n\t * Getters and setters\n\t */\n\n\t/**\n\t * Set boolean value for hasRedirected\n\t * @param {boolean} value\n\t */\n\tsetHasRedirected(value) {\n\t\tthis._hasRedirected = value;\n\t}\n\n\t/**\n\t * gets bool value for hasRedirected\n\t * @returns {boolean}\n\t */\n\tget hasRedirected() {\n\t\treturn this._hasRedirected;\n\t}\n\n\t/**\n\t * Returns the default planet trail width.\n\t * @returns {number}\n\t */\n\tget defaultPlanetTrailWidth() {\n\t\treturn this._defaultPlanetTrailWidth;\n\t}\n\n\t/**\n\t * Get background planets\n\t * @returns {Array<string>}\n\t */\n\tget backgroundPlanets() {\n\t\treturn this._backgroundPlanets;\n\t}\n\n\t/**\n\t * Get the current slide.\n\t * @returns {number|null}\n\t */\n\tget slideIndex() {\n\t\treturn this._slideIndex;\n\t}\n\n\t/**\n\t * return the next five data property\n\t * @returns {Array<NEO>}\n\t */\n\tget nextFiveData() {\n\t\treturn this._nextFiveData;\n\t}\n\n\t/**\n\t * return the next five entities property\n\t * @returns {Array<Entity>}\n\t */\n\tget nextFiveEntities() {\n\t\treturn this._nextFiveEntities;\n\t}\n\n\t/**\n\t *\tTriggers all watchers to switch their units\n\t * @param {string} unitType\n\t */\n\ttoggleUnit(unitType) {\n\t\tunitType = unitType || this._unitType === 'metric' ? 'imperial' : 'metric';\n\t\tif (['metric', 'imperial'].includes(unitType)) {\n\t\t\tif (this._unitType !== unitType) {\n\t\t\t\tthis._unitType = unitType;\n\t\t\t\tthis.triggerCallbacks('toggleUnit', [unitType]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the current unitType.\n\t * @returns {number|null}\n\t */\n\tget unitType() {\n\t\treturn this._unitType;\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport { Entity } from 'pioneer-scripts';\n\n/** Information on an NEO. */\nexport class NEO {\n\t/** The constructor. */\n\tconstructor() {\n\t\t/**\n\t\t * The full name.\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = '';\n\n\t\t/**\n\t\t * The name within Pioneer.\n\t\t * @type {string}\n\t\t */\n\t\tthis.pioneerName = '';\n\n\t\t/**\n\t\t * 3 character orbit class 'ATI', 'ATE', 'AMO', 'APO'.\n\t\t * @type {string}\n\t\t */\n\t\tthis.orbitClass = '';\n\n\t\t/**\n\t\t * Whether or not it is an asteroid.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.asteroid = false;\n\n\t\t/**\n\t\t * Whether or not it is a comet.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.comet = false;\n\n\t\t/**\n\t\t * Whether or not it is a dwarf planet.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.dwarfPlanet = false;\n\n\t\t/**\n\t\t * Whether or not it is an NEO.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.neo = false;\n\n\t\t/**\n\t\t * Whether or not it is a PHO.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.pho = false;\n\n\t\t/**\n\t\t * Whether or not it has multiple orbital elements and has dynamo associated with it.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.hasSPK = false;\n\n\t\t/**\n\t\t * The absolute magnitude.\n\t\t * @type {number}\n\t\t */\n\t\tthis.absoluteMagnitude = 0;\n\n\t\t/**\n\t\t * The diameter.\n\t\t * @type {number}\n\t\t */\n\t\tthis.diameter = 0;\n\n\t\t/**\n\t\t * Whether or not the diameter has been estimated, since the data may not be available.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.diameterEstimated = false;\n\n\t\t/**\n\t\t * The MOID relative to earth.\n\t\t * @type {number}\n\t\t */\n\t\tthis.moid = 0;\n\n\t\t/**\n\t\t * The spin rate in rad/sec.\n\t\t * @type {number}\n\t\t */\n\t\tthis.spinRate = 0;\n\n\t\t/**\n\t\t * Whether or not the spin rate has been estimated, since the data may not be available.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.spinRateEstimated = false;\n\n\t\t/**\n\t\t * The spin axis in the J2000 frame.\n\t\t * @type {Pioneer.Vector3}\n\t\t */\n\t\tthis.spinAxis = new Pioneer.Vector3();\n\n\t\t/**\n\t\t * Whether or not the spin axis has been estimated, since the data may not be available.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.spinAxisEstimated = false;\n\n\t\t/**\n\t\t * The next closest approach time in ephemeris time.\n\t\t * @type {number}\n\t\t */\n\t\tthis.nextClosestApproachTime = 0;\n\n\t\t/**\n\t\t * The next cosest approach distance in km.\n\t\t * @type {number}\n\t\t */\n\t\tthis.nextClosestApproachDistance = 0;\n\n\t\t/**\n\t\t * The orbital elements.\n\t\t * @type {Pioneer.OrbitalElements}\n\t\t */\n\t\tthis.orbitalElements = new Pioneer.OrbitalElements();\n\t}\n}\n\n/** A class that helps with working with NEOs. */\nexport class NEOUtils {\n\t/**\n\t * Loads the NEOs. Returns a promise that resolves with a mapping from an NEO Pioneer name to information about that NEO.\n\t * @param {Pioneer.Engine} pioneer\n\t * @returns {Promise<Map<string, NEO>>}\n\t */\n\tstatic async loadNEOs(pioneer) {\n\t\t/** @type {Map<string, NEO>} */\n\t\tconst neos = new Map();\n\n\t\t// There are 10 files, so load all of them in parallel.\n\t\tconst loadPromises = [];\n\t\tconst urls = [];\n\t\tfor (let n = 0; n < 10; n++) {\n\t\t\turls.push(`neos.${n}.v1.dat`);\n\t\t}\n\t\turls.push('dwarf_planets.v1.dat');\n\t\turls.push('custom.v1.dat');\n\t\tfor (const url of urls) {\n\t\t\tloadPromises.push(pioneer.getDownloader().download(`$DYNAMIC_ASSETS_URL/ssd/${url}`, true).then(async (download) => {\n\t\t\t\tif (download.status === 'cancelled') {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t\telse if (download.status === 'failed') {\n\t\t\t\t\treturn Promise.reject(new Error('Failed to load asteroid file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t\t}\n\t\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\t\treturn Promise.reject(new Error('Failed to load asteroid file \"' + download.url + '\": Not a binary file.'));\n\t\t\t\t}\n\t\t\t\tconst reader = new Pioneer.Reader(download.content);\n\t\t\t\tconst version = reader.readUInt16();\n\t\t\t\tif (version !== 1) {\n\t\t\t\t\tthrow new Error('Invalid version.');\n\t\t\t\t}\n\n\t\t\t\t// For each NEO in the file, read the data, populating the neo variable.\n\t\t\t\tconst numNEOs = reader.readUInt32();\n\t\t\t\tfor (let i = 0; i < numNEOs; i++) {\n\t\t\t\t\t// The neo object to populate.\n\t\t\t\t\tconst neo = new NEO();\n\n\t\t\t\t\t// Read the name and class info.\n\t\t\t\t\tneo.name = reader.readString();\n\t\t\t\t\tneo.orbitClass = reader.readString(3);\n\t\t\t\t\tconst flags = reader.readUInt8();\n\t\t\t\t\tneo.asteroid = ((flags & 0xc0) >> 6) === 0;\n\t\t\t\t\tneo.comet = ((flags & 0xc0) >> 6) === 1;\n\t\t\t\t\tneo.dwarfPlanet = ((flags & 0xc0) >> 6) === 2;\n\t\t\t\t\tneo.neo = ((flags & 0x20) >> 5) === 1;\n\t\t\t\t\tneo.pho = ((flags & 0x10) >> 4) === 1;\n\t\t\t\t\tneo.hasSPK = ((flags & 0x08) >> 3) === 1;\n\t\t\t\t\tneo.diameterEstimated = ((flags & 0x01) >> 0) === 1;\n\n\t\t\t\t\t// Read the absolute magnitude and diameter.\n\t\t\t\t\tneo.absoluteMagnitude = reader.readFloat32();\n\t\t\t\t\tneo.diameter = reader.readFloat32();\n\t\t\t\t\tif (Number.isNaN(neo.diameter)) {\n\t\t\t\t\t\tneo.diameter = 0.652999997138977; // The median asteroid size.\n\t\t\t\t\t}\n\n\t\t\t\t\t// If an NEO, read the moid and next closest approach info.\n\t\t\t\t\tif (neo.neo) {\n\t\t\t\t\t\tneo.moid = reader.readFloat32();\n\t\t\t\t\t\tneo.nextClosestApproachTime = reader.readFloat32();\n\t\t\t\t\t\tneo.nextClosestApproachDistance = reader.readFloat32();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Read the orbital elements.\n\t\t\t\t\tneo.orbitalElements.epoch = reader.readFloat32();\n\t\t\t\t\tneo.orbitalElements.eccentricity = reader.readFloat32();\n\t\t\t\t\tneo.orbitalElements.semiMajorAxis = reader.readFloat32();\n\t\t\t\t\tneo.orbitalElements.meanAngularMotion = reader.readFloat32();\n\t\t\t\t\tneo.orbitalElements.meanAnomalyAtEpoch = reader.readFloat32();\n\t\t\t\t\tneo.orbitalElements.orbitOrientation.set(reader.readFloat32(), reader.readFloat32(), reader.readFloat32(), reader.readFloat32());\n\n\t\t\t\t\t// Read the spin info.\n\t\t\t\t\tconst hasSpinRate = (flags & 0x04) >> 2;\n\t\t\t\t\tconst hasSpinAxis = (flags & 0x02) >> 1;\n\t\t\t\t\tif (hasSpinRate) {\n\t\t\t\t\t\tneo.spinRate = reader.readFloat32();\n\t\t\t\t\t\tneo.spinRateEstimated = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tneo.spinRate = 0.0075092; // Average spin rate of all NEOs as of 2021-06-24\n\t\t\t\t\t\tneo.spinRateEstimated = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (hasSpinAxis) {\n\t\t\t\t\t\tneo.spinAxis.set(reader.readFloat32(), reader.readFloat32(), reader.readFloat32());\n\t\t\t\t\t\tneo.spinAxisEstimated = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tneo.spinAxis.set(0, 0, 1); // Just setting it to the 'north' pole.\n\t\t\t\t\t\tneo.spinAxisEstimated = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the pioneer entity name from the full name.\n\t\t\t\t\tneo.pioneerName = neo.name.replace(/[- /]/g, '_');\n\t\t\t\t\tneo.pioneerName = neo.pioneerName.replace(/[^a-zA-Z0-9_]/g, '');\n\t\t\t\t\tneo.pioneerName = neo.pioneerName.toLowerCase();\n\n\t\t\t\t\t// Add the neo to the neos list.\n\t\t\t\t\tneos.set(neo.pioneerName, neo);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\t// Wait till all of the downloads are complete.\n\t\tawait Promise.all(loadPromises);\n\n\t\t// Add Dimorphos manually.\n\t\tneos.set('dimorphos', {\n\t\t\t...neos.get('65803_didymos'),\n\t\t\tname: 'Dimorphos',\n\t\t\tpioneerName: 'dimorphos',\n\t\t\tdiameter: 0.170\n\t\t});\n\n\t\t// Return the populated NEOs object.\n\t\treturn neos;\n\t}\n\n\t/**\n\t * Gets the Pioneer names of the next n closest approaches within 0.05 AU.\n\t * @param {Map<string, NEO>} neos\n\t * @param {number} n\n\t * @returns {string[]}\n\t */\n\tstatic getNextClosestApproaches(neos, n) {\n\t\t// The array we'll use to keep track of the next n closest approaches.\n\t\tconst nextClosestApproachNEOs = /** @type {NEO[]} */([]);\n\n\t\t// Go through each neo.\n\t\tconst now = Pioneer.TimeUtils.now();\n\t\tfor (const entry of neos) {\n\t\t\tconst neo = entry[1];\n\n\t\t\t// If the next closest approach is less than the last in the list, insert it into the list at the right spot (sorted),\n\t\t\t//   popping off the last one if we have too many.\n\t\t\tif (neo.nextClosestApproachDistance < 7479893.535 // 0.05 AU\n\t\t\t\t&& (nextClosestApproachNEOs.length === 0 || neo.nextClosestApproachTime < nextClosestApproachNEOs.at(-1).nextClosestApproachTime)\n\t\t\t\t&& neo.nextClosestApproachTime >= now) {\n\t\t\t\tconst indexToInsert = Pioneer.Sort.getIndex(neo.nextClosestApproachTime, nextClosestApproachNEOs, (neo, time) => neo.nextClosestApproachTime < time);\n\t\t\t\tnextClosestApproachNEOs.splice(indexToInsert, 0, neo);\n\t\t\t\tif (nextClosestApproachNEOs.length > n) {\n\t\t\t\t\tnextClosestApproachNEOs.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Return just the Pioneer names.\n\t\treturn nextClosestApproachNEOs.map(neo => neo.pioneerName);\n\t}\n\n\t/**\n\t * Creates an NEO entity.\n\t * @param {NEO} neo\n\t * @param {Pioneer.Scene} scene\n\t * @returns {Pioneer.Entity}\n\t */\n\tstatic createEntity(neo, scene) {\n\t\tlet entity = /** @type {Pioneer.Entity} */(null);\n\n\t\t// If Pioneer already has the entity, just use it.\n\t\tif (Entity.getEntityOptions(neo.pioneerName) !== undefined) {\n\t\t\tentity = Entity.create(neo.pioneerName, scene);\n\t\t}\n\t\telse { // Pioneer doesn't have the entity, so create a custom one.\n\t\t\t// Create the entity options.\n\t\t\t/** @type {import('../../pioneer/scripts/types/entity').Options } */\n\t\t\tconst options = {\n\t\t\t\tradius: neo.diameter / 2,\n\t\t\t\tlabel: neo.name,\n\t\t\t\tparents: [[Number.NEGATIVE_INFINITY, 'sun']],\n\t\t\t\ttrail: {\n\t\t\t\t\tlength: 31536000 / 2\n\t\t\t\t},\n\t\t\t\tmodel: {\n\t\t\t\t\turl: '$STATIC_ASSETS_URL/models/generic/' + asteroidUrls[Math.floor(Math.random() * 3)],\n\t\t\t\t\tscale: [neo.diameter / 2, neo.diameter / 2, neo.diameter / 2]\n\t\t\t\t},\n\t\t\t\tcontrollers: [{\n\t\t\t\t\ttype: 'fixed',\n\t\t\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t\t\t}, {\n\t\t\t\t\ttype: 'spin',\n\t\t\t\t\taxis: neo.spinAxis,\n\t\t\t\t\tperiodInHours: Math.PI / neo.spinRate / 3600,\n\t\t\t\t\trelativeToTime: 0\n\t\t\t\t}, {\n\t\t\t\t\ttype: 'custom',\n\t\t\t\t\tfunc: (entity) => {\n\t\t\t\t\t\t// Create Orbital elements controller\n\t\t\t\t\t\tconst controller = /** @type {Pioneer.OrbitalElementsController} */(entity.addController('orbitalElements'));\n\t\t\t\t\t\tcontroller.addOrbitalElements(-3155716758.816, neo.orbitalElements);\n\t\t\t\t\t\tif (neo.nextClosestApproachDistance !== 0 || isNaN(neo.nextClosestApproachTime)) {\n\t\t\t\t\t\t\tcontroller.addOrbitalElements(3155716758.816, neo.orbitalElements);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcontroller.addOrbitalElements(neo.nextClosestApproachTime, neo.orbitalElements);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn controller;\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t};\n\n\t\t\t// Add the earth dynamo if it's available.\n\t\t\tif (neo.hasSPK) {\n\t\t\t\toptions.controllers.push({\n\t\t\t\t\ttype: 'dynamo',\n\t\t\t\t\turl: `ssd/${neo.pioneerName}/earth/orb/`\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Create the entity.\n\t\t\tentity = Entity.createFromOptions(neo.pioneerName, options, scene);\n\n\t\t\t// If the earth dynamo was loaded, we need to wait until it is loaded,\n\t\t\t// then use its coverage to fix the parenting entries and orbital elements coverage, in case of impact.\n\t\t\tif (neo.hasSPK) {\n\t\t\t\tconst dynamoController = entity.getControllerByClass(Pioneer.DynamoController);\n\t\t\t\tdynamoController.getLoadedPromise().then(() => {\n\t\t\t\t\tentity.addParentingTableEntry(dynamoController.getCoverage().min, 'earth');\n\t\t\t\t\tentity.addParentingTableEntry(dynamoController.getCoverage().max, neo.nextClosestApproachDistance !== 0 ? 'sun' : '');\n\t\t\t\t\tif (neo.nextClosestApproachDistance === 0) {\n\t\t\t\t\t\tconst oeController = entity.getControllerByClass(Pioneer.OrbitalElementsController);\n\t\t\t\t\t\toeController.removeOrbitalElements(1);\n\t\t\t\t\t\toeController.addOrbitalElements(dynamoController.getCoverage().max, neo.orbitalElements);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn entity;\n\t}\n}\n\nconst asteroidUrls = [\n\t'asteroid_1/generic_asteroid_1.gltf',\n\t'asteroid_2/generic_asteroid_2.gltf',\n\t'asteroid_3/generic_asteroid_3.gltf'\n];\n","import {\n\tTypes\n} from 'eyes';\nimport {\n\t// Managers\n\tSelectionManager,\n\tLabelManager,\n\tTrailManager,\n\n\t// Components\n\tAsteroidsSettings,\n\tAsteroidMenuTop,\n\tAsteroidMenuBottom,\n\tAsteroidModals,\n\tAsteroidPanel,\n\tBreadcrumb,\n\tDefinitionOverlay,\n\tFollowingPanel,\n\tHomeButton,\n\tMissionPanel,\n\tSplashScreen,\n\tTimeSlider,\n\tWatchPanel,\n\tSearch\n} from './internal';\n\nTypes.set('SelectionManager', SelectionManager);\nTypes.set('LabelManager', LabelManager);\nTypes.set('TrailManager', TrailManager);\n\nTypes.set('AsteroidsSettings', AsteroidsSettings);\nTypes.set('AsteroidMenuTop', AsteroidMenuTop);\nTypes.set('AsteroidMenuBottom', AsteroidMenuBottom);\nTypes.set('AsteroidModals', AsteroidModals);\nTypes.set('AsteroidMenuTop', AsteroidMenuTop);\nTypes.set('AsteroidMenuBottom', AsteroidMenuBottom);\nTypes.set('AsteroidPanel', AsteroidPanel);\nTypes.set('Breadcrumb', Breadcrumb);\nTypes.set('DefinitionOverlay', DefinitionOverlay);\nTypes.set('FollowingPanel', FollowingPanel);\nTypes.set('HomeButton', HomeButton);\nTypes.set('MissionPanel', MissionPanel);\nTypes.set('SplashScreen', SplashScreen);\nTypes.set('TimeSlider', TimeSlider);\nTypes.set('WatchPanel', WatchPanel);\nTypes.set('Search', Search);\n\nexport { Types };\n","import BaseView from './base_view';\nimport * as PioneerScripts from 'pioneer-scripts';\n\n/**\n *\n */\nexport class AsteroidView extends BaseView {\n\t/**\n\t * Constructor.\n\t * @param {...*} args - Arguments for BaseView\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\t// Make sure we have neo data for this object.\n\t\tthis._rules.spaceObject = {\n\t\t\tvalue: name => Boolean(this._app.neos.get(name)?.pioneerName)\n\t\t};\n\n\t\t// Hold a reference to the asteroid panel.\n\t\tthis._asteroidPanel = null;\n\n\t\t// Specific target variables.\n\t\tthis._target = null;\n\t\tthis._neoData = null;\n\t\tthis._heroData = null;\n\t\tthis._entityInfo = null;\n\n\t\tthis.filtersManager = null;\n\t}\n\n\t/** @inheritdoc */\n\tasync onEnter(params) {\n\t\t// Add components to be excluded on UI show/hide.\n\t\tthis.addUIexcludedComponents([\n\t\t\t'asteroid_modals',\n\t\t\t'definitionOverlay',\n\t\t\t'clock',\n\t\t\t'clockShortcut',\n\t\t\t'asteroid_menu_bottom'\n\t\t]);\n\n\t\tthis.filtersManager = this._app.getManager('filters');\n\n\t\t// Assign asteroidPanel prop if it isnt yet\n\t\tthis._asteroidPanel ??= this._app.getComponent('asteroidPanel');\n\n\t\tawait super.onEnter(params);\n\n\t\t// We need to remove some direct style properties that are set in the pioneer engine.\n\t\tthis._mainViewportEl.style.top = '';\n\t\tthis._mainViewportEl.style.left = '';\n\t}\n\n\t/** @inheritdoc */\n\tonLeave(params) {\n\t\t// Restore own particle\n\t\tthis._app.removeParticleMatchFunction('asteroid_view', true);\n\n\t\tif (params && params.cancelToken && params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure panel collapses and hides.\n\t\tthis._asteroidPanel.hide();\n\n\t\t// We need to re-add some direct style properties that are set in the pioneer engine.\n\t\tthis._mainViewportEl.style.top = '0px';\n\t\tthis._mainViewportEl.style.left = '0px';\n\n\t\tsuper.onLeave(params);\n\t}\n\n\t/** @inheritdoc */\n\t_reset(params) {\n\t\tsuper._reset(params);\n\t\tthis._target = null;\n\t\tthis._neoData = null;\n\t\tthis._heroData = null;\n\t\tthis._entityInfo = null;\n\t}\n\n\t/** @inheritdoc */\n\tregisterCallbacks() {\n\t\tsuper.registerCallbacks();\n\t\t// Register expand toggle callback\n\t\tthis._asteroidPanel.registerCallback('expandtoggle', this._onExpandToggle);\n\t}\n\n\t/** @inheritdoc */\n\tremoveCallbacks() {\n\t\tsuper.removeCallbacks();\n\t\t// Remove expand toggle callback\n\t\tthis._asteroidPanel.removeCallback('expandtoggle', this._onExpandToggle);\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateResources({ spaceObject }) {\n\t\tconst contentManager = this._app.getManager('content');\n\n\t\t// Update entity name and entity info\n\t\tthis._target = spaceObject;\n\t\tthis._neoData = this._allNEOs.get(this._target);\n\t\tthis._heroData = this._allHeroes[this._neoData.pioneerName];\n\t\tthis._entityInfo = contentManager.getEntityInfo(this._target);\n\n\t\tlet targetEntity = this._app.scene.getEntity(this._target);\n\n\t\t// Create NEO entity if needed\n\t\tif (!targetEntity) {\n\t\t\ttargetEntity = this._app.getManager('neos').createTempNEO(this._neoData);\n\t\t}\n\t\t// In case we're searching for an object that has been filtered out of the scene\n\t\telse if (!targetEntity._enabled) {\n\t\t\tconst entry = this._app.getManager('search').getEntry(this._target);\n\t\t\tif (entry.neo) {\n\t\t\t\tthis.filtersManager.setFilterToReveal(entry.neo, true);\n\t\t\t}\n\t\t}\n\n\t\t// Get the time to start as the current time clamped between the entity's\n\t\t// position coverage min and max - 3600. Also set the eventInfo start so that\n\t\t// the BaseView starts it at that time.\n\t\tconst currentTime = this.app.pioneer.getTime();\n\t\tlet startTime = currentTime;\n\t\tif (currentTime < targetEntity.getPositionCoverage().min) {\n\t\t\tstartTime = targetEntity.getPositionCoverage().min;\n\t\t}\n\t\telse if (currentTime >= targetEntity.getPositionCoverage().max - 3600) {\n\t\t\tstartTime = targetEntity.getPositionCoverage().max - 3600;\n\t\t}\n\t\tconst startDateTime = new PioneerScripts.DateTime();\n\t\tstartDateTime.fromET(startTime);\n\t\tthis.app.pioneer.setTime(currentTime);\n\n\t\t// Set eventInfo start only if asteroid has a close approach day in the past we want to go to\n\t\tconst { nextClosestApproachTime } = this._neoData;\n\n\t\tif (nextClosestApproachTime != 0 && nextClosestApproachTime < currentTime) {\n\t\t\tthis._eventInfo = { start: startDateTime.toString() + 'Z' };\n\t\t} else {\n\t\t\tthis._eventInfo = { start: null };\n\t\t}\n\n\t\t// Make sure target NEO is loaded\n\t\tawait targetEntity.getLoadedPromise();\n\t\tawait this._app.pioneer.waitUntilNextFrame();\n\n\t\t// Remove own particle\n\t\tthis._app.addParticleMatchFunction((neo) => neo.pioneerName !== this._target, 'asteroid_view', true);\n\n\t\t// Set new target for layer manager\n\t\tthis._app.getManager('layer').setTarget(this._target);\n\t\tthis._app.getManager('selection').selectEntity(this._target);\n\n\t\tcontentManager.resetContext();\n\n\t\t// Only try to load description is there is entityInfo (ie. not for potato NEOs)\n\t\tthis._entityInfo && await contentManager.loadDescriptions([this._target]);\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponents(params) {\n\t\t// Populate the panel.\n\t\tthis._asteroidPanel.populate(this._neoData, this._heroData);\n\n\t\tsuper._updateComponents(params);\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponentsVisibility(params) {\n\t\tawait super._updateComponentsVisibility(params);\n\n\t\t// Update time slider position.\n\t\tthis._updateTimeSliderPosition();\n\n\t\t// Show and expand the panel if the UI is visible. (expandOnShow is set to true in the asteroidPanel)\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tvisibleUI && this._asteroidPanel.show();\n\n\t\t// Hide the bottom menu if it's visible\n\t\tthis._app.getComponent('asteroid_menu_bottom')?.hide();\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateCamera(params) {\n\t\tawait this._app.cameraScripts.goToCelestialObject(this._target);\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tconst isExpanded = this._asteroidPanel?._state.isExpanded;\n\t\tthis._onExpandToggle(isExpanded);\n\t}\n}\n","import {\n\tAppUtils,\n\tBaseApp,\n\tBaseView\n} from 'eyes';\nimport { Entity } from 'pioneer-scripts';\nimport * as Pioneer from 'pioneer';\n\n/**\n * Base view for Asteroids.\n * @extends BaseView\n */\nexport default class ExtendedBaseView extends BaseView {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {HTMLElement} element\n\t * @param {Array} [components=[]] - Components of a view\n\t */\n\tconstructor(app, element, components = []) {\n\t\tsuper(app, element, components);\n\n\t\t// Determines which components are ignore when toggling UI on/off.\n\t\tthis._UIexcludedComponents = null;\n\t\tthis.resetUIexcludedComponents();\n\n\t\tthis._floatMid = null;\n\t\tthis._floatMidBottom = null;\n\n\t\tthis._pioneerParentEl = null;\n\t\tthis._mainViewportEl = null;\n\n\t\tthis._allNEOs = null;\n\t\tthis._allHeroes = null;\n\n\t\tthis._lastTime = null;\n\n\t\t// Set redirect rule\n\t\tthis._rules.redirect = name => {\n\t\t\tconst router = this._app.getManager('router');\n\t\t\t// If not valid, try getting a parsed link\n\t\t\tconst parsedLink = this._app.getManager('link')?.getParsedLink?.(name);\n\t\t\tconst parsedLinkIsValid = parsedLink !== `/${name}`;\n\t\t\tif (parsedLinkIsValid) {\n\t\t\t\trouter.navigate(parsedLink);\n\t\t\t}\n\t\t\telse if (name === 'asteroids') {\n\t\t\t\t// Exception for asteroids.\n\t\t\t\trouter.navigate(router.homeRoute);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Go back and automatically simulate a search\n\t\t\t\tconsole.warn(`No object with name, ${name}.`);\n\t\t\t\trouter.navigate(router._previousRoute?.url || '');\n\t\t\t\tthis._app.getComponent('search').simulate(name);\n\t\t\t}\n\t\t};\n\n\t\tthis.bindFunctions(['_onExpandToggle']);\n\t}\n\n\t/** @inheritdoc */\n\tasync onEnter(params, unsubscribed = []) {\n\t\t// Set a reference to the main-viewport and pioneer parent.\n\t\tthis._mainViewportEl = this._app.pioneer?.getViewport('main-viewport')?.getDiv();\n\t\tthis._pioneerParentEl = document.getElementById('pioneer');\n\n\t\t// Assign the allNEOs and heroes vars.\n\t\tthis._allNEOs ??= this._app.neos;\n\t\tthis._allHeroes ??= this._app.heroes;\n\n\t\tawait super.onEnter(params, unsubscribed);\n\n\t\t/**\n\t\t * When we enter a new view where the previous UI is hidden, we may have new components enabled.\n\t\t * Once the _resetView is called (where the components are enabbled/disabled), we need to call\n\t\t * toggleViewUI again to correctly set the visibility of any newly enabled components.\n\t\t * For instance:\n\t\t * - Hide UI in home view where 'homeButton' component is disabled\n\t\t * - Navigate to asteroid where 'homeButton' is enabled\n\t\t * - Make sure homeButton is re-hidden to maintain the hidden UI state.\n\t\t */\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tthis.toggleViewUI(visibleUI, false);\n\t}\n\n\t/** @inheritdoc */\n\t_showControls() {\n\t\t// Restore clock and time controls\n\t\tthis._app.getComponent('clock').show();\n\t\tthis._app.getComponent('clockShortcut').show();\n\t\tthis._app.getComponent('settings').show();\n\n\t\t// Set element vars if needed.\n\t\tthis._floatMidBottom = this._floatMidBottom || document.getElementById('float-mid-bottom');\n\t\tthis._floatMid = this._floatMid || document.getElementById('float-mid');\n\n\t\tthis._floatMidBottom.classList.remove('hidden');\n\t\tthis._floatMidBottom.classList.add('active');\n\t\tif (AppUtils.isMobileMode()) {\n\t\t\t// Move timeline below\n\t\t\tthis._floatMid.classList.add('low');\n\t\t}\n\t\telse {\n\t\t\t// Restore timeline\n\t\t\tthis._floatMid.classList.remove('hidden');\n\t\t\tthis._floatMid.classList.remove('low');\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\t_hideControls() {\n\t\tif (AppUtils.isMobileMode()) {\n\t\t\tthis._app.getComponent('clock').hide();\n\t\t\tthis._app.getComponent('clockShortcut').hide();\n\t\t\tthis._app.getComponent('settings').hide();\n\n\t\t\t// Set element vars if needed.\n\t\t\tthis._floatMidBottom = this._floatMidBottom || document.getElementById('float-mid-bottom');\n\t\t\tthis._floatMid = this._floatMid || document.getElementById('float-mid');\n\n\t\t\tthis._floatMidBottom.classList.add('hidden');\n\t\t\tthis._floatMidBottom.classList.remove('active');\n\n\t\t\t// Move timeline up\n\t\t\tthis._floatMid.classList.remove('low');\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tasync onQueryChange(params) {\n\t\tsuper.onQueryChange(params);\n\n\t\tthis._callQueryChanges(params);\n\t}\n\n\t/**\n\t * Update components with router parameters.\n\t * @param {object} params\n\t */\n\t_updateComponents(params) {\n\t\t// Update breadcrumb.\n\t\tthis._app.getComponent('breadcrumb')?.onRouteChange({\n\t\t\t...params\n\t\t});\n\n\t\t// Set settings orientation.\n\t\tthis._app.getComponent('settings').setConfig({\n\t\t\torientation: {\n\t\t\t\tsmallLandscape: {\n\t\t\t\t\tori: 'vertical'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._callQueryChanges(params);\n\t}\n\n\t/**\n\t * Store the lastTime\n\t * @override\n\t * @param {object} params\n\t */\n\tasync _updateTime(params) {\n\t\tthis._lastTime = this.app.pioneer.getTime();\n\n\t\tawait super._updateTime(params);\n\t}\n\n\t/**\n\t * Remove loading screen after checkReady is complete.\n\t * @override\n\t * @param {object} params\n\t */\n\tasync _checkReady(params) {\n\t\t// If the current entity doesn't exist at the same time as the target entity, re-parent the camera to a temporary entity to keep it around until\n\t\t// the transition is complete.\n\n\t\tconst { cameraEntity } = this.app.getManager('camera');\n\t\tconst initialEntity = cameraEntity.getParent();\n\t\tconst targetEntity = this.app.scene.get(this._target);\n\n\t\tif (initialEntity && targetEntity) {\n\t\t\tconst time = this.app.pioneer.getTime();\n\t\t\tconst lca = initialEntity.getLowestCommonAncestorAtTime(targetEntity, time);\n\n\t\t\t// If no lowest common ancestor, create temp entity and reparent camera to it.\n\t\t\tif (lca === null) {\n\t\t\t\tconst tempEntityName = `${initialEntity.getName()}_temp`;\n\t\t\t\tconst initialPosCopy = new Pioneer.Vector3();\n\t\t\t\tinitialPosCopy.copy(initialEntity.getPosition());\n\n\t\t\t\tconst tempEntity = Entity.createFromOptions(\n\t\t\t\t\ttempEntityName,\n\t\t\t\t\t{\n\t\t\t\t\t\tradius: initialEntity.getExtentsRadius(),\n\t\t\t\t\t\tparents: [[Number.NEGATIVE_INFINITY, 'sun']]\n\t\t\t\t\t},\n\t\t\t\t\tthis.app.scene\n\t\t\t\t);\n\n\t\t\t\t// Copy position and parent of initial entity.\n\t\t\t\ttempEntity.setPosition(initialPosCopy);\n\t\t\t\tconst tempParentName = initialEntity.getParentAtTime(this._lastTime) ?? 'sun';\n\t\t\t\tconst tempParent = this.app.scene.get(tempParentName);\n\t\t\t\ttempEntity.setParent(tempParent);\n\n\t\t\t\t// Set camera parent to temp entity.\n\t\t\t\tcameraEntity.setParent(tempEntity);\n\n\t\t\t\t// Add it to the scene manager temp entities (will be cleared in 'after')\n\t\t\t\tthis.app.getManager('scene').addTempEntity(tempEntity);\n\t\t\t}\n\t\t}\n\n\t\tawait super._checkReady(params);\n\n\t\tthis.app.endLoadingScreen();\n\t}\n\n\t/**\n\t * Determine which onQueryChanges to call depending on the current and previous query params\n\t * @param {object} params\n\t */\n\t_callQueryChanges(params) {\n\t\t// Determine which queries are, and were previously defined and call onQueryChange accordingly.\n\t\tconst router = this.app.getManager('router');\n\t\tconst prevQueries = router.parseQuery(router.previousRoute.query);\n\n\t\tconst { modal, definition, tutorial, rate } = {\n\t\t\t...params,\n\t\t\t...prevQueries\n\t\t};\n\n\t\t// If we have a modal value, call for menu_top and modals.\n\t\tif (modal) {\n\t\t\tthis.app.getComponent('asteroid_menu_top')?.onQueryChange(params);\n\t\t\tthis.app.getComponent('asteroid_modals')?.onQueryChange(params);\n\t\t}\n\n\t\t// If we have a definition value, call for the definitionOverlay.\n\t\tdefinition && this.app.getComponent('definitionOverlay')?.onQueryChange(params);\n\n\t\t// If we have a tutorial value, call for the tutorialOverlay.\n\t\ttutorial && this.app.getComponent('tutorialOverlay')?.onQueryChange(params);\n\n\t\t// If we have a rate change, call for the time slider.\n\t\trate !== undefined && this.app.getComponent('timeSlider')?.onQueryChange(params);\n\t}\n\n\t/** @inheritdoc */\n\tonLeave(params) {\n\t\t// Always Reset UI excluded components to default.\n\t\tthis.resetUIexcludedComponents();\n\t\tsuper.onLeave(params);\n\t}\n\n\t/** @inheritdoc */\n\t_shouldResetStatus() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Appended component names to UIexcludedComponents array\n\t * @param {Array<string>} componentNames\n\t */\n\taddUIexcludedComponents(componentNames) {\n\t\tthis._UIexcludedComponents.push(...componentNames);\n\t}\n\n\t/**\n\t * Sets the default component names to exclude when toggle UI\n\t */\n\tresetUIexcludedComponents() {\n\t\tthis._UIexcludedComponents = [\n\t\t\t'breadcrumb',\n\t\t\t'settings',\n\t\t\t'loadIcon',\n\t\t\t'layerPanel'\n\t\t];\n\t}\n\n\t/**\n\t * Override toggles UI.\n\t * @param {boolean} showUI\n\t * @param initSwiper\n\t */\n\ttoggleViewUI(showUI = this._app.getManager('layer').getLayer('ui').visible, initSwiper = true) {\n\t\t// Auto hide the layer panel when toggling UI\n\t\tthis._app.getComponent('layerPanel').hide();\n\t\t// Go through all components in the view and show/hide them if not in the _UIexcludedComponents array.\n\t\tthis._components.forEach(componentName => {\n\t\t\t// Return if we need to ignore the component.\n\t\t\tif (this._UIexcludedComponents.includes(componentName)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.app.getManager('router')._alwaysHiddenComponents?.includes(componentName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst component = this._app.getComponent(componentName);\n\t\t\tconst isStory = componentName === 'story';\n\n\t\t\t// Before, we were disabling the component (remove it from the DOM). Now we're just hiding it.\n\t\t\tif (showUI) {\n\t\t\t\tcomponent.setEnabled(true);\n\t\t\t\tcomponent.show(initSwiper);\n\t\t\t\tisStory && component.resize();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcomponent.hide();\n\t\t\t}\n\t\t});\n\n\t\t// This isn't great and should better match how the other components work when showing / hiding.\n\t\tconst extendedControlsDiv = document.getElementById('extended-controls');\n\t\tif (extendedControlsDiv) extendedControlsDiv.style.display = showUI ? 'grid' : 'none';\n\t}\n\n\t/**\n\t * Uses threshold and non-portrait to determine whether we should right offset\n\t * (currently used to determine if time slider and main viewport offset)\n\t * @returns {boolean}\n\t */\n\tget shouldOffsetRight() {\n\t\treturn !AppUtils.isMobilePortrait();\n\t}\n\n\t/**\n\t * What determines if we should offset the viewport up.\n\t * @returns {boolean}\n\t */\n\tget shouldOffsetUp() {\n\t\treturn AppUtils.isMobilePortrait();\n\t}\n\n\t/**\n\t * Handle the expand toggle\n\t * @param {boolean} expanded\n\t * @param {boolean} updateTimeSlider\n\t */\n\t_onExpandToggle(expanded, updateTimeSlider = true) {\n\t\t// Conditionally update time slider position.\n\t\tupdateTimeSlider && this._updateTimeSliderPosition({ expanded });\n\n\t\tconst loadIconEl = this._app.getComponent('loadIcon')?.element;\n\n\t\t// Determine if we should offset the viewport to the right or up.\n\t\tconst offsetRight = this.shouldOffsetRight && expanded;\n\t\tthis._pioneerParentEl?.classList.toggle('offset-right', offsetRight);\n\t\tthis._mainViewportEl?.classList.toggle('offset-right', offsetRight);\n\t\tloadIconEl?.classList.toggle('offset-right', offsetRight);\n\n\t\tconst offsetUp = this.shouldOffsetUp && expanded;\n\t\tthis._pioneerParentEl?.classList.toggle('offset-up', offsetUp);\n\t\tthis._mainViewportEl?.classList.toggle('offset-up', offsetUp);\n\t\tloadIconEl?.classList.toggle('offset-up', offsetUp);\n\n\t\t// Show the settings only if the panel is offset vertically.\n\t\tconst settings = this._app.getComponent('settings');\n\t\tif (offsetUp) {\n\t\t\tsettings?.hide();\n\t\t}\n\t\telse {\n\t\t\tsettings?.show();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the time slider position.\n\t * @param {object} options\n\t */\n\t_updateTimeSliderPosition(options = {}) {\n\t\tthis._app.getComponent('timeSlider')?.toggleExtraClasses(options);\n\t}\n}\n","import BaseView from './base_view';\n\n/**\n *\n */\nexport class FollowingView extends BaseView {\n\t/**\n\t * Constructor.\n\t * @param {...*} args - Arguments for BaseView\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis._rules = {\n\t\t\t...this._rules,\n\t\t\tplanet: {\n\t\t\t\tvalue: name => this._app.getManager('content')?.getEntityInfo(name)?.category === 'Planet'\n\t\t\t},\n\t\t\tmoon: {\n\t\t\t\tvalue: name => this._app.getManager('content')?.getEntityInfo(name)?.id === 'moon'\n\t\t\t},\n\t\t\tsun: {\n\t\t\t\tvalue: name => this._app.getManager('content')?.getEntityInfo(name)?.id === 'sun'\n\t\t\t}\n\n\t\t};\n\n\t\t// Hold a reference to the following panel.\n\t\tthis._followingPanel = null;\n\n\t\tthis._entityInfo = null;\n\t}\n\n\t/** @inheritdoc */\n\tasync onEnter(params) {\n\t\t// Add components to be excluded on UI show/hide.\n\t\tthis.addUIexcludedComponents([\n\t\t\t'asteroid_modals',\n\t\t\t'definitionOverlay',\n\t\t\t'clock',\n\t\t\t'clockShortcut',\n\t\t\t'asteroid_menu_bottom'\n\t\t]);\n\n\t\t// Assign followingPanel prop if it isnt yet\n\t\tthis._followingPanel ??= this._app.getComponent('followingPanel');\n\n\t\tawait super.onEnter(params);\n\t}\n\n\t/** @inheritdoc */\n\tonLeave(params) {\n\t\t// Make sure panel hides.\n\t\tthis._followingPanel.hide();\n\n\t\tsuper.onLeave(params);\n\t}\n\n\t/** @inheritdoc */\n\t_reset(params) {\n\t\tsuper._reset(params);\n\t\tconst { planet, star, moon } = params;\n\t\tthis._target = planet || star || moon;\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateResources(params) {\n\t\t// Set new target for layer manager\n\t\tthis._app.getManager('layer').setTarget(this._target);\n\t\tthis._app.getManager('selection').selectEntity(this._target);\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponents(params) {\n\t\t// Use content manager to get title and set panel title state.\n\t\tconst info = this._app.getManager('content')?.getEntityInfo(this._target);\n\t\tthis._followingPanel.setState({\n\t\t\ttitle: info.iauName || info.displayName\n\t\t});\n\n\t\tsuper._updateComponents(params);\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponentsVisibility(params) {\n\t\tawait super._updateComponentsVisibility(params);\n\n\t\t// Update time slider position.\n\t\tthis._updateTimeSliderPosition();\n\n\t\t// Show the panel if the UI is visible.\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tvisibleUI && this._followingPanel.show();\n\n\t\t// Hide the bottom menu if it's visible\n\t\tthis._app.getComponent('asteroid_menu_bottom')?.hide();\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateCamera() {\n\t\tawait this._app.cameraScripts.goToCelestialObject(this._target);\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tthis._onExpandToggle(false);\n\t}\n}\n","import BaseView from './base_view';\n\n/**\n * @extends BaseView\n */\nexport class HomeView extends BaseView {\n\t/** @inheritdoc */\n\tasync onEnter(params) {\n\t\t// Add components to be excluded on UI show/hide.\n\t\tthis.addUIexcludedComponents([\n\t\t\t'splashScreen',\n\t\t\t'asteroid_modals',\n\t\t\t'definitionOverlay',\n\t\t\t'clock',\n\t\t\t'clockShortcut',\n\t\t\t'tutorialOverlay'\n\t\t]);\n\n\t\t// Apply time slider classes as needed.\n\t\tthis._updateTimeSliderPosition();\n\n\t\t// Make sure bottom menu is visible if needed.\n\t\tthis._app.getComponent('asteroid_menu_bottom')?.show();\n\n\t\tconst unsubscribed = [];\n\t\tif (this._app.getComponent('splashScreen')?.element === null) {\n\t\t\tunsubscribed.push('splashScreen');\n\t\t};\n\t\tawait super.onEnter(params, unsubscribed);\n\t}\n\n\t/** @inheritdoc */\n\t_updateResources(params) {\n\t\tthis._app.getManager('time').resetLimits();\n\t\tthis._app.getManager('layer').setTarget('');\n\n\t\tthis._target = 'sun';\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateCamera(params) {\n\t\tawait this.app.cameraScripts.goToSystem('inner_solar_system');\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tthis._updateTimeSliderPosition();\n\t}\n}\n","import { AsteroidView } from './asteroid_view';\nimport { MissionView } from './mission_view';\nimport { FollowingView } from './following_view';\nimport { WatchView } from './watch_view';\nimport { HomeView } from './home_view';\nimport { StoryView } from './story_view';\n\nexport default {\n\tAsteroidView,\n\tMissionView,\n\tFollowingView,\n\tWatchView,\n\tHomeView,\n\tStoryView\n};\n","import BaseView from './base_view';\nimport * as Pioneer from 'pioneer';\n\n/**\n *\n */\nexport class MissionView extends BaseView {\n\t/**\n\t * Constructor.\n\t * @param {...*} args - Arguments for BaseView\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\tthis._rules.spacecraft = {\n\t\t\tvalue: name => this._app.getManager('content')?.getEntityInfo(name)?.category === 'Spacecraft'\n\t\t};\n\n\t\t// Hold a reference to the mission panel.\n\t\tthis._missionPanel = null;\n\n\t\tthis._entityInfo = null;\n\n\t\tthis.filtersManager = null;\n\t}\n\n\t/** @inheritdoc */\n\tasync onEnter(params) {\n\t\t// Add components to be excluded on UI show/hide.\n\t\tthis.addUIexcludedComponents([\n\t\t\t'asteroid_modals',\n\t\t\t'definitionOverlay',\n\t\t\t'clock',\n\t\t\t'clockShortcut',\n\t\t\t'asteroid_menu_bottom'\n\t\t]);\n\n\t\tthis.filtersManager = this._app.getManager('filters');\n\n\t\t// Assign asteroidPanel prop if it isnt yet\n\t\tthis._missionPanel ??= this._app.getComponent('missionPanel');\n\n\t\tawait super.onEnter(params);\n\n\t\t// We need to remove some direct style properties that are set in the pioneer engine.\n\t\tthis._mainViewportEl.style.top = '';\n\t\tthis._mainViewportEl.style.left = '';\n\t}\n\n\t/** @inheritdoc */\n\tonLeave(params) {\n\t\tif (params && params.cancelToken && params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure panel collapses and hides.\n\t\tthis._missionPanel.hide();\n\n\t\t// We need to re-add some direct style properties that are set in the pioneer engine.\n\t\tthis._mainViewportEl.style.top = '0px';\n\t\tthis._mainViewportEl.style.left = '0px';\n\n\t\tsuper.onLeave(params);\n\t}\n\n\t/** @inheritdoc */\n\tregisterCallbacks() {\n\t\tsuper.registerCallbacks();\n\t\t// Register expand toggle callback\n\t\tthis._missionPanel.registerCallback('expandtoggle', this._onExpandToggle);\n\t}\n\n\t/** @inheritdoc */\n\tremoveCallbacks() {\n\t\tsuper.removeCallbacks();\n\t\t// Remove expand toggle callback\n\t\tthis._missionPanel.removeCallback('expandtoggle', this._onExpandToggle);\n\t}\n\n\t/** @inheritdoc */\n\t_reset(params) {\n\t\tsuper._reset(params);\n\t\tthis._target = null;\n\t\tthis._entityInfo = null;\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateResources({ spacecraft }) {\n\t\tconst contentManager = this._app.getManager('content');\n\n\t\t// Update entity name and entity info\n\t\tthis._target = spacecraft;\n\t\tthis._entityInfo = contentManager.getEntityInfo(this._target);\n\n\t\t// Load events and descriptions.\n\t\tawait this._app.getManager('content').loadDescriptions([this._target]);\n\t\tawait this._app.getManager('content').loadEvents(this._target, {\n\t\t\tall: 'all_events'\n\t\t});\n\n\t\t// Set new target for layer manager\n\t\tthis._app.getManager('layer').setTarget(this._target);\n\t\tthis._app.getManager('selection').selectEntity(this._target);\n\n\t\tif (this._entityInfo === null) {\n\t\t\tthis._handleError(`MissionView._updateResources: Cannot find entity named ${this._target}.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove layer filters if the current mission depends on the layer\n\t\tif (this._entityInfo?.related) {\n\t\t\t// filter and reduce here take the 'related' entity object\n\t\t\t// and turns it into a boolean-keyed object\n\t\t\t// { asteroid: ['bennu'], comets: [] } -> { asteroids: true }\n\t\t\tthis.filtersManager.setFilterToReveal(\n\t\t\t\tObject.keys(this._entityInfo.related)\n\t\t\t\t\t.filter((r) => this._entityInfo.related[r].length > 0)\n\t\t\t\t\t.reduce((acc, cur) => {\n\t\t\t\t\t\tacc[cur] = true; return acc;\n\t\t\t\t\t}, {}), true);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponents(params) {\n\t\tconst contentManager = this._app.getManager('content');\n\n\t\t// Get blurb.\n\t\tconst blurb = contentManager.context[this._target]?.description?.blurb;\n\n\t\t// Get events.\n\t\tconst events = contentManager.context?.events;\n\n\t\t// Determine title.\n\t\tconst { iauName, displayName } = this._entityInfo;\n\t\tconst title = iauName || displayName;\n\n\t\t// Populate the panel.\n\t\tthis._missionPanel.populate(title, blurb, this._target, events);\n\n\t\tsuper._updateComponents(params);\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponentsVisibility(params) {\n\t\tawait super._updateComponentsVisibility(params);\n\n\t\t// Update time slider position.\n\t\tthis._updateTimeSliderPosition();\n\n\t\t// Show and expand the panel if the UI is visible. (expandOnShow is set to true in the missionPanel)\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tvisibleUI && this._missionPanel.show();\n\n\t\t// Hide the bottom menu if it's visible\n\t\tthis._app.getComponent('asteroid_menu_bottom')?.hide();\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateCamera(params) {\n\t\tconst hasLanded = this._app.getManager('content').hasLanded(this._entityInfo);\n\t\tif (hasLanded) {\n\t\t\tawait this._app.cameraScripts.alignSpacecraftPlanet(this._target);\n\t\t}\n\t\telse {\n\t\t\tawait this._app.cameraScripts.goToSpacecraft(this._target);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tconst isExpanded = this._missionPanel?._state.isExpanded;\n\t\tthis._onExpandToggle(isExpanded);\n\t}\n}\n","import {\n\tAppUtils\n} from 'eyes';\nimport BaseView from './base_view';\n\n/**\n *\n */\nexport class StoryView extends BaseView {\n\t/**\n\t * Constructor.\n\t * @param {...*} args - Arguments for BaseView\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\t/**\n\t\t * Copy of story context.\n\t\t * @type {object}\n\t\t */\n\t\tthis._story = null;\n\n\t\tthis._rules.id = {\n\t\t\tvalue: val => val in this._app.getManager('content').getStoryList().stories\n\t\t};\n\n\t\t/**\n\t\t * Callbacks to call in onLeave.\n\t\t * Usually to reset values to before entering this view.\n\t\t * @type {Array}\n\t\t */\n\t\tthis._onLeaveCallbacks = [];\n\t}\n\n\t/** @inheritdoc */\n\tasync onQueryChange(params) {\n\t\t// Update definition if exists (needs to be called first)\n\t\tthis._app.getComponent('definitionOverlay')?.onQueryChange(params);\n\n\t\tawait super.onQueryChange(params);\n\n\t\t// Update story\n\t\tawait this._updateTime(params);\n\t\tawait this._app.getComponent('story').onQueryChange(params);\n\t\tawait this._updateCamera(params);\n\t}\n\n\t/** @inheritdoc */\n\tasync onEnter(params, unsubscribed = []) {\n\t\t// Add components to be excluded on UI show/hide.\n\t\tthis.addUIexcludedComponents([\n\t\t\t'asteroid_modals',\n\t\t\t'overlay',\n\t\t\t'definitionOverlay',\n\t\t\t'clock',\n\t\t\t'clockShortcut',\n\t\t\t'asteroid_menu_bottom'\n\t\t]);\n\n\t\t// Turn off visibility by default.\n\t\tconst storyComponent = this._app.getComponent('story');\n\t\tstoryComponent.hide();\n\n\t\tawait super.onEnter(params, unsubscribed);\n\n\t\t// Show and expand the panel if the UI is visible. (expandOnShow is set to true in the missionPanel)\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tvisibleUI && storyComponent.show();\n\n\t\t// Make sure spacecraft and planet layers are on.\n\t\tconst layerManager = this._app.getManager('layer');\n\t\tconst layerPanel = this._app.getComponent('layerPanel');\n\t\tif (!layerManager.getLayer('spacecraft').visible) {\n\t\t\tlayerPanel.toggleLayer('spacecraft');\n\t\t}\n\t\tif (!layerManager.getLayer('planets').visible) {\n\t\t\tlayerPanel.toggleLayer('planets');\n\t\t}\n\n\t\t// Make sure spacecraft is disabled\n\t\tlayerPanel.setCategoryEnabled('spacecraft', false);\n\n\t\t// Turn off any filters.\n\t\tthis._app.getManager('filters')?.setFilter({ phos: false, asteroids: false, comets: false });\n\n\t\t// Temporarily disable\n\t\tconst clock = this._app.getComponent('clock');\n\t\tclock.setState({ allowEdit: false });\n\t\tclock.toggle('time', false);\n\t\tclock.toggle('meridiem', false);\n\t\tthis._app.getManager('label').setClickable(false);\n\t\tthis._app.getManager('selection').setClickable(false);\n\n\t\t// Hide time slider\n\t\tthis._app.getComponent('timeSlider')?.setSliderVisibility(false);\n\t}\n\n\t/** @inheritdoc */\n\tasync onLeave(params) {\n\t\tsuper.onLeave(params);\n\t\tawait this._story?.onLeave?.(this._app);\n\t\tawait this._app.getComponent('story').onLeave();\n\n\t\t// Reset\n\t\tconst clock = this._app.getComponent('clock');\n\t\tclock.setState({ allowEdit: true });\n\t\tclock.toggle('time', true);\n\t\tclock.toggle('meridiem', true);\n\t\tthis._app.getManager('label').setClickable(true);\n\t\tthis._app.getManager('selection').setClickable(true);\n\n\t\t// Show time slider\n\t\tthis._app.getComponent('timeSlider')?.setSliderVisibility(true);\n\n\t\t// Make sure spacecraft is enabled\n\t\tthis._app.getComponent('layerPanel')?.setCategoryEnabled('spacecraft', true);\n\n\t\t// Call onLeave callbacks and reset them.\n\t\tfor (let i = 0; i < this._onLeaveCallbacks.length; i++) {\n\t\t\tthis._onLeaveCallbacks[i](params);\n\t\t}\n\t\tthis._onLeaveCallbacks = [];\n\n\t\tthis._story = null;\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateResources(params) {\n\t\t// Set new target for layer manager\n\t\tthis._app.getManager('layer').setTarget('');\n\n\t\tif (this._story) {\n\t\t\tthis._story.onLeave?.(this._app);\n\t\t\tthis._app.getComponent('story')?.onLeave();\n\t\t}\n\n\t\t// Load story\n\t\ttry {\n\t\t\tconst story = await this._app.getManager('content').getStory(params.id);\n\t\t\t// Copy the context in case it is lost during a route change\n\t\t\tthis._story = AppUtils.deepClone(story);\n\t\t\tthis._story?.onEnter?.(this._app);\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis._handleError(`StoryView._updateResources: Cannot find story ${params.id}.`);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateTime(params) {\n\t\tsuper._updateTime(params);\n\n\t\tconst timeManager = this._app.getManager('time');\n\t\tconst slideInfo = params.slide\n\t\t\t? this._story.slides.find(slide => slide.id === params.slide)\n\t\t\t: this._story.slides[0];\n\n\t\t// Set time limits if slideInfo has it\n\t\tconst { min, max } = slideInfo?.timeLimits || {};\n\t\tmin && timeManager.setMin(min);\n\t\tmax && timeManager.setMin(max);\n\n\t\t// Update time if slideInfo has it\n\t\tif (!params.time && slideInfo.time) {\n\t\t\ttimeManager.setTime(slideInfo.time);\n\n\t\t\t// Wait for next frame to get updated position\n\t\t\t// after time has changed\n\t\t\tawait this._app.pioneer.waitUntilNextFrame();\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\t_shouldHideControls() {\n\t\treturn AppUtils.isMobileMode() && this._app.getComponent('story').getState('isVisible');\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponents(params) {\n\t\tsuper._updateComponents(params);\n\t\t// Get the config before entering view for reset\n\t\tconst settings = this._app.getComponent('settings');\n\t\tconst { allowInfoPanel } = settings.getConfig();\n\t\tthis._onLeaveCallbacks.push(() => {\n\t\t\tsettings.setConfig({\n\t\t\t\tallowInfoPanel\n\t\t\t});\n\t\t});\n\t\t// Set the config for this view\n\t\tsettings.setConfig({\n\t\t\tallowInfoPanel: false\n\t\t});\n\n\t\t// Update story\n\t\tconst storyComponent = this._app.getComponent('story');\n\t\tawait storyComponent.onRouteChange(this._story.slides, params);\n\t\tstoryComponent.show();\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateCamera(params) {\n\t\tconst slideInfo = params.slide\n\t\t\t? this._story.slides.find(slide => slide.id === params.slide)\n\t\t\t: this._story.slides[0];\n\n\t\tif (slideInfo && slideInfo.camera) {\n\t\t\t// Only update camera if slide changes\n\t\t\tconst story = this._app.getComponent('story');\n\t\t\tif (story.getState('previousIndex') !== story.getState('currentIndex')) {\n\t\t\t\tconst preset = slideInfo.camera[0];\n\t\t\t\tawait preset(this._app);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tawait this._app.cameraScripts.goToSystem('outer_solar_system');\n\t\t}\n\t}\n}\n","import BaseView from './base_view';\nimport * as Pioneer from 'pioneer';\nimport {\n\tCameraManager, SceneManager\n} from 'eyes';\n\n/**\n *\n */\nexport class WatchView extends BaseView {\n\t/**\n\t * Constructor.\n\t * @param {...*} args - Arguments for BaseView\n\t */\n\tconstructor(...args) {\n\t\tsuper(...args);\n\n\t\t// Make sure we have neo data for this object.\n\t\tthis._rules.neoName = {\n\t\t\tvalue: name => Boolean(this._app.neos.get(name)?.pioneerName)\n\t\t};\n\n\t\tthis._watchManager = null;\n\t\tthis._watchPanel = null;\n\n\t\tthis.filtersManager = null;\n\t}\n\n\t/** @inheritdoc */\n\tasync onRouteChange(params) {\n\t\tconst missingNeoName = params.neoName === undefined;\n\t\tconst cameFromOutside = this._app.getManager('router').previousView !== 'watch' && missingNeoName;\n\n\t\tlet slideIndex = this._watchManager.determineSlideIndex(params.neoName);\n\n\t\tconst alreadyPassed = slideIndex === -1;\n\t\tconst notInDatabase = params.neoName && !this._app.scene.get(params.neoName);\n\n\t\t/**\n\t\t * Three scenarios where we need to open the watch panel to the first slide (ie. redirect):\n\t\t * 1) If we came from outside the watch view and there's no neoName\n\t\t * 2) If the given neoName has already passed the earth\n\t\t * 3) If the given neoName doesnt exist (not in database)\n\t\t */\n\t\tif (cameFromOutside || alreadyPassed || notInDatabase) {\n\t\t\t// Warning message.\n\t\t\tif (notInDatabase) {\n\t\t\t\tconsole.warn(`Asteroid, ${params.neoName} is not in the database. Re-directing to Next Closest Approach.`);\n\t\t\t}\n\t\t\telse if (alreadyPassed) {\n\t\t\t\t// Todo: We need a popup that says \"Phew! It missed!\"\" with \"Show me <asteroid-name> anyway\" or \"See next approaching asteroids\"\n\t\t\t\tconsole.warn(`Asteroid, ${params.neoName} has safely passed earth. Re-directing to Next Closest Approach.`);\n\t\t\t}\n\t\t\tslideIndex = 0;\n\n\t\t\t// Re-direct to first slide.\n\t\t\tthis._watchManager.setHasRedirected(true);\n\t\t\tthis._watchManager.setSlideUrlByIndex(slideIndex);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst { neoName } = params;\n\n\t\t// Set the panels expand state.\n\t\tthis._watchPanel.shouldBeExpanded = Boolean(neoName);\n\n\t\t// Store the slide index in the watchManager\n\t\tthis._watchManager.setSlideIndex(slideIndex);\n\n\t\t// Make sure the swiper slide is correctly synced to the URL.\n\t\t// Be careful not to make an infinite loop here between slideTo and the on slideChange event handler in the watch carousel component\n\t\tconst swiper = this._watchPanel._swiper;\n\n\t\tif (neoName && swiper) {\n\t\t\tconst { realIndex } = swiper;\n\t\t\tif (slideIndex !== null && slideIndex !== realIndex) {\n\t\t\t\t// This last false arg should mean that the slideChange callback is not triggered. However this doesnt seem to work...\n\t\t\t\tswiper.slideTo(slideIndex, undefined, false);\n\t\t\t}\n\t\t}\n\n\t\t// Once entities are loaded, set the target and\n\t\tawait this._entitiesLoadedPromise;\n\n\t\t// Trigger the asteroid selection update.\n\t\tthis._watchManager.setAsteroidSelection();\n\n\t\tawait super.onRouteChange(params);\n\t}\n\n\t/** @inheritdoc */\n\tasync onEnter(params) {\n\t\tthis.filtersManager = this._app.getManager('filters');\n\n\t\t// Set time to now.\n\t\t// this._app.getManager('time')?.setToNow();\n\n\t\t// Activate top menu item activeness.\n\t\tthis._app.getComponent('asteroid_menu_top')?.toggleActive('Asteroid Watch', true);\n\n\t\t// Set data in the WatchManager\n\t\tthis._watchManager = this._app.getManager('watch');\n\n\t\t// Set of the data.\n\t\tthis._watchManager.setData();\n\t\tconst { nextFiveData } = this._watchManager;\n\n\t\t// Create the entities but don't await it as this can block for half a second and it's not essential for other tasks.\n\t\tthis._entitiesLoadedPromise = this._watchManager._createEntities();\n\n\t\t// assign watchPanel prop if it isnt yet\n\t\tif (!this._watchPanel) {\n\t\t\tthis._watchPanel = this._app.getComponent('watchPanel');\n\t\t}\n\t\t// Compose the swiper carousel if it doesnt exist\n\t\tif (!this._watchPanel._swiper) {\n\t\t\tthis._watchPanel.populate(nextFiveData);\n\t\t\tthis._watchPanel.initSwiper();\n\t\t}\n\n\t\t// Apply time limits earth coverage.\n\t\tthis._watchManager.restrictEarthCoverage();\n\n\t\t// Apply classes to dim all background labels.\n\t\tthis._watchManager.dimBackgroundLabels(true);\n\n\t\t// Trails needs their default width set to ensure they remain hidden when unhovering.\n\t\tthis._watchManager.setBgTrailWidthDefault(0);\n\n\t\t// Make sure earth and moon label is not clickable.\n\t\tthis._app.getManager('selection').setClickable(false);\n\n\t\tconst labelManager = this._app.getManager('label');\n\t\tlabelManager.setLabelClickable('earth', false);\n\n\t\t// Remove all filters so that we see everything again\n\t\tthis.filtersManager.setFilter({ asteroids: false, comets: false, phos: false });\n\t\tthis.app.getComponent('filtersModal').handleResetFilters();\n\n\t\t// Add components to be excluded on UI show/hide.\n\t\tthis.addUIexcludedComponents([\n\t\t\t'asteroid_modals',\n\t\t\t'definitionOverlay',\n\t\t\t'clock',\n\t\t\t'clockShortcut',\n\t\t\t'asteroid_menu_bottom',\n\t\t\t'tutorialOverlay'\n\t\t]);\n\n\t\tawait super.onEnter(params);\n\n\t\t// We need to remove some direct style properties that are set in the pioneer engine.\n\t\tthis._mainViewportEl.style.top = '';\n\t\tthis._mainViewportEl.style.left = '';\n\t}\n\n\t/** @inheritdoc */\n\tasync onLeave(params) {\n\t\t// Hide and collapse panel (before removing callbacks)\n\t\tthis._watchPanel.hide();\n\n\t\t// Temp entities can be deleting using the after function in extended base view.\n\t\t// This prevent it making the camera more jerky.\n\t\tawait super.onLeave(params);\n\n\t\t// Restore earth dynamo coverage.\n\t\tthis._watchManager.restoreEarthCoverage();\n\n\t\t// Restore background labels.\n\t\tthis._watchManager.dimBackgroundLabels(false);\n\n\t\t// Restore trails default width.\n\t\tthis._watchManager.setBgTrailWidthDefault();\n\n\t\t// Restore particles to their default opacity.\n\t\tconst particleShader = this._getParticleShader();\n\t\tif (particleShader) {\n\t\t\tparticleShader.uniforms.masterOpacity.value = 0.5;\n\t\t}\n\n\t\t// Deactivate top menu item activeness.\n\t\tthis._app.getComponent('asteroid_menu_top')?.toggleActive('Asteroid Watch', false);\n\n\t\t// Clear watch manager references.\n\t\tthis._watchManager.removeReferences();\n\n\t\t// We need to re-add some direct style properties that are set in the pioneer engine.\n\t\tthis._mainViewportEl.style.top = '0px';\n\t\tthis._mainViewportEl.style.left = '0px';\n\n\t\t// Make sure earth and moon labels clickable again\n\t\tthis._app.getManager('selection').setClickable(true);\n\n\t\tconst labelManager = this._app.getManager('label');\n\t\tlabelManager.setLabelClickable('earth', true);\n\t}\n\n\t/** @inheritdoc */\n\t_reset() {\n\t\tthis._target = 'earth';\n\t}\n\n\t/** @inheritdoc */\n\tregisterCallbacks() {\n\t\tsuper.registerCallbacks();\n\t\t// Register expand toggle callback\n\t\tthis._watchPanel.registerCallback('expandtoggle', this._onExpandToggle);\n\t}\n\n\t/** @inheritdoc */\n\tremoveCallbacks() {\n\t\tsuper.removeCallbacks();\n\t\t// Remove expand toggle callback\n\t\tthis._watchPanel.removeCallback('expandtoggle', this._onExpandToggle);\n\t}\n\n\t/**\n\t * Get the furthest asteroid from the target entity and multiply by\n\t * @param {string} targetId\n\t * @param {object} options\n\t * @param {Array<object>} options.asteroidData\n\t * @param {number} options.duration\n\t * @param {number} options.distanceCoeff\n\t * @param {number} options.maxCamDistance\n\t * @param {Function} options.onTransition\n\t * @param options.forceAnimation\n\t */\n\tasync goToWatchAsteroids(targetId, { asteroidData = [], duration = 2, distanceCoeff = 4, maxCamDistance = 50000000, onTransition = undefined, forceAnimation = false }) {\n\t\tconst scene = /** @type {SceneManager} */(this.app.getManager('scene')).main;\n\t\tconst cameraManager = /** @type {CameraManager} */(this.app.getManager('camera'));\n\t\tconst cameraEntity = cameraManager.cameraEntity;\n\n\t\tconst targetEntity = scene.getEntity(targetId);\n\t\tconst cinematic = true;\n\t\tconst halfDuration = duration * 0.5;\n\n\t\t// Get current cam distance\n\t\tconst currCamPosition = new Pioneer.Vector3();\n\t\tcameraEntity?.getPositionRelativeToEntity(currCamPosition, Pioneer.Vector3.Zero, targetEntity);\n\t\tconst currCamDistance = currCamPosition.magnitude();\n\n\t\t// Find the asteroid that's CURRENTLY furthest from the target.\n\t\tconst asteroidPos = new Pioneer.Vector3();\n\t\tconst currDistances = asteroidData.map(({ pioneerName }) => {\n\t\t\tconst entity = scene.getEntity(pioneerName);\n\t\t\ttargetEntity.getPositionRelativeToEntity(asteroidPos, Pioneer.Vector3.Zero, entity);\n\t\t\treturn asteroidPos.magnitude();\n\t\t});\n\t\t// Calculate furthest distance\n\t\tconst furthestDistance = Math.max(...currDistances);\n\t\t// Clamp to max cam distance\n\t\tconst distance = Math.min(furthestDistance * distanceCoeff, maxCamDistance);\n\n\t\t// Only trigger camera if it's too far or too near, or we came from outside the asteroid watch view\n\t\tconst tooFarAway = isNaN(currCamDistance) || currCamDistance > maxCamDistance;\n\t\tconst tooNear = currCamDistance < furthestDistance;\n\n\t\tconst animateCamera = tooFarAway || tooNear || forceAnimation;\n\n\t\tif (animateCamera) {\n\t\t\t// Get target up.\n\t\t\tconst targetUp = new Pioneer.Vector3();\n\t\t\ttargetEntity.getOrientation().getAxis(targetUp, 2);\n\n\t\t\t// The target up can be the destination so we get a 'birdseye view'\n\t\t\ttargetUp.mult(targetUp, distance);\n\n\t\t\tthis._onCameraTransition = onTransition;\n\n\t\t\t// Zoom to the distance\n\t\t\tawait cameraManager.goToEntity(targetId, { distance, cinematic, destinationUp: targetUp, duration: halfDuration, transitionFunction: this.app.cameraScripts._easeInOutExpoTransition });\n\n\t\t\t// set cam transition func back to null\n\t\t\tthis._onCameraTransition = null;\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateCamera({ cancelToken }) {\n\t\tif (cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { nextFiveData, backgroundPlanets, defaultPlanetTrailWidth, hasRedirected } = this._watchManager;\n\t\tconst trailManager = this._app.getManager('trail');\n\n\t\t// During the camera transition, we can pass in a function that takes the progress as an argument.\n\t\t// This allows us to more smoothly transition other components (master particle opacity and trail widths for planets)\n\t\tconst defaultParticleOpacity = 0.5; // this value must align with the master opacity uniform in asteroids.js TODO: add it to a separate constants file.\n\t\tconst targetParticleOpacity = 0.2;\n\t\tconst watchView = this;\n\n\t\t// onTransition function is only applied when we've vome from the outside (ie. from another view)\n\t\tconst onTransition = t => {\n\t\t\t// Interpolate opacity and trail width.\n\t\t\tconst particleOpacity = targetParticleOpacity + (1 - t) * (defaultParticleOpacity - targetParticleOpacity);\n\t\t\tconst trailWidth = defaultPlanetTrailWidth * (1 - t);\n\n\t\t\t// Set opacity and trail width.\n\t\t\twatchView._setParticleOpacity(particleOpacity);\n\t\t\ttrailManager.setMultipleWidths(backgroundPlanets, trailWidth, trailWidth);\n\t\t};\n\n\t\tconst cameFromOutside = hasRedirected || this._app.getManager('router').previousView !== 'watch';\n\n\t\t// View all the asteroids\n\t\tawait this.goToWatchAsteroids(this._target, {\n\t\t\tasteroidData: nextFiveData,\n\t\t\t...cameFromOutside && { onTransition, forceAnimation: true }\n\t\t});\n\n\t\t// It's possible that we've changed route during the camera transition (cancelled token), in which case we need to reset the particle opacity and trail width.\n\n\t\tif (cancelToken.isCanceled) {\n\t\t\tthis._setParticleOpacity(defaultParticleOpacity);\n\t\t\tthis._watchManager.setBgTrailWidthDefault();\n\t\t}\n\t\telse {\n\t\t\t// It's possible we havent used an onTransition function, in which case we need to set the final opacity and trail width values.\n\t\t\tthis._setParticleOpacity(targetParticleOpacity);\n\t\t\ttrailManager.setMultipleWidths(backgroundPlanets, 0, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the threejs particle shader\n\t * @returns {object}\n\t */\n\t_getParticleShader() {\n\t\treturn this._app._pioneer.get('main', 'sun', 'orbitalParticles')?.getThreeJsMaterials()?.[0];\n\t}\n\n\t/**\n\t * Sets particle master opacity\n\t * @param {number} opacity\n\t */\n\t_setParticleOpacity(opacity) {\n\t\tconst particleShader = this._getParticleShader();\n\t\tif (particleShader) {\n\t\t\tparticleShader.uniforms.masterOpacity.value = opacity;\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tafter(params) {\n\t\t// Reset old target for layer manager\n\t\tthis._app.getManager('layer').resetTarget();\n\n\t\t// Reset hasRedirected\n\t\tif (this._watchManager.hasRedirected) {\n\t\t\tthis._watchManager.setHasRedirected(false);\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tasync _updateComponentsVisibility(params) {\n\t\tawait super._updateComponentsVisibility(params);\n\n\t\t// Show the panel if the UI is visible.\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tvisibleUI && this._watchPanel.show();\n\n\t\t// Hide the bottom menu if it's visible\n\t\tthis._app.getComponent('asteroid_menu_bottom')?.hide();\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tconst isExpanded = this._watchPanel?._state.isExpanded;\n\t\tthis._onExpandToggle(isExpanded);\n\t}\n}\n","var map = {\n\t\"./af\": \"../eyes/node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../eyes/node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../eyes/node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../eyes/node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../eyes/node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../eyes/node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../eyes/node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../eyes/node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../eyes/node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../eyes/node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../eyes/node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../eyes/node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../eyes/node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../eyes/node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../eyes/node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../eyes/node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../eyes/node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../eyes/node_modules/moment/locale/az.js\",\n\t\"./be\": \"../eyes/node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../eyes/node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../eyes/node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../eyes/node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../eyes/node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../eyes/node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../eyes/node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"../eyes/node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"../eyes/node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"../eyes/node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../eyes/node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../eyes/node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../eyes/node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../eyes/node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../eyes/node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../eyes/node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../eyes/node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../eyes/node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../eyes/node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../eyes/node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../eyes/node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../eyes/node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../eyes/node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../eyes/node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../eyes/node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../eyes/node_modules/moment/locale/da.js\",\n\t\"./de\": \"../eyes/node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../eyes/node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../eyes/node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../eyes/node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../eyes/node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../eyes/node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../eyes/node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../eyes/node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../eyes/node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../eyes/node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../eyes/node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../eyes/node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../eyes/node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../eyes/node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../eyes/node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../eyes/node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../eyes/node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../eyes/node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../eyes/node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../eyes/node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"../eyes/node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"../eyes/node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"../eyes/node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../eyes/node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"../eyes/node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"../eyes/node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"../eyes/node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../eyes/node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../eyes/node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../eyes/node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../eyes/node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"../eyes/node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"../eyes/node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"../eyes/node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../eyes/node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../eyes/node_modules/moment/locale/es.js\",\n\t\"./et\": \"../eyes/node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../eyes/node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../eyes/node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../eyes/node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../eyes/node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../eyes/node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../eyes/node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../eyes/node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"../eyes/node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"../eyes/node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"../eyes/node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../eyes/node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../eyes/node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../eyes/node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../eyes/node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../eyes/node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../eyes/node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../eyes/node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../eyes/node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../eyes/node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../eyes/node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../eyes/node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../eyes/node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../eyes/node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../eyes/node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../eyes/node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"../eyes/node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"../eyes/node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"../eyes/node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../eyes/node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../eyes/node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../eyes/node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../eyes/node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../eyes/node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../eyes/node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../eyes/node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../eyes/node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../eyes/node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../eyes/node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../eyes/node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../eyes/node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../eyes/node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../eyes/node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../eyes/node_modules/moment/locale/id.js\",\n\t\"./is\": \"../eyes/node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../eyes/node_modules/moment/locale/is.js\",\n\t\"./it\": \"../eyes/node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../eyes/node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../eyes/node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../eyes/node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../eyes/node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../eyes/node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../eyes/node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../eyes/node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../eyes/node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../eyes/node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../eyes/node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../eyes/node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../eyes/node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../eyes/node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../eyes/node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../eyes/node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../eyes/node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../eyes/node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../eyes/node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../eyes/node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../eyes/node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../eyes/node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../eyes/node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../eyes/node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../eyes/node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../eyes/node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../eyes/node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../eyes/node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../eyes/node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../eyes/node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../eyes/node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../eyes/node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../eyes/node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../eyes/node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../eyes/node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../eyes/node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../eyes/node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../eyes/node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../eyes/node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../eyes/node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../eyes/node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../eyes/node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../eyes/node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../eyes/node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../eyes/node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../eyes/node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../eyes/node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../eyes/node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../eyes/node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../eyes/node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../eyes/node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../eyes/node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../eyes/node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../eyes/node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../eyes/node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../eyes/node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../eyes/node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../eyes/node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../eyes/node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../eyes/node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"../eyes/node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"../eyes/node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"../eyes/node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../eyes/node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../eyes/node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../eyes/node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../eyes/node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../eyes/node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../eyes/node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../eyes/node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../eyes/node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../eyes/node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../eyes/node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../eyes/node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../eyes/node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../eyes/node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../eyes/node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../eyes/node_modules/moment/locale/se.js\",\n\t\"./si\": \"../eyes/node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../eyes/node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../eyes/node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../eyes/node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../eyes/node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../eyes/node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../eyes/node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../eyes/node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../eyes/node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../eyes/node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../eyes/node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../eyes/node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../eyes/node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../eyes/node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../eyes/node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../eyes/node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../eyes/node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../eyes/node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../eyes/node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../eyes/node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../eyes/node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../eyes/node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../eyes/node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../eyes/node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../eyes/node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../eyes/node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../eyes/node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../eyes/node_modules/moment/locale/th.js\",\n\t\"./tk\": \"../eyes/node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"../eyes/node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"../eyes/node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../eyes/node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../eyes/node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../eyes/node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../eyes/node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../eyes/node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../eyes/node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../eyes/node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../eyes/node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../eyes/node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../eyes/node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../eyes/node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../eyes/node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../eyes/node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../eyes/node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../eyes/node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../eyes/node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../eyes/node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../eyes/node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../eyes/node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../eyes/node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../eyes/node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../eyes/node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../eyes/node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../eyes/node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../eyes/node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../eyes/node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../eyes/node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../eyes/node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../eyes/node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../eyes/node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../eyes/node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"../eyes/node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"../eyes/node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"../eyes/node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../eyes/node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../eyes/node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","// Import moment\nimport moment from 'moment-timezone';\n\n// Import Pioneer libraries\nimport * as Pioneer from 'pioneer';\nimport * as PioneerScripts from 'pioneer-scripts';\n\n// Eyes CSS\nimport './assets';\n\n// Import data\nimport entityInfo from './data/entity_info.json';\nimport spheroidLayers from './data/entity_spheroid_layers.js';\nimport spheroidFeatures from './data/entity_spheroid_features.js';\n\n// Import locals\nimport {\n\tEyesVersion,\n\tAppUtils,\n\tBaseComponent,\n\tBaseManager,\n\tBaseView,\n\tCameraManager,\n\tCameraScripts,\n\tContentManager,\n\tLabelManager,\n\tLayerManager,\n\tRouteManager,\n\tSceneManager,\n\tSpoutManager,\n\tTrailManager,\n\tComparisonManager,\n\tSearchManager,\n\tTypes,\n\tOrbiterLineOfSightComponent,\n\tDistanceLineComponent\n} from './internal';\n\n/**\n * The main application class.\n */\nexport class BaseApp {\n\t/**\n\t * Sets the subclass of BaseApp to be instantiated. It should be called in the main script outside of any function, by the app subclass.\n\t */\n\tstatic setAppClass() {\n\t\tBaseApp._appClass = this;\n\t}\n\n\t/**\n\t * Constructs the Base application.\n\t * @param {Map<string, typeof BaseComponent>} componentTypes\n\t */\n\tconstructor(componentTypes) {\n\t\t// Make this global.\n\t\t// @ts-ignore // vscode ts doesn't yet support globals in its jsdoc.\n\t\twindow.app = this;\n\n\t\t/**\n\t\t * Pioneer engine.\n\t\t * @type {Pioneer.Engine}\n\t\t * @private\n\t\t */\n\t\tthis._pioneer = null;\n\n\t\t/**\n\t\t * Pioneer scene.\n\t\t * @type {Pioneer.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._scene = null;\n\n\t\t/**\n\t\t * The router.\n\t\t * @type {RouteManager}\n\t\t * @private\n\t\t */\n\t\tthis._router = null;\n\n\t\t/**\n\t\t * Root UI element\n\t\t * @type {HTMLElement}\n\t\t * @private\n\t\t */\n\t\tthis._element = null;\n\n\t\t/**\n\t\t * The dynamic UI element.\n\t\t * @type {HTMLElement}\n\t\t * @private\n\t\t */\n\t\tthis._dynamicElement = null;\n\n\t\t/**\n\t\t * Time limits info for app.\n\t\t * @type {object}\n\t\t */\n\t\tthis._timeInfo = {};\n\n\t\t/**\n\t\t * Information for creating scene.\n\t\t * @type {import('./internal').SceneInfo}\n\t\t */\n\t\tthis._sceneInfo = undefined;\n\n\t\t/**\n\t\t * Camera scripts instance.\n\t\t * @type {CameraScripts}\n\t\t */\n\t\tthis._cameraScripts = new CameraScripts(this);\n\n\t\t/**\n\t\t * Information for creating components.\n\t\t * @type {Array<object>}\n\t\t */\n\t\tthis._componentInfo = [];\n\n\t\t/**\n\t\t * Component types.\n\t\t * @type {Map<string, typeof BaseComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._componentTypes = componentTypes;\n\n\t\t/**\n\t\t * List of all managers in app.\n\t\t * @type {Object<string, BaseManager>}\n\t\t * @private\n\t\t */\n\t\tthis._managers = {};\n\n\t\t/**\n\t\t * List of all components in app.\n\t\t * @type {Object<string, BaseComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._components = {};\n\n\t\t/**\n\t\t * List of all views in app.\n\t\t * @type {Object<string, BaseView>}\n\t\t * @private\n\t\t */\n\t\tthis._views = {};\n\n\t\t/**\n\t\t * Info to add views.\n\t\t * @type {Array<object>}\n\t\t * @private\n\t\t */\n\t\tthis._viewInfo = [];\n\n\t\t/**\n\t\t * Map of all view classes.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._viewClasses = {};\n\n\t\t/**\n\t\t * List of callbacks to call every frame.\n\t\t * @type {Array<Function>}\n\t\t * @private\n\t\t */\n\t\tthis._updates = [];\n\n\t\t/**\n\t\t * Is touch functionality available.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.isTouch = null;\n\n\t\t/**\n\t\t * Is hover functionality available.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.canHover = null;\n\n\t\t/**\n\t\t * Is the app currently searching.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isSearching = null;\n\n\t\t/**\n\t\t * Starting position of touch.\n\t\t * @type {Object<string, number>}\n\t\t */\n\t\tthis._touchStartPos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t * Is in dragging mode or not.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._dragging = false;\n\n\t\t/**\n\t\t * Set an additional reference to the entityInfo to allow early access to it if needed.\n\t\t */\n\t\tthis._entityInfo = entityInfo;\n\n\t\tthis.bindFunctions([\n\t\t\t'resize',\n\t\t\t'onTouchStart',\n\t\t\t'onTouchMove',\n\t\t\t'onTouchEnd',\n\t\t\t'update'\n\t\t]);\n\n\t\t// Scroll / Drag detection\n\t\tthis._touchCount = 0;\n\t\tthis._scrollable = false;\n\t\tthis._touchMax = false;\n\t\twindow.addEventListener('touchstart', this.onTouchStart, false);\n\t\twindow.addEventListener('touchmove', this.onTouchMove, { passive: false });\n\t\twindow.addEventListener('touchend', this.onTouchEnd);\n\n\t\t// Update css vh variable\n\t\tconst vh = window.innerHeight;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t\twindow.addEventListener('resize', this.resize, false);\n\n\t\tthis.resize();\n\t}\n\n\t/**\n\t * Inits the app.\n\t * @returns {Promise<void>}\n\t */\n\tasync init() {\n\t\t// Store root UI element\n\t\tthis._element = document.getElementById('ui');\n\t\tthis._dynamicElement = document.getElementById('dynamic-ui');\n\t\tthis._staticElement = document.getElementById('static-ui');\n\n\t\t// Instantiate Pioneer engine.\n\t\tconst rootDiv = /** @type {HTMLDivElement} */(document.getElementById('pioneer'));\n\t\trootDiv.style.position = 'absolute';\n\t\tthis._pioneer = new Pioneer.Engine(rootDiv);\n\n\t\t// Set Pioneer configurations.\n\t\tif (typeof window.config['staticAssetsUrl'] === 'string') {\n\t\t\tthis._pioneer.getDownloader().setReplacement('STATIC_ASSETS_URL', window.config['staticAssetsUrl']);\n\t\t}\n\t\tif (typeof window.config['dynamicAssetsUrl'] === 'string') {\n\t\t\tthis._pioneer.getDownloader().setReplacement('DYNAMIC_ASSETS_URL', window.config['dynamicAssetsUrl']);\n\t\t}\n\t\tif (typeof window.config['animdataUrl'] === 'string') {\n\t\t\tthis._pioneer.getDownloader().setReplacement('ANIMDATA_URL', window.config['animdataUrl']);\n\t\t}\n\t\tthis._pioneer.getConfig().setValue('fontFamily', 'Raleway');\n\t\tthis._pioneer.getConfig().setValue('fontSize', 16);\n\t\tthis._pioneer.getConfig().setValue('pbr', true);\n\n\t\t// Register custom components.\n\t\tthis._pioneer.registerComponentType('distanceLine', DistanceLineComponent);\n\t\tthis._pioneer.registerComponentType('orbiterLineOfSight', OrbiterLineOfSightComponent);\n\t\tthis._pioneer.registerComponentType('wmts', PioneerScripts.WMTSComponent);\n\t\tthis._pioneer.registerComponentType('discGrid', PioneerScripts.DiscGridComponent);\n\t\tthis._pioneer.registerComponentType('torus', PioneerScripts.TorusComponent);\n\t\tthis._pioneer.registerComponentType('constellations', PioneerScripts.ConstellationsComponent);\n\n\t\t// Register custom controllers.\n\t\tthis._pioneer.registerControllerType('positionSum', PioneerScripts.PositionSumController);\n\t\tthis._pioneer.registerControllerType('zoomFit', PioneerScripts.ZoomFitController);\n\t\tthis._pioneer.registerComponentType('orbitLine', PioneerScripts.OrbitLineComponent);\n\n\t\t// Set the time to 'now'\n\t\tthis._pioneer.setTime(Pioneer.TimeUtils.now());\n\t\t// Set the timerate to realtime\n\t\tthis._pioneer.setTimeRate(1.0);\n\n\t\tawait this.createManagers();\n\t\tawait this.createComponents();\n\n\t\t// Setup the app routes.\n\t\tthis.setUpRoutes();\n\n\t\t// Setup the app update functions.\n\t\tthis.setUpUpdates();\n\n\t\t// Start the router.\n\t\t/** @type {RouteManager} */(this.getManager('router')).start();\n\n\t\tconst { spout } = this.getManager('router').configs;\n\t\tif (spout === true) {\n\t\t\tconst { spoutGlobe, spoutRenderWidth, spoutGlobeDistance, spoutTarget, spoutFontSize, spoutLonAngleOffset, spoutAlignToNorthPole } = this.getManager('router').configs;\n\t\t\tconst target = spoutTarget || await this.getManager('spout').getSpoutCameraTargetEntity(this.getManager('router').currentRoute.params);\n\t\t\tthis.getManager('spout').enableSpout(spoutGlobe, spoutRenderWidth, spoutGlobeDistance, target, spoutFontSize, spoutLonAngleOffset, spoutAlignToNorthPole);\n\t\t}\n\t}\n\n\t/**\n\t * GETTERS and SETTERS -----------------------------------------------------\n\t */\n\n\t/**\n\t * Gets Pioneer engine.\n\t * @returns {Pioneer.Engine}\n\t */\n\tget pioneer() {\n\t\treturn this._pioneer;\n\t}\n\n\t/**\n\t * Gets Pioneer scene.\n\t * @returns {Pioneer.Scene}\n\t */\n\tget scene() {\n\t\treturn this._scene;\n\t}\n\n\t/**\n\t * Sets Pioneer scene.\n\t * @param {Pioneer.Scene} scene\n\t */\n\tset scene(scene) {\n\t\tthis._scene = scene;\n\t}\n\n\t/**\n\t * Gets CameraScripts instance.\n\t * @returns {CameraScripts}\n\t */\n\tget cameraScripts() {\n\t\treturn this._cameraScripts;\n\t}\n\n\t/**\n\t * Gets the dynamic UI element.\n\t * @returns {HTMLElement}\n\t */\n\tget dynamicElement() {\n\t\treturn this._dynamicElement;\n\t}\n\n\t/**\n\t * Gets the static UI element.\n\t * @returns {HTMLElement}\n\t */\n\tget staticElement() {\n\t\treturn this._staticElement;\n\t}\n\n\t/**\n\t * Gets scene info.\n\t * @returns {object}\n\t */\n\tget sceneInfo() {\n\t\treturn this._sceneInfo;\n\t}\n\n\t/**\n\t * Gets root UI element.\n\t * @returns {HTMLElement}\n\t */\n\tget element() {\n\t\treturn this._element;\n\t}\n\n\t/**\n\t * Sets root UI element.\n\t * @param {HTMLElement} element\n\t * @protected\n\t */\n\tset element(element) {\n\t\tthis._element = element;\n\t}\n\n\t/**\n\t * Gets if we're currently searching.\n\t * @returns {boolean}\n\t */\n\tget isSearching() {\n\t\treturn this._isSearching;\n\t}\n\n\t/**\n\t * Sets if we're currently searching.\n\t */\n\tset isSearching(isSearching) {\n\t\tthis._isSearching = isSearching;\n\t}\n\n\t/**\n\t * MANAGERS ----------------------------------------------------------------\n\t */\n\n\t/**\n\t * Adds a manager to the app.\n\t * @template {BaseManager} ManagerType\n\t * @param {string} name - Unique name for the manager\n\t * @param {new (baseApp: BaseApp, ...args: any[]) => ManagerType} TypeConstructor\n\t * @param {any[]} args - List of arguments\n\t * @returns {ManagerType}\n\t */\n\taddManager(name, TypeConstructor, ...args) {\n\t\t// TODO Check for TypeConstructor is string to use Types.get\n\t\tif (this._managers[name] === undefined) {\n\t\t\tthis._managers[name] = new TypeConstructor(this, ...args);\n\t\t}\n\t\treturn /** @type {ManagerType} */(this._managers[name]);\n\t}\n\n\t/**\n\t * Removes a manager from the app.\n\t * @param {string} name - Unique name for the manager\n\t */\n\tremoveManager(name) {\n\t\tif (this._managers[name] !== undefined) {\n\t\t\tthis._managers[name].destroy();\n\t\t\tdelete this._managers[name];\n\t\t}\n\t}\n\n\t/**\n\t * Gets a manager.\n\t * @param {string} name - Unique name\n\t * @returns {BaseManager}\n\t */\n\tgetManager(name) {\n\t\tif (this._managers[name] !== undefined) {\n\t\t\treturn this._managers[name];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates app managers.\n\t */\n\tasync createManagers() {\n\t\t// Time manager\n\t\tconst timeManagerClass = Types.get('TimeManager');\n\t\tconst timeMgr = this.addManager('time', timeManagerClass);\n\t\tconst min = moment.tz('1949-12-31', 'Etc/UTC'); // Dec 31st 1949\n\t\tconst max = moment.tz('2049-12-31', 'Etc/UTC'); // Dec 31st 2049\n\t\ttimeMgr.setDefaultLimits({ min, max });\n\t\ttimeMgr.setLimits({ min, max });\n\n\t\t// Content manager\n\t\tconst contentMgr = this.addManager('content', ContentManager);\n\t\tcontentMgr.setEntityList(entityInfo);\n\t\tcontentMgr.setSpheroidLayers(spheroidLayers);\n\t\tcontentMgr.setSpheroidFeatures(spheroidFeatures);\n\n\t\tcontentMgr.setFolders({\n\t\t\tdescription: 'descriptions/',\n\t\t\tevent: 'events/',\n\t\t\tstories: 'stories/'\n\t\t});\n\n\t\t// Scene manager\n\t\tconst sceneManager = this.addManager('scene', SceneManager);\n\t\tthis._scene = sceneManager.main;\n\t\t// sceneManager.loadWMTSFromJSON(entityWMTS);\n\n\t\t// Layer manager\n\t\tconst layerManager = this.addManager('layer', LayerManager);\n\t\tconst SATELLITE_GROUPS = ['CYGNSS', 'TROPICS', 'STARLING', 'PREFIRE'];\n\t\tlayerManager.addLayer('ui', {\n\t\t\tname: 'User Interface'\n\t\t});\n\t\tlayerManager.addLayer('trails', {\n\t\t\tname: 'Trails'\n\t\t});\n\t\tlayerManager.addLayer('orbits', {\n\t\t\tname: 'Orbits'\n\t\t});\n\t\tlayerManager.addLayer('labels', {\n\t\t\tname: 'Labels'\n\t\t});\n\t\tlayerManager.addLayer('icons', {\n\t\t\tname: 'Icons'\n\t\t});\n\t\tlayerManager.addLayer('planets', {\n\t\t\tname: 'Planets',\n\t\t\tcategories: 'Planet'\n\t\t});\n\t\tlayerManager.addLayer('asteroids', {\n\t\t\tname: 'Asteroids',\n\t\t\tcategories: 'Asteroid',\n\t\t\tdefaultVisibility: false\n\t\t});\n\t\tlayerManager.addLayer('comets', {\n\t\t\tname: 'Comets',\n\t\t\tcategories: 'Comet',\n\t\t\tdefaultVisibility: false\n\t\t});\n\t\tlayerManager.addLayer('dwarfPlanets', {\n\t\t\tname: 'Dwarf Planets',\n\t\t\tcategories: 'Dwarf Planet',\n\t\t\tdefaultVisibility: false\n\t\t});\n\t\tlayerManager.addLayer('spacecraft', {\n\t\t\tname: 'Spacecraft',\n\t\t\tcategories: 'Spacecraft',\n\t\t\tsublayers: ['orbiters', 'landers', 'satelliteGroup']\n\t\t});\n\t\tlayerManager.addLayer('majorMoons', {\n\t\t\tname: 'Major Moons',\n\t\t\tcategories: 'Major Moon',\n\t\t\tgroup: 'moons'\n\t\t});\n\t\tlayerManager.addLayer('minorMoons', {\n\t\t\tname: 'Minor Moons',\n\t\t\tcategories: 'Minor Moon',\n\t\t\tdefaultVisibility: false,\n\t\t\tgroup: 'moons'\n\t\t});\n\t\tlayerManager.addLayer('orbiters', {\n\t\t\tname: 'Orbiters',\n\t\t\tcategories: 'Orbiter',\n\t\t\tgroup: 'spacecraft'\n\t\t});\n\t\tlayerManager.addLayer('satelliteGroup', {\n\t\t\tname: 'Satellite Group',\n\t\t\tcategories: SATELLITE_GROUPS,\n\t\t\tgroup: 'spacecraft',\n\t\t\tdefaultVisibility: true\n\t\t});\n\t\tlayerManager.addLayer('landers', {\n\t\t\tname: 'Landers',\n\t\t\tcategories: ['Lander', 'Rover', 'Landing site'],\n\t\t\tgroup: 'spacecraft'\n\t\t});\n\t\tlayerManager.addLayer('starfield', {\n\t\t\tname: 'Star Field',\n\t\t\tdefaultVisibility: false\n\t\t});\n\t\tlayerManager.addLayer('heliosphere', {\n\t\t\tname: 'Heliosphere',\n\t\t\tdefaultVisibility: false\n\t\t});\n\t\tlayerManager.addLayer('constellations', {\n\t\t\tname: 'Constellations',\n\t\t\tcategories: 'Constellations',\n\t\t\tdefaultVisibility: false\n\t\t});\n\n\t\t// Camera Manager\n\t\tconst cameraManager = this.addManager('camera', CameraManager, this._scene);\n\t\tthis._cameraScripts.setCameraManager(cameraManager);\n\t\tcameraManager.createViewportAndCamera(this._scene);\n\n\t\t// Search manager\n\t\tthis.addManager('search', SearchManager, {\n\t\t\tkeys: [\n\t\t\t\t{\n\t\t\t\t\tname: 'iauName',\n\t\t\t\t\tweight: 0.99\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'displayName',\n\t\t\t\t\tweight: 0.98\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'altName',\n\t\t\t\t\tweight: 0.98\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'keywords',\n\t\t\t\t\tweight: 0.3\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'category',\n\t\t\t\t\tweight: 0.3\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t// Comparison Manager\n\t\tthis.addManager('comparison', ComparisonManager);\n\n\t\t// Label manager\n\t\tconst labelManagerClass = Types.get('LabelManager');\n\t\tconst labelManager = this.addManager('label', labelManagerClass, this._scene);\n\t\tlabelManager.setWeights(contentMgr.getEntityList());\n\t\tlabelManager.setAlgorithm(labelManagerClass.Quadtree);\n\n\t\t// Selection Manager\n\t\tconst selectionManagerClass = Types.get('SelectionManager');\n\t\tconst selectionManager = this.addManager('selection', selectionManagerClass, this._scene);\n\t\tselectionManager.init3Dcallback(cameraManager);\n\t\tlabelManager.registerCallback('labelclicked', selectionManager.setSuppress);\n\n\t\t// Route manager\n\t\tconst routeManager = this.addManager('router', RouteManager);\n\t\trouteManager.setValidQueries(['time', 'rate']);\n\t\trouteManager.init();\n\t\trouteManager.addConfigs({\n\t\t\tembed: undefined,\n\t\t\tkiosk: undefined,\n\t\t\tlogo: undefined,\n\t\t\tdetailPanel: undefined,\n\t\t\tcontent: undefined,\n\t\t\tfeatured: undefined,\n\t\t\tmenu: undefined,\n\t\t\tlocked: undefined,\n\t\t\tsurfaceMapTiling: undefined,\n\t\t\thd: undefined,\n\t\t\tlighting: undefined,\n\t\t\thideExternalLinks: undefined,\n\t\t\thideFullScreenToggle: undefined,\n\t\t\tmaxSessionTime: undefined,\n\t\t\tmaxInactivityTime: undefined,\n\t\t\tforceRestart: undefined,\n\t\t\tnoKeyboard: undefined,\n\t\t\tsearch: undefined,\n\t\t\tcollapseSettingsOptions: undefined,\n\t\t\tshareButton: undefined,\n\t\t\tspout: undefined,\n\t\t\tspoutGlobe: undefined,\n\t\t\tspoutRenderWidth: undefined,\n\t\t\tspoutGlobeDistance: undefined,\n\t\t\tspoutTarget: undefined,\n\t\t\tspoutFontSize: undefined,\n\t\t\tspoutLonAngleOffset: undefined,\n\t\t\tspoutAlignToNorthPole: undefined,\n\t\t\tinteractPrompt: undefined\n\t\t});\n\n\t\t// Trail manager\n\t\tconst trailManagerClass = Types.get('TrailManager');\n\t\tconst trailManager = this.addManager('trail', trailManagerClass, this._scene);\n\t\tlabelManager.registerCallback('hoverchange', trailManager.onHoverChange);\n\n\t\t// Spout manager\n\t\tthis.addManager('spout', SpoutManager);\n\n\t\t// Add callbacks for layer manager\n\t\tlayerManager.addCallback('trails', trailManager.toggleTrails);\n\t\tlayerManager.addCallback('orbits', trailManager.toggleOrbits);\n\t\tlayerManager.addCallback('labels', labelManager.toggleLabels);\n\t\tlayerManager.addCallback('icons', labelManager.toggleIcons);\n\t\tlayerManager.addCallback('starfield', sceneManager.toggleStarfield);\n\t\tlayerManager.addCallback('heliosphere', sceneManager.toggleHeliosphere);\n\t\tlayerManager.addCallback('constellations', sceneManager.toggleConstellations);\n\n\t\t// Add views for this app\n\t\tthis.addViews();\n\n\t\t// Setup viewport and camera if needed\n\t\tthis.setUpViewportAndCamera();\n\n\t\t// Define main scene\n\t\t// Populate scene with entities\n\t\tawait this.setUpScene();\n\n\t\t// Setup managers\n\t\tthis.setUpManagers();\n\n\t\t// Setup components\n\t\tawait this.setUpComponents();\n\n\t\t// Add keyboard shortcuts\n\t\tthis.addShortcuts();\n\n\t\t// Run update every frame\n\t\tthis._pioneer.addCallback(this.update, true);\n\t}\n\n\t/**\n\t * Set up managers for app.\n\t */\n\tsetUpManagers() {\n\t\tconst scene = this.scene;\n\t\tconst trailManager = this.getManager('trail');\n\t\tconst timeManager = this.getManager('time');\n\n\t\t// Set the default time limits and time limits for the app\n\t\tlet { limits } = this._timeInfo;\n\t\tif (!limits) {\n\t\t\tlimits = {\n\t\t\t\tmin: moment(AppUtils.constants.minDate),\n\t\t\t\tmax: moment(AppUtils.constants.maxDate)\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tlimits.min = !('min' in limits) || limits.min === '-Infinity'\n\t\t\t\t? moment(AppUtils.constants.minDate)\n\t\t\t\t: this.getManager('time').parseTime(limits.min);\n\t\t\tlimits.max = !('max' in limits) || limits.max === 'Infinity'\n\t\t\t\t? moment(AppUtils.constants.maxDate)\n\t\t\t\t: this.getManager('time').parseTime(limits.max);\n\t\t}\n\t\ttimeManager.setDefaultLimits(limits);\n\t\ttimeManager.setLimits(limits);\n\n\t\t// Set the scene for managers\n\t\tthis.getManager('label').setScene(scene);\n\t\tthis.getManager('selection').setScene(scene);\n\t\ttrailManager.setScene(scene);\n\n\t\t// Update trails to new entities\n\t\ttrailManager.ids = Array.from(this.getManager('scene').getEntitiesNames());\n\t\ttrailManager.setColor(trailManager.ids);\n\t}\n\n\t/**\n\t * COMPONENTS --------------------------------------------------------------\n\t */\n\n\t/**\n\t * Adds a component to the app.\n\t * @template {BaseComponent} ComponentType\n\t * @param {string} name - Unique name for the component\n\t * @param {new (baseApp: BaseApp, ...args: any[]) => ComponentType} TypeConstructor - Class name\n\t * @param {any[]} args - List of arguments\n\t * @returns {Promise<ComponentType>}\n\t */\n\tasync addComponent(name, TypeConstructor, ...args) {\n\t\t// TODO Check for TypeConstructor is string to use Types.get\n\t\tif (this._components[name] !== undefined) {\n\t\t\tthrow new Error(`Component ${name} was already added.`);\n\t\t}\n\t\tconst component = new TypeConstructor(this, ...args);\n\t\tthis._components[name] = component;\n\t\t// Check for async init function\n\t\tawait component.init();\n\t\treturn component;\n\t}\n\n\t/**\n\t * Create a component of a class for a placeholder in an element.\n\t * @template {BaseComponent} ComponentType\n\t * @param {object} componentClass\n\t * @param {string} componentClass.name - Unique name for the component.\n\t * @param {new (baseApp: BaseApp, ...args: any[]) => ComponentType} componentClass.type - Class name.\n\t * @param {any[]} [componentClass.args=[]] - List of arguments except options for class constructor.\n\t * @param {object} [componentClass.options={}] - Options for class constructor, passed as the last argument.\n\t * @param {HTMLElement | Document} [element=document] - Element to search for all placeholders inside it.\n\t * @param {HTMLElement} [placeholder=null] - Placeholder element to replace component with.\n\t * @returns {Promise<ComponentType | Error>}\n\t */\n\tasync addComponentWithPlaceholder(componentClass, element = document, placeholder = null) {\n\t\tif (!componentClass.args) {\n\t\t\tcomponentClass.args = [];\n\t\t}\n\t\tif (!componentClass.options) {\n\t\t\tcomponentClass.options = {};\n\t\t}\n\t\t// Get placeholder element with same dataset name as component name\n\t\t// Or get first placeholder element with component's class name as tag\n\t\tif (!placeholder) {\n\t\t\tconst placeholders = Array.from(element.getElementsByTagName(componentClass.type.name));\n\t\t\t// Find a matching placeholder\n\t\t\tplaceholder = /** @type {HTMLElement} */(placeholders.find(item => item instanceof HTMLElement && item.id === componentClass.name));\n\t\t\tif (!placeholder && placeholders[0] instanceof HTMLElement) {\n\t\t\t\tplaceholder = placeholders[0];\n\t\t\t}\n\t\t\tif (!placeholder) {\n\t\t\t\treturn Promise.reject(new Error(`addComponentWithPlaceholder: There is no placeholder element for ${componentClass.type}`));\n\t\t\t}\n\t\t}\n\t\t// Get options from placeholder's dataset\n\t\tObject.assign(componentClass.options, AppUtils.convertObjType({ ...placeholder.dataset }));\n\t\t// Create and add component to app\n\t\tconst component = await this.addComponent(componentClass.name, componentClass.type, ...componentClass.args, componentClass.options);\n\t\t// Replace placeholder element with component element in UI\n\t\tcomponent.setParent(placeholder.parentElement, placeholder);\n\n\t\treturn component;\n\t}\n\n\t/**\n\t * Removes a component from the app.\n\t * @param {string} name - Unique name for the component\n\t * @returns {boolean} - Succeed or fail to remove\n\t */\n\tremoveComponent(name) {\n\t\tif (this._components[name] !== undefined) {\n\t\t\tthis._components[name].destroy();\n\t\t\tdelete this._components[name];\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Remove app components.\n\t */\n\tremoveComponents() {\n\t\tfor (let i = 0; i < this._componentInfo.length; i++) {\n\t\t\tthis.removeComponent(this._componentInfo[i].name);\n\t\t}\n\t}\n\n\t/**\n\t * Gets a component.\n\t * @param {string} name - Unique name\n\t * @returns {BaseComponent}\n\t */\n\tgetComponent(name) {\n\t\tif (this._components[name] !== undefined) {\n\t\t\treturn this._components[name];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets all components.\n\t * @returns {object}\n\t */\n\tgetComponents() {\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Creates static UI components.\n\t */\n\tasync createComponents() {\n\t\tconst components = [\n\t\t\t{ name: 'loadIcon', type: 'LoadIcon' },\n\t\t\t{ name: 'overlay', type: 'Overlay', options: { isOpenButtonVisible: false } }\n\t\t];\n\n\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\tconst { name, type, hasPlaceholder, args, options, postCreationFunction } = components[i];\n\t\t\tconst componentClass = Types.get(type);\n\t\t\tconst component = await componentClass.create(this, name, componentClass, hasPlaceholder, args, options);\n\t\t\tif (postCreationFunction) {\n\t\t\t\tpostCreationFunction(this, component);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set up keyboard shortcuts.\n\t */\n\taddShortcuts() {\n\t\t// Add eventListener for press of 'f' key as a shortcut to enter search\n\t\tconst desktopSearch = this.getComponent('searchDesktop');\n\t\tconst searchShortcut = 'KeyF'; // NOTE: In other apps, this is normally the slash '/' key.\n\n\t\tif (desktopSearch) {\n\t\t\tdocument.addEventListener('keyup', event => {\n\t\t\t\t// Key F: focus search\n\t\t\t\tif (event.code === searchShortcut) {\n\t\t\t\t\tif (!this.isSearching) {\n\t\t\t\t\t\tdesktopSearch.open();\n\t\t\t\t\t\tdesktopSearch._children.input.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Set up app components.\n\t */\n\tasync setUpComponents() {\n\t\tthis.dynamicElement.innerHTML = this.constructor.html;\n\t\tfor (let i = 0; i < this._componentInfo.length; i++) {\n\t\t\tconst { name, type, hasPlaceholder, args, options, postCreationFunction } = this._componentInfo[i];\n\t\t\tconst componentClass = Types.get(type);\n\t\t\tconst component = await componentClass.create(this, name, componentClass, hasPlaceholder, args, options);\n\t\t\tif (postCreationFunction) {\n\t\t\t\tpostCreationFunction(this, component);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * VIEWS -------------------------------------------------------------------\n\t */\n\n\t/**\n\t * Gets all views.\n\t * @returns {Object<string, BaseView>}\n\t */\n\tgetViews() {\n\t\treturn this._views;\n\t}\n\n\t/**\n\t * Add views to app.\n\t */\n\taddViews() {\n\t\t// Add views\n\t\tfor (let i = 0; i < this._viewInfo.length; i++) {\n\t\t\tconst viewInfo = this._viewInfo[i];\n\t\t\tthis.addView(viewInfo.name, this._viewClasses[viewInfo.class], this._element, viewInfo.components);\n\t\t}\n\t}\n\n\t/**\n\t * Remove views from app.\n\t */\n\tremoveViews() {\n\t\t// Remove views\n\t\tfor (const view in this._views) {\n\t\t\tthis.removeView(view);\n\t\t}\n\t}\n\n\t/**\n\t * Gets a view.\n\t * @param {string} name - Unique name\n\t * @returns {BaseView}\n\t */\n\tgetView(name) {\n\t\tif (this._views[name] !== undefined) {\n\t\t\treturn this._views[name];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds a view component to app.\n\t * @param {string} name - Unique name for the view component\n\t * @param {typeof BaseComponent} TypeConstructor - Class name\n\t * @param {...} args - List of arguments\n\t * @returns {object}\n\t */\n\taddView(name, TypeConstructor, ...args) {\n\t\tif (this._views[name] === undefined) {\n\t\t\tthis._views[name] = new TypeConstructor(this, ...args);\n\t\t}\n\t\treturn this._views[name];\n\t}\n\n\t/**\n\t * Removes a view component from app.\n\t * @param {string} name - Unique name for the view component\n\t */\n\tremoveView(name) {\n\t\tif (this._views[name] !== undefined) {\n\t\t\tdelete this._views[name];\n\t\t}\n\t}\n\n\t/**\n\t * SCENE AND CAMERA --------------------------------------------------------\n\t */\n\n\t/**\n\t * Set up scene for app.\n\t */\n\tasync setUpScene() {\n\t\tif (this._sceneInfo === undefined) {\n\t\t\tconsole.error('App._sceneInfo needs to be set.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Set maximum zoom distance in camera manager\n\t\tthis.getManager('camera').defaultMaxDistance = this._sceneInfo.zoomMax || 2e18;\n\n\t\t// Add all of the entity names to the scene manager and call the update.\n\t\tconst sceneManager = /** @type {SceneManager} */(this.getManager('scene'));\n\t\tsceneManager.addEntitiesFromSceneInfo(this._sceneInfo);\n\n\t\tconst labelManager = /** @type {LabelManager} */(this.getManager('label'));\n\t\tconst trailManager = /** @type {TrailManager} */(this.getManager('trail'));\n\t\tconst cameraManager = /** @type {CameraManager} */(this.getManager('camera'));\n\n\t\t// Setup the entity load and unload callbacks.\n\t\tsceneManager.addEntityLoadedCallback(labelManager.setUpLabel);\n\t\tsceneManager.addEntityLoadedCallback(trailManager.setUpTrail);\n\t\tsceneManager.addEntityLoadedCallback(labelManager.setUpIcon);\n\t\tsceneManager.addEntityLoadedCallback(cameraManager.addDynamicEnvMap);\n\n\t\t// Specific entity loaded callback.\n\t\tsceneManager.addEntityLoadedCallback(entity => {\n\t\t\tif (entity.getName() === 'sc_mars_science_laboratory') {\n\t\t\t\tentity.get('div').setFadeWhenCloseToEntity('mars');\n\t\t\t}\n\t\t\telse if (entity.getName() === 'sc_mars_2020') {\n\t\t\t\tentity.get('div').setFadeWhenCloseToEntity('mars');\n\t\t\t}\n\t\t});\n\n\t\tsceneManager.addEntityWillBeUnloadedCallback(labelManager.removeLabel);\n\n\t\t// Run an update once.\n\t\tsceneManager.update();\n\n\t\tthis.scene = this.getManager('scene').main;\n\n\t\t// Disable heliosphere by default\n\t\tthis.scene.get('sun', 'model')?.setEnabled(false);\n\t}\n\n\t/**\n\t * Set up viewport and camera for app.\n\t */\n\tsetUpViewportAndCamera() {\n\t\tconst scene = this.getManager('scene').main;\n\t\tconst camera = this.getManager('camera');\n\t\tcamera.createViewportAndCamera(scene);\n\t\tthis.cameraScripts.scene = scene;\n\t\tthis.cameraScripts.cameraEntity = camera.cameraEntity;\n\t}\n\n\t/**\n\t * UPDATE CALLBACKS --------------------------------------------------------\n\t */\n\n\t/**\n\t * Set up callback function called every frame.\n\t */\n\tsetUpUpdates() {\n\t\tthis.addUpdate(this.getManager('scene').update);\n\t\tthis.addUpdate(this.getManager('label').update);\n\t\tthis.addUpdate(this.getManager('camera').update);\n\t}\n\n\t/**\n\t * Adds a callback function to the list of updates called every frame.\n\t * @param {Function} callback\n\t */\n\taddUpdate(callback) {\n\t\tif (typeof callback === 'function') {\n\t\t\tthis._updates.push(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a callback function to the list of updates called every frame.\n\t * @param {Function} callback\n\t */\n\tremoveUpdate(callback) {\n\t\tconst index = this._updates.indexOf(callback);\n\t\tif (index < 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updates.splice(index, 1);\n\t}\n\n\t/**\n\t * Calls all the functions to update every frame.\n\t */\n\tupdate() {\n\t\tfor (let i = 0; i < this._updates.length; i++) {\n\t\t\tconst callback = this._updates[i];\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * HELPER FUNCTIONS --------------------------------------------------------\n\t */\n\n\t/**\n\t * Bind functions to class.\n\t * @param {string[]} [fns=[]] - Names of functions.\n\t */\n\tbindFunctions(fns = []) {\n\t\tconst thisAsObject = /** @type {Object<string, any>} */(this);\n\t\tfor (let i = 0; i < fns.length; i++) {\n\t\t\tconst fn = fns[i];\n\t\t\tthisAsObject[fn] = thisAsObject[fn].bind(this);\n\t\t}\n\t}\n\n\t/**\n\t *\tFades out a then removes the loading-screen if any\n\t */\n\tendLoadingScreen() {\n\t\tconst loadingScreen = document.getElementById('loading-screen');\n\n\t\tif (loadingScreen) {\n\t\t\tconst duration = 400;\n\t\t\tloadingScreen.style.transition = `opacity ${duration / 1000}s ease-out`;\n\t\t\tloadingScreen.style.opacity = '0';\n\t\t\tsetTimeout(() => {\n\t\t\t\tloadingScreen.remove();\n\t\t\t}, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Set up routes for app.\n\t * @abstract\n\t */\n\tsetUpRoutes() {\n\t}\n\n\t/**\n\t * Returns true if touch drag.\n\t * @returns {boolean}\n\t */\n\tisDragging() {\n\t\treturn this._dragging;\n\t}\n\n\t/**\n\t * Return true if more than one touch is pressed.\n\t * @returns {boolean}\n\t */\n\tisTouchMax() {\n\t\treturn this._touchMax;\n\t}\n\n\t/**\n\t * EVENT HANDLERS ----------------------------------------------------------\n\t */\n\n\t/**\n\t * Resize body height to window innerHeight.\n\t */\n\tresize() {\n\t\tconst vh = window.innerHeight;\n\t\tdocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\t\tdocument.body.style.height = vh + 'px';\n\n\t\t// Determine whether to update touch and hover properties.\n\t\tconst isTouch = AppUtils.isTouch();\n\t\tconst canHover = AppUtils.canHover();\n\n\t\tif (this.isTouch !== isTouch) {\n\t\t\tdocument.body.classList.toggle('touch', isTouch);\n\t\t\tthis.isTouch = isTouch;\n\t\t}\n\n\t\tif (this.canHover !== canHover) {\n\t\t\tdocument.body.classList.toggle('hover', canHover);\n\t\t\tthis.canHover = canHover;\n\t\t}\n\n\t\t// For late-update browsers\n\t\tsetTimeout(() => {\n\t\t\tif (vh !== window.innerHeight) {\n\t\t\t\tconst newVH = window.innerHeight;\n\t\t\t\tdocument.documentElement.style.setProperty('--vh', `${newVH}px`);\n\t\t\t\tdocument.body.style.height = newVH + 'px';\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Handles touchstart event.\n\t * @param {Event} event\n\t */\n\tonTouchStart(event) {\n\t\tthis._touchCount++;\n\t\tthis._touchMax = this._touchCount > 1;\n\t\tconst touchEvent = event.changedTouches[0];\n\t\tthis._touchStartPos.x = touchEvent.pageX;\n\t\tthis._touchStartPos.y = touchEvent.pageY;\n\t\tthis._dragging = false;\n\n\t\t// Check if element is scrollable or child of scrollable\n\t\tthis._scrollable = false;\n\t\tlet element = /** @type {Element} */(event.target);\n\t\twhile (element.parentElement !== null) {\n\t\t\tif (element.classList.contains('scrollable')) {\n\t\t\t\tthis._scrollable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Handles touchmove event.\n\t * @param {Event} event\n\t */\n\tonTouchMove(event) {\n\t\tconst touchEvent = event.changedTouches[0];\n\t\tconst pressedPositionDistance = Math.max(Math.abs(touchEvent.pageX - this._touchStartPos.x), Math.abs(touchEvent.pageY - this._touchStartPos.y));\n\t\tif (pressedPositionDistance > 5) {\n\t\t\tthis._dragging = true;\n\t\t}\n\n\t\t// Prevent pinch zoom on the page\n\t\tif (!this._scrollable) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Handles touchend event.\n\t * @param {Event} event\n\t */\n\tonTouchEnd(event) {\n\t\tthis._touchCount--;\n\t\tif (event.touches.length === 0) {\n\t\t\tthis._touchMax = false;\n\t\t}\n\t\tthis._dragging = false;\n\t\tthis._scrollable = false;\n\t}\n\n\t/**\n\t * Gets the Pioneer version.\n\t * @returns {string}\n\t */\n\tgetPioneerVersion() {\n\t\treturn this.pioneer.getVersion();\n\t}\n\n\t/**\n\t * Gets the eyes version.\n\t * @returns {string}\n\t */\n\tgetEyesVersion() {\n\t\treturn EyesVersion;\n\t}\n}\n\n// Initialize the app when the window loads.\nwindow.addEventListener('load', async () => {\n\ttry {\n\t\tconst app = new BaseApp._appClass();\n\t\tapp.init();\n\t}\n\tcatch (error) {\n\t\tdocument.body.innerHTML = '';\n\t\tthrow error;\n\t}\n});\n\n/**\n * The subclass of BaseApp to be instantiated.\n * @type {typeof BaseApp}\n */\nBaseApp._appClass = BaseApp;\n\nwindow.Pioneer = Pioneer;\nwindow.PioneerScripts = PioneerScripts;\n","import './css/animation.css';\nimport './css/camera_follow.css';\nimport './css/color.css';\nimport './css/font.css';\nimport './css/sprite.css';\nimport './css/icon.css';\nimport './css/grid_layout.css';\nimport './css/layout.css';\nimport './css/grid.css';\nimport './css/label.css';\nimport './css/style.css';\nimport './css/scrollbar.css';\nimport './css/components.css';\n","import moment from 'moment-timezone';\nimport {\n\tSceneHelpers\n} from 'pioneer-scripts';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from './internal';\n\n/**\n * The base view.\n */\nexport class BaseView extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {HTMLElement} element\n\t * @param {Array} [components=[]] - Components of a view\n\t */\n\tconstructor(app, element, components = []) {\n\t\tsuper(app, element);\n\n\t\t/**\n\t\t * All child components of this view.\n\t\t * @type {string[]}\n\t\t * @private\n\t\t */\n\t\tthis._components = [...components];\n\n\t\t/**\n\t\t * List of valid query keys for this view.\n\t\t * @type {string[]}\n\t\t * @private\n\t\t */\n\t\tthis._validQueries = [];\n\n\t\t/**\n\t\t * Rules for validating queries.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._rules = {};\n\n\t\t/**\n\t\t * Camera's target.\n\t\t * @type {string}\n\t\t */\n\t\tthis._target = null;\n\n\t\t// View should be disabled by default, and enabled by router\n\t\tthis._enabled = false;\n\n\t\tthis.bindFunctions(['resize', 'updateVisibility', 'toggleViewUI']);\n\t}\n\n\t/**\n\t * Gets the app as an BaseApp.\n\t * @returns {BaseApp}\n\t * @override\n\t */\n\tget app() {\n\t\treturn /** @type {BaseApp} */(super.app);\n\t}\n\n\t/**\n\t * Shows control panel (clock, time controls).\n\t */\n\t_showControls() {\n\t}\n\n\t/**\n\t * Hides control panel (clock, time controls).\n\t */\n\t_hideControls() {\n\t}\n\n\t/**\n\t * Function to check if controls should be hidden or not.\n\t * @returns {boolean}\n\t */\n\t_shouldHideControls() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Updates component visibility.\n\t */\n\tupdateVisibility() {\n\t\tconst showUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tif (!showUI) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._shouldHideControls()) {\n\t\t\tthis._hideControls();\n\t\t}\n\t\telse {\n\t\t\tthis._showControls();\n\t\t}\n\t}\n\n\t/**\n\t * Resize handler. Triggers on window resize event.\n\t */\n\tresize() {\n\t\tthis.updateVisibility();\n\t}\n\n\t/**\n\t * Toggles UI for this view.\n\t */\n\ttoggleViewUI() {\n\t}\n\n\t/**\n\t * Check if view should reset enable/disable status of each component.\n\t * Todo: see naming note below.\n\t * @returns {boolean}\n\t */\n\t_shouldResetStatus() {\n\t\t// If the UI is disabled dont reset the status\n\t\treturn this._app.getManager('layer').getLayer('ui').visible;\n\t}\n\n\t/**\n\t * Reset status of child components.\n\t * ToDo: The name \"resetStatus\" seems a little generic.\n\t * We're looping through all components and enabling/disabling them. Maybe \"setComponentsAbility\"?\n\t * @param {Array} [unsubscribed=[]] - List of unsubscribed components that won't be enabled/disabled by the view.\n\t */\n\t_resetStatus(unsubscribed = []) {\n\t\tif (this._shouldResetStatus()) {\n\t\t\tconst allComponents = Object.keys(this._app.getComponents());\n\t\t\tfor (let i = allComponents.length - 1; i >= 0; i--) {\n\t\t\t\tconst component = allComponents[i];\n\t\t\t\tif (unsubscribed.includes(component)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis._app.getComponent(component).setEnabled(this._components.includes(component));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register all callbacks for view.\n\t */\n\tregisterCallbacks() {\n\t\tthis._app.getManager('layer').addCallback('ui', this.toggleViewUI);\n\t}\n\n\t/**\n\t * Remove all callbacks for view.\n\t */\n\tremoveCallbacks() {\n\t\tthis._app.getManager('layer').removeCallback('ui', this.toggleViewUI);\n\t}\n\n\t/**\n\t * Called when entering the view.\n\t * @param {object} params\n\t * @param {Array} [unsubscribed=[]] - List of unsubscribed components that won't be enabled/disabled by the view.\n\t */\n\tasync onEnter(params, unsubscribed = []) {\n\t\t// Check if route was canceled\n\t\tif (params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._resetStatus(unsubscribed);\n\n\t\twindow.addEventListener('resize', this.resize);\n\t\tthis.registerCallbacks();\n\n\t\tconst className = this._app.getManager('router').currentView + '-view';\n\t\tdocument.body.classList.add(className);\n\t\t// Lock navigational actions\n\t\tif (this._app.getManager('router').configs.locked) {\n\t\t\tdocument.body.classList.add('locked');\n\t\t\tthis._app.getManager('label').setClickable(false);\n\t\t\tthis._app.getManager('selection').setClickable(false);\n\t\t}\n\t}\n\n\t/**\n\t * Execute actions on full route change.\n\t * @param {object} params - Parameters and queries from url\n\t */\n\tasync onRouteChange(params) {\n\t\tawait this.before(params);\n\n\t\t// Check if route was canceled\n\t\tif (params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset variables\n\t\tthis._reset(params);\n\n\t\t// Update resources\n\t\tawait this._updateResources(params);\n\n\t\t// Check if route was canceled\n\t\tif (params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Process query params like time and time rate.\n\t\t// NOTE: Is there a reason processQuery is here as well as onQueryChange?\n\t\tparams.setTimeLimits = true;\n\t\tawait this.processQuery(params);\n\n\t\t// Update components\n\t\tawait this._updateComponentsVisibility(params);\n\t\t// Check if route was canceled\n\t\tif (params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if entities are ready\n\t\tawait this._checkReady(params);\n\n\t\t// Update camera\n\t\t// TODO: Check when we need to update camera\n\t\ttry {\n\t\t\tawait this._updateCamera(params);\n\t\t\tthis._updateLoading(params);\n\t\t}\n\t\tfinally {\n\t\t\tawait this.after(params);\n\t\t}\n\n\t\tconst { spout } = this.app.getManager('router').configs;\n\t\tif (spout === true) {\n\t\t\tconst { spoutGlobe, spoutRenderWidth, spoutGlobeDistance, spoutTarget, spoutFontSize, spoutLonAngleOffset, spoutAlignToNorthPole } = this.app.getManager('router').configs;\n\t\t\tconst spoutTargetEntity = spoutTarget || await this.app.getManager('spout').getSpoutCameraTargetEntity(params);\n\t\t\tthis.app.getManager('spout').enableSpout(spoutGlobe, spoutRenderWidth, spoutGlobeDistance, spoutTargetEntity, spoutFontSize, spoutLonAngleOffset, spoutAlignToNorthPole);\n\t\t}\n\t}\n\n\t/**\n\t * On query change.\n\t * Called when query has changed but not the route.\n\t * @param {object} params\n\t */\n\tasync onQueryChange(params) {\n\t\t// Check if route was canceled\n\t\tif (params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Process query params like time and time rate\n\t\tawait this.processQuery(params);\n\t}\n\n\t/**\n\t * Validate queries.\n\t * @param {object} input\n\t * @returns {boolean} `true` if valid, otherwise `false`.\n\t */\n\tvalidateQuery(input) {\n\t\t// Make a copy so it won't modify original query.\n\t\tconst queries = { ...input };\n\t\tconst keys = Object.keys(queries);\n\t\tconst newQueries = {};\n\t\tconst isInvalid = {};\n\t\tconst routeManager = this._app.getManager('router');\n\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key = keys[i];\n\t\t\t// If there is no rule, remove from query and skip\n\t\t\tif (!(key in this._rules)) {\n\t\t\t\tdelete queries[key];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Validate a query against rule value\n\t\t\tconst rule = this._rules[key];\n\t\t\tconst valid = typeof rule.value === 'function'\n\t\t\t\t? rule.value(queries[key])\n\t\t\t\t: rule.value === queries[key];\n\t\t\t// If not valid\n\t\t\tif (!valid) {\n\t\t\t\tisInvalid[key] = queries[key];\n\t\t\t\t// If there's a redirect rule call it.\n\t\t\t\tif (typeof this._rules.redirect === 'function') {\n\t\t\t\t\tthis._rules.redirect(queries[key]);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// If there is a route, navigate and exit\n\t\t\t\tif ('route' in rule) {\n\t\t\t\t\trouteManager.navigate(rule.route);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Else if there is default value, store in new query\n\t\t\t\telse if ('default' in rule) {\n\t\t\t\t\tnewQueries[key] = rule.default;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Navigate to default values if there are any\n\t\tif (!AppUtils.isEmptyObject(newQueries)) {\n\t\t\trouteManager.navigate({ ...queries, ...newQueries });\n\t\t\treturn false;\n\t\t}\n\n\t\t// If invalid, but no route or default value, use default handler and exit\n\t\tif (!AppUtils.isEmptyObject(isInvalid)) {\n\t\t\tthis._handleError(`validateQuery: Invalid input - ${JSON.stringify(isInvalid)}`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Process the query from path.\n\t * Only consider Pioneer-related and common queries, not app-unique ones.\n\t * @param {object} query\n\t * @param {string} query.time - Time string that can be parsed by moment. E.g. time=2020-153T17:32:44.550\n\t * @param {string} query.rate - Time rate in second that can be parsed by parseInt. E.g. rate=120 (sec/sec)\n\t */\n\tasync processQuery(query) {\n\t\t/**\n\t\t * Note: Maybe we could add an _updateTimeLimits method here.\n\t\t */\n\n\t\t// Set time\n\t\tawait this._updateTime(query);\n\n\t\t// Set time rate\n\t\tthis._updateTimeRate(query);\n\n\t\tconst router = this._app.getManager('router');\n\t\tconst prevQuery = router.parseQuery(router.previousRoute?.query);\n\n\t\t// Go thru all query callback keys in the router and check if the params contain the query.\n\t\tfor (const queryKey of Object.keys(router._queryCallbacks)) {\n\t\t\tconst currQueryVal = query[queryKey];\n\t\t\tconst prevQueryVal = prevQuery[queryKey];\n\n\t\t\t// If we have query values for previous of current query, loop thru the callbacks, call them, and pass the prev and curr query valuez.\n\t\t\tif (currQueryVal || prevQueryVal) {\n\t\t\t\trouter._queryCallbacks[queryKey].forEach(callbackFn => callbackFn(currQueryVal, prevQueryVal));\n\t\t\t}\n\t\t}\n\n\t\t// Update layer panel\n\t\tconst layerManager = this._app.getManager('layer');\n\t\tconst layerPanel = this._app.getComponent('layerPanel');\n\t\tconst layerQueries = {\n\t\t\tlayerUI: 'ui',\n\t\t\tlayerTrails: 'trails',\n\t\t\tlayerOrbits: 'orbits',\n\t\t\tlayerLabels: 'labels',\n\t\t\tlayerIcons: 'icons',\n\t\t\tlayerPlanets: 'planets',\n\t\t\tlayerAsteroids: 'asteroids',\n\t\t\tlayerComets: 'comets',\n\t\t\tlayerDwarfPlanets: 'dwarfPlanets',\n\t\t\tlayerConstellations: 'constellations',\n\t\t\tlayerSpacecraft: 'spacecraft'\n\t\t};\n\t\tfor (const key in layerQueries) {\n\t\t\tif (key in query) {\n\t\t\t\tconst layer = layerQueries[key];\n\t\t\t\tif (query[key] === 'disable') {\n\t\t\t\t\tlayerPanel?.setCategoryEnabled(layer, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (layerPanel?.isCategoryEnabled(layer)) {\n\t\t\t\t\t\tif (query[key] === 'show') {\n\t\t\t\t\t\t\tif (!layerManager.getLayer(layer).visible) {\n\t\t\t\t\t\t\t\tlayerPanel.toggleLayer(layer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (query[key] === 'hide') {\n\t\t\t\t\t\t\tif (layerManager.getLayer(layer).visible) {\n\t\t\t\t\t\t\t\tlayerPanel.toggleLayer(layer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update title if title manager is initialized.\n\t\tthis.app.getManager('title')?.updateTitle(router.currentRoute);\n\t}\n\n\t/**\n\t * Display error message and reroute to previous url.\n\t * @param {string} [message=''] - Message for error\n\t * @throws {string}\n\t */\n\t_handleError(message = '') {\n\t\tconst err = new Error(message);\n\t\tconsole.error(err);\n\t\tconst router = this._app.getManager('router');\n\t\tif (router !== null) {\n\t\t\tlet url = this._app.getManager('router').previousRoute.url;\n\t\t\tif (!url) {\n\t\t\t\turl = this._app.getManager('router').homeRoute;\n\t\t\t}\n\t\t\tthis._app.getManager('router').navigate(url);\n\t\t}\n\t}\n\n\t/**\n\t * Called when exiting the view.\n\t * @param {object} params\n\t */\n\tonLeave(params) {\n\t\twindow.removeEventListener('resize', this.resize);\n\t\tthis.removeCallbacks();\n\n\t\tconst className = this._app.getManager('router').previousView + '-view';\n\t\tdocument.body.classList.remove(className);\n\n\t\tthis._app.getManager('selection').unselect();\n\t\tthis._app.getManager('scene').clearForceLoad();\n\t\tthis._validQueries.length && this._app.getManager('router').navigate({ __remove: this._validQueries });\n\t}\n\n\t/**\n\t * Takes router parameters and initialize view variables.\n\t * ToDo: \"reset\" is not a good method name for something that initializes view variables. Let's change this.\n\t * @param {object} params\n\t */\n\t_reset(params) {\n\t\tthis._app.getManager('scene').clearForceLoad();\n\t}\n\n\t/**\n\t * Update resources from managers and router parameters.\n\t * @param {object} params\n\t */\n\tasync _updateResources(params) {\n\t}\n\n\t/**\n\t * Update time rate from query.\n\t * @param {object} query\n\t */\n\t_updateTimeRate(query) {\n\t\tconst timeManager = this._app.getManager('time');\n\n\t\tif ('rate' in query) {\n\t\t\ttimeManager.setTimeRate(parseInt(query.rate));\n\t\t}\n\t\telse {\n\t\t\ttimeManager.resetTimeRate();\n\t\t}\n\t}\n\n\t/**\n\t * Update time with router parameters.\n\t * @param {object} params\n\t */\n\tasync _updateTime(params) {\n\t\tconst timeManager = this._app.getManager('time');\n\t\tconst routeManager = this._app.getManager('router');\n\t\tconst isStory = routeManager.currentRoute.url.includes('story');\n\t\tlet numSlides = 0;\n\t\tif (isStory && this._storyId) {\n\t\t\tconst story = this._app.getManager('content').getStory(this._storyId);\n\t\t\tnumSlides = story.slides.length;\n\t\t}\n\n\t\t/**\n\t\t * Note:\n\t\t * To improve readability, it would maybe make sense to update the time limits in a separate method, eg. _updateTimeLimits.\n\t\t * See note in processQuery method.\n\t\t */\n\t\t// Apply app limits:\n\t\t// If there's no target and if it's not a single slide story in case of custom timing (all single slide stories have custom timing)\n\t\t// OR\n\t\t// If it is a story, there's no target, and no storyId (some stories in asteroids do handle id's differently)\n\t\tif ((!this._target && (numSlides > 1)) || (isStory && !this._target && !this._storyId)) {\n\t\t\ttimeManager.resetMin();\n\t\t\ttimeManager.resetMax();\n\t\t}\n\n\t\tif (this._target) {\n\t\t\tawait this._updateTimeForTarget(params);\n\t\t}\n\t\telse if (params.time) {\n\t\t\tconst time = this._app.getManager('time').parseTime(params.time);\n\t\t\tif (time.isValid()) {\n\t\t\t\tthis._app.getManager('time').setTime(params.time);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove time query if invalid\n\t\t\t\tthis._app.getManager('router').navigate({ __remove: ['time'] });\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._app.getManager('time').setToNow();\n\t\t}\n\t}\n\n\t/**\n\t * Update time relative to a target.\n\t * @param {object} params\n\t * @param {boolean} waitForEntity\n\t */\n\tasync _updateTimeForTarget(params, waitForEntity = true) {\n\t\tconst timeManager = this._app.getManager('time');\n\n\t\tlet min = timeManager.timeLimits.min.clone();\n\t\tlet max = timeManager.timeLimits.max.clone();\n\n\t\tif (params.setTimeLimits) {\n\t\t\tconst defaultLimits = timeManager.getDefaultLimits();\n\t\t\tmin = defaultLimits.min.clone();\n\t\t\tmax = defaultLimits.max.clone();\n\n\t\t\twaitForEntity && await this._app.getManager('scene').get('main').getEntity(this._target).getLoadedPromise();\n\t\t\tconst coverage = this._app.getManager('scene').getCoverage(this._target);\n\n\t\t\t// Apply coverage limits\n\t\t\tif (coverage.min !== null) {\n\t\t\t\tmin = moment.max(min, coverage.min);\n\t\t\t}\n\t\t\tif (coverage.max !== null) {\n\t\t\t\tmax = moment.min(max, coverage.max);\n\t\t\t}\n\n\t\t\t// Apply description limits\n\t\t\tif (this._entityDesc?.dates?.start) {\n\t\t\t\tconst startTime = timeManager.parseTime(this._entityDesc.dates.start);\n\t\t\t\tmin = moment.max(startTime, min);\n\t\t\t}\n\t\t\tif (this._entityDesc?.dates?.end) {\n\t\t\t\tconst endTime = timeManager.parseTime(this._entityDesc.dates.end);\n\t\t\t\tmax = moment.min(endTime, max);\n\t\t\t}\n\n\t\t\t// Check for anormal times\n\t\t\tif (min.isAfter(max)) {\n\t\t\t\tconsole.error('Start date provided is after end date.');\n\t\t\t\tconst router = this._app.getManager('router');\n\t\t\t\tthis._app.getComponent('clock')?.setLimitMessage(1, 'time limit error');\n\t\t\t\t// This needs to be stored and cleared to prevent memory leak / delayed nav.\n\t\t\t\tsetTimeout(() => router.navigate('/'), 1000);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set time limits\n\t\t\ttimeManager.setMax(max);\n\t\t\ttimeManager.setMin(min);\n\t\t}\n\n\t\t// If we dont have time specified in query\n\t\t// Set the time to start\n\t\tif (!params.time && this._eventInfo?.start) {\n\t\t\t// E.g. /sc_cassini/events/eventID\n\t\t\tconst eventStart = timeManager.parseTime(this._eventInfo.start);\n\t\t\ttimeManager.setTime(moment.max(eventStart, min));\n\t\t}\n\t\telse if (!params.time) {\n\t\t\tconst now = this._app.getManager('time').getNow();\n\t\t\tif (now.isAfter(max) || now.isBefore(min)) {\n\t\t\t\ttimeManager.setTime(min);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttimeManager.setToNow();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst time = timeManager.parseTime(params.time);\n\t\t\tif (time.isAfter(max)) {\n\t\t\t\ttimeManager.setTime(max);\n\t\t\t\ttimeManager.setTimeRate(0);\n\t\t\t\tthis._app.getComponent('clock')?.setLimitMessage(1);\n\t\t\t}\n\t\t\telse if (time.isBefore(min)) {\n\t\t\t\ttimeManager.setTime(min);\n\t\t\t\tthis._app.getComponent('clock')?.setLimitMessage(-1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttimeManager.setTime(time);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update components and visibility with router parameters.\n\t * @param {object} params\n\t */\n\tasync _updateComponentsVisibility(params) {\n\t\tawait this._updateComponents(params);\n\t\t// Check if route was canceled\n\t\tif (params.cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.updateVisibility();\n\t}\n\n\t/**\n\t * Update components with router parameters.\n\t * @param {object} params\n\t */\n\tasync _updateComponents(params) {\n\t}\n\n\t/**\n\t * Update camera with router parameters.\n\t * @param {object} params\n\t */\n\tasync _updateCamera(params) {\n\t}\n\n\t/**\n\t * Update scene loading.\n\t * @param {object} params\n\t */\n\t_updateLoading(params) {\n\t\t// Update loading\n\t\tif (this._target !== null) {\n\t\t\tconst promises = [];\n\t\t\tconst loadComponents = ['model', 'wmts', 'spheroidLOD'];\n\t\t\tconst sceneManager = this._app.getManager('scene');\n\t\t\tconst contentManager = this._app.getManager('content');\n\n\t\t\t// If target is an instrument, add it's parent to the addLoading.\n\t\t\tconst entityInfoCategory = contentManager.getEntityInfo(this._target)?.category;\n\t\t\tif (entityInfoCategory) {\n\t\t\t\tif (entityInfoCategory === 'Instrument') {\n\t\t\t\t\tsceneManager.addLoading(sceneManager._scene.getEntity(this._target).getParent().getName(), 'view');\n\t\t\t\t}\n\t\t\t}\n\t\t\tsceneManager.addLoading(this._target, 'view');\n\t\t\tfor (let i = 0; i < loadComponents.length; i++) {\n\t\t\t\tconst component = sceneManager.get('main').get(this._target, loadComponents[i]);\n\t\t\t\tif (component !== null) {\n\t\t\t\t\t// Force loading of component\n\t\t\t\t\t// It will be cleared when leaving the view or reseting it\n\t\t\t\t\tsceneManager.forceLoad(component);\n\t\t\t\t\tpromises.push(sceneManager.componentIsReady(component));\n\t\t\t\t}\n\t\t\t}\n\t\t\tPromise.all(promises).then(() => {\n\t\t\t\tif (entityInfoCategory) {\n\t\t\t\t\tif (entityInfoCategory === 'Instrument') {\n\t\t\t\t\t\tsceneManager.removeLoading(sceneManager._scene.getEntity(this._target).getParent().getName(), 'view');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsceneManager.removeLoading(this._target, 'view');\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Checks if entities are ready.\n\t * @param {object} params\n\t */\n\tasync _checkReady(params) {\n\t\t// No need to check if we dont have a target\n\t\tif (this._target === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the objects are ready\n\t\tconst checklist = [];\n\t\tlet parent = this._target;\n\t\twhile (parent !== 'sun') {\n\t\t\tchecklist.push(parent);\n\t\t\tconst parentEntity = this._app.getManager('scene').get('main').get(parent)?.getParent();\n\t\t\tif (!parentEntity) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tparent = parentEntity.getName();\n\t\t}\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(this._app.getManager('scene').get('main'), checklist);\n\t\tawait this._app.pioneer.waitUntilNextFrame();\n\t}\n\n\t/**\n\t * Callback before all actions in onRouteChange.\n\t * @param {object} params\n\t */\n\tasync before(params) {\n\t}\n\n\t/**\n\t * Callback after all actions in onRouteChange.\n\t * @param {object} params\n\t */\n\tafter(params) {\n\t\t// Reset old target for layer manager\n\t\tthis._app.getManager('layer').resetTarget();\n\t\tthis._app.getManager('scene').clearTempEntities();\n\t}\n}\n","import {\n\tAppUtils,\n\tBaseApp\n} from '../internal';\n\n/**\n * @typedef ClassType\n * @property {object} isVisible - className for visible or hidden element\n * @property {string} [isVisible.true='active']\n * @property {string} [isVisible.false='hidden']\n * @property {object} fontSize\n * @property {string} fontSize.small\n * @property {string} fontSize.default\n * @property {string} fontSize.large\n */\n\n/**\n * @typedef Options\n * @property {HTMLElement} parent\n * @property {Object<string, any>} config\n * @property {Object<string, string>} params\n * @property {boolean} [isVisible]\n */\n\n/**\n * @typedef CallbackRegistryType\n * @property {object} emitter - The emitter to register callback to or remove callback from. Can be app, manager, view, or component instance.\n * @property {string} event - Emitter's event name to trigger the callback\n * @property {Function} callback - The callback to trigger on event\n */\n\n/** The base class for all components. */\nexport class BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {HTMLElement} element - The element given to the component\n\t * @param {Options} [options = { parent: null, config: {}, params: {} }] - Initial state and optional config\n\t */\n\tconstructor(app, element, options = { parent: null, config: {}, params: {}, isVisible: true }) {\n\t\t/**\n\t\t * The element given to the component.\n\t\t * @type {Element}\n\t\t */\n\t\tthis._element = element;\n\n\t\t/**\n\t\t * Application.\n\t\t * @type {BaseApp}\n\t\t * @private\n\t\t */\n\t\tthis._app = app;\n\n\t\t/**\n\t\t * Configurations of component.\n\t\t * @type {Object<string, any>}\n\t\t * @private\n\t\t */\n\t\tthis._config = options['config'] || {};\n\t\tdelete options['config'];\n\t\tif (!('hiddenMode' in this._config)) {\n\t\t\tthis._config.hiddenMode = 'hidden';\n\t\t}\n\n\t\t/**\n\t\t * Static variables to insert into element HTML text on initialization.\n\t\t * @type {Object<string, string>}\n\t\t */\n\t\tthis._params = options['params'] || {};\n\t\tdelete options['params'];\n\n\t\t// Default state of component's visibility\n\t\tif (!('isVisible' in options)) {\n\t\t\toptions['isVisible'] = false;\n\t\t}\n\n\t\t/**\n\t\t * Store className for element's state.\n\t\t * @type {ClassType}\n\t\t * @private\n\t\t */\n\t\tthis._class = {\n\t\t\tisVisible: {\n\t\t\t\ttrue: 'active',\n\t\t\t\tfalse: this._config.hiddenMode === 'hidden' ? 'hidden' : 'invisible'\n\t\t\t},\n\t\t\tfontSize: {\n\t\t\t\tsmall: 'small',\n\t\t\t\tdefault: '',\n\t\t\t\tlarge: ''\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The current states of component.\n\t\t * @type {Object<string, any>}\n\t\t * @private\n\t\t */\n\t\tthis._state = {\n\t\t\t...options,\n\t\t\tisVisibleClass: this._class.isVisible[options.isVisible ? 'true' : 'false'],\n\t\t\tfontSizeClass: this._class.fontSize.default\n\t\t};\n\n\t\t/**\n\t\t * The old states of component.\n\t\t * @type {Object<string, any>}\n\t\t * @private\n\t\t */\n\t\tthis._oldState = {};\n\n\t\t/**\n\t\t * The children/grandchildren of element.\n\t\t * @type {Object<string, Element>}\n\t\t */\n\t\tthis._children = {};\n\n\t\t/**\n\t\t * The child components to be managed by this component.\n\t\t * @type {Array<typeof BaseComponent>}\n\t\t */\n\t\tthis._components = [];\n\n\t\t/**\n\t\t * Text node elements that associate with state.\n\t\t * @type {Object<string, Array<{ element: Node, field: string }>>}\n\t\t */\n\t\tthis._vars = {};\n\n\t\t/**\n\t\t * The parent element of component's element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis._parent = this._element ? this._element.parentElement : (options.parent || null);\n\n\t\t/**\n\t\t * Flag that indicates whether the user has enabled or disabled the component.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._enabled = false;\n\n\t\t/**\n\t\t * Array of possible event names.\n\t\t * @type {string[]}\n\t\t * @default\n\t\t */\n\t\tthis._eventNames = ['statuschange', 'visiblechange'];\n\n\t\t/**\n\t\t * Callbacks reference object.\n\t\t * @type {Object<string, Array<(...args: any[]) => void>>}\n\t\t * @default\n\t\t */\n\t\tthis._callbacks = {};\n\t\tthis._initCallbacks();\n\n\t\t/**\n\t\t * Registry of callbacks to register on enable and remove on disable.\n\t\t * @type {Array<CallbackRegistryType>}\n\t\t */\n\t\tthis._callbackRegistry = [];\n\n\t\tthis.bindFunctions([\n\t\t\t'resize',\n\t\t\t'isEnabled',\n\t\t\t'setEnabled',\n\t\t\t'show',\n\t\t\t'hide',\n\t\t\t'toggle',\n\t\t\t'loadHTML',\n\t\t\t'getState',\n\t\t\t'setState'\n\t\t]);\n\t}\n\n\t/**\n\t * Get the child components.\n\t * @returns {Array<string|typeof BaseComponent>}\n\t */\n\tget components() {\n\t\treturn this._components;\n\t}\n\n\t/**\n\t * Gets the app.\n\t * @returns {BaseApp}\n\t */\n\tget app() {\n\t\treturn this._app;\n\t}\n\n\t/**\n\t * Resize handler. Triggers on window resize event.\n\t */\n\tresize() {\n\t\tthis._updateFontSize();\n\t}\n\n\t/**\n\t * Update font size of component's element.\n\t */\n\t_updateFontSize() {\n\t\tlet fontSizeClass = this._class.fontSize.default;\n\n\t\tif (AppUtils.isMobile()) {\n\t\t\tfontSizeClass = this._class.fontSize.small;\n\t\t}\n\t\telse if (AppUtils.isTablet()) {\n\t\t\tfontSizeClass = this._class.fontSize.default;\n\t\t}\n\t\telse if (AppUtils.isPanorama()) {\n\t\t\tfontSizeClass = this._class.fontSize.default;\n\t\t}\n\t\telse if (AppUtils.is2K() || AppUtils.is4K()) {\n\t\t\tfontSizeClass = this._class.fontSize.large;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfontSizeClass\n\t\t});\n\t}\n\n\t/**\n\t * Get the root element of the component.\n\t * @returns {Element}\n\t */\n\tget element() {\n\t\treturn this._element;\n\t}\n\n\t/**\n\t * Get the parent element of component's element.\n\t * @returns {HTMLElement|null}\n\t */\n\tgetParent() {\n\t\treturn this._parent;\n\t}\n\n\t/**\n\t * Set the parent element for component's element.\n\t * @param {HTMLElement} parent\n\t * @param {HTMLElement} [replaceElement=null] - Element to replace with component's element.\n\t */\n\tsetParent(parent, replaceElement = null) {\n\t\tthis._parent = parent;\n\n\t\t// Remove replaceElement\n\t\tif (replaceElement) {\n\t\t\tthis._parent.removeChild(replaceElement);\n\t\t}\n\n\t\t// Add element to parent if component is enabled\n\t\tif (this._enabled) {\n\t\t\tthis._parent.appendChild(this._element);\n\t\t}\n\t}\n\n\t/**\n\t * Initialization.\n\t * Called automatically by addComponent.\n\t * @param {Object<string, string>} params - Parameters to replace in html\n\t * @returns {Promise<void>}\n\t */\n\tasync init(params = {}) {\n\t\tObject.assign(this._params, params);\n\n\t\tconst componentType = /** @type {typeof BaseComponent} */(this.constructor);\n\t\tif (componentType.html !== undefined) {\n\t\t\tthis._element = AppUtils.htmlWithParamsToElement(componentType.html, this._params);\n\t\t\tthis._element.classList.add('{{fontSizeClass}}');\n\t\t\tthis._setVariables(this._element);\n\t\t\tthis._setEventHandlersFromAttributes(this._element);\n\t\t}\n\t\telse {\n\t\t\tthis._element.classList.add('{{fontSizeClass}}');\n\t\t\tthis._setVariables(this._element);\n\t\t}\n\t\tthis._updateFontSize();\n\t}\n\n\t/**\n\t * Get component's config.\n\t * @returns {object}\n\t */\n\tgetConfig() {\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Update component's config.\n\t * @param {object} config\n\t */\n\tsetConfig(config) {\n\t\tObject.assign(this._config, config);\n\t}\n\n\t/**\n\t * Bind functions to class.\n\t * @param {string[]} [fns=[]] - Names of functions.\n\t */\n\tbindFunctions(fns = []) {\n\t\tconst thisAsObject = /** @type {Object<string, any>} */(this);\n\t\tfor (let i = 0; i < fns.length; i++) {\n\t\t\tconst fn = fns[i];\n\t\t\tthisAsObject[fn] = thisAsObject[fn].bind(this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the component is enabled by the user.\n\t * @returns {boolean}\n\t */\n\tisEnabled() {\n\t\treturn this._enabled;\n\t}\n\n\t/**\n\t * Sets whether the component is enabled by the user.\n\t * @param {boolean} enabled\n\t */\n\tsetEnabled(enabled) {\n\t\tconst wasEnabled = this._enabled;\n\n\t\tif (enabled && !wasEnabled) {\n\t\t\tthis.__enable();\n\t\t}\n\t\telse if (!enabled && wasEnabled) {\n\t\t\tthis.__disable();\n\t\t}\n\n\t\t/**\n\t\t * NOTE from Jack:\n\t\t * The _enabled prop is now set here as previously, calling __disable and any subsequent triggerCallbacks method,\n\t\t * would result in the callback not being called. This is because triggerCallbacks returns false is _enabled is false.\n\t\t * We still want to trigger a statuschange as the component is being disabled.\n\t\t * Update: the isEnabled check in triggerCallbacks has been commented out.\n\t\t */\n\t\tthis._enabled = enabled;\n\n\t\tthis._components.forEach(item => {\n\t\t\tconst component = (typeof item === 'string')\n\t\t\t\t? this._app.getComponent(item)\n\t\t\t\t: item;\n\t\t\tcomponent.setEnabled(enabled);\n\t\t});\n\t}\n\n\t/**\n\t * Destroy component.\n\t */\n\tdestroy() {\n\t\tthis.__destroy();\n\t}\n\n\t/**\n\t * Show component's element.\n\t */\n\tshow() {\n\t\tthis.setState({\n\t\t\tisVisible: true,\n\t\t\tisVisibleClass: this._class.isVisible.true\n\t\t}, () => this.triggerCallbacks('visiblechange', [true]));\n\t}\n\n\t/**\n\t * Hide component's element.\n\t */\n\thide() {\n\t\tthis.setState({\n\t\t\tisVisible: false,\n\t\t\tisVisibleClass: this._class.isVisible.false\n\t\t}, () => this.triggerCallbacks('visiblechange', [false]));\n\t}\n\n\t/**\n\t * Toggle visibility of component's element.\n\t */\n\ttoggle() {\n\t\tif (this._state['isVisible']) {\n\t\t\tthis.hide();\n\t\t}\n\t\telse {\n\t\t\tthis.show();\n\t\t}\n\t}\n\n\t/**\n\t * Load HTML from file into element.\n\t * @param {string} filename\n\t * @param {HTMLElement} [element=null] - The element to load html into\n\t */\n\tasync loadHTML(filename, element = null) {\n\t\tconst response = await fetch(filename);\n\t\tif (!response.ok) {\n\t\t\tconsole.error(response.status + ': ' + response.statusText);\n\t\t}\n\t\telse {\n\t\t\tconst html = await response.text();\n\t\t\tthis._parseHTML(html, element);\n\t\t}\n\t}\n\n\t/**\n\t * Get state value using its key.\n\t * @param {string} key\n\t * @returns {any}\n\t */\n\tgetState(key) {\n\t\tif (!(key in this._state)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._state[key];\n\t}\n\n\t/**\n\t * Add a state to component.\n\t * @param {string} key\n\t * @param {any} value\n\t * @param {HTMLElement} element - Element to call _setVariables on\n\t */\n\taddState(key, value, element) {\n\t\tthis._state[key] = value;\n\t\tif (element) {\n\t\t\tthis._setVariables(element);\n\t\t}\n\t}\n\n\t/**\n\t * Set state. Will trigger rerender if new state is not empty.\n\t * @param {Object<string, any>} state - Changed states\n\t * @param {() => void} [callback] - Optional callback\n\t */\n\tsetState(state, callback) {\n\t\tif (AppUtils.isEmptyObject(state)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Simple check for changes\n\t\tlet hasChanged = false;\n\t\tfor (const key in state) {\n\t\t\tif (state[key] !== this._state[key]) {\n\t\t\t\thasChanged = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Don't render if no change\n\t\tif (!hasChanged) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._oldState = { ...this._state };\n\t\tthis._state = { ...this._state, ...state };\n\t\tthis._render(state);\n\n\t\tif (callback !== undefined) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Parse HTML and store variables.\n\t * @param {string} html\n\t * @param {Element} [element=null] - Element to load html into\n\t */\n\t_parseHTML(html, element = null) {\n\t\tif (!html) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst outElement = element || this._element;\n\n\t\t// Create the template and add the html content as the root node.\n\t\tthis._roots = [...AppUtils.htmlToElements(html)];\n\n\t\tconst docFrag = document.createDocumentFragment();\n\t\tfor (let i = 0; i < this._roots.length; i++) {\n\t\t\tconst item = this._roots[i];\n\t\t\tif (item instanceof HTMLElement) {\n\t\t\t\t// Set the variables and store the elements with key.\n\t\t\t\tthis._setVariables(item);\n\n\t\t\t\t// Set the event handlers.\n\t\t\t\tthis._setEventHandlersFromAttributes(item);\n\n\t\t\t\t// Add parsed element to component's div\n\t\t\t\tdocFrag.appendChild(item);\n\t\t\t}\n\t\t}\n\t\toutElement.appendChild(docFrag);\n\t}\n\n\t/**\n\t * Check if a text contain a variable (enclosed in {{ and }}).\n\t * @param {string} text\n\t * @returns {boolean}\n\t */\n\t_containVar(text) {\n\t\treturn (\n\t\t\ttext\n\t\t\t&& typeof text.includes === 'function'\n\t\t\t&& text.includes('{{')\n\t\t\t&& text.includes('}}')\n\t\t);\n\t}\n\n\t/**\n\t * Split a string without empty results.\n\t * @param {string} str\n\t * @returns {string[]}\n\t */\n\t_splitNonEmpty(str) {\n\t\treturn str.split(/\\s+/g).filter(part => part !== '');\n\t}\n\n\t/**\n\t * Store all variables as state or children for update.\n\t * Format of HTML variable: {{var}}. Format of HTML key: key=\"childVar\".\n\t * @example\n\t * // Replace <div>{{text}}</div> with value of this._state.text.\n\t * // Replace <div class=\"{{aClass}}\"></div> with value of this._state.aClass.\n\t * // Store <div key=\"aChild\"></div> as this._children.aChild.\n\t * @param {Node} element\n\t * @param {boolean} [setForChildren=true] - Also set variables for children\n\t * @private\n\t */\n\t_setVariables(element, setForChildren = true) {\n\t\tlet outElement;\n\n\t\t// Store elements with key\n\t\tif (element instanceof Element) {\n\t\t\tfor (let i = element.attributes.length - 1; i >= 0; i--) {\n\t\t\t\tconst attribute = element.attributes[i];\n\t\t\t\tif (attribute.name === 'key') {\n\t\t\t\t\tthis._children[attribute.value] = element;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get variables to be stored\n\t\tconst elementVars = [];\n\n\t\t// Text node\n\t\tif (element.nodeType === Node.TEXT_NODE) {\n\t\t\tif (this._containVar(element.nodeValue)) {\n\t\t\t\telementVars.push({\n\t\t\t\t\tfield: 'nodeValue',\n\t\t\t\t\telementVar: element.nodeValue\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Not text node\n\t\telse if (element instanceof Element) {\n\t\t\t// Class name/list\n\t\t\tlet className = element.className;\n\t\t\twhile (this._containVar(className)) {\n\t\t\t\tconst endIndex = className.indexOf('}}') + 2;\n\t\t\t\telementVars.push({\n\t\t\t\t\tfield: 'classList',\n\t\t\t\t\telementVar: className.substring(className.indexOf('{{'), endIndex)\n\t\t\t\t});\n\t\t\t\tclassName = className.substring(endIndex);\n\t\t\t}\n\t\t}\n\n\t\t// Store variables\n\t\tfor (let i = 0; i < elementVars.length; i++) {\n\t\t\tlet { field, elementVar } = elementVars[i];\n\t\t\tif (field && elementVar.startsWith('{{') && elementVar.endsWith('}}')) {\n\t\t\t\t// Replace variable\n\t\t\t\tconst key = elementVar.replace('{{', '').replace('}}', '');\n\t\t\t\t// With classnames\n\t\t\t\tif (field === 'classList' && element instanceof Element) {\n\t\t\t\t\telement.classList.remove(elementVar);\n\t\t\t\t\tconst state = this._state[key];\n\t\t\t\t\tif (state !== undefined) {\n\t\t\t\t\t\tconst classList = this._splitNonEmpty(state);\n\t\t\t\t\t\telement.classList.add(...classList);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// With an element\n\t\t\t\t\tif (AppUtils.isHTML(this._state[key])) {\n\t\t\t\t\t\tconst newElement = AppUtils.htmlToElement(this._state[key]);\n\t\t\t\t\t\telement.parentNode.replaceChild(newElement, element);\n\t\t\t\t\t\toutElement = newElement;\n\t\t\t\t\t}\n\t\t\t\t\t// With text containing HTML\n\t\t\t\t\telse if (AppUtils.hasHTML(this._state[key])) {\n\t\t\t\t\t\t// Update element since text node cannot display HTML\n\t\t\t\t\t\tif (element.nodeType === Node.TEXT_NODE) {\n\t\t\t\t\t\t\tconst newElement = document.createElement('span');\n\t\t\t\t\t\t\tnewElement.innerHTML = this._state[key];\n\t\t\t\t\t\t\tconst parent = element.parentElement || element.parentNode;\n\t\t\t\t\t\t\tparent.replaceChild(newElement, element);\n\t\t\t\t\t\t\toutElement = newElement;\n\t\t\t\t\t\t\tfield = 'innerHTML';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\telement.innerHTML = this._state[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// With other properties\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst elementAsObj = /** @type {Object<string, any>} */(element);\n\t\t\t\t\t\telementAsObj[field] = this._state[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Store variable\n\t\t\t\tif (this._vars[key] === undefined) {\n\t\t\t\t\tthis._vars[key] = [];\n\t\t\t\t}\n\t\t\t\tthis._vars[key].push({\n\t\t\t\t\telement: outElement || element,\n\t\t\t\t\tfield\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Go through the children and so on.\n\t\tif (setForChildren) {\n\t\t\tfor (let i = element.childNodes.length - 1; i >= 0; i--) {\n\t\t\t\tthis._setVariables(element.childNodes[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the event handlers for all children of elem. Searches for all attributes starting with 'on' and processes them.\n\t * @param {Element} element\n\t * @private\n\t */\n\t_setEventHandlersFromAttributes(element) {\n\t\tconst attributeNamesToRemove = [];\n\t\tfor (let i = element.attributes.length - 1; i >= 0; i--) {\n\t\t\tconst attribute = element.attributes[i];\n\t\t\tif (attribute.name.startsWith('on')) {\n\t\t\t\t// Get the event type.\n\t\t\t\tconst event = attribute.name.substring(2).toLowerCase();\n\t\t\t\t// Get the callback.\n\t\t\t\tconst handler = /** @type {BaseComponent & { [key: string]: any }} */(this)[attribute.value];\n\t\t\t\tif (handler === undefined || !(handler instanceof Function)) {\n\t\t\t\t\tthrow new Error('Could not find valid ' + event + ' handler ' + attribute.value + ' for element with id ' + element.id);\n\t\t\t\t}\n\t\t\t\t// Get the callback bound to this.\n\t\t\t\tconst boundHandler = handler.bind(this);\n\t\t\t\t// Remove the attribute so there's no conflict.\n\t\t\t\tattributeNamesToRemove.push(attribute.name);\n\t\t\t\t// Add the event listener.\n\t\t\t\telement.addEventListener(event, boundHandler);\n\t\t\t}\n\t\t}\n\t\t// Remove the attributes that were handlers to remove any conflicts.\n\t\tfor (let i = attributeNamesToRemove.length - 1; i >= 0; i--) {\n\t\t\telement.removeAttribute(attributeNamesToRemove[i]);\n\t\t}\n\t\t// Go through the children and so on.\n\t\tfor (let i = element.children.length - 1; i >= 0; i--) {\n\t\t\tthis._setEventHandlersFromAttributes(element.children[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Render div innerHTML with changed states.\n\t * @param {Object<string, any>} state\n\t */\n\t_render(state) {\n\t\tconst keys = Object.keys(state);\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key = keys[i];\n\t\t\tif (key in this._vars && state[key] !== this._oldState[key]) {\n\t\t\t\tconst _var = this._vars[key];\n\t\t\t\tfor (let j = 0; j < _var.length; j++) {\n\t\t\t\t\t// Update variable\n\t\t\t\t\tconst { field, element } = _var[j];\n\t\t\t\t\t// With classnames\n\t\t\t\t\tif (field === 'classList') {\n\t\t\t\t\t\tlet classList = this._splitNonEmpty(this._oldState[key]);\n\t\t\t\t\t\tconst elementAsObj = /** @type {Object<string, any>} */(element);\n\t\t\t\t\t\telementAsObj[field].remove(...classList);\n\t\t\t\t\t\tclassList = this._splitNonEmpty(state[key]);\n\t\t\t\t\t\telementAsObj[field].add(...classList);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// With an element\n\t\t\t\t\t\tif (AppUtils.isHTML(state[key])) {\n\t\t\t\t\t\t\tconst newElement = AppUtils.htmlToElement(state[key]);\n\t\t\t\t\t\t\telement.parentNode.replaceChild(newElement, element);\n\t\t\t\t\t\t\tthis._vars[key][j].element = newElement;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// With text containing HTML\n\t\t\t\t\t\telse if (AppUtils.hasHTML(state[key])) {\n\t\t\t\t\t\t\tif (element.nodeType === Node.TEXT_NODE) {\n\t\t\t\t\t\t\t\tconst newElement = document.createElement('span');\n\t\t\t\t\t\t\t\tnewElement.innerHTML = state[key];\n\t\t\t\t\t\t\t\tconst parent = element.parentElement || element.parentNode;\n\t\t\t\t\t\t\t\tparent.replaceChild(newElement, element);\n\t\t\t\t\t\t\t\tthis._vars[key][j].element = newElement;\n\t\t\t\t\t\t\t\tthis._vars[key][j].field = 'innerHTML';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\telement.innerHTML = state[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// With other properties\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst elementAsObj = /** @type {Object<string, any>} */(element);\n\t\t\t\t\t\t\telementAsObj[field] = state[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Enables the component.\n\t * @abstract\n\t * @package\n\t */\n\t__enable() {\n\t\twindow.addEventListener('resize', this.resize);\n\t\tthis.registerCallbacks();\n\n\t\tif (this._parent) {\n\t\t\tthis._parent.appendChild(this._element);\n\t\t\tthis.triggerCallbacks('statuschange', [true, this]);\n\t\t}\n\t}\n\n\t/**\n\t * Disables the component.\n\t * @abstract\n\t * @package\n\t */\n\t__disable() {\n\t\tif (this._parent && this._parent.contains(this._element)) {\n\t\t\tthis.triggerCallbacks('statuschange', [false, this]);\n\t\t\tthis._element = this._parent.removeChild(this._element);\n\t\t}\n\t\twindow.removeEventListener('resize', this.resize);\n\t\tthis.removeCallbacks();\n\t}\n\n\t/**\n\t * Destroy component.\n\t */\n\t__destroy() {\n\t\tthis.__disable();\n\t\tthis._element = null;\n\t\tthis._parent = null;\n\t}\n\n\t/**\n\t * Initialize callback list for all events.\n\t */\n\t_initCallbacks() {\n\t\tfor (let i = 0; i < this._eventNames.length; i++) {\n\t\t\tthis._callbacks[this._eventNames[i]] = [];\n\t\t}\n\t}\n\n\t/**\n\t * Registers a callback for a specific event.\n\t * @param {string} eventName\n\t * @param {(...args: any[]) => void} callback - A callback function to be called\n\t */\n\tregisterCallback(eventName, callback) {\n\t\tif ((typeof (callback) !== 'function') || (this._eventNames.indexOf(eventName) < 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent multiple registrations of same event with same callback\n\t\tif (!this._callbacks[eventName].includes(callback)) {\n\t\t\tthis._callbacks[eventName].push(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a callback for an event.\n\t * @param {string} eventName\n\t * @param {(...args: any[]) => void} callback\n\t */\n\tremoveCallback(eventName, callback) {\n\t\tif ((typeof (callback) !== 'function') || (this._eventNames.indexOf(eventName) < 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = this._callbacks[eventName].indexOf(callback);\n\t\tif (index > -1) {\n\t\t\tthis._callbacks[eventName].splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Trigger all callbacks for an event.\n\t * @param {string} eventName\n\t * @param {any[]} [params=[]] - Parameters for callback\n\t */\n\ttriggerCallbacks(eventName, params = []) {\n\t\t// Not sure why these are triggered in reverse order.\n\t\tfor (let i = this._callbacks[eventName].length - 1; i >= 0; i--) {\n\t\t\tconst callback = this._callbacks[eventName][i];\n\t\t\tcallback(...params);\n\t\t}\n\t}\n\n\t/**\n\t * Register all callbacks for component.\n\t */\n\tregisterCallbacks() {\n\t\tfor (let i = 0; i < this._callbackRegistry.length; i++) {\n\t\t\tconst { emitter, event, callback } = this._callbackRegistry[i];\n\t\t\temitter.registerCallback(event, callback);\n\t\t}\n\t}\n\n\t/**\n\t * Remove all callbacks for component.\n\t */\n\tremoveCallbacks() {\n\t\tfor (let i = 0; i < this._callbackRegistry.length; i++) {\n\t\t\tconst { emitter, event, callback } = this._callbackRegistry[i];\n\t\t\temitter.removeCallback(event, callback);\n\t\t}\n\t}\n}\n\n/**\n * Helper function to create the component and add to app.\n * @static\n * @param {BaseApp} app - Application to add component\n * @param {string} name - Component's unique name\n * @param {typeof BaseComponent} TypeConstructor - Component's class to construct\n * @param {boolean} hasPlaceholder - Component has a HTML placeholder or not\n * @param {any[]} [args=[]] - Arguments to pass to constructor\n * @param {object} [options={}] - Options to pass to constructor\n * @returns {Promise<BaseComponent>}\n */\nBaseComponent.create = async (app, name, TypeConstructor, hasPlaceholder = true, args = [], options = {}) => {\n\tconst component = hasPlaceholder\n\t\t? await app.addComponentWithPlaceholder({ type: TypeConstructor, name, args, options })\n\t\t: await app.addComponent(name, TypeConstructor, ...args, options);\n\n\tif (TypeConstructor.postCreationFunction) {\n\t\tTypeConstructor.postCreationFunction(app, component);\n\t}\n\treturn component;\n};\n\n/**\n * The HTML that goes with the component.\n * @type {string | undefined}\n */\nBaseComponent.html = undefined;\n\n/**\n * The HTML that goes with the component.\n * @type {((app: BaseApp, component: BaseComponent) => void) | undefined}\n */\nBaseComponent.postCreationFunction = undefined;\n","import {\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './breadcrumb.html';\nimport './breadcrumb.css';\n\n/**\n * Breadcrumb component.\n * @extends BaseComponent\n */\nexport class Breadcrumb extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options = { params: {} }) {\n\t\t// Default params\n\t\toptions.params = {\n\t\t\ttitle: '',\n\t\t\t...options.params\n\t\t};\n\t\tsuper(app, null, options);\n\n\t\tthis._class.isHomeActiveClass = {\n\t\t\ttrue: 'active',\n\t\t\tfalse: ''\n\t\t};\n\n\t\t/**\n\t\t * Crumb text for crumbs.\n\t\t * @type {object}\n\t\t */\n\t\tthis._crumbTexts = {\n\t\t\tcompare: 'Compare Size',\n\t\t\tevents: 'Mission Events'\n\t\t};\n\n\t\t// Set the crumb onclick handler.\n\t\tthis.setCrumbClickHandler(route => {\n\t\t\tthis._app.getManager('router').navigate(route, '', { __remove: 'all', keepTime: true });\n\t\t});\n\n\t\tObject.assign(this._state, {\n\t\t\tisHomeActive: false,\n\t\t\tisHomeActiveClass: this._class.isHomeActiveClass.false\n\t\t});\n\n\t\tthis.bindFunctions(['_goToHome']);\n\t}\n\n\t/**\n\t * Updates the breadcrumb trail.\n\t * @param {Array} routeParts\n\t */\n\tupdateBreadcrumb(routeParts) {\n\t\tthis._element.innerHTML = '';\n\t\tconst docFrag = document.createDocumentFragment();\n\n\t\t// Add static part\n\t\tif (this._app.getManager('router').configs.logo === false) {\n\t\t\tthis._children.staticLogo.classList.add('hidden');\n\t\t}\n\t\tif (this._app.getManager('router').configs.locked) {\n\t\t\tthis._children.static.classList.remove('clickable');\n\t\t}\n\t\tdocFrag.appendChild(this._children.static);\n\n\t\tconst isHomeActive = !routeParts || routeParts.length === 0 || (routeParts.length === 1 && routeParts[0] === 'home');\n\t\tif (isHomeActive) {\n\t\t\trouteParts = null;\n\t\t}\n\t\tthis.setState({\n\t\t\tisHomeActive,\n\t\t\tisHomeActiveClass: this._class.isHomeActiveClass[isHomeActive]\n\t\t});\n\n\t\t// Add dynamic parts\n\t\tif (routeParts && routeParts.length > 0) {\n\t\t\tfor (let i = 0; i < routeParts.length; i++) {\n\t\t\t\tconst routePart = routeParts[i];\n\t\t\t\tconst route = routeParts.slice(0, i + 1).join('/');\n\n\t\t\t\tconst crumb = this._createCrumb(routePart, route);\n\t\t\t\tdocFrag.appendChild(crumb);\n\t\t\t}\n\t\t}\n\n\t\tthis._element.appendChild(docFrag);\n\t}\n\n\t/**\n\t * Actions on route change.\n\t * @param {object} params - Parameters and queries from url\n\t * @param {Array} params.routeParts\n\t */\n\tonRouteChange({ routeParts } = {}) {\n\t\tthis.updateBreadcrumb(routeParts);\n\t}\n\n\t/**\n\t * Sets the breadcrumb onclick handler function. It allows each app to set the handler dynamically.\n\t * @param {Function} onCrumbClick\n\t */\n\tsetCrumbClickHandler(onCrumbClick) {\n\t\tthis._onCrumbClick = onCrumbClick;\n\t}\n\n\t/**\n\t * Navigate back to home page.\n\t */\n\t_goToHome() {\n\t\tconst router = this._app.getManager('router');\n\t\trouter.navigate({ __remove: 'all' }, '/home');\n\t}\n\n\t/**\n\t * Get crumb text to display.\n\t * @param {string} crumb\n\t * @returns {string}\n\t */\n\t_getCrumbText(crumb) {\n\t\t// Lookup predefined texts\n\t\tif (this._crumbTexts[crumb]) {\n\t\t\treturn this._crumbTexts[crumb];\n\t\t}\n\n\t\t// Lookup entity info\n\t\tconst entityInfo = this._app.getManager('content').getEntityInfo([crumb]);\n\t\tif (entityInfo) {\n\t\t\treturn entityInfo.displayName || entityInfo.iauName;\n\t\t}\n\n\t\t// Lookup event info\n\t\tconst eventInfo = this._app.getManager('content').events[crumb];\n\t\tif (eventInfo) {\n\t\t\treturn eventInfo.title;\n\t\t}\n\n\t\t// Lookup story info\n\t\tconst storyInfo = this._app.getManager('content').getStoryList().stories[crumb];\n\t\tif (storyInfo) {\n\t\t\treturn storyInfo.title;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Creates a crumb.\n\t * @param {string} text\n\t * @param {string} route\n\t * @returns {HTMLElement}\n\t */\n\t_createCrumb(text, route) {\n\t\tconst container = document.createElement('nav');\n\t\tconst { locked } = this._app.getManager('router').configs;\n\t\tcontainer.className = `container ${locked ? '' : 'clickable'}`;\n\t\tif (!locked) {\n\t\t\tcontainer.addEventListener('click', () => {\n\t\t\t\tthis._onCrumbClick(route);\n\t\t\t});\n\t\t}\n\n\t\tconst separator = document.createElement('span');\n\t\tseparator.className = 'separator icon icon-greater';\n\t\tcontainer.appendChild(separator);\n\n\t\tconst textSpan = document.createElement('a');\n\t\ttextSpan.innerHTML = this._getCrumbText(text) || text;\n\t\ttextSpan.className = 'text link';\n\t\tcontainer.appendChild(textSpan);\n\n\t\treturn container;\n\t}\n}\n\nBreadcrumb.html = html;\n","import tippy from 'tippy.js';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './carousel.html';\nimport slideHTML from './slide_template.html';\n\n/**\n * General carousel with only previous/next navigation.\n * @see {@link https://codepen.io/simonpatrat/pen/zeGYdo} - Modified from\n */\nclass Carousel extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {HTMLElement} element\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, element, options = {}) {\n\t\t/**\n\t\t * Determine the hint's text based on device.\n\t\t * @type {string}\n\t\t */\n\t\tconst hintAction = AppUtils.isPrimaryTouch() ? 'Swipe/Tap' : 'Scroll/Click';\n\n\t\t/**\n\t\t * Configurations for carousel.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t * @property {boolean} [infinite=false] - Loop to start/end if reach limit\n\t\t * @property {number} [initialSlideIndex=0] - Slide index to show on initilization. Must be an integer.\n\t\t * @property {boolean} [vertical=true] - Scrolling direction is vertical\n\t\t * @property {number} [timeout=1500] - Timeout between slide scroll\n\t\t * @property {object} navigationButtons\n\t\t * @property {object} navigationButtons.prev\n\t\t * @property {string} [navigationButtons.prev.text='Prev'] - Text for previous navigation button\n\t\t * @property {string} [navigationButtons.prev.text='icon-greater up'] - Icon for previous navigation button\n\t\t * @property {object} navigationButtons.next\n\t\t * @property {string} [navigationButtons.next.text='Next'] - Text for next navigation button\n\t\t * @property {string} [navigationButtons.next.text='icon-greater down'] - Icon for next navigation button\n\t\t * @property {object} navigationButtons.replay\n\t\t * @property {string} [navigationButtons.replay.text='Back To Start'] - Text for replay navigation button\n\t\t * @property {string} [navigationButtons.replay.text='icon-replay'] - Icon for replay navigation button\n\t\t * @property {object} hintText - Hint text for each slide\n\t\t * @property {string} hintText.default - Hint text for default slide\n\t\t * @property {string} hintText.fist - Hint text for first slide\n\t\t * @property {string} hintText.last - Hint text for last slide\n\t\t */\n\t\toptions.config = {\n\t\t\tinfinite: false,\n\t\t\tinitialSlideIndex: 0,\n\t\t\tvertical: true,\n\t\t\ttimeout: 1000,\n\t\t\tnavigationButtons: {\n\t\t\t\tprev: {\n\t\t\t\t\ttext: 'Prev',\n\t\t\t\t\ticon: 'icon-greater up'\n\t\t\t\t},\n\t\t\t\tnext: {\n\t\t\t\t\ttext: 'Next',\n\t\t\t\t\ticon: 'icon-greater down'\n\t\t\t\t},\n\t\t\t\treplay: {\n\t\t\t\t\ttext: 'Back To Start',\n\t\t\t\t\ticon: 'icon-replay'\n\t\t\t\t}\n\t\t\t},\n\t\t\thintText: {\n\t\t\t\tdefault: `${hintAction} arrows to continue`,\n\t\t\t\tfirst: `${hintAction} arrow to continue`,\n\t\t\t\tlast: `${hintAction} arrow for previous`\n\t\t\t},\n\t\t\t...options.config\n\t\t};\n\n\t\tsuper(app, element, {\n\t\t\tslideType: '',\n\t\t\tpreviousIndex: -1,\n\t\t\tcurrentIndex: options.config.initialSlideIndex || 0,\n\t\t\tisScrolling: false,\n\t\t\tisScrollingClass: '',\n\t\t\tisTimeout: false,\n\t\t\tcollapseClass: 'expand',\n\t\t\tisCollapsed: false,\n\t\t\tcollapseButtonClass: 'icon-collapse',\n\t\t\tisCloseButtonVisible: false,\n\t\t\tcloseButtonText: 'Exit',\n\t\t\tisControlsVisible: false,\n\t\t\t...options\n\t\t});\n\n\t\tObject.assign(this._state, {\n\t\t\tisCloseButtonVisibleClass: this._class.isVisible[this._state.isCloseButtonVisible],\n\t\t\tisControlsVisibleClass: this._class.isVisible[this._state.isControlsVisible]\n\t\t});\n\n\t\tthis._children = {\n\t\t\ttrack: null,\n\t\t\tslides: []\n\t\t};\n\n\t\t/**\n\t\t * Tooltip for progress arrow.\n\t\t * @type {tippy}\n\t\t */\n\t\tthis._progressTooltip = null;\n\n\t\t/**\n\t\t * List of functions to call on entering a slide.\n\t\t * @type {object}\n\t\t */\n\t\tthis._onEnter = {};\n\n\t\t/**\n\t\t * List of functions to call on leaving a slide.\n\t\t * @type {object}\n\t\t */\n\t\tthis._onLeave = {};\n\n\t\t/**\n\t\t * Supported slide types.\n\t\t * @type {Array}\n\t\t */\n\t\tthis._slideTypes = ['panel', 'overlay'];\n\n\t\t/**\n\t\t * Current slide's info.\n\t\t */\n\t\tthis._currentInfo = null;\n\n\t\t/**\n\t\t * Function to call on changing slide via button or scroll.\n\t\t * @default\n\t\t */\n\t\tthis._onSlideChange = this.goToSlide;\n\n\t\t/**\n\t\t * Function to call on clicking controls button.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._toggleControls = null;\n\n\t\t/** @inheritdoc */\n\t\tthis._eventNames.push('slidechange', 'expandtoggle');\n\t\tthis._initCallbacks();\n\n\t\t// Binds\n\t\tthis.bindFunctions([\n\t\t\t'_setSlideTrackDimensions',\n\t\t\t'_updateCarousel',\n\t\t\t'_onScroll',\n\t\t\t'_toggleCollapse',\n\t\t\t'_onControlsToggle',\n\t\t\t'goToPrevSlide',\n\t\t\t'goToNextSlide',\n\t\t\t'close'\n\t\t]);\n\t}\n\n\t/**\n\t * Get current slide's info.\n\t * @returns {object}\n\t */\n\tget currentInfo() {\n\t\treturn this._currentInfo;\n\t}\n\n\t/**\n\t * Handle clicking controls button.\n\t */\n\t_onControlsToggle() {\n\t\tthis._toggleControls();\n\t}\n\n\t/**\n\t * Set function to call on clicking controls button.\n\t * @param {Function} cb\n\t */\n\tsetOnControlsToggle(cb) {\n\t\tthis._toggleControls = cb;\n\t}\n\n\t/**\n\t * Initialize.\n\t */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis._children.carousel.classList.add(this._config.vertical ? 'vertical' : 'horizontal');\n\n\t\tthis._createSlideTrack();\n\t\tthis._updateCarousel();\n\n\t\tthis._children.carousel.classList.add('initialized');\n\n\t\t// Edge case scenario fix\n\t\twindow.addEventListener('keydown', event => {\n\t\t\tif (event.key === 'Tab' && this._state.isScrolling) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t});\n\t\tthis._children.carousel.addEventListener('transitionstart', event => {\n\t\t\tif (event.target === this._children.track && event.propertyName === 'transform') {\n\t\t\t\tthis.setState({ isScrolling: true, isScrollingClass: 'scrolling' });\n\t\t\t\tthis._children.carousel.style.pointerEvents = 'all';\n\t\t\t}\n\t\t}, true);\n\t\tthis._children.carousel.addEventListener('transitionend', event => {\n\t\t\tif (event.target === this._children.track && event.propertyName === 'transform') {\n\t\t\t\tthis.setState({ isScrolling: false, isScrollingClass: 'scrolling-done' });\n\t\t\t\tthis._children.carousel.style.pointerEvents = 'none';\n\t\t\t}\n\t\t}, true);\n\n\t\tthis._children.progress.addEventListener('wheel', this._onScroll, { passive: false });\n\t\tthis._children.progress.addEventListener('touchstart', event => {\n\t\t\tconst touchEvent = event.changedTouches[0];\n\t\t\tthis._touchStartY = touchEvent.pageY;\n\t\t});\n\t\tthis._children.progress.addEventListener('touchmove', event => {\n\t\t\tconst touchEvent = event.changedTouches[0];\n\t\t\tevent.deltaY = touchEvent.pageY - this._touchStartY;\n\t\t\tthis._onScroll(event, 'touch');\n\t\t}, { passive: false });\n\t\tthis._children.progress.addEventListener('touchend', event => {\n\t\t\tconst touchEvent = event.changedTouches[0];\n\t\t\tevent.deltaY = touchEvent.pageY - this._touchStartY;\n\t\t\tthis._onScroll(event, 'touch');\n\t\t}, { passive: false });\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tsetTimeout(this._setSlideTrackDimensions, 100);\n\n\t\tthis._updateTooltipsProps();\n\t}\n\n\t/**\n\t * Update tooltip props.\n\t */\n\t_updateTooltipsProps() {\n\t\tconst { slideType } = this._state;\n\n\t\tthis._progressTooltip.setProps({\n\t\t\toffset: slideType === 'overlay'\n\t\t\t\t? [0, -30]\n\t\t\t\t: [0, 10]\n\t\t});\n\t}\n\n\t/**\n\t * Create slide track containing all slides.\n\t */\n\t_createSlideTrack() {\n\t\tthis._children.slides.forEach(slide => {\n\t\t\tthis._children.track.appendChild(slide);\n\t\t});\n\t\tthis._setSlideTrackDimensions();\n\t}\n\n\t/**\n\t * Set slide track width, height, and transition.\n\t */\n\t_setSlideTrackDimensions() {\n\t\tconst { track, slides } = this._children;\n\t\tconst { vertical } = this._config;\n\n\t\tslides.forEach(slide => {\n\t\t\tslide.style.transition = 'none';\n\t\t});\n\n\t\ttrack.style.transition = 'none';\n\t\tif (vertical) {\n\t\t\tconst height = [...slides].reduce((acc, slide) => (\n\t\t\t\tacc + slide.getBoundingClientRect().height\n\t\t\t), 0);\n\t\t\ttrack.style.height = height + 'px';\n\t\t}\n\t\telse {\n\t\t\tconst width = [...slides].reduce((acc, slide) => (\n\t\t\t\tacc + slide.getBoundingClientRect().width\n\t\t\t), 0);\n\t\t\ttrack.style.width = width + 'px';\n\t\t}\n\n\t\ttrack.style.transition = '';\n\t\tslides.forEach(slide => {\n\t\t\tslide.style.transition = '';\n\t\t});\n\t\tthis._updateTrackPosition();\n\t}\n\n\t/**\n\t * Update track's position to current slide.\n\t */\n\t_updateTrackPosition() {\n\t\tconst { currentIndex } = this._state;\n\n\t\tlet trackOffset = 0;\n\t\tfor (let i = 0; i < currentIndex; i++) {\n\t\t\ttrackOffset += this._children.slides[i].getBoundingClientRect().height;\n\t\t}\n\t\tconst translateValue = this._config.vertical\n\t\t\t? `translateY(-${trackOffset}px)`\n\t\t\t: `translateX(-${trackOffset}px)`;\n\n\t\tthis._children.track.style.transform = translateValue;\n\t}\n\n\t/**\n\t * Update slides' state.\n\t */\n\t_updateSlides() {\n\t\tconst { previousIndex, currentIndex } = this._state;\n\n\t\tconst previousSlide = this._children.slides[previousIndex];\n\t\tif (previousSlide) {\n\t\t\tpreviousSlide.classList.remove('active');\n\t\t\tpreviousSlide.classList.add('hidden');\n\t\t}\n\n\t\tconst currentSlide = this._children.slides[currentIndex];\n\t\tif (currentSlide) {\n\t\t\tcurrentSlide.classList.remove('hidden');\n\t\t\tcurrentSlide.classList.add('active');\n\t\t}\n\t}\n\n\t/**\n\t * Update carousel.\n\t */\n\t_updateCarousel() {\n\t\tthis._updateTrackPosition();\n\t\tthis._updateSlides();\n\t}\n\n\t/**\n\t * Handle scrolling.\n\t * @param {Event} event\n\t * @param {string} [type='mouse'] - Scroll type, can be 'mouse' or 'touch'\n\t */\n\t_onScroll(event, type = 'mouse') {\n\t\tif (this._state.isCollapsed && !this._state.isTimeout) {\n\t\t\tthis.expand();\n\t\t}\n\t\telse if (!this._state.isScrolling && !this._state.isTimeout) {\n\t\t\t// Since we use overlayscrollbars library, the scrolling element is os-viewport\n\t\t\tconst element = event.currentTarget.querySelector('.os-viewport') || event.currentTarget;\n\t\t\tconst scrollTop = element.scrollTop;\n\t\t\tconst scrolledToTop = scrollTop === 0;\n\t\t\t// Ceiling is needed because the sum can be a float closed to scrollHeight\n\t\t\tconst scrolledToBottom = Math.ceil(element.getBoundingClientRect().height + scrollTop) >= element.scrollHeight;\n\n\t\t\tif (event.deltaY < 0) {\n\t\t\t\tif (type === 'mouse') {\n\t\t\t\t\tif (event.deltaY < -4 && scrolledToTop) {\n\t\t\t\t\t\tthis.goToPrevSlide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (event.deltaY < -5 && scrolledToBottom) {\n\t\t\t\t\t\tthis.goToNextSlide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (event.deltaY > 0) {\n\t\t\t\tif (type === 'mouse') {\n\t\t\t\t\tif (event.deltaY > 4 && scrolledToBottom) {\n\t\t\t\t\t\tthis.goToNextSlide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (event.deltaY > 5 && scrolledToTop) {\n\t\t\t\t\t\tthis.goToPrevSlide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{ isTimeout: true },\n\t\t\t() => setTimeout(() => this.setState({ isTimeout: false }), this._config.timeout)\n\t\t);\n\n\t\t// Need this to scroll inside panel\n\t\tif (['wheel', 'touchmove'].includes(event.type)) {\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\t/**\n\t * Add a slide to carousel.\n\t * @param {object} slideInfo\n\t * @param {string} slideInfo.type - Slide type\n\t * @param {HTMLElement} slideInfo.content - Content element of a slide\n\t * @param {object} [options={}]\n\t * @param {boolean} options.isFirst - Is first slide\n\t * @param {boolean} options.isLast - Is last slide\n\t */\n\taddSlide(slideInfo, { isLast = false, isFirst = false } = {}) {\n\t\tconst html = slideInfo.html || slideHTML;\n\t\tconst { type, content } = slideInfo;\n\n\t\tif (!this._slideTypes.includes(type)) {\n\t\t\tconsole.warn(`addSlide: Unknown slide type \"${type}\". Supported types: ${this._slideTypes}`);\n\t\t}\n\n\t\tconst slide = AppUtils.htmlWithParamsToElement(html, {\n\t\t\tprevButtonText: this._config.navigationButtons.prev.text,\n\t\t\tprevButtonIcon: this._config.navigationButtons.prev.icon,\n\t\t\tnextButtonText: this._config.navigationButtons.next.text,\n\t\t\tnextButtonIcon: this._config.navigationButtons.next.icon,\n\t\t\treplayButtonText: this._config.navigationButtons.replay.text,\n\t\t\treplayButtonIcon: this._config.navigationButtons.replay.icon,\n\t\t\thintText: () => {\n\t\t\t\tif (isLast) {\n\t\t\t\t\treturn this._config.hintText.last;\n\t\t\t\t}\n\t\t\t\telse if (isFirst) {\n\t\t\t\t\treturn this._config.hintText.first;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn this._config.hintText.default;\n\t\t\t\t}\n\t\t\t},\n\t\t\ttype\n\t\t});\n\n\t\tslide.querySelector('.content').appendChild(content);\n\n\t\tif (isLast) {\n\t\t\tslide.classList.add('last');\n\t\t}\n\t\tif (isFirst) {\n\t\t\tslide.classList.add('first');\n\t\t}\n\t\tif (slideInfo.classList) {\n\t\t\tslide.classList.add(...slideInfo.classList);\n\t\t}\n\t\tif (slideInfo.id) {\n\t\t\tslide.dataset.id = slideInfo.id;\n\t\t}\n\t\tslide.dataset.type = slideInfo.type || '';\n\t\tthis._children.track.appendChild(slide);\n\t\tthis._children.slides.push(slide);\n\n\t\tconst slideContainer = slide.firstChild;\n\t\tslideContainer.addEventListener('wheel', this._onScroll, { passive: false });\n\t\tslideContainer.addEventListener('touchstart', event => {\n\t\t\tconst touchEvent = event.changedTouches[0];\n\t\t\tthis._touchStartY = touchEvent.pageY;\n\t\t});\n\t\tslideContainer.addEventListener('touchmove', event => {\n\t\t\tconst touchEvent = event.changedTouches[0];\n\t\t\tevent.deltaY = touchEvent.pageY - this._touchStartY;\n\t\t\tthis._onScroll(event, 'touch');\n\t\t}, { passive: false });\n\t\tslideContainer.addEventListener('touchend', event => {\n\t\t\tconst touchEvent = event.changedTouches[0];\n\t\t\tevent.deltaY = touchEvent.pageY - this._touchStartY;\n\t\t\tthis._onScroll(event, 'touch');\n\t\t}, { passive: false });\n\n\t\tthis._setVariables(slide);\n\t\tthis._setEventHandlersFromAttributes(slide);\n\t\tthis._setSlideTrackDimensions();\n\t\tthis._updateCarousel();\n\n\t\tAppUtils.addScrollbar(slideContainer);\n\n\t\tthis._progressTooltip = tippy(this._children.progress.parentElement, {\n\t\t\ttheme: 'default',\n\t\t\tonShow(instance) {\n\t\t\t\tclearTimeout(instance.timeout);\n\t\t\t\tinstance.timeout = setTimeout(() => {\n\t\t\t\t\tinstance.hide();\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Add multiple slides to carousel.\n\t * @param {Array} slidesInfo\n\t */\n\taddSlides(slidesInfo) {\n\t\tfor (let i = 0; i < slidesInfo.length; i++) {\n\t\t\tthis.addSlide(slidesInfo[i]);\n\t\t}\n\t}\n\n\t/**\n\t * On entering a slide.\n\t * @param {number} index\n\t * @returns {Promise}\n\t */\n\tasync onEnter(index) {\n\t\tconst onEnter = this._onEnter[index];\n\t\tfor (let i = 0; i < onEnter.length; i++) {\n\t\t\tif (typeof onEnter[i] === 'function') {\n\t\t\t\tawait onEnter[i]();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * On leaving a slide.\n\t * @param {number} index\n\t * @returns {Promise}\n\t */\n\tasync onLeave(index) {\n\t\tif (!(typeof index === 'number')) {\n\t\t\tindex = this._state.currentIndex;\n\t\t}\n\t\tconst onLeave = this._onLeave[index];\n\t\tfor (let i = 0; i < onLeave.length; i++) {\n\t\t\tif (typeof onLeave[i] === 'function') {\n\t\t\t\tawait onLeave[i]();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Go to slide using index.\n\t * @param {number} currentIndex\n\t * @returns {Promise}\n\t */\n\tasync goToSlide(currentIndex) {\n\t\tconst { spout, spoutFontSize } = this.app.getManager('router').configs;\n\n\t\tconst previousIndex = this._state.currentIndex;\n\t\tif (currentIndex !== previousIndex) {\n\t\t\tawait this.onLeave(previousIndex);\n\t\t}\n\n\t\tconst slideType = this._children.slides[currentIndex].dataset.type;\n\t\tthis.setState({\n\t\t\tcurrentIndex,\n\t\t\tpreviousIndex,\n\t\t\tslideType\n\t\t}, () => {\n\t\t\tthis._updateCarousel();\n\t\t\tthis._children.progress.style.top = `calc(${currentIndex * 100 / (this._children.slides.length - 1)}% - ${this._children.progress.offsetHeight / 2}px)`;\n\t\t\t// Since we use overlayscrollbars library, the scrolling element is os-viewport\n\t\t\tconst element = this._children.slides[currentIndex].querySelector('.os-viewport');\n\t\t\tif (element) {\n\t\t\t\telement.scrollTop = 0;\n\t\t\t}\n\n\t\t\tthis.triggerCallbacks('slidechange', [this._currentInfo]);\n\n\t\t\t// Update tooltip\n\t\t\tthis._progressTooltip.setContent(`${currentIndex + 1} of ${this._children.slides.length}`);\n\t\t\tthis._updateTooltipsProps();\n\t\t\tif (this._state.isVisible) {\n\t\t\t\tthis._progressTooltip.show();\n\t\t\t}\n\t\t});\n\n\t\tawait this.onEnter(currentIndex);\n\n\t\tif (spout === true) {\n\t\t\tawait this.app.getManager('spout').setUpSpoutLabels(spoutFontSize);\n\t\t}\n\n\t}\n\n\t/**\n\t * Go to previous slide.\n\t */\n\tgoToPrevSlide() {\n\t\tconst { currentIndex } = this._state;\n\t\tconst lastSlideIndex = this._children.slides.length - 1;\n\n\t\tconst slideToGo = currentIndex - 1;\n\t\tif (slideToGo < 0) {\n\t\t\tif (this._config.infinite) {\n\t\t\t\tthis._onSlideChange(lastSlideIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._onSlideChange(slideToGo);\n\t\t}\n\t}\n\n\t/**\n\t * Go to next slide.\n\t */\n\tgoToNextSlide() {\n\t\tconst { currentIndex } = this._state;\n\t\tconst lastSlideIndex = this._children.slides.length - 1;\n\n\t\tconst slideToGo = currentIndex + 1;\n\t\tif (slideToGo > lastSlideIndex) {\n\t\t\tif (this._config.infinite) {\n\t\t\t\tthis._onSlideChange(0);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._onSlideChange(slideToGo);\n\t\t}\n\t}\n\n\t/**\n\t * Go to first slide.\n\t */\n\tgoToFirstSlide() {\n\t\tthis._onSlideChange(0);\n\t}\n\n\t/**\n\t * Returns visible state.\n\t * @returns {boolean}\n\t */\n\tisVisible() {\n\t\treturn this._state.isVisible;\n\t}\n\n\t/**\n\t * Collapses panel.\n\t */\n\tcollapse() {\n\t\tthis.setState({ isCollapsed: true, collapseClass: 'collapse', collapseButtonClass: 'icon-expand' });\n\t\tthis.triggerCallbacks('expandtoggle', [false]);\n\t}\n\n\t/**\n\t * Expands panel.\n\t */\n\texpand() {\n\t\tthis.setState({ isCollapsed: false, collapseClass: 'expand', collapseButtonClass: 'icon-collapse' });\n\t\tthis.triggerCallbacks('expandtoggle', [true]);\n\t}\n\n\t/**\n\t * Close carousel.\n\t */\n\tclose() {\n\t}\n\n\t/**\n\t * @override\n\t */\n\tshow() {\n\t\tsuper.show();\n\t\tthis._updateCarousel();\n\t\tif ((this._progressTooltip !== null) && (this._children.slides.length > 1)) {\n\t\t\tthis._progressTooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * Clear carousel slides.\n\t */\n\tclear() {\n\t\tthis._children.track.innerHTML = '';\n\t\tthis._children.slides = [];\n\t\tthis._onEnter = {};\n\t\tthis._onLeave = {};\n\t\tthis._currentInfo = null;\n\t\tthis._state.previousIndex = 1;\n\t\tthis._state.currentIndex = this._config.initialSlideIndex || 0;\n\t}\n\n\t/**\n\t * Toggles between expand and collapse states.\n\t */\n\t_toggleCollapse() {\n\t\tif (this._state.isCollapsed) {\n\t\t\tthis.expand();\n\t\t}\n\t\telse {\n\t\t\tthis.collapse();\n\t\t}\n\t}\n}\n\nCarousel.html = html;\n\nexport default Carousel;\n","import Carousel from './carousel.js';\nimport 'tippy.js/dist/tippy.css';\nimport './carousel.css';\n\nexport default Carousel;\n","import Swiper, { Navigation, Pagination, Keyboard, Mousewheel } from 'swiper';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './carousel_panel.html';\n\nSwiper.use([Navigation, Pagination, Keyboard, Mousewheel]);\n\n/**\n * The carousel panel component is a collapsible panel with a swiper carousel.\n * The content passed to this component determines the content of the carousel. It can either be a component, or pure HTML.\n */\nclass CarouselPanel extends BaseComponent {\n\t/**\n\t * Constructor\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options = {}) {\n\t\t/**\n\t\t * NOTE:\n\t\t * It's important to be able to use multiple swiper carousels in the same app.\n\t\t * Therefore we need to make sure we're using unique classes to pass to the Swiper config in order that it connects to the correct elements.\n\t\t * Only the classes used for CSS styling should remain the same between multiple swiper carousel instances.\n\t\t */\n\n\t\tconst { paginationClass, prevButtonClass, nextButtonClass } = options;\n\n\t\toptions.config = {\n\t\t\tdirection: 'horizontal',\n\n\t\t\tspeed: 600,\n\t\t\tgrabCursor: true,\n\n\t\t\ttouchStartPreventDefault: false,\n\n\t\t\tslidesPerView: 1,\n\t\t\tspaceBetween: 100,\n\t\t\tkeyboard: {\n\t\t\t\tenabled: true\n\t\t\t},\n\t\t\tmousewheel: {\n\t\t\t\tforceToAxis: true,\n\t\t\t\tthresholdDelta: 100\n\t\t\t},\n\n\t\t\t// Navigation arrows\n\t\t\tnavigation: {\n\t\t\t\tprevEl: `.${prevButtonClass}`,\n\t\t\t\tnextEl: `.${nextButtonClass}`\n\t\t\t},\n\n\t\t\t// Conditional pagination if we have a pagination class\n\n\t\t\t...paginationClass && {\n\t\t\t\tpagination: {\n\t\t\t\t\tel: `.${paginationClass}`,\n\t\t\t\t\ttype: 'custom',\n\t\t\t\t\trenderCustom: (swiper, current, total) => `${current} of ${total}`\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t...options.config\n\t\t};\n\n\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\t// text\n\t\t\t// note: despite these being fixed values, they only work in the HTML template if they're in state\n\t\t\tpreTitle: 'viewing',\n\t\t\ttitle: 'Panel Title',\n\t\t\tcaption: 'This is the panel subtitle',\n\n\t\t\t// classes\n\t\t\tcarouselClass: '',\n\t\t\tpaginationClass: '',\n\t\t\tprevButtonClass: '',\n\t\t\tnextButtonClass: '',\n\t\t\tisExpandedClass: 'collapsed',\n\t\t\ttabsVisibleClass: 'hidden',\n\t\t\ttabNumClass: '',\n\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Define swiper prop\n\t\t */\n\t\tthis._swiper = null;\n\n\t\t/**\n\t\t * Define tab inidices.\n\t\t */\n\t\tthis._tabIndices = null;\n\n\t\t/** Define the active tab index */\n\t\tthis._activeTabIndex = null;\n\n\t\t/**\n\t\t * All tab elements\n\t\t */\n\t\tthis._tabElements = null;\n\n\t\t/**\n\t\t * Class name props\n\t\t */\n\t\tthis._bulletClass = 'swiper-pagination-bullet';\n\t\tthis._activeBulletClass = 'swiper-pagination-bullet-active';\n\t\tthis._swiperSlideClass = 'swiper-slide';\n\n\t\t/**\n\t\t * Slide change callback\n\t\t */\n\t\tthis._onSlideChange = null;\n\n\t\t/**\n\t\t * Does showing the panel also expand it\n\t\t */\n\t\tthis._expandOnShow = false;\n\n\t\t/**\n\t\t * Orientation store\n\t\t */\n\t\tthis._orientation = null;\n\n\t\t/**\n\t\t * Resize timeout\n\t\t */\n\t\tthis._resizeTimeout = null;\n\n\t\t/**\n\t\t * _isInitialized boolean.\n\t\t */\n\t\tthis._isInitialized = null;\n\n\t\t/**\n\t\t * Create an expandtoggle callback\n\t\t */\n\t\tthis._eventNames.push('expandtoggle');\n\t\tthis._initCallbacks();\n\n\t\t// Bind functions.\n\t\tthis.bindFunctions(['_onTabClick']);\n\t}\n\n\t/**\n\t * Add swiper events\n\t * NOTE:\n\t * Normally, when a components state is determined by the URL, buttons and gestures on the component itself should only update the URL.\n\t * However, in the case of swiper, the draggable component needs to be animating BEFORE we know which URL to go to. Therefore we're instead allowing\n\t * all of the built in swiping animations, and then changing the URL simultaneously.\n\t * We have to be careful with this method to avoid letting the component and URL go out of sync. For unstance, if the user were to manually enter a URL.\n\t */\n\t_addEvents() {\n\t\tthis._swiper.on('slideChange', params => {\n\t\t\tconst { realIndex, previousIndex } = params;\n\t\t\tlet bulletIndex = realIndex;\n\n\t\t\t// Call onSlideChange if set (in sub class)\n\t\t\ttypeof this._onSlideChange === 'function' && this._onSlideChange(params);\n\n\t\t\t// Check if the previous slide had a scrollbar, if so, scroll to top and make sure mousedown is false\n\t\t\tconst prevSlideEl = this._children.swiperSlides.childNodes[previousIndex];\n\t\t\tif (prevSlideEl?._scrollInstance) {\n\t\t\t\tprevSlideEl._isMousedown = false;\n\t\t\t\tprevSlideEl._scrollInstance.scroll(0);\n\t\t\t}\n\n\t\t\t// If we have tabs, we may need to toggle the active class for all tab elements.\n\t\t\tif (this._tabElements) {\n\t\t\t\tconst newTabIndex = this._tabIndices.findIndex(({ start, end }) => realIndex >= start && realIndex <= end);\n\n\t\t\t\tconst { start } = this._tabIndices[newTabIndex];\n\t\t\t\tbulletIndex -= start;\n\n\t\t\t\tif (newTabIndex > -1 && newTabIndex !== this._activeTabIndex) {\n\t\t\t\t\tthis._tabElements.forEach((tabEl, i) => {\n\t\t\t\t\t\ttabEl.classList.toggle('active', i === newTabIndex);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._activeTabIndex = newTabIndex;\n\n\t\t\t\t\t// Make sure we re-create and replace the bullets.\n\t\t\t\t\tthis._createBullets(bulletIndex);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update the active bullet\n\t\t\tthis._setActiveBullet(bulletIndex);\n\t\t});\n\n\t\t// Click event to handle definition overlays\n\t\tthis._children.swiperSlides.addEventListener('click', event => {\n\t\t\tconst definition = event?.target?.dataset?.def;\n\t\t\tif (definition) {\n\t\t\t\tthis._app.getComponent('definitionOverlay').navigateToDefinition(definition);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks whether orientation has changed and sets new orientation.\n\t * @returns {boolean}\n\t */\n\t_hasOrientationChanged() {\n\t\tconst newOrientation = AppUtils.isPortrait() ? 'portrait' : 'landscape';\n\t\tconst orientationChanged = this._orientation !== newOrientation;\n\t\tthis._orientation = newOrientation;\n\n\t\treturn orientationChanged;\n\t}\n\n\t/**\n\t * Check the scroll height of each slide to determine whether it requires a scrollbar.\n\t */\n\t_addScrollbars() {\n\t\t// Test for orientation change and record orientation.\n\t\tconst orientationChanged = this._hasOrientationChanged();\n\n\t\tthis._children?.swiperSlides?.childNodes?.forEach(slideEl => {\n\t\t\tconst { clientHeight, scrollHeight, cHeight, sHeight } = slideEl;\n\n\t\t\tconst heightUnchanged = (cHeight && cHeight === clientHeight) && (sHeight && sHeight === scrollHeight);\n\n\n\t\t\t// Return if no height changes.\n\t\t\tif (heightUnchanged && !orientationChanged) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Destroy old scrollbar if exists.\n\t\t\tslideEl._scrollInstance?.destroy();\n\n\t\t\t// Get new heights.\n\t\t\tconst { clientHeight: newClientHeight, scrollHeight: newScrollHeight } = slideEl;\n\t\t\tslideEl.sHeight = newClientHeight;\n\t\t\tslideEl.cHeight = newScrollHeight;\n\n\n\t\t\t// Compare new element heights to see if we need a scrollbar again.\n\t\t\tif (newScrollHeight > newClientHeight) {\n\t\t\t\tslideEl.classList.add('scrollable');\n\n\t\t\t\tslideEl._scrollInstance ??= AppUtils.addScrollbar(slideEl);\n\n\n\t\t\t\t// Add click and drag scrolling (seemingly not included in OverlayScrollbars)\n\t\t\t\tslideEl._isMousedown = false;\n\t\t\t\tslideEl._clientY = 0;\n\n\t\t\t\tconst onMouseMove = ({ clientY }) => {\n\t\t\t\t\tif (slideEl._isMousedown) {\n\t\t\t\t\t\tconst yDiff = slideEl._clientY - clientY;\n\t\t\t\t\t\tslideEl._scrollInstance.scroll({ y: `+=${yDiff}` });\n\t\t\t\t\t\tslideEl._clientY = clientY;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tslideEl.onmousedown = ({ clientY }) => {\n\t\t\t\t\tslideEl._isMousedown = true;\n\t\t\t\t\tslideEl._clientY = clientY;\n\n\t\t\t\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\t\t\t\twindow.addEventListener('mouseup', function onMouseUp() {\n\t\t\t\t\t\tslideEl._isMousedown = false;\n\t\t\t\t\t\twindow.removeEventListener('mousemove', onMouseMove);\n\t\t\t\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create tabs with content\n\t * @param {Array} allTabsContent\n\t */\n\tcreateTabs(allTabsContent) {\n\t\t// Set  tab  indices to empty array.\n\t\tthis._tabIndices = [];\n\t\tthis._activeTabIndex = 0;\n\t\tlet indexPointer = 0;\n\n\t\t// if we already have a panel, we need to destroy it.\n\t\tif (this._swiper) {\n\t\t\tthis._destroy();\n\t\t}\n\n\t\t// Create the tab elements and append them to tab container.\n\t\tthis._tabElements = allTabsContent.map(({ title, content }, i) => {\n\t\t\tconst tabButtonEl = document.createElement('button');\n\t\t\ttabButtonEl.innerHTML = title;\n\t\t\ttabButtonEl.className = `clickable ${i === this._activeTabIndex ? 'active' : ''}`;\n\t\t\ttabButtonEl.addEventListener('click', this._onTabClick);\n\n\t\t\t// Add tab start and end indices.\n\t\t\tthis._tabIndices.push({\n\t\t\t\tstart: indexPointer,\n\t\t\t\tend: indexPointer + content.length - 1\n\t\t\t});\n\t\t\tindexPointer += content.length;\n\n\n\t\t\t// Create the slide element from the tab data and add slide.\n\t\t\tfor (const tabData of content) {\n\t\t\t\tconst slideElements = this._createSlideElements(tabData);\n\t\t\t\tthis.addSlide(slideElements, tabData.onClick);\n\t\t\t}\n\n\t\t\treturn tabButtonEl;\n\t\t});\n\n\t\tthis._children.tabsContainer.replaceChildren(...this._tabElements);\n\n\n\t\t// Make sure we set the tabs class to be visible and num tabs class.\n\t\tthis.setState({\n\t\t\ttabsVisibleClass: '',\n\t\t\ttabNumClass: `tabs-${this._tabElements.length}`\n\t\t});\n\t}\n\n\t/**\n\t * Create slide elements from tab data\n\t * @param {object} tabData - content info\n\t * @returns {HTMLElement}\n\t */\n\t_createSlideElements(tabData) {\n\t\tconst { title, content, value } = tabData;\n\n\t\tconst slideElements = [];\n\n\t\tif (title) {\n\t\t\tconst titleEl = document.createElement('h4');\n\t\t\ttitleEl.className = 'title semi';\n\t\t\ttitleEl.innerHTML = title;\n\t\t\tslideElements.push(titleEl);\n\t\t}\n\n\t\tif (content) {\n\t\t\tconst contentEl = document.createElement('div');\n\t\t\tcontentEl.className = 'description';\n\t\t\tcontentEl.innerHTML = content;\n\t\t\tslideElements.push(contentEl);\n\t\t}\n\n\t\tif (value) {\n\t\t\tconst valueEl = document.createElement('div');\n\t\t\tvalueEl.className = 'value semi';\n\t\t\tvalueEl.innerHTML = value;\n\t\t\tslideElements.push(valueEl);\n\t\t}\n\n\t\treturn slideElements;\n\t}\n\n\t/**\n\t * Create bullet pagination\n\t * @param {number} activeBullet\n\t */\n\t_createBullets(activeBullet = 0) {\n\t\tconst { bullets } = this._children;\n\t\tconst { slides } = this._swiper;\n\n\t\tlet slidesArray = [...slides];\n\t\tlet startOffset = 0;\n\n\t\tif (this._tabElements) {\n\t\t\tconst { start, end } = this._tabIndices[this._activeTabIndex];\n\t\t\tstartOffset = start;\n\t\t\tslidesArray = slidesArray.slice(start, end + 1);\n\t\t}\n\n\t\tconst allBullets = [...slidesArray].map((slide, i) => {\n\t\t\tconst bullet = document.createElement('span');\n\t\t\tbullet.classList.add(this._bulletClass);\n\n\t\t\t// Set slide index.\n\t\t\tbullet.setAttribute('data-slide-index', i + startOffset);\n\n\t\t\t// Add the click event\n\t\t\tbullet.addEventListener('click', e => {\n\t\t\t\tconst { slideIndex } = e.target.dataset;\n\n\t\t\t\tthis._swiper.slideTo(slideIndex);\n\t\t\t});\n\n\t\t\treturn bullet;\n\t\t});\n\n\n\t\t// Hide the bullets, replace them, then show them again.\n\t\tconst onHideFinish = transition => {\n\t\t\tif (transition && transition.propertyName !== 'width') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Replace the bullets and unhide.\n\t\t\tbullets.replaceChildren(...allBullets);\n\t\t\tbullets.classList.remove('hidden');\n\n\t\t\t// Set default active bullet to index 0 if initial create\n\t\t\tthis._setActiveBullet(activeBullet);\n\t\t};\n\n\t\t// Check if already hidden, if so call onHideFinish.\n\t\tif (bullets.classList.contains('hidden')) {\n\t\t\tonHideFinish();\n\t\t}\n\t\telse {\n\t\t\tbullets.classList.add('hidden');\n\t\t\tbullets.ontransitionend = onHideFinish;\n\t\t\tbullets.ontransitioncancel = onHideFinish;\n\t\t}\n\t}\n\n\t/**\n\t * Makes sure all bullets are deactivated except the passed index\n\t * @param {number} activeIndex\n\t */\n\t_setActiveBullet(activeIndex) {\n\t\tconst { bullets } = this._children;\n\n\t\tbullets.childNodes.forEach((bullet, i) => {\n\t\t\tbullet.classList.remove(this._activeBulletClass);\n\t\t\tif (i === activeIndex) {\n\t\t\t\tbullet.classList.add(this._activeBulletClass);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Add an array of elements as a slide to the carousel\n\t * @param {Array<HTMLElement>} elements\n\t * @param {Function|null} onClick\n\t */\n\taddSlide(elements = [], onClick) {\n\t\tconst slideEl = document.createElement('div');\n\n\t\t// Determine classes.\n\t\tslideEl.className = `${onClick ? 'clickable' : ''} ${this._swiperSlideClass}`;\n\n\t\t// Add click event listener if it exists\n\t\tonClick && slideEl.addEventListener('click', onClick);\n\n\t\tslideEl.replaceChildren(...elements);\n\n\t\tthis._children.swiperSlides.append(slideEl);\n\t}\n\n\t/**\n\t * Wait for slides DOM detection,\n\t * create the swiper object,\n\t * call post swiper init function\n\t * @returns {Promise}\n\t */\n\tinitSwiper() {\n\t\tconst { carouselClass } = this._state;\n\n\t\tconst selector = `.${carouselClass} .swiper-wrapper > div`;\n\n\t\treturn AppUtils.elementReady(selector)\n\t\t\t.then(() => {\n\t\t\t\t// If there's already a swiper, update it, add bullet and slide to zero.\n\t\t\t\tif (this._swiper) {\n\t\t\t\t\tthis._swiper.update();\n\n\t\t\t\t\t// Add scrollbars and bullets.\n\t\t\t\t\tthis._addScrollbars();\n\t\t\t\t\tthis._createBullets();\n\n\t\t\t\t\tthis._swiper.slideTo(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise, create it.\n\t\t\t\t\tthis._swiper = new Swiper(`.${carouselClass}`, this._config);\n\t\t\t\t\tthis._postSwiperInitFunction(this._swiper);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Called after swiper is initialized.\n\t */\n\t_postSwiperInitFunction() {\n\t\t// Add event handler\n\t\tthis._addEvents();\n\n\t\t// Add scrollbars\n\t\tthis._addScrollbars();\n\n\t\t// Add bullets\n\t\tthis._createBullets();\n\n\t\t//  Slide to zero.\n\t\tthis._swiper.update();\n\t\tthis._swiper.slideTo(0);\n\t}\n\n\t/**\n\t * Destroy the slider\n\t */\n\t_destroy() {\n\t\tthis._children.swiperSlides.innerHTML = '';\n\t\tclearTimeout(this._resizeTimeout);\n\t}\n\n\t/**\n\t * Handles a tab select\n\t * @param {Event} e\n\t */\n\t_onTabClick(e) {\n\t\t// Slide to correct start index.\n\t\tconst activeTabIndex = this._tabElements.findIndex(tab => tab === e.target);\n\t\tconst { start } = this._tabIndices[activeTabIndex];\n\t\tthis._swiper.slideTo(start);\n\t}\n\n\t/**\n\t * Expands panel\n\t */\n\texpand() {\n\t\tthis.setState({ isExpanded: true, isExpandedClass: 'expanded' });\n\t\tthis.triggerCallbacks('expandtoggle', [true]);\n\t}\n\n\t/**\n\t * Collapses panel\n\t */\n\tcollapse() {\n\t\tthis.setState({ isExpanded: false, isExpandedClass: 'collapsed' });\n\t\tthis.triggerCallbacks('expandtoggle', [false]);\n\t}\n\n\t/**\n\t * Sets expand state and triggers callback\n\t * @param {boolean} expanded\n\t */\n\tsetExpandState(expanded) {\n\t\tthis.setState({ isExpanded: expanded, isExpandedClass: expanded ? 'expanded' : 'collapsed' });\n\t\tthis.triggerCallbacks('expandtoggle', [expanded]);\n\t}\n\n\n\t/**\n\t * Show override can also conditionally expand the panel\n\t * @param {boolean} initSwiper\n\t */\n\tshow(initSwiper = true) {\n\t\t// Init the swiper if the UI is visible and there is content.\n\t\tconst visibleUI = this._app.getManager('layer').getLayer('ui').visible;\n\t\tconst hasSwiperContent = this._children.swiperSlides?.childNodes?.length;\n\n\t\tconst showFunc = () => {\n\t\t\tif (this._expandOnShow) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisVisible: true,\n\t\t\t\t\tisVisibleClass: this._class.isVisible.true,\n\t\t\t\t\tisExpanded: true,\n\t\t\t\t\tisExpandedClass: 'expanded'\n\t\t\t\t});\n\n\t\t\t\tthis.triggerCallbacks('expandtoggle', [true]);\n\t\t\t\tthis.triggerCallbacks('visiblechange', [true]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsuper.show();\n\t\t\t}\n\t\t};\n\n\t\tif (initSwiper && visibleUI && hasSwiperContent) {\n\t\t\tthis.initSwiper().then(() => showFunc());\n\t\t}\n\t\telse {\n\t\t\tshowFunc();\n\t\t}\n\t}\n\n\n\t/**\n\t * Hide override to also collapse the panel\n\t */\n\thide() {\n\t\tthis.setState({\n\t\t\tisVisible: false,\n\t\t\tisVisibleClass: this._class.isVisible.false,\n\t\t\tisExpanded: false,\n\t\t\tisExpandedClass: 'collapsed'\n\t\t});\n\n\t\tthis.triggerCallbacks('expandtoggle', [false, false]);\n\t\tthis.triggerCallbacks('visiblechange', [false]);\n\n\t\t// Set init boolean to false only if we're expandingOnShow\n\t\tif (this._expandOnShow) {\n\t\t\tthis._isInitialized = false;\n\t\t}\n\t}\n\n\t/**\n\t * Resize.\n\t * Updating the scrollbars requires a timeout to wait for other components to finish moving / resizing.\n\t */\n\tresize() {\n\t\t// ToDo: Can also use lodash's debounced.\n\t\tclearTimeout(this._resizeTimeout);\n\t\tthis._resizeTimeout = setTimeout(() => {\n\t\t\tthis._addScrollbars();\n\t\t}, 200);\n\t}\n}\n\nCarouselPanel.html = html;\nexport default CarouselPanel;\n","import CarouselPanel from './carousel_panel';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport 'swiper/css/keyboard';\nimport 'swiper/css/mousewheel';\nimport './carousel_panel.css';\n\nexport default CarouselPanel;\n","import {\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './checkbox.html';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n */\nexport class Checkbox extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, null, {\n\t\t\tconfig: {\n\t\t\t\tkey: '',\n\t\t\t\tcolorClass: '',\n\t\t\t\tfunction: null\n\t\t\t},\n\t\t\tisChecked: false,\n\t\t\ttext: '',\n\t\t\tcheckboxClass: '',\n\t\t\ttextClass: '',\n\t\t\t...options\n\t\t});\n\n\t\t// Storing class names\n\t\tObject.assign(this._class, {\n\t\t\tcheckbox: {\n\t\t\t\ttrue: 'checked',\n\t\t\t\tfalse: ''\n\t\t\t},\n\t\t\tcolor: {\n\t\t\t\ttrue: this._config.colorClass,\n\t\t\t\tfalse: ''\n\t\t\t},\n\t\t\tcheckmark: {\n\t\t\t\ttrue: 'icon-checkmark',\n\t\t\t\tfalse: 'checkbox-hover'\n\t\t\t}\n\t\t});\n\n\t\tObject.assign(this._state, {\n\t\t\tisCheckedClass: this._class.checkbox[this._state.isChecked],\n\t\t\tcolorClass: this._class.color[this._state.isChecked],\n\t\t\ticonCheckmarkClass: this._class.checkmark[this._state.isChecked]\n\t\t});\n\n\t\tthis.bindFunctions(['toggle']);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tif (this._config.key) {\n\t\t\tthis._element.setAttribute('key', this._config.key);\n\t\t}\n\n\t\tthis._element.addEventListener('click', this.toggle);\n\t}\n\n\t/**\n\t * Called on clicking checkbox.\n\t * @param {PointerEvent} e\n\t * @param {boolean} [suppress=false] - Only update states, suppress the function call if True.\n\t * @returns {Promise}\n\t */\n\tasync toggle(e, suppress = false) {\n\t\tconst isChecked = !this._state.isChecked;\n\t\tconst isCheckedClass = this._class.checkbox[isChecked];\n\t\tconst colorClass = this._class.color[isChecked];\n\t\tconst iconCheckmarkClass = this._class.checkmark[isChecked];\n\n\t\tthis.setState({\n\t\t\tisChecked,\n\t\t\tisCheckedClass,\n\t\t\tcolorClass,\n\t\t\ticonCheckmarkClass\n\t\t}, async () => {\n\t\t\tif (!suppress && this._config.function instanceof Function) {\n\t\t\t\tawait this._config.function(e);\n\t\t\t}\n\t\t});\n\t}\n}\n\nCheckbox.html = html;\n\nexport default Checkbox;\n","import Checkbox from './checkbox.js';\nimport './checkbox.css';\n\nexport default Checkbox;\n","import {\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport moment from 'moment-timezone';\nimport html from './clock.html';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n */\nexport class Clock extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\tisDateVisible: true,\n\t\t\tisTimeVisible: true,\n\t\t\tisMeridiemVisible: true,\n\t\t\tallowEdit: true,\n\t\t\tdate: 'Date',\n\t\t\ttime: 'Time',\n\t\t\tmeridiem: '',\n\t\t\talert: '',\n\t\t\tisKioskSessionTimer: false,\n\t\t\t...options\n\t\t});\n\n\t\tObject.assign(this._state, {\n\t\t\tisDateVisibleClass: this._class.isVisible[this._state.isDateVisible],\n\t\t\tisTimeVisibleClass: this._class.isVisible[this._state.isTimeVisible],\n\t\t\tisMeridiemVisibleClass: this._class.isVisible[this._state.isMeridiemVisible]\n\t\t});\n\n\t\tthis.bindFunctions(['update', 'onDateTimeClick']);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\t\tconst { allowEdit, isKioskSessionTimer } = this._state;\n\n\t\tthis._app.getManager('time').setDateFormats({\n\t\t\tutc: {\n\t\t\t\tdate: 'MMM DD, YYYY',\n\t\t\t\ttime: 'HH[:]mm[:]ss'\n\t\t\t},\n\t\t\tlocal: {\n\t\t\t\tdate: 'MMM DD, YYYY',\n\t\t\t\ttime: 'hh[:]mm[:]ss',\n\t\t\t\tmeridiem: 'a',\n\t\t\t\tparse: ['MMM D, YYYY h:m:s a', 'MMM D, YYYY h:m a', 'MMM D, YYYY h a', 'MMM D, YYYY']\n\t\t\t}\n\t\t});\n\n\t\tthis._app.getManager('time').setDisplayUTC(false);\n\n\t\tconst { displayContainer, timeInput, timeForm } = this._children;\n\n\t\t// Time input\n\t\tif (allowEdit) {\n\t\t\tdisplayContainer.classList.add('editable');\n\t\t\ttimeInput.addEventListener('keyup', event => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\t\t\ttimeInput.addEventListener('keydown', event => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t});\n\n\t\t\t// Time form\n\t\t\ttimeForm.classList.add('editable');\n\t\t\ttimeForm.addEventListener('submit', event => {\n\t\t\t\ttimeInput.blur();\n\t\t\t\tthis._parseTime(timeInput.value);\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\ttimeInput.addEventListener('blur', _ => {\n\t\t\t\ttimeForm.classList.add('hidden');\n\t\t\t\tdisplayContainer.classList.remove('hidden');\n\t\t\t});\n\t\t}\n\n\t\tthis._setVariables(this._element);\n\n\t\tthis._children.date.classList.add('semi');\n\t\tthis._children.time.classList.add('semi');\n\t\tthis._children.meridiem.classList.add('semi');\n\t\tthis._children.timeInput.classList.add('semi');\n\t\tthis._children.timeForm.classList.add('semi');\n\n\t\tif (!isKioskSessionTimer) {\n\t\t\tthis._callbackRegistry.push({\n\t\t\t\temitter: this._app.getManager('time'),\n\t\t\t\tevent: 'update',\n\t\t\t\tcallback: this.update\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handle date/time click\n\t */\n\tonDateTimeClick() {\n\t\tconst { displayContainer, timeInput, timeForm, date, time, meridiem } = this._children;\n\n\t\tconst routeManager = this._app.getManager('router');\n\t\tconst isStory = routeManager.currentRoute.url.includes('story');\n\n\t\tif (!this._state.allowEdit || isStory) {\n\t\t\treturn;\n\t\t}\n\t\tconst meridiemText = this._state.meridiem ? ` ${meridiem.innerHTML}` : '';\n\t\ttimeInput.value = `${date.innerHTML} ${time.innerHTML}${meridiemText}`;\n\t\tdisplayContainer.classList.add('hidden');\n\t\ttimeForm.classList.remove('hidden');\n\t\ttimeInput.focus();\n\t}\n\n\t/**\n\t * Checks if time should be Earth Received Time.\n\t * @returns {boolean}\n\t */\n\tisERT() {\n\t\treturn this._isERT;\n\t}\n\n\t/**\n\t * Toggle clock field's visibility.\n\t * @param {string} field - date, time, or meridiem\n\t * @param {boolean} isVisible\n\t */\n\ttoggle(field, isVisible) {\n\t\tswitch (field) {\n\t\t\tcase 'date':\n\t\t\t\tthis.setState({\n\t\t\t\t\tisDateVisible: isVisible,\n\t\t\t\t\tisDateVisibleClass: this._class.isVisible[isVisible]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'time':\n\t\t\t\tthis.setState({\n\t\t\t\t\tisTimeVisible: isVisible,\n\t\t\t\t\tisTimeVisibleClass: this._class.isVisible[isVisible]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'meridiem':\n\t\t\t\tthis.setState({\n\t\t\t\t\tisMeridiemVisible: isVisible,\n\t\t\t\t\tisMeridiemVisibleClass: this._class.isVisible[isVisible]\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Parse and set time from input value.\n\t * @param {string} timeString\n\t */\n\t_parseTime(timeString) {\n\t\tconst router = this._app.getManager('router');\n\t\tconst time = this._app.getManager('time').parseTime(timeString, 'parse');\n\t\tif (time.isValid()) {\n\t\t\t// If time is UTC, force to UTC\n\t\t\t// Otherwise force to local\n\t\t\tthis._app.getManager('time').setDisplayUTC(time.isUTC());\n\t\t\tconst timeUrl = this._app.getManager('time').getTimeUrl(time);\n\t\t\t// Navigate to time\n\t\t\trouter.navigate({ time: timeUrl }, router.currentRoute.url);\n\t\t}\n\t\telse {\n\t\t\tconsole.error('Invalid input: ' + timeString);\n\t\t\t// Remove time from query, which will reset time to now.\n\t\t\t// In case time is not in query, it won't do anything.\n\t\t\trouter.navigate({ __remove: ['time'] }, router.currentRoute.url);\n\t\t}\n\t}\n\n\t/**\n\t * Update time display.\n\t * @param {moment} time\n\t * @param {boolean} kioskCountdown - if updating a kiosk session timer\n\t */\n\tupdate(time, kioskCountdown = false) {\n\t\t// Don't update if not visible\n\t\tif (!this._state.isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If a kiosk countdown, only update the clock with the time passed in\n\t\tif (kioskCountdown) {\n\t\t\tthis.setState({ time });\n\t\t}\n\t\telse {\n\t\t\t// Update with regular time and date\n\t\t\tthis.setState({\n\t\t\t\tdate: time.format(this._app.getManager('time').getDateFormat('date')),\n\t\t\t\ttime: time.format(this._app.getManager('time').getDateFormat('time')),\n\t\t\t\tmeridiem: this._app.getManager('time').isUTC() ? '' : time.format(this._app.getManager('time').getDateFormat('meridiem')),\n\t\t\t\talert: this._app.getManager('time').forcedPause ? 'alert' : ''\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Change time rate to 1s/s and time to real time.\n\t */\n\tbackToLive() {\n\t\tconst router = this._app.getManager('router');\n\t\tconst timeManager = this._app.getManager('time');\n\t\tif (!timeManager.isNow()) {\n\t\t\tconst time = timeManager.getTimeUrl(timeManager.getNow());\n\t\t\tconst oldTime = router.query.time;\n\n\t\t\trouter.navigate({\n\t\t\t\t__remove: ['time', 'rate']\n\t\t\t}, router.currentRoute.url);\n\n\t\t\tif (oldTime !== time) {\n\t\t\t\ttimeManager.setTimeRate(1);\n\t\t\t\ttimeManager.setToNow();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the limit message and calls show/hide.\n\t * @param {number} limit - : 1 is max exceeded, -1 is min preceeded\n\t * @param {string} message\n\t */\n\tsetLimitMessage(limit, message) {\n\t\t// Set the limit message.\n\t\tconst messageTimeMs = 3000;\n\n\t\tlet limitMessage;\n\n\t\tif (!message) {\n\t\t\t// Determine limit message.\n\t\t\tconst { currentView } = this._app.getManager('router');\n\t\t\tconst { _isSpacecraft } = this._app.getView(currentView);\n\t\t\tlet messageSuffix = `time ${limit === 1 ? 'maximum' : 'minimum'}`;\n\n\t\t\tif (currentView === 'event') {\n\t\t\t\tmessageSuffix = `event ${limit === 1 ? 'end' : 'start'}`;\n\t\t\t}\n\t\t\telse if (_isSpacecraft) {\n\t\t\t\tmessageSuffix = `mission ${limit === 1 ? 'end' : 'start'}`;\n\t\t\t}\n\n\t\t\tlimitMessage = limit === 1 ? `\"cannot exceed ${messageSuffix}\"` : `\"cannot preceed ${messageSuffix}\"`;\n\t\t}\n\t\telse {\n\t\t\tlimitMessage = `\"${message}\"`;\n\t\t}\n\n\t\tthis._children.displayContainer?.style.setProperty('--limit-message', limitMessage);\n\n\t\t// Display the message.\n\t\tthis._displayLimitMessage(true);\n\n\t\t// Allow time to read then hide the message.\n\t\tthis.limitMessageTimeout = setTimeout(() => {\n\t\t\tthis._displayLimitMessage(false);\n\t\t}, messageTimeMs);\n\t}\n\n\t/**\n\t * Show or hide the limit message.\n\t * @param {boolean} visible\n\t */\n\t_displayLimitMessage(visible) {\n\t\tthis._children.displayContainer?.classList.toggle('limit', visible);\n\t}\n\n\t/**\n\t * Overwritten base __disable.\n\t */\n\t__disable() {\n\t\tthis._displayLimitMessage(false);\n\t\tclearTimeout(this.limitMessageTimeout);\n\n\t\tsuper.__disable();\n\t}\n}\n\nClock.html = html;\n\nexport default Clock;\n","import Clock from './clock.js';\nimport './clock.css';\n\nexport default Clock;\n","import tippy, { followCursor } from 'tippy.js';\nimport moment from 'moment-timezone';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './clock_shortcut.html';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n */\nclass ClockShortcut extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app, null, {\n\t\t\thasHover: false,\n\t\t\tliveContainerClass: 'hidden',\n\t\t\tliveClass: 'live',\n\t\t\tliveText: 'live',\n\t\t\tliveIcon: 'icon-live',\n\t\t\treplayClass: 'container',\n\t\t\treplayIcon: 'icon-replay'\n\t\t});\n\n\t\tthis._state.replayClass = 'hidden';\n\t\tthis._class.fontSize.small = 'x-small';\n\n\t\t/**\n\t\t * Callback to override back to live behavior.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._liveCallback = null;\n\n\t\tthis.bindFunctions(['_replay', 'backToLive', 'update']);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\t// This is not dynamic, so switching betweem desktop and mobile will not update these event listeners...\n\t\tconst { canHover, isTouch } = this._app;\n\t\tif (canHover && !isTouch) {\n\t\t\tthis._children.liveContainer.addEventListener('mouseenter', () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\thasHover: true,\n\t\t\t\t\tliveIcon: 'icon-live'\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis._children.liveContainer.addEventListener('mouseleave', () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\thasHover: false,\n\t\t\t\t\tliveIcon: 'icon-back-to-live'\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Set default tippy props\n\t\t * See docs: https://atomiks.github.io/tippyjs/v6/methods/\n\t\t */\n\t\ttippy.setDefaultProps({\n\t\t\ttheme: 'default',\n\t\t\ttouch: ['hold', 2000],\n\t\t\tdelay: [600, null],\n\t\t\tplugins: [followCursor]\n\t\t});\n\t\ttippy(this._children.liveContainer, { content: 'Reset time to live.', placement: 'top' });\n\n\t\tthis._children.live.classList.add('semi', 'color');\n\t\tthis._children.replay.classList.add('semi', 'color');\n\n\t\t// Remove replay element\n\t\tthis._element.removeChild(this._children.replayContainer);\n\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('time'),\n\t\t\tevent: 'update',\n\t\t\tcallback: this.update\n\t\t});\n\t}\n\n\t/**\n\t * Sets a custom callback for the go back to live button.\n\t * @param {Function} callback\n\t */\n\tsetCallback(callback) {\n\t\tif (typeof callback === 'function') {\n\t\t\tthis._liveCallback = callback;\n\t\t}\n\t\telse {\n\t\t\tthis._liveCallback = null;\n\t\t}\n\t}\n\n\t/**\n\t * Change time rate to 1s/s and time to real time.\n\t */\n\tbackToLive() {\n\t\tif (typeof this._liveCallback === 'function') {\n\t\t\tthis._liveCallback();\n\t\t}\n\t\telse {\n\t\t\tconst router = this._app.getManager('router');\n\t\t\tconst timeManager = this._app.getManager('time');\n\t\t\tif (!timeManager.isNow()) {\n\t\t\t\tconst time = timeManager.getTimeUrl(timeManager.getNow());\n\t\t\t\tconst oldTime = router.query.time;\n\n\t\t\t\trouter.navigate({\n\t\t\t\t\t__remove: ['time', 'rate']\n\t\t\t\t}, router.currentRoute.url);\n\n\t\t\t\tif (oldTime !== time) {\n\t\t\t\t\ttimeManager.setTimeRate(1);\n\t\t\t\t\ttimeManager.setToNow();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Change time rate to 1s/s and time to start time.\n\t */\n\t_replay() {\n\t\tconst navigated = this._app.getManager('router').navigate({ __remove: ['time', 'rate'] });\n\t\tif (!navigated) {\n\t\t\tthis._app.getManager('time').setTimeRate(1);\n\t\t\tthis._app.getManager('time').setToStart();\n\t\t}\n\t}\n\n\t/**\n\t * Update time display.\n\t * @param {moment} time\n\t */\n\tupdate(time) {\n\t\t// Don't update if not visible\n\t\tif (!this._state.isVisible) {\n\t\t\treturn;\n\t\t}\n\t\tconst isNow = this._app.getManager('time').isNow();\n\t\tconst now = this._app.getManager('time').getNow();\n\t\tconst inBounds = this._app.getManager('time').isWithinLimits(now);\n\n\t\tconst newState = {\n\t\t\tliveContainerClass: (inBounds === 0) ? (isNow ? 'active' : 'clickable') : 'hidden',\n\t\t\tliveClass: isNow ? 'live' : '',\n\t\t\treplayClass: AppUtils.isMobileMode() ? 'icon icon-box' : 'container'\n\t\t};\n\n\t\tif (!this._state.hasHover) {\n\t\t\tnewState.liveIcon = isNow ? 'icon-live' : 'icon-back-to-live';\n\t\t}\n\t\tthis.setState(newState);\n\t}\n}\n\nClockShortcut.html = html;\n\nexport default ClockShortcut;\n","import ClockShortcut from './clock_shortcut.js';\nimport 'tippy.js/dist/tippy.css';\nimport './clock_shortcut.css';\n\nexport default ClockShortcut;\n","import {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent,\n\tCameraScripts\n} from '../../internal';\nimport * as Pioneer from 'pioneer';\nimport html from './kiosk_base.html';\nimport './kiosk_base.css';\n\n/**\n * Base kiosk class with autoplay and session timer\n */\nexport class KioskBase extends BaseComponent {\n\tstatic screenLastClicked = Math.ceil(Pioneer.TimeUtils.now());\n\n\t/**\n\t * Constructor\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\tloadingTextVisibleClass: 'hidden',\n\t\t\tsessionEndVisibleClass: 'hidden',\n\t\t\tautoplayVisibleClass: 'hidden',\n\t\t\tsessionTimerVisibleClass: 'hidden',\n\t\t\tcontinueButtonVisibleClass: '',\n\t\t\tforceRestartClass: '',\n\t\t\t...options\n\t\t});\n\n\t\tthis._router = this.app.getManager('router');\n\n\t\tthis.inactivityInterval = null;\n\t\tthis.sessionInterval = null;\n\n\t\tthis.timeOfDaySessionStarted = Math.ceil(Pioneer.TimeUtils.now());\n\n\t\tthis.componentDefaultVisibility = {\n\t\t\tmenu: false,\n\t\t\tshareModal: false,\n\t\t\tinfoPanel: false,\n\t\t\tlayerPanel: false,\n\t\t\tfeaturedStoriesPanel: true,\n\t\t\ttimecontrolsCollapsible: true\n\t\t};\n\t}\n\n\t/**\n\t * Initialize kiosk\n\t */\n\tinit() {\n\t\tsuper.init();\n\n\t\tconst scene = this.app.pioneer.get('main');\n\n\t\tscene.getLoadedPromise().then(() => {\n\t\t\tthis.resetLastClicked();\n\t\t\tthis.validateQueries();\n\t\t\tconst { maxSessionTime, maxInactivityTime, forceRestart } = this._router.configs;\n\n\t\t\t// Only start session/inactivity countdowns if maxSessionTime/maxInactivityTime is specified and valid\n\t\t\tif (this._isValidTime(maxSessionTime)) {\n\t\t\t\tthis.maxSessionTime = AppUtils.minToSec(maxSessionTime);\n\n\t\t\t\tthis.setUpSessionTimerComponent();\n\t\t\t\tthis.startSessionTimer();\n\n\t\t\t\t// Set up session end buttons\n\t\t\t\tif (forceRestart === true) {\n\t\t\t\t\tthis.setState({ continueButtonVisibleClass: 'hidden', forceRestartClass: 'force-restart' });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isValidTime(maxInactivityTime) && !this.inactivityInterval) {\n\t\t\t\tthis.maxInactivityTime = AppUtils.minToSec(maxInactivityTime);\n\t\t\t\tthis.startInactivityTimer();\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.warn(error);\n\t\t});\n\t}\n\n\t/**\n\t * Check for invalid queries\n\t */\n\tvalidateQueries() {\n\t\tconst { maxSessionTime: maxSessionTimeFromURL, maxInactivityTime: maxInactivityTimeFromURL } = this._router.configs;\n\t\t// Maintain current valid query values from router configs\n\t\tconst queryValues = {};\n\t\tfor (const [key, value] of Object.entries(this._router.configs)) {\n\t\t\tif (value) {\n\t\t\t\tqueryValues[key] = value;\n\t\t\t}\n\t\t}\n\n\t\t// Remove invalid time values from URL\n\t\tfor (const query in queryValues) {\n\t\t\tif (query.toLowerCase().includes('time') && !this._isValidTime(queryValues[query])) {\n\t\t\t\tdelete queryValues[query];\n\t\t\t}\n\t\t}\n\n\t\tconst { maxSessionTime, maxInactivityTime } = queryValues;\n\n\t\t// Ensure that session time is always greater than inactivity time to avoid rogue session timer during autoplay\n\t\tconst bothTimersInURL = this._isValidTime(maxSessionTime) && this._isValidTime(maxInactivityTime);\n\n\t\tif (bothTimersInURL) {\n\t\t\t// Add some time to inactivity time if they're too close in value\n\t\t\tif (Math.abs(maxSessionTimeFromURL - maxInactivityTimeFromURL) <= 0.05 && maxSessionTimeFromURL > 0 && maxInactivityTimeFromURL > 0) {\n\t\t\t\tqueryValues['maxInactivityTime'] = maxSessionTimeFromURL + 0.1;\n\t\t\t}\n\t\t\t// Session timer should always be less than inactivity timer (aka autoplay timer)\n\t\t\telse if (maxSessionTimeFromURL >= maxInactivityTimeFromURL) {\n\t\t\t\tif (maxInactivityTimeFromURL === 0) {\n\t\t\t\t\t// Zero both out if inactivity is 0\n\t\t\t\t\tdelete queryValues['maxSessionTime'];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Set inactivity timer to be 1 minute longer than session time\n\t\t\t\t\tqueryValues['maxInactivityTime'] = maxSessionTimeFromURL + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._router.setConfig('maxSessionTime', queryValues['maxSessionTime']);\n\t\tthis._router.setConfig('maxInactivityTime', queryValues['maxInactivityTime']);\n\t}\n\n\t/**\n\t * Determine whether the given URL time is a valid entry\n\t * @param {number|string} time\n\t * @returns {boolean}\n\t */\n\t_isValidTime(time) {\n\t\treturn time !== '' && !isNaN(Number(time)) && Number(time) > -1;\n\t}\n\n\t/**\n\t * Override setEnabled so when the kiosk component is enabled, relevant sub-components are shown (timer, autoplay UI, etc.)\n\t * @param {boolean} enabled\n\t * @override\n\t */\n\tsetEnabled(enabled) {\n\t\tsuper.setEnabled(enabled);\n\n\t\tconst { kiosk, maxSessionTime, maxInactivityTime } = this._router.configs;\n\n\t\tif (enabled && (kiosk || this._isValidTime(maxSessionTime) || this._isValidTime(maxInactivityTime))) {\n\t\t\t// Show Kiosk container\n\t\t\tthis.show();\n\t\t}\n\t}\n\n\t/**\n\t * Reset time window was last clicked\n\t */\n\tresetLastClicked() {\n\t\tKioskBase.screenLastClicked = Math.ceil(Pioneer.TimeUtils.now());\n\t}\n\n\t/**\n\t * Reset session when 'start over' button clicked at the end of the session\n\t */\n\tasync sessionStartOverButtonClick() {\n\t\t// Show loading text until transition is complete\n\t\tthis.setState({ loadingTextVisibleClass: '' });\n\n\t\tawait this.resetApp();\n\n\t\tthis.app.getManager('camera').waitForTransitionComplete().then(() => {\n\t\t\tthis.setState({ loadingTextVisibleClass: 'hidden' });\n\t\t\treturn null;\n\t\t}).catch(error => {\n\t\t\tconsole.warn('error: ', error);\n\t\t});\n\t}\n\n\t/**\n\t * Handle behavior when user interacts with the window\n\t */\n\tasync onWindowInteract() {\n\t\tconst { maxSessionTime, maxInactivityTime, forceRestart } = this._router.configs;\n\t\tconst { kioskAutoplay, kioskSessionEnd } = this._children;\n\t\tconst inAutoplay = !this.isHidden(kioskAutoplay);\n\t\tconst sessionOver = !this.isHidden(kioskSessionEnd);\n\n\t\tthis.setState({ autoplayVisibleClass: 'hidden' });\n\t\tthis.setState({ sessionEndVisibleClass: 'hidden' });\n\n\t\t// Don't show 'Starting Experience' while in autoplay or a session\n\t\tif ((inAutoplay || sessionOver) && !forceRestart) {\n\t\t\tthis.setState({ loadingTextVisibleClass: '' });\n\t\t}\n\n\t\tclearInterval(this.inactivityInterval);\n\t\tthis.inactivityInterval = null;\n\n\t\t// Only do camera transition if clicking to end autoplay\n\t\tif (inAutoplay) {\n\t\t\tawait this.app.cameraScripts.goToSystem('inner_solar_system');\n\t\t}\n\n\t\t// Hide kiosk components if window is interacted with\n\t\tthis.app.getManager('camera').waitForTransitionComplete().then(() => {\n\t\t\tthis.setState({ loadingTextVisibleClass: 'hidden' });\n\t\t\treturn null;\n\t\t}).catch(error => {\n\t\t\tconsole.warn('error: ', error);\n\t\t});\n\n\t\tthis.setState({ sessionEndVisibleClass: 'hidden' });\n\n\t\tthis.resetLastClicked();\n\n\t\t// Start new session\n\t\tif (this._isValidTime(maxSessionTime) && (inAutoplay || sessionOver)) {\n\t\t\tthis.resetSessionTimer();\n\t\t}\n\n\t\tif (this._isValidTime(maxInactivityTime)) {\n\t\t\tthis.startInactivityTimer();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the visual session timer countdown component\n\t */\n\tsetUpSessionTimerComponent() {\n\t\tconst sessionClockComponent = this.app.getComponent('kioskSessionClock');\n\t\tconst { kioskSessionTimer } = this._children;\n\n\t\tsessionClockComponent.setState({ isKioskSessionTimer: true });\n\n\t\t// Show session countdown timer\n\t\tsessionClockComponent.show();\n\t\tsessionClockComponent.setEnabled(true);\n\t\tsessionClockComponent.setParent(kioskSessionTimer);\n\t\tthis.updateSessionTimerComponent();\n\t}\n\n\t/**\n\t * Start session timer\n\t */\n\tstartSessionTimer() {\n\t\tthis.timeOfDaySessionStarted = Math.ceil(Pioneer.TimeUtils.now());\n\n\t\tthis.sessionInterval = setInterval(() => {\n\t\t\tthis.handleSessionTimer();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Handle behavior after a certain amount of time in a session\n\t */\n\thandleSessionTimer() {\n\t\tconst { kioskAutoplay } = this._children;\n\t\tconst inAutoplay = !this.isHidden(kioskAutoplay);\n\t\tconst now = Math.ceil(Pioneer.TimeUtils.now());\n\t\tthis.timeElapsed = now - this.timeOfDaySessionStarted;\n\n\t\tthis.setState({ sessionTimerVisibleClass: '' });\n\n\t\t// Ongoing session\n\t\tif (this.timeElapsed < this.maxSessionTime) {\n\t\t\tthis.updateSessionTimerComponent();\n\t\t}\n\t\telse if (!inAutoplay) {\n\t\t\t// Session end but before autoplay begins\n\t\t\tthis.endSession();\n\t\t}\n\t}\n\n\t/**\n\t * Behavior when the session ends/session timer runs out\n\t */\n\tasync endSession() {\n\t\tconst { forceRestart } = this._router.configs;\n\t\tconst { kioskSessionEnd } = this._children;\n\n\t\tclearInterval(this.sessionInterval);\n\t\tthis.sessionInterval = null;\n\n\t\t// Hide session timer and show start over screen\n\t\tthis.setState({ sessionTimerVisibleClass: 'hidden' });\n\n\t\tif (this.isHidden(kioskSessionEnd)) {\n\t\t\tthis.setState({ sessionEndVisibleClass: '' });\n\t\t}\n\n\t\t// Only reset to home if force restart, else just reset overlays on session end\n\t\tif (forceRestart === true) {\n\t\t\tawait this.resetApp();\n\t\t}\n\t\telse {\n\t\t\tthis.resetComponents(this.componentDefaultVisibility);\n\t\t}\n\t}\n\n\t/**\n\t * Reset the session timer\n\t */\n\tresetSessionTimer() {\n\t\tthis.timeElapsed = 0;\n\n\t\tthis.setUpSessionTimerComponent();\n\n\t\t// Restart session timer\n\t\tthis.startSessionTimer();\n\t\tthis.setState({ sessionEndVisibleClass: 'hidden' });\n\t\tthis.setState({ sessionTimerVisibleClass: '' });\n\t}\n\n\t/**\n\t * Update session timer component visually\n\t */\n\tupdateSessionTimerComponent() {\n\t\tconst sessionTimerComponent = this.app.getComponent('kioskSessionClock');\n\n\t\tconst formattedCountdownTime = AppUtils.formatCountdownTime(this.maxSessionTime * 1000, (this.maxSessionTime - this.timeElapsed) * 1000);\n\t\tsessionTimerComponent.update(formattedCountdownTime, true);\n\t}\n\n\t/**\n\t * Start inactivity timer\n\t */\n\tstartInactivityTimer() {\n\t\tthis.inactivityInterval = setInterval(() => {\n\t\t\tthis.handleMaxInactivityTime();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * Handle behavior after a certain amount of time without any activity\n\t */\n\thandleMaxInactivityTime() {\n\t\tthis.currentTimeWithoutActivity = Math.ceil(Pioneer.TimeUtils.now()) - KioskBase.screenLastClicked;\n\t}\n\n\t/**\n\t * Behavior when inactivity time runs out and autoplay begins\n\t */\n\tasync startAutoplay() {\n\t\t// Hide session timer and session end and show autoplay\n\t\tthis.setState({ sessionTimerVisibleClass: 'hidden' });\n\t\tthis.setState({ sessionEndVisibleClass: 'hidden' });\n\n\t\tthis.setState({ autoplayVisibleClass: '' });\n\n\t\tawait this.resetApp();\n\n\t\t// Stop inactivity timer so it doesn't keep counting in the background\n\t\tclearInterval(this.inactivityInterval);\n\t\tthis.inactivityInterval = null;\n\t}\n\n\t/**\n\t * Reset layers to default\n\t * @param {object} layersToReset\n\t */\n\tresetLayers(layersToReset) {\n\t\tif (layersToReset) {\n\t\t\t// Reset layers to defaults\n\t\t\tfor (const layer of Object.keys(layersToReset)) {\n\t\t\t\tconst { defaultVisibility } = this.app.getManager('layer').getLayer(layer);\n\t\t\t\tthis.app.getManager('layer').toggleLayer(layer, {}, defaultVisibility);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset components to default visibility\n\t * @param {object} componentsToReset\n\t */\n\tresetComponents(componentsToReset) {\n\t\tif (componentsToReset) {\n\t\t\t// Hide/show components\n\t\t\tfor (const [componentName, showComponent] of Object.entries(componentsToReset)) {\n\t\t\t\tconst component = this.app.getComponent(componentName);\n\t\t\t\tshowComponent ? component?.show() : component?.hide();\n\t\t\t\t// Expand component if applicable (i.e., time controls)\n\t\t\t\tthis.app.getComponent(componentName)?.setExpanded?.(showComponent);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset app to default state\n\t */\n\tasync resetApp() {\n\t\tconst uiLayers = this.app.getComponent('layerPanel').getCategoriesDisplay();\n\t\tconst { currentView } = this._router;\n\t\tconst isAtSystem = this.app.getManager('camera').getContext().context === CameraScripts.CONTEXT.SYSTEM;\n\t\tconst isAtInnerSolarSystem = isAtSystem && this.app.getManager('camera').getContext().id === 'sun';\n\t\tconst isTransitioning = this.app.getManager('camera').getIsTransitioning();\n\n\t\tthis.resetLayers(uiLayers);\n\t\tthis.resetComponents(this.componentDefaultVisibility);\n\n\t\t// Go to home if not there already\n\t\tif (!isAtInnerSolarSystem) {\n\t\t\tthis._router.navigate('/home');\n\t\t}\n\t\telse if (!isTransitioning) {\n\t\t\t// Reset camera to inner solar system\n\t\t\tawait this.app.cameraScripts.goToSystem('inner_solar_system');\n\n\t\t\tif (currentView === 'story') {\n\t\t\t\tthis.app.getComponent('story')?.close();\n\t\t\t}\n\t\t}\n\n\t\t// Set time and rate back to real time\n\t\tthis.app.getManager('camera').waitForTransitionComplete().then(() => {\n\t\t\tconst clock = this.app.getComponent('clock');\n\t\t\tclock.backToLive();\n\n\t\t\tthis.app.getManager('layer').toggleLayer('planets', {}, true);\n\t\t}).catch(error => {\n\t\t\tconsole.warn('error: ', error);\n\t\t});\n\t}\n\n\t/**\n\t * Return if a component is hidden\n\t * @param {Element} component\n\t * @returns {boolean}\n\t */\n\tisHidden(component) {\n\t\treturn component?.classList.contains('hidden');\n\t}\n}\n\nKioskBase.html = html;\n","import {\n\tAnimationUtils,\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent,\n\tCheckbox\n} from '../../internal';\nimport html from './layer_panel.html';\nimport './layer_panel.css';\n\n/**\n * Layer panel component.\n * @extends BaseComponent\n */\nexport class LayerPanel extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\t// Default configuration\n\t\toptions.config = {\n\t\t\tlayers: options.layers || [],\n\t\t\tcheckboxType: options.checkboxType || 'default',\n\t\t\t...options.config\n\t\t};\n\n\t\t// Add state options\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\tui: app.getManager('layer').getLayer('ui').defaultVisibility,\n\t\t\tplanets: app.getManager('layer').getLayer('planets').defaultVisibility,\n\t\t\tasteroids: app.getManager('layer').getLayer('asteroids').defaultVisibility,\n\t\t\tcomets: app.getManager('layer').getLayer('comets').defaultVisibility,\n\t\t\tdwarfPlanets: app.getManager('layer').getLayer('dwarfPlanets').defaultVisibility,\n\t\t\tspacecraft: app.getManager('layer').getLayer('spacecraft').defaultVisibility,\n\t\t\ttrails: app.getManager('layer').getLayer('trails').defaultVisibility,\n\t\t\torbits: app.getManager('layer').getLayer('orbits').defaultVisibility,\n\t\t\tlabels: app.getManager('layer').getLayer('labels').defaultVisibility,\n\t\t\ticons: app.getManager('layer').getLayer('icons').defaultVisibility,\n\t\t\tstarfield: app.getManager('layer').getLayer('starfield').defaultVisibility,\n\t\t\tconstellations: app.getManager('layer').getLayer('constellations').defaultVisibility,\n\t\t\t...options\n\t\t});\n\n\t\tthis._eyesCheck = options.checkboxType === 'eyes';\n\n\t\t// Storing class names\n\t\tObject.assign(this._class, {\n\t\t\tcheckbox: {\n\t\t\t\ttrue: this._eyesCheck ? 'active' : 'active icon-checkmark',\n\t\t\t\tfalse: this._eyesCheck ? '' : 'checkbox-hover'\n\t\t\t},\n\t\t\tboxColor: {\n\t\t\t\ttrue: 'settings-alt',\n\t\t\t\tfalse: ''\n\t\t\t},\n\t\t\tisVisible: {\n\t\t\t\ttrue: '',\n\t\t\t\tfalse: ''\n\t\t\t}\n\t\t});\n\n\t\t// Add default class to state\n\t\tObject.assign(this._state, {\n\t\t\tuiClass: this._class.checkbox[this._state.ui],\n\t\t\tuiColorClass: this._class.boxColor[this._state.ui],\n\t\t\tplanetsClass: this._class.checkbox[this._state.planets],\n\t\t\tplanetsColorClass: this._class.boxColor[this._state.planets],\n\t\t\tasteroidsClass: this._class.checkbox[this._state.asteroids],\n\t\t\tasteroidsColorClass: this._class.boxColor[this._state.asteroids],\n\t\t\tcometsClass: this._class.checkbox[this._state.comets],\n\t\t\tcometsColorClass: this._class.boxColor[this._state.comets],\n\t\t\tdwarfPlanetsClass: this._class.checkbox[this._state.dwarfPlanets],\n\t\t\tdwarfPlanetsColorClass: this._class.boxColor[this._state.dwarfPlanets],\n\t\t\tconstellationsClass: this._class.checkbox[this._state.constellations],\n\t\t\tconstellationsColorClass: this._class.boxColor[this._state.constellations],\n\t\t\tspacecraftClass: this._class.checkbox[this._state.spacecraft],\n\t\t\tspacecraftColorClass: this._class.boxColor[this._state.spacecraft],\n\t\t\ttrailsClass: this._class.checkbox[this._state.trails],\n\t\t\ttrailsColorClass: this._class.boxColor[this._state.trails],\n\t\t\torbitsClass: this._class.checkbox[this._state.orbits],\n\t\t\torbitsColorClass: this._class.boxColor[this._state.orbits],\n\t\t\tlabelsClass: this._class.checkbox[this._state.labels],\n\t\t\tlabelsColorClass: this._class.boxColor[this._state.labels],\n\t\t\ticonsClass: this._class.checkbox[this._state.icons],\n\t\t\ticonsColorClass: this._class.boxColor[this._state.icons],\n\t\t\tstarfieldClass: this._class.checkbox[this._state.starfield],\n\t\t\tstarfieldColorClass: this._class.boxColor[this._state.starfield]\n\t\t});\n\n\t\tthis._categories = {\n\t\t\tui: 'User Interface',\n\t\t\tplanets: 'Planet',\n\t\t\tasteroids: 'Asteroid',\n\t\t\tcomets: 'Comet',\n\t\t\tdwarfPlanets: 'Dwarf Planet',\n\t\t\tspacecraft: 'Spacecraft',\n\t\t\ttrails: 'Trail',\n\t\t\tlabels: 'Label',\n\t\t\ticons: 'Icons',\n\t\t\tstarfield: 'Star Field',\n\t\t\tconstellations: 'Constellations'\n\t\t};\n\n\t\tthis._categoriesDisplay = {\n\t\t\tui: 'User Interface',\n\t\t\tplanets: 'Planets',\n\t\t\tasteroids: 'Asteroids',\n\t\t\tcomets: 'Comets',\n\t\t\tdwarfPlanets: 'Dwarf Planets',\n\t\t\tconstellations: 'Constellations',\n\t\t\tspacecraft: 'Spacecraft',\n\t\t\ttrails: 'Trails',\n\t\t\torbits: 'Orbits',\n\t\t\tlabels: 'Labels',\n\t\t\ticons: 'Icons',\n\t\t\tstarfield: 'Star Field'\n\t\t};\n\n\t\tthis.bindFunctions([\n\t\t\t'toggleLayer',\n\t\t\t'handleLayerToggle'\n\t\t]);\n\n\t\t// Store Web animations\n\t\tthis._fadeInRight = null;\n\t\tthis._fadeOutRight = null;\n\t\tthis._fadeInBottom = null;\n\t\tthis._fadeOutBottom = null;\n\n\t\tthis._lastMode = AppUtils.isMobileMode();\n\n\t\tthis._initCallbacks();\n\t}\n\n\t/**\n\t * Get display categories\n\t * @returns {object}\n\t */\n\tgetCategoriesDisplay() {\n\t\treturn this._categoriesDisplay;\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\t\tthis._updatePosition();\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\t\t// TODO: This doesnt work for now\n\t\t// We need to create the animation just before playing it\n\t\t// this._createAnimations();\n\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('layer'),\n\t\t\tevent: 'toggleLayer',\n\t\t\tcallback: this.handleLayerToggle\n\t\t});\n\n\t\tconst layerPanelBody = this._children.layerPanelBody;\n\t\tif (layerPanelBody) {\n\t\t\tlayerPanelBody.textContent = '';\n\n\t\t\tconst container = document.createElement('div');\n\t\t\tcontainer.className = 'container';\n\t\t\tthis._config.layers.forEach(layerGroup => {\n\t\t\t\tconst blockDiv = document.createElement('div');\n\t\t\t\tblockDiv.classList.add('block');\n\t\t\t\tconst layersUl = document.createElement('ul');\n\t\t\t\tlayersUl.classList.add('layers');\n\t\t\t\tlayerGroup.forEach(layer => {\n\t\t\t\t\tif (this._eyesCheck) {\n\t\t\t\t\t\t// Keep this for now until verify the new Checkbox against Asteroids\n\t\t\t\t\t\tconst layerLi = document.createElement('li');\n\t\t\t\t\t\tlayerLi.setAttribute('key', layer);\n\t\t\t\t\t\tlayerLi.className = `layer-panel-layer item clickable {{${layer}Class}}`;\n\t\t\t\t\t\tconst checkboxDiv = document.createElement('div');\n\t\t\t\t\t\tcheckboxDiv.classList.add('eyes-checkbox');\n\t\t\t\t\t\tcheckboxDiv.innerHTML = `<input type=\"checkbox\" id=\"layer-panel-checkbox-${layer}\" ${this._state[layer] ? 'checked' : ''}><label for=\"layer-panel-checkbox-${layer}\"></label>`;\n\t\t\t\t\t\tlayerLi.append(checkboxDiv);\n\n\t\t\t\t\t\tconst nameSpan = document.createElement('span');\n\t\t\t\t\t\tnameSpan.classList.add('small');\n\t\t\t\t\t\tnameSpan.textContent = this._categoriesDisplay[layer];\n\t\t\t\t\t\tlayerLi.append(nameSpan);\n\n\t\t\t\t\t\tlayerLi.addEventListener('click', this.toggleLayer);\n\n\t\t\t\t\t\tlayersUl.append(layerLi);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst option = new Checkbox(this._app, {\n\t\t\t\t\t\t\tconfig: {\n\t\t\t\t\t\t\t\tkey: layer,\n\t\t\t\t\t\t\t\tcolorClass: this._class.boxColor.true,\n\t\t\t\t\t\t\t\tfunction: this.toggleLayer\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tisChecked: this._app.getManager('layer').getLayer(layer).defaultVisibility,\n\t\t\t\t\t\t\ttext: this._categoriesDisplay[layer],\n\t\t\t\t\t\t\tcheckboxClass: 'layer-panel-layer item',\n\t\t\t\t\t\t\ttextClass: 'small'\n\t\t\t\t\t\t});\n\t\t\t\t\t\toption.init();\n\n\t\t\t\t\t\tthis._components.push(option);\n\t\t\t\t\t\tlayersUl.appendChild(option.element);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tblockDiv.append(layersUl);\n\t\t\t\tcontainer.append(blockDiv);\n\t\t\t});\n\n\t\t\tlayerPanelBody.append(container);\n\n\t\t\tthis._setVariables(layerPanelBody);\n\t\t}\n\t}\n\n\t/**\n\t * Creates animations.\n\t */\n\t_createAnimations() {\n\t\tthis._fadeOutRight = AnimationUtils.directionalFade(\n\t\t\tthis._element,\n\t\t\t{ direction: 'right', fade: 'out', yOffset: 0 }\n\t\t);\n\t\tthis._fadeInRight = AnimationUtils.directionalFade(\n\t\t\tthis._element,\n\t\t\t{ direction: 'right', fade: 'in', yOffset: 0 }\n\t\t);\n\t\tthis._fadeOutBottom = AnimationUtils.directionalFade(\n\t\t\tthis._element,\n\t\t\t{ direction: 'down', fade: 'out', yOffset: 0 }\n\t\t);\n\t\tthis._fadeInBottom = AnimationUtils.directionalFade(\n\t\t\tthis._element,\n\t\t\t{ direction: 'down', fade: 'in', yOffset: 0 }\n\t\t);\n\t}\n\n\t/**\n\t * Resets animations.\n\t */\n\t_resetAnimations() {\n\t\tthis._fadeInRight.currentTime = 0;\n\t\tthis._fadeOutRight.currentTime = 0;\n\t\tthis._fadeInBottom.currentTime = 0;\n\t\tthis._fadeOutBottom.currentTime = 0;\n\t\tthis._fadeInRight.pause();\n\t\tthis._fadeOutRight.pause();\n\t\tthis._fadeInBottom.pause();\n\t\tthis._fadeOutBottom.pause();\n\t}\n\n\t/**\n\t * Toggles layer and trigger callback.\n\t * @param {string} key\n\t */\n\ttoggleLayer(key) {\n\t\tconst layerKey = key.target?.getAttribute('key') ?? key;\n\t\tthis._app.getManager('layer').toggleLayer(layerKey, { category: this._categories[layerKey] });\n\t}\n\n\t/**\n\t * Handles any layer toggle.\n\t * @param {string} id\n\t * @param {boolean} visible\n\t * @param {Array} params\n\t */\n\thandleLayerToggle(id, visible, params) {\n\t\t// Keep this for now until verify the new Checkbox against Asteroids\n\t\tconst keyClass = id + 'Class';\n\t\tconst colorClass = id + 'ColorClass';\n\t\t// Check if layer id is in state.\n\t\tif (this.getState(id) !== null) {\n\t\t\tthis.setState({\n\t\t\t\t[id]: visible,\n\t\t\t\t[keyClass]: this._class.checkbox[visible],\n\t\t\t\t[colorClass]: this._class.boxColor[visible]\n\t\t\t});\n\n\t\t\tif (this._eyesCheck) {\n\t\t\t\t// setVariables doesn't seem to change attributes so we'll set it here\n\t\t\t\tconst layerCheckbox = document.getElementById(`layer-panel-checkbox-${id}`);\n\t\t\t\tif (layerCheckbox) layerCheckbox.checked = visible;\n\t\t\t}\n\t\t}\n\n\t\t// Sync checkbox state in case the layer is toggled elsewhere\n\t\tconst checkbox = this._components.find(component => component.getConfig().key === id);\n\t\tif (checkbox && checkbox.getState('isChecked') !== visible) {\n\t\t\tcheckbox.toggle(null, true);\n\t\t}\n\t}\n\n\t/**\n\t * Check whether a category is enabled.\n\t * @param {string} categoryName\n\t * @returns {boolean}\n\t */\n\tisCategoryEnabled(categoryName) {\n\t\treturn !this._children[categoryName]?.classList.contains('disabled');\n\t}\n\n\t/**\n\t * Set whether a category is disabled\n\t * @param {string} categoryName\n\t * @param {boolean} enabled\n\t */\n\tsetCategoryEnabled(categoryName, enabled = true) {\n\t\tthis._children[categoryName]?.classList.toggle('disabled', !enabled);\n\t}\n\n\t/**\n\t * Overrides default hide.\n\t */\n\thide() {\n\t\tif (!this.getState('isVisible')) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.hide();\n\t\tif (AppUtils.isMobileMode()) {\n\t\t\tthis._fadeOutBottom = AnimationUtils.directionalFade(\n\t\t\t\tthis._element,\n\t\t\t\t{ direction: 'down', fade: 'out', yOffset: 0 }\n\t\t\t);\n\t\t\tthis._fadeOutBottom.play();\n\t\t}\n\t\telse {\n\t\t\tthis._fadeOutRight = AnimationUtils.directionalFade(\n\t\t\t\tthis._element,\n\t\t\t\t{ direction: 'right', fade: 'out', yOffset: 0 }\n\t\t\t);\n\t\t\tthis._fadeOutRight.play();\n\t\t}\n\t}\n\n\t/**\n\t * Overrides default show.\n\t */\n\tshow() {\n\t\tsuper.show();\n\t\tif (AppUtils.isMobileMode()) {\n\t\t\tthis._fadeInBottom = AnimationUtils.directionalFade(\n\t\t\t\tthis._element,\n\t\t\t\t{ direction: 'down', fade: 'in', yOffset: 0 }\n\t\t\t);\n\t\t\tthis._fadeInBottom.play();\n\t\t}\n\t\telse {\n\t\t\tthis._fadeInRight = AnimationUtils.directionalFade(\n\t\t\t\tthis._element,\n\t\t\t\t{ direction: 'right', fade: 'in', yOffset: 0 }\n\t\t\t);\n\t\t\tthis._fadeInRight.play();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the position of the panel depending on the resolution.\n\t */\n\t_updatePosition() {\n\t\tconst currentMode = AppUtils.isMobileMode();\n\t\tif (currentMode !== this._lastMode) {\n\t\t\tthis._lastMode = currentMode;\n\t\t\tif (this._state.isVisible) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Overrides default enable.\n\t */\n\t__enable() {\n\t\tsuper.__enable();\n\t\tthis._createAnimations();\n\t}\n\n\t/**\n\t * Overrides default disable.\n\t */\n\t__disable() {\n\t\tsuper.__disable();\n\t\tthis._fadeInRight = null;\n\t\tthis._fadeOutRight = null;\n\t\tthis._fadeInBottom = null;\n\t\tthis._fadeOutBottom = null;\n\t}\n}\n\nLayerPanel.html = html;\n","import LoadIcon from './load_icon.js';\nimport './load_icon.css';\n\nexport default LoadIcon;\n","import {\n\tBaseComponent\n} from '../../internal';\nimport html from './load_icon.html';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n */\nclass LoadIcon extends BaseComponent {\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tthis._callbackRegistry.push(\n\t\t\t{\n\t\t\t\temitter: this._app.getManager('scene'),\n\t\t\t\tevent: 'loading',\n\t\t\t\tcallback: this.show\n\t\t\t},\n\t\t\t{\n\t\t\t\temitter: this._app.getManager('scene'),\n\t\t\t\tevent: 'loaded',\n\t\t\t\tcallback: this.hide\n\t\t\t}\n\t\t);\n\n\t\tthis.hide();\n\t}\n}\n\nLoadIcon.html = html;\n\nexport default LoadIcon;\n","import Overlay from './overlay.js';\nimport './overlay.css';\n\nexport default Overlay;\n","import OverlayScrollbars from 'overlayscrollbars';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './overlay.html';\n\n/**\n * Overlay component.\n * @extends BaseComponent\n */\nclass Overlay extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\tisOpenButtonVisible: true,\n\t\t\tcontent: null,\n\t\t\t...options\n\t\t});\n\n\t\tthis._class.isOpenButtonVisibleClass = {\n\t\t\ttrue: '',\n\t\t\tfalse: 'hidden'\n\t\t};\n\n\t\tObject.assign(this._state, {\n\t\t\tisOpenButtonVisibleClass: this._class.isOpenButtonVisibleClass[this._state.isOpenButtonVisible]\n\t\t});\n\n\t\t/**\n\t\t * Scrollbar library instance.\n\t\t * @type {OverlayScrollbars}\n\t\t */\n\t\tthis._scrollbar = null;\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tif (this._state.content !== null) {\n\t\t\tthis._children.overlayContent.appendChild(this._state.content);\n\t\t}\n\n\t\t// Hide overlay when clicking on it\n\t\tthis._element.addEventListener('click', this.hide);\n\n\t\t// Hide overlay after fading out completes\n\t\tthis._element.addEventListener('animationend', () => {\n\t\t\tif (this._children.overlay.classList.contains('hidden')) {\n\t\t\t\tthis._children.overlay.style.display = 'none';\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Set content of overlay.\n\t * @param {HTMLElement} element\n\t */\n\tsetContent(element) {\n\t\tif (this._state.content === null) {\n\t\t\tthis._children.overlayContent.appendChild(element);\n\t\t}\n\t\telse {\n\t\t\tthis._children.overlayContent.replaceChild(element, this._state.content);\n\t\t}\n\n\t\tthis._state.content = element;\n\t}\n\n\t/**\n\t * Show overlay.\n\t */\n\tshow() {\n\t\tthis._element.classList.add('initialized');\n\t\tthis._children.overlay.style.display = '';\n\t\tsuper.show();\n\t}\n\n\t/**\n\t * Enables the component.\n\t * @abstract\n\t * @package\n\t */\n\t__enable() {\n\t\tsuper.__enable();\n\n\t\tif (this._scrollbar === null) {\n\t\t\t// Wait until element is attached to DOM, then add scrollbar\n\t\t\tAppUtils.onAttachElement(this._children.overlay, () => {\n\t\t\t\tthis._scrollbar = AppUtils.addScrollbar(this._children.overlay);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis._scrollbar.scroll(0);\n\t\t}\n\t}\n}\n\nOverlay.html = html;\n\nexport default Overlay;\n","import Search from './search.js';\nimport './search.css';\n\nexport default Search;\n","import Fuse from 'fuse.js';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './search.html';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n */\nclass Search extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t * @param {object} [options.config={}]\n\t */\n\tconstructor(app, options = { config: {} }) {\n\t\t/**\n\t\t * @property {object} options.config\n\t\t * @property {boolean} [options.config.initialOpen=false]\n\t\t * @property {boolean} [options.config.allowFeatured=false]\n\t\t * @property {boolean} [options.config.allowDetail=true]\n\t\t * @property {boolean} [options.config.allowInfo=false]\n\t\t * @property {boolean} [options.config.stopOnExactMatch=false]\n\t\t * @property {object} options.config.infoText\n\t\t * @property {string} [options.config.infoText.default='most popular']\n\t\t * @property {string} [options.config.infoText.results='result']\n\t\t * @property {string} [options.config.infoText.suggestions='suggestion']\n\t\t * @property {string} [options.config.infoText.nomatches='no matches']\n\t\t * @property {number} [options.config.maxSuggestions=1]\n\t\t * @property {string} [options.config.placeholderText='Search...']\n\t\t * @property {string[]} [options.config.nameSearch=['id', 'name']] - Array of keys to try to search for item's name\n\t\t * @property {string[]} [options.config.nameDisplay=['name', 'id']] - Array of keys to try to display item's name\n\t\t */\n\t\toptions.config = {\n\t\t\tinitialOpen: false,\n\t\t\tallowFeatured: false,\n\t\t\tallowDetail: true,\n\t\t\tallowInfo: false,\n\t\t\tstopOnExactMatch: false,\n\t\t\tinfoText: {\n\t\t\t\tdefault: 'most popular',\n\t\t\t\tresults: 'result',\n\t\t\t\tsuggestions: 'suggestion',\n\t\t\t\tnomatches: 'no matches'\n\t\t\t},\n\t\t\tmaxSuggestions: 1,\n\t\t\tplaceholderText: 'Search...',\n\t\t\tnameSearch: ['iauName', 'displayName'],\n\t\t\tnameDisplay: ['displayName', 'iauName'],\n\t\t\t...options.config\n\t\t};\n\n\t\tsuper(app, null, {\n\t\t\ttext: '',\n\t\t\tsearchInfo: options.config?.infoText?.default || '',\n\t\t\talwaysOpen: false,\n\t\t\tmagClass: 'mag-open',\n\t\t\tsearchClass: 'search-close',\n\t\t\tfocusedClass: '',\n\t\t\tisFeaturedVisible: false,\n\t\t\t...options\n\t\t});\n\n\t\tthis._class.isItemVisible = {\n\t\t\ttrue: '',\n\t\t\tfalse: 'hidden'\n\t\t};\n\n\t\tObject.assign(this._state, {\n\t\t\tallowFeaturedClass: this._class.isItemVisible[this._config.allowFeatured],\n\t\t\tisFeaturedVisibleClass: this._class.isItemVisible[this._config.allowFeatured && this._state.isFeaturedVisible],\n\t\t\tallowInfoClass: this._class.isItemVisible[this._config.allowInfo]\n\t\t});\n\n\t\tthis._eventNames.push('resultselected');\n\t\tthis._initCallbacks();\n\n\t\t/**\n\t\t * Scrollbar for result list.\n\t\t */\n\t\tthis._resultsScrollbar = null;\n\n\t\t/**\n\t\t * Scrollbar for featured list.\n\t\t */\n\t\tthis._featuredScrollbar = null;\n\n\t\t/**\n\t\t * Function to call on window resize.\n\t\t * @type {Function}\n\t\t */\n\t\tthis.onResize = null;\n\n\t\t/**\n\t\t * Result list to display.\n\t\t * @type {Array}\n\t\t */\n\t\tthis.results = [];\n\n\t\t/**\n\t\t * A list of item ids to filter out of the search results\n\t\t * @type {Array<string>}\n\t\t */\n\t\tthis._excludeResults = [];\n\n\t\t/**\n\t\t * Threshold for Fuse score of suggestions.\n\t\t * @type {number}\n\t\t */\n\t\tthis._suggestionsThreshold = 0.05;\n\n\t\t/**\n\t\t * Index of the selected entry.\n\t\t * @type {number}\n\t\t */\n\t\tthis.index = -1;\n\n\t\tthis.bindFunctions([\n\t\t\t'_find',\n\t\t\t'renderResults',\n\t\t\t'open',\n\t\t\t'close',\n\t\t\t'eraseInput',\n\t\t\t'onIconClick',\n\t\t\t'reset',\n\t\t\t'keydown',\n\t\t\t'onInputFocus',\n\t\t\t'_getDetails',\n\t\t\t'_handleClick'\n\t\t]);\n\n\t\twindow.addEventListener('setupSearch', this.resize);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\t// Make sure placeholder text fully visible in the input\n\t\tconst size = this._children.input.getAttribute('placeholder').length * 0.9;\n\t\tthis._children.input.style.minWidth = `${size}ch`;\n\n\n\t\tthis._children.input.onkeyup = event => {\n\t\t\tconst isFeaturedVisible = this._children.input.value.length === 0;\n\t\t\tif (this._config.allowFeatured && isFeaturedVisible !== this._state.isFeaturedVisible) {\n\t\t\t\t// Scroll to the top.\n\t\t\t\tthis._featuredScrollbar?.scroll(0);\n\t\t\t\t// Set visible and text states.\n\t\t\t\tthis.setState({\n\t\t\t\t\tisFeaturedVisible,\n\t\t\t\t\tisFeaturedVisibleClass: this._class.isItemVisible[isFeaturedVisible],\n\t\t\t\t\t...isFeaturedVisible && { searchInfo: this._config.infoText.default }\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tthis.resize();\n\n\t\tthis.registerManager(this._app.getManager('search'));\n\t}\n\n\t/**\n\t * Execute actions when click on magnifier.\n\t */\n\tonIconClick() {\n\t\tconst currentlyClosed = this._state.searchClass === 'search-close';\n\n\t\tif (currentlyClosed) {\n\t\t\tthis._scrollbar?.scroll(0);\n\t\t\tthis.open();\n\t\t\tthis._children.input.focus();\n\t\t}\n\t\telse {\n\t\t\tif (this._children.input.value === '') {\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._children.results.querySelector('.active')?.firstChild.click();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggers when window is resizing.\n\t */\n\tresize() {\n\t\tsuper.resize();\n\n\t\tif (typeof this.onResize === 'function') {\n\t\t\tthis.onResize();\n\t\t}\n\t}\n\n\t/**\n\t * Clear input and close panel.\n\t */\n\treset() {\n\t\tthis.eraseInput();\n\t\tif (!this._config.initialOpen) {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\t/**\n\t * Handles keypress when focused on the search input field.\n\t * @param {object} e - Keypress event\n\t */\n\tkeydown(e) {\n\t\tconst key = e.key;\n\n\t\tif (key === 'Escape') {\n\t\t\tthis.eraseInput();\n\t\t\tthis.close();\n\t\t}\n\n\t\tconst total = this.results.length;\n\t\tif (!total) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Arrow Down\n\t\tif (key === 'ArrowDown') {\n\t\t\tthis.index = (this.index + 1) % total;\n\t\t\te.preventDefault();\n\t\t}\n\t\t// Arrow Up\n\t\telse if (key === 'ArrowUp') {\n\t\t\tthis.index -= 1;\n\t\t\tif (this.index < 0) {\n\t\t\t\tthis.index = total - 1;\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t}\n\t\t// Enter\n\t\telse if (key === 'Enter') {\n\t\t\t// Fly to the selected search or the first one\n\t\t\tthis._handleClick(this.results[this.index]?.link || this.results[0]?.link, this._searchString);\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setSelected(this.index);\n\t}\n\n\t/**\n\t * Set up selected index and state.\n\t * @param {number} index - Current index of the selected element\n\t */\n\tsetSelected(index) {\n\t\tthis.index = index;\n\n\t\tfor (let i = 0; i < this.results.length; i++) {\n\t\t\tconst element = this.results[i].element;\n\t\t\tif (!element) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (i === this.index) {\n\t\t\t\telement.classList.add('active');\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Execute actions when input has focus.\n\t */\n\tonInputFocus() {\n\t\tthis.setState({\n\t\t\tfocusedClass: 'input-focused'\n\t\t});\n\t}\n\n\t/**\n\t * Erase search input.\n\t */\n\teraseInput() {\n\t\tthis._resultsScrollbar?.destroy();\n\t\tthis._resultsScrollbar = null;\n\n\t\tthis._children.input.value = '';\n\t\tthis._children.results.innerHTML = '';\n\t}\n\n\t/**\n\t * Registers a search manager.\n\t * @param {object} searchManager\n\t */\n\tregisterManager(searchManager) {\n\t\tthis._searchManager = searchManager;\n\t}\n\n\t/**\n\t * Applies search using either event from the window or text that is passed.\n\t * @param {object} event\n\t * @param {string} text\n\t */\n\t_find(event, text) {\n\t\tif (this._searchTimeout) {\n\t\t\tclearTimeout(this._searchTimeout);\n\t\t}\n\n\t\tif (event && event.target && event.target.value) {\n\t\t\ttext = event.target.value;\n\t\t}\n\n\t\tconst { maxEntries } = this._config;\n\n\t\tthis._searchTimeout = setTimeout(async () => {\n\t\t\tif (this._searchManager) {\n\t\t\t\tconst results = this._searchManager.find(text, maxEntries);\n\n\t\t\t\t// Filter results if we have anything in the excludeResults array.\n\t\t\t\tconst filteredResults = results?.length && this._excludeResults?.length ?\n\t\t\t\t\tresults.filter(({ item }) => !this._excludeResults.includes(item.id)) :\n\t\t\t\t\tresults;\n\n\t\t\t\tawait this.renderResults(filteredResults, text);\n\t\t\t}\n\t\t}, 100);\n\t}\n\n\t/**\n\t * Renders html elements based on the results.\n\t * @param {Fuse.FuseResult} results\n\t * @param {string} text - text that was searched for the results\n\t */\n\tasync renderResults(results, text) {\n\t\tthis.index = -1;\n\t\tthis.results = [];\n\t\tthis._searchString = text;\n\n\t\tthis._resultsScrollbar?.destroy();\n\t\tthis._resultsScrollbar = null;\n\n\t\tthis._children.results.innerHTML = '';\n\t\tthis._children.results.classList.remove('no-results');\n\n\t\tif (!results || !Array.isArray(results)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Separate candidates from suggestions\n\t\tconst suggestions = [];\n\t\tconst candidates = [];\n\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\tconst result = results[i];\n\t\t\tconst { nameSearch } = this._config;\n\t\t\tconst name = result.item[nameSearch.find(key => result.item[key] !== undefined)];\n\t\t\t// Check for a perfect match on name\n\t\t\tif (this._config.stopOnExactMatch && text.toLowerCase() === name.toLowerCase()) {\n\t\t\t\tcandidates.length = 0;\n\t\t\t\tsuggestions.length = 0;\n\t\t\t\tcandidates.push(result);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (result.score < this._suggestionsThreshold) {\n\t\t\t\tcandidates.push(result);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsuggestions.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// Perfect match\n\t\tif (candidates.length === 1) {\n\t\t\tif (this._config.allowDetail) {\n\t\t\t\t// TODO: Do not re render if this is the same result\n\t\t\t\tawait this._renderResultCard(candidates[0], text);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._renderResultList(candidates, text);\n\t\t\t}\n\t\t}\n\t\telse if (candidates.length === 0) {\n\t\t\t// No results\n\t\t\tthis._renderSuggestions(suggestions, text);\n\t\t}\n\t\telse {\n\t\t\t// Multiple matches\n\t\t\tthis._renderResultList(candidates, text);\n\t\t}\n\n\t\t// Add scrollbar\n\t\tif (candidates.length > 3) {\n\t\t\tthis._resultsScrollbar ??= this._createScrollbar(this._children.results);\n\t\t}\n\n\t\t// Update info text if it's allowed.\n\t\tconst { allowInfo, infoText, maxSuggestions } = this._config;\n\n\t\tif (allowInfo) {\n\t\t\tlet searchInfo = infoText.nomatches;\n\n\t\t\tif (candidates.length) {\n\t\t\t\tsearchInfo = `${candidates.length} ${infoText.results}${candidates.length > 1 ? 's' : ''}`;\n\t\t\t}\n\t\t\telse if (suggestions.length) {\n\t\t\t\tsearchInfo = `${Math.min(suggestions.length, maxSuggestions)} ${infoText.suggestions}${suggestions.length > 1 ? 's' : ''}`;\n\t\t\t}\n\n\t\t\tthis.setState({ searchInfo });\n\t\t}\n\t\t// select the first entry by default\n\t\tthis.setSelected(0);\n\t}\n\n\t/**\n\t * Renders a single detailed result card.\n\t * @param {Fuse.FuseResult} result\n\t * @param {string} text - the search string\n\t */\n\tasync _renderResultCard(result, text) {\n\t\ttry {\n\t\t\tlet details = await this._getDetails(result);\n\t\t\tif (!details && result && result.item) {\n\t\t\t\tconst { nameDisplay } = this._config;\n\t\t\t\tdetails = {\n\t\t\t\t\ttitle: result.item[nameDisplay.find(key => result.item[key] !== undefined)]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Card title\n\t\t\tconst div = document.createElement('div');\n\t\t\tdiv.className = 'card-title result-div';\n\n\t\t\tconst h4 = document.createElement('h4');\n\t\t\th4.className = 'semi clickable';\n\n\t\t\tlet innerHTML = details.title;\n\t\t\tif (typeof innerHTML === 'string') {\n\t\t\t\tconst index = innerHTML.toUpperCase().indexOf(text.toUpperCase());\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tconst sub = innerHTML.substring(index, index + text.length);\n\t\t\t\t\tconst splitted = innerHTML.split(sub);\n\n\t\t\t\t\tif (splitted && splitted.length === 2) {\n\t\t\t\t\t\tinnerHTML = '';\n\t\t\t\t\t\tif (splitted[0].length > 0) {\n\t\t\t\t\t\t\tinnerHTML += `<span class='unmatch'>${splitted[0]}</span>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerHTML += sub;\n\t\t\t\t\t\tif (splitted[1].length > 0) {\n\t\t\t\t\t\t\tinnerHTML += `<span class='unmatch'>${splitted[1]}</span>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tinnerHTML = '';\n\t\t\t}\n\n\t\t\th4.innerHTML = innerHTML;\n\t\t\tconst link = AppUtils.addStartToPath(result.item.id);\n\t\t\th4.addEventListener('mouseover', () => {\n\t\t\t\tthis.setSelected(0);\n\t\t\t}, false);\n\t\t\th4.addEventListener('click', e => {\n\t\t\t\tif (result.item) {\n\t\t\t\t\tthis._handleClick(result.item.id, text);\n\t\t\t\t}\n\t\t\t\te?.stopPropagation?.();\n\t\t\t}, false);\n\t\t\tdiv.appendChild(h4);\n\t\t\tthis.results.push({ link, element: div });\n\n\t\t\t// TODO: Display icon instead of image\n\n\t\t\tthis._children.results.innerHTML = '';\n\t\t\tthis._children.results.appendChild(div);\n\n\t\t\tif (details.cards) {\n\t\t\t\tthis._createStoryBlock(details.cards);\n\t\t\t}\n\n\t\t\tif (details.featuredEvents && details.featuredEvents.initial) {\n\t\t\t\tthis._createEventsBlock(details.featuredEvents.initial, result.item.id);\n\t\t\t}\n\n\t\t\tif (details.exploration && details.exploration.initial) {\n\t\t\t\tthis._createExplorationBlock(details.exploration.initial);\n\t\t\t}\n\n\t\t\tif (details.featuredMoons) {\n\t\t\t\tthis._createMoonsBlock(details.featuredMoons, result.item.id);\n\t\t\t}\n\t\t\t// TODO: No need for that right now\n\t\t\t// if (details.custom) {\n\t\t\t// \tfor (let i = 0; i < details.custom.length; i++) {\n\t\t\t// \t\tconst custom = details.custom[i];\n\t\t\t// \t\tthis._createChunk(custom.entries, custom.title, text);\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\t\tcatch (err) {\n\t\t\t// Render one line if details not found\n\t\t\tif (err.status !== undefined && err.status === 404) {\n\t\t\t\tthis._renderResultList([result], text);\n\t\t\t}\n\t\t\telse if (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a block of events in the results.\n\t * @param {string[]} featuredItems\n\t * @param {string} result\n\t */\n\t_createEventsBlock(featuredItems, result) {\n\t\tif (!Array.isArray(featuredItems) || featuredItems.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityInfo = this._app.getManager('content').getEntityInfo(result);\n\t\tif (entityInfo === null || !entityInfo.hasEvents) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Container\n\t\tconst container = this._createBlockContainer();\n\t\tcontainer.classList.add('events');\n\n\t\t// Title\n\t\tconst title = 'Featured Events';\n\t\tthis._createHeaderBlock(title, container);\n\n\t\t// Items\n\t\tfor (let i = 0; i < featuredItems.length; i++) {\n\t\t\tconst event = featuredItems[i];\n\t\t\tconst text = event.title;\n\t\t\tconst link = AppUtils.addStartToPath(result + '/events/' + event.eventId);\n\t\t\tconst element = this._createSingleResult(text, link, container);\n\t\t\tthis.results.push({ link, element });\n\t\t}\n\t}\n\n\t/**\n\t * Creates a block of Moons in the results.\n\t * @param {object[]} featuredItems\n\t */\n\t_createMoonsBlock(featuredItems) {\n\t\tif (!Array.isArray(featuredItems) || featuredItems.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Container\n\t\tconst container = this._createBlockContainer();\n\t\tcontainer.classList.add('moons');\n\n\t\t// Title\n\t\tconst title = 'Featured Moons';\n\t\tthis._createHeaderBlock(title, container);\n\n\t\t// Items\n\t\tfor (let i = 0; i < featuredItems.length; i++) {\n\t\t\tconst text = featuredItems[i];\n\t\t\tconst link = featuredItems[i];\n\t\t\tconst element = this._createSingleResult(text, link, container);\n\t\t\tthis.results.push({ link, element });\n\t\t}\n\t}\n\n\t/**\n\t * Creates a block of events in the results.\n\t * @param {object[]} featuredItems\n\t */\n\t_createExplorationBlock(featuredItems) {\n\t\tif (!Array.isArray(featuredItems) || featuredItems.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Container\n\t\tconst container = this._createBlockContainer();\n\t\tcontainer.classList.add('exploration');\n\n\t\t// Title\n\t\tconst title = 'Exploration';\n\t\tthis._createHeaderBlock(title, container);\n\n\t\t// Items\n\t\tfor (let i = 0; i < featuredItems.length; i++) {\n\t\t\tconst event = featuredItems[i];\n\t\t\tlet text = event.title;\n\t\t\tif (event.info !== null && event.info !== undefined) {\n\t\t\t\ttext += ' (' + event.info + ')';\n\t\t\t}\n\t\t\tconst link = event.url;\n\t\t\tconst element = this._createSingleResult(text, link, container);\n\t\t\tthis.results.push({ link, element });\n\t\t}\n\t}\n\n\t/**\n\t * Creates a block of stories in the results.\n\t * @param {object[]} cards\n\t */\n\t_createStoryBlock(cards) {\n\t\tif (!Array.isArray(cards) || cards.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Container\n\t\tconst container = this._createBlockContainer();\n\t\tcontainer.classList.add('stories');\n\n\t\t// Title\n\t\tconst title = 'Stories';\n\n\t\t// Items\n\t\tlet storyResults = false;\n\t\tfor (let i = 0; i < cards.length; i++) {\n\t\t\tconst card = cards[i];\n\t\t\t// Only populate stories for now\n\t\t\tif (card.storyId !== undefined) {\n\t\t\t\tconst story = this._app.getManager('content').getStoryList().stories[card.storyId];\n\t\t\t\tif (story !== undefined) {\n\t\t\t\t\t// Only create the header block if at least one story is being returned.\n\t\t\t\t\tif (!storyResults) {\n\t\t\t\t\t\tthis._createHeaderBlock(title, container);\n\t\t\t\t\t\tstoryResults = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst text = story.title;\n\t\t\t\t\tconst link = '/story/' + card.storyId;\n\t\t\t\t\tconst element = this._createSingleResult(text, link, container);\n\t\t\t\t\tthis.results.push({ link, element });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a block container to group results.\n\t * @returns {HTMLElement}\n\t */\n\t_createBlockContainer() {\n\t\tconst blockContainer = document.createElement('div');\n\t\tblockContainer.className = 'block-container';\n\t\tthis._children.results.appendChild(blockContainer);\n\t\treturn blockContainer;\n\t}\n\n\t/**\n\t * Creates a header for each block of results.\n\t * @param {string} title\n\t * @param {HTMLElement} container\n\t */\n\t_createHeaderBlock(title, container) {\n\t\tconst titleDiv = document.createElement('div');\n\t\ttitleDiv.className = 'header';\n\n\t\tconst lineTitle = document.createElement('span');\n\t\tlineTitle.className = 'title small semi';\n\t\tlineTitle.innerHTML = title;\n\t\ttitleDiv.appendChild(lineTitle);\n\n\t\tcontainer.appendChild(titleDiv);\n\t}\n\n\t/**\n\t * Creates a result data buttton.\n\t * @param {string} title\n\t * @param {string} link\n\t * @param {HTMLElement} container\n\t * @returns {HTMLElement}\n\t */\n\t_createSingleResult(title, link, container) {\n\t\tconst entryDiv = document.createElement('div');\n\t\tentryDiv.className = 'result-div';\n\t\tconst entryButton = document.createElement('button');\n\t\tentryButton.className = 'small clickable capitalize';\n\t\tentryButton.innerHTML = title;\n\t\tconst index = (this.results.length - 1) + 1; // Must take into account card title\n\n\t\t// Add click callback\n\t\tentryDiv.addEventListener('click', e => {\n\t\t\tthis._handleClick(link, this._searchString);\n\t\t\te?.stopPropagation?.();\n\t\t}, false);\n\t\tentryDiv.addEventListener('mouseover', () => {\n\t\t\tthis.setSelected(index);\n\t\t}, false);\n\n\t\tentryDiv.appendChild(entryButton);\n\t\tcontainer.appendChild(entryDiv);\n\n\t\treturn entryDiv;\n\t}\n\n\t/**\n\t * Renders a list of results.\n\t * @param {Fuse.FuseResult} results\n\t * @param {string} text\n\t */\n\t_renderResultList(results, text) {\n\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\tconst result = results[i].item;\n\t\t\tconst { nameSearch } = this._config;\n\t\t\tconst generalName = result[nameSearch.find(key => result[key] !== undefined)];\n\n\t\t\tif (!generalName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst button = document.createElement('button');\n\t\t\tbutton.className = 'entries clickable thin small';\n\t\t\tconst url = result.url || result.id;\n\t\t\tlet innerHTML = generalName;\n\t\t\tconst index = generalName.toUpperCase().indexOf(text.toUpperCase());\n\t\t\tif (index > -1) {\n\t\t\t\tconst sub = innerHTML.substring(index, index + text.length);\n\t\t\t\tinnerHTML = innerHTML.replace(sub, `<span class='semi'>${sub}</span>`);\n\t\t\t}\n\t\t\tbutton.innerHTML = innerHTML;\n\t\t\tconst link = AppUtils.addStartToPath(url);\n\n\t\t\tconst div = document.createElement('div');\n\t\t\tdiv.className = 'result-div';\n\t\t\tdiv.appendChild(button);\n\n\t\t\tdiv.addEventListener('mouseover', () => {\n\t\t\t\tthis.setSelected(i);\n\t\t\t}, false);\n\t\t\tdiv.addEventListener('click', e => {\n\t\t\t\tthis._handleClick(url, text);\n\t\t\t\te?.stopPropagation?.();\n\t\t\t}, false);\n\n\t\t\tthis.results.push({ link, element: div });\n\n\t\t\tthis._children.results.appendChild(div);\n\t\t}\n\t}\n\n\t/**\n\t * Renders suggested items.\n\t * @param {Fuse.FuseResult} results\n\t * @param {string} text\n\t */\n\t_renderSuggestions(results, text) {\n\t\tconst div = document.createElement('div');\n\t\tdiv.className = 'suggestion';\n\n\t\t// Add suggestions\n\t\tif (results.length > 0) {\n\t\t\tconst label = document.createElement('label');\n\t\t\tlabel.className = 'title small semi';\n\t\t\tlabel.innerHTML = 'Did you mean...?';\n\t\t\tdiv.appendChild(label);\n\n\t\t\tfor (let i = 0; i < Math.min(this._config.maxSuggestions, results.length); i++) {\n\t\t\t\tconst button = document.createElement('button');\n\t\t\t\tbutton.className = 'entries clickable';\n\t\t\t\tconst result = results[i].item;\n\t\t\t\tconst { nameSearch } = this._config;\n\t\t\t\tconst generalName = result[nameSearch.find(key => result[key] !== undefined)];\n\t\t\t\tif (generalName) {\n\t\t\t\t\tconst url = result.url || result.id;\n\t\t\t\t\tbutton.innerHTML = generalName;\n\t\t\t\t\tconst link = AppUtils.addStartToPath(url);\n\t\t\t\t\tbutton.addEventListener('mouseover', () => {\n\t\t\t\t\t\tthis.setSelected(i);\n\t\t\t\t\t}, false);\n\t\t\t\t\tbutton.addEventListener('click', e => {\n\t\t\t\t\t\tthis._handleClick(url, text);\n\t\t\t\t\t\te?.stopPropagation?.();\n\t\t\t\t\t}, false);\n\n\t\t\t\t\tconst buttonDiv = document.createElement('div');\n\t\t\t\t\tbuttonDiv.className = 'result-div small';\n\t\t\t\t\tbuttonDiv.appendChild(button);\n\t\t\t\t\tdiv.appendChild(buttonDiv);\n\t\t\t\t\tthis.results.push({ link, element: buttonDiv });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (!this._config.allowInfo) {\n\t\t\tconst label = document.createElement('label');\n\t\t\tlabel.className = 'title no-match small';\n\t\t\tlabel.innerHTML = 'No matches.';\n\t\t\tdiv.appendChild(label);\n\t\t\tthis._children.results.classList.add('no-results');\n\t\t}\n\n\t\tthis._children.results.appendChild(div);\n\t}\n\n\t/**\n\t * Open search bar.\n\t */\n\topen() {\n\t\tthis.setState({\n\t\t\tmagClass: 'mag-close',\n\t\t\tsearchClass: 'search-open',\n\t\t\tisFeaturedVisible: this._config.allowFeatured,\n\t\t\tisFeaturedVisibleClass: this._class.isItemVisible[this._config.allowFeatured],\n\t\t\t...this._config.allowFeatured && { searchInfo: this._config.infoText.default }\n\t\t});\n\n\t\t// Set isSearching to true.\n\t\tthis.app.isSearching = true;\n\t}\n\n\t/**\n\t * Close search bar.\n\t */\n\tclose() {\n\t\tif (this.getState('alwaysOpen')) {\n\t\t\tthis.setState({\n\t\t\t\tmagClass: 'mag-close',\n\t\t\t\tsearchClass: 'search-open',\n\t\t\t\tfocusedClass: '',\n\t\t\t\tisFeaturedVisible: false,\n\t\t\t\tisFeaturedVisibleClass: this._class.isItemVisible.false\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tmagClass: 'mag-open',\n\t\t\t\tsearchClass: 'search-close',\n\t\t\t\tfocusedClass: '',\n\t\t\t\tisFeaturedVisible: false,\n\t\t\t\tisFeaturedVisibleClass: this._class.isItemVisible.false\n\t\t\t});\n\t\t}\n\t\t// Take focus away from input.\n\t\tthis._children.input?.blur();\n\n\t\t// Set isSearching to false.\n\t\tthis.app.isSearching = false;\n\t}\n\n\t/**\n\t * Setup featured suggestion panel.\n\t * If no info, clear the panel.\n\t * @param {Array} [info=[]]\n\t */\n\tsetupFeaturedSuggestion(info = []) {\n\t\t// Clear the panel\n\t\tthis._children.featured.innerHTML = '';\n\n\t\t// Populate the panel with info\n\t\tfor (let i = 0; i < info.length; i++) {\n\t\t\tconst { text, url } = info[i];\n\t\t\tconst li = document.createElement('li');\n\t\t\tli.innerHTML = text;\n\t\t\tli.className = 'clickable thin';\n\t\t\tli.addEventListener('click', e => {\n\t\t\t\tthis._handleClick(url, this._searchString);\n\t\t\t\te?.stopPropagation?.();\n\t\t\t});\n\t\t\tthis._children.featured.appendChild(li);\n\t\t}\n\t}\n\n\t/**\n\t * Create scrollbar.\n\t * @param {HTMLElement} parentEl - the parent element of the overflowing element\n\t * @returns {object}\n\t */\n\t_createScrollbar(parentEl) {\n\t\treturn AppUtils.addScrollbar(parentEl, {\n\t\t\tsizeAutoCapable: true\n\t\t});\n\t}\n\n\t/**\n\t * Gets parsed link if available.\n\t * @param {string} link\n\t * @returns {string|object}\n\t */\n\t_getLink(link) {\n\t\treturn link;\n\t}\n\n\t/**\n\t * Handle click on the search result.\n\t * @param {string} link - url link\n\t * @param {string} text - search text\n\t */\n\t_handleClick(link, text) {\n\t\t// Check for link\n\t\tif (!link) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.reset();\n\t\tthis.triggerCallbacks('resultselected');\n\n\t\tconst router = this._app.getManager('router');\n\n\t\t// Get parsed link if available.\n\t\tconst parsedLink = this._getLink(link);\n\n\t\tconst linkPath = typeof parsedLink === 'string' ? parsedLink : (parsedLink.path ?? '');\n\n\t\tif (linkPath.includes('events')) {\n\t\t\trouter.navigate({}, linkPath, { __remove: 'all' });\n\t\t}\n\t\telse {\n\t\t\tconst {\n\t\t\t\toptions = { keepTime: true },\n\t\t\t\tquery = {}\n\t\t\t} = typeof parsedLink === 'object' && parsedLink;\n\n\t\t\t// Go to the object, maintaining time query if it exists.\n\t\t\trouter.navigate(query, linkPath, options);\n\t\t}\n\t}\n\n\t/**\n\t * Manually simulate a search without typing\n\t * @param {string} text\n\t */\n\tsimulate(text) {\n\t\tconst { input } = this._children;\n\n\t\tthis.onIconClick();\n\t\tinput.value = text;\n\t\tthis._find({}, text);\n\t\tinput.onkeyup();\n\t}\n\n\t/**\n\t * Get details for a result.\n\t * @param {Fuse.FuseResult} result\n\t * @returns {Promise}\n\t */\n\tasync _getDetails(result) {\n\t\treturn this._app.getManager('content').getEntityDesc(result.item.id);\n\t}\n\n\t/**\n\t * Sets the this._excludeResults list\n\t * @param {Array<string>} excludeResults\n\t */\n\tsetExcludeResults(excludeResults) {\n\t\tthis._excludeResults = excludeResults;\n\t}\n\n\t/**\n\t * Enables the component.\n\t * @abstract\n\t * @package\n\t */\n\t__enable() {\n\t\tsuper.__enable();\n\n\t\t// If allowFeatured and featured parent is in the DOM, create featured scrollbar.\n\t\tconst { allowFeatured } = this._config;\n\t\tif (allowFeatured) {\n\t\t\tconst { parentElement: featuredParentEl } = this._children.featured || {};\n\t\t\tconst parentInDOM = document.body.contains(featuredParentEl);\n\n\t\t\tif (parentInDOM) {\n\t\t\t\tthis._featuredScrollbar ??= this._createScrollbar(featuredParentEl);\n\t\t\t}\n\t\t}\n\t}\n}\n\nSearch.html = html;\n\nexport default Search;\n","import Settings from './settings.js';\nimport 'tippy.js/dist/tippy.css';\nimport './settings.css';\n\nexport default Settings;\n","import screenfull from 'screenfull';\nimport tippy, { followCursor } from 'tippy.js';\nimport * as Pioneer from 'pioneer';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './settings.html';\nimport { LightSourceComponent } from 'pioneer';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n */\nclass Settings extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tconst config = {\n\t\t\tisCollapsible: true,\n\t\t\tallowToggleUnit: false,\n\t\t\tallowLayers: true,\n\t\t\tallowZoom: true,\n\t\t\tallowFullscreen: screenfull.isEnabled,\n\t\t\tallowPhotoMode: false,\n\t\t\tallowInfoPanel: true,\n\t\t\tallowLighting: true,\n\t\t\tshowLightOptions: false,\n\t\t\tallowGuidedCamera: false,\n\t\t\tzoomIn: app.getManager('camera').zoomIn,\n\t\t\tzoomOut: app.getManager('camera').zoomOut,\n\t\t\t...options.config\n\t\t};\n\t\tdelete options.config;\n\n\t\tconfig.orientation = {\n\t\t\tbigPortrait: {\n\t\t\t\tcheck: config.orientation?.bigPortrait?.check || (() => AppUtils.isPortrait() && !AppUtils.isMobilePortrait() && !AppUtils.isTabletPortrait()),\n\t\t\t\tori: config.orientation?.bigPortrait?.ori || 'vertical'\n\t\t\t},\n\t\t\ttabletPortrait: {\n\t\t\t\tcheck: config.orientation?.tabletPortrait?.check || (() => AppUtils.isTabletPortrait()),\n\t\t\t\tori: config.orientation?.tabletPortrait?.ori || 'vertical'\n\t\t\t},\n\t\t\tsmallPortrait: {\n\t\t\t\tcheck: config.orientation?.smallPortrait?.check || (() => AppUtils.isMobilePortrait()),\n\t\t\t\tori: config.orientation?.smallPortrait?.ori || 'vertical'\n\t\t\t},\n\t\t\tbigLandscape: {\n\t\t\t\tcheck: config.orientation?.bigLandscape?.check || (() => AppUtils.isLandscape() && !AppUtils.isMobileLandscape() && !AppUtils.isTabletLandscape()),\n\t\t\t\tori: config.orientation?.bigLandscape?.ori || 'vertical'\n\t\t\t},\n\t\t\ttabletLandscape: {\n\t\t\t\tcheck: config.orientation?.tabletPortrait?.check || (() => AppUtils.isTabletLandscape() || AppUtils.isPanorama()),\n\t\t\t\tori: config.orientation?.tabletPortrait?.ori || 'vertical'\n\t\t\t},\n\t\t\tsmallLandscape: {\n\t\t\t\tcheck: config.orientation?.smallLandscape?.check || (() => AppUtils.isMobileLandscape()),\n\t\t\t\tori: config.orientation?.smallLandscape?.ori || 'horizontal'\n\t\t\t}\n\t\t};\n\n\t\tsuper(app, null, {\n\t\t\tisMetric: false,\n\t\t\tisVisible: true,\n\t\t\tisFullscreen: false,\n\t\t\tisPhotoMode: false,\n\t\t\tisGuidedCamera: true,\n\t\t\tshowOrbitLines: true,\n\t\t\tshowLabels: true,\n\t\t\tlightType: 'shadow',\n\t\t\tconfig,\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Manually set orientation for buttons.\n\t\t * @type {string}\n\t\t */\n\t\tthis._ori = '';\n\n\t\tthis._isMobileMode = AppUtils.isMobileMode();\n\t\tthis._isHorizontal = null;\n\n\t\tObject.assign(this._class, {\n\t\t\tcontainer: {\n\t\t\t\tcollapse: 'hidden',\n\t\t\t\texpand: 'active'\n\t\t\t},\n\t\t\tisItemVisible: {\n\t\t\t\ttrue: '',\n\t\t\t\tfalse: 'hidden'\n\t\t\t},\n\t\t\ticon: {\n\t\t\t\timperial: 'icon-mi',\n\t\t\t\tmetric: 'icon-km',\n\t\t\t\tinfo: 'icon-info'\n\t\t\t},\n\t\t\tfullscreen: {\n\t\t\t\ttrue: 'fullscreen',\n\t\t\t\tfalse: 'window'\n\t\t\t},\n\t\t\tphoto: {\n\t\t\t\ttrue: 'active',\n\t\t\t\tfalse: ''\n\t\t\t},\n\t\t\tlight: {\n\t\t\t\tnatural: 'icon-natural-light',\n\t\t\t\tshadow: 'icon-shadow-light',\n\t\t\t\tflood: 'icon-flood-light'\n\t\t\t},\n\t\t\tcamera: {\n\t\t\t\ttrue: 'icon-free-cam',\n\t\t\t\tfalse: 'icon-auto-cam'\n\t\t\t},\n\t\t\tisHorizontal: {\n\t\t\t\ttrue: 'horizontal',\n\t\t\t\tfalse: 'vertical'\n\t\t\t}\n\t\t});\n\n\t\tconst isVisible = !this._isMobileMode;\n\t\tconst isCollapsed = this._isMobileMode;\n\t\tconst isHorizontal = this.isHorizontal();\n\t\tconst CameraManager = /** @type {CameraManager}  */ this.app.getManager('camera');\n\t\tthis._fullLightColor = CameraManager.getFullLightColor();\n\t\tthis._shadowLightColor = CameraManager.getShadowLightColor();\n\n\t\tObject.assign(this._state, {\n\t\t\tisVisible,\n\t\t\tisCollapsed,\n\t\t\tisVisibleClass: this._class.isVisible[isVisible],\n\t\t\tcontainerClass: isCollapsed ? this._class.container.collapse : this._class.container.expand,\n\t\t\tisCollapsibleClass: this._class.isItemVisible[this._config.isCollapsible],\n\t\t\tallowInfoPanelClass: this._class.isItemVisible[this._config.allowInfoPanel],\n\t\t\tallowToggleUnitClass: this._class.isItemVisible[this._config.allowToggleUnit],\n\t\t\tallowPhotoModeClass: this._class.isItemVisible[this._config.allowPhotoMode],\n\t\t\tallowZoomClass: this._class.isItemVisible[this._config.allowZoom],\n\t\t\tallowLightingClass: this._class.isItemVisible[this._config.allowLighting],\n\t\t\tshowLightingOptionsClass: this._class.isItemVisible[this._config.showLightOptions],\n\t\t\tallowGuidedCameraClass: this._class.isItemVisible[this._config.allowGuidedCamera],\n\t\t\tallowFullscreenClass: this._class.isItemVisible[this._config.allowFullscreen],\n\t\t\tallowLayersClass: this._class.isItemVisible[this._config.allowLayers],\n\t\t\tunitButton: this._state.isMetric ? this._class.icon.imperial : this._class.icon.metric,\n\t\t\tinfoButton: this._class.icon.info,\n\t\t\tfullscreenClass: this._class.fullscreen[this._state.isFullscreen],\n\t\t\tphotoModeClass: this._class.photo[this._state.isPhotoMode],\n\t\t\tlightClass: this._class.light[this._state.lightType],\n\t\t\tguidedClass: this._class.camera[this._state.isGuidedCamera],\n\t\t\tisHorizontal,\n\t\t\torientationClass: this._class.isHorizontal[isHorizontal]\n\t\t});\n\n\t\t/**\n\t\t * Array of possible event names.\n\t\t * @type {string[]}\n\t\t * @default\n\t\t */\n\t\tthis._eventNames.push('unitchange', 'photomodechange', 'guidedcamerachange', 'expandtoggle');\n\t\tthis._initCallbacks();\n\n\t\t/**\n\t\t * Mouse is held down\n\t\t * @type {boolean}\n\t\t * @default\n\t\t */\n\t\tthis._isMouseHold = false;\n\n\t\t/**\n\t\t * Zoom is continuous or not.\n\t\t * @type {boolean}\n\t\t * @default\n\t\t */\n\t\tthis._isContinuousZoom = false;\n\n\t\t/**\n\t\t * Interval to zoom continuously.\n\t\t */\n\t\tthis._zoomInterval = null;\n\t\tthis._zoomTimeout = null;\n\n\t\t/**\n\t\t * Array to store tippy tooltip instances.\n\t\t */\n\t\tthis._tooltips = [];\n\n\t\t/**\n\t\t * Set default tippy props\n\t\t * See docs: https://atomiks.github.io/tippyjs/v6/methods/\n\t\t */\n\t\ttippy.setDefaultProps({\n\t\t\ttheme: 'default',\n\t\t\ttouch: ['hold', 2000],\n\t\t\tdelay: [600, null],\n\t\t\tplugins: [followCursor]\n\t\t});\n\n\t\t// Binds\n\t\tthis.bindFunctions([\n\t\t\t'toggleCollapse',\n\t\t\t'toggleUnit',\n\t\t\t'toggleLayers',\n\t\t\t'toggleFullscreen',\n\t\t\t'togglePhotoMode',\n\t\t\t'hideLightingOptions',\n\t\t\t'toggleLightOptions',\n\t\t\t'toggleLight',\n\t\t\t'toggleGuidedCamera',\n\t\t\t'toggleInfoPanel',\n\t\t\t'startGuidedCamera',\n\t\t\t'stopGuidedCamera',\n\t\t\t'_zoomIn',\n\t\t\t'_zoomOut',\n\t\t\t'_stopZooming',\n\t\t\t'_updateSize'\n\t\t]);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tconst {\n\t\t\tisCollapsible,\n\t\t\tallowToggleUnit,\n\t\t\tallowLayers,\n\t\t\tallowZoom,\n\t\t\tallowFullscreen,\n\t\t\tallowPhotoMode,\n\t\t\tallowInfoPanel,\n\t\t\tallowLighting,\n\t\t\tallowGuidedCamera\n\t\t} = this._config;\n\n\t\tconst newState = {};\n\n\t\t// Desktop toggle button\n\t\tif (isCollapsible) {\n\t\t\tnewState.isCollapsibleClass = this._class.isItemVisible[isCollapsible];\n\t\t}\n\n\t\tif (allowInfoPanel) {\n\t\t\tnewState.allowInfoPanelClass = this._class.isItemVisible[allowInfoPanel];\n\t\t}\n\n\t\tif (allowToggleUnit) {\n\t\t\tnewState.allowToggleUnitClass = this._class.isItemVisible[allowToggleUnit];\n\t\t}\n\n\t\tif (allowPhotoMode) {\n\t\t\tnewState.allowPhotoModeClass = this._class.isItemVisible[allowPhotoMode];\n\t\t}\n\n\t\tif (allowZoom) {\n\t\t\tnewState.allowZoomClass = this._class.isItemVisible[allowZoom];\n\n\t\t\t// Zoom in\n\t\t\tthis._children.zoomInButton.addEventListener('mousedown', () => {\n\t\t\t\tthis._stopZooming();\n\t\t\t\tthis._zoomIn(true);\n\t\t\t});\n\t\t\tthis._children.zoomInButton.addEventListener('mouseleave', this._stopZooming);\n\t\t\tthis._children.zoomInButton.addEventListener('mouseup', () => {\n\t\t\t\tif (!this._isContinuousZoom) {\n\t\t\t\t\tthis._zoomIn();\n\t\t\t\t}\n\t\t\t\tthis._stopZooming();\n\t\t\t});\n\t\t\tthis._children.zoomInButton.addEventListener('touchstart', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._stopZooming();\n\t\t\t\tthis._zoomIn(true);\n\t\t\t});\n\t\t\tthis._children.zoomInButton.addEventListener('touchmove', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst element = document.elementFromPoint(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n\t\t\t\tif (element.getAttribute('key') !== 'zoomInButton') {\n\t\t\t\t\tthis._stopZooming();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._children.zoomInButton.addEventListener('touchend', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!this._isContinuousZoom) {\n\t\t\t\t\tthis._zoomIn();\n\t\t\t\t}\n\t\t\t\tthis._stopZooming();\n\t\t\t});\n\n\t\t\t// Zoom out\n\t\t\tthis._children.zoomOutButton.addEventListener('mousedown', () => {\n\t\t\t\tthis._stopZooming();\n\t\t\t\tthis._zoomOut(true);\n\t\t\t});\n\t\t\tthis._children.zoomOutButton.addEventListener('mouseleave', this._stopZooming);\n\t\t\tthis._children.zoomOutButton.addEventListener('mouseup', () => {\n\t\t\t\tif (!this._isContinuousZoom) {\n\t\t\t\t\tthis._zoomOut();\n\t\t\t\t}\n\t\t\t\tthis._stopZooming();\n\t\t\t});\n\t\t\tthis._children.zoomOutButton.addEventListener('touchstart', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._stopZooming();\n\t\t\t\tthis._zoomOut(true);\n\t\t\t});\n\t\t\tthis._children.zoomOutButton.addEventListener('touchmove', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst element = document.elementFromPoint(event.changedTouches[0].clientX, event.changedTouches[0].clientY);\n\t\t\t\tif (element.getAttribute('key') !== 'zoomOutButton') {\n\t\t\t\t\tthis._stopZooming();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._children.zoomOutButton.addEventListener('touchend', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (!this._isContinuousZoom) {\n\t\t\t\t\tthis._zoomOut();\n\t\t\t\t}\n\t\t\t\tthis._stopZooming();\n\t\t\t});\n\t\t}\n\n\t\tif (allowLighting) {\n\t\t\tnewState.allowLightingClass = this._class.isItemVisible[allowLighting];\n\t\t\tthis._children.flood.onclick = this.toggleLightOptions.bind(this._children.flood, 'flood');\n\t\t\tthis._children.shadow.onclick = this.toggleLightOptions.bind(this._children.shadow, 'shadow');\n\t\t\tthis._children.natural.onclick = this.toggleLightOptions.bind(this._children.natural, 'natural');\n\n\t\t\t// Turn on shadow light mode by default\n\t\t\tthis._children.shadow.classList.add('selected-lighting');\n\n\t\t\tthis.toggleLightOptions('shadow');\n\t\t}\n\n\t\tif (allowGuidedCamera) {\n\t\t\tnewState.allowGuidedCameraClass = this._class.isItemVisible[allowGuidedCamera];\n\t\t}\n\n\t\tif (allowFullscreen && screenfull.isEnabled) {\n\t\t\tnewState.allowFullscreenClass = this._class.isItemVisible[allowFullscreen];\n\n\t\t\t// On fullscreen api change event\n\t\t\tscreenfull.on('change', () => {\n\t\t\t\tconst isFullscreen = screenfull.isFullscreen;\n\t\t\t\tthis.setState({\n\t\t\t\t\tisFullscreen,\n\t\t\t\t\tfullscreenClass: this._class.fullscreen[isFullscreen]\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (allowLayers) {\n\t\t\tnewState.allowLayersClass = this._class.isItemVisible[allowLayers];\n\t\t}\n\n\t\tthis.setState(newState);\n\n\t\t// Add tooltips to elements\n\t\tconst tooltipElements = this._element.querySelectorAll('.settings button:not(.zoom), span[key=\"zoomInButton\"], span[key=\"zoomOutButton\"]');\n\n\t\tthis.addTooltips(\n\t\t\ttooltipElements,\n\t\t\t{\n\t\t\t\tupdate: function (isHorizontal) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Note: We don't want to use an arrow function to enclose the 'this' property\n\t\t\t\t\t * because we want 'this' to reference the tippy instance itself\n\t\t\t\t\t */\n\t\t\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\t\t\tthis.setProps({ placement: isHorizontal ? 'top' : 'left' });\n\t\t\t\t}\n\t\t\t}\n\n\t\t);\n\n\t\tthis._updateSize();\n\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('time'),\n\t\t\tevent: 'ratechange',\n\t\t\tcallback: this.onRateChange\n\t\t});\n\t}\n\n\t/**\n\t * Use tippy library to create tooltip instances to add to the _toolips array\n\t * @param {Array<HTMLElement>} elements\n\t * @param {object} params\n\t * @returns {Array<object>|object}\n\t */\n\taddTooltips(elements, params) {\n\t\tconst props = params.props || {};\n\n\t\tconst tippys = tippy(\n\t\t\telements,\n\t\t\tprops\n\t\t);\n\n\t\t// If passed, add update function to each tippy instance.\n\t\tif (typeof params.update === 'function') {\n\t\t\tfor (const tip of tippys) {\n\t\t\t\ttip.update = params.update;\n\t\t\t}\n\t\t}\n\t\tif (typeof params.onclick === 'function') {\n\t\t\tfor (const tip of tippys) {\n\t\t\t\ttip.popper.onclick = params.onclick;\n\t\t\t}\n\t\t}\n\n\t\tthis._tooltips.push(...tippys);\n\n\t\treturn tippys.length === 1 ? tippys[0] : tippys;\n\t}\n\n\t/**\n\t * Loop through the tooltips and call their update function if it exists\n\t * @param {boolean} isHorizontal\n\t */\n\tupdateTooltips(isHorizontal) {\n\t\tfor (const tooltip of this._tooltips) {\n\t\t\tif (typeof tooltip.update === 'function') {\n\t\t\t\ttooltip.update(isHorizontal);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update setting's config.\n\t * @param {object} config\n\t */\n\tsetConfig(config) {\n\t\tconst { collapseSettingsOptions, hideFullScreenToggle, lighting } = this.app.getManager('router').configs;\n\t\t// Only allow fullscreen if has capability\n\t\tif (config.allowFullscreen && hideFullScreenToggle !== true) {\n\t\t\tconfig.allowFullscreen = screenfull.isEnabled;\n\t\t}\n\n\t\t// Update orientation\n\t\tif (config.orientation) {\n\t\t\tconst oriConfig = this._config.orientation;\n\t\t\tconst orientations = ['bigPortrait', 'tabletPortrait', 'smallPortrait', 'bigLandscape', 'tabletLandscape', 'smallLandscape'];\n\t\t\tfor (let i = 0; i < orientations.length; i++) {\n\t\t\t\tconst ori = orientations[i];\n\t\t\t\tif (!config.orientation[ori]) {\n\t\t\t\t\tconfig.orientation[ori] = oriConfig[ori];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconfig.orientation[ori].check ??= oriConfig[ori].check;\n\t\t\t\t\tconfig.orientation[ori].ori ??= oriConfig[ori].ori;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.setConfig(config);\n\t\tconst newState = {};\n\n\t\tfor (const key in config) {\n\t\t\tif (key === 'orientation') {\n\t\t\t\tconst isHorizontal = this.isHorizontal();\n\t\t\t\tnewState.isHorizontal = isHorizontal;\n\t\t\t\tnewState[`${key}Class`] = this._class.isHorizontal[isHorizontal];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewState[`${key}Class`] = this._class.isItemVisible[config[key]];\n\t\t\t}\n\t\t}\n\n\t\tthis.setState(newState);\n\n\t\t// Override any set configs with embed queries\n\t\tif (collapseSettingsOptions === true) {\n\t\t\tthis.collapse();\n\t\t}\n\t\tif (hideFullScreenToggle === true) {\n\t\t\tthis.hideFullScreenOption();\n\t\t}\n\t\tif (lighting === 'flood' || lighting === 'natural') {\n\t\t\tthis.toggleLightOptions(lighting);\n\t\t}\n\n\t\tthis._updateSize(true);\n\t}\n\n\t/**\n\t * Get manually set orientation.\n\t * @returns {string}\n\t */\n\tgetOrientation() {\n\t\treturn this._ori;\n\t}\n\n\t/**\n\t * Manually set orientation to overwrite the auto orientation.\n\t * Passing no orientation will reset to auto mode.\n\t * @param {string} [ori=''] - Buttons' orientation: 'horizontal' or 'vertical'\n\t */\n\tsetOrientation(ori = '') {\n\t\tthis._ori = ori;\n\t}\n\n\t/**\n\t * Check if orientation should be horizontal or not.\n\t * @returns {boolean}\n\t */\n\tisHorizontal() {\n\t\t// Manually set orietation\n\t\tif (this._ori !== '') {\n\t\t\treturn this._ori === 'horizontal';\n\t\t}\n\n\t\t// Auto orientation\n\t\tfor (const key in this._config.orientation) {\n\t\t\tconst orientation = this._config.orientation[key];\n\t\t\tif (orientation.check()) {\n\t\t\t\treturn orientation.ori === 'horizontal';\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Update settings size dynamically according to mode and the numbers of visible buttons.\n\t * @param {boolean} forceResize - force to resize regardless of isHorizontal\n\t */\n\t_updateSize(forceResize = false) {\n\t\tconst isHorizontal = this.isHorizontal();\n\t\tif (!forceResize && this._isHorizontal === isHorizontal) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isHorizontal = isHorizontal;\n\n\t\t// Collapse/expand button\n\t\tlet buttonCount = 1;\n\n\t\t// Visible settings buttons\n\t\tconst buttons = Array.from(this._children.content.querySelectorAll(':scope > button'));\n\t\tfor (let i = 0; i < buttons.length; i++) {\n\t\t\tif (buttons[i].classList.contains('hidden')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbuttonCount++;\n\t\t}\n\t\tif (this._config.allowZoom) {\n\t\t\t// Add one because zoom buttons are grouped as one\n\t\t\tbuttonCount++;\n\t\t}\n\n\t\t// Set size\n\t\tif (this._isHorizontal) {\n\t\t\tthis._element.style.width = `calc(${buttonCount} * 30px + ${buttonCount} * 2px)`;\n\t\t\tthis._element.style.height = '30px';\n\t\t}\n\t\telse {\n\t\t\tthis._element.style.width = '30px';\n\t\t\tthis._element.style.height = `calc(${buttonCount} * 30px + ${buttonCount} * 2px)`;\n\t\t}\n\n\t\t// Update tooltip placement\n\t\tthis.updateTooltips(isHorizontal);\n\t}\n\n\t/**\n\t * Execute zoom continuously.\n\t * @param {Function} zoomFunction\n\t */\n\t_zoomContinuously(zoomFunction) {\n\t\tthis._isMouseHold = true;\n\n\t\tif (this._zoomTimeout !== null) {\n\t\t\tclearTimeout(this._zoomTimeout);\n\t\t}\n\t\tthis._zoomTimeout = setTimeout(() => {\n\t\t\tif (this._isMouseHold) {\n\t\t\t\tthis._isContinuousZoom = true;\n\t\t\t\t// Mouse was held down for some time\n\t\t\t\tif (this._zoomInterval !== null) {\n\t\t\t\t\tclearInterval(this._zoomInterval);\n\t\t\t\t}\n\t\t\t\tthis._zoomInterval = setInterval(() => {\n\t\t\t\t\tif (this._isMouseHold) {\n\t\t\t\t\t\tzoomFunction(true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tclearInterval(this._zoomInterval);\n\t\t\t\t\t}\n\t\t\t\t}, 30);\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\t/**\n\t * Handle zoom in discretely or continuously.\n\t * @param {boolean} [isContinuous=false] - Zoom continuously\n\t */\n\t_zoomIn(isContinuous = false) {\n\t\tif (isContinuous) {\n\t\t\tthis._zoomContinuously(this._config.zoomIn);\n\t\t}\n\t\telse {\n\t\t\tthis._config.zoomIn();\n\t\t}\n\t}\n\n\t/**\n\t * Handle zoom out discretely or continuously.\n\t * @param {boolean} [isContinuous=false] - Zoom continuously\n\t */\n\t_zoomOut(isContinuous = false) {\n\t\tif (isContinuous) {\n\t\t\tthis._zoomContinuously(this._config.zoomOut);\n\t\t}\n\t\telse {\n\t\t\tthis._config.zoomOut();\n\t\t}\n\t}\n\n\t/**\n\t * Stop continuous zoom.\n\t */\n\t_stopZooming() {\n\t\tclearInterval(this._zoomInterval);\n\t\tthis._isMouseHold = false;\n\t\tthis._isContinuousZoom = false;\n\t}\n\n\t/**\n\t * Show settings.\n\t */\n\tshow() {\n\t\tthis.setState({\n\t\t\tisVisible: true,\n\t\t\tisVisibleClass: this._class.isVisible.true\n\t\t});\n\t}\n\n\t/**\n\t * Hide settings.\n\t */\n\thide() {\n\t\tthis.setState({\n\t\t\tisVisible: false,\n\t\t\tisVisibleClass: this._class.isVisible.false,\n\t\t\tshowLightingOptionsClass: this._class.isVisible.false\n\t\t});\n\t}\n\n\t/**\n\t * Returns true if visible.\n\t * @returns {boolean}\n\t */\n\tisVisible() {\n\t\treturn this._state.isVisible;\n\t}\n\n\t/**\n\t * Show buttons.\n\t */\n\texpand() {\n\t\tthis.setState({\n\t\t\tisCollapsed: false,\n\t\t\tcontainerClass: this._class.container.expand\n\t\t});\n\t}\n\n\t/**\n\t * Hide buttons.\n\t */\n\tcollapse() {\n\t\tthis.setState({\n\t\t\tisCollapsed: true,\n\t\t\tshowLightingOptionsClass: this._class.isVisible.false,\n\t\t\tcontainerClass: this._class.container.collapse\n\t\t});\n\t}\n\n\t/**\n\t * Toggle expand/collapse buttons.\n\t */\n\ttoggleCollapse() {\n\t\tif (this._state.isCollapsed) {\n\t\t\tthis.expand();\n\t\t}\n\t\telse {\n\t\t\tthis.collapse();\n\t\t}\n\t\tthis.triggerCallbacks('expandtoggle', [!this._state.isCollapsed, this._state.isPhotoMode]);\n\t}\n\n\t/**\n\t * Toggle unit between metric and imperial.\n\t */\n\ttoggleUnit() {\n\t\tconst isMetric = !this._state.isMetric;\n\t\tthis.setState({\n\t\t\tisMetric,\n\t\t\tunitButton: isMetric ? this._class.icon.imperial : this._class.icon.metric\n\t\t}, () => {\n\t\t\tthis.triggerCallbacks('unitchange', [this._state.isMetric]);\n\t\t});\n\t}\n\n\t/**\n\t * Toggle fullscreen.\n\t */\n\ttoggleFullscreen() {\n\t\tif (screenfull.isEnabled) {\n\t\t\tscreenfull.toggle();\n\t\t}\n\t}\n\n\t/**\n\t * Toggle layers panel.\n\t */\n\ttoggleLayers() {\n\t\tconst layersPanelOpen = !this._app.getComponent('layerPanel').getState('isVisible');\n\t\tif (layersPanelOpen) {\n\t\t\tthis._app.getComponent('layerPanel').show();\n\t\t\tthis.collapse();\n\t\t}\n\t\telse {\n\t\t\tthis._app.getComponent('layerPanel').hide();\n\t\t}\n\t}\n\n\t/**\n\t * Toggle photo mode.\n\t */\n\ttogglePhotoMode() {\n\t\tconst isPhotoMode = !this._state.isPhotoMode;\n\t\tthis.setState({\n\t\t\tisPhotoMode,\n\t\t\tphotoModeClass: this._class.photo[isPhotoMode]\n\t\t}, () => {\n\t\t\tif (this._state.isPhotoMode) {\n\t\t\t\tthis.collapse();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.expand();\n\t\t\t}\n\t\t\tthis.triggerCallbacks('photomodechange', [this._state.isPhotoMode]);\n\t\t});\n\t}\n\n\t/**\n\t * Hide the lighting options panel\n\t * @param {Event} e\n\t */\n\thideLightingOptions(e) {\n\t\tconst checkList = [this._children.lightToggle, this._children.lightOptions, this._children.flood, this._children.natural, this._children.shadow];\n\n\t\tif (!checkList.includes(e.target)) {\n\t\t\tthis.setState({\n\t\t\t\tshowLightingOptionsClass: this._class.isVisible.false\n\t\t\t});\n\t\t}\n\t\twindow.removeEventListener('mousedown', this.hideLightingOptions);\n\t\twindow.removeEventListener('touchstart', this.hideLightingOptions);\n\t}\n\n\t/**\n\t * Hide fullscreen option\n\t */\n\thideFullScreenOption() {\n\t\tconst newState = {};\n\t\tnewState.allowFullscreenClass = this._class.isItemVisible[false];\n\t\tthis.setState(newState);\n\t}\n\n\t/**\n\t * Toggle light options panel\n\t * @param {string} type\n\t */\n\ttoggleLightOptions(type) {\n\t\tthis.setState({\n\t\t\tlightType: type,\n\t\t\tlightClass: this._class.light[type],\n\t\t\tshowLightingOptionsClass: this._class.isVisible.false\n\t\t}, () => {\n\t\t\tif (type === 'flood') {\n\t\t\t\tthis._app.getManager('camera')?.toggleCameraLight(true, this._fullLightColor);\n\t\t\t\tthis._app.getManager('comparison')?.setCameraLight(true, this._fullLightColor);\n\t\t\t}\n\t\t\telse if (type === 'natural') {\n\t\t\t\tthis._app.getManager('camera')?.toggleCameraLight(false);\n\t\t\t\tthis._app.getManager('comparison')?.setCameraLight(false);\n\t\t\t}\n\t\t\telse if (type === 'shadow') {\n\t\t\t\tthis._app.getManager('camera')?.toggleCameraLight(true, this._shadowLightColor);\n\t\t\t\tthis._app.getManager('comparison')?.setCameraLight(true, this._shadowLightColor);\n\t\t\t}\n\n\t\t\tfor (const key in this._children) {\n\t\t\t\t// Remove highlight from unselected light options\n\t\t\t\tif (key !== type && (key === 'flood' || key === 'natural' || key === 'shadow')) {\n\t\t\t\t\tthis._children[key].classList.remove('selected-lighting');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add highlight to selected lighting option icon and title\n\t\t\tthis._children[`${type}`].classList.add('selected-lighting');\n\t\t});\n\t}\n\n\t/**\n\t * Toggle lighting.\n\t */\n\ttoggleLight() {\n\t\tthis.setState({\n\t\t\tshowLightingOptionsClass: this.getState('showLightingOptionsClass') === this._class.isVisible.true ? this._class.isVisible.false : this._class.isVisible.true\n\t\t});\n\n\t\tif (this.getState('showLightingOptionsClass') === this._class.isVisible.true) {\n\t\t\twindow.addEventListener('mousedown', this.hideLightingOptions);\n\t\t\twindow.addEventListener('touchstart', this.hideLightingOptions);\n\t\t}\n\t\telse {\n\t\t\twindow.removeEventListener('mousedown', this.hideLightingOptions);\n\t\t\twindow.removeEventListener('touchstart', this.hideLightingOptions);\n\t\t}\n\t}\n\n\t/**\n\t * Start guided camera.\n\t */\n\tstartGuidedCamera() {\n\t\tthis.setState({\n\t\t\tisGuidedCamera: true,\n\t\t\tguidedClass: this._class.camera.true\n\t\t}, () => this.triggerCallbacks('guidedcamerachange', [this._state.isGuidedCamera]));\n\t}\n\n\t/**\n\t * Stop guided camera.\n\t */\n\tstopGuidedCamera() {\n\t\tthis.setState({\n\t\t\tisGuidedCamera: false,\n\t\t\tguidedClass: this._class.camera.false\n\t\t}, () => this.triggerCallbacks('guidedcamerachange', [this._state.isGuidedCamera]));\n\t}\n\n\t/**\n\t * Toggle guided camera.\n\t */\n\ttoggleGuidedCamera() {\n\t\tif (this._state.isGuidedCamera) {\n\t\t\tthis.stopGuidedCamera();\n\t\t}\n\t\telse {\n\t\t\tthis.startGuidedCamera();\n\t\t}\n\t}\n\n\t/**\n\t * Toggles info panel.\n\t */\n\ttoggleInfoPanel() {\n\t\tif (this._app.getComponent('infoPanel') !== null) {\n\t\t\tthis._app.getComponent('infoPanel').openPanel();\n\t\t}\n\t}\n\n\t/** @inheritdoc */\n\tresize() {\n\t\tsuper.resize();\n\n\t\t// Reorient if needed\n\t\tconst isHorizontal = this.isHorizontal();\n\t\tif (this._isHorizontal !== isHorizontal) {\n\t\t\tthis.setState({\n\t\t\t\tisHorizontal,\n\t\t\t\torientationClass: this._class.isHorizontal[isHorizontal]\n\t\t\t});\n\t\t}\n\n\t\tthis._updateSize();\n\t}\n}\n\nSettings.html = html;\n\nexport default Settings;\n","import ShareModal from './share_modal';\nimport './share_modal.css';\n\nexport default ShareModal;\n","import {\n\tAppUtils,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport OverlayScrollbars from 'overlayscrollbars';\n\nimport html from './share_modal.html';\nimport tippy, { createSingleton } from 'tippy.js';\n\nimport EMBED_DEFAULT_CONTROLS from '../../data/embed_controls';\n\n/**\n * Share Modal component.\n */\nclass ShareModal extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\tiframeElements: true,\n\t\t\tlinkTitle: '',\n\t\t\tpreviewDevice: '',\n\t\t\tpreviewResolution: '',\n\t\t\tpreviewVisibleClass: AppUtils.isiPhone() ? 'hidden' : '',\n\t\t\tisWide: null,\n\t\t\t...options,\n\t\t\tconfig: {\n\t\t\t\ttitle: 'Share',\n\t\t\t\tshareBtnParent: {\n\t\t\t\t\tselector: '.header',\n\t\t\t\t\twideSelector: '.header',\n\t\t\t\t\tthreshold: 1025\n\t\t\t\t},\n\t\t\t\tlinkAltText: 'Eyes',\n\t\t\t\tlinkImageSrc: '',\n\t\t\t\tparamsToKeep: ['time', 'rate', 'slide', 'followId', ...options?.paramsToKeep ?? []],\n\t\t\t\tresetOnClose: true,\n\n\t\t\t\t// Device resolution options.\n\t\t\t\tdeviceResolutions: {\n\t\t\t\t\tdesktop: { width: 1280, height: 720 },\n\t\t\t\t\ttablet: { width: 1024, height: 1366 },\n\t\t\t\t\tphone: { width: 375, height: 667 }\n\t\t\t\t},\n\t\t\t\t...options?.config\n\t\t\t}\n\n\t\t});\n\n\t\tthis._activeTab = null;\n\t\tthis._srcURL = null;\n\n\t\t/**\n\t\t * Options scrollbar instance.\n\t\t * @type {OverlayScrollbars}\n\t\t */\n\t\tthis._embedOptionsScrollbar = null;\n\n\t\t// Tippy vars.\n\t\tthis._tippySingleton = null;\n\t\tthis._tippyItems = null;\n\t\tthis._tippyTimeout = null;\n\n\t\tthis._embedQueries = {};\n\n\t\tthis._inputElements = {};\n\n\t\tthis.bindFunctions(['_iframeLoadEventListener']);\n\t}\n\n\t/**\n\t * Concatenated EMBED_DEFAULT_CONTROLS with this._config.controls.\n\t * If the EMBED_DEFAULT_CONTROLS array has objects with matching groupName property to options.controls array, merge the items array.\n\t * If options.controls contains new groupName properties, add them to the array.\n\t */\n\tmergeEmbedControls() {\n\t\tconst { controls } = this._config;\n\t\tconst mergedControls = EMBED_DEFAULT_CONTROLS.map(defaultControl => {\n\t\t\tconst { groupName: defaultGroupName, items: defaultItems } = defaultControl;\n\t\t\tconst newControl = controls.find(control => control.groupName === defaultGroupName);\n\n\t\t\tif (newControl) {\n\t\t\t\tconst { items: newItems } = newControl;\n\t\t\t\t// Filter out default items that are already in the newItems array.\n\t\t\t\tconst mergedItems = defaultItems.filter(({ name }) => !newItems.some(({ name: newName }) => newName === name));\n\t\t\t\treturn { ...defaultControl, items: [...newItems, ...mergedItems] };\n\t\t\t}\n\n\t\t\treturn defaultControl;\n\t\t});\n\n\t\t// Add any new controls to the mergedControls array.\n\t\tconst newControls = controls.filter(control => !mergedControls.some(({ groupName }) => groupName === control.groupName));\n\n\t\t// Set the embedO\n\t\tthis._config.embedOptions = [...mergedControls, ...newControls];\n\t}\n\n\t/**\n\t * Initilizing the component\n\t * @override\n\t * @inheritdoc\n\t */\n\tinit() {\n\t\tsuper.init();\n\t\tconst { canHover } = this._app;\n\n\t\t// Merge the embed controls.\n\t\tthis.mergeEmbedControls();\n\n\t\t// Set the embed parameters.\n\t\tthis.setEmbedParams();\n\n\t\t// Generate the embed content.\n\t\tthis.generateEmbedContent();\n\n\t\t// Set the wide selector state.\n\t\tthis.setIsWide();\n\n\t\t// Scrollbar creation\n\t\tthis.createScrollbars();\n\n\t\t// Create and add the share button to the parent.\n\t\tthis.createShareButton();\n\t\tthis.addShareButtonToParent();\n\n\t\t/**\n\t\t * Set default tippy props\n\t\t */\n\t\ttippy.setDefaultProps({\n\t\t\ttheme: 'default',\n\t\t\ttouch: true,\n\t\t\thideOnClick: false,\n\t\t\tdelay: [300, null],\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'mouseenter click',\n\t\t\t// If we dont have hovering ability, hide the tooltip after a delay\n\t\t\tonTrigger: instance => {\n\t\t\t\tclearTimeout(this._tippyTimeout);\n\t\t\t\tif (!canHover) {\n\t\t\t\t\tthis._tippyTimeout = setTimeout(() => {\n\t\t\t\t\t\tinstance?.hide();\n\t\t\t\t\t}, 3000);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Manual hide on outside click as hideOnClick is false and behaves oddly for touch when true.\n\t\t\tonClickOutside: instance => {\n\t\t\t\tinstance.hide();\n\t\t\t},\n\t\t\t// Make sure the tippy elements are blurred (not focused) when hidden (doesnt happen by default on touch devices)\n\t\t\tonHidden: _ => {\n\t\t\t\tthis._tippyItems?.forEach(({ reference }) => reference.blur());\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create the scrollbars for the embed options.\n\t */\n\tcreateScrollbars() {\n\t\tconst { embedOptsContent } = this._children;\n\t\tconst sectionParent = embedOptsContent.parentElement;\n\n\t\tAppUtils.onAttachElement(sectionParent, () => {\n\t\t\tthis._embedOptionsScrollbar = AppUtils.addScrollbar(sectionParent);\n\t\t});\n\t}\n\n\t/**\n\t * Get the current device.\n\t * @returns {string} The current device.\n\t */\n\tgetCurrentDevice() {\n\t\tif (AppUtils.isTablet()) {\n\t\t\treturn 'tablet';\n\t\t}\n\t\tif (AppUtils.isMobile()) {\n\t\t\treturn 'phone';\n\t\t}\n\t\treturn 'desktop';\n\t}\n\n\t/**\n\t * Creates the share button.\n\t */\n\tcreateShareButton() {\n\t\tthis.shareButton = document.createElement('button');\n\t\tthis.shareButton.className = 'share-button clickable';\n\t\tthis.shareButton.innerText = 'Share';\n\n\t\tconst shareIcon = document.createElement('span');\n\t\tshareIcon.className = 'icon icon-share';\n\t\tthis.shareButton.prepend(shareIcon);\n\n\t\t// Add the click event.\n\t\tthis.shareButton.addEventListener('click', () => {\n\t\t\t// Set the src URL.\n\t\t\tthis.setSrcURL();\n\n\t\t\t// Set the default preview device.\n\t\t\tthis.setPreviewDevice({ target: { value: this.getCurrentDevice() } });\n\n\t\t\t// Always set the active tab to the link on open.\n\t\t\tthis.setActiveTab('link');\n\n\t\t\t// Set the src and alt text attributes for the link image.\n\t\t\tconst { linkImage } = this._children;\n\t\t\tconst { linkAltText: backupAltText, linkImageSrc: backupImageSrc } = this._config;\n\n\t\t\t// For future when we have entity-specific SEO - we can use the title and og:image\n\t\t\tconst title = document.querySelector('title')?.innerText;\n\t\t\tconst ogImage = document.querySelector('meta[property=\"og:image\"]')?.getAttribute('content');\n\t\t\tconst altText = title || backupAltText;\n\t\t\tconst src = (ogImage !== '$OG_IMAGE' && ogImage) || backupImageSrc;\n\n\t\t\t// Set the link image attributes.\n\t\t\tlinkImage.setAttribute('alt', altText);\n\t\t\tlinkImage.setAttribute('src', src);\n\n\t\t\t// Set the link title state.\n\t\t\tconst { fullTitle } = this._app.getManager('title');\n\t\t\tconst linkTitle = fullTitle ?? altText;\n\t\t\tthis.setState({ linkTitle });\n\n\t\t\t// Show the modal.\n\t\t\tthis.show();\n\t\t});\n\t}\n\n\t/**\n\t * Determine if the wide selector should be used for the share button parent.\n\t * @returns {boolean} Whether the isWide state has been updated.\n\t */\n\tsetIsWide() {\n\t\tconst { isWide: currentIsWide } = this._state;\n\t\tconst { shareBtnParent } = this._config;\n\t\tconst { threshold } = shareBtnParent;\n\n\t\tconst newIsWide = window.innerWidth >= threshold;\n\n\t\tif (currentIsWide !== newIsWide) {\n\t\t\tthis.setState({ isWide: newIsWide });\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Add the share button to the parent.\n\t */\n\taddShareButtonToParent() {\n\t\tconst { shareBtnParent } = this._config;\n\t\tconst { isWide } = this._state;\n\t\tconst { selector, wideSelector } = shareBtnParent;\n\n\t\t// Remove it from its current parent.\n\t\tthis.shareButton.parentNode?.removeChild(this.shareButton);\n\n\t\t// Add it to the new parent, once it's ready.\n\t\tconst shareBtnParentSelector = isWide ? wideSelector : selector;\n\t\tAppUtils.elementReady(shareBtnParentSelector, 3000)\n\t\t\t.then(shareButtonParent => {\n\t\t\t\t// Append the button to the parent.\n\t\t\t\tshareButtonParent.appendChild(this.shareButton);\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(e => e);\n\t}\n\n\n\t/**\n\t * Set the src URL and update the code text content.\n\t * @param {string} href\n\t * @param {boolean} updateCode\n\t */\n\tsetSrcURL(href = window.location.href, updateCode = true) {\n\t\tconst { linkCode } = this._children;\n\t\tconst { paramsToKeep } = this._config;\n\n\t\t// Determine the parameters to keep from config.\n\t\tconst splitHref = href.split('?');\n\t\tconst params = splitHref[1] ? new URLSearchParams(splitHref[1]) : new URLSearchParams();\n\t\tconst paramKeysArray = Array.from(params.keys());\n\n\t\t// Iterate over all keys\n\t\tfor (const key of paramKeysArray) {\n\t\t\t// If the key is not in the array, delete it\n\t\t\tif (!paramsToKeep.includes(key)) {\n\t\t\t\tparams.delete(key);\n\t\t\t}\n\t\t}\n\n\t\tthis._srcURL = `${splitHref[0]}${params.size ? '?' : ''}${params.toString()}`;\n\n\t\t// Set the basic link code text content - a direct copy of the href, with no params removed.\n\t\tif (updateCode) {\n\t\t\tlinkCode.textContent = href;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the default embed parameters.\n\t */\n\tsetEmbedParams() {\n\t\tconst { embedOptions } = this._config;\n\n\t\t// Create the embed parameters.\n\t\tembedOptions.forEach(({ items }) => {\n\t\t\titems.forEach(option => {\n\t\t\t\tconst { query, inputDefault, invert } = option;\n\t\t\t\tconst value = invert ? !inputDefault : inputDefault;\n\t\t\t\tthis._embedQueries[query] = value;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Update the embed parameters and the code text content.\n\t * @param {string} query\n\t * @param {string|boolean|number} value\n\t */\n\tupdateEmbedParams(query, value) {\n\t\tif (this._embedQueries[query] === value || this._embedQueries[query] === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the embed param.\n\t\tthis._embedQueries[query] = value;\n\n\t\t// Update the embed code.\n\t\tthis.updateEmbedCode();\n\t}\n\n\t/**\n\t * Set the embed preview and copy-able code text content.\n\t * @param {object} params\n\t */\n\tupdateEmbedCode(params) {\n\t\tconst { force = false, updatePreview = true } = params || {};\n\t\tconst { embedCode, embedPreviewParent } = this._children;\n\t\tconst { iframeElements } = this._state;\n\n\t\t// Get the embed code as a string.\n\t\tconst { srcURL, iframeString, noTrackingIframeString } = this.getEmbedCodeFromParams();\n\n\t\tconst embedCodeString = iframeElements ? iframeString : srcURL;\n\n\t\t// Update embed code text content.\n\t\tif (embedCodeString !== embedCode.textContent || force) {\n\t\t\tembedCode.textContent = embedCodeString;\n\t\t}\n\n\t\t// Add the embed code to the parent element and subsequent nav listener.\n\t\tif (updatePreview && !AppUtils.isiPhone() && (embedPreviewParent?.innerHTML.replace(/&amp;/g, '&') !== noTrackingIframeString || force)) {\n\t\t\t// Remove the previous load event listener.\n\t\t\tconst iframe = embedPreviewParent.querySelector('iframe');\n\t\t\tiframe?.removeEventListener('load', this._iframeLoadEventListener);\n\n\t\t\t// Reset the iframe's innerHTML\n\t\t\tembedPreviewParent.innerHTML = noTrackingIframeString;\n\n\t\t\t// Add the load event listener to the new iframe.\n\t\t\tconst newIframe = embedPreviewParent.querySelector('iframe');\n\t\t\tnewIframe.addEventListener('load', this._iframeLoadEventListener);\n\t\t}\n\n\t\t/**\n\t\t * TODO in preview iframe code:\n\t\t * Turn off google analytics for the preview\n\t\t */\n\n\t\t// Force a resize to update the iframe transform.\n\t\tthis.resize();\n\t}\n\n\t/**\n\t * Calculate the template size.\n\t */\n\tcalcTemplateWidth() {\n\t\tconst { deviceResolutions } = this._config;\n\t\tconst { embedPreviewParent } = this._children;\n\t\tconst { previewDevice, useBrowserTemplate } = this._state;\n\n\t\tif (!useBrowserTemplate) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { width, height } = deviceResolutions[previewDevice] || deviceResolutions.desktop;\n\n\t\tconsole.log('\\ncalculating template size for', previewDevice);\n\t\tconsole.log('width:', width);\n\t\tconsole.log('height:', height);\n\t}\n\n\t/**\n\t * Calculate the iframe transform scale and offset-x according to its parent's dimensions.\n\t */\n\tcalcIframeTransform() {\n\t\tconsole.log('calcIframeTransform: ');\n\t\tconst { previewResolution } = this._state;\n\t\tconst { width, height } = previewResolution;\n\n\t\t// Force a resize to update the iframe transform.\n\t\tthis.resize();\n\t}\n\n\t/**\n\t * Define the load event listener function.\n\t * @param {Event} e\n\t */\n\t_iframeLoadEventListener(e) {\n\t\tconst { contentWindow } = e.target;\n\t\t// Check if the iframe's contentWindow is accessible.\n\t\tif (contentWindow) {\n\t\t\t// Add a hashchange event listener to the iframe's window.\n\t\t\tcontentWindow.onhashchange = () => {\n\t\t\t\tthis.setSrcURL(contentWindow.location.href, false);\n\t\t\t\tthis.updateEmbedCode({ updatePreview: false });\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Calculate the iframe transform scale and offset-x according to its parent's dimensions.\n\t */\n\tcalcIframeTransforms() {\n\t\tconst { embedPreviewParent } = this._children;\n\t\tconst { deviceResolutions } = this._config;\n\n\t\tconst { width, height } = deviceResolutions.desktop;\n\n\t\tconst { paddingTop, paddingRight, paddingBottom, paddingLeft } = getComputedStyle(embedPreviewParent);\n\t\tconst { clientWidth: parentWidth, clientHeight: parentHeight } = embedPreviewParent;\n\n\t\tconst paddedParentWidth = parentWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);\n\t\tconst paddedParentHeight = parentHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);\n\n\t\t// Set the width and height CSS vars.\n\t\tthis._element.style.setProperty('--iframe-width', `${width}px`);\n\t\tthis._element.style.setProperty('--iframe-height', `${height}px`);\n\n\t\t// Determine the scale based on the parent and iframe dimensions.\n\t\tconst widthScale = paddedParentWidth / width;\n\t\tconst heightScale = paddedParentHeight / height;\n\t\tconst iframeScale = Math.min(widthScale, heightScale);\n\n\t\t// Set the --iframe-scale CSS variable.\n\t\tthis._element.style.setProperty('--iframe-scale', iframeScale);\n\n\t\t// Determine the scaled offset-x and set the CSS variable.\n\t\tconst offsetX = (paddedParentWidth - (width * iframeScale)) / 2;\n\t\tconst scaledOffsetX = offsetX / iframeScale;\n\t\tthis._element.style.setProperty('--iframe-offset-x', `${scaledOffsetX}px`);\n\t}\n\n\t/**\n\t * Set the preview device.\n\t * @param {Event} e\n\t */\n\tsetPreviewDevice(e) {\n\t\tconst { value: previewDevice } = e.target;\n\t\tconst { previewDevice: currPreviewDevice } = this._state;\n\n\t\t// If the current device is the same as the new device, return.\n\t\tif (previewDevice === currPreviewDevice) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the previewDevice state.\n\t\tthis.setState({ previewDevice });\n\n\t\t// Force update the embed code.\n\t\tthis.updateEmbedCode({ force: true });\n\t}\n\n\t/**\n\t * Toggle the iframe elements.\n\t * @param {Event} e\n\t */\n\ttoggleIframeElements(e) {\n\t\t// Set the checked state.\n\t\tconst { checked } = e.target;\n\t\tthis.setState({ iframeElements: checked });\n\n\t\t// Update the embed code.\n\t\tthis.updateEmbedCode({ updatePreview: false });\n\t}\n\n\t/**\n\t * Get the embed code from the params.\n\t * @returns {object} The embed code as a string.\n\t */\n\tgetEmbedCodeFromParams() {\n\t\tconst { embedOptions } = this._config;\n\t\tconst flattenedOptions = embedOptions.flatMap(({ items }) => items);\n\n\t\t// Start with the existing params (already know we need to keep them as set in setSrcURL)\n\t\tconst splitUrl = this._srcURL.split('?');\n\t\tconst urlParams = new URLSearchParams(splitUrl[1]);\n\t\tconst noTrackingUrlParams = new URLSearchParams(splitUrl[1]);\n\n\t\t/**\n\t\t * Include only the parameters that:\n\t\t * have been changed from the appQueryDefaults\n\t\t * have satisfied the dependencies\n\t\t */\n\t\tconst embedParamEntries = Object.entries(this._embedQueries).filter(([currQuery, currValue]) => {\n\t\t\t// Get the app default value for the current query.\n\t\t\tconst { appQueryDefault, dependencies } = flattenedOptions.find(({ query }) => query === currQuery) ?? {};\n\n\t\t\t// Determine if the depenedencies are satisfied.\n\t\t\tconst dependenciesSatisfied = !dependencies\n\t\t\t\t|| (dependencies?.length && dependencies.every(([depQuery, depValidFunc]) => depValidFunc(this._embedQueries[depQuery])));\n\n\t\t\treturn currValue !== appQueryDefault && dependenciesSatisfied;\n\t\t});\n\n\t\t// Create the URLSearchParams from the queries.\n\t\tconst embedParams = Object.fromEntries(embedParamEntries);\n\t\tconst noTrackingParams = { ...embedParams, tracking: 'false' };\n\n\t\t// Add the embedParams to the urlParams.\n\t\tObject.keys(embedParams).forEach(key => urlParams.set(key, embedParams[key]));\n\n\t\t// Add the noTrackingParams to the noTrackingUrlParams.\n\t\tObject.keys(noTrackingParams).forEach(key => noTrackingUrlParams.set(key, noTrackingParams[key]));\n\n\t\t// Update the src URL with the new params.\n\t\tconst srcURL = `${splitUrl[0]}${urlParams.size ? '?' : ''}${urlParams.toString()}`;\n\t\tconst noTrackingSrcURL = `${splitUrl[0]}${noTrackingUrlParams.size ? '?' : ''}${noTrackingUrlParams.toString()}`;\n\n\t\t// Build iFrame string code, including the src attribute.\n\t\tconst iframeString = `<iframe src=\"${srcURL}\" allowfullscreen ></iframe>`;\n\t\tconst noTrackingIframeString = `<iframe src=\"${noTrackingSrcURL}\" allowfullscreen ></iframe>`;\n\n\t\t// Get the embed code as a string.\n\t\treturn { srcURL, iframeString, noTrackingIframeString };\n\t}\n\n\t/**\n\t * Generate the embed content.\n\t */\n\tgenerateEmbedContent() {\n\t\tconst { embedOptions } = this._config;\n\t\tconst { embedOptsContent, embedAdvOptsContent } = this._children;\n\n\t\tembedOptions.forEach(({ isAdvanced, groupName, items }) => {\n\t\t\t// Create the group container.\n\t\t\tconst containerType = groupName ? 'fieldset' : 'div';\n\t\t\tconst groupContainer = document.createElement(containerType);\n\t\t\tgroupContainer.className = 'embed-group';\n\n\t\t\t// Add the legend header if the groupName exists\n\t\t\tif (groupName) {\n\t\t\t\tconst groupLegend = document.createElement('legend');\n\t\t\t\tgroupLegend.innerText = groupName;\n\t\t\t\tgroupContainer.appendChild(groupLegend);\n\t\t\t}\n\n\t\t\t// Create the interactive group inputs.\n\t\t\tthis.createGroupInputs(items, groupContainer);\n\n\t\t\t// Append the header and container to the options parent.\n\t\t\tconst optionsParent = isAdvanced ? embedAdvOptsContent : embedOptsContent;\n\t\t\toptionsParent.appendChild(groupContainer);\n\t\t});\n\t}\n\n\t/**\n\t * Create the group inputs.\n\t * @param {Array<object>} items\n\t * @param {HTMLElement} groupContainer\n\t */\n\tcreateGroupInputs(items, groupContainer) {\n\t\titems.forEach(option => {\n\t\t\tconst { name, description, query, type, values, inputDefault, greyValue, appQueryDefault, invert, onChange } = option;\n\n\t\t\tconst singleInput = type === 'checkbox' || type === 'number';\n\t\t\tconst radioInput = type === 'radio';\n\t\t\tconst greyedOut = inputDefault === greyValue;\n\n\t\t\t/**\n\t\t\t * Currently this supports checkbox or number (single input), and radio inputs.\n\t\t\t */\n\t\t\tif (singleInput) {\n\t\t\t\t// Create the container.\n\t\t\t\tconst inputContainer = document.createElement('div');\n\t\t\t\tinputContainer.className = `input-container ${type}-container ${greyedOut ? 'greyed-out' : ''}`;\n\n\t\t\t\t// Create the label and input\n\t\t\t\tconst embedId = `input-${query}`;\n\t\t\t\tconst label = document.createElement('label');\n\t\t\t\tlabel.className = 'clickable';\n\t\t\t\tlabel.innerText = name;\n\t\t\t\tlabel.setAttribute('for', embedId);\n\n\t\t\t\tconst input = document.createElement('input');\n\t\t\t\tinput.className = 'clickable';\n\t\t\t\tinput.setAttribute('id', embedId);\n\t\t\t\tinput.setAttribute('type', type);\n\t\t\t\tinput.setAttribute('name', query);\n\n\t\t\t\tif (type === 'checkbox' && inputDefault === true) {\n\t\t\t\t\tinput.setAttribute('checked', '');\n\t\t\t\t}\n\t\t\t\telse if (type === 'number') {\n\t\t\t\t\tconst [min, max, step] = values;\n\t\t\t\t\tinput.setAttribute('min', min);\n\t\t\t\t\tinput.setAttribute('max', max);\n\t\t\t\t\tinput.setAttribute('step', step ?? 1);\n\t\t\t\t\tinput.setAttribute('value', inputDefault);\n\t\t\t\t\tinput.setAttribute('inputmode', 'decimal');\n\t\t\t\t\tinput.setAttribute('required', '');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinput.setAttribute('value', inputDefault);\n\t\t\t\t}\n\n\t\t\t\t// Prevent the click event from bubbling up (fixes weird no-cursor bug in chrome)\n\t\t\t\tinput.addEventListener('click', e => e.stopPropagation());\n\n\t\t\t\t// Add the change event listener.\n\t\t\t\tinput.addEventListener('change', e => {\n\t\t\t\t\tconst { checked, value, validity } = e.target;\n\t\t\t\t\tif (type === 'checkbox') {\n\t\t\t\t\t\tconst invertedValue = invert ? !checked : checked;\n\t\t\t\t\t\tthis.updateEmbedParams(query, invertedValue);\n\n\t\t\t\t\t\t// Call the onChange function if it exists.\n\t\t\t\t\t\ttypeof onChange === 'function' && onChange(checked);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'number') {\n\t\t\t\t\t\tconst valueFloat = parseFloat(value);\n\t\t\t\t\t\tconst setValue = validity.valid ? valueFloat : appQueryDefault;\n\n\t\t\t\t\t\t// Update the embed params (if the value is invalid, we still need to update to the app default (to potentially remove a previous value)\n\t\t\t\t\t\tthis.updateEmbedParams(query, setValue);\n\n\t\t\t\t\t\t// Toggle the greyed-out class based on the validity.\n\t\t\t\t\t\tconst isGreyedOut = !validity.valid || valueFloat === greyValue;\n\t\t\t\t\t\tinputContainer.classList.toggle('greyed-out', isGreyedOut);\n\n\t\t\t\t\t\t// Call the onChange function if it exists.\n\t\t\t\t\t\ttypeof onChange === 'function' && onChange(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Create the help icon and tippy.\n\t\t\t\tconst helpIcon = document.createElement('span');\n\t\t\t\thelpIcon.className = 'clickable icon icon-help';\n\t\t\t\thelpIcon.setAttribute('data-tippy-content', description);\n\t\t\t\thelpIcon.setAttribute('aria-label', `Help: ${description}`);\n\t\t\t\t// Make it focusable (spans are not focusable by default)\n\t\t\t\thelpIcon.setAttribute('tabindex', '0');\n\n\t\t\t\t// Add the input, label and icon to the container.\n\t\t\t\tinputContainer.appendChild(input);\n\t\t\t\tinputContainer.appendChild(label);\n\t\t\t\tinputContainer.appendChild(helpIcon);\n\n\t\t\t\t// Append the inputContainer to the groupContainer.\n\t\t\t\tgroupContainer.appendChild(inputContainer);\n\t\t\t}\n\t\t\telse if (radioInput) {\n\t\t\t\t// Create the radio fieldset.\n\t\t\t\tconst radioFieldset = document.createElement('fieldset');\n\t\t\t\tradioFieldset.className = `radio-fieldset ${type}-option`;\n\n\t\t\t\t// Create the radio legend.\n\t\t\t\tconst radioLegend = document.createElement('legend');\n\t\t\t\tradioLegend.innerText = name;\n\t\t\t\tradioFieldset.appendChild(radioLegend);\n\n\t\t\t\tvalues.forEach(({ title, value, description }) => {\n\t\t\t\t\t// Create the details and summary elements.\n\t\t\t\t\tconst inputContainer = document.createElement('div');\n\t\t\t\t\tinputContainer.className = `input-container ${type}-container`;\n\n\t\t\t\t\t// Create the radio label.\n\t\t\t\t\tconst radioId = `input-${query}-${value}`;\n\t\t\t\t\tconst radioLabel = document.createElement('label');\n\t\t\t\t\tradioLabel.className = 'clickable';\n\t\t\t\t\tradioLabel.innerText = title;\n\t\t\t\t\tradioLabel.setAttribute('for', radioId);\n\n\t\t\t\t\t// Create the radio input.\n\t\t\t\t\tconst radioInput = document.createElement('input');\n\t\t\t\t\tradioInput.className = 'clickable';\n\t\t\t\t\tradioInput.setAttribute('id', radioId);\n\t\t\t\t\tradioInput.setAttribute('type', type);\n\t\t\t\t\tradioInput.setAttribute('name', query);\n\t\t\t\t\tradioInput.setAttribute('value', value);\n\t\t\t\t\t// Conditionally set the checked attribute.\n\t\t\t\t\tif (value === inputDefault) {\n\t\t\t\t\t\tradioInput.setAttribute('checked', '');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add the change event listener.\n\t\t\t\t\tradioInput.addEventListener('change', e => {\n\t\t\t\t\t\tconst { value } = e.target;\n\t\t\t\t\t\tthis.updateEmbedParams(query, value);\n\t\t\t\t\t});\n\n\t\t\t\t\t// Create the help icon and tippy.\n\t\t\t\t\tconst helpIcon = document.createElement('span');\n\t\t\t\t\thelpIcon.className = 'clickable icon icon-help';\n\t\t\t\t\thelpIcon.setAttribute('data-tippy-content', description);\n\t\t\t\t\thelpIcon.setAttribute('aria-label', `Help: ${description}`);\n\t\t\t\t\t// Make it focusable (spans are not focusable by default)\n\t\t\t\t\thelpIcon.setAttribute('tabindex', '0');\n\n\t\t\t\t\t// Add the input, label and icon to the inputContainer.\n\t\t\t\t\tinputContainer.appendChild(radioInput);\n\t\t\t\t\tinputContainer.appendChild(radioLabel);\n\t\t\t\t\tinputContainer.appendChild(helpIcon);\n\n\t\t\t\t\t// Append the inputContainer to the fieldset container.\n\t\t\t\t\tradioFieldset.appendChild(inputContainer);\n\t\t\t\t});\n\n\t\t\t\t// Append the radio container to the group container.\n\t\t\t\tgroupContainer.appendChild(radioFieldset);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Destroy the embed content.\n\t */\n\tdestroyEmbedContent() {\n\t\tconst { embedOptsContent, embedAdvOptsContent } = this._children;\n\t\tembedOptsContent.innerHTML = '';\n\t\tembedAdvOptsContent.innerHTML = '';\n\t}\n\n\n\t/**\n\t * Set the active tab.\n\t * @param {string} tabName\n\t */\n\tsetActiveTab(tabName) {\n\t\tconst { tabHeaders, tabContent } = this._children;\n\n\t\t// Set the active class on the tab headers and content.\n\t\ttabHeaders.childNodes.forEach(tabHeaderEl => {\n\t\t\tconst active = tabHeaderEl.classList.contains(tabName);\n\t\t\ttabHeaderEl.classList.toggle('active', active);\n\t\t});\n\n\t\ttabContent.childNodes.forEach(tabContentEl => {\n\t\t\tconst active = tabContentEl.classList.contains(tabName);\n\t\t\ttabContentEl.classList.toggle('active', active);\n\t\t});\n\n\t\t// If the embed tab is selected, update the embed code\n\t\tif (tabName === 'embed') {\n\t\t\tthis.updateEmbedCode();\n\n\t\t\t// Set the tippy tooltip content if not already set.\n\t\t\tif (this._tippySingleton === null) {\n\t\t\t\tthis._tippyItems = tippy('.icon-help');\n\t\t\t\tthis._tippySingleton = createSingleton(this._tippyItems, {\n\t\t\t\t\tmoveTransition: 'transform 0.2s ease-out'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Set the active tab state.\n\t\tthis._activeTab = tabName;\n\t}\n\n\t/**\n\t * Copy to clipboard method\n\t * @param {Event} e\n\t */\n\tcopyToClipboard(e) {\n\t\tconst { linkCode, linkContainer, embedCode, copiedOverlay } = this._children;\n\n\t\t// Determine whether we're copying the link or the embed code.\n\t\tconst isLink = e.currentTarget.parentElement === linkContainer;\n\t\tconst codeText = isLink ? linkCode.textContent : embedCode?.textContent;\n\n\t\tif (!codeText) {\n\t\t\treturn;\n\t\t}\n\n\t\tnavigator.clipboard.writeText(codeText)\n\t\t\t.then(() => {\n\t\t\t\t// Add the active class to display the overlay.\n\t\t\t\tcopiedOverlay.classList.remove('flash');\n\n\t\t\t\t// Trigger a reflow.\n\t\t\t\t// eslint-disable-next-line no-unused-expressions, no-void\n\t\t\t\tvoid copiedOverlay.offsetWidth;\n\n\t\t\t\t// Remove the active class to hide the overlay.\n\t\t\t\tcopiedOverlay.classList.add('flash');\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error('Could not copy text: ', err);\n\t\t\t});\n\t}\n\n\t// HANDLERS\n\n\t/**\n\t * Click / close handler.\n\t * @param {Event} e\n\t */\n\thandleClick(e) {\n\t\tconst { resetOnClose } = this._config;\n\t\tconst shouldClose = e.target === this._element || e.target === this._children.closeButton;\n\t\tif (shouldClose) {\n\t\t\tthis.hide();\n\t\t\tthis.resetScrollbar();\n\t\t\tresetOnClose && this.resetEmbedOptions();\n\t\t\tthis.destroyTooltips();\n\t\t}\n\n\t\tconst shouldDeselectText = e.target?.nodeName !== 'CODE';\n\t\tshouldDeselectText && window.getSelection().removeAllRanges();\n\t}\n\n\t/**\n\t * Tab click handler.\n\t * @param {Event} e\n\t */\n\thandleTabClick(e) {\n\t\tconst tabName = e.target?.innerText?.toLowerCase();\n\t\tconst setActive = tabName === 'link' || tabName === 'embed';\n\t\tsetActive && this.setActiveTab(tabName);\n\t}\n\n\t/**\n\t * Destroy the tippy instances.\n\t */\n\tdestroyTooltips() {\n\t\tthis._tippyItems = null;\n\n\t\tthis._tippySingleton?.destroy();\n\t\tthis._tippySingleton = null;\n\t}\n\n\t/**\n\t * Reset the embed options.\n\t */\n\tresetEmbedOptions() {\n\t\tthis.setEmbedParams();\n\n\t\t// Destroy, then re-create the embed content.\n\t\tthis.destroyEmbedContent();\n\t\tthis.generateEmbedContent();\n\t}\n\n\t/**\n\t * Reset the scrollbar.\n\t */\n\tresetScrollbar() {\n\t\t// Reset scroll to top\n\t\tthis._embedOptionsScrollbar.scroll(0);\n\t}\n\n\t/**\n\t * Called on every resize.\n\t * @override\n\t */\n\tresize() {\n\t\t// Update the iframe transform\n\t\tthis.calcIframeTransforms();\n\n\t\t// Determine if we need to update the share button parent.\n\t\tconst isWideHasUpdated = this.setIsWide();\n\n\t\tif (isWideHasUpdated) {\n\t\t\tthis.addShareButtonToParent();\n\t\t\tthis.resetScrollbar();\n\t\t}\n\t}\n\n\t/**\n\t * Manually hide the share button.\n\t * @param {boolean} enabled\n\t * @override\n\t */\n\tsetEnabled(enabled) {\n\t\tsuper.setEnabled(enabled);\n\n\t\t// Toggle the share button visibility and parent.\n\t\tthis.shareButton.classList.toggle('hidden', !enabled);\n\t\tconst addToParent = enabled && !this.shareButton.parentNode;\n\t\taddToParent && this.addShareButtonToParent();\n\t}\n\n\t/**\n\t * Make sure the destroy also removes the share button.\n\t */\n\t__destroy() {\n\t\tsuper.__disable();\n\n\t\tthis.shareButton.parentNode?.removeChild(this.shareButton);\n\t\tthis.shareButton = null;\n\t}\n}\n\nShareModal.html = html;\n\nexport default ShareModal;\n","//@ts-nocheck\n\nimport {\n\tBaseApp,\n\tStoryBaseContentBlock\n} from '../../../../internal';\n\nimport html from './buttons_block.html';\nimport './buttons_block.css';\n\n\n/**\n * Block for buttons\n */\nexport class ButtonsBlock extends StoryBaseContentBlock {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, {\n\t\t\t...options\n\t\t});\n\n\t\tthis._app = app;\n\t\tthis._options = options;\n\n\t\tconst scene = app.pioneer.get('main');\n\t\tscene.getLoadedPromise().then(() => {\n\t\t\tthis.setUpHTML(options);\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.warn(error);\n\t\t});\n\t}\n\n\t/**\n\t * Set up html\n\t * @param {object} options - options from story config file\n\t */\n\tasync setUpHTML(options) {\n\t\tconst { buttonContent } = options.config.info;\n\t\tconst buttonBlock = document.getElementsByClassName('buttons-block');\n\n\t\tbuttonContent.forEach((buttonInfo, index) => {\n\t\t\tconst { id, iconSrc, label } = buttonInfo;\n\t\t\t// Create buttons depending on options given\n\t\t\tconst button = document.createElement('button');\n\t\t\tbuttonBlock[0].appendChild(button);\n\n\t\t\tbutton.classList.add('clickable');\n\t\t\tbutton.classList.add('custom-button');\n\t\t\tbutton.classList.add(`${id}`);\n\n\t\t\tif (index === 0) {\n\t\t\t\t// Add the \"focused\" class to the first button (i.e. eclipse earth view)\n\t\t\t\tbutton.classList.add('focused');\n\t\t\t}\n\n\t\t\tconst buttonIcon = document.createElement('img');\n\t\t\tbutton.appendChild(buttonIcon);\n\t\t\tbuttonIcon.classList.add('button-icon');\n\t\t\tbuttonIcon.src = iconSrc;\n\n\t\t\tconst buttonLabel = document.createTextNode(label);\n\t\t\tbutton.appendChild(buttonLabel);\n\n\t\t\tbutton.onclick = this.buttonClick;\n\t\t});\n\n\t}\n\n\t/**\n\t * Custom button click events\n\t * @param {object} e - e.target for click event\n\t */\n\tbuttonClick = async e => {\n\t\tconst { buttonContent } = this._options.config.info;\n\t\tconst timeManager = this._app.getManager('time');\n\n\t\tconst selectedButton = Object.values(buttonContent).find(button => e.target.classList.contains(button.id));\n\n\t\t// Remove the \"focused\" class from all buttons\n\t\tconst allButtons = document.querySelectorAll('.custom-button');\n\t\tallButtons.forEach(button => button.classList.remove('focused'));\n\n\t\t// Set custom time limits for each button view\n\t\tif (selectedButton.timeLimits) {\n\t\t\ttimeManager.setMin(selectedButton.timeLimits.min);\n\t\t\ttimeManager.setMax(selectedButton.timeLimits.max);\n\t\t}\n\t\telse {\n\t\t\ttimeManager.resetLimits();\n\t\t}\n\t\t// Get default time set in story to reset each view to desired time\n\t\tconst { _id: storyId } = this._app.getComponent('story');\n\t\tconst currentStory = this._app.getManager('content').getStory(storyId);\n\t\tconst defaultTime = currentStory.slides[0].time;\n\n\t\t// If custom time for each button exists in [story_id].js, set that; If not, set default slide time on enter of new view\n\t\ttimeManager.setTime(selectedButton.startTime ?? defaultTime);\n\t\ttimeManager.setTimeRate(300);\n\n\t\t// Add the \"focused\" class to the clicked button\n\t\te.target.classList.add('focused');\n\n\t\t// Passed in button click function from story\n\t\tselectedButton.onClick(this._app);\n\t};\n}\n\nButtonsBlock.html = html;\n","// @ts-nocheck\n\nimport {\n\tBaseApp,\n\tStoryBaseContentBlock\n} from '../../../../internal';\n\nimport html from './checkbox_block.html';\nimport './checkbox_block.css';\n\n\n/**\n * Block for buttons\n */\nexport class CheckboxBlock extends StoryBaseContentBlock {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, {\n\t\t\t...options\n\t\t});\n\n\t\tconst scene = app.pioneer.get('main');\n\t\tscene.getLoadedPromise().then(() => {\n\t\t\tthis.setUpHTML(options);\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.warn(error);\n\t\t});\n\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Set up html\n\t * @param {object} options - options from story config file\n\t */\n\tasync setUpHTML(options) {\n\t\tconst { checkboxContent } = options.config.info;\n\t\tconst checkboxBlock = document.getElementsByClassName('checkboxes-block')[0];\n\n\t\tcheckboxContent.forEach(checkboxInfo => {\n\t\t\tconst { id, label, onChange } = checkboxInfo;\n\n\t\t\t// Create label element\n\t\t\tconst labelElement = document.createElement('label');\n\t\t\tlabelElement.classList.add('cb-container');\n\t\t\tlabelElement.classList.add('clickable');\n\n\t\t\t// Create checkbox element\n\t\t\tconst checkbox = document.createElement('input');\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tcheckbox.checked = true; // Set default checked state\n\t\t\tcheckbox.id = `${id}-checkbox`;\n\n\t\t\t// Create span for custom checkmark\n\t\t\tconst span = document.createElement('span');\n\t\t\tspan.classList.add('checkmark');\n\n\t\t\t// Append elements\n\t\t\tlabelElement.appendChild(document.createTextNode(label));\n\t\t\tlabelElement.appendChild(checkbox);\n\t\t\tlabelElement.appendChild(span);\n\t\t\tcheckboxBlock.appendChild(labelElement);\n\n\t\t\t// Listen to the \"change\" event\n\t\t\tcheckbox.addEventListener('change', e => {\n\t\t\t\tonChange(e, this._app);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Set checked or not\n\t * @param {*} checkboxId\n\t * @param {*} checked\n\t */\n\tsetChecked(checkboxId, checked) {\n\t\tconst checkbox = document.getElementById(`${checkboxId}-checkbox`);\n\t\tif (checkbox) {\n\t\t\tcheckbox.checked = checked;\n\t\t}\n\t}\n}\n\nCheckboxBlock.html = html;\n","import {\n\tBaseApp,\n\tStoryBaseContentBlock\n} from '../../../../internal';\nimport html from './description_block.html';\nimport './description_block.css';\n\n/**\n * Block for description.\n */\nexport class DescriptionBlock extends StoryBaseContentBlock {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, {\n\t\t\thasMore: false,\n\t\t\tisMoreVisible: false,\n\t\t\t...options\n\t\t});\n\n\t\tthis._class.hasMoreClass = {\n\t\t\ttrue: '',\n\t\t\tfalse: 'hidden'\n\t\t};\n\n\t\tthis._more = {\n\t\t\tisVisible: {\n\t\t\t\tmoreMessage: 'Show Less',\n\t\t\t\tmoreIcon: 'icon-minus',\n\t\t\t\tmoreClass: ''\n\t\t\t},\n\t\t\tisHidden: {\n\t\t\t\tmoreMessage: 'Show More',\n\t\t\t\tmoreIcon: 'icon-plus',\n\t\t\t\tmoreClass: 'hidden'\n\t\t\t}\n\t\t};\n\n\t\tObject.assign(this._state, this._more.isHidden, {\n\t\t\thasMoreClass: this._class.hasMoreClass[this._state.hasMore]\n\t\t});\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\tconst hasMore = Boolean(this._config.info.more);\n\t\tthis.setState({\n\t\t\thasMore,\n\t\t\thasMoreClass: this._class.hasMoreClass[hasMore]\n\t\t});\n\t}\n\n\t/**\n\t * Show more block.\n\t */\n\tshowMore() {\n\t\tthis.setState({\n\t\t\tisMoreVisible: true,\n\t\t\t...this._more.isVisible\n\t\t});\n\t}\n\n\t/**\n\t * Hide more block.\n\t */\n\thideMore() {\n\t\tthis.setState({\n\t\t\tisMoreVisible: false,\n\t\t\t...this._more.isHidden\n\t\t});\n\t}\n\n\t/**\n\t * Show/hide more block.\n\t */\n\ttoggleMore() {\n\t\tif (this._state.isMoreVisible) {\n\t\t\tthis.hideMore();\n\t\t}\n\t\telse {\n\t\t\tthis.showMore();\n\t\t}\n\t}\n}\n\nDescriptionBlock.html = html;\n","import {\n\tBaseApp,\n\tStoryBaseContentBlock\n} from '../../../../internal';\nimport html from './hint_block.html';\nimport './hint_block.css';\n\n/**\n * Block for description.\n */\nexport class HintBlock extends StoryBaseContentBlock {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, {\n\t\t\ticonBefore: 'icon-greater',\n\t\t\ticonAfter: 'icon-greater',\n\t\t\t...options\n\t\t});\n\n\t\tObject.assign(this._state, {\n\t\t\ttext: this._config.info.text || 'Scroll to continue',\n\t\t\tisIconBeforeVisibleClass: this._class.isVisible[this._config.info.iconBeforeText || false],\n\t\t\tisIconAfterVisibleClass: this._class.isVisible[this._config.info.iconAfterText || false]\n\t\t});\n\t}\n}\n\nHintBlock.html = html;\n","import {\n\tStoryBaseContentBlock\n} from '../../../../internal';\nimport html from './image_block.html';\nimport './image_block.css';\n\n/**\n * Block for description.\n */\nexport class ImageBlock extends StoryBaseContentBlock {\n\t/**\n\t * Called on clicking block.\n\t * Expand the thumbnail to fullscreen.\n\t * @override\n\t */\n\tonClick() {\n\t\t// Set overlay's content to image\n\t\tconst image = this._element.cloneNode(true);\n\t\timage.classList.add('fullscreen');\n\t\timage.classList.remove('clickable');\n\n\t\tthis._app.getComponent('overlay').setContent(image);\n\t\tthis._app.getComponent('overlay').show();\n\t}\n}\n\nImageBlock.html = html;\n","import {\n\tStoryBaseContentBlock\n} from '../../../../internal';\nimport html from './replay_button_block.html';\nimport './replay_button_block.css';\n\n/**\n * Block for button.\n */\nexport class ReplayButtonBlock extends StoryBaseContentBlock {\n\t/** @inheritdoc */\n\tinit() {\n\t\tif (!this._config.info.text) {\n\t\t\tthis._config.info.text = this._config.info.fromStart ? 'Restart Story' : 'Replay Animation';\n\t\t}\n\t\tsuper.init(this._config.info);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync onClick() {\n\t\tconst router = this._app.getManager('router');\n\t\tif (this._config.info.fromStart) {\n\t\t\t// Replay from start\n\t\t\trouter.navigate(router.currentRoute.url);\n\t\t}\n\t\telse {\n\t\t\t// Replay current slide\n\t\t\trouter.reload();\n\t\t}\n\t}\n};\n\nReplayButtonBlock.html = html;\n","import {\n\tBaseApp,\n\tBaseComponent\n} from '../../../../internal';\nimport './story_base_content_block.css';\n\n/**\n * A base class for a block of content.\n */\nexport class StoryBaseContentBlock extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={config:{info:{}}}]\n\t */\n\tconstructor(app, options = { config: { info: {} } }) {\n\t\toptions.isVisible = true;\n\t\tsuper(app, null, options);\n\n\t\tif (this._config.info.onEnter) {\n\t\t\tthis.onEnter = async () => await this._config.info.onEnter(app, this);\n\t\t}\n\n\t\tif (this._config.info.onLeave) {\n\t\t\tthis.onLeave = async () => await this._config.info.onLeave(app, this);\n\t\t}\n\n\t\tthis.bindFunctions(['onEnter', 'onLeave', 'onClick']);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init(this._config.info);\n\t\tthis._element.classList.add('content-block', '{{isVisibleClass}}');\n\t\tif (Array.isArray(this._config.info.classList)) {\n\t\t\tthis._element.classList.add(...this._config.info.classList);\n\t\t}\n\t\tthis._setVariables(this._element, false);\n\n\t\tif (this._config.info.clickable || this._config.info.func) {\n\t\t\tthis._element.classList.add('clickable');\n\t\t\tthis._element.addEventListener('click', this.onClick);\n\t\t}\n\t}\n\n\t/**\n\t * Called on entering the slide containing block.\n\t * @returns {Promise}\n\t */\n\tasync onEnter() {\n\t}\n\n\t/**\n\t * Called on leaving the slide containing block.\n\t * @returns {Promise}\n\t */\n\tasync onLeave() {\n\t}\n\n\t/**\n\t * Called on clicking block.\n\t * @returns {Promise}\n\t */\n\tasync onClick() {\n\t\tconst { type } = this._config.info;\n\t\t// Buttons get custom onClick functions passed in\n\t\tif (type !== 'buttons') {\n\t\t\tawait this._config.info.func(this._app, this);\n\t\t}\n\t}\n}\n","import {\n\tStoryBaseContentBlock\n} from '../../../../internal';\nimport html from './title_block.html';\n\n/**\n * Block for description.\n */\nexport class TitleBlock extends StoryBaseContentBlock {\n}\n\nTitleBlock.html = html;\n","import {\n\tBaseApp,\n\tStoryBaseContentBlock\n} from '../../../../internal';\nimport html from './toggle_block.html';\nimport './toggle_block.css';\n\n/**\n * Block for description.\n */\nexport class ToggleBlock extends StoryBaseContentBlock {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app, {\n\t\t\tisSelected: false,\n\t\t\t...options\n\t\t});\n\n\t\tthis._class.isSelectedClass = {\n\t\t\ttrue: 'selected',\n\t\t\tfalse: ''\n\t\t};\n\n\t\t// Make sure this is a boolean value\n\t\tthis._config.info.selected = Boolean(this._config.info.selected);\n\n\t\tObject.assign(this._state, {\n\t\t\tisSelectedClass: this._class.isSelectedClass[this._state.isSelected]\n\t\t});\n\t}\n\n\t/**\n\t * Called on entering the slide containing block.\n\t * @returns {Promise}\n\t */\n\tasync onEnter() {\n\t\tawait super.onEnter();\n\t\tif (this._config.info.selected !== this._state.isSelected) {\n\t\t\tawait this.onClick();\n\t\t}\n\t}\n\n\t/**\n\t * Called on leaving the slide containing block.\n\t * @returns {Promise}\n\t */\n\tasync onLeave() {\n\t\tawait super.onLeave();\n\t\tif (this._state.isSelected) {\n\t\t\tawait this.onClick();\n\t\t}\n\t}\n\n\t/**\n\t * Called on clicking block.\n\t * @returns {Promise}\n\t */\n\tasync onClick() {\n\t\tawait super.onClick();\n\t\tif (this._state.isSelected) {\n\t\t\tthis.unselect();\n\t\t\tconsole.log('unselect');\n\t\t}\n\t\telse {\n\t\t\tthis.select();\n\t\t\tconsole.log('select');\n\t\t}\n\t}\n\n\t/**\n\t * Select button.\n\t */\n\tselect() {\n\t\tthis.setState({\n\t\t\tisSelected: true,\n\t\t\tisSelectedClass: this._class.isSelectedClass.true\n\t\t});\n\t}\n\n\t/**\n\t * Unselect button.\n\t */\n\tunselect() {\n\t\tthis.setState({\n\t\t\tisSelected: false,\n\t\t\tisSelectedClass: this._class.isSelectedClass.false\n\t\t});\n\t}\n}\n\nToggleBlock.html = html;\n","import {\n\tAppUtils,\n\tCancelToken,\n\tBaseApp,\n\tCarousel,\n\tDescriptionBlock,\n\tTitleBlock,\n\tImageBlock,\n\tToggleBlock,\n\tHintBlock,\n\tReplayButtonBlock,\n\tButtonsBlock,\n\tCheckboxBlock\n} from '../../internal';\nimport './story.css';\n\n/**\n * Story component.\n * @class\n * @extends Carousel\n */\nexport class Story extends Carousel {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app, null, {\n\t\t\tisCloseButtonVisible: true,\n\t\t\tcloseButtonText: 'Close',\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Story ID.\n\t\t * @type {string}\n\t\t */\n\t\tthis._id = '';\n\n\t\t/**\n\t\t * Story info, containing all slides in story.\n\t\t * @type {Array}\n\t\t */\n\t\tthis._info = [];\n\n\t\tthis._blocks = {};\n\n\t\tthis._config.navigationButtons.next.text = AppUtils.isPrimaryTouch()\n\t\t\t? 'Swipe to continue'\n\t\t\t: 'Scroll to continue';\n\n\t\t/**\n\t\t * Function to call on changing slide via button or scroll.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onSlideChange = async (index, includeTime = false) => {\n\t\t\tconst query = {\n\t\t\t\tslide: this._children.slides[index].dataset.id\n\t\t\t};\n\t\t\t// Include the time so when we go back in time\n\t\t\t// we start at the end of the phase instead of start\n\t\t\tif (includeTime) {\n\t\t\t\tquery.time = this._app.getManager('time').getTimeUrl();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tquery.__remove = ['time'];\n\t\t\t}\n\n\t\t\tconst router = this._app.getManager('router');\n\t\t\tconst currentRoute = router.currentRoute;\n\t\t\tawait router.navigate(query, currentRoute.url);\n\t\t};\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\t// Set close button aria-label.\n\t\tconst closeBtn = this._element.querySelector('.close-button');\n\t\tcloseBtn?.setAttribute('aria-label', 'Close story');\n\n\t\tthis._setVariables(this._children.carousel, false);\n\t}\n\n\t/**\n\t * Set aria label depending on isCollapsed state.\n\t */\n\t_setExpandToggleAriaLabel() {\n\t\tconst toggleBtns = this._element.querySelectorAll('.mobile-collapse');\n\t\tconst labelText = this._state.isCollapsed ? 'Collapse story panel' : 'Expand story panel';\n\n\t\ttoggleBtns.forEach(el => el.setAttribute('aria-label', labelText));\n\t}\n\n\t/**\n\t * Overriding toggleCollapse method to update aria label\n\t * @override\n\t */\n\t_toggleCollapse() {\n\t\tthis._setExpandToggleAriaLabel();\n\n\t\tsuper._toggleCollapse();\n\t}\n\n\t/**\n\t * Update story on route change.\n\t * @param {object} storyInfo\n\t * @param {object} [params={}] - Route parameters\n\t * @param {CancelToken} params.cancelToken\n\t * @param {string} params.slide - Slide ID\n\t * @param {string} params.id - Story ID\n\t */\n\tasync onRouteChange(storyInfo, { cancelToken, slide, id } = {}) {\n\t\t// Check if route was canceled\n\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.clear();\n\t\tthis._info = storyInfo;\n\t\tthis._id = id;\n\n\t\t// Hide navigation UI in locked mode\n\t\tif (this._app.getManager('router').configs.locked) {\n\t\t\tconst isCloseButtonVisible = false;\n\t\t\tthis.setState({\n\t\t\t\tisCloseButtonVisible,\n\t\t\t\tisCloseButtonVisibleClass: this._class.isVisible[isCloseButtonVisible]\n\t\t\t});\n\t\t}\n\n\t\t// Set up story UI\n\t\tawait this.setUp();\n\n\t\t// Set expand toggle aria labels.\n\t\tthis._setExpandToggleAriaLabel();\n\n\t\t// Find slide index using id, or default to first slide\n\t\tconst index = slide\n\t\t\t? this._children.slides.findIndex(x => x.dataset.id === slide) || 0\n\t\t\t: 0;\n\n\t\t// Update time rate\n\t\tif (storyInfo[index]?.rate !== undefined) {\n\t\t\tthis._app.getManager('time').setTimeRate(storyInfo[index].rate);\n\t\t}\n\n\t\t// Go to slide\n\t\tawait this.goToSlide(index);\n\t}\n\n\t/**\n\t * Execute actions on query change.\n\t * @param {object} params\n\t * @param {object} params.cancelToken\n\t * @param {string} params.slide\n\t */\n\tasync onQueryChange({ cancelToken, slide } = {}) {\n\t\t// Check if route was canceled\n\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find slide index using id, or default to first slide\n\t\tconst index = slide\n\t\t\t? this._children.slides.findIndex(x => x.dataset.id === slide) || 0\n\t\t\t: 0;\n\n\t\t// Update time rate\n\t\tif (this._info[index]?.rate !== undefined) {\n\t\t\tthis._app.getManager('time').setTimeRate(this._info[index].rate);\n\t\t}\n\n\t\t// Go to slide\n\t\tawait this.goToSlide(index);\n\t}\n\n\t/**\n\t * Create content element for a block.\n\t * @param {object} blockInfo\n\t * @param {number} slideIndex\n\t * @returns {HTMLElement}\n\t */\n\tasync createBlockContent(blockInfo, slideIndex) {\n\t\tconst { hideExternalLinks } = this.app.getManager('router').configs;\n\n\t\tlet block;\n\n\t\tswitch (blockInfo.type) {\n\t\t\tcase 'title': {\n\t\t\t\tconst storyBlockInfo = { ...blockInfo };\n\t\t\t\tstoryBlockInfo.title = hideExternalLinks === true ? this.app.getManager('content').hideExternalLinksInText(storyBlockInfo.title) : storyBlockInfo.title;\n\t\t\t\tblock = new TitleBlock(this._app, { config: { info: storyBlockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'description': {\n\t\t\t\tconst storyBlockInfo = { ...blockInfo };\n\t\t\t\tstoryBlockInfo.description = hideExternalLinks === true ? this.app.getManager('content').hideExternalLinksInText(storyBlockInfo.description) : storyBlockInfo.description;\n\t\t\t\tblock = new DescriptionBlock(this._app, { config: { info: storyBlockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'image':\n\t\t\tcase 'diagram': {\n\t\t\t\tblock = new ImageBlock(this._app, { config: { info: blockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'toggle': {\n\t\t\t\tblock = new ToggleBlock(this._app, { config: { info: blockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'hint': {\n\t\t\t\tblock = new HintBlock(this._app, { config: { info: blockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'replay': {\n\t\t\t\tblock = new ReplayButtonBlock(this._app, { config: { info: blockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'buttons': {\n\t\t\t\tblock = new ButtonsBlock(this._app, { config: { info: blockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'checkboxes': {\n\t\t\t\tblock = new CheckboxBlock(this._app, { config: { info: blockInfo } });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tawait block.init();\n\t\tthis._onEnter[slideIndex].push(block.onEnter);\n\t\tthis._onLeave[slideIndex].push(block.onLeave);\n\t\tthis._blocks[blockInfo.type] = block;\n\t\treturn block.element;\n\t}\n\n\t/**\n\t * Get block\n\t * @param {string} blockType\n\t * @returns {any} block\n\t */\n\tgetStoryBlock(blockType) {\n\t\treturn this._blocks[blockType] || console.warn(`Block ${blockType} is not available`);\n\t}\n\n\t/**\n\t * Create content element for a slide.\n\t * @param {object} slide\n\t * @param {number} index\n\t * @returns {HTMLElement}\n\t */\n\tasync createSlideContent(slide, index) {\n\t\tif (slide.htmlFile) {\n\t\t\t// TODO: Load html from a file\n\t\t}\n\t\telse {\n\t\t\tconst content = document.createDocumentFragment();\n\n\t\t\tfor (let i = 0; i < slide.content.length; i++) {\n\t\t\t\tconst blockInfo = slide.content[i];\n\t\t\t\tconst block = await this.createBlockContent(blockInfo, index);\n\t\t\t\tif (block) {\n\t\t\t\t\tcontent.appendChild(block);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn content;\n\t\t}\n\t}\n\n\t/**\n\t * Set up story UI with story info.\n\t */\n\tasync setUp() {\n\t\tfor (let i = 0; i < this._info.length; i++) {\n\t\t\tconst { id, type, classList = [], onEnter, onLeave } = this._info[i];\n\t\t\tthis._onEnter[i] = [];\n\t\t\tthis._onLeave[i] = [];\n\n\t\t\tif (onEnter) {\n\t\t\t\tthis._onEnter[i].push(() => onEnter(this._app, this));\n\t\t\t}\n\t\t\tconst content = await this.createSlideContent(this._info[i], i);\n\t\t\tclassList.push('grid-layout', 'simple-grid');\n\n\t\t\tif (onLeave) {\n\t\t\t\tthis._onLeave[i].push(() => onLeave(this._app, this));\n\t\t\t}\n\n\t\t\tthis.addSlide({\n\t\t\t\tid,\n\t\t\t\ttype,\n\t\t\t\tclassList,\n\t\t\t\tcontent\n\t\t\t},\n\t\t\t{\n\t\t\t\tisFirst: i === 0,\n\t\t\t\tisLast: i === this._info.length - 1\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Close carousel.\n\t * @override\n\t */\n\tclose() {\n\t\tconst router = this._app.getManager('router');\n\t\trouter.navigate(router.homeRoute);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync onLeave(index) {\n\t\tawait super.onLeave(index);\n\n\t\t// Reset on leaving story\n\t\tif (!(typeof index === 'number')) {\n\t\t\tconst router = this._app.getManager('router');\n\t\t\trouter.removeQuery(['slide']);\n\t\t}\n\t}\n\n\t/**\n\t * Update tooltip props.\n\t */\n\t_updateTooltipsProps() {\n\t\tconst { slideType } = this._state;\n\n\t\tconst style = getComputedStyle(document.body);\n\t\tconst offsetHeight = -(parseFloat(style.getPropertyValue('--gridHeaderHeight')) + 20);\n\n\t\tif (this._progressTooltip !== null) {\n\t\t\tthis._progressTooltip.setProps({\n\t\t\t\toffset: slideType === 'overlay'\n\t\t\t\t\t? [0, offsetHeight]\n\t\t\t\t\t: [0, 10]\n\t\t\t});\n\t\t}\n\t}\n}\n","import TimeController from './time_controller.js';\nimport 'tippy.js/dist/tippy.css';\nimport './time_controller.css';\n\nexport default TimeController;\n","import tippy, { followCursor } from 'tippy.js';\nimport {\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './time_controller.html';\n\n/**\n * @inheritdoc\n * @extends BaseComponent\n * TODO: This is only used by Mars2020 app. Discuss what to do.\n */\nclass TimeController extends BaseComponent {\n\t/**\n\t * @inheritdoc\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app, null, {\n\t\t\tisPlay: false,\n\t\t\tplayClass: '',\n\t\t\trate: 0,\n\t\t\trateDisplay: 0\n\t\t});\n\n\t\tthis._class.fontSize.small = 'tiny';\n\t\tthis._class.isPlay = {\n\t\t\ttrue: 'icon-pause',\n\t\t\tfalse: 'icon-play'\n\t\t};\n\n\t\t/**\n\t\t * List of allowed rates.\n\t\t * @type {Array}\n\t\t */\n\t\tthis._rates = [\n\t\t\t-94608000, // 3 years\n\t\t\t-31536000, // 1 year\n\t\t\t-6048000, // 10 weeks\n\t\t\t-604800, // 1 week\n\t\t\t-86400, // 1 day\n\t\t\t-36000, // 10 hours\n\t\t\t-3600, // 1 hour\n\t\t\t-600, // 10 mins\n\t\t\t-60,\n\t\t\t-10,\n\t\t\t-1,\n\t\t\t0,\n\t\t\t1,\n\t\t\t10,\n\t\t\t60,\n\t\t\t600,\n\t\t\t3600,\n\t\t\t36000,\n\t\t\t86400,\n\t\t\t604800,\n\t\t\t6048000,\n\t\t\t31536000,\n\t\t\t94608000\n\t\t];\n\n\t\tthis._manager = this._app.getManager('time');\n\t\tthis._router = this._app.getManager('router');\n\t\tthis._manager.setDefaultTimeRate(1);\n\n\t\tconst rate = this._manager.getTimeRate();\n\t\tconst isPlay = rate !== 0;\n\n\t\tthis.setState({\n\t\t\tisPlay,\n\t\t\tplayClass: this._class.isPlay[isPlay],\n\t\t\trate,\n\t\t\trateDisplay: this.getRateDisplay()\n\t\t});\n\n\t\tthis.bindFunctions([\n\t\t\t'getRateLimits',\n\t\t\t'setRateLimits',\n\t\t\t'setRate',\n\t\t\t'setDefaultRate',\n\t\t\t'setRealRate',\n\t\t\t'decreaseRate',\n\t\t\t'increaseRate',\n\t\t\t'togglePlayPause',\n\t\t\t'onRateChange',\n\t\t\t'onForcedPause',\n\t\t\t'onForcedPauseResume'\n\t\t]);\n\t}\n\n\t/** @inheritdoc */\n\tinit() {\n\t\tsuper.init();\n\n\t\t/**\n\t\t * Set default tippy props\n\t\t * See docs: https://atomiks.github.io/tippyjs/v6/methods/\n\t\t */\n\t\ttippy.setDefaultProps({\n\t\t\ttheme: 'default',\n\t\t\ttouch: ['hold', 2000],\n\t\t\tdelay: [600, null],\n\t\t\tplugins: [followCursor]\n\t\t});\n\t\ttippy(this._children.toggleBtn, { placement: 'top' });\n\t\ttippy(this._children.increaseBtn, { placement: 'top' });\n\t\ttippy(this._children.decreaseBtn, { placement: 'top' });\n\n\t\tthis._children.decreaseContainer.classList.add('bg-color', 'gray', 'dark');\n\t\tthis._children.increaseContainer.classList.add('bg-color', 'gray', 'dark');\n\t\tthis._children.label.classList.add('semi');\n\t\tthis._children.rateDisplay.classList.add('semi');\n\n\t\tthis._callbackRegistry.push({\n\t\t\temitter: this._app.getManager('time'),\n\t\t\tevent: 'ratechange',\n\t\t\tcallback: this.onRateChange\n\t\t});\n\t}\n\n\t/**\n\t * Get available time rates.\n\t * @returns {Array<number>}\n\t */\n\tgetRateLimits() {\n\t\treturn this._rates;\n\t}\n\n\t/**\n\t * Set available time rates;\n\t * @param {Array<number>} rates\n\t */\n\tsetRateLimits(rates) {\n\t\tthis._rates = rates;\n\t}\n\n\t/**\n\t * Navigate to url with rate.\n\t * @param {number} rate\n\t */\n\tsetRate(rate) {\n\t\tthis._router.navigate({\n\t\t\ttime: this._manager.getTimeUrl(),\n\t\t\trate\n\t\t}, this._router.currentRoute.url);\n\t}\n\n\t/**\n\t * Decrease time rate to previous in available rates list.\n\t */\n\tdecreaseRate() {\n\t\t// List is empty\n\t\tif (this._rates.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = this._rates.indexOf(this._manager.getTimeRate());\n\t\t// Already at lower bound\n\t\tif (index === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setRate(this._rates[index - 1]);\n\t}\n\n\t/**\n\t * Increase time rate to next in available rates list.\n\t */\n\tincreaseRate() {\n\t\t// List is empty\n\t\tif (this._rates.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = this._rates.indexOf(this._manager.getTimeRate());\n\t\t// Already at upper bound\n\t\tif (index === this._rates.length - 1) {\n\t\t\treturn;\n\t\t}\n\t\tthis.setRate(this._rates[index + 1]);\n\t}\n\n\t/**\n\t * Toggle time play/pause.\n\t */\n\ttogglePlayPause() {\n\t\tconst isPlay = !this._state.isPlay;\n\t\tif (isPlay) {\n\t\t\tthis._manager.play();\n\t\t}\n\t\telse {\n\t\t\tthis._manager.pause();\n\t\t}\n\t\tthis.setRate(this._manager.getTimeRate());\n\t}\n\n\t/**\n\t * Set rate to default rate.\n\t */\n\tsetDefaultRate() {\n\t\tthis.setRate(this._manager.getDefaultTimeRate());\n\t}\n\n\t/**\n\t * Set rate to real rate.\n\t */\n\tsetRealRate() {\n\t\tthis.setRate(1);\n\t}\n\n\t/**\n\t * Update UI on rate change.\n\t */\n\tonRateChange() {\n\t\tconst rate = this._manager.getTimeRate();\n\t\tconst isPlay = rate !== 0;\n\n\t\t// No state change\n\t\tif (isPlay === this._state.isPlay && this._state.rate === rate) {\n\t\t\treturn;\n\t\t}\n\t\t// Enforce rate inside list\n\t\tif (this._rates.length > 0) {\n\t\t\tif (!this._rates.includes(rate)) {\n\t\t\t\tthis.setRate(this._manager.getDefaultTimeRate());\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tisPlay,\n\t\t\trate,\n\t\t\tplayClass: this._class.isPlay[isPlay],\n\t\t\trateDisplay: this.getRateDisplay(rate)\n\t\t});\n\t}\n\n\t/**\n\t * Update time rate on forced pause.\n\t */\n\tonForcedPause() {\n\t\tthis.setRate(0);\n\t}\n\n\t/**\n\t * Update time rate on forced pause resume.\n\t */\n\tonForcedPauseResume() {\n\t\tthis.setDefaultRate();\n\t}\n\n\t/**\n\t * Get info for time rate.\n\t * @param {number|null} rate\n\t * @returns {object} Rate and unit (per sec). E.g. `{ rate: 1, unit: ' sec' }`, `{ rate: 1, unit: ' min' }`\n\t */\n\tgetRateUnit(rate = null) {\n\t\tif (rate === null) {\n\t\t\trate = this._manager.getTimeRate();\n\t\t}\n\n\t\tconst yrs = rate / 31536000;\n\t\tconst months = rate / 2592000;\n\t\tconst weeks = rate / 604800;\n\t\tconst days = rate / 86400;\n\t\tconst hrs = rate / 3600;\n\t\tconst mins = rate / 60;\n\t\tlet unit = '';\n\n\t\t// Only get rate as whole number\n\t\tif ((yrs >= 1 || yrs <= -1) && yrs % 1 === 0) {\n\t\t\trate = yrs;\n\t\t\tunit = ' yr';\n\t\t}\n\t\telse if ((months >= 1 || months <= -1) && months % 1 === 0) {\n\t\t\trate = months;\n\t\t\tunit = ' mth';\n\t\t}\n\t\telse if ((weeks >= 1 || weeks <= -1) && weeks % 1 === 0) {\n\t\t\trate = weeks;\n\t\t\tunit = ' wk';\n\t\t}\n\t\telse if ((days >= 1 || days <= -1) && days % 1 === 0) {\n\t\t\trate = days;\n\t\t\tunit = ' day';\n\t\t}\n\t\telse if ((hrs >= 1 || hrs <= -1) && hrs % 1 === 0) {\n\t\t\trate = hrs;\n\t\t\tunit = ' hr';\n\t\t}\n\t\telse if ((mins >= 1 || mins <= -1) && mins % 1 === 0) {\n\t\t\trate = mins;\n\t\t\tunit = ' min';\n\t\t}\n\t\telse {\n\t\t\trate %= 60;\n\t\t\tunit = ' sec';\n\t\t}\n\n\t\treturn { rate, unit };\n\t}\n\n\t/**\n\t * Get text display for rate.\n\t * @param {number} input\n\t * @returns {string}\n\t */\n\tgetRateDisplay(input) {\n\t\tconst { rate, unit } = this.getRateUnit(input);\n\t\tif (rate !== 0) {\n\t\t\treturn rate + unit + '(s)/sec';\n\t\t}\n\t\telse {\n\t\t\treturn 'paused';\n\t\t}\n\t}\n}\n\nTimeController.html = html;\n\nexport default TimeController;\n","import {\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './toast.html';\nimport './toast.css';\n\n/**\n * Toast component.\n *\n * A toast is essentially an alert that appears on the screen for a short period of time.\n * Currently we can only display one toast at a time.\n * @extends BaseComponent\n */\nexport class Toast extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\t// Add state options\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\ticonClass: 'icon-locked',\n\t\t\ttoastContent: 'TOAST!',\n\t\t\thideDelay: 2000,\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * The hideTimeout is the timeout that will hide the toast.\n\t\t * @type {number|null}\n\t\t * @private\n\t\t */\n\t\tthis._hideTimeout = null;\n\t}\n\n\t/**\n\t * Sets the icon class\n\t * @param {string} iconClass\n\t */\n\tsetIcon(iconClass) {\n\t\tthis.setState({\n\t\t\ticonClass\n\t\t});\n\t}\n\n\t/**\n\t * Set the toast content\n\t * @param {string} content\n\t */\n\tsetContent(content) {\n\t\tthis.setState({\n\t\t\ttoastContent: content\n\t\t});\n\t}\n\n\t/** @override */\n\tshow() {\n\t\tsuper.show();\n\n\t\t// Set the hide timeout if we have a hide delay.\n\t\tconst { hideDelay } = this._state;\n\t\tif (hideDelay) {\n\t\t\tclearTimeout(this._hideTimeout);\n\n\t\t\tthis._hideTimeout = setTimeout(() => {\n\t\t\t\tthis.hide();\n\t\t\t}, hideDelay);\n\t\t}\n\t}\n\n\t/** @override */\n\thide() {\n\t\tsuper.hide();\n\t\t// Clear the hide timeout.\n\t\tclearTimeout(this._hideTimeout);\n\t}\n}\n\nToast.html = html;\n","import TutorialOverlay from './tutorial_overlay.js';\nimport './tutorial_overlay.css';\n\nexport default TutorialOverlay;\n","import Swiper, { Navigation, Keyboard, Mousewheel } from 'swiper';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/keyboard';\nimport 'swiper/css/mousewheel';\n\nimport {\n\tAppUtils,\n\tCancelToken,\n\tBaseApp,\n\tBaseComponent\n} from '../../internal';\nimport html from './tutorial_overlay.html';\n\nSwiper.use([Navigation, Keyboard, Mousewheel]);\n\nconst DISMISS_TEXT = {\n\tDEFAULT: 'OK, got it. Thanks!',\n\tLAST: \"OK, let's go!\"\n};\n\n/**\n * Tutorial overlay component.\n * @extends BaseComponent\n */\nclass TutorialOverlay extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\t/**\n\t\t * Swiper options\n\t\t */\n\t\toptions.config = {\n\t\t\tdirection: 'horizontal',\n\n\t\t\tspeed: 600,\n\n\t\t\tslidesPerView: 1,\n\t\t\tspaceBetween: 100,\n\t\t\tkeyboard: {\n\t\t\t\tenabled: true\n\t\t\t},\n\t\t\tmousewheel: {\n\t\t\t\tforceToAxis: true,\n\t\t\t\tthresholdDelta: 100\n\t\t\t},\n\n\t\t\t// Navigation arrows\n\t\t\tnavigation: {\n\t\t\t\tprevEl: '.tutorial-carousel-prev',\n\t\t\t\tnextEl: '.tutorial-carousel-next'\n\t\t\t},\n\n\t\t\t...options.config\n\t\t};\n\n\t\t// TODO: Make this more general for reuse, like allow changing footer text\n\t\tsuper(app, null, {\n\t\t\tisVisible: false,\n\t\t\tcarouselClass: 'tutorial-carousel',\n\t\t\tslideClass: '',\n\t\t\tdismissText: DISMISS_TEXT.DEFAULT,\n\t\t\t...options\n\t\t});\n\n\t\t/**\n\t\t * Define swiper prop\n\t\t */\n\t\tthis._swiper = null;\n\n\t\t/**\n\t\t * Array of tutorial data\n\t\t */\n\t\tthis._allTutorials = null;\n\n\t\t/**\n\t\t * Array of measurements for targeted elements\n\t\t */\n\t\tthis._elementMeasures = null;\n\n\t\t/**\n\t\t * Define startIndex\n\t\t */\n\t\tthis._currIndex = null;\n\n\t\t/**\n\t\t * Define slide viewed timeout\n\t\t */\n\t\tthis._slideViewedTimeout = null;\n\n\t\t/**\n\t\t * For some reason, it takes some extra time for some elements to be measureed as in the correct position.\n\t\t * Setting a timeout before initialization fixes this (badly) but it is cleared on exit (query undefined).\n\t\t */\n\t\tthis._initTimeout = null;\n\n\t\t/**\n\t\t * Class name props\n\t\t */\n\t\tthis._bulletClass = 'swiper-pagination-bullet';\n\t\tthis._activeBulletClass = 'swiper-pagination-bullet-active';\n\t\tthis._swiperSlideClass = 'swiper-slide';\n\n\t\t/**\n\t\t * Local storage item name\n\t\t */\n\t\tthis._storageName = 'EoA_Tutorials';\n\t}\n\n\t/**\n\t * Sets the all tutorials prop, and create carousel slides\n\t * @param {Array} tutorials\n\t */\n\tsetTutorials(tutorials) {\n\t\tthis._allTutorials = tutorials;\n\n\t\tthis._createSlides();\n\t}\n\n\t/**\n\t * Return tutorials list after hiding tutorial slides in slideshow\n\t * @param {string} slideId\n\t * @returns {Array<TutorialOverlay>}\n\t */\n\thideTutorialSlide(slideId) {\n\t\tconst { tutorials } = this.app;\n\t\treturn tutorials.filter(({ id }) => id !== slideId);\n\t}\n\n\t/**\n\t * Add slide change to update active bullet (as we're not using the built-in swiper bullets...cant remember why).\n\t * Also allowing clicking to navigate to definition if data-def attr including in clickable links in tutorials.json.\n\t */\n\t_addEvents() {\n\t\tthis._swiper.on('slideChange', ({ realIndex }) => {\n\t\t\t// Update the highlighted element.\n\t\t\tthis._setHighlightedElement(realIndex);\n\n\t\t\t// Update the active bullet\n\t\t\tthis._setActiveBullet(realIndex);\n\n\t\t\t// Update the URL if necessary.\n\t\t\tif (this._currIndex !== realIndex) {\n\t\t\t\tthis.navigateToTutorial(realIndex);\n\t\t\t}\n\n\t\t\t// Set the dismisss text and slideClass states.\n\t\t\tconst { id: slideName } = this._allTutorials[realIndex] || {};\n\t\t\tconst lastSlide = realIndex === this._allTutorials.length - 1;\n\t\t\tconst slideClass = slideName ? `tutorial-slide-${slideName}` : '';\n\n\t\t\tthis.setState({\n\t\t\t\tdismissText: lastSlide ? DISMISS_TEXT.LAST : DISMISS_TEXT.DEFAULT,\n\t\t\t\tslideClass\n\t\t\t});\n\t\t});\n\n\t\t// Click event to handle definition overlays\n\t\tthis._children.swiperSlides.addEventListener('click', event => {\n\t\t\tconst definition = event?.target?.dataset?.def;\n\t\t\tif (definition) {\n\t\t\t\tthis._app.getComponent('definitionOverlay').navigateToDefinition(definition);\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/**\n\t * Use the tutorial data to build the swiper slides\n\t */\n\t_createSlides() {\n\t\tconst { isTouch } = this._app;\n\n\t\tthis._allTutorials.forEach(({ id, title, description, extra }) => {\n\t\t\tconst slideElements = [];\n\n\t\t\tif (title) {\n\t\t\t\tconst titleEl = document.createElement('h2');\n\t\t\t\ttitleEl.innerHTML = title;\n\t\t\t\tslideElements.push(titleEl);\n\t\t\t}\n\n\t\t\tif (description) {\n\t\t\t\t// Assumes only touch and desktop keys.\n\t\t\t\tconst html = typeof description === 'object' ?\n\t\t\t\t\t(isTouch ? description.touch : description.desktop) :\n\t\t\t\t\tdescription;\n\n\t\t\t\t// Make sure we have HTML to apply.\n\t\t\t\tif (typeof html === 'string') {\n\t\t\t\t\tconst descriptionEl = document.createElement('p');\n\t\t\t\t\tdescriptionEl.innerHTML = html;\n\t\t\t\t\tslideElements.push(descriptionEl);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extra) {\n\t\t\t\t// Assumes only touch and desktop keys.\n\t\t\t\tconst html = typeof extra === 'object' ?\n\t\t\t\t\t(isTouch ? extra.touch : extra.desktop) :\n\t\t\t\t\textra;\n\n\t\t\t\t// Make sure we have HTML to apply.\n\t\t\t\tif (typeof html === 'string') {\n\t\t\t\t\tconst extraEl = document.createElement('div');\n\t\t\t\t\textraEl.className = 'tutorial-extra';\n\t\t\t\t\textraEl.innerHTML = html;\n\t\t\t\t\tslideElements.push(extraEl);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst slideClass = `${this._swiperSlideClass} tutorial-slide-${id}`;\n\n\t\t\tslideElements.length && this._addSlide(slideElements, slideClass);\n\t\t});\n\t}\n\n\t/**\n\t * Add an array of elements as a slide to the carousel\n\t * @param {Array<HTMLElement>} elements\n\t * @param {string} slideClass\n\t */\n\t_addSlide(elements = [], slideClass) {\n\t\t// Create element.\n\t\tconst slideEl = document.createElement('div');\n\n\t\tslideEl.className = slideClass;\n\n\t\t// Add elements as children.\n\t\tslideEl.replaceChildren(...elements);\n\n\t\t// Append to swiper slides.\n\t\tthis._children.swiperSlides.append(slideEl);\n\t}\n\n\t/**\n\t * Create bullet pagination\n\t */\n\t_createBullets() {\n\t\tconst { bullets } = this._children;\n\t\tconst { slides } = this._swiper;\n\n\n\t\tconst allBullets = [...slides].map((slide, i) => {\n\t\t\tconst bullet = document.createElement('span');\n\t\t\tbullet.classList.add(this._bulletClass);\n\n\t\t\t// Add the click event\n\t\t\tbullet.addEventListener('click', e => this._swiper.slideTo(i));\n\n\t\t\treturn bullet;\n\t\t});\n\n\t\tbullets.replaceChildren(...allBullets);\n\t}\n\n\t/**\n\t * Makes sure all bullets are deactivated except the passed index\n\t * @param {number} activeIndex\n\t */\n\t_setActiveBullet(activeIndex = this._currIndex) {\n\t\tconst { bullets } = this._children;\n\n\t\tbullets.childNodes.forEach((bullet, i) => {\n\t\t\tbullet.classList.remove(this._activeBulletClass);\n\t\t\tif (i === activeIndex) {\n\t\t\t\tbullet.classList.add(this._activeBulletClass);\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/**\n\t * Unhighlights all targeted elements except passed index\n\t * @param {number} highlightIndex\n\t * @param {boolean} forceMeasure\n\t */\n\t_setHighlightedElement(highlightIndex = this._currIndex, forceMeasure = false) {\n\t\tconst calcMeasures = !this._elementMeasures || forceMeasure;\n\n\t\tif (calcMeasures) {\n\t\t\tthis._elementMeasures = this._calcElementMeasures();\n\t\t}\n\n\t\tconst measures = this._elementMeasures[highlightIndex];\n\t\tconst { mask } = this._allTutorials[highlightIndex];\n\n\t\tif (measures) {\n\t\t\t// Destructure vars.\n\t\t\tconst { xPos, yPos, relWidth, relHeight } = measures;\n\t\t\tconst { xSizeMult = 1, ySizeMult = 1 } = mask || {};\n\n\n\t\t\t// Calc size, range and pos values.\n\t\t\tconst sizeCoeff = 15; // Correlated to the black percent value in radial gradient css.\n\t\t\tconst sizeXaddition = relWidth * sizeCoeff * 100;\n\t\t\tconst sizeYaddition = relHeight * sizeCoeff * 100;\n\n\t\t\tconst xSize = (200 + sizeXaddition) * xSizeMult;\n\t\t\tconst ySize = (200 + sizeYaddition) * ySizeMult;\n\n\t\t\tconst xSizeValid = Math.max(200, xSize);\n\t\t\tconst ySizeValid = Math.max(200, ySize);\n\n\t\t\tconst rangeXcoeff = 100 / (xSizeValid - 100);\n\t\t\tconst rangeYcoeff = 100 / (ySizeValid - 100);\n\n\t\t\tconst relX = (0.5 - rangeXcoeff * 0.5) + xPos * rangeXcoeff;\n\t\t\tconst relY = (0.5 - rangeYcoeff * 0.5) + yPos * rangeYcoeff;\n\n\t\t\tconst percX = (relX * 100).toFixed(2);\n\t\t\tconst percY = (relY * 100).toFixed(2);\n\n\t\t\t// Set the CSS vars.\n\t\t\tthis._element.style.setProperty('--tutorial-mask-grad', 'radial-gradient(transparent, black 5%)');\n\t\t\tthis._element.style.setProperty('--tutorial-mask-pos', `${percX}% ${percY}%`);\n\t\t\tthis._element.style.setProperty('--tutorial-mask-size', `${xSizeValid}% ${ySizeValid}%`);\n\t\t}\n\t\telse {\n\t\t\tthis._element.style.setProperty('--tutorial-mask-grad', null);\n\t\t\tthis._element.style.setProperty('--tutorial-mask-pos', null);\n\t\t\tthis._element.style.setProperty('--tutorial-mask-size', null);\n\t\t}\n\n\t\t// Potential fallback if we test and find cases where masks dont work\n\t\t// this._targetElements.forEach((element, i) => {\n\t\t// \tif (element) {\n\t\t// \t\telement.style.zIndex = i === highlightIndex ? 1001 : null;\n\t\t// \t}\n\t\t// });\n\t}\n\n\n\t/**\n\t * Called when the url get params change. Wraps _updateDefinition\n\t * @param {object} params\n\t * @param {CancelToken} params.cancelToken\n\t * @param {string} params.tutorial\n\t */\n\tonQueryChange({ cancelToken, tutorial } = {}) {\n\t\t// Cancel slider viewed timeout no matter what.\n\t\tclearTimeout(this._slideViewedTimeout);\n\n\t\t// Should only show if we're on the home route. Return if we're not there.\n\t\tconst { currentRoute, homeRoute } = this.app.getManager('router');\n\t\tconst notHome = currentRoute.url !== homeRoute;\n\n\t\t// Check if route was canceled\n\t\tif (notHome || cancelToken?.isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newCurrIndex = this._getIndexByTutorialId(tutorial);\n\n\n\t\t// Return if we're already on the correct index.\n\t\tif (newCurrIndex === this._currIndex) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._currIndex = newCurrIndex;\n\n\t\t/**\n\t\t * Determine whether we:\n\t\t * 1) Try to slide to the current index (will only work if user directly changes url)\n\t\t * 2) Show / potentially initialize the swiper if it's not visible\n\t\t * 3) Hide the slider as there was no passed tutorialId\n\t\t */\n\t\tif (this._currIndex > -1) {\n\t\t\tif (this._state.isVisible) {\n\t\t\t\tthis._swiper.slideTo(this._currIndex);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t\tthis._setSlideViewedTimeout(newCurrIndex);\n\t\t}\n\t\telse {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Initialize the swiper carousel.\n\t */\n\t_initSwiper() {\n\t\tconst { carouselClass } = this._state;\n\n\t\tconst selector = `.${carouselClass} .swiper-wrapper > div`;\n\n\t\tAppUtils.elementReady(selector)\n\t\t\t.then(() => {\n\t\t\t\tthis._initTimeout = setTimeout(() => {\n\t\t\t\t\t// If there's already a swiper, update it and slide to first index.\n\t\t\t\t\tif (this._swiper) {\n\t\t\t\t\t\tthis._swiper.update();\n\t\t\t\t\t\tthis._swiper.slideTo(this._currIndex);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t// Otherwise, create it.\n\t\t\t\t\t\tthis._swiper = new Swiper(`.${carouselClass}`, this._config);\n\t\t\t\t\t\tthis._postSwiperInitFunction(this._swiper);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set active bullets and highlight target elements if slideTo doesnt trigger event (if index is 0)\n\t\t\t\t\tif (this._currIndex === 0) {\n\t\t\t\t\t\tthis._setActiveBullet();\n\t\t\t\t\t\tthis._setHighlightedElement();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show it now it's ready.\n\t\t\t\t\tsuper.show();\n\t\t\t\t}, 500);\n\t\t\t});\n\t}\n\n\t/**\n\t * Called after swiper is initialized.\n\t */\n\t_postSwiperInitFunction() {\n\t\t// Add event handler\n\t\tthis._addEvents();\n\n\t\t// Add bullets\n\t\tthis._createBullets();\n\n\t\t//  Slide to firstIndex.\n\t\tthis._swiper.slideTo(this._currIndex);\n\t}\n\n\t/**\n\t * Get the tutorial index by id\n\t * @param {string} tutorialId\n\t * @returns {number}\n\t */\n\t_getIndexByTutorialId(tutorialId) {\n\t\treturn this._allTutorials?.findIndex(({ id }) => id === tutorialId);\n\t}\n\n\t/**\n\t * Start a timer which, when reached, will record that this view has  been \"viewed\" in the localStorage\n\t * @param {boolean} viewIndex\n\t */\n\t_setSlideViewedTimeout(viewIndex) {\n\t\t/**\n\t\t * A slide is recorded as viewed after 3 seconds\n\t\t */\n\t\tthis._slideViewedTimeout = setTimeout(() => {\n\t\t\tconst viewedTutorials = localStorage?.getItem(this._storageName)?.split(',') || [];\n\n\t\t\t/**\n\t\t\t * Check if stored tutorial list contains the current view index.\n\t\t\t * If not, add it, sort it and store  it back to localStorage.\n\t\t\t */\n\t\t\tif (!viewedTutorials.includes(viewIndex.toString())) {\n\t\t\t\tviewedTutorials.push(viewIndex);\n\t\t\t\tviewedTutorials.sort();\n\t\t\t\tlocalStorage?.setItem(this._storageName, viewedTutorials);\n\t\t\t}\n\t\t}, 3000);\n\t}\n\n\t/**\n\t * Calculate the center points and size of the target elements, relative to the height and width of the body\n\t * @returns {Array}\n\t */\n\t_calcElementMeasures() {\n\t\tconst { clientWidth, clientHeight } = document.body;\n\n\t\treturn this._allTutorials.map(({ targetSelector }) => {\n\t\t\t// If parent is not null, it means it's visible in the DOM.\n\t\t\tconst elements = [...document.body.querySelectorAll(targetSelector)].filter(el => el.offsetParent !== null);\n\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst { left, width, top, height } = elements[0].getBoundingClientRect();\n\n\t\t\treturn {\n\t\t\t\txPos: 1 - ((left + (width * 0.5)) / clientWidth),\n\t\t\t\tyPos: 1 - ((top + (height * 0.5)) / clientHeight),\n\t\t\t\trelWidth: width / clientWidth,\n\t\t\t\trelHeight: height / clientHeight\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tshow() {\n\t\t// Make sure we display UI if it's hidden.\n\t\tconst layerManager = this._app.getManager('layer');\n\t\tif (!layerManager.getLayer('ui').visible) {\n\t\t\tlayerManager.toggleLayer('ui');\n\t\t}\n\n\t\tconst hasSwiperContent = this._children.swiperSlides?.childNodes?.length;\n\t\thasSwiperContent && this._initSwiper();\n\n\t\t// Remove external links from slide footer\n\t\tconst routeManager = this._app.getManager('router');\n\t\tif (routeManager.configs.hideExternalLinks === true) {\n\t\t\tconst smallprint = document.getElementsByClassName('tutorial-smallprint')[0].innerHTML;\n\t\t\tdocument.getElementsByClassName('tutorial-smallprint')[0].innerHTML = this._app.getManager('content').hideExternalLinksInText(smallprint);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\thide() {\n\t\t// Clear init timeout and reset currIndex\n\t\tclearTimeout(this._initTimeout);\n\t\tthis._currIndex = null;\n\n\t\tsuper.hide();\n\t}\n\n\t/**\n\t * Look at previous displayed tutorials in localStorage to determine whether to show and which index to prioritize.\n\t * @returns {boolean|null}\n\t */\n\tcalcPriorityIndex() {\n\t\tconst viewedTutorials = localStorage?.getItem(this._storageName)?.split(',') || [];\n\n\t\tconst remainingTutorials = this._allTutorials.filter((_, index) => !viewedTutorials.includes(index.toString()));\n\n\t\treturn remainingTutorials.length ? this._getIndexByTutorialId(remainingTutorials[0].id) : null;\n\t}\n\n\t/**\n\t * Update the router query.\n\t * @param {number} tutorialIndex\n\t * @param {boolean} goHome\n\t */\n\tnavigateToTutorial(tutorialIndex, goHome = false) {\n\t\tconst { homeRoute, currentRoute, navigate } = this.app.getManager('router');\n\n\t\tconst path = goHome ? homeRoute : (currentRoute.url ?? '');\n\t\tconst validIndex = typeof tutorialIndex === 'number' && tutorialIndex > -1 && tutorialIndex < this._allTutorials.length;\n\n\t\tif (validIndex) {\n\t\t\tconst { id: tutorial } = this._allTutorials[tutorialIndex];\n\t\t\tnavigate({ tutorial }, path);\n\t\t}\n\t}\n\n\t/**\n\t * Update the query to close the tutorial overlay.\n\t */\n\tclose() {\n\t\tthis.app.getManager('router').navigate({ __remove: ['tutorial'] });\n\t}\n\n\t/**\n\t * On resize we need to update our element measures and call _setHighlightedElement again\n\t */\n\tresize() {\n\t\tif (this._state.isVisible && this._currIndex !== null) {\n\t\t\tthis._setHighlightedElement(this._currIndex, true);\n\t\t}\n\t}\n}\n\nTutorialOverlay.html = html;\n\nexport default TutorialOverlay;\n","/**\n * Some default controls for the embed modal.\n * Should hypothetically apply to all apps dependent on Eyess\n * Defaults will be overridden (via deep merge) by the app-specific embed controls (see EotSS component info for example)\n */\nconst embedDefaultControls = [\n\t{\n\t\tgroupName: 'User Interface',\n\t\tisAdvanced: false,\n\t\titems: [\n\t\t\t{\n\t\t\t\tname: 'Show Detail Panel',\n\t\t\t\tdescription: 'Displays the detail panel for an entity on the left side of the screen',\n\t\t\t\tquery: 'detailPanel',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Show NASA logo',\n\t\t\t\tdescription: 'Displays the NASA logo in the top left corner',\n\t\t\t\tquery: 'logo',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Show Search',\n\t\t\t\tdescription: 'Determines whether the search bar is visible',\n\t\t\t\tquery: 'search',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Show Share Button',\n\t\t\t\tdescription: 'Determines whether the share button is visible',\n\t\t\t\tquery: 'shareButton',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Show Main Menu',\n\t\t\t\tdescription: 'Determines whether the main menu is visible in the top right',\n\t\t\t\tquery: 'menu',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Show Expanded Settings Bar',\n\t\t\t\tdescription: 'Determines whether the settings bar is expanded upon first load',\n\t\t\t\tquery: 'collapseSettingsOptions',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: false,\n\t\t\t\tinvert: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Show Fullscreen Button',\n\t\t\t\tdescription: 'Include the fullscreen button in the settings bar',\n\t\t\t\tquery: 'hideFullScreenToggle',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: false,\n\t\t\t\tinvert: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tgroupName: 'Navigation',\n\t\tisAdvanced: false,\n\t\titems: [\n\t\t\t{\n\t\t\t\tname: 'Allow Navigation',\n\t\t\t\tdescription: 'Allows the user to navigate to other entities',\n\t\t\t\tquery: 'locked',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: false,\n\t\t\t\tinvert: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Allow External Links',\n\t\t\t\tdescription: 'Allows all external links to navigate away from the app to outside resources',\n\t\t\t\tquery: 'hideExternalLinks',\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tinputDefault: true,\n\t\t\t\tappQueryDefault: false,\n\t\t\t\tinvert: true\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tgroupName: '3D',\n\t\tisAdvanced: false,\n\t\titems: [\n\t\t\t{\n\t\t\t\tname: 'Trail Width (pixels)',\n\t\t\t\tdescription: 'Change the width of all entity path trails',\n\t\t\t\tquery: 'trailWidth',\n\t\t\t\ttype: 'number',\n\t\t\t\tvalues: [0.5, 5, 0.5], // min, max, step\n\t\t\t\tinputDefault: 1,\n\t\t\t\tappQueryDefault: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Lighting',\n\t\t\t\tquery: 'lighting',\n\t\t\t\ttype: 'radio',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: 'Flood',\n\t\t\t\t\t\tvalue: 'flood',\n\t\t\t\t\t\tdescription: 'Flood lighting allows for even lighting across all 3D entities'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: 'Natural',\n\t\t\t\t\t\tvalue: 'natural',\n\t\t\t\t\t\tdescription: 'Natural lighting allows for realistic lighting based on the sun\\'s position'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: 'Shadow',\n\t\t\t\t\t\tvalue: 'shadow',\n\t\t\t\t\t\tdescription: 'Shadow lighting allows for somewhat realistic lighting based on the sun\\'s position, but highlights the shadows so they are not completely dark'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tinputDefault: 'shadow',\n\t\t\t\tappQueryDefault: 'shadow'\n\t\t\t}\n\t\t]\n\t}\n];\n\nexport default embedDefaultControls;\n","export default {\n\tjupiter: [\n\t\t{\n\t\t\tid: 'magnetosphere',\n\t\t\ttitle: 'Jupiter\\'s Magnetic Field',\n\t\t\tdescription: 'DESCRIPTION'\n\t\t},\n\t\t{\n\t\t\tid: 'auroras',\n\t\t\ttitle: 'Jupiter\\'s Auroras',\n\t\t\tdescription: 'DESCRIPTION'\n\t\t},\n\t\t{\n\t\t\tid: 'radiationBelt',\n\t\t\ttitle: 'Jupiter\\'s Radiation Belt',\n\t\t\tdescription: 'DESCRIPTION'\n\t\t}\n\t],\n\tsaturn: [\n\t\t{\n\t\t\tid: 'magnetosphere',\n\t\t\ttitle: 'Saturn\\'s Magnetic Field',\n\t\t\tdescription: 'DESCRIPTION'\n\t\t}\n\t]\n};\n","export default {\n\tearth: [\n\t\t{\n\t\t\tid: 'viirs',\n\t\t\ttitle: 'High-quality global mosaic from yesterday',\n\t\t\tdescription: 'This daily global mosaic is from the Visible Infrared Imaging Radiometer Suite (VIIRS), which is one of the key instruments onboard the Suomi National Polar-Orbiting Partnership (Suomi NPP) spacecraft.',\n\t\t\ttype: 'wmts',\n\t\t\tfeatures: ['shadowEntities', 'atmosphere'],\n\t\t\tendPoint: 'assets/wmts_xml',\n\t\t\tlayer: 'VIIRS_SNPP_CorrectedReflectance_TrueColor',\n\t\t\ttile: '250m',\n\t\t\ttime: 'yesterday'\n\t\t}\n\t],\n\tmars: [\n\t\t{\n\t\t\tid: 'vikingMosaic',\n\t\t\ttitle: 'Global mosaic from the Viking missions to Mars.',\n\t\t\tdescription: 'The two Mars Viking Orbiters imaged the entire surface of Mars at a resolution of 150 to 300 meters.',\n\t\t\ttype: 'wmts',\n\t\t\tfeatures: ['shadowEntities', 'atmosphere'],\n\t\t\tendPoint: 'https://trek.nasa.gov/tiles/Mars/EQ/corrected/Mars_Viking_MDIM21_ClrMosaic_global_232m',\n\t\t\tlayer: 'Mars_Viking_MDIM21_ClrMosaic_global_232m'\n\t\t}\n\t],\n\tmoon: [\n\t\t{\n\t\t\tid: 'lroMosaic',\n\t\t\ttitle: 'Global mosaic from the Lunar Reconnaissance Orbiter mission',\n\t\t\tdescription: 'The wide-angle camera on LRO mapped the entire moon at 100 meters/pixel.',\n\t\t\ttype: 'wmts',\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\tendPoint: 'https://trek.nasa.gov/tiles/Moon/EQ/corrected/LRO_WAC_Mosaic_Global_303ppd_v02',\n\t\t\tlayer: 'LRO_WAC_Mosaic_Global_303ppd_v02'\n\t\t}\n\t],\n\ttitan: [\n\t\t{\n\t\t\tid: 'surface',\n\t\t\ttitle: 'Surface imagery of Titan from Cassini\\'s Imaging Science Subsystem camera',\n\t\t\tdescription: 'This global mosaic is at 4 km/pixel, combining one hundred flybys of Titan by the Cassini mission',\n\t\t\ttype: 'texture',\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'titan/surface_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 2048]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 'radar',\n\t\t\ttitle: 'Radar Map of Titan\\'s Surface',\n\t\t\tdescription: 'This 351 meters/pixel map incorporates 104 Titan flybys by the Cassini mission.',\n\t\t\ttype: 'texture',\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'titan/radar_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 2048]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\tvenus: [\n\t\t{\n\t\t\tid: 'surface',\n\t\t\ttitle: 'Radar Map of the Surface of Venus',\n\t\t\tdescription: 'The Magellan mission used radar to see beneath the smog of Venus.',\n\t\t\ttype: 'texture',\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'venus/surface_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 1024]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n};\n","export * from './internal';\n","/* eslint-disable import/first */\nimport { version as EyesVersion } from './version';\nexport {\n\tEyesVersion\n};\n\n// Custom Pioneer components\nexport * from './lib/orbiter_line_of_sight_component';\nexport * from './lib/distance_line_component';\n\n// Utils\nexport * from './utils/cancel_token';\nexport * from './utils/app_utils';\nexport * from './utils/animation_utils';\n\n// Components\nexport * from './components/base_component';\n\nimport Settings from './components/settings';\nimport LoadIcon from './components/load_icon';\nimport Overlay from './components/overlay';\nimport Search from './components/search';\nimport Clock from './components/clock';\nimport ClockShortcut from './components/clock_shortcut';\nimport Carousel from './components/carousel';\nimport TutorialOverlay from './components/tutorial_overlay';\nimport CarouselPanel from './components/carousel_panel';\nimport ShareModal from './components/share_modal';\nimport TimeController from './components/time_controller';\nimport Checkbox from './components/checkbox';\n\nexport {\n\tSettings,\n\tLoadIcon,\n\tOverlay,\n\tSearch,\n\tClock,\n\tClockShortcut,\n\tCarousel,\n\tTutorialOverlay,\n\tCarouselPanel,\n\tShareModal,\n\tTimeController,\n\tCheckbox\n};\n\nexport * from './components/layer_panel/layer_panel';\nexport * from './components/breadcrumb/breadcrumb';\nexport * from './components/story/blocks/story_base_content_block/story_base_content_block';\nexport * from './components/story/blocks/hint_block/hint_block';\nexport * from './components/story/blocks/toggle_block/toggle_block';\nexport * from './components/story/blocks/title_block/title_block';\nexport * from './components/story/blocks/image_block/image_block';\nexport * from './components/story/blocks/description_block/description_block';\nexport * from './components/story/blocks/replay_button_block/replay_button_block';\nexport * from './components/story/blocks/buttons_block/buttons_block';\nexport * from './components/story/blocks/checkbox_block/checkbox_block';\nexport * from './components/story/story';\nexport * from './components/kiosk_base/kiosk_base';\nexport * from './components/toast/toast';\n\n// Managers\nexport * from './managers/base_manager';\nexport * from './managers/selection_manager';\nexport * from './managers/label_manager';\nexport * from './managers/route_manager';\nexport * from './managers/content_manager';\nexport * from './managers/scene_manager';\nexport * from './managers/layer_manager';\nexport * from './managers/trail_manager';\nexport * from './managers/camera_manager';\nexport * from './managers/camera_scripts';\nexport * from './managers/ert_manager';\nexport * from './managers/time_manager';\nexport * from './managers/comparison_manager';\nexport * from './managers/search_manager';\nexport * from './managers/title_manager';\nexport * from './managers/spout_manager';\nexport * from './managers/camera_follow_manager';\n\n// Base View\nexport * from './base_view';\n\n// App\nexport * from './app';\n\n// Types\nexport * from './types';\n","import { Vector3, Color, Entity, LineMesh, ThreeJsHelper, CameraComponent, BaseComponent } from 'pioneer';\n\n/**\n * @typedef LineAnimationOptions\n * @property {boolean} isAnimating whether we're currently animating\n * @property {number} duration length of animation in ms\n * @property {number} sourceStartTime starting time returned from Date.now() at start\n * @property {number} targetStartTime starting time returned from Date.now() at start\n */\n\n/**\n * @typedef AnimationProgress\n * @property {number} sourceProgress source progress 0 - 1\n * @property {number} targetProgress target progress 0 - 1\n */\n\n/**\n * The line component.\n * @extends BaseComponent\n */\nexport class DistanceLineComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t * @package\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * Target entity for the end of the line.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._targetEntity = null;\n\n\t\t/**\n\t\t * The color to draw.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Color(0.48, 0.56, 0.66);\n\n\t\t/**\n\t\t * The distance between the center of the two entities (km)\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._distance = null;\n\n\t\t/**\n\t\t * The source's radius relative to total distance (0-1)\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._sourceRelRadius = null;\n\n\t\t/**\n\t\t * The targets's radius relative to total distance (0-1)\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._targetRelRadius = null;\n\n\t\t/**\n\t\t * The source's measuring start point is center or surface (defaults to center)\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._sourceMpIsSurface = false;\n\n\t\t/**\n\t\t * The target's measuring start point is center or surface (defaults to center)\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._targetMpIsSurface = false;\n\n\t\t/**\n\t\t * Whether to switch the start position of the line to the target\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._switchStartPos = null;\n\n\t\t/**\n\t\t * Sets depth test to false by default.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._depthTest = false;\n\n\n\t\t/**\n\t\t * Animation object options\n\t\t * @type {LineAnimationOptions}\n\t\t * @private\n\t\t */\n\t\tthis._animation = {\n\t\t\tisAnimating: false,\n\t\t\tduration: 300,\n\t\t\tsourceStartTime: null,\n\t\t\ttargetStartTime: null\n\t\t};\n\n\t\t/**\n\t\t * The width to draw.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._width = 2;\n\n\t\t/**\n\t\t * The LineMesh object used to do the drawing.\n\t\t * @type {LineMesh}\n\t\t * @private\n\t\t */\n\t\tthis._lineMesh = null;\n\n\t\t// Set the radius\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Sets the source and target entities for the line.\n\t * @param {Entity} targetEntity\n\t */\n\tsetTargetEntity(targetEntity) {\n\t\tthis._targetEntity = targetEntity;\n\t}\n\n\t/**\n\t * Sets the source measure point.\n\t * @param {string} measurePoint\n\t */\n\tsetSourceMeasurePoint(measurePoint) {\n\t\tconst newIsSurface = measurePoint === 'surface';\n\t\tconst hasChanged = this._sourceMpIsSurface !== newIsSurface;\n\n\t\tif (!hasChanged) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._sourceMpIsSurface = newIsSurface;\n\n\t\tthis._animation.isAnimating = true;\n\t\tthis._animation.sourceStartTime = Date.now();\n\t}\n\n\t/**\n\t * Sets the target measure point.\n\t * @param {string} measurePoint\n\t */\n\tsetTargetMeasurePoint(measurePoint) {\n\t\tconst newIsSurface = measurePoint === 'surface';\n\t\tconst hasChanged = this._targetMpIsSurface !== newIsSurface;\n\n\t\tif (!hasChanged) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._targetMpIsSurface = newIsSurface;\n\n\t\tthis._animation.isAnimating = true;\n\t\tthis._animation.targetStartTime = Date.now();\n\t}\n\n\t/**\n\t * Sets the color for the line.\n\t * @param {Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color = color;\n\t}\n\n\t/**\n\t * Sets the width of the line.\n\t * @param {number} width\n\t */\n\tsetWidth(width) {\n\t\tthis._width = width;\n\t}\n\n\t/**\n\t * Sets the distance props (distance, source and target relative radii)\n\t * @param {object} params\n\t * @param {number} params.distance\n\t * @param {number} params.sourceRadius\n\t * @param {number} params.targetRadius\n\t */\n\tsetDistanceProps({ distance, sourceRadius, targetRadius }) {\n\t\tthis._distance = distance;\n\t\tthis._sourceRelRadius = Math.max(Math.min(sourceRadius / this._distance, 1), 0);\n\t\tthis._targetRelRadius = Math.max(Math.min(targetRadius / this._distance, 1), 0);\n\t}\n\n\t/**\n\t * Applies animation easing-in-out function.\n\t * https://github.com/d3/d3-ease/tree/main/src\n\t * @param {number} progress\n\t * @returns {number}\n\t */\n\t_applyEasing(progress) {\n\t\tconst e = 4;\n\t\tconst easedProgress = progress * 2;\n\n\t\treturn (easedProgress <= 1 ? Math.pow(easedProgress, e) : 2 - Math.pow(2 - easedProgress, e)) / 2;\n\t}\n\n\t/**\n\t * Updates the lineStart and lineEnd position vectors when animating between center and surface for source or target.\n\t * @param {Vector3} lineStart\n\t * @param {Vector3} lineEnd\n\t * @param {Vector3} startCenterPos\n\t * @param {Vector3} startSurfacePos\n\t * @param {Vector3} endCenterPos\n\t * @param {Vector3} endSurfacePos\n\t */\n\t_updateAnimation(lineStart, lineEnd, startCenterPos, startSurfacePos, endCenterPos, endSurfacePos) {\n\t\t// Return if not animating.\n\t\tif (!this._animation.isAnimating) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tconst { sourceStartTime, targetStartTime, duration } = this._animation;\n\n\t\t// Calculate progress lerps. This logic could be condensed but it's perhaps easier to read like this.\n\n\t\tif (sourceStartTime) {\n\t\t\tconst sourceDiff = Date.now() - sourceStartTime;\n\t\t\tconst sourceProgress = sourceDiff > duration ? 1 : sourceDiff / duration;\n\n\t\t\tif (sourceProgress !== 1) {\n\t\t\t\t// Apply easing.\n\t\t\t\tconst sourceProgressEased = this._applyEasing(sourceProgress);\n\n\t\t\t\t// Determine vector lerp.\n\t\t\t\tif (this._sourceMpIsSurface) {\n\t\t\t\t\tif (this._switchStartPos) {\n\t\t\t\t\t\tlineEnd.lerp(endCenterPos, endSurfacePos, sourceProgressEased);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlineStart.lerp(startCenterPos, startSurfacePos, sourceProgressEased);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this._switchStartPos) {\n\t\t\t\t\t\tlineEnd.lerp(endSurfacePos, endCenterPos, sourceProgressEased);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlineStart.lerp(startSurfacePos, startCenterPos, sourceProgressEased);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Source animation is complete.\n\t\t\t\tthis._animation.isAnimating = false;\n\t\t\t\tthis._animation.sourceStartTime = null;\n\t\t\t}\n\t\t}\n\n\t\tif (targetStartTime) {\n\t\t\tconst targetDiff = Date.now() - targetStartTime;\n\t\t\tconst targetProgress = targetDiff > duration ? 1 : targetDiff / duration;\n\n\t\t\tif (targetProgress !== 1) {\n\t\t\t\t// Apply easing.\n\t\t\t\tconst targetProgressEased = this._applyEasing(targetProgress);\n\n\t\t\t\t// Determine vector lerp.\n\t\t\t\tif (this._targetMpIsSurface) {\n\t\t\t\t\tif (this._switchStartPos) {\n\t\t\t\t\t\tlineStart.lerp(startCenterPos, startSurfacePos, targetProgressEased);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlineEnd.lerp(endCenterPos, endSurfacePos, targetProgressEased);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (this._switchStartPos) {\n\t\t\t\t\t\tlineStart.lerp(startSurfacePos, startCenterPos, targetProgressEased);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlineEnd.lerp(endSurfacePos, endCenterPos, targetProgressEased);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Target animation is complete.\n\t\t\t\tthis._animation.isAnimating = false;\n\t\t\t\tthis._animation.targetStartTime = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tthis._lineMesh = new LineMesh(this);\n\n\t\t// Set colors.\n\t\tthis._lineMesh.setColors([\n\t\t\tthis._color,\n\t\t\tthis._color\n\t\t]);\n\n\t\t// Set widths.\n\t\tthis._lineMesh.setWidths([\n\t\t\tthis._width,\n\t\t\tthis._width\n\t\t]);\n\n\t\t// Set opacity.\n\t\tthis.setOpacity(1);\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sets the line opacity\n\t * @param {number} opacity\n\t */\n\tsetOpacity(opacity) {\n\t\tthis._lineMesh.setAlphaMultiplier(opacity);\n\t}\n\n\t/**\n\t * Sets whether we use a depth test for the mesh line.\n\t * @param {boolean} depthTest\n\t */\n\tsetDepthTest(depthTest) {\n\t\tthis._depthTest = depthTest;\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\tconst [lineMesh] = this.getThreeJsObjects();\n\n\t\tif (this._targetEntity === null) {\n\t\t\tif (lineMesh) {\n\t\t\t\tlineMesh.visible = false;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (lineMesh?.material) {\n\t\t\tlineMesh.material.depthTest = this._depthTest;\n\t\t}\n\n\t\t// Determine start pos.\n\t\tthis._calcStartPos(camera);\n\n\t\t// Update the points and set the calculated positions and colors.\n\t\tthis._updatePoints(camera);\n\n\t\t// Set the Three.js object position the entity's camera-space position\n\t\tconst startEntity = this._switchStartPos ? this._targetEntity : this.getEntity();\n\t\tThreeJsHelper.setPositionToEntity(lineMesh, startEntity, camera);\n\n\t\tthis._lineMesh.prepareForRender(camera);\n\t}\n\n\t/**\n\t * Determine the start position\n\t * @param {CameraComponent} camera\n\t */\n\t_calcStartPos(camera) {\n\t\tconst switchThreshold = 0.001;\n\t\tconst targetToCamera = Vector3.pool.get();\n\n\t\t// Get camera distance to targetEntity.\n\t\tcamera.getEntity().getPositionRelativeToEntity(targetToCamera, Vector3.Zero, this._targetEntity);\n\n\t\t// Cam distance to target relative to total distance.\n\t\tconst relDistance = targetToCamera.magnitude() / this._distance;\n\t\tconst switchStartPos = relDistance < switchThreshold;\n\n\t\t// Update _switchStartPos if needed.\n\t\tif (this._switchStartPos !== switchStartPos) {\n\t\t\tthis._switchStartPos = switchStartPos;\n\t\t}\n\n\t\tVector3.pool.release(targetToCamera);\n\t}\n\n\t/**\n\t * Updates the points array.\n\t *\n\t * The start center is normally the source (this.getEntity) entity center, with the end being the target (this._targetEntity) center.\n\t * However, if the camera is close to the target, we want to switch so the start is the target and the end is the source.\n\t * This way, we wont get any erratically moving lines from long distance accuracy issues.\n\t * For this, we're using this._switchStartPos as the determining boolean.\n\t * @param {CameraComponent} camera\n\t * @private\n\t */\n\t_updatePoints(camera) {\n\t\tif (this._targetEntity === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get 4 vectors.\n\t\tconst startCenterPos = Vector3.pool.get();\n\t\tconst startSurfacePos = Vector3.pool.get();\n\t\tconst endSurfacePos = Vector3.pool.get();\n\t\tconst endCenterPos = Vector3.pool.get();\n\n\n\t\t// Start center is set to zero.\n\t\tstartCenterPos.copy(Vector3.Zero);\n\n\t\t// Set target entity center vector.\n\t\tendCenterPos.sub(this._targetEntity.getCameraSpacePosition(camera), this.getEntity().getCameraSpacePosition(camera));\n\t\tif (this._switchStartPos) {\n\t\t\tendCenterPos.neg(endCenterPos);\n\t\t}\n\n\t\tconst startSurfaceU = this._switchStartPos ? this._targetRelRadius : this._sourceRelRadius;\n\t\tconst endSurfaceU = 1 - (this._switchStartPos ? this._sourceRelRadius : this._targetRelRadius);\n\n\t\t// Get lerped surface vectors.\n\t\tstartSurfacePos.lerp(startCenterPos, endCenterPos, startSurfaceU);\n\t\tendSurfacePos.lerp(startCenterPos, endCenterPos, endSurfaceU);\n\n\t\t// Determine line start and end vectors.\n\t\tconst startMpIsSurface = this._switchStartPos ? this._targetMpIsSurface : this._sourceMpIsSurface;\n\t\tconst endMpIsSurface = this._switchStartPos ? this._sourceMpIsSurface : this._targetMpIsSurface;\n\t\tconst lineStart = startMpIsSurface ? startSurfacePos : startCenterPos;\n\t\tconst lineEnd = endMpIsSurface ? endSurfacePos : endCenterPos;\n\n\t\t// Update animation.\n\t\tthis._updateAnimation(lineStart, lineEnd, startCenterPos, startSurfacePos, endCenterPos, endSurfacePos);\n\n\t\t// Update positions.\n\t\tconst positions = [\n\t\t\tlineStart,\n\t\t\tlineEnd\n\t\t];\n\t\tthis._lineMesh.setPositions(positions);\n\n\n\t\t// Release vector3s\n\t\tVector3.pool.release(startCenterPos);\n\t\tVector3.pool.release(startSurfacePos);\n\t\tVector3.pool.release(endSurfacePos);\n\t\tVector3.pool.release(endCenterPos);\n\t}\n}\n","import * as Pioneer from 'pioneer';\n\n/**\n * The line component.\n * @extends Pioneer.BaseComponent\n */\nexport class OrbiterLineOfSightComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t * @package\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * Target point A for the line.\n\t\t * @type {Pioneer.Entity}\n\t\t */\n\t\tthis._targetA = null;\n\n\t\t/**\n\t\t * Target point B for the line.\n\t\t * @type {Pioneer.Entity}\n\t\t */\n\t\tthis._targetB = null;\n\n\t\t/**\n\t\t * Ignore distance flag.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._ignoreDistance = false;\n\n\t\t/**\n\t\t * Ignore distance threshold.\n\t\t * Will fade in between min (a:0) and max (a:1).\n\t\t * @type {object}\n\t\t */\n\t\tthis._distanceThreshold = { min: 2, max: 20 };\n\n\t\t/**\n\t\t * The positions to draw. Sent to the line mesh.\n\t\t * @type {Array<Pioneer.Vector3>}\n\t\t * @private\n\t\t */\n\t\tthis._positions = [];\n\n\t\t/**\n\t\t * The colors to draw. Sent to the line mesh.\n\t\t * @type {Array<Pioneer.Color>}\n\t\t * @private\n\t\t */\n\t\tthis._colors = [];\n\n\t\t/**\n\t\t * The widths to draw. Sent to the line mesh.\n\t\t * @type {Array<number>}\n\t\t * @private\n\t\t */\n\t\tthis._widths = [];\n\n\t\t/**\n\t\t * The color to draw.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 0);\n\n\t\t/**\n\t\t * The width to draw.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._width = 2;\n\n\t\t// Setup ThreeJS\n\t\tthis._threeJsScene = entity.getScene().getThreeJsScene();\n\n\t\t/**\n\t\t * The LineMesh object used to do the drawing.\n\t\t * @type {Pioneer.LineMesh}\n\t\t * @private\n\t\t */\n\t\tthis._lineMesh = null;\n\n\t\t// Set the radius\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Sets the target entity for the line.\n\t * @param {Pioneer.Entity} entityA\n\t * @param {Pioneer.Entity} entityB\n\t */\n\tsetTargets(entityA, entityB) {\n\t\tif (typeof entityA === 'string') {\n\t\t\tentityA = this.getEntity().getScene().get(entityA);\n\t\t}\n\t\tif (typeof entityB === 'string') {\n\t\t\tentityB = this.getEntity().getScene().get(entityB);\n\t\t}\n\n\t\tthis._targetA = entityA;\n\t\tthis._targetB = entityB;\n\t}\n\n\t/**\n\t * Sets the color for the line.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color = color;\n\t}\n\n\t/**\n\t * Sets the width of the line.\n\t * @param {number} width\n\t */\n\tsetWidth(width) {\n\t\tthis._width = width;\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tthis._lineMesh = new Pioneer.LineMesh(this);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\tif (this._targetA === null || this._targetB === null) {\n\t\t\tif (this.getThreeJsObjects().length > 0) {\n\t\t\t\tthis.getThreeJsObjects()[0].visible = false;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the points and set the calculated positions and colors.\n\t\tthis._updatePoints(camera);\n\t\tlet alphaMultiplier = 1.0;\n\t\tif (!this._ignoreDistance) {\n\t\t\tconst cameraDistance = camera.getEntity().getPosition().magnitude();\n\t\t\tconst f = (cameraDistance - this._distanceThreshold.min) / (this._distanceThreshold.max - this._distanceThreshold.min);\n\t\t\talphaMultiplier *= f;\n\t\t}\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\n\t\tthis._lineMesh.setAlphaMultiplier(alphaMultiplier);\n\t\tthis._lineMesh.prepareForRender(camera);\n\t}\n\n\t/**\n\t * Updates the points array.\n\t * @private\n\t */\n\t_updatePoints() {\n\t\t// Get target positions in Mars frame\n\t\tconst targetAPos = Pioneer.Vector3.pool.get();\n\t\tconst targetBPos = Pioneer.Vector3.pool.get();\n\n\t\tthis._targetA.getPositionRelativeToEntity(targetAPos, Pioneer.Vector3.Zero, this.getEntity());\n\t\tthis._targetB.getPositionRelativeToEntity(targetBPos, Pioneer.Vector3.Zero, this.getEntity());\n\n\t\t// Update positions\n\t\tthis._positions = [];\n\t\tthis._positions.push(targetAPos);\n\t\tthis._positions.push(targetBPos);\n\t\tthis._lineMesh.setPositions(this._positions);\n\n\t\t// Update colors\n\t\tconst color = this._color;\n\t\tthis._colors = [];\n\t\tthis._colors.push(color);\n\t\tthis._colors.push(color);\n\t\tthis._lineMesh.setColors(this._colors);\n\n\t\t// Update widths\n\t\tthis._widths = [];\n\t\tthis._widths.push(this._width);\n\t\tthis._widths.push(this._width);\n\t\tthis._lineMesh.setWidths(this._widths);\n\n\t\tPioneer.Vector3.pool.release(targetAPos);\n\t\tPioneer.Vector3.pool.release(targetBPos);\n\t}\n}\n","/*\n * Javascript Quadtree\n * @version 1.1.1\n * @licence MIT\n * @author Timo Hausmann\n * https://github.com/timohausmann/quadtree-js/\n */\n\n/*\n Copyright © 2012 Timo Hausmann\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENthis. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n;(function(window, Math) {\n\n\t /*\n\t  * Quadtree Constructor\n\t  * @param Object bounds\t\tbounds of the node, object with x, y, width, height\n\t  * @param Integer max_objects\t\t(optional) max objects a node can hold before splitting into 4 subnodes (default: 10)\n\t  * @param Integer max_levels\t\t(optional) total max levels inside root Quadtree (default: 4)\n\t  * @param Integer level\t\t(optional) deepth level, required for subnodes\n\t  */\n\tfunction Quadtree( bounds, max_objects, max_levels, level ) {\n\n\t\tthis.max_objects\t= max_objects || 10;\n\t\tthis.max_levels\t\t= max_levels || 4;\n\n\t\tthis.level \t\t= level || 0;\n\t\tthis.bounds \t\t= bounds;\n\n\t\tthis.objects \t\t= [];\n\t\tthis.nodes \t\t= [];\n\t};\n\n\n\t/*\n\t * Split the node into 4 subnodes\n\t */\n\tQuadtree.prototype.split = function() {\n\n\t\tvar \tnextLevel\t= this.level + 1,\n\t\t\tsubWidth\t= Math.round( this.bounds.width / 2 ),\n\t\t\tsubHeight \t= Math.round( this.bounds.height / 2 ),\n\t\t\tx \t\t= Math.round( this.bounds.x ),\n\t\t\ty \t\t= Math.round( this.bounds.y );\n\n\t \t//top right node\n\t\tthis.nodes[0] = new Quadtree({\n\t\t\tx\t: x + subWidth,\n\t\t\ty\t: y,\n\t\t\twidth\t: subWidth,\n\t\t\theight\t: subHeight\n\t\t}, this.max_objects, this.max_levels, nextLevel);\n\n\t\t//top left node\n\t\tthis.nodes[1] = new Quadtree({\n\t\t\tx\t: x,\n\t\t\ty\t: y,\n\t\t\twidth\t: subWidth,\n\t\t\theight\t: subHeight\n\t\t}, this.max_objects, this.max_levels, nextLevel);\n\n\t\t//bottom left node\n\t\tthis.nodes[2] = new Quadtree({\n\t\t\tx\t: x,\n\t\t\ty\t: y + subHeight,\n\t\t\twidth\t: subWidth,\n\t\t\theight\t: subHeight\n\t\t}, this.max_objects, this.max_levels, nextLevel);\n\n\t\t//bottom right node\n\t\tthis.nodes[3] = new Quadtree({\n\t\t\tx\t: x + subWidth,\n\t\t\ty\t: y + subHeight,\n\t\t\twidth\t: subWidth,\n\t\t\theight\t: subHeight\n\t\t}, this.max_objects, this.max_levels, nextLevel);\n\t};\n\n\n\t/*\n\t * Determine which node the object belongs to\n\t * @param Object pRect\t\tbounds of the area to be checked, with x, y, width, height\n\t * @return Integer\t\tindex of the subnode (0-3), or -1 if pRect cannot completely fit within a subnode and is part of the parent node\n\t */\n\tQuadtree.prototype.getIndex = function( pRect ) {\n\n\t\tvar \tindex \t\t\t= -1,\n\t\t\tverticalMidpoint \t= this.bounds.x + (this.bounds.width / 2),\n\t\t\thorizontalMidpoint \t= this.bounds.y + (this.bounds.height / 2),\n\n\t\t\t//pRect can completely fit within the top quadrants\n\t\t\ttopQuadrant = (pRect.y < horizontalMidpoint && pRect.y + pRect.height < horizontalMidpoint),\n\n\t\t\t//pRect can completely fit within the bottom quadrants\n\t\t\tbottomQuadrant = (pRect.y > horizontalMidpoint);\n\n\t\t//pRect can completely fit within the left quadrants\n\t\tif( pRect.x < verticalMidpoint && pRect.x + pRect.width < verticalMidpoint ) {\n\t\t\tif( topQuadrant ) {\n\t\t\t\tindex = 1;\n\t\t\t} else if( bottomQuadrant ) {\n\t\t\t\tindex = 2;\n\t\t\t}\n\n\t\t//pRect can completely fit within the right quadrants\n\t\t} else if( pRect.x > verticalMidpoint ) {\n\t\t\tif( topQuadrant ) {\n\t\t\t\tindex = 0;\n\t\t\t} else if( bottomQuadrant ) {\n\t\t\t\tindex = 3;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\n\t/*\n\t * Insert the object into the node. If the node\n\t * exceeds the capacity, it will split and add all\n\t * objects to their corresponding subnodes.\n\t * @param Object pRect\t\tbounds of the object to be added, with x, y, width, height\n\t */\n\tQuadtree.prototype.insert = function( pRect ) {\n\n\t\tvar \ti = 0,\n\t \t\tindex;\n\n\t \t//if we have subnodes ...\n\t\tif( typeof this.nodes[0] !== 'undefined' ) {\n\t\t\tindex = this.getIndex( pRect );\n\n\t\t  \tif( index !== -1 ) {\n\t\t\t\tthis.nodes[index].insert( pRect );\n\t\t\t \treturn;\n\t\t\t}\n\t\t}\n\n\t \tthis.objects.push( pRect );\n\n\t\tif( this.objects.length > this.max_objects && this.level < this.max_levels ) {\n\n\t\t\t//split if we don't already have subnodes\n\t\t\tif( typeof this.nodes[0] === 'undefined' ) {\n\t\t\t\tthis.split();\n\t\t\t}\n\n\t\t\t//add all objects to there corresponding subnodes\n\t\t\twhile( i < this.objects.length ) {\n\n\t\t\t\tindex = this.getIndex( this.objects[ i ] );\n\n\t\t\t\tif( index !== -1 ) {\n\t\t\t\t\tthis.nodes[index].insert( this.objects.splice(i, 1)[0] );\n\t\t\t\t} else {\n\t\t\t\t\ti = i + 1;\n\t\t\t \t}\n\t\t \t}\n\t\t}\n\t };\n\n\n\t/*\n\t * Return all objects that could collide with the given object\n\t * @param Object pRect\t\tbounds of the object to be checked, with x, y, width, height\n\t * @Return Array\t\tarray with all detected objects\n\t */\n\tQuadtree.prototype.retrieve = function( pRect ) {\n\n\t\tvar \tindex = this.getIndex( pRect ),\n\t\t\treturnObjects = this.objects;\n\n\t\t//if we have subnodes ...\n\t\tif( typeof this.nodes[0] !== 'undefined' ) {\n\n\t\t\t//if pRect fits into a subnode ..\n\t\t\tif( index !== -1 ) {\n\t\t\t\treturnObjects = returnObjects.concat( this.nodes[index].retrieve( pRect ) );\n\n\t\t\t//if pRect does not fit into a subnode, check it against all subnodes\n\t\t\t} else {\n\t\t\t\tfor( var i=0; i < this.nodes.length; i=i+1 ) {\n\t\t\t\t\treturnObjects = returnObjects.concat( this.nodes[i].retrieve( pRect ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn returnObjects;\n\t};\n\n\n\t/*\n\t * Clear the quadtree\n\t */\n\tQuadtree.prototype.clear = function() {\n\n\t\tthis.objects = [];\n\n\t\tfor( var i=0; i < this.nodes.length; i=i+1 ) {\n\t\t\tif( typeof this.nodes[i] !== 'undefined' ) {\n\t\t\t\tthis.nodes[i].clear();\n\t\t  \t}\n\t\t}\n\n\t\tthis.nodes = [];\n\t};\n\n\t//make Quadtree available in the global namespace\n\twindow.Quadtree = Quadtree;\n\n})(window, Math);\n","import * as Pioneer from 'pioneer';\nimport {\n\tBaseApp\n} from '../internal';\n\n/**\n * Base manager class.\n */\nexport class BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\t/**\n\t\t * Application.\n\t\t * @type {BaseApp}\n\t\t * @private\n\t\t */\n\t\tthis._app = app;\n\n\t\t/**\n\t\t * Pioneer engine.\n\t\t * @type {Pioneer.Engine}\n\t\t * @private\n\t\t */\n\t\tthis._pioneer = app.pioneer;\n\n\t\t/**\n\t\t * Array of possible event names.\n\t\t * @type {string[]}\n\t\t * @default\n\t\t */\n\t\tthis._eventNames = [];\n\n\t\t/**\n\t\t * Callbacks reference object.\n\t\t * @type {Object<string, Array<(...params: any[]) => void>>}\n\t\t * @default\n\t\t */\n\t\tthis._callbacks = {};\n\t}\n\n\t/**\n\t * Gets Pioneer engine.\n\t * @returns {Pioneer.Engine}\n\t */\n\tget pioneer() {\n\t\treturn this._pioneer;\n\t}\n\n\t/**\n\t * Gets application object.\n\t * @returns {BaseApp}\n\t */\n\tget app() {\n\t\treturn this._app;\n\t}\n\n\t/**\n\t * Initialize callback list for all events.\n\t * @protected\n\t */\n\t_initCallbacks() {\n\t\tfor (let i = 0; i < this._eventNames.length; i++) {\n\t\t\tthis._callbacks[this._eventNames[i]] = [];\n\t\t}\n\t}\n\n\t/**\n\t * Registers a callback for a specific event.\n\t * @param {string} eventName\n\t * @param {(...params: any[]) => void} callback - A callback function to be called\n\t */\n\tregisterCallback(eventName, callback) {\n\t\tif ((typeof (callback) !== 'function') || (this._eventNames.indexOf(eventName) < 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent multiple registrations of same event with same callback\n\t\tif (!this._callbacks[eventName].includes(callback)) {\n\t\t\tthis._callbacks[eventName].push(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Remove a callback for an event.\n\t * @param {string} eventName\n\t * @param {(...params: any[]) => void} callback\n\t */\n\tremoveCallback(eventName, callback) {\n\t\tif ((typeof (callback) !== 'function') || (this._eventNames.indexOf(eventName) < 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = this._callbacks[eventName].indexOf(callback);\n\t\tif (index > -1) {\n\t\t\tthis._callbacks[eventName].splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Trigger all callbacks for an event.\n\t * @param {string} eventName\n\t * @param {any[]} [params=[]] - Parameters for callback\n\t */\n\ttriggerCallbacks(eventName, params = []) {\n\t\tfor (let i = this._callbacks[eventName].length - 1; i >= 0; i--) {\n\t\t\tconst callbackFn = this._callbacks[eventName][i];\n\t\t\tcallbackFn(...params);\n\t\t}\n\t}\n\n\t/**\n\t * Bind functions to class.\n\t * @param {string[]} [fns=[]] - Names of functions.\n\t */\n\tbindFunctions(fns = []) {\n\t\tconst thisAsObject = /** @type {Object<string, any>} */(this);\n\t\tfor (let i = 0; i < fns.length; i++) {\n\t\t\tconst fn = fns[i];\n\t\t\tthisAsObject[fn] = thisAsObject[fn].bind(this);\n\t\t}\n\t}\n\n\t/**\n\t * Destroy the manager.\n\t */\n\tdestroy() {\n\t\tthis.__destroy();\n\t}\n\n\t/**\n\t * Destroy the manager.\n\t * @private\n\t */\n\t__destroy() {\n\t}\n}\n","import { SceneHelpers, Entity, PositionSumController } from 'pioneer-scripts';\nimport * as Pioneer from 'pioneer';\nimport {\n\tBaseApp,\n\tBaseManager,\n\tBaseComponent,\n\tAppUtils\n} from '../internal';\n\n\n/**\n * Camera-Follow is when you're on a space object or event view and you want the camera to automatically align / follow an additional object.\n * This tracking is remains dynamic whilst the followId is set.\n * Although there are UI components for this (Search and Toast), the follow logic will be determined here.\n *\n * State notes:\n * The followId, followEntity, and followName states are all set when the follow function is called.\n * The targetId and targetEntity are not technically states as they are always directly attached to the current view.\n */\n\n/**\n * CameraFollowOptions type.\n * @typedef CameraFollowOptions\n * @property {string} placeholder - The placeholder text for the search component.\n * @property {number} maxFeatured - The maximum number of featured items to show.\n * @property {number} hideSearchDelay - The delay in milliseconds to hide the search component.\n * @property {number} cameraDuration - The duration in seconds for the camera animation.\n */\n\n/**\n *\n */\nexport class CameraFollowManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} options\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * @type {CameraFollowOptions}\n\t\t * @private\n\t\t */\n\t\tthis._options = {\n\t\t\tplaceholder: 'Search target to follow...',\n\t\t\tmaxFeatured: 5,\n\t\t\thideSearchDelay: 1000,\n\t\t\tcameraDuration: 1.5,\n\t\t\t...options\n\t\t};\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isEnabled = null;\n\n\t\t/**\n\t\t * @type {string}\n\t\t * @public\n\t\t */\n\t\tthis.followId = null;\n\n\t\t/**\n\t\t * @type {string}\n\t\t * @public\n\t\t */\n\t\tthis.followName = null;\n\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t * @public\n\t\t */\n\t\tthis.optionElement = null;\n\n\t\t/**\n\t\t * @type {BaseComponent}\n\t\t * @public\n\t\t */\n\t\tthis.search = null;\n\n\t\t/**\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._returnToPreviousCamView = null;\n\n\t\t/**\n\t\t * Hide search timeout.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._hideSearchTimeout = null;\n\n\t\t/**\n\t\t * Store the previous entity label weights.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._prevValues = {\n\t\t\tweights: {},\n\t\t\toccRadii: {},\n\t\t\tlabelsClickable: {},\n\t\t\tocclusion: {},\n\t\t\ttimeLimits: { min: null, max: null }\n\t\t};\n\n\t\t/**\n\t\t * Monitor screen resizes\n\t\t */\n\t\tthis._resizeObserver = new ResizeObserver(() => {\n\t\t\tthis.setYawPitchLimits();\n\t\t});\n\n\n\t\t/**\n\t\t * We're going to add a mutation observer to the body to see when the offset has changed.\n\t\t * This is because the existing callback system is not called in the expected order.\n\t\t * Instead of adding a callback to the offsetPanel, we're going to add a callback to the body when the class changes.\n\t\t */\n\t\tthis._offsetObserver = new MutationObserver(mutations => {\n\t\t\tmutations.forEach(mutation => {\n\t\t\t\tif (mutation.attributeName === 'class') {\n\t\t\t\t\tthis.setYawPitchLimits();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Create the sum parent entity.\n\t\tthis._sumParent = this._createSumParent();\n\n\t\t// Create the reframing element.\n\t\tthis._createReframeElement();\n\n\t\tthis.bindFunctions(['update', 'setSearchOptions', 'goToPreviousCamView', 'updateOccludedEntities']);\n\n\t\tthis.pioneer.addCallback(this.update, true);\n\t}\n\n\n\t/**\n\t * Sets the local followId, followEntity and followName.\n\t * Also updates the search input.\n\t * @param {string} followId\n\t */\n\tsetFollowVars(followId) {\n\t\tconst contentManager = this.app.getManager('content');\n\t\tconst { input: searchInput } = this.search?._children || {};\n\n\t\t// Determine DistanceEntity properties.\n\t\tconst { altName, displayName, iauName } = contentManager.getEntityInfo(followId) ?? {};\n\t\tconst followName = altName || displayName || iauName || '';\n\n\t\tif (searchInput) {\n\t\t\tsearchInput.value = followName;\n\t\t}\n\n\t\t// Set the local follow id and name.\n\t\tthis.followId = followId;\n\t\tthis.followEntity = followId ? this.app.scene.get(followId) : null;\n\t\tthis.followName = followName;\n\t}\n\n\t/**\n\t * Sets the toast content.\n\t * @param {object} options\n\t * @param {boolean} options.reset\n\t */\n\tsetToastContent({ reset = false } = {}) {\n\t\tconst toast = this.app.getComponent('toast');\n\n\t\tif (reset) {\n\t\t\ttoast.hide();\n\t\t\ttoast.setContent('');\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the content.\n\t\tconst prefix = ['Sun', 'Moon', 'ISS'].includes(this.followName) ? 'the ' : '';\n\t\tconst textHtmlStr = `<span class=\"content-text\">Camera is following ${prefix}${this.followName}</span>`;\n\t\tconst buttonHtmlStr = '<button class=\"clickable undo\" aria-label=\"Undo camera follow\">Undo</button>';\n\t\ttoast.setContent(`<div>${textHtmlStr}${buttonHtmlStr}</div>`);\n\n\n\t\t// Add event listener to the button.\n\t\tconst { toastContent } = toast._children;\n\t\tconst undoButton = toastContent.querySelector('button');\n\n\t\tundoButton?.addEventListener('click', () => {\n\t\t\tthis.setEnabled(false);\n\t\t});\n\t}\n\n\t/**\n\t * Show the toast.\n\t */\n\tshowToast() {\n\t\tconst toast = this.app.getComponent('toast');\n\t\ttoast.show();\n\t}\n\n\t/**\n\t * Determine whether the time limits are valid.\n\t * Re-directs if necessary.\n\t * @returns {object}\n\t */\n\tvalidateTimeLimits() {\n\t\tconst timeManager = this.app.getManager('time');\n\t\tconst currentTime = timeManager.getTime();\n\t\tconst { currentView } = this.app.getManager('router');\n\n\t\t// Get the position coverage for the target and follow entities in ET.\n\t\tconst { min: targetMinET, max: targetMaxET } = this.targetEntity?.getPositionCoverage() || {};\n\t\tconst { min: followMinET, max: followMaxET } = this.followEntity?.getPositionCoverage() || {};\n\n\t\t// Make sure we have all the values.\n\t\tif (!targetMinET || !targetMaxET || !followMinET || !followMaxET) {\n\t\t\treturn { isValid: false };\n\t\t}\n\n\t\t// Get moment values.\n\t\tlet targetMin = isFinite(targetMinET) ? timeManager.etToMoment(targetMinET) : targetMinET;\n\t\tlet targetMax = isFinite(targetMaxET) ? timeManager.etToMoment(targetMaxET) : targetMaxET;\n\t\tconst followMin = isFinite(followMinET) ? timeManager.etToMoment(followMinET) : followMinET;\n\t\tconst followMax = isFinite(followMaxET) ? timeManager.etToMoment(followMaxET) : followMaxET;\n\n\t\t// Determine if we use the event limits.\n\t\tconst useEventLimits = currentView === 'event' && this.app.getView('event')._eventName;\n\n\t\tif (useEventLimits) {\n\t\t\tconst { min: limitMin, max: limitMax } = timeManager.getLimits() || {};\n\t\t\ttargetMin = limitMin;\n\t\t\ttargetMax = limitMax;\n\t\t}\n\n\n\t\t// Determine the min and max times.\n\t\tconst minTime = Math.max(followMin, targetMin);\n\t\tconst maxTime = Math.min(followMax, targetMax);\n\n\t\t// If there is no overlap between the target limits and the followEntity limits, we cannot follow the entity.\n\t\tconst noOverlap = followMin > targetMax || followMax < targetMin;\n\t\tif (noOverlap) {\n\t\t\t// Display limit message\n\t\t\tthis.app.getComponent('clock')?.setLimitMessage(null, 'Entity timelines do not overlap');\n\t\t\tthis.setEnabled(false);\n\t\t\treturn { isValid: false };\n\t\t}\n\n\t\t// If the current time is not within the followMin and followMax, go to the min time.\n\t\tconst updateTime = currentTime < followMin || currentTime > followMax;\n\t\tif (updateTime) {\n\t\t\tconst time = timeManager.getTimeUrl(minTime);\n\t\t\tthis.app.getManager('router').navigate({ time });\n\t\t}\n\n\t\treturn {\n\t\t\tisValid: true,\n\t\t\tminTime,\n\t\t\tmaxTime\n\t\t};\n\t}\n\n\t/**\n\t * Activates the camera follow, given the followId.\n\t * @param {string} followId\n\t */\n\tasync follow(followId) {\n\t\t// Get current and prev targets.\n\t\tconst { currentRoute, previousRoute } = this.app.getManager('router');\n\t\tconst { params: prevParams } = previousRoute || {};\n\t\tconst { params } = currentRoute || {};\n\t\tconst { spaceObject: prevTargetId } = prevParams || {};\n\t\tconst { spaceObject: targetId } = params || {};\n\t\tconst { cameraDuration } = this._options;\n\n\t\t// Set enabled.\n\t\tthis._isEnabled = true;\n\n\t\t// Make sure the search is initialized.\n\t\t!this.search && this.initSearch();\n\n\t\t// If there was a previous followId, reset the label weight.\n\t\tthis.followId && this.setLabelWeight(this.followId, true);\n\n\t\t// If there was a previous followId, reset the time limits.\n\t\tthis.setTimeLimits({ reset: true });\n\n\t\t// If there was a different previous targetId, reset the occlusion radius, and clickable state.\n\t\tif (prevTargetId && prevTargetId !== targetId) {\n\t\t\tthis.setTargetNotClickable(prevTargetId, true);\n\t\t}\n\n\t\t// Force entity visible.\n\t\tthis.app.getManager('scene').setEntitiesForceVisible([followId]);\n\n\t\t// Update the follow vars.\n\t\tthis.setFollowVars(followId);\n\n\t\t// Make sure it doesn't fade.\n\t\tconst divComponent = this.followEntity?.get('div');\n\t\tdivComponent.setFadeWhenCloseToEntity(false);\n\n\t\t/**\n\t\t * Trigger the radio button selection in the content panel\n\t\t * (when just changing the query, onRouteChange in the view options block is not triggered)\n\t\t */\n\t\tthis.triggerViewOptionUpdate();\n\n\t\t// Set the toast content.\n\t\tthis.setToastContent();\n\n\t\t// Start observing the body for offset class changes.\n\t\tthis._offsetObserver.observe(document.body, { attributes: true });\n\n\t\t// Start observing the body for resize changes.\n\t\tthis._resizeObserver.observe(document.body);\n\n\t\t// Wait for the entities to be in place.\n\t\tawait this.entitiesInPlace();\n\n\t\t// Determine validity of the time limits.\n\t\tconst { isValid, minTime, maxTime } = this.validateTimeLimits();\n\n\t\t// Return if not valid or no longer enabled.\n\t\tif (!isValid || !this.isEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add parentChanged callbacks.\n\t\tthis.setParentsChangedCallbacks();\n\n\n\t\tconst startAnimation = () => {\n\t\t\t// We need to pause time to prevent weird offsets.\n\t\t\tconst timeManager = this.app.getManager('time');\n\t\t\ttimeManager.pause();\n\n\t\t\t// Show the toast.\n\t\t\tif (this.followName) {\n\t\t\t\tthis.showToast();\n\t\t\t}\n\n\n\t\t\t// Animate camera and apply remaining settings.\n\t\t\tthis.animateCamera(cameraDuration)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Resume time.\n\t\t\t\t\ttimeManager.play();\n\n\t\t\t\t\t// If it's been disabled, return early.\n\t\t\t\t\tif (!this._isEnabled) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the time limits.\n\t\t\t\t\tthis.setTimeLimits({ minTime, maxTime });\n\n\t\t\t\t\t// Set the yaw and pitch limits.\n\t\t\t\t\tthis.setYawPitchLimits();\n\n\t\t\t\t\t// Set higher label weight for the followId.\n\t\t\t\t\tthis.setLabelWeight(this.followId);\n\n\t\t\t\t\t// Update occluded entities.\n\t\t\t\t\tthis.updateOccludedEntities();\n\n\t\t\t\t\t// Make sure target is not clickable\n\t\t\t\t\tthis.setTargetNotClickable(this.targetId);\n\n\t\t\t\t\t// Hide content panel of we're on mobile.\n\t\t\t\t\tAppUtils.isMobile() && this.app.getComponent('contentPanel')?.hide();\n\n\t\t\t\t\t// Hide the search.\n\t\t\t\t\tthis.hideSearch();\n\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.catch(e => e);\n\t\t};\n\n\t\t// If viewOptionsBlock is already loaded, trigger animation, otherwise wait for it to load.\n\t\tconst { isLoaded, onLoaded } = this.app.getComponent('viewOptionsBlock');\n\t\tisLoaded ? startAnimation() : onLoaded.push(startAnimation);\n\t}\n\n\t/**\n\t * Stop the follow and reset the state.\n\t */\n\tunfollow() {\n\t\tconst { previousRoute, currentView } = this.app.getManager('router');\n\t\tconst { params } = previousRoute || {};\n\t\tconst { spaceObject: prevTargetId } = params || {};\n\n\t\t// Reset the toast.\n\t\tthis.setToastContent({ reset: true });\n\n\t\t// Reset label weights.\n\t\tthis.setLabelWeight(this.followId, true);\n\n\t\t// Reset occluded entities\n\t\tthis.updateOccludedEntities({ reset: true });\n\n\t\t// Reset target clickable.\n\t\tthis.setTargetNotClickable(prevTargetId, true);\n\n\t\t// Remove parentChanged callbacks.\n\t\tconst prevTargetEntity = this.app.scene.get(prevTargetId);\n\t\tthis.setParentsChangedCallbacks({ targetEntity: prevTargetEntity, reset: true });\n\n\t\t// Reset follow vars.\n\t\tthis.setFollowVars(null);\n\n\t\t// Reset search options\n\t\tthis.setSearchOptions({ reset: true });\n\n\t\t// Stop observing the body for offset class changes.\n\t\tthis._offsetObserver.disconnect();\n\n\t\t// Stop observing the body for resize changes.\n\t\tthis._resizeObserver.disconnect();\n\t}\n\n\t/**\n\t * There are 2 animations that occur simultaneously.\n\t * The first is animating the position, alignment, and parenting of the sum parent.\n\t * The second is calling followEntity from the camera manager.\n\t * @param {number} duration\n\t * @returns {Promise<boolean>}\n\t */\n\tanimateCamera(duration) {\n\t\t// Clear controllers.\n\t\tthis._sumParent.clearControllers();\n\n\t\t// Calculate the sumParent distance according to the target entity's extents radius\n\t\tconst sumParentDist = this.targetEntity?.getExtentsRadius() || 0.1;\n\n\t\t// Add a position sum controller to the sumParent, using the target and follow entities\n\t\tconst psController = this._sumParent.addControllerByClass(PositionSumController);\n\t\tpsController.addEntity(this.targetId, 1, 0);\n\t\tpsController.addEntity(this.followId, 0, -sumParentDist);\n\n\t\t// Add an align controller to the camLockParent, using the source entity\n\t\tconst alignController = this._sumParent.addControllerByClass(Pioneer.AlignController);\n\t\talignController.setPrimaryAlignType('point');\n\t\talignController.setPrimaryAxis(Pioneer.Vector3.YAxis);\n\t\talignController.setPrimaryTargetEntity(this.targetId);\n\n\t\t// Add and setup the transition controller.\n\t\tconst transitionController = this._sumParent.addControllerByClass(Pioneer.TransitionController);\n\t\ttransitionController.setTransitionTime(duration);\n\t\ttransitionController.setParent(this.targetId);\n\n\t\tconst { _easeOutExpoTransition: transitionFunction } = this.app.cameraScripts;\n\t\ttransitionController.setTransitionFunction(transitionFunction);\n\n\t\t// Call followEntity\n\t\tconst camManager = this.app.getManager('camera');\n\t\treturn camManager.followTheEntity(this.targetId, this.followId, this._sumParent.getName(), duration);\n\t}\n\n\n\t/**\n\t * When the parent of the followEntity changes, we need to update the sumParent.\n\t * @param {object} options\n\t * @param {Entity} options.targetEntity\n\t * @param {boolean} options.reset\n\t */\n\tsetParentsChangedCallbacks({ targetEntity = this.targetEntity, reset = false } = {}) {\n\t\tif (reset) {\n\t\t\t// Remove the parent changed callback for the targetEntity.\n\t\t\ttargetEntity?.removeParentChangedCallback(this.updateOccludedEntities);\n\t\t\tthis.followEntity?.removeParentChangedCallback(this.updateOccludedEntities);\n\t\t\treturn;\n\t\t}\n\n\t\t// Set the parent changed callback for the targetEntity.\n\t\ttargetEntity?.addParentChangedCallback(this.updateOccludedEntities);\n\t\tthis.followEntity?.addParentChangedCallback(this.updateOccludedEntities);\n\t}\n\n\t/**\n\t * Sets the label weight to high value or previous value\n\t * @param {string} id\n\t * @param {boolean} resetToPrevious\n\t * @param {string} weight\n\t */\n\tsetLabelWeight(id, resetToPrevious = false, weight = '201') {\n\t\tconst labelManager = this.app.getManager('label');\n\t\tconst currWeight = labelManager.getWeight(id);\n\n\t\t// Create the weight if it doesn't exist.\n\t\tif (currWeight === 0) {\n\t\t\tlabelManager._weights[id] = {};\n\t\t}\n\n\t\tif (resetToPrevious) {\n\t\t\tif (this._prevValues.weights[id]) {\n\t\t\t\tlabelManager._weights[id].weight = this._prevValues.weights[id];\n\t\t\t\tdelete this._prevValues.weights[id];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlabelManager._weights[id].weight = weight;\n\t\t\tthis._prevValues.weights[id] = currWeight;\n\t\t}\n\t}\n\n\t/**\n\t * Update the occluded and unnoccluded entities.\n\t * @param {object} options\n\t * @param {boolean} options.reset\n\t */\n\tupdateOccludedEntities({ reset = false } = {}) {\n\t\tconst entitiesToUnocclude = !reset && this.getEntitiesToUnocclude();\n\t\tthis.setOcclusionProps(entitiesToUnocclude);\n\t}\n\n\t/**\n\t * Determine which entities should not be occluding.\n\t * @returns {string[]}\n\t */\n\tgetEntitiesToUnocclude() {\n\t\tconst followParent = this.followEntity?.getParent()?.getName();\n\t\tconst targetParent = this.app.scene.get(this.targetId)?.getParent()?.getName();\n\t\tconst entitiesToSet = [this.followId, followParent, this.targetId, targetParent];\n\n\t\t// Return unique entities.\n\t\treturn [...new Set(entitiesToSet)].filter(Boolean);\n\t}\n\n\t/**\n\t * Store the canOcclude value for the entity, then set it to false.\n\t * If resetting, set the canOcclude value back to the stored value.\n\t * @param {string[]} entitiesToUnocclude\n\t */\n\tsetOcclusionProps(entitiesToUnocclude) {\n\t\tconst { occlusion } = this._prevValues;\n\n\t\t// Reset all stored occlusion values.\n\t\tObject.keys(occlusion).forEach(entityId => {\n\t\t\tconst entity = this.app.scene.get(entityId);\n\t\t\tentity?.setCanOcclude(occlusion[entityId]);\n\t\t});\n\n\t\t// Clear the occlusion object.\n\t\tthis._prevValues.occlusion = {};\n\n\t\t// Store the canOcclude value for the entity, then set it to false.\n\t\tentitiesToUnocclude?.length && entitiesToUnocclude.forEach(entityId => {\n\t\t\tconst entity = this.app.scene.get(entityId);\n\t\t\tif (!entity) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Store the canOcclude value.\n\t\t\tthis._prevValues.occlusion[entityId] = entity.canOcclude();\n\n\t\t\t// Set the canOcclude value to false.\n\t\t\tentity.setCanOcclude(false);\n\t\t});\n\t}\n\n\t/**\n\t * The current target should not be clickable as the follow target.\n\t * @param {string} entityId\n\t * @param {boolean} resetToPrevious\n\t */\n\tsetTargetNotClickable(entityId, resetToPrevious = false) {\n\t\tconst labelManager = this.app.getManager('label');\n\t\tconst label = labelManager._labels[entityId];\n\t\tif (!label) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { labelsClickable } = this._prevValues;\n\n\t\tif (resetToPrevious) {\n\t\t\tif (labelsClickable[entityId] !== undefined) {\n\t\t\t\tlabelManager.setLabelClickable(entityId, labelsClickable[entityId]);\n\t\t\t\tdelete labelsClickable[entityId];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Make sure the label is not clickable.\n\t\t\tlabelsClickable[entityId] = label.isClickable;\n\t\t\tlabelManager.setLabelClickable(entityId, false);\n\t\t}\n\t}\n\n\t/**\n\t * Create a reframing element.\n\t */\n\t_createReframeElement() {\n\t\tconst { staticElement } = this.app;\n\n\t\tconst elementExists = staticElement.querySelector('.follow-reframe');\n\t\tif (elementExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._reframeElement = document.createElement('div');\n\t\tthis._reframeElement.classList.add('follow-reframe');\n\n\t\tstaticElement.appendChild(this._reframeElement);\n\t}\n\n\t/**\n\t * Create the camLockParent entity.\n\t * @returns {Entity}\n\t */\n\t_createSumParent() {\n\t\tconst sumParentName = 'follow_sum_parent';\n\n\t\t// Create the between position entity.\n\t\tconst sumParentEntity = Entity.createFromOptions(sumParentName, { parents: [] }, this.app.scene);\n\n\t\t// Make sure it's positioned at zero (the source).\n\t\tsumParentEntity.setPosition(Pioneer.Vector3.Zero);\n\t\tsumParentEntity.setOrientation(Pioneer.Quaternion.Identity);\n\n\t\treturn sumParentEntity;\n\t}\n\n\n\t/**\n\t * Appends the search component element to the optionElement.\n\t * @param {HTMLElement} optionElement\n\t */\n\tinitSearch(optionElement) {\n\t\tif (!this.search) {\n\t\t\tthis.search = this.app.getComponent('cameraFollowSearch');\n\n\t\t\t// Add a listener to the search element so we can catch the event before it bubbles up.\n\t\t\tthis.search.element.addEventListener('click', e => {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\n\t\t\t// Set the placeholder text.\n\t\t\tconst { placeholder } = this._options;\n\t\t\tconst { input: searchInput } = this.search._children;\n\t\t\tsearchInput && searchInput.setAttribute('placeholder', placeholder);\n\n\t\t\t// Set the default info text.\n\t\t\tconst defaultInfo = 'related';\n\t\t\tthis.search._config.infoText.default = defaultInfo;\n\t\t\tthis.search.setState({ searchInfo: defaultInfo });\n\t\t}\n\n\t\t// Append the search element to the optionElement if passed.\n\t\tif (optionElement) {\n\t\t\toptionElement.appendChild(this.search.element);\n\t\t\tthis.search.setParent(optionElement);\n\t\t}\n\t}\n\n\t/**\n\t * Show and open the search component.\n\t */\n\tshowSearch() {\n\t\tthis.stopHideTimeout();\n\t\tthis.search?.show();\n\t\tthis.search?.open();\n\t}\n\n\t/**\n\t * Hide and close the search component.\n\t */\n\thideSearch() {\n\t\tthis.search?.hide();\n\t\tthis.search?.close();\n\t}\n\n\t/**\n\t * Trigger radio button selection in viewOptionsBlock once it's loaded.\n\t */\n\ttriggerViewOptionUpdate() {\n\t\tconst viewOptionsBlock = this.app.getComponent('viewOptionsBlock');\n\t\tconst { isLoaded, onLoaded } = viewOptionsBlock;\n\n\t\tconst triggerSelection = () => {\n\t\t\tconst { _currentView: currentSelection, selectCameraView, setOptionInnerHTML } = viewOptionsBlock;\n\t\t\tcurrentSelection !== 'cameraFollow' && selectCameraView('cameraFollow');\n\t\t\t// Update the inner HTML.\n\t\t\tsetOptionInnerHTML('cameraFollow', this.followInnerHtml);\n\t\t};\n\n\t\t// If viewOptionsBlock is already loaded, trigger radio button selection.\n\t\tisLoaded ? triggerSelection() : onLoaded.push(triggerSelection);\n\t}\n\n\t/**\n\t * Set the previous camera view return function.\n\t */\n\tsetReturnToPreviousCamView() {\n\t\t// Set reference to previous view if it's not already cameraFollow\n\t\tconst viewOptionsBlock = this.app.getComponent('viewOptionsBlock');\n\t\tconst { _currentView: prevView } = viewOptionsBlock;\n\t\tif (prevView !== 'cameraFollow') {\n\t\t\tconst { optionTitle } = viewOptionsBlock._viewOptionsList.find(({ id }) => id === prevView) || {};\n\n\t\t\t// Set function to return to previous view.\n\t\t\tthis._returnToPreviousCamView = () => viewOptionsBlock.selectCameraView(optionTitle);\n\t\t}\n\t}\n\n\t/**\n\t * Navigate to the previous camera view and reset the function to null.\n\t */\n\tgoToPreviousCamView() {\n\t\ttypeof this._returnToPreviousCamView === 'function' && this._returnToPreviousCamView();\n\t\tthis._returnToPreviousCamView = null;\n\t}\n\n\t/**\n\t * Sets time limits.\n\t * @param {object} params\n\t * @param {import('moment').Moment} params.minTime\n\t * @param {import('moment').Moment} params.maxTime\n\t * @param {boolean} params.reset\n\t */\n\tsetTimeLimits({ minTime, maxTime, reset = false } = {}) {\n\t\tconst timeManager = this.app.getManager('time');\n\n\t\tif (!reset) {\n\t\t\t// Store the current time limits.\n\t\t\tconst { min, max } = timeManager.getLimits();\n\t\t\tthis._prevValues.timeLimits = { min, max };\n\n\t\t\t// Set time limits.\n\t\t\ttimeManager.setMin(minTime);\n\t\t\ttimeManager.setMax(maxTime);\n\t\t}\n\t\telse {\n\t\t\t// Reset the time limits.\n\t\t\tconst { min, max } = this._prevValues.timeLimits;\n\n\t\t\tif (min !== null && max !== null) {\n\t\t\t\ttimeManager.setMin(min);\n\t\t\t\ttimeManager.setMax(max);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Set the yaw and pitch limits for the orbit controller.\n\t */\n\tsetYawPitchLimits() {\n\t\tconst isOffsetRight = document.body.classList.contains('offset-right');\n\t\tconst isOffsetUp = document.body.classList.contains('offset-up');\n\n\t\tconst cameraEntity = this.app.scene.get('camera');\n\t\t// Camera field of view.\n\t\tconst camComponent = cameraEntity.getComponentByType('camera');\n\t\tconst hFov = camComponent.getHorizontalFieldOfView();\n\t\tconst vFov = camComponent.getVerticalFieldOfView();\n\t\tconst orbitController = cameraEntity.getControllerByType('orbit');\n\n\t\tif (!orbitController) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the content is expanded, we need to know if it's offset vertically of horizontally.\n\t\tconst yawOffset = isOffsetRight ? hFov * 0.05 : 0;\n\t\tconst pitchOffset = isOffsetUp ? vFov * 0.2 : 0;\n\n\t\t// YaW center-point is -Math.PI/2\n\t\tconst yawCP = Math.PI * -0.5;\n\t\tconst yawLimitDiff = hFov * 0.45;\n\t\tconst pitchLimitDiff = vFov * 0.4;\n\n\t\tconst yawMin = yawCP - yawLimitDiff + yawOffset;\n\t\tconst yawMax = yawCP + yawLimitDiff - yawOffset;\n\t\tconst pitchMin = -pitchLimitDiff + pitchOffset;\n\t\tconst pitchMax = pitchLimitDiff - pitchOffset;\n\n\t\torbitController.setYawAngleLimits(new Pioneer.Interval(yawMin, yawMax));\n\t\torbitController.setPitchAngleLimits(new Pioneer.Interval(pitchMin, pitchMax));\n\t}\n\n\t/**\n\t * Set specific search options for current target.\n\t * @param {object} options\n\t * @param {string} options.targetId\n\t * @param {string} options.followId\n\t * @param {boolean} options.reset\n\t */\n\tasync setSearchOptions({ targetId = this.targetId, followId = this.followId, reset = false } = {}) {\n\t\tif (reset) {\n\t\t\t// Set search excludeResults list.\n\t\t\tthis.search?.setExcludeResults([]);\n\t\t\treturn;\n\t\t}\n\n\t\t// Await entities.\n\t\tawait this.entitiesInPlace();\n\n\t\t// Determine entity list.\n\t\tconst entityList = [targetId, followId].filter(Boolean);\n\n\t\tconst { maxFeatured } = this._options;\n\t\t// Build list of featured suggestions.\n\t\tconst allRelated = [];\n\n\t\t// Get the parent/ancestor and featured moon details at the current time if available.\n\t\tconst timeManager = this.app.getManager('time');\n\t\tconst time = timeManager.getTime();\n\t\tconst etTime = timeManager.momentToET(time);\n\t\tconst targetEntity = this.targetEntity || this.app.scene.get(targetId);\n\n\t\tconst ancestorId = this.followEntity\n\t\t\t? targetEntity.getLowestCommonAncestorAtTime(this.followEntity, etTime)?.getName()\n\t\t\t: targetEntity.getParentAtTime(etTime);\n\n\t\tconst contentManager = this.app.getManager('content');\n\t\tconst { featuredMoons = [] } = ancestorId ? await contentManager.getEntityDesc(ancestorId).catch(() => ({})) : {};\n\n\t\t// After the await, return early if no entities or if we're no longer enabled.\n\t\tif (!entityList.length || !this.isEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tallRelated.push(ancestorId, ...featuredMoons);\n\n\t\t// Get the entity description from the current view.\n\t\tconst { currentView } = this.app.getManager('router');\n\t\tconst { _entityDesc, _eventDesc } = this.app.getView(currentView);\n\t\tconst { related: descRelated = [] } = _entityDesc || {};\n\t\tconst { related: eventRelated = [] } = _eventDesc || {};\n\t\tallRelated.push(...descRelated, ...eventRelated);\n\n\t\t// Always add the sun at the end.\n\t\tallRelated.push('sun');\n\n\t\t// Remove duplicates.\n\t\tconst uniqueRelated = [...new Set(allRelated)];\n\n\t\t// Remove the targetId and followId from the list.\n\t\tconst filteredRelated = uniqueRelated.filter(entityName => ![targetId, followId].includes(entityName));\n\n\t\t// Limit the number of featured items.\n\t\tconst limitedRelated = filteredRelated.slice(0, maxFeatured);\n\n\t\t// Map to text and url.\n\t\tconst featuredItems = limitedRelated.map(entityName => {\n\t\t\tconst { id, iauName, displayName } = this.app.getManager('content')?.getEntityInfo(entityName) || {};\n\t\t\tconst text = displayName || iauName;\n\n\t\t\t// Rreturn false if no id or text.\n\t\t\tif (!id || !text) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn { text, url: `/${id}` };\n\t\t}).filter(Boolean);\n\n\t\t// Set search excludeResults list.\n\t\tthis.search?.setExcludeResults(entityList);\n\n\t\t// Set search featured suggestions.\n\t\tthis.search?.setupFeaturedSuggestion(featuredItems);\n\t}\n\n\t/**\n\t * Awaits for target and follow entities to be in place.\n\t * Maybe be required multiple times, as some functions are called from different places.\n\t */\n\tasync entitiesInPlace() {\n\t\tconst entityList = [this.targetId, this.followId].filter(Boolean);\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(this.app.scene, entityList);\n\t}\n\n\t/**\n\t * Update is called every frame.\n\t */\n\tupdate() {\n\t\tconst offset = this._pioneer.getInput().getDraggedOffset();\n\t\tconst isDragging = !offset.isZero();\n\t\tconst isFollowing = this.followId;\n\n\t\tif (!isFollowing) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Toggle the following-dragging class on the dynamicElement.\n\t\tconst { staticElement } = this.app;\n\t\tstaticElement.classList.toggle('follow-dragging', isDragging);\n\n\t\t// Show the toast again if dragging.\n\t\tisDragging && this.showToast();\n\t}\n\n\t/**\n\t * Sets whether the cam follow is enabled and ready to follow.\n\t * This will essentially show or hide the search component.\n\t * The boolean is also used in the link manager to determine how to handle links.\n\t * @param {boolean} enabled\n\t * @param {object} params\n\t * @param {boolean} params.resetCam\n\t * @param {boolean} params.resetLimits\n\t * @param {boolean} params.removeQueries\n\t */\n\tsetEnabled(enabled, { resetCam = true, resetLimits = true, removeQueries = true } = {}) {\n\t\tconst alreadyEnabled = this._isEnabled;\n\t\tthis._isEnabled = enabled;\n\n\t\tconst { currentRoute, currentView } = this.app.getManager('router');\n\t\tconst { params } = currentRoute || {};\n\n\t\t// Make sure the search is initialized.\n\t\t!this.search && this.initSearch();\n\n\t\tif (enabled) {\n\t\t\t// Set the return to previous view function\n\t\t\tthis.setReturnToPreviousCamView();\n\n\t\t\t// Determine whether to show the search.\n\t\t\tconst showSearch = !this.followId || alreadyEnabled;\n\t\t\tshowSearch && this.showSearch();\n\n\t\t\t// If we're already following something, we can trigger the hideSearch timeout.\n\t\t\tthis.followId && this.setHideTimeout();\n\t\t}\n\t\telse if (alreadyEnabled) {\n\t\t\t// Go to the previous cam view if resetCam\n\t\t\tresetCam && this.goToPreviousCamView();\n\n\t\t\t// If we're following something, unfollow it.\n\t\t\tthis.followId && this.unfollow();\n\n\t\t\t// Reset stored time limits\n\t\t\tresetLimits && this.setTimeLimits({ reset: true });\n\n\t\t\t// Remove the followId, tie and rate queries from the URL.\n\t\t\tremoveQueries && this.app.getManager('router').navigate({ __remove: ['followId', 'time', 'rate'] });\n\n\t\t\t// Hide the search\n\t\t\tthis.hideSearch();\n\n\t\t\t// Reset the viewOptionsBlock inner HTML.\n\t\t\tthis.app.getComponent('viewOptionsBlock').setOptionInnerHTML('cameraFollow', this.followInnerHtml);\n\t\t}\n\t}\n\n\t/**\n\t * Set a timeout to hide the search.\n\t */\n\tsetHideTimeout() {\n\t\t// Stop the existing timeout.\n\t\tthis.stopHideTimeout();\n\n\t\t// Set a new timeout.\n\t\tthis._hideSearchTimeout = setTimeout(() => {\n\t\t\tthis.hideSearch();\n\t\t\tthis.stopHideTimeout();\n\t\t}, this._options.hideSearchDelay);\n\t}\n\n\t/**\n\t * Stop the hide search timeout.\n\t */\n\tstopHideTimeout() {\n\t\tclearTimeout(this._hideSearchTimeout);\n\t\tthis._hideSearchTimeout = null;\n\t}\n\n\t/**\n\t * Gets the targetId from the current view.\n\t * @returns {string}\n\t */\n\tget targetId() {\n\t\tconst { currentView } = this.app.getManager('router');\n\t\tconst { _target } = this.app.getView(currentView);\n\t\treturn _target;\n\t}\n\n\t/**\n\t * Gets the target entity from the current view.\n\t * @returns {Entity}\n\t */\n\tget targetEntity() {\n\t\treturn this.app.scene.get(this.targetId);\n\t}\n\n\t/**\n\t * Returns the inner html for the follow name.\n\t * @returns {string}\n\t */\n\tget followInnerHtml() {\n\t\treturn this.followName ? `Following <span class='camera-follow-name'>${this.followName}</span>` : 'Follow Target';\n\t}\n\n\t/**\n\t * Gets whether the cam follow is enabled.\n\t * @returns {boolean}\n\t */\n\tget isEnabled() {\n\t\treturn this._isEnabled;\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport {\n\tCameras,\n\tSceneHelpers,\n\tPositionSumController\n} from 'pioneer-scripts';\nimport {\n\tBaseApp,\n\tBaseManager\n\t// CameraScripts\n} from '../internal';\n\n/**\n * Callback for 3D object selection.\n * @callback selectionCallback\n * @callback TransitionFunction\n * @param {Pioneer.Entity} entity\n */\n\n/**\n * Callback for after camera transition.\n * @callback transitionCallback\n * @param {string} id\n * @param {Pioneer.Scene} scene\n */\n\n/**\n * @typedef ContextBase\n * @property {string} id\n * @property {number} [context]\n */\n\n/**\n * @typedef {ContextBase & Object<string, any>} Context\n */\n\n/**\n * @typedef OrbitKeyframePositionOption\n * @property {number} frame\n * @property {Pioneer.Vector3} position\n * @property {string} relativeTo\n */\n\n/**\n * @typedef OrbitKeyframeUpOption\n * @property {number} frame\n * @property {Pioneer.Vector3} up\n */\n\n/**\n * @typedef OrbitKeyframeFocusOption\n * @property {number} frame\n * @property {string} name\n */\n\n/**\n * @typedef OrbitKeyframeOptions\n * @property {OrbitKeyframePositionOption[]} position\n * @property {OrbitKeyframeUpOption[]} up\n * @property {OrbitKeyframeFocusOption[]} focus\n */\n\n/**\n * Camera Manager class.\n * @extends BaseManager\n */\nexport class CameraManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app - Main app\n\t * @param {Pioneer.Scene} scene - The default scene to use\n\t */\n\tconstructor(app, scene) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * Default viewport.\n\t\t * @type {Pioneer.Viewport}\n\t\t */\n\t\tthis._viewport = null;\n\n\t\t/**\n\t\t * Default scene to use in the camera.\n\t\t * Can be overriden in some functions.\n\t\t * @type {Pioneer.Scene}\n\t\t */\n\t\tthis._defaultScene = scene;\n\n\t\t/**\n\t\t * The default camera Entity.\n\t\t * @type {Pioneer.Entity}\n\t\t */\n\t\tthis._cameraEntity = null;\n\n\t\t/**\n\t\t * // TODO: We should update this in this class\n\t\t * Camera target id.\n\t\t * @type {string}\n\t\t */\n\t\tthis._id = null;\n\n\t\t/**\n\t\t * // TODO: We should update this in this class\n\t\t * Camera previous target id.\n\t\t * @type {string}\n\t\t */\n\t\tthis._previousId = null;\n\n\t\t/**\n\t\t * Camera context object\n\t\t * @type {Context} - context.id is required\n\t\t */\n\t\tthis._context = { id: '' };\n\n\t\t/**\n\t\t * Internal variable to keep track of the transition status of the camera.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isTransitioning = false;\n\n\t\t/**\n\t\t * The default maximum distance for zooming out.\n\t\t * @type {number}\n\t\t */\n\t\tthis._defaultMaxDistance = 2.0e18;\n\n\t\t/**\n\t\t * A selection callback to be called on an object click after camera transition.\n\t\t * @type {selectionCallback}\n\t\t */\n\t\tthis._selectionCallback = null;\n\n\t\t/**\n\t\t * Dynamic environment map component.\n\t\t * @type {Pioneer.DynamicEnvironmentMapComponent}\n\t\t */\n\t\tthis._dynEnvMap = null;\n\n\t\t/**\n\t\t * Camera is in free fly.\n\t\t * @type {boolean}\n\t\t * @default\n\t\t */\n\t\tthis._isFreeFly = false;\n\n\t\t/**\n\t\t * Zoom sensitivity for zoom functions.\n\t\t * @type {{ click: number, hold: number }}\n\t\t * @default\n\t\t */\n\t\tthis._zoomSensitivity = {\n\t\t\tclick: 0.3,\n\t\t\thold: 0.1\n\t\t};\n\n\t\tthis._fullLightColor = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._shadowLightColor = new Pioneer.Color(0.15, 0.15, 0.15, 1);\n\n\t\tthis.bindFunctions(['zoomIn', 'zoomOut', 'addDynamicEnvMap', 'getShadowLightColor', 'getFullLightColor']);\n\t}\n\n\t/**\n\t * Creates camera and viewport.\n\t * @param {Pioneer.Scene} scene\n\t */\n\tcreateViewportAndCamera(scene) {\n\t\tif (scene) {\n\t\t\tthis._defaultScene = scene;\n\t\t}\n\n\t\t// Create main viewport\n\t\tif (this.pioneer.getViewport('main-viewport') === null) {\n\t\t\tthis._viewport = this.pioneer.addViewport('main-viewport');\n\t\t\tthis._viewport.getDiv().style.width = '100%';\n\t\t\tthis._viewport.getDiv().style.height = '100%';\n\t\t\tthis._viewport.getDiv().style.left = '0';\n\t\t\tthis._viewport.getDiv().style.top = '0';\n\t\t}\n\n\t\t// Create camera entity\n\t\tif (this._defaultScene.get('camera') === null) {\n\t\t\tthis._cameraEntity = this._defaultScene.addEntity('camera');\n\t\t}\n\n\t\t// Create camera component\n\t\tthis._cameraEntity.setOrientation(Pioneer.Quaternion.Identity);\n\t\tlet camera = /** @type {Pioneer.CameraComponent} */(this._cameraEntity.getComponentByType('camera'));\n\t\tif (camera === null) {\n\t\t\tcamera = /** @type {Pioneer.CameraComponent} */(this._cameraEntity.addComponent('camera'));\n\t\t}\n\t\tthis._viewport.setCamera(camera);\n\n\t\t// Create camera light component\n\t\tthis._cameraLight = /** @type {Pioneer.LightSourceComponent} */(this._cameraEntity.get('lightSource'));\n\t\tif (this._cameraLight === null) {\n\t\t\tthis._cameraLight = /** @type {Pioneer.LightSourceComponent} */(this._cameraEntity.addComponent('lightSource'));\n\t\t\tthis._cameraLight.setEnabled(false);\n\t\t\tthis.toggleCameraLight(true, this._shadowLightColor);\n\t\t}\n\n\t\t// Add dynamic env map\n\t\tif (this._dynEnvMap === null) {\n\t\t\tthis._dynEnvMap = /** @type {Pioneer.DynamicEnvironmentMapComponent} */(this._cameraEntity.addComponent('dynEnvMap'));\n\t\t}\n\t}\n\n\t/**\n\t * Returns camera context object.\n\t * @returns {object}\n\t */\n\tgetContext() {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * Return isTransitioning\n\t * @returns {boolean}\n\t */\n\tgetIsTransitioning() {\n\t\treturn this._isTransitioning;\n\t}\n\n\t/**\n\t * set isTransitioning\n\t * @param {boolean} isTransitioning\n\t */\n\tsetIsTransitioning(isTransitioning) {\n\t\tthis._isTransitioning = isTransitioning;\n\t}\n\n\t/**\n\t * Wait until transition completes\n\t *\t@returns {Promise<boolean>}\n\t */\n\twaitForTransitionComplete() {\n\t\treturn new Promise(resolve => {\n\t\t\tlet transitionCheckInterval = setInterval(() => {\n\t\t\t\t// Resolve once transition is complete\n\t\t\t\tif (!this._isTransitioning) {\n\t\t\t\t\tclearInterval(transitionCheckInterval);\n\t\t\t\t\ttransitionCheckInterval = null;\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t});\n\t}\n\n\t/**\n\t * Sets camera context.\n\t * @param {Object<string, any> & { id: string }} context - id required\n\t */\n\tsetContext(context) {\n\t\tthis._context = context;\n\t\tthis._previousId = this._id;\n\t\tthis._id = this._context.id;\n\n\t\tconst event = new CustomEvent('cameraupdate', { detail: { target: this._id, context: this._context } });\n\t\twindow.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Gets the current camera target id.\n\t * @returns {string}\n\t */\n\tgetCurrentId() {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Gets the shadow light color\n\t * @returns {Pioneer.Color} Returns the shadow light color\n\t */\n\tgetShadowLightColor() {\n\t\treturn this._shadowLightColor;\n\t}\n\n\t/**\n\t * Gets the full light color\n\t * @returns {Pioneer.Color} Returns the full light color\n\t */\n\tgetFullLightColor() {\n\t\treturn this._fullLightColor;\n\t}\n\n\t/**\n\t * Gets the default main scene.\n\t * @returns {Pioneer.Scene}\n\t */\n\tget defaultScene() {\n\t\treturn this._defaultScene;\n\t}\n\n\t/**\n\t * Gets the main camera entity.\n\t * @returns {Pioneer.Entity}\n\t */\n\tget cameraEntity() {\n\t\treturn this._cameraEntity;\n\t}\n\n\t/**\n\t * Gets default camera light\n\t * @returns {Pioneer.LightSourceComponent}\n\t */\n\tget cameraLight() {\n\t\treturn this._cameraLight;\n\t}\n\n\t/**\n\t * Gets dynamic environment map\n\t * @returns {Pioneer.DynamicEnvironmentMapComponent}\n\t */\n\tget dynamicEnvMap() {\n\t\treturn this._dynEnvMap;\n\t}\n\n\t/**\n\t * Toggles main camera light.\n\t * @param {boolean} active\n\t * @param {Pioneer.Color} color\n\t */\n\ttoggleCameraLight(active, color) {\n\t\tif (this._cameraLight !== null) {\n\t\t\tthis._cameraLight.setEnabled(active);\n\t\t\tif (color !== undefined) {\n\t\t\t\tthis._cameraLight.setColor(color);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the selection callback on an object click after camera transition.\n\t * @returns {Function}\n\t */\n\tgetSelectionCallback() {\n\t\treturn this._selectionCallback;\n\t}\n\n\t/**\n\t * Sets the selection callback to be called on an object click after camera transition.\n\t * @param {selectionCallback} callback - Callback function with parameter entity clicked\n\t */\n\tsetSelectionCallback(callback) {\n\t\tif (typeof callback === 'function') {\n\t\t\tthis._selectionCallback = callback;\n\t\t}\n\t}\n\n\t/**\n\t * Enter free fly mode.\n\t */\n\tenterFreeFly() {\n\t\tthis._isFreeFly = true;\n\t\tthis._cameraEntity.clearControllers();\n\t\tthis._cameraEntity.addController('freeFly');\n\t\tthis._cameraEntity.addController('look');\n\t\tthis._cameraEntity.addController('roll');\n\t}\n\n\t// /**\n\t//  * Exit free fly mode.\n\t//  */\n\t// async exitFreeFly() {\n\t// \tthis._isFreeFly = false;\n\t// \tswitch (this._context.context) {\n\t// \t\tcase CameraScripts.CONTEXT.CELESTIAL_OBJECT:\n\t// \t\t\tawait this.app.cameraScripts.goToCelestialObject(this._id);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.SPACECRAFT:\n\t// \t\t\tawait this.app.cameraScripts.goToSpacecraft(this._id);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.INSTRUMENT:\n\t// \t\t\tawait this.app.cameraScripts.goToInstrument(this._id);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.ALIGN_SPACECRAFT:\n\t// \t\t\tawait this.app.cameraScripts.alignSpacecraftPlanet(this._id);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.LOCATION:\n\t// \t\t\tawait this.app.cameraScripts.showLocation(this._id, '', '', this._context['options']);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.SYSTEM:\n\t// \t\t\tawait this.app.cameraScripts.goToSystem(this._id);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.LOOK_AT:\n\t// \t\t\tawait this.app.cameraScripts.spacecraftLookAtTarget(this._id, this._context['target']);\n\t// \t\t\tbreak;\n\t// \t\tcase CameraScripts.CONTEXT.LOCKED_ON:\n\t// \t\t\tawait this.app.cameraScripts.spacecraftLockedOnTarget(this._id, this._context['target']);\n\t// \t\t\tbreak;\n\t// \t\tdefault:\n\t// \t\t\tconsole.error('exitFreeFly: Unsupported camera context - ' + this._context.context);\n\t// \t\t\tbreak;\n\t// \t}\n\t// }\n\n\t/**\n\t * Toggle free fly mode.\n\t */\n\ttoggleFreeFly() {\n\t\tif (this._isFreeFly) {\n\t\t\tthis.exitFreeFly();\n\t\t}\n\t\telse {\n\t\t\tthis.enterFreeFly();\n\t\t}\n\t}\n\n\t/**\n\t * Internal go to entity function.\n\t * Must be called by all other camera transitions.\n\t * @param {string} id\n\t * @param {object} options\n\t * @param {Pioneer.Entity} [options.camera = undefined] - Camera entity to use\n\t * @param {Pioneer.Scene} [options.scene = undefined] - Scene to use\n\t * @param {Pioneer.Vector3} [options.destination = undefined] - Custom position vector for the camera\n\t * @param {number} [options.distance = undefined] - Specify distance from target\n\t * @param {boolean} [options.cinematic = false] - Activate cinematic component\n\t * @param {number} [options.minRadius = undefined] - Specify minimum distance from target\n\t * @param {number} [options.maxRadius = undefined] - Specify maximum distance from target\n\t * @param {number} [options.duration = undefined] - Duration of the transition\n\t * @param {Pioneer.Vector3} [options.destinationUp = undefined] - Custom up vector\n\t * @param {boolean} [options.zoom = true] - Activate zoom component\n\t * @param {boolean} [options.select = true] - Activate selection component\n\t * @param {boolean} [options.slowWhenCloseToParent = true] - Activate selection component\n\t * @param {boolean} [options.useSpheroidRadiusForDistance = false] - Activate selection component\n\t * @param {boolean} [options.roll = false] - Activate selection component\n\t * @param {OrbitKeyframeOptions} [options.keyframes = undefined] - Custom orbit key frames\n\t * @param {TransitionFunction} [options.transitionFunction = undefined]\n\t */\n\tasync goToEntity(id, {\n\t\tcamera = undefined, scene = undefined, destination = undefined, distance = undefined, cinematic = false, minRadius = 0.001, maxRadius = this._defaultMaxDistance, duration = 0.75, destinationUp = undefined, zoom = true, select = true,\n\t\tslowWhenCloseToParent = true, useSpheroidRadiusForDistance = false, roll = false, keyframes = undefined, transitionFunction = undefined\n\t} = {}) {\n\t\t// Pre transition checks\n\t\tconst cameraEntity = camera || this._cameraEntity;\n\t\tconst currentScene = scene || this._defaultScene;\n\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(currentScene, [id]);\n\n\t\tthis._isTransitioning = true;\n\t\tif (destination !== undefined) {\n\t\t\tconst checkDist = new Pioneer.Vector3();\n\t\t\tcheckDist.sub(cameraEntity.getPosition(), destination);\n\n\t\t\tconst cameraParent = cameraEntity.getParent();\n\t\t\tif (cameraParent !== null) {\n\t\t\t\tconst cameraParentName = cameraParent.getName();\n\n\t\t\t\t// Adjust duration\n\t\t\t\tif (!isNaN(checkDist.magnitude())) {\n\t\t\t\t\t// Use the distance to reach the new destination compared to the distance to target ratio\n\t\t\t\t\tconst factor = Pioneer.MathUtils.clamp01(checkDist.magnitude() / cameraEntity.getPosition().magnitude());\n\t\t\t\t\t// Do not use less than the original duration divided by 5\n\t\t\t\t\tduration = Math.max(duration / 5, duration * factor);\n\t\t\t\t}\n\n\t\t\t\t// If already at destination dont launch transition\n\t\t\t\tif (!isNaN(checkDist.magnitude()) && checkDist.magnitude() <= 0.001 && id === cameraParentName) {\n\t\t\t\t\tthis._isTransitioning = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t// Run through keyframes\n\t\t\tif (keyframes !== undefined) {\n\t\t\t\t// Setup the orbit keyframe controller\n\t\t\t\tcameraEntity.clearControllers();\n\t\t\t\tconst orbitKeyframe = /** @type {Pioneer.OrbitKeyframeController} */(cameraEntity.addController('orbitKeyframe'));\n\t\t\t\tif (keyframes.position) {\n\t\t\t\t\tfor (let i = 0; i < keyframes.position.length; i++) {\n\t\t\t\t\t\tconst frameData = keyframes.position[i];\n\t\t\t\t\t\torbitKeyframe.setPositionKeyframe(frameData.frame, frameData.position, frameData.relativeTo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (keyframes.up) {\n\t\t\t\t\tfor (let i = 0; i < keyframes.up.length; i++) {\n\t\t\t\t\t\tconst frameData = keyframes.up[i];\n\t\t\t\t\t\torbitKeyframe.setUpKeyframe(frameData.frame, frameData.up);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (keyframes.focus) {\n\t\t\t\t\tfor (let i = 0; i < keyframes.focus.length; i++) {\n\t\t\t\t\t\tconst frameData = keyframes.focus[i];\n\t\t\t\t\t\torbitKeyframe.setFocusKeyframe(frameData.frame, frameData.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait orbitKeyframe.getEndPromise();\n\t\t\t\tcameraEntity.clearControllers();\n\t\t\t}\n\n\t\t\t// Go to entity\n\t\t\tawait Cameras.goToEntity(cameraEntity, currentScene.getEntity(id), {\n\t\t\t\tdestination,\n\t\t\t\tdistance,\n\t\t\t\tup: false,\n\t\t\t\tduration,\n\t\t\t\tdestinationUp,\n\t\t\t\tzoom,\n\t\t\t\ttransitionFunction\n\t\t\t});\n\n\t\t\t// Add a select controller for selection\n\t\t\tif (select) {\n\t\t\t\tconst selectController = /** @type {Pioneer.SelectController} */(cameraEntity.addController('select'));\n\t\t\t\t// Set callback on 3D object click\n\t\t\t\tif (this._selectionCallback !== null) {\n\t\t\t\t\tselectController.setCallback(this._selectionCallback);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst orbit = cameraEntity.get('orbit');\n\t\t\tif (orbit instanceof Pioneer.OrbitController) {\n\t\t\t\torbit.slowWhenCloseToParent(slowWhenCloseToParent);\n\t\t\t}\n\n\t\t\tconst zoomController = cameraEntity.get('zoom');\n\t\t\t// Zoom clamping\n\t\t\tif (zoomController) {\n\t\t\t\tif (zoomController instanceof Pioneer.ZoomController) {\n\t\t\t\t\tzoomController.setDistanceClamp(new Pioneer.Interval(minRadius, maxRadius));\n\t\t\t\t\tzoomController.setUseSpheroidRadiusForDistance(useSpheroidRadiusForDistance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (roll) {\n\t\t\t\tconst rollController = cameraEntity.get('roll');\n\t\t\t\tif (!(rollController instanceof Pioneer.RollController)) {\n\t\t\t\t\tcameraEntity.addController('roll');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cinematic controller\n\t\t\tif (cinematic) {\n\t\t\t\tconst align = cameraEntity.getControllerByType('align');\n\t\t\t\tconst spin = cameraEntity.addController('spin', undefined, align);\n\t\t\t\tif (spin instanceof Pioneer.SpinController) {\n\t\t\t\t\tspin.setAxis(Pioneer.Vector3.ZAxis, true);\n\t\t\t\t\tspin.setRate(0.01);\n\t\t\t\t\tspin.setUsingRealTime(true);\n\t\t\t\t\tspin.setRotatingPosition(true);\n\t\t\t\t}\n\t\t\t\tconst tap = cameraEntity.addController('tap');\n\t\t\t\tif (tap instanceof Pioneer.TapController) {\n\t\t\t\t\ttap.setTapCallback(() => {\n\t\t\t\t\t\tcameraEntity.removeController(spin);\n\t\t\t\t\t\tcameraEntity.removeController(tap);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis._isTransitioning = false;\n\t\t}\n\t}\n\n\t/**\n\t * Make camera follow the followId entity.\n\t * Assumes entities are in place.\n\t * @param {string} targetId\n\t * @param {string} followId\n\t * @param {string} sumParentId\n\t * @param {number} duration\n\t */\n\tasync followTheEntity(targetId, followId, sumParentId, duration) {\n\t\tconst targetEntity = this._defaultScene.getEntity(targetId);\n\t\tconst followEntity = this._defaultScene.getEntity(followId);\n\n\n\t\t// Clear controllers.\n\t\tthis.cameraEntity.clearControllers();\n\n\t\tconst dest = new Pioneer.Vector3();\n\n\t\t// Get norm vector from followEntity to target\n\t\ttargetEntity.getPositionRelativeToEntity(dest, Pioneer.Vector3.Zero, followEntity);\n\n\t\t/**\n\t\t * Calculate the up distance - it needs to be high enough to view the followed entity.\n\t\t * The tan of the angle is the extents radius divided by the distance.\n\t\t * The larger the extents radius, the further up the camera needs to be to see the followed entity.\n\t\t */\n\t\tconst camHeight = targetEntity.getExtentsRadius() * 1.25;\n\t\tconst distanceBetween = dest.magnitude();\n\t\tconst angleRadians = Math.atan(camHeight / distanceBetween);\n\n\t\tconst closestCamDistance = targetEntity.getExtentsRadius() * 5;\n\t\tconst camDistFromFollowed = distanceBetween + closestCamDistance;\n\t\tconst upDistance = Math.tan(angleRadians) * camDistFromFollowed;\n\n\n\t\tdest.normalize(dest);\n\n\n\t\tconst scUp = new Pioneer.Vector3(0, 0, 1);\n\n\t\tconst scParent = targetEntity.getParent();\n\t\tif (scParent) {\n\t\t\tscParent.getOrientation().getAxis(scUp, 2);\n\t\t\tif (scParent.getName() === followId) {\n\t\t\t\tconst objectOrbitOri = new Pioneer.Quaternion();\n\t\t\t\tconst dynController = /** @type {Pioneer.DynamoController} */(this.pioneer.get('main', followId, 'dynamo'));\n\n\t\t\t\t// If we have dynamo for the parent take the orbit orientation for the up vector.\n\t\t\t\tif (dynController) {\n\t\t\t\t\tdynController.getOrbitOrientation(objectOrbitOri, this.pioneer.getTime());\n\t\t\t\t\tobjectOrbitOri.getAxis(scUp, 2);\n\t\t\t\t}\n\n\t\t\t\t// Reset up vector if it's NaN\n\t\t\t\tscUp.isNaN() && scUp.copy(new Pioneer.Vector3(0, 0, 1));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Get parent up\n\t\t\t\tscParent.getOrientation().getAxis(scUp, 2);\n\t\t\t}\n\t\t}\n\t\tscUp.normalize(scUp);\n\n\t\t// If destination vector is too close to zero\n\t\tif (dest.magnitude() < 0.0001) {\n\t\t\ttargetEntity.getOrientation().getAxis(dest, 0);\n\t\t\tdest.normalize(dest);\n\t\t}\n\n\n\t\t/**\n\t\t * The up distance is related to the target entity's extents radius.\n\t\t * The larger the extents radius, the further up the camera needs to be to see the followed entity.\n\t\t */\n\n\t\t// Mult up by upDistance.\n\t\tscUp.mult(scUp, upDistance);\n\n\t\tdest.mult(dest, closestCamDistance);\n\n\t\t// Add up distance to dest.\n\t\tdest.add(dest, scUp);\n\n\t\tscUp.normalize(scUp);\n\n\t\tconst fixedController = this.cameraEntity.addControllerByClass(Pioneer.FixedController);\n\t\tfixedController.setPosition(dest);\n\n\t\t// Set the destination orientation for the end of the transition.\n\t\tconst destinationForward = new Pioneer.Vector3();\n\t\tconst destUp = new Pioneer.Vector3();\n\t\tdestinationForward.neg(dest);\n\t\tdestinationForward.normalize(destinationForward);\n\t\tdestUp.setNormalTo(destinationForward, scUp);\n\t\tconst orientation = new Pioneer.Quaternion();\n\t\torientation.setFromAxes(undefined, destinationForward, destUp);\n\t\tfixedController.setOrientation(orientation);\n\n\n\t\tCameras.focusOnEntity(this.cameraEntity, followEntity, { up: false });\n\n\n\t\t// Add and setup the transition controller.\n\t\tconst transitionController = this.cameraEntity.addControllerByClass(Pioneer.TransitionController);\n\t\ttransitionController.setTransitionTime(duration);\n\t\ttransitionController.setParent(sumParentId);\n\n\t\tconst { _easeOutExpoTransition: transitionFunction } = this.app.cameraScripts;\n\t\tif (transitionFunction) {\n\t\t\ttransitionController.setTransitionFunction(transitionFunction);\n\t\t}\n\t\tawait transitionController.getEndPromise();\n\n\t\t// Clear controllers.\n\t\tthis.cameraEntity.clearControllers();\n\n\t\t// Add orbit controller.\n\t\tconst orbitController = this.cameraEntity.addControllerByClass(Pioneer.OrbitController);\n\t\torbitController.setDragSensitivity(0.0005);\n\n\t\t// // Add fixedToParent, roll, and zoom controllers.\n\t\tthis.cameraEntity.addController('fixedToParent');\n\t\tthis.cameraEntity.addController('roll');\n\n\t\t// Determine zoom limits\n\t\tconst zoomCoeff = 10;\n\t\tconst zoomMin = targetEntity.getExtentsRadius();\n\t\tconst zoomMax = Math.max(targetEntity.getExtentsRadius() * zoomCoeff, followEntity.getExtentsRadius() * zoomCoeff, zoomMin * zoomCoeff);\n\t\tconst zoomInterval = new Pioneer.Interval(zoomMin, zoomMax);\n\n\t\t// Add zoom controller and set distance clamps.\n\t\tconst zoomController = this.cameraEntity.addController('zoom');\n\t\tzoomController.setDistanceClamp(zoomInterval);\n\n\t\t// Add select controller.\n\t\tconst selectController = /** @type {Pioneer.SelectController} */(this.cameraEntity.addController('select'));\n\t\t// Set callback on 3D object click\n\t\tif (this._selectionCallback !== null) {\n\t\t\tselectController.setCallback(this._selectionCallback);\n\t\t}\n\n\t\tCameras.focusOnEntity(this.cameraEntity, followEntity, { up: false });\n\t}\n\n\t/**\n\t * Currently just for the distance tool.\n\t * Transitions the camera to a position where we're focused on between entity,\n\t * and zoom out far enough to see the source and target.\n\t * @param {Pioneer.Entity} betweenEntity - the entity that the camera will focus on\n\t * @param {object} options - the options used to setup the camera\n\t * @param {number} [options.duration] - seconds to do the transition\n\t * @param {Pioneer.Vector3} [options.destination] - the location relative to the focus entity to transition to; if undefined it goes to the nearest spot from the camera's current position; this overrides distance\n\t * @param {Pioneer.Vector3} [options.destinationUp] - where the camera up vector ends up\n\t * @param {TransitionFunction} [options.transitionFunction] - a manual transition function to use\n\t * @param {Pioneer.Interval} [options.zoomInterval] - a min and max zoom\n\t * @returns {Promise<void>}\n\t */\n\tasync goToBetweenPos(betweenEntity, { duration, destination, destinationUp, transitionFunction, zoomInterval }) {\n\t\tconst cameraEntity = this._cameraEntity;\n\n\t\t// Set the destination position for the end of the transition.\n\t\tcameraEntity.clearControllers();\n\t\tconst fixedController = /** @type {Pioneer.FixedController} */(cameraEntity.addController('fixed'));\n\t\tfixedController.setPosition(destination);\n\n\t\t// Make sure orientation is so source entity is on top to match the UI panel.\n\t\tconst destinationForward = new Pioneer.Vector3();\n\t\tconst destUp = new Pioneer.Vector3();\n\t\tdestinationForward.neg(destination);\n\t\tdestinationForward.normalize(destinationForward);\n\t\tdestUp.setNormalTo(destinationForward, destinationUp);\n\t\tconst orientation = new Pioneer.Quaternion();\n\t\torientation.setFromAxes(undefined, destinationForward, destUp);\n\t\tfixedController.setOrientation(orientation);\n\n\t\tCameras.focusOnEntity(cameraEntity, betweenEntity, { up: false, orbiter: false });\n\n\t\t// Setup the transition.\n\t\tconst transitionController = /** @type {Pioneer.TransitionController} */(cameraEntity.addController('transition'));\n\t\ttransitionController.setTransitionTime(duration);\n\t\ttransitionController.setParent(betweenEntity.getName());\n\t\tif (transitionFunction) {\n\t\t\ttransitionController.setTransitionFunction(transitionFunction);\n\t\t}\n\t\tawait transitionController.getEndPromise();\n\n\t\tcameraEntity.clearControllers();\n\n\t\t// Add select controller.\n\t\tconst selectController = /** @type {Pioneer.SelectController} */(cameraEntity.addController('select'));\n\t\t// Set callback on 3D object click\n\t\tif (this._selectionCallback !== null) {\n\t\t\tselectController.setCallback(this._selectionCallback);\n\t\t}\n\n\t\t// Add orbit controller.\n\t\tcameraEntity.addController('orbit');\n\n\t\t// Add roll controller.\n\t\tcameraEntity.addController('roll');\n\n\t\t// Add zoom controller and set distance clamps.\n\t\tconst zoomController = /** @type {Pioneer.ZoomController} */(cameraEntity.addController('zoom'));\n\t\tzoomInterval && zoomController.setDistanceClamp(zoomInterval);\n\n\t\tCameras.focusOnEntity(cameraEntity, betweenEntity, { up: false, orbiter: false });\n\t}\n\n\t/**\n\t * Zoom camera according to some amount.\n\t * @param {number} zoomChange\n\t * @param {Pioneer.Entity} cameraEntity\n\t */\n\tzoom(zoomChange, cameraEntity = this._cameraEntity) {\n\t\tlet currentDistance = cameraEntity.getPosition().magnitude();\n\t\tif (Number.isNaN(currentDistance)) {\n\t\t\tcurrentDistance = 1.0;\n\t\t}\n\n\t\t// Update the current distance.\n\t\tcurrentDistance *= zoomChange;\n\n\t\t// Set the position from the current distance.\n\t\tconst currentPosition = Pioneer.Vector3.pool.get();\n\t\tcurrentPosition.normalize(cameraEntity.getPosition());\n\t\tcurrentPosition.mult(currentPosition, currentDistance);\n\t\tcameraEntity.setPosition(currentPosition);\n\t\tPioneer.Vector3.pool.release(currentPosition);\n\t}\n\n\t/**\n\t * Zoom camera in 1 step.\n\t * @param {boolean} [isContinuous=false] - Zoom continuously\n\t */\n\tzoomIn(isContinuous = false) {\n\t\tlet zoomChange = 1.0;\n\t\tconst zoomSensitivity = isContinuous ? this._zoomSensitivity.hold : this._zoomSensitivity.click;\n\t\tzoomChange /= Math.pow(2, zoomSensitivity);\n\t\tthis.zoom(zoomChange);\n\t}\n\n\t/**\n\t * Zoom camera out 1 step.\n\t * @param {boolean} [isContinuous=false] - Zoom continuously\n\t */\n\tzoomOut(isContinuous = false) {\n\t\tlet zoomChange = 1.0;\n\t\tconst zoomSensitivity = isContinuous ? this._zoomSensitivity.hold : this._zoomSensitivity.click;\n\t\tzoomChange *= Math.pow(2, zoomSensitivity);\n\t\tthis.zoom(zoomChange);\n\t}\n\n\t/**\n\t * Gets default max distance.\n\t * @returns {number}\n\t */\n\tget defaultMaxDistance() {\n\t\treturn this._defaultMaxDistance;\n\t}\n\n\t/**\n\t * Set default max distance.\n\t * @param {number} distance\n\t */\n\tset defaultMaxDistance(distance) {\n\t\tthis._defaultMaxDistance = distance;\n\t}\n\n\t/**\n\t * Adds the dynamic environment map to the entity model.\n\t * @param {Pioneer.Entity} entity\n\t */\n\taddDynamicEnvMap(entity) {\n\t\tif (!this.dynamicEnvMap) {\n\t\t\treturn;\n\t\t}\n\t\t// Activate dynamic env map on models\n\t\tconst model = /** @type {Pioneer.ModelComponent} */(entity.get('model'));\n\t\tif (model !== null) {\n\t\t\tmodel.setDynamicEnvironmentMapComponent(this.dynamicEnvMap);\n\t\t}\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport {\n\tCameras,\n\tSceneHelpers\n} from 'pioneer-scripts';\nimport {\n\tBaseApp,\n\tBaseManager,\n\tCameraManager\n} from '../internal';\n\n\n/**\n * Camera helper scripts class.\n * @extends BaseManager\n */\nexport class CameraScripts extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * @type {CameraManager}\n\t\t * @private\n\t\t */\n\t\tthis._cameraManager = null;\n\n\t\t/**\n\t\t * Stores custom system distances.\n\t\t * @type {object}\n\t\t */\n\t\tthis._customSystemDistances = {\n\t\t\tmercury: 425648,\n\t\t\tvenus: 862136,\n\t\t\tearth: 1040264,\n\t\t\tmars: 80000,\n\t\t\tjupiter: 7157638,\n\t\t\tsaturn: 4869142,\n\t\t\turanus: 1886367,\n\t\t\tneptune: 2407045,\n\t\t\t'134340_pluto': 122231,\n\t\t\t'136199_eris': 180309,\n\t\t\t'1_ceres': 87225,\n\t\t\t'136108_haumea': 126609,\n\t\t\t'136472_makemake': 118584\n\t\t};\n\n\t\t/**\n\t\t * Function that is called during a camera move that is using a custom transition function\n\t\t */\n\t\tthis._onCameraTransition = null;\n\n\t\tthis._easeInOutExpoTransition = this._easeInOutExpoTransition.bind(this);\n\t\tthis._easeOutExpoTransition = this._easeOutExpoTransition.bind(this);\n\t}\n\n\t/**\n\t * Setup the camera scripts with a camera manager.\n\t * @param {CameraManager} cameraManager\n\t */\n\tsetCameraManager(cameraManager) {\n\t\tthis._cameraManager = cameraManager;\n\t}\n\n\t/**\n\t * Gets Pioneer scene.\n\t * @returns {Pioneer.Scene}\n\t */\n\tget scene() {\n\t\treturn this._scene;\n\t}\n\n\t/**\n\t * Sets Pioneer scene.\n\t * @param {Pioneer.Scene} scene\n\t */\n\tset scene(scene) {\n\t\tthis._scene = scene;\n\t}\n\n\t/**\n\t * Gets the main camera entity.\n\t * @returns {Pioneer.Entity}\n\t */\n\tget cameraEntity() {\n\t\treturn this._cameraEntity;\n\t}\n\n\t/**\n\t * Sets the main camera entity.\n\t * @param {Pioneer.Entity} cameraEntity\n\t */\n\tset cameraEntity(cameraEntity) {\n\t\tthis._cameraEntity = cameraEntity;\n\t}\n\n\t/**\n\t * Get normal to ecliptic plane.\n\t * @param {Pioneer.Vector3} outNormal - The normal vector that will be modified\n\t * @param {string} id - Target entity id\n\t */\n\tgetNormalToEcliptic(outNormal, id) {\n\t\tconst objectOrbitOri = new Pioneer.Quaternion();\n\t\t/** @type {Pioneer.DynamoController} */(this._cameraManager.pioneer.get('main', id, 'dynamo')).getOrbitOrientation(objectOrbitOri, this._cameraManager.pioneer.getTime());\n\t\tobjectOrbitOri.getAxis(outNormal, 2);\n\t}\n\n\t/**\n\t * Returns true if the entity id has barycenter.\n\t * @param {string} id - The entity id.\n\t * @returns {boolean}\n\t */\n\tisBarycenter(id) {\n\t\tif (id.includes('_barycenter')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns a string stripped of the barycenter keyword.\n\t * @param {string} id - The entity id.\n\t * @returns {string}\n\t */\n\tremoveBarycenter(id) {\n\t\tif (this.isBarycenter(id)) {\n\t\t\treturn id.replace('_barycenter', '');\n\t\t}\n\t\treturn id;\n\t}\n\n\t/**\n\t * Go to a planet, sunny side and rotates around it\n\t * @param {string} id - Target entity id\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined] - Custom scene, default to main\n\t * @param {string} [options.starId = 'sun'] - A star id to include in the view\n\t * @param {boolean} [options.cinematic = true] - Cinematic mode\n\t * @param {number} [options.duration = 1.5] - Duration of transition\n\t * @param {number} [options.distance = 1.3] - Distance of the camera\n\t */\n\tasync goToCelestialObject(id, { scene = undefined, starId = 'sun', cinematic = true, duration = 1.5, distance = 1.3 } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.CELESTIAL_OBJECT });\n\n\t\tif (scene === undefined) {\n\t\t\tscene = this._scene;\n\t\t}\n\n\t\tconst planet = scene.getEntity(id);\n\t\tconst star = scene.getEntity(starId);\n\n\t\tlet dest = new Pioneer.Vector3();\n\t\tplanet.getPositionRelativeToEntity(dest, Pioneer.Vector3.Zero, star);\n\n\t\tif (dest.magnitude() === 0) { // If the magnitude is zero due to object-is-root or objects-overlap\n\t\t\tdest = new Pioneer.Vector3(0, 1, 0); // set the vector to be along the Y-Axis and allow rest of logic to continue calculation\n\t\t}\n\n\t\t// Get planet up\n\t\tconst planetUp = new Pioneer.Vector3();\n\t\tplanet.getOrientation().getAxis(planetUp, 2);\n\n\t\t// Calculate destination\n\t\tdest.neg(dest);\n\t\tdest.normalize(dest);\n\t\tlet radius = planet.getOcclusionRadius();\n\t\tconst spheroid = planet.getComponentByType('spheroid');\n\t\tif (spheroid !== null) {\n\t\t\tradius = /** @type {Pioneer.SpheroidComponent} */(planet.getComponentByType('spheroid')).getEquatorialRadius();\n\t\t}\n\t\tconst minRadius = 1.2 * radius;\n\n\t\t// Determine distance\n\t\tconst cameraOrientation = new Pioneer.Quaternion();\n\t\tcameraOrientation.setFromAxes(undefined, dest, planetUp);\n\t\tlet dist = Cameras.getDistanceToFitEntities(this._cameraEntity, cameraOrientation, planet, [planet]);\n\n\t\tdist *= distance;\n\t\tdest.mult(dest, dist);\n\n\n\t\t// Go to planet straight and then align camera with sun\n\t\tawait this._cameraManager.goToEntity(id, { distance: dist, duration: duration / 2 });\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, cinematic, minRadius, destinationUp: planetUp, duration: duration / 2 });\n\t}\n\n\t/**\n\t * Ease-out cam transition function\n\t * @param {Pioneer.Entity} entity\n\t * @param {Pioneer.Vector3} initialPosition\n\t * @param {Pioneer.Vector3} finalPosition\n\t * @param {Pioneer.Quaternion} initialOrientation\n\t * @param {Pioneer.Quaternion} finalOrientation\n\t * @param {number} u\n\t */\n\t_easeOutExpoTransition(entity, initialPosition, finalPosition, initialOrientation, finalOrientation, u) {\n\t\tconst position = Pioneer.Vector3.pool.get();\n\t\tconst orientation = Pioneer.Quaternion.pool.get();\n\n\t\t// Apply exponent ease-out function. // https://github.com/d3/d3-ease/tree/main/src\n\t\tconst e = 4;\n\t\tconst easedT = 1 - Math.pow(1 - u, e);\n\n\t\tposition.lerp(initialPosition, finalPosition, easedT);\n\t\torientation.slerp(initialOrientation, finalOrientation, easedT);\n\n\t\t// Call _onCameraTransition if exists.\n\t\tthis._onCameraTransition?.(easedT);\n\n\t\t// Set the new position and orientation.\n\t\tentity.setPosition(position);\n\t\tentity.setOrientation(orientation);\n\t\tPioneer.Vector3.pool.release(position);\n\t\tPioneer.Quaternion.pool.release(orientation);\n\t}\n\n\t/**\n\t * Ease in-out expo cam transition function - TODO: need a cleaner way to apply transition with just basic function code\n\t * @param {Pioneer.Entity} entity\n\t * @param {Pioneer.Vector3} initialPosition\n\t * @param {Pioneer.Vector3} finalPosition\n\t * @param {Pioneer.Quaternion} initialOrientation\n\t * @param {Pioneer.Quaternion} finalOrientation\n\t * @param {number} u\n\t */\n\t_easeInOutExpoTransition(entity, initialPosition, finalPosition, initialOrientation, finalOrientation, u) {\n\t\tconst position = Pioneer.Vector3.pool.get();\n\t\tconst orientation = Pioneer.Quaternion.pool.get();\n\n\t\t// Apply ease-in-out function. // https://github.com/d3/d3-ease/tree/main/src\n\t\tconst e = 4;\n\t\tconst easedT = ((u *= 2) <= 1 ? Math.pow(u, e) : 2 - Math.pow(2 - u, e)) / 2;\n\n\t\tposition.lerp(initialPosition, finalPosition, easedT);\n\t\torientation.slerp(initialOrientation, finalOrientation, easedT);\n\n\t\t// Call _onCameraTransition if exists.\n\t\tthis._onCameraTransition?.(easedT);\n\n\t\t// Set the new position and orientation.\n\t\tentity.setPosition(position);\n\t\tentity.setOrientation(orientation);\n\t\tPioneer.Vector3.pool.release(position);\n\t\tPioneer.Quaternion.pool.release(orientation);\n\t}\n\n\t/**\n\t * Go to spacecraft, with planet in background.\n\t * Or from Sun point of view if Sun is parent.\n\t * @param {string} id - Target entity id\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined] - Custom scene, default to main\n\t * @param {string} [options.starId = 'sun'] - A star id to include in the view\n\t * @param {string} [options.planeId = 'earth'] - A planet id used to calculate normal to ecliptic\n\t * @param {number} [options.distance = undefined] - Distance of the camera\n\t * @param {boolean} [options.cinematic = true] - Cinematic mode\n\t * @param {number} [options.duration = 1.5] - Duration of transition\n\t * @param {number} [options.verticalOffset=0] - Offset camera up/down along horizontal axis\n\t * @param {number} [options.horizontalOffset=0] - Offset camera left/right along vertical axis\n\t */\n\tasync goToSpacecraft(id, { scene = undefined, starId = 'sun', planeId = 'earth', distance = undefined, cinematic = true, duration = 1.5, verticalOffset = 0, horizontalOffset = 0 } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.SPACECRAFT });\n\n\t\t// Get default scene\n\t\tif (scene === undefined) {\n\t\t\tscene = this._scene;\n\t\t}\n\n\t\t// Get camera distance\n\t\tconst entityInfo = this._app.getManager('content').getEntityInfo(id);\n\t\tconst camDistance = entityInfo?.customDistance || distance;\n\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(scene, [id]);\n\n\t\tconst sc = scene.getEntity(id);\n\t\tconst scRadius = sc.getOcclusionRadius();\n\t\tconst minRadius = 1.2 * scRadius;\n\t\tconst dest = new Pioneer.Vector3();\n\t\tdest.normalize(sc.getPosition());\n\t\tconst scUp = new Pioneer.Vector3();\n\n\t\t// Todo: scParent is sometimes null. Why?\n\t\tconst scParent = sc.getParent();\n\t\t// If spacecraft parent is star\n\t\t// look at spacecraft from star perspective\n\t\tif (scParent) {\n\t\t\tif (scParent.getName() === starId && scene.get(planeId) !== null) {\n\t\t\t\tthis.getNormalToEcliptic(scUp, planeId);\n\t\t\t\tif (scUp.isNaN()) {\n\t\t\t\t\tscUp.copy(new Pioneer.Vector3(0, 0, 1));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Get parent up\n\t\t\t\tscParent.getOrientation().getAxis(scUp, 2);\n\t\t\t}\n\t\t}\n\t\tscUp.normalize(scUp);\n\n\t\t// If destination vector is too close to zero\n\t\tif (dest.magnitude() < 0.0001) {\n\t\t\tsc.getOrientation().getAxis(dest, 0);\n\t\t\tdest.normalize(dest);\n\t\t}\n\n\t\t// Cross between dest and planet up\n\t\tconst horizontal = new Pioneer.Vector3();\n\t\thorizontal.cross(dest, scUp);\n\t\thorizontal.normalize(horizontal);\n\n\t\t// Rotate fwd\n\t\tconst rotation = new Pioneer.Quaternion();\n\t\trotation.setFromAxisAngle(horizontal, Pioneer.MathUtils.degToRad(verticalOffset));\n\t\tdest.rotate(rotation, dest);\n\n\t\t// Rotate up\n\t\trotation.setFromAxisAngle(scUp, Pioneer.MathUtils.degToRad(horizontalOffset));\n\t\tdest.rotate(rotation, dest);\n\n\t\t// Calculate distance\n\t\tlet dist = 0.0;\n\t\tif (camDistance !== undefined) {\n\t\t\tdist = camDistance;\n\t\t}\n\t\telse {\n\t\t\tconst cameraOrientation = new Pioneer.Quaternion();\n\t\t\tcameraOrientation.setFromAxes(undefined, dest, scUp);\n\t\t\tconst distToFit = Cameras.getDistanceToFitEntities(this._cameraEntity, cameraOrientation, sc, [sc]);\n\t\t\tdist = distToFit * 1.3;\n\t\t}\n\n\t\tdest.mult(dest, dist);\n\n\t\t// Go to spacecraft and then align with parent or sun\n\t\tawait this._cameraManager.goToEntity(id, { distance: dist });\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, cinematic, minRadius, destinationUp: scUp, duration });\n\t}\n\n\t/**\n\t * Go to spacecraft, with planet in background.\n\t * Or from Sun point of view if Sun is parent.\n\t * @param {string} id - Target entity id\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined] - Custom scene, default to main\n\t * @param {number} [options.distance = undefined] - Distance of the camera\n\t * @param {number} [options.duration = 1.5] - Duration of transition\n\t * @param {string} [options.upVector = 'y-axis'] - Which axis of spacecraft to set up vector\n\t * @param {string} [options.forwardVector = 'x-axis'] - Which axis of spacecraft to set forward vector\n\t */\n\tasync goToInstrument(id, { scene = undefined, distance = undefined, duration = 1.5, upVector = 'z-axis', forwardVector = 'y-axis' } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.INSTRUMENT });\n\n\t\tif (scene === undefined) {\n\t\t\tscene = this._scene;\n\t\t}\n\n\t\t// Get camera distance\n\t\tconst entityInfo = this._app.getManager('content').getEntityInfo(id);\n\t\tconst camDistance = entityInfo?.customDistance || distance;\n\n\t\tconst instrument = scene.getEntity(id);\n\t\tconst spacecraft = instrument.getParent();\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(scene, [spacecraft.getName(), id]);\n\n\t\tconst iRadius = instrument.getOcclusionRadius();\n\t\tconst sRadius = spacecraft.getOcclusionRadius();\n\n\t\tconst minRadius = 1.2 * iRadius;\n\t\tconst dest = new Pioneer.Vector3();\n\t\tinstrument.getPositionRelativeToEntity(dest, Pioneer.Vector3.Zero, spacecraft);\n\n\t\t// Get parent forward\n\t\tconst forward = new Pioneer.Vector3();\n\t\tconst forwardVectorIndex = forwardVector.endsWith('y-axis')\n\t\t\t? 1\n\t\t\t: forwardVector.endsWith('z-axis')\n\t\t\t\t? 2\n\t\t\t\t: 0;\n\t\tspacecraft.getOrientation().getAxis(forward, forwardVectorIndex);\n\t\tif (forwardVector.startsWith('-')) {\n\t\t\tforward.mult(forward, -1);\n\t\t}\n\t\tdest.mult(forward, -1);\n\n\t\t// Get parent up\n\t\tconst scUp = new Pioneer.Vector3();\n\t\tlet upVectorIndex = forwardVector.endsWith('y-axis') ? 2 : 1;\n\t\tif (upVector.endsWith('x-axis')) {\n\t\t\tupVectorIndex = 0;\n\t\t}\n\t\telse if (upVector.endsWith('z-axis')) {\n\t\t\tupVectorIndex = 2;\n\t\t}\n\t\tspacecraft.getOrientation().getAxis(scUp, upVectorIndex);\n\t\tif (upVector.startsWith('-')) {\n\t\t\tscUp.mult(scUp, -1);\n\t\t}\n\n\t\t// Calculate distance\n\t\tlet dist = minRadius * 4.0;\n\t\tif (camDistance !== undefined) {\n\t\t\tdist = camDistance;\n\t\t}\n\t\tdest.mult(dest, dist);\n\n\t\t// Go to spacecraft and then align\n\t\tawait this._cameraManager.goToEntity(spacecraft.getName(), { destinationUp: scUp, distance: sRadius * 1.2 });\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, minRadius, destinationUp: scUp, duration });\n\t}\n\n\t/**\n\t * Compare two objects.\n\t * @param {string} left - Left object id\n\t * @param {string} right - Right object id\n\t * @param {object} options\n\t * @param {Pioneer.Entity} [options.cameraLeft = undefined]\n\t * @param {Pioneer.Entity} [options.cameraRight = undefined]\n\t * @param {Pioneer.Vector3} [options.cameraLeftPosition = undefined]\n\t * @param {Pioneer.Vector3} [options.cameraRightPosition = undefined]\n\t * @param {Pioneer.Vector3} [options.cameraUp = undefined]\n\t * @param {Pioneer.Scene} [options.scene = undefined]\n\t * @param {number} [options.minRadius = undefined]\n\t * @param {number} [options.maxRadius = undefined]\n\t * @param {number} [options.duration = 0.75]\n\t */\n\tasync compareObjects(left, right, { cameraLeft = undefined, cameraRight = undefined, cameraLeftPosition = undefined, cameraRightPosition = undefined, cameraUp = undefined, scene = undefined, minRadius = undefined, maxRadius = undefined, duration = 0.75 }) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id: left, context: CameraScripts.CONTEXT.COMPARE, to: right });\n\n\t\tconst event = new CustomEvent('cameracompare', { detail: { left, right } });\n\t\twindow.dispatchEvent(event);\n\n\t\tconst leftTransition = this._cameraManager.goToEntity(\n\t\t\tleft,\n\t\t\t{\n\t\t\t\tminRadius,\n\t\t\t\tmaxRadius,\n\t\t\t\tcamera: cameraLeft,\n\t\t\t\tdestination: cameraLeftPosition,\n\t\t\t\tdestinationUp: cameraUp,\n\t\t\t\tscene,\n\t\t\t\tselect: false,\n\t\t\t\tduration,\n\t\t\t\tzoom: true,\n\t\t\t\tcinematic: true\n\t\t\t}\n\t\t);\n\n\t\tconst rightTransition = this._cameraManager.goToEntity(\n\t\t\tright,\n\t\t\t{\n\t\t\t\tminRadius,\n\t\t\t\tmaxRadius,\n\t\t\t\tcamera: cameraRight,\n\t\t\t\tdestination: cameraRightPosition,\n\t\t\t\tdestinationUp: cameraUp,\n\t\t\t\tscene,\n\t\t\t\tselect: false,\n\t\t\t\tduration,\n\t\t\t\tzoom: true,\n\t\t\t\tcinematic: true\n\t\t\t}\n\t\t);\n\n\t\tawait Promise.all([leftTransition, rightTransition]);\n\t}\n\n\t/**\n\t * Show where object is located in the system.\n\t * @param {string} targetEntityName - Target entity id\n\t * @param {string} forwardEntityName - A parent id used to calculate normal to ecliptic or north pole\n\t * @param {string} upOrRightEntityName - An entity used to orient the up or right of the camera (depending on aspect ratio).\n\t * @param {string} [mode='northPole'] - Whether to have the forward be based on the north pole or the orbital plane normal of the forwardEntity ('northPole' or 'planeNormal').\n\t * @param {object} options\n\t * @param {number} [options.duration=1.5] - How long to do the transition\n\t * @param {string[]} [options.otherEntityNames=[]] - Other entities to include in the view.\n\t * @param {number} [options.distance=undefined] - Distance of the camera\n\t * @param {boolean} [options.rotateByScreenRatio=true] - Rotate up vector -90 degree if the view is wider than it is tall\n\t * @returns {Promise<void>}\n\t */\n\tasync showLocation(targetEntityName, forwardEntityName, upOrRightEntityName, mode = 'northPole', { duration = 2, otherEntityNames = [], distance = undefined, rotateByScreenRatio = true } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id: '', targetEntityName, context: CameraScripts.CONTEXT.LOCATION, options: { otherEntityNames } });\n\n\t\t// Get the various entities.\n\t\tconst targetEntity = this._scene.getEntity(targetEntityName);\n\t\tconst forwardEntity = this._scene.getEntity(forwardEntityName);\n\t\tconst upOrRightEntity = this._scene.getEntity(upOrRightEntityName);\n\t\tif (targetEntity === null || forwardEntity === null || upOrRightEntity === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Push all of the involved entities into a giant list. It'll be used for fitting them all into view.\n\t\tconst entities = [];\n\t\tentities.push(targetEntity);\n\t\tentities.push(forwardEntity);\n\t\tentities.push(upOrRightEntity);\n\t\tfor (let i = 0, l = otherEntityNames.length; i < l; i++) {\n\t\t\tconst otherEntity = this._scene.getEntity(otherEntityNames[i]);\n\t\t\tif (otherEntity !== null) {\n\t\t\t\tentities.push(otherEntity);\n\t\t\t}\n\t\t}\n\n\t\t// Get the final position direction.\n\t\tconst position = new Pioneer.Vector3();\n\t\tif (mode === 'northPole') {\n\t\t\tforwardEntity.getOrientation().getAxis(position, 2);\n\t\t}\n\t\telse if (mode === 'planeNormal') {\n\t\t\tposition.cross(forwardEntity.getPosition(), forwardEntity.getVelocity());\n\t\t\tposition.normalize(position);\n\t\t}\n\n\t\t// Get the forward vector.\n\t\tconst forward = new Pioneer.Vector3();\n\t\tforward.neg(position);\n\n\t\t// Get the up vector.\n\t\tconst up = new Pioneer.Vector3();\n\t\ttargetEntity.getPositionRelativeToEntity(up, Pioneer.Vector3.Zero, upOrRightEntity);\n\t\tup.normalize(up);\n\t\tup.setNormalTo(forward, up);\n\t\tup.neg(up);\n\n\t\t// If the view is wider than it is tall, rotate the up by -90 degrees.\n\t\tconst cameraComponent = /** @type {Pioneer.CameraComponent} */(this._cameraEntity.getComponentByType('camera'));\n\t\tif (rotateByScreenRatio && cameraComponent.getHorizontalFieldOfView() > cameraComponent.getVerticalFieldOfView()) {\n\t\t\tup.cross(up, forward);\n\t\t}\n\n\t\t// Set the orientation based on the forward and up vectors.\n\t\tconst orientation = new Pioneer.Quaternion();\n\t\torientation.setFromAxes(undefined, forward, up);\n\n\t\t// Using the orientation and entity list, set the position to a good distance to see all of the entities.\n\t\tlet dist = distance || Cameras.getDistanceToFitEntities(this._cameraEntity, orientation, targetEntity, entities);\n\t\t// If the view is taller than it is wide, increase distance.\n\t\tif (cameraComponent.getHorizontalFieldOfView() < cameraComponent.getVerticalFieldOfView()) {\n\t\t\tdist *= cameraComponent.getVerticalFieldOfView() * 1.3;\n\t\t}\n\t\tdist *= 2;\n\t\tposition.setMagnitude(position, dist);\n\n\t\t// If camera's parent is null, fly to target first.\n\t\tif (this._cameraEntity.getParent() === null) {\n\t\t\tawait this._cameraManager.goToEntity(targetEntityName, { distance: dist });\n\t\t}\n\n\t\t// Setup keyframes\n\t\tconst keyframes = /** @type {import('./managers/camera_manager').OrbitKeyframeOptions} */({\n\t\t\tup: [{ frame: duration, up }],\n\t\t\tposition: [{ frame: duration, position, relativeTo: targetEntity.getName() }],\n\t\t\tfocus: [{ frame: duration, name: targetEntityName }]\n\t\t});\n\n\t\tawait this._cameraManager.goToEntity(targetEntityName, { keyframes, destination: position, destinationUp: up, cinematic: false, duration: 0.2 });\n\t}\n\n\t/**\n\t * Align an object with another.\n\t * @param {string} targetEntityName - Camera's target\n\t * @param {string} focusEntityName - Entity to align with\n\t * @param {object} [options={}]\n\t * @param {number} [options.duration=1.5] - Duration for both transition and alignment\n\t * @param {number} [options.transitionDuration=undefined] - Duration of transition\n\t * @param {number} [options.alignDuration=undefined] - Duration of alignment\n\t * @param {number} [options.distance=1] - Distance from default position\n\t * @param {boolean} [options.cinematic=false]\n\t * @param {number} [options.verticalOffset=0] - Offset camera up/down along horizontal axis\n\t * @param {number} [options.horizontalOffset=0] - Offset camera left/right along vertical axis\n\t * @param {boolean} [options.useEase=false] - Use ease in transitions\n\t */\n\tasync alignObjects(targetEntityName, focusEntityName, { verticalOffset = 0, horizontalOffset = 0, duration = 1.5, transitionDuration = undefined, alignDuration = undefined, distance = 1, cinematic = false, useEase = true } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id: '', targetEntityName, context: CameraScripts.CONTEXT.ALIGN_OBJECTS, focus: focusEntityName });\n\n\t\tconst targetEntity = this._scene.getEntity(targetEntityName);\n\t\tconst focusEntity = this._scene.getEntity(focusEntityName);\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(this._scene, [targetEntityName, focusEntityName]);\n\n\t\tconst minRadius = targetEntity.getOcclusionRadius();\n\n\t\t// Get destination vector\n\t\tconst dest = new Pioneer.Vector3();\n\t\tconst time = this._cameraManager.pioneer.getTime();\n\t\ttargetEntity.getPositionRelativeToEntity(dest, Pioneer.Vector3.Zero, focusEntity, time);\n\t\tif (dest.isNaN()) {\n\t\t\tdest.copy(new Pioneer.Vector3(0, -1, 0));\n\t\t}\n\t\telse {\n\t\t\tdest.normalize(dest);\n\t\t}\n\n\t\tdest.mult(dest, distance);\n\n\t\t// Get up vector\n\t\tconst up = new Pioneer.Vector3();\n\t\tfocusEntity.getOrientation().getAxis(up, 2);\n\n\t\t// Cross between dest and planet up\n\t\tconst horizontal = new Pioneer.Vector3();\n\t\thorizontal.cross(dest, up);\n\t\thorizontal.normalize(horizontal);\n\n\t\t// Rotate fwd\n\t\tconst rotation = new Pioneer.Quaternion();\n\t\trotation.setFromAxisAngle(horizontal, Pioneer.MathUtils.degToRad(verticalOffset));\n\t\tdest.rotate(rotation, dest);\n\n\t\t// Rotate up\n\t\trotation.setFromAxisAngle(up, Pioneer.MathUtils.degToRad(horizontalOffset));\n\t\tdest.rotate(rotation, dest);\n\n\t\t// Go to focus entity first and then align target entity with it\n\t\tawait this._cameraManager.goToEntity(targetEntityName, { distance, destinationUp: up, duration: transitionDuration || duration * 0.5, transitionFunction: useEase ? this._easeOutExpoTransition : undefined });\n\t\tawait this._cameraManager.goToEntity(targetEntityName, { destination: dest, cinematic, minRadius, destinationUp: up, duration: alignDuration || duration * 0.5, transitionFunction: useEase ? this._easeOutExpoTransition : undefined });\n\t}\n\n\t/**\n\t * Align spacecraft and planet.\n\t * @param {string} id - Target entity id\n\t * @param {object} options\n\t * @param {number} [options.duration = 1.5] - Duration of transition\n\t * @param {number} [options.minRadius = 50]\n\t * @param {number} [options.distanceMultiplier = 3] - Multiply the parent's radius as distance\n\t */\n\tasync alignSpacecraftPlanet(id, { duration = 1.5, minRadius = 50, distanceMultiplier = 3 } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.ALIGN_SPACECRAFT });\n\n\t\tconst sc = this._scene.getEntity(id);\n\t\tlet planet = sc.getParent();\n\t\twhile (planet !== null && planet.getComponentByType('spheroid') === null && planet.getComponentByType('model') === null) {\n\t\t\tplanet = planet.getParent();\n\t\t}\n\n\t\tlet radius = planet.getOcclusionRadius();\n\t\tconst spheroid = planet.getComponentByType('spheroid');\n\t\tif (spheroid !== null) {\n\t\t\tradius = /** @type {Pioneer.SpheroidComponent} */(planet.getComponentByType('spheroid')).getEquatorialRadius();\n\t\t}\n\n\t\tconst dest = new Pioneer.Vector3();\n\t\tsc.getPositionRelativeToEntity(dest, Pioneer.Vector3.Zero, planet);\n\t\tdest.normalize(dest);\n\t\t// If destination vector is too close to zero\n\t\tif (dest.magnitude() < 0.0001) {\n\t\t\tsc.getOrientation().getAxis(dest, 0);\n\t\t\tdest.normalize(dest);\n\t\t}\n\t\tdest.mult(dest, Math.max(minRadius, distanceMultiplier * radius));\n\n\t\tconst planetUp = new Pioneer.Vector3();\n\t\tplanet.getOrientation().getAxis(planetUp, 2);\n\n\t\t// Go to parent first and then align object with parent\n\t\tawait this._cameraManager.goToEntity(planet.getName());\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, cinematic: false, minRadius: Math.min(radius, minRadius), destinationUp: planetUp, duration });\n\t}\n\n\t/**\n\t * View from side of entity.\n\t * @param {string} id\n\t * @param {object} [options={}]\n\t * @param {string} [options.planeId='earth']\n\t * @param {number} [options.distance=undefined]\n\t * @param {boolean} [options.cinematic=false]\n\t * @param {number} [options.duration=0.75]\n\t * @param {number} [options.verticalOffset=0]\n\t * @param {number} [options.horizontalOffset=0]\n\t * @param {string} [options.forwardVector='x-axis']\n\t * @param {string} [options.upVector=''] - Get up vector from position by default. Otherwise from parent's axis.\n\t */\n\tasync viewFromSide(id, { planeId = 'earth', distance = undefined, cinematic = false, duration = 0.75, verticalOffset = 0, horizontalOffset = 0, forwardVector = 'x-axis', upVector = '' } = {}) {\n\t\t// Entities\n\t\tconst targetEntity = this._scene.get(id);\n\t\tconst planeEntity = this._scene.get(planeId) || targetEntity.getParent();\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(this._scene, [id, planeId]);\n\n\t\tconst targetRadius = targetEntity.getOcclusionRadius();\n\t\tconst minRadius = 1.2 * targetRadius;\n\n\t\t// View from side\n\t\tconst dest = new Pioneer.Vector3();\n\t\tconst forward = new Pioneer.Vector3();\n\t\tlet forwardIndex = 0;\n\t\tif (forwardVector === 'z-axis') {\n\t\t\tforwardIndex = 2;\n\t\t}\n\t\telse if (forwardVector === 'y-axis') {\n\t\t\tforwardIndex = 1;\n\t\t}\n\t\ttargetEntity.getOrientation().getAxis(forward, forwardIndex);\n\t\tforward.normalize(forward);\n\t\tconst targetPosition = new Pioneer.Vector3();\n\t\ttargetEntity.getPositionRelativeToEntity(targetPosition, Pioneer.Vector3.Zero, planeEntity);\n\t\ttargetPosition.normalize(targetPosition);\n\t\tdest.cross(forward, targetPosition);\n\t\tdest.normalize(dest);\n\t\tdest.mult(dest, -1);\n\n\t\tconst up = new Pioneer.Vector3();\n\t\tif (upVector) {\n\t\t\t// Parent up\n\t\t\tlet upVectorIndex = 1;\n\t\t\tif (upVector.includes('x-axis')) {\n\t\t\t\tupVectorIndex = 0;\n\t\t\t}\n\t\t\telse if (upVector.includes('z-axis')) {\n\t\t\t\tupVectorIndex = 2;\n\t\t\t}\n\t\t\ttargetEntity.getOrientation().getAxis(up, upVectorIndex);\n\t\t\tif (upVector.startsWith('-')) {\n\t\t\t\tup.mult(up, -1);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Position up\n\t\t\ttargetEntity.getPositionRelativeToEntity(up, targetEntity, planeEntity);\n\t\t\tup.normalize(up);\n\t\t}\n\n\t\t// Horizontal\n\t\tconst horizontal = new Pioneer.Vector3();\n\t\thorizontal.cross(dest, up);\n\t\thorizontal.normalize(horizontal);\n\n\t\t// Make sure up is orthogonal\n\t\tup.cross(horizontal, dest);\n\n\t\t// Offset dest vector so target is below or above\n\t\tif (verticalOffset !== 0) {\n\t\t\tconst orientationOffset = new Pioneer.Quaternion();\n\t\t\tconst angleOffset = Pioneer.MathUtils.degToRad(verticalOffset);\n\t\t\torientationOffset.setFromAxisAngle(horizontal, angleOffset);\n\t\t\tdest.rotate(orientationOffset, dest);\n\t\t}\n\n\t\t// TODO: Optional: Update up after rotation\n\t\tup.cross(horizontal, dest);\n\n\t\t// Offset dest vector so target is on the left or right\n\t\tif (horizontalOffset !== 0) {\n\t\t\tconst orientationOffset = new Pioneer.Quaternion();\n\t\t\tconst angleOffset = Pioneer.MathUtils.degToRad(horizontalOffset);\n\t\t\torientationOffset.setFromAxisAngle(up, angleOffset);\n\t\t\tdest.rotate(orientationOffset, dest);\n\t\t}\n\n\t\t// Update horizontal axis\n\t\thorizontal.cross(dest, up);\n\t\thorizontal.normalize(horizontal);\n\n\t\t// Distance\n\t\tif (distance === undefined) {\n\t\t\tdest.mult(dest, 10 * targetRadius);\n\t\t}\n\t\telse {\n\t\t\tdest.mult(dest, distance);\n\t\t}\n\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, cinematic, minRadius, destinationUp: up, duration });\n\t}\n\n\t/**\n\t * Go to spacecraft look at a target.\n\t * @param {string} id - Spacecraft entity id\n\t * @param {string} target - Target entity id\n\t */\n\tasync spacecraftLookAtTarget(id, target) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.LOOK_AT, target });\n\t\t// TODO: Add function & params\n\t}\n\n\t/**\n\t * Go to spacecraft locked on a target.\n\t * @param {string} id - Spacecraft entity id\n\t * @param {string} target - Target entity id\n\t */\n\tasync spacecraftLockedOnTarget(id, target) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.LOCKED_ON, target });\n\t\t// TODO: Add function & params\n\t}\n\n\t/**\n\t * Go to a system sideway (looking at terminator line instead of sunny side).\n\t * @param {string} id\n\t * @param {object} options\n\t * @param {number} [options.distance = undefined] - Distance from the target\n\t * @param {number} [options.minDistance = 0] - Minimum distance the camera can be from target\n\t * @param {number} [options.duration = 1] - Duration of the transition and alignment\n\t * @param {string[]} [options.otherEntityNames = []] - Other entities to include in the view\n\t * @param {boolean} [options.includeChildren = true] - Include children in the view\n\t * @param {number} [options.angleInDegree = 0] - Angle of the camera\n\t * @param {boolean} [options.cinematic = false] - Cinematic mode\n\t */\n\tasync goToSystemSideway(id, { distance = undefined, minDistance = 0, duration = 1, otherEntityNames = [], includeChildren = true, angleInDegree = 0, cinematic = false } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.SYSTEM });\n\n\t\tconst systemObject = this._scene.getEntity(id);\n\n\t\t// Get min distance\n\t\tconst systemId = this.isBarycenter(id)\n\t\t\t? this.removeBarycenter(id)\n\t\t\t: id;\n\t\tconst minDist = systemId in this._customSystemDistances\n\t\t\t? this._customSystemDistances[systemId]\n\t\t\t: 0;\n\n\t\t// List entities that have to be displayed on screen\n\t\tconst entities = [systemObject];\n\t\tfor (let i = 0; i < otherEntityNames.length; i++) {\n\t\t\tentities.push(this._scene.getEntity(otherEntityNames[i]));\n\t\t}\n\t\tif (includeChildren) {\n\t\t\tfor (let i = 0; i < systemObject.getNumChildren(); i++) {\n\t\t\t\tconst child = systemObject.getChild(i);\n\t\t\t\t// Ignore camera\n\t\t\t\tif (child.getComponentByType('camera') !== null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Ignore spacecraft\n\t\t\t\tif (child.getName().startsWith('sc')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Ignore objects without valid positions\n\t\t\t\tif (child.getPosition().isNaN()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tentities.push(child);\n\t\t\t}\n\t\t}\n\n\t\t// Create an xyz frame from the object's velocity and position\n\t\t// Get y-axis\n\t\tconst yAxis = new Pioneer.Vector3();\n\t\tyAxis.normalize(systemObject.getVelocity());\n\n\t\t// Get x-axis\n\t\tconst xAxis = new Pioneer.Vector3();\n\t\txAxis.normalize(systemObject.getPosition());\n\n\t\t// Force x-axis to be normal to y-axis\n\t\txAxis.setNormalTo(yAxis, xAxis);\n\n\t\t// Get z-axis\n\t\tconst zAxis = new Pioneer.Vector3();\n\t\tzAxis.cross(xAxis, yAxis);\n\n\t\t// Get negative of y-axis + fraction of z-axis\n\t\tconst dest = new Pioneer.Vector3();\n\t\tdest.mult(yAxis, -1);\n\t\tdest.addMult(dest, zAxis, Math.tan(Pioneer.MathUtils.degToRad(angleInDegree)));\n\n\t\t// Determine min radius\n\t\tlet radius = systemObject.getOcclusionRadius();\n\t\tconst spheroid = /** @type {Pioneer.SpheroidComponent} */(systemObject.getComponentByType('spheroid'));\n\t\tif (spheroid !== null) {\n\t\t\tradius = spheroid.getEquatorialRadius();\n\t\t}\n\t\telse if (this.isBarycenter(id)) {\n\t\t\tconst newId = this.removeBarycenter(id);\n\t\t\tconst newSystemObject = this._scene.getEntity(newId);\n\t\t\tconst newSpheroid = /** @type {Pioneer.SpheroidComponent} */(newSystemObject.getComponentByType('spheroid'));\n\t\t\tif (spheroid !== null) {\n\t\t\t\tradius = newSpheroid.getEquatorialRadius();\n\t\t\t}\n\t\t}\n\t\tconst minRadius = 1.2 * radius;\n\n\t\t// Determine viewing distance\n\t\tlet dist = distance;\n\t\tif (dist === undefined) {\n\t\t\tconst cameraOrientation = new Pioneer.Quaternion();\n\t\t\tcameraOrientation.setFromAxes(xAxis, dest, undefined);\n\t\t\tdist = Cameras.getDistanceToFitEntities(this._cameraEntity, cameraOrientation, systemObject, entities);\n\t\t\tdist *= 1.3;\n\t\t}\n\t\tdist = Math.max(minDist, dist);\n\t\t// If the view is taller than it is wide, increase distance.\n\t\tconst cameraComponent = /** @type {Pioneer.CameraComponent} */(this._cameraEntity.getComponentByType('camera'));\n\t\tif (cameraComponent.getHorizontalFieldOfView() < cameraComponent.getVerticalFieldOfView()) {\n\t\t\tdist *= cameraComponent.getVerticalFieldOfView() * 1.3;\n\t\t}\n\t\tdest.setMagnitude(dest, dist);\n\n\t\t// Go to system view\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, cinematic, minRadius, destinationUp: zAxis, duration });\n\t}\n\n\t/**\n\t * Go to a system, sunny side and rotates around it\n\t * @param {string} id - Target entity id\n\t * @param {object} options\n\t * @param {number} [options.distance = undefined] - Distance from the target\n\t * @param {number} [options.angle = 25] - Angle of the camera\n\t * @param {number} [options.minDistance = 0] - Minimum distance the camera can be from target\n\t * @param {number} [options.duration = 1] - Duration of the transition and alignment (x2)\n\t * @param {string} [options.planeId = ''] - A planet id used to calculate normal to ecliptic\n\t * @param {string[]} [options.otherEntityNames = []] - Other entities to include in the view\n\t * @param {boolean} [options.includeChildren = true] - Include children in the view\n\t * @param {boolean} [options.isRelativeToPreviousCamera = false] - Align to previous camera\n\t */\n\tasync goToSystem(id, options = {}) {\n\t\tif (id === 'inner_solar_system') {\n\t\t\tObject.assign(options, { distance: 7e8, angle: 25, planeId: 'earth' });\n\t\t\tawait this._goToSystem('sun', options);\n\t\t}\n\t\telse if (id === 'outer_solar_system') {\n\t\t\tObject.assign(options, { distance: 1e10, angle: 25, planeId: 'earth' });\n\t\t\tawait this._goToSystem('sun', options);\n\t\t}\n\t\telse {\n\t\t\tconst systemId = this.isBarycenter(id)\n\t\t\t\t? this.removeBarycenter(id)\n\t\t\t\t: id;\n\t\t\tconst minDist = systemId in this._customSystemDistances\n\t\t\t\t? this._customSystemDistances[systemId]\n\t\t\t\t: 0;\n\t\t\tconst entityInfo = this._app.getManager('content').getEntityInfo(id);\n\t\t\tconst planeId = 'planeId' in options\n\t\t\t\t? options.planeId\n\t\t\t\t: (entityInfo?.planeEntity || '');\n\t\t\tObject.assign(options, { minDistance: minDist, planeId });\n\t\t\tawait this._goToSystem(id, options);\n\t\t}\n\t}\n\n\t/**\n\t * Go to a system, sunny side and rotates around it.\n\t * @param {string} id - Target entity id\n\t * @param {object} options\n\t * @param {number} [options.distance = undefined] - Distance from the target\n\t * @param {number} [options.angle = 25] - Angle of the camera\n\t * @param {number} [options.minDistance = 0] - Minimum distance the camera can be from target\n\t * @param {number} [options.duration = 1] - Duration of the transition and alignment (x2)\n\t * @param {string} [options.planeId = ''] - A planet id used to calculate normal to ecliptic\n\t * @param {string[]} [options.otherEntityNames = []] - Other entities to include in the view\n\t * @param {boolean} [options.includeChildren = true] - Include children in the view\n\t * @param {boolean} [options.isRelativeToPreviousCamera = false] - Align to previous camera\n\t */\n\tasync _goToSystem(id, { distance = undefined, angle = 25, minDistance = 0, duration = 1, planeId = '', otherEntityNames = [], includeChildren = true, isRelativeToPreviousCamera = true } = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id, context: CameraScripts.CONTEXT.SYSTEM });\n\n\t\tthis.app.getManager('camera').setIsTransitioning(true);\n\n\t\tconst systemObject = this._scene.getEntity(id);\n\n\t\t// List entities that have to be displayed on screen\n\t\tconst entities = [systemObject];\n\t\tfor (let i = 0; i < otherEntityNames.length; i++) {\n\t\t\tentities.push(this._scene.getEntity(otherEntityNames[i]));\n\t\t}\n\t\tif (includeChildren) {\n\t\t\tfor (let i = 0; i < systemObject.getNumChildren(); i++) {\n\t\t\t\tconst child = systemObject.getChild(i);\n\t\t\t\t// Ignore camera\n\t\t\t\tif (child.getComponentByType('camera') !== null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Ignore spacecraft\n\t\t\t\tif (child.getName().startsWith('sc')) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Ignore objects without valid positions\n\t\t\t\tif (child.getPosition().isNaN()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tentities.push(child);\n\t\t\t}\n\t\t}\n\n\t\t// Fwd vector from previous camera position\n\t\tconst dest = new Pioneer.Vector3();\n\t\tconst camPosition = new Pioneer.Vector3();\n\t\tif (isRelativeToPreviousCamera) {\n\t\t\tthis._cameraEntity.getPositionRelativeToEntity(camPosition, Pioneer.Vector3.Zero, systemObject);\n\t\t\t// If no camera position\n\t\t\t// force position to this vector\n\t\t\tif (camPosition.isNaN()) {\n\t\t\t\tdest.copy(new Pioneer.Vector3(0, -1, 0));\n\t\t\t\tdest.mult(dest, 1e10);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdest.copy(camPosition);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdest.normalize(systemObject.getPosition());\n\t\t\tdest.mult(dest, -1);\n\t\t}\n\n\t\t// Get the up vector\n\t\tconst up = new Pioneer.Vector3();\n\t\tif (planeId !== '' && this._scene.get(planeId) !== null) {\n\t\t\tthis.getNormalToEcliptic(up, planeId);\n\t\t\tif (up.isNaN()) {\n\t\t\t\tup.copy(new Pioneer.Vector3(0, 0, 1));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tsystemObject.getOrientation().getAxis(up, 2);\n\t\t}\n\n\t\t// Cross between dest and planet up\n\t\tconst horizontal = new Pioneer.Vector3();\n\t\thorizontal.cross(dest, up);\n\t\thorizontal.normalize(horizontal);\n\n\t\t// Update dest to be normal to up\n\t\tdest.setNormalTo(up, dest);\n\t\tdest.normalize(dest);\n\n\t\t// Rotate fwd\n\t\tconst rotation = new Pioneer.Quaternion();\n\t\trotation.setFromAxisAngle(horizontal, Pioneer.MathUtils.degToRad(angle));\n\t\tdest.rotate(rotation, dest);\n\n\t\t// Determine min radius\n\t\tlet radius = systemObject.getOcclusionRadius();\n\t\tconst spheroid = /** @type {Pioneer.SpheroidComponent} */(systemObject.getComponentByType('spheroid'));\n\t\tif (spheroid !== null) {\n\t\t\tradius = spheroid.getEquatorialRadius();\n\t\t}\n\t\telse if (this.isBarycenter(id)) {\n\t\t\tconst newId = this.removeBarycenter(id);\n\t\t\tconst newSystemObject = this._scene.getEntity(newId);\n\t\t\tconst newSpheroid = /** @type {Pioneer.SpheroidComponent} */(newSystemObject.getComponentByType('spheroid'));\n\t\t\tif (spheroid !== null) {\n\t\t\t\tradius = newSpheroid.getEquatorialRadius();\n\t\t\t}\n\t\t}\n\t\tconst minRadius = 1.2 * radius;\n\n\t\t// Determine viewing distance\n\t\tlet dist = distance;\n\t\tif (dist === undefined) {\n\t\t\tconst cameraOrientation = new Pioneer.Quaternion();\n\t\t\tcameraOrientation.setFromAxes(horizontal, dest, undefined);\n\t\t\tdist = Cameras.getDistanceToFitEntities(this._cameraEntity, cameraOrientation, systemObject, entities);\n\t\t\tdist *= 1.3;\n\t\t}\n\t\tdist = Math.max(minDistance, dist);\n\t\t// If the view is taller than it is wide, increase distance.\n\t\tconst cameraComponent = /** @type {Pioneer.CameraComponent} */(this._cameraEntity.getComponentByType('camera'));\n\t\tif (cameraComponent.getHorizontalFieldOfView() < cameraComponent.getVerticalFieldOfView()) {\n\t\t\tdist *= cameraComponent.getVerticalFieldOfView() * 1.3;\n\t\t}\n\n\t\tif (isRelativeToPreviousCamera) {\n\t\t\t// Determine first destination\n\t\t\t// Look at the system object first\n\t\t\tconst firstDest = new Pioneer.Vector3();\n\t\t\tthis._cameraEntity.getPositionRelativeToEntity(camPosition, Pioneer.Vector3.Zero, systemObject);\n\t\t\tif (camPosition.isNaN()) {\n\t\t\t\tfirstDest.copy(new Pioneer.Vector3(0, -1, 0));\n\t\t\t\tfirstDest.setNormalTo(up, firstDest);\n\t\t\t\tfirstDest.mult(firstDest, 1e10);\n\t\t\t\tfirstDest.rotate(rotation, firstDest);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfirstDest.copy(camPosition);\n\t\t\t}\n\n\t\t\t// Align camera with target first\n\t\t\tawait this._cameraManager.goToEntity(id, { destination: firstDest, destinationUp: up, duration });\n\t\t}\n\t\telse {\n\t\t\t// Go to object at system distance first\n\t\t\tawait this._cameraManager.goToEntity(id, { distance, duration: duration / 2 });\n\t\t}\n\n\t\t// Go to system view\n\t\tdest.mult(dest, dist);\n\t\tawait this._cameraManager.goToEntity(id, { destination: dest, cinematic: false, minRadius, destinationUp: up, duration });\n\t\tthis.app.getManager('camera').setIsTransitioning(false);\n\t}\n\n\t/**\n\t * Go to a location in center of entities.\n\t * @param {string[]} entityNames\n\t * @param {string} parentName\n\t * @param {number} time - Pioneer time\n\t * @param {Object<string, any>} options - Options for goToSystem function\n\t */\n\tasync goToCenter(entityNames, parentName, time, options = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id: 'centerSystem', context: CameraScripts.CONTEXT.CENTER_SYSTEM });\n\n\t\tconst position = new Pioneer.Vector3();\n\t\tconst parent = this._scene.getEntity(parentName);\n\t\tconst tempPosition = new Pioneer.Vector3();\n\t\tconst entities = [];\n\n\t\t// Get position in center of entities\n\t\tfor (let i = 0; i < entityNames.length; i++) {\n\t\t\tconst entity = this._scene.getEntity(entityNames[i]);\n\t\t\tentities.push(entity);\n\t\t\tentity.getPositionRelativeToEntity(tempPosition, Pioneer.Vector3.Zero, parent, time);\n\t\t\tposition.addMult(position, tempPosition, 1 / entityNames.length);\n\t\t}\n\n\t\t// Create center entity\n\t\tlet center = this._scene.getEntity('center');\n\t\tif (center === null) {\n\t\t\tcenter = this._scene.addEntity('center');\n\t\t\tcenter.setOrientation(Pioneer.Quaternion.Identity);\n\t\t}\n\t\tcenter.setParent(parent);\n\t\tcenter.setPosition(position);\n\t\tawait this._scene.getLoadedPromise();\n\t\tawait this._cameraManager.pioneer.waitUntilNextFrame();\n\n\t\t// Go to system view at center\n\t\toptions['otherEntityNames'] = entityNames;\n\t\tawait this._goToSystem(center.getName(), options);\n\t}\n\n\t/**\n\t * Show center location of multiple entities.\n\t * @param {string[]} entityNames\n\t * @param {string} parentName\n\t * @param {number} time - Pioneer time\n\t * @param {string} forwardEntityName - A parent id used to calculate normal to ecliptic or north pole\n\t * @param {string} upOrRightEntityName - An entity used to orient the up or right of the camera (depending on aspect ratio).\n\t * @param {string} mode - Whether to have the forward be based on the north pole or the orbital plane normal of the forwardEntity ('northPole' or 'planeNormal').\n\t * @param {Object<string, any>} options - Options for showLocation function\n\t */\n\tasync showLocationCenter(entityNames, parentName, time, forwardEntityName, upOrRightEntityName, mode, options = {}) {\n\t\t// Always update context first\n\t\tthis._cameraManager.setContext({ id: 'centerLocation', context: CameraScripts.CONTEXT.CENTER_LOCATION });\n\n\t\tconst position = new Pioneer.Vector3();\n\t\tconst parent = this._scene.getEntity(parentName);\n\t\tconst tempPosition = new Pioneer.Vector3();\n\t\tconst entities = [];\n\n\t\t// Get position in center of entities\n\t\tfor (let i = 0; i < entityNames.length; i++) {\n\t\t\tconst entity = this._scene.getEntity(entityNames[i]);\n\t\t\tentities.push(entity);\n\t\t\tentity.getPositionRelativeToEntity(tempPosition, Pioneer.Vector3.Zero, parent, time);\n\t\t\tposition.addMult(position, tempPosition, 1 / entityNames.length);\n\t\t}\n\n\t\t// Create center entity\n\t\tlet center = this._scene.getEntity('center');\n\t\tif (center === null) {\n\t\t\tcenter = this._scene.addEntity('center');\n\t\t\tcenter.setOrientation(Pioneer.Quaternion.Identity);\n\t\t}\n\t\tcenter.setParent(parent);\n\t\tcenter.setPosition(position);\n\t\tawait this._scene.getLoadedPromise();\n\t\tawait this._cameraManager.pioneer.waitUntilNextFrame();\n\n\t\t// Go to location view at center\n\t\toptions['otherEntityNames'] = entityNames;\n\t\tawait this.showLocation(center.getName(), forwardEntityName, upOrRightEntityName, mode, options);\n\t}\n\n\t/**\n\t * Show where object is located in the parent's system.\n\t * @param {string} id - Target entity id\n\t * @param {object} [options={}]\n\t */\n\tasync showLocationInParentSystem(id, options = {}) {\n\t\tconst parentId = this._app.getManager('scene').getParent(id);\n\t\tawait this.showLocation(id, parentId, parentId, 'northPole', options);\n\t}\n\n\t/**\n\t * Show where object is located in the Solar system.\n\t * @param {string} id - Target entity id\n\t * @param {object} [options={}]\n\t */\n\tasync showLocationInSolarSystem(id, options = {}) {\n\t\tlet parent = this._scene.getEntity(id).getParent();\n\t\tif (parent.getName() !== 'sun') {\n\t\t\twhile (parent.getParent().getName() !== 'sun') {\n\t\t\t\tparent = parent.getParent();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparent = this._scene.getEntity('earth');\n\t\t}\n\n\t\tawait this.showLocation(id, parent.getName(), 'sun', 'planeNormal', options);\n\t}\n}\n\nCameraScripts.CONTEXT = {\n\tCELESTIAL_OBJECT: 0,\n\tSPACECRAFT: 1,\n\tALIGN_SPACECRAFT: 2,\n\tLOCATION: 3,\n\tSYSTEM: 4,\n\tCOMPARE: 5,\n\tLOOK_AT: 6,\n\tLOCKED_ON: 7,\n\tINSTRUMENT: 8,\n\tALIGN_OBJECTS: 9,\n\tCENTER_SYSTEM: 10,\n\tCENTER_LOCATION: 11\n};\n","import {\n\tBaseApp,\n\tBaseManager,\n\tCameraManager,\n\tSceneManager\n} from '../internal';\nimport * as Pioneer from 'pioneer';\nimport {\n\tEntity,\n\tCameras\n} from 'pioneer-scripts';\n\n/**\n * The Comparison Manager class.\n */\nexport class ComparisonManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * The left viewport.\n\t\t * @type {Pioneer.Viewport}\n\t\t * @private\n\t\t */\n\t\tthis._viewportLeft = null;\n\n\t\t/**\n\t\t * The right viewport.\n\t\t * @type {Pioneer.Viewport}\n\t\t * @private\n\t\t */\n\t\tthis._viewportRight = null;\n\n\t\t/**\n\t\t * The left scene.\n\t\t * @type {Pioneer.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._sceneLeft = null;\n\n\t\t/**\n\t\t * The right scene.\n\t\t * @type {Pioneer.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._sceneRight = null;\n\n\t\t/**\n\t\t * The left anchor entity.\n\t\t * @type {Pioneer.Entity}\n\t\t * @private\n\t\t */\n\t\tthis._anchorEntityLeft = null;\n\n\t\t/**\n\t\t * The right anchor entity.\n\t\t * @type {Pioneer.Entity}\n\t\t * @private\n\t\t */\n\t\tthis._anchorEntityRight = null;\n\n\t\t/**\n\t\t * The left entity.\n\t\t * @type {Pioneer.Entity}\n\t\t * @private\n\t\t */\n\t\tthis._entityLeft = null;\n\n\t\t/**\n\t\t * The right entity.\n\t\t * @type {Pioneer.Entity}\n\t\t * @private\n\t\t */\n\t\tthis._entityRight = null;\n\n\t\t/**\n\t\t * The left sun.\n\t\t * @type {Pioneer.Entity}\n\t\t * @private\n\t\t */\n\t\tthis._sunLeft = null;\n\n\t\t/**\n\t\t * The right sun.\n\t\t * @type {Pioneer.Entity}\n\t\t * @private\n\t\t */\n\t\tthis._sunRight = null;\n\n\t\t/**\n\t\t * A list of viewports that were active before comparison started, so they can be re-enabled later.\n\t\t * @type {number[]}\n\t\t * @private\n\t\t */\n\t\tthis._activeViewports = [];\n\n\t\t/**\n\t\t * Custom rotations for comparing objects.\n\t\t * @type {Record<string, [string, number][]>}\n\t\t * @private\n\t\t */\n\t\tthis._customRotations = {\n\t\t\trose_bowl: [['x', 45], ['z', 180]],\n\t\t\tsc_juno: [['x', 45], ['z', 180]],\n\t\t\tsaturn: [['x', 25]],\n\t\t\tsc_lucy: [['z', -90], ['y', -25]],\n\t\t\tsc_ixpe: [['z', -90], ['y', 180]],\n\t\t\tsc_hubble_space_telescope: [['x', 90], ['z', 90]],\n\t\t\tsc_jwst: [['x', 180], ['y', 180]],\n\t\t\tsc_psyche: [['x', 90], ['z', 90]],\n\t\t\tsc_stardust: [['x', 90]],\n\t\t\tsc_osiris_rex_src: [['x', 90]],\n\t\t\tsc_stardust_src: [['z', 90]],\n\t\t\tsc_acs3: [['x', 90]]\n\t\t};\n\n\t\t/**\n\t\t * Zoom sensitivity for zoom functions.\n\t\t * @type {{click: number, hold: number}}\n\t\t * @private\n\t\t */\n\t\tthis._zoomSensitivity = {\n\t\t\tclick: 0.3,\n\t\t\thold: 0.1\n\t\t};\n\n\t\t// Setup the bind functions.\n\t\tthis.bindFunctions(['_adjustZoomFromViewport', 'zoomIn', 'zoomOut']);\n\n\t\t// Create the left and right scenes.\n\t\tthis._sceneLeft = this.pioneer.addScene('comparisonLeft');\n\t\tthis._sceneLeft.setAmbientLightColor(new Pioneer.Color(0.005, 0.005, 0.005));\n\t\tthis._sceneRight = this.pioneer.addScene('comparisonRight');\n\t\tthis._sceneRight.setAmbientLightColor(new Pioneer.Color(0.005, 0.005, 0.005));\n\n\t\t// Create scene backgrounds.\n\t\tEntity.create('observable_universe', this._sceneLeft);\n\t\tEntity.create('milky_way', this._sceneLeft);\n\t\tEntity.create('observable_universe', this._sceneRight);\n\t\tEntity.create('milky_way', this._sceneRight);\n\n\t\t// Create the suns.\n\t\tthis._sunLeft = Entity.create('sun', this._sceneLeft, { nameSuffix: '_compare' });\n\t\tthis._sunRight = Entity.create('sun', this._sceneRight, { nameSuffix: '_compare' });\n\n\t\t// Create the compare entity locations.\n\t\tthis._anchorEntityLeft = this._sceneLeft.addEntity('anchorLeft');\n\t\tthis._anchorEntityLeft.setParent(this._sceneLeft.getEntity('sun_compare'));\n\t\tthis._anchorEntityLeft.setPosition(new Pioneer.Vector3(1e8, 0, 0));\n\t\tthis._anchorEntityLeft.setOrientation(Pioneer.Quaternion.Identity);\n\t\tthis._anchorEntityRight = this._sceneRight.addEntity('anchorRight');\n\t\tthis._anchorEntityRight.setParent(this._sceneRight.getEntity('sun_compare'));\n\t\tthis._anchorEntityRight.setPosition(new Pioneer.Vector3(1e8, 0, 0));\n\t\tthis._anchorEntityRight.setOrientation(Pioneer.Quaternion.Identity);\n\n\t\t// Create the left and right cameras.\n\t\tthis._cameraEntityLeft = this._sceneLeft.addEntity('cameraLeft');\n\t\tthis._cameraEntityLeft.setParent(this._anchorEntityLeft);\n\t\tthis._cameraLeft = /** @type {Pioneer.CameraComponent} */(this._cameraEntityLeft.addComponent('camera'));\n\t\tthis._cameraLightLeft = /** @type {Pioneer.LightSourceComponent} */(this._cameraEntityLeft.addComponent('lightSource'));\n\t\tthis._cameraLightLeft.setEnabled(false);\n\t\tthis._cameraEntityRight = this._sceneRight.addEntity('cameraRight');\n\t\tthis._cameraEntityRight.setParent(this._anchorEntityRight);\n\t\tthis._cameraRight = /** @type {Pioneer.CameraComponent} */(this._cameraEntityRight.addComponent('camera'));\n\t\tthis._cameraLightRight = /** @type {Pioneer.LightSourceComponent} */(this._cameraEntityRight.addComponent('lightSource'));\n\t\tthis._cameraLightRight.setEnabled(false);\n\n\t\t// Create left and right viewports\n\t\tthis._viewportLeft = this.pioneer.addViewport('left-viewport');\n\t\tthis._viewportLeft.getDiv().className = 'compare-viewport left-desktop';\n\t\tthis._viewportLeft.setEnabled(false);\n\t\tthis._viewportLeft.setCamera(this._cameraLeft);\n\t\tthis._viewportRight = this.pioneer.addViewport('right-viewport');\n\t\tthis._viewportRight.getDiv().className = 'compare-viewport right-desktop';\n\t\tthis._viewportRight.setEnabled(false);\n\t\tthis._viewportRight.setCamera(this._cameraRight);\n\n\t\t// Add a callback to adjust the zooms.\n\t\tthis.pioneer.addCallback(this._adjustZoomFromViewport.bind(this), true);\n\t}\n\n\t/**\n\t * Gets the left entity.\n\t * @returns {Pioneer.Entity}\n\t */\n\tget entityLeft() {\n\t\treturn this._entityLeft;\n\t}\n\n\t/**\n\t * Gets the right entity.\n\t * @returns {Pioneer.Entity}\n\t */\n\tget entityRight() {\n\t\treturn this._entityRight;\n\t}\n\n\t/**\n\t * Zooms In\n\t * @param {boolean} isContinuous\n\t */\n\tzoomIn(isContinuous = false) {\n\t\tlet zoomChange = 1.0;\n\t\tconst zoomSensitivity = isContinuous ? this._zoomSensitivity.hold : this._zoomSensitivity.click;\n\t\tzoomChange /= Math.pow(2, zoomSensitivity);\n\n\t\tconst camera = /** @type {CameraManager} */(this.app.getManager('camera'));\n\t\tcamera.zoom(zoomChange, this._cameraEntityLeft);\n\t\tcamera.zoom(zoomChange, this._cameraEntityRight);\n\t}\n\n\t/**\n\t * Zooms Out\n\t * @param {boolean} isContinuous\n\t */\n\tzoomOut(isContinuous = false) {\n\t\tlet zoomChange = 1.0;\n\t\tconst zoomSensitivity = isContinuous ? this._zoomSensitivity.hold : this._zoomSensitivity.click;\n\t\tzoomChange *= Math.pow(2, zoomSensitivity);\n\n\t\tconst camera = /** @type {CameraManager} */(this.app.getManager('camera'));\n\t\tcamera.zoom(zoomChange, this._cameraEntityLeft);\n\t\tcamera.zoom(zoomChange, this._cameraEntityRight);\n\t}\n\n\t/**\n\t * Compare two objects.\n\t * @param {string} entityNameLeft\n\t * @param {string} entityNameRight\n\t */\n\tasync compare(entityNameLeft, entityNameRight) {\n\t\t// Remove any old entities, if needed.\n\t\tif (this._entityLeft && this._entityLeft.getName() !== entityNameLeft) {\n\t\t\tthis._sceneLeft.removeEntity(this._entityLeft);\n\t\t\tthis._entityLeft = null;\n\t\t}\n\t\tif (this._entityRight && this._entityRight.getName() !== entityNameRight) {\n\t\t\tthis._sceneRight.removeEntity(this._entityRight);\n\t\t\tthis._entityRight = null;\n\t\t}\n\n\t\t// Create the entities, if needed.\n\t\tconst contentManager = this.app.getManager('content');\n\t\tconst labelManager = this.app.getManager('label');\n\t\tif (!this._entityLeft) {\n\t\t\tthis._entityLeft = Entity.create(entityNameLeft, this._sceneLeft);\n\t\t\tthis._entityLeft.clearParentingTableEntries();\n\t\t\tthis._entityLeft.clearControllers();\n\t\t\tthis._entityLeft.setParent(this._anchorEntityLeft);\n\t\t\tthis._entityLeft.setPosition(Pioneer.Vector3.Zero);\n\t\t\tconst orientation = new Pioneer.Quaternion();\n\t\t\tthis._getCustomRotation(orientation, entityNameLeft, 'left');\n\t\t\tthis._entityLeft.setOrientation(orientation);\n\t\t\tthis._entityLeft.getComponentByClass(Pioneer.DivComponent).setFadeWhenCloseToEntity('sun');\n\n\t\t\tlabelManager.setLabelProps({\n\t\t\t\tgetLabelClass: entityName => `no-select ${contentManager.getClassName(entityName, '') ?? ''}`,\n\t\t\t\thandleTouch: null,\n\t\t\t\thandleClick: null\n\t\t\t}, [entityNameLeft], this._sceneLeft, this._cameraEntityLeft);\n\t\t}\n\t\tif (!this._entityRight) {\n\t\t\tthis._entityRight = Entity.create(entityNameRight, this._sceneRight);\n\t\t\tthis._entityRight.clearParentingTableEntries();\n\t\t\tthis._entityRight.clearControllers();\n\t\t\tthis._entityRight.setParent(this._anchorEntityRight);\n\t\t\tthis._entityRight.setPosition(Pioneer.Vector3.Zero);\n\t\t\tconst orientation = new Pioneer.Quaternion();\n\t\t\tthis._getCustomRotation(orientation, entityNameRight, 'right');\n\t\t\tthis._entityRight.setOrientation(orientation);\n\t\t\tthis._entityRight.getComponentByClass(Pioneer.DivComponent).setFadeWhenCloseToEntity('sun');\n\n\t\t\tlabelManager.setLabelProps({\n\t\t\t\tgetLabelClass: entityName => `no-select ${contentManager.getClassName(entityName, '') ?? ''}`,\n\t\t\t\thandleTouch: null,\n\t\t\t\thandleClick: null\n\t\t\t}, [entityNameRight], this._sceneRight, this._cameraEntityRight);\n\t\t}\n\n\t\t// Update the suns based on the lighting and if an entity is the sun.\n\t\tthis._updateSuns();\n\n\t\t// Activate viewports, if needed.\n\t\tif (!this._viewportLeft.isEnabled()) {\n\t\t\t// Disable all other active viewports.\n\t\t\tfor (let i = 0, l = this.pioneer.getNumViewports(); i < l; i++) {\n\t\t\t\tconst viewport = this.pioneer.getViewport(i);\n\t\t\t\tif (viewport.isEnabled()) {\n\t\t\t\t\tthis._activeViewports.push(i);\n\t\t\t\t\tviewport.setEnabled(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Enable compare viewports\n\t\t\tthis._viewportLeft.setEnabled(true);\n\t\t\tthis._viewportRight.setEnabled(true);\n\t\t\t// Turn off the camera light for default.\n\t\t\tthis.setCameraLight(true);\n\t\t\t// Send out an event.\n\t\t\tconst event = new CustomEvent('comparisonenter', { detail: { } });\n\t\t\twindow.dispatchEvent(event);\n\t\t}\n\n\t\t// Calculate a good initial distance.\n\t\tconst distLeft = Cameras.getDistanceToFitEntities(this._cameraEntityLeft, Pioneer.Quaternion.Identity, this._entityLeft, [this._entityLeft]);\n\t\tconst distRight = Cameras.getDistanceToFitEntities(this._cameraEntityRight, Pioneer.Quaternion.Identity, this._entityRight, [this._entityRight]);\n\t\tlet dist = Math.max(distRight, distLeft);\n\t\tdist *= 1.6;\n\n\t\t// Calculate positions from the distance.\n\t\tconst cameraPositionLeft = new Pioneer.Vector3();\n\t\tcameraPositionLeft.setMagnitude(Pioneer.Vector3.YAxisNeg, dist);\n\t\tconst cameraPositionRight = new Pioneer.Vector3();\n\t\tcameraPositionRight.setMagnitude(Pioneer.Vector3.YAxisNeg, dist);\n\n\t\t// Clear out the camera controllers so that any existing transition doesn't continue.\n\t\tthis._cameraEntityLeft.clearControllers();\n\t\tthis._cameraEntityRight.clearControllers();\n\n\t\t// Send out an event.\n\t\tconst event = new CustomEvent('cameracompare', { detail: { left: entityNameLeft, right: entityNameRight } });\n\t\twindow.dispatchEvent(event);\n\n\t\t// Do the camera transitions.\n\t\tconst cameraManager = /** @type {CameraManager} */(this.app.getManager('camera'));\n\t\tconst transitionLeftPromise = cameraManager.goToEntity('anchorLeft', {\n\t\t\tminRadius: dist * 0.5,\n\t\t\tmaxRadius: dist * 10,\n\t\t\tcamera: this._cameraEntityLeft,\n\t\t\tdestination: cameraPositionLeft,\n\t\t\tdestinationUp: Pioneer.Vector3.ZAxis,\n\t\t\tscene: this._sceneLeft,\n\t\t\tselect: false,\n\t\t\tzoom: true,\n\t\t\tcinematic: true\n\t\t});\n\t\tconst transitionRightPromise = cameraManager.goToEntity('anchorRight', {\n\t\t\tminRadius: dist * 0.5,\n\t\t\tmaxRadius: dist * 10,\n\t\t\tcamera: this._cameraEntityRight,\n\t\t\tdestination: cameraPositionRight,\n\t\t\tdestinationUp: Pioneer.Vector3.ZAxis,\n\t\t\tscene: this._sceneRight,\n\t\t\tselect: false,\n\t\t\tzoom: true,\n\t\t\tcinematic: true\n\t\t});\n\t\tawait Promise.all([transitionLeftPromise, transitionRightPromise]);\n\n\t\t// Wait until everything is loaded.\n\t\tconst sceneManager = /** @type {SceneManager} */(this.app.getManager('scene'));\n\t\tsceneManager.addLoading(this._entityLeft.getName(), 'compare');\n\t\tsceneManager.addLoading(this._entityRight.getName(), 'compare');\n\t\tawait Promise.all([this._entityLeft.getLoadedPromise(), this._entityRight.getLoadedPromise()]);\n\t\tsceneManager.removeLoading(this._entityLeft.getName(), 'compare');\n\t\tsceneManager.removeLoading(this._entityRight.getName(), 'compare');\n\t}\n\n\t/**\n\t * Toggles between camera and sun lights\n\t * @param {boolean} active\n\t * @param {Pioneer.Color} [color]\n\t */\n\tsetCameraLight(active, color) {\n\t\tthis._cameraLightLeft.setEnabled(active);\n\t\tthis._cameraLightRight.setEnabled(active);\n\t\tif (color !== undefined) {\n\t\t\tthis._cameraLightLeft.setColor(color);\n\t\t\tthis._cameraLightRight.setColor(color);\n\t\t}\n\t\tthis._updateSuns();\n\t}\n\n\t/**\n\t * Exit comparison\n\t */\n\texit() {\n\t\t// Remove any old entities.\n\t\tif (this._entityLeft) {\n\t\t\tthis._sceneLeft.removeEntity(this._entityLeft);\n\t\t\tthis._entityLeft = null;\n\t\t}\n\t\tif (this._entityRight) {\n\t\t\tthis._sceneRight.removeEntity(this._entityRight);\n\t\t\tthis._entityRight = null;\n\t\t}\n\n\t\t// Disable compare viewports\n\t\tthis._viewportLeft.setEnabled(false);\n\t\tthis._viewportRight.setEnabled(false);\n\n\t\t// Enable previously active viewports\n\t\tfor (let i = 0; i < this._activeViewports.length; i++) {\n\t\t\tconst viewportNum = this._activeViewports[i];\n\t\t\tconst viewport = this.pioneer.getViewport(viewportNum);\n\t\t\tviewport.setEnabled(true);\n\t\t}\n\t\tthis._activeViewports = [];\n\n\t\t// Send the event.\n\t\tconst event = new CustomEvent('comparisonexit', { detail: { } });\n\t\twindow.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Update the suns based on the camera light and if the comparison object is the sun.\n\t * @private\n\t */\n\t_updateSuns() {\n\t\t// If one of them is the sun, turn off the background sun.\n\t\tconst sunLeftEnabled = this._entityLeft?.getName() !== 'sun' && (!this._cameraLightLeft.isEnabled() || this._cameraLightLeft.getColor().min() < 1);\n\t\tconst sunRightEnabled = this._entityRight?.getName() !== 'sun' && (!this._cameraLightRight.isEnabled() || this._cameraLightRight.getColor().min() < 1);\n\t\tthis._sunLeft.getComponentByType('spheroidLOD').setEnabled(sunLeftEnabled);\n\t\tthis._sunLeft.getComponentByType('atmosphere').setEnabled(sunLeftEnabled);\n\t\tthis._sunLeft.getComponentByType('sprite').setEnabled(sunLeftEnabled);\n\t\tthis._sunLeft.getComponentByType('lightSource').setEnabled(sunLeftEnabled);\n\t\tthis._sunRight.getComponentByType('spheroidLOD').setEnabled(sunRightEnabled);\n\t\tthis._sunRight.getComponentByType('atmosphere').setEnabled(sunRightEnabled);\n\t\tthis._sunRight.getComponentByType('sprite').setEnabled(sunRightEnabled);\n\t\tthis._sunRight.getComponentByType('lightSource').setEnabled(sunRightEnabled);\n\t}\n\n\t/**\n\t * Adjust both viewport distances based on the camera distance.\n\t * @private\n\t */\n\t_adjustZoomFromViewport() {\n\t\t// If the viewports are disabled, return.\n\t\tif (!this._viewportLeft.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._viewportRight.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\t// Get the current distance of the left camera.\n\t\tlet currentDistance = this._cameraEntityLeft.getPosition().magnitude();\n\t\tif (Number.isNaN(currentDistance)) {\n\t\t\tcurrentDistance = 1.0;\n\t\t}\n\t\tconst activeViewport = this.app.pioneer.getInput().getActiveViewport();\n\t\tif (activeViewport && activeViewport.getName() === 'right-viewport') {\n\t\t\tcurrentDistance = this._cameraEntityRight.getPosition().magnitude();\n\t\t\tif (Number.isNaN(currentDistance)) {\n\t\t\t\tcurrentDistance = 1.0;\n\t\t\t}\n\t\t}\n\t\t// Set the positions to be the current distance.\n\t\tconst currentLeftPosition = Pioneer.Vector3.pool.get();\n\t\tcurrentLeftPosition.setMagnitude(this._cameraEntityLeft.getPosition(), currentDistance);\n\t\tconst currentRightPosition = Pioneer.Vector3.pool.get();\n\t\tcurrentRightPosition.setMagnitude(this._cameraEntityRight.getPosition(), currentDistance);\n\t\tthis._cameraEntityLeft.setPosition(currentLeftPosition);\n\t\tthis._cameraEntityRight.setPosition(currentRightPosition);\n\t\tPioneer.Vector3.pool.release(currentLeftPosition);\n\t\tPioneer.Vector3.pool.release(currentRightPosition);\n\t}\n\n\t/**\n\t * Applies custom rotations to certain entities, so they look good.\n\t * @param {Pioneer.Quaternion} outRotation\n\t * @param {string} entityName\n\t * @param {'left' | 'right'} side\n\t * @private\n\t */\n\t_getCustomRotation(outRotation, entityName, side) {\n\t\toutRotation.set(1, 0, 0, 0);\n\t\tif (this._customRotations[entityName] !== undefined) {\n\t\t\tconst customRotation = this._customRotations[entityName];\n\t\t\tfor (let i = 0, l = customRotation.length; i < l; i++) {\n\t\t\t\tlet axis;\n\t\t\t\tif (customRotation[i][0] === 'x') {\n\t\t\t\t\taxis = Pioneer.Vector3.XAxis;\n\t\t\t\t}\n\t\t\t\telse if (customRotation[i][0] === 'y') {\n\t\t\t\t\taxis = Pioneer.Vector3.YAxis;\n\t\t\t\t}\n\t\t\t\telse if (customRotation[i][0] === 'z') {\n\t\t\t\t\taxis = Pioneer.Vector3.ZAxis;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(`Invalid model rotate axis \"${customRotation[i][0]}\".`);\n\t\t\t\t}\n\t\t\t\tlet angle = customRotation[i][1];\n\n\t\t\t\tangle = Pioneer.MathUtils.degToRad(angle);\n\t\t\t\tconst rotation = new Pioneer.Quaternion();\n\t\t\t\trotation.setFromAxisAngle(axis, angle);\n\t\t\t\toutRotation.mult(outRotation, rotation);\n\t\t\t}\n\t\t}\n\t}\n}\n","import moment from 'moment-timezone';\nimport {\n\tAppUtils,\n\tCancelToken,\n\tBaseApp,\n\tBaseManager\n} from '../internal';\n\n/**\n * @typedef EntityInfo\n * @property {string} id\n * @property {string} displayName\n * @property {string} category\n * @property {string} [iauName]\n * @property {string} [subcategory]\n * @property {boolean} [searchable]\n * @property {string[]} [keywords]\n * @property {boolean} [hasMoons]\n * @property {Object<string, string[]>} [related]\n * @property {string} [landingDate]\n * @property {number} [customDistance]\n * @property {boolean} [hasEvents]\n * @property {string[]} [forceVisibleEntities]\n * @property {string[]} [ignoreDependentWhenUnloading]\n */\n\n/**\n * Content Manager class.\n * @extends BaseManager\n */\nexport class ContentManager extends BaseManager {\n\t/**\n\t * Constructor\n\t * @param {BaseApp} app\n\t * @private\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * The list of all entities.\n\t\t * @type {Object<string, EntityInfo>}\n\t\t * @private\n\t\t */\n\t\tthis._entityList = null;\n\n\t\t/**\n\t\t * The list of entities grouped by categories.\n\t\t * @type {Object<string, Array<EntityInfo>>}\n\t\t * @private\n\t\t */\n\t\tthis._entitiesByCategory = {};\n\n\t\t/**\n\t\t * The list of entities grouped by sub-categories.\n\t\t * @type {Object<string, Array<EntityInfo>>}\n\t\t * @private\n\t\t */\n\t\tthis._entitiesBySubCategory = {};\n\n\t\t/**\n\t\t * Content of all stories.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._stories = {};\n\n\t\t/**\n\t\t * The list of all available story cards.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._storyList = null;\n\n\t\t/**\n\t\t * The target to load corresponding contents.\n\t\t * Mostly used to prevent duplicated fetch.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._target = null;\n\n\t\t/**\n\t\t * Context of current target.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._context = {};\n\n\t\t/**\n\t\t * All events of a target.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._context.events = {};\n\n\t\t/**\n\t\t * All events of a target, ordered by start date.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._context.orderedEvents = {};\n\n\t\t/**\n\t\t * Description of an event.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._context.eventDesc = {};\n\n\t\t/**\n\t\t * Currently loaded story.\n\t\t * @type {object}\n\t\t * @private\n\t\t */\n\t\tthis._context.story = {};\n\n\t\t/**\n\t\t * Folders to fetch files from.\n\t\t * @type {object}\n\t\t * @property {string} [description='/'] - Folder containing description files\n\t\t * @property {string} [event='/'] - Folder containing event files\n\t\t * @private\n\t\t */\n\t\tthis._folders = {\n\t\t\tdescription: '/',\n\t\t\tevent: '/',\n\t\t\tstories: '/'\n\t\t};\n\t}\n\n\t/**\n\t * Gets the entity list.\n\t * @returns {object}\n\t */\n\tgetEntityList() {\n\t\treturn this._entityList;\n\t}\n\n\t/**\n\t * Sets the entity list.\n\t * @param {object} entityList - List of entities\n\t */\n\tsetEntityList(entityList) {\n\t\tfor (const [key, value] of Object.entries(entityList)) {\n\t\t\tif (value.disabled === true) {\n\t\t\t\tdelete entityList[key];\n\t\t\t}\n\t\t}\n\t\tthis._entityList = entityList;\n\n\t\tObject.keys(this._entityList).forEach(k => {\n\t\t\tconst { category } = this._entityList[k];\n\n\t\t\t// Category\n\t\t\tif (this._entitiesByCategory[category]) {\n\t\t\t\t// Populate category list\n\t\t\t\tthis._entitiesByCategory[category].push(this._entityList[k]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Create category list\n\t\t\t\tthis._entitiesByCategory[category] = [this._entityList[k]];\n\t\t\t}\n\n\t\t\t// Subcategory\n\t\t\tlet { subcategory } = this._entityList[k];\n\t\t\tif (!subcategory || subcategory === '') {\n\t\t\t\tsubcategory = category;\n\t\t\t}\n\t\t\tif (this._entitiesBySubCategory[subcategory]) {\n\t\t\t\t// Populate subcategory list\n\t\t\t\tthis._entitiesBySubCategory[subcategory].push(this._entityList[k]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Create subcategory list\n\t\t\t\tthis._entitiesBySubCategory[subcategory] = [this._entityList[k]];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the entity global information from the entity list file, or null if it is not found.\n\t * @param {string} id - The entity id.\n\t * @returns {EntityInfo | null}\n\t */\n\tgetEntityInfo(id) {\n\t\tif (id in this._entityList) {\n\t\t\treturn this._entityList[id];\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an entity description.\n\t * @param {string} id - The entity id.\n\t * @returns {object}\n\t */\n\tasync getEntityDesc(id) {\n\t\tlet entityDesc = null;\n\t\ttry {\n\t\t\tentityDesc = await AppUtils.loadJSON(this._folders.description + id + '.json');\n\t\t}\n\t\tcatch (err) {\n\t\t\tentityDesc = null;\n\t\t}\n\t\treturn entityDesc;\n\t}\n\n\t/**\n\t * Sets/Updates folders for fetching files.\n\t * @param {object} [folders={}]\n\t */\n\tsetFolders(folders = {}) {\n\t\tfor (const key in folders) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(folders, key)) {\n\t\t\t\tfolders[key] = AppUtils.addEndToPath(folders[key]);\n\t\t\t\tthis._folders[key] = folders[key];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the list of cards.\n\t * @returns {object}\n\t */\n\tgetStoryList() {\n\t\treturn this._storyList;\n\t}\n\n\t/**\n\t * Set the cards\n\t * @param {object} allStories - List of cards\n\t */\n\tsetStoryList(allStories) {\n\t\tthis._storyList = allStories;\n\t}\n\n\t/**\n\t * Get a story from story list.\n\t * @param {string} id - Story ID\n\t * @returns {object}\n\t */\n\tgetStory(id) {\n\t\tif (!id) {\n\t\t\tthrow new Error('[ContentManager.getStory]: id is required.');\n\t\t}\n\t\tif (!this._stories[id]) {\n\t\t\tthrow new Error(`[ContentManager.getStory]: Cannot find story with id ${id}.`);\n\t\t}\n\n\t\tthis._context.story = this._stories[id];\n\t\treturn this._context.story;\n\t}\n\n\t/**\n\t * Set stories content.\n\t * @param {object} stories\n\t */\n\tsetStories(stories) {\n\t\tthis._stories = stories;\n\t}\n\n\t/**\n\t * Load multiple description files.\n\t * @param {string[]} itemsList - a name or a list of names\n\t * @param {CancelToken} cancelToken\n\t * @returns {Promise}\n\t */\n\tasync loadDescriptions(itemsList, cancelToken) {\n\t\tfor (let i = 0; i < itemsList.length; i++) {\n\t\t\tconst item = itemsList[i];\n\t\t\tconst desc = await this.getEntityDesc(item);\n\t\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._context[item] = desc;\n\t\t}\n\t}\n\n\t/**\n\t * Load event files of a target.\n\t * @param {string} target\n\t * @param {string} [fileNames={}] - JSON files\n\t * @param {CancelToken} cancelToken\n\t */\n\tasync loadEvents(target, fileNames = {}, cancelToken) {\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventFolder = AppUtils.addEndToPath(this._folders.event + target);\n\n\t\tif (fileNames.all) {\n\t\t\tif (this._target !== target || AppUtils.isEmptyObject(this._context.events)) {\n\t\t\t\tlet allEvents = null;\n\t\t\t\ttry {\n\t\t\t\t\tallEvents = await AppUtils.loadJSON(eventFolder + fileNames.all);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tallEvents = null;\n\t\t\t\t}\n\t\t\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._context.events = allEvents;\n\n\t\t\t\tif (this._context.events !== null) {\n\t\t\t\t\t// Convert object to array\n\t\t\t\t\tconst orderedEvents = [];\n\t\t\t\t\tfor (const [key, value] of Object.entries(this._context.events)) {\n\t\t\t\t\t\tif (value.start) {\n\t\t\t\t\t\t\tvalue.start = moment.tz(value.start, 'Etc/UTC');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.error('[Content Manager] Error: event missing start date ' + target + ' ' + key);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value.end) {\n\t\t\t\t\t\t\tvalue.end = moment.tz(value.end, 'Etc/UTC');\n\t\t\t\t\t\t}\n\t\t\t\t\t\torderedEvents.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sort by start time\n\t\t\t\t\torderedEvents.sort((a, b) => a.start.valueOf() - b.start.valueOf());\n\t\t\t\t\tthis._context.orderedEvents = orderedEvents;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._context.orderedEvents = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (fileNames.event) {\n\t\t\t// Check for template file\n\t\t\tconst event = this._context.events[fileNames.event];\n\t\t\tconst eventFile = (event && event.template) ? event.template : fileNames.event;\n\n\t\t\tlet eventDesc = null;\n\t\t\ttry {\n\t\t\t\teventDesc = await AppUtils.loadJSON(eventFolder + eventFile);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\teventDesc = null;\n\t\t\t}\n\t\t\tif (cancelToken && cancelToken.isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._context.eventDesc = eventDesc;\n\t\t}\n\n\t\tthis._target = target;\n\t}\n\n\t/**\n\t * Returns an array of spheroidLayers for an entity (or undefined)\n\t * @param {string} entityId\n\t * @returns {object}\n\t */\n\tgetSpheroidLayers(entityId) {\n\t\treturn this._entityShperoidLayersList[entityId];\n\t}\n\n\t/**\n\t * Load WMTS, CMS and surface map info\n\t * @param {object} layersArray\n\t */\n\tsetSpheroidLayers(layersArray) {\n\t\tthis._entityShperoidLayersList = layersArray;\n\t}\n\n\t/**\n\t * Returns an array of spheroidFeatures for an entity (or empty array if none exist for the entity).\n\t * @param {string} entityId\n\t * @returns {object}\n\t */\n\tgetSpheroidFeatures(entityId) {\n\t\treturn this._entityShperoidFeaturesList[entityId] || [];\n\t}\n\n\t/**\n\t * Load Features info (Magnetosphere, Auroras, radiation belts).\n\t * @param {object} featuresArray\n\t */\n\tsetSpheroidFeatures(featuresArray) {\n\t\tthis._entityShperoidFeaturesList = featuresArray;\n\t}\n\n\t/**\n\t * Returns the css classname of the color associated with this entityId in color.css\n\t * @param {string} entityId\n\t * @returns {string}\n\t */\n\tgetColorClass(entityId) {\n\t\tlet colorClass = '';\n\t\tif (!this.getEntityInfo(entityId)) {\n\t\t\treturn colorClass;\n\t\t}\n\n\t\tconst entityInfoCategory = this.getEntityInfo(entityId).category;\n\n\t\tswitch (entityInfoCategory) {\n\t\t\tcase 'Asteroid': {\n\t\t\t\tcolorClass = 'asteroid';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Instrument':\n\t\t\tcase 'Spacecraft': {\n\t\t\t\tcolorClass = 'spacecraft';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Planet': {\n\t\t\t\tcolorClass = entityId;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Dwarf Planet': {\n\t\t\t\tcolorClass = 'dwarf-planet';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Comet': {\n\t\t\t\tcolorClass = 'comet';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Barycenter':\n\t\t\tcase 'Moon': {\n\t\t\t\tcolorClass = 'moon';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Universe':\n\t\t\tcase 'Galaxy':\n\t\t\tcase 'Star': {\n\t\t\t\tcolorClass = 'sun';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tcolorClass = '';\n\t\t\t}\n\t\t}\n\n\t\treturn colorClass;\n\t}\n\n\t/**\n\t * Returns true if the entity has a landed.\n\t * @param {object} entityInfo\n\t * @returns {boolean}\n\t */\n\thasLanded(entityInfo) {\n\t\tif (!entityInfo.landingDate || entityInfo.landingDate === '') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if category match lander categories\n\t\tconst categories = ['Lander', 'Rover'];\n\t\tif (categories.indexOf(entityInfo.subcategory) < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if landing date is after current time\n\t\tconst landing = this._app.getManager('time').parseTime(entityInfo.landingDate);\n\t\tconst current = this._app.getManager('time').getTime();\n\t\tif (current.isSameOrAfter(landing)) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// TODO: Rework / currently used by labels\n\t/**\n\t * getClassName\n\t * @param {*} id\n\t * @param {string} category - optional category\n\t * @returns {string}\n\t */\n\tgetClassName(id, category) {\n\t\tconst entityInfo = this.getEntityInfo(id);\n\n\t\tlet className = id;\n\n\t\t// Add category\n\t\tif (category) {\n\t\t\tclassName += ' ' + category.toLowerCase().replace(/ /g, '-');\n\t\t}\n\t\telse if (entityInfo !== null && entityInfo.category !== undefined) {\n\t\t\tconst category = entityInfo.category.toLowerCase().replace(/ /g, '-');\n\t\t\tclassName += ' ' + category;\n\t\t}\n\n\t\t// Cant start with a number\n\t\tif (className.match(/^\\d/)) {\n\t\t\tclassName = '_' + className;\n\t\t}\n\n\t\treturn className;\n\t}\n\n\t/**\n\t * Returns true if the entity information has a specific keyword.\n\t * @param {string} id - The entity id.\n\t * @param {string} keyword - The keyword searched.\n\t * @returns {boolean}\n\t */\n\thasKeyword(id, keyword) {\n\t\tif (this.getEntityInfo(id) !== undefined) {\n\t\t\treturn this.getEntityInfo(id).keywords.includes(keyword);\n\t\t}\n\t}\n\n\t/**\n\t * Resets the context.\n\t */\n\tresetContext() {\n\t\tthis._context = {};\n\t\tthis._context.events = {};\n\t\tthis._context.eventDesc = {};\n\t\tthis._context.orderedEvents = {};\n\t\tthis._context.story = {};\n\t}\n\n\t/**\n\t * Hide external links\n\t * @param {string} text\n\t * @returns {string}\n\t */\n\thideExternalLinksInText(text) {\n\t\t// Remove all external links/replcae them with the text that was already there\n\t\treturn text.replaceAll(/<a.*?href=['\"](https?:)?\\/\\/[^>]*>(.*?)<\\/a>/g, '$2');\n\t}\n\n\t/**\n\t * Hide external link stories from story list\n\t */\n\thideExternalLinkStoryList() {\n\t\tconst stories = this.getStoryList();\n\t\tconst internalStories = {};\n\t\tconst externalStoryIds = stories['external'] ? Object.keys(stories['external']) : [];\n\n\t\tfor (const [category, storyListItems] of Object.entries(stories)) {\n\t\t\tif (category !== 'external') {\n\t\t\t\tinternalStories[category] = storyListItems;\n\n\t\t\t\t// Remove any external story from other story categories in list, such as 'featured'\n\t\t\t\tconst storyListIsArray = Array.isArray(storyListItems);\n\t\t\t\tif (storyListIsArray) {\n\t\t\t\t\tconst listWithoutExternal = storyListItems.filter(id => !externalStoryIds.includes(id));\n\t\t\t\t\tif (listWithoutExternal.length > 0) {\n\t\t\t\t\t\tinternalStories[category] = listWithoutExternal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If the story list item is an object, remove any keys that match the external stories\n\t\t\t\t\tconst externalStoriesInKeys = Object.keys(storyListItems).filter(key => externalStoryIds.includes(key));\n\t\t\t\t\tfor (let i = 0; i < externalStoriesInKeys.length; i++) {\n\t\t\t\t\t\tdelete storyListItems[externalStoriesInKeys[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setStoryList(internalStories);\n\t}\n\n\t/**\n\t * Display error message and throw previous url.\n\t * @param {string} err - Original error message\n\t * @param {string} [message=''] - Message to concate in front of error message\n\t * @throws {string}\n\t */\n\t_handleError(err, message = '') {\n\t\tconsole.error(message + err);\n\t\tlet url = this.app.getManager('router').previousRoute.url;\n\t\tif (!url) {\n\t\t\turl = this.app.getManager('router').homeRoute;\n\t\t}\n\t\terr.previousRoute = url;\n\t\tthrow err;\n\t}\n\n\t/**\n\t * Get entities grouped by category.\n\t * @returns {object}\n\t */\n\tget entitiesByCategory() {\n\t\treturn this._entitiesByCategory;\n\t}\n\n\t/**\n\t * Get entities grouped by category.\n\t * @returns {object}\n\t */\n\tget entitiesBySubCategory() {\n\t\treturn this._entitiesBySubCategory;\n\t}\n\n\t/**\n\t * Get context of current target.\n\t * @returns {object}\n\t */\n\tget context() {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * Get all events for current target.\n\t * @returns {object}\n\t */\n\tget events() {\n\t\treturn this._context.events;\n\t}\n\n\t/**\n\t * Get all events for current target ordered by start date.\n\t * @returns {object}\n\t */\n\tget orderedEvents() {\n\t\treturn this._context.orderedEvents;\n\t}\n\n\t/**\n\t * Get description for current event.\n\t * @returns {object}\n\t */\n\tget eventDesc() {\n\t\treturn this._context.eventDesc;\n\t}\n}\n","import {\n\tAppUtils,\n\tBaseApp,\n\tBaseManager,\n\tSceneManager\n} from '../internal';\n/** @typedef {import('moment-timezone')} moment */\n\n/**\n * ERT manager class.\n * @extends BaseManager\n */\nexport class ERTManager extends BaseManager {\n\t/**\n\t * @inheritdoc\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t * @param {boolean} [options.isERT=false]\n\t * @param {string} [options.ertTarget='']\n\t * @param {SceneManager} [options.sceneMgr=null]\n\t */\n\tconstructor(app, { isERT = false, ertTarget = '', sceneMgr = null } = {}) {\n\t\tsuper(app);\n\n\t\tthis._isERT = isERT;\n\t\tthis._ertTarget = ertTarget;\n\t\tthis._sceneMgr = sceneMgr;\n\n\t\tthis.getNow = this.getNow.bind(this);\n\t}\n\n\t/**\n\t * Get status on/off of Earth Received Time mode.\n\t * @returns {boolean}\n\t */\n\tisERT() {\n\t\treturn this._isERT;\n\t}\n\n\t/**\n\t * Sets Earth Received Time mode on/off for time display.\n\t * @param {boolean} isERT - on/off\n\t */\n\tsetERT(isERT) {\n\t\tthis._isERT = isERT;\n\t}\n\n\t/**\n\t * Get target for Earth Received Time.\n\t * @returns {string}\n\t */\n\tgetERTTarget() {\n\t\treturn this._ertTarget;\n\t}\n\n\t/**\n\t * Set target for Earth Received Time.\n\t * @param {string} target\n\t */\n\tsetERTTarget(target) {\n\t\tthis._ertTarget = target;\n\t}\n\n\t/**\n\t * Get scene manager for Earth Received Time.\n\t * @returns {SceneManager}\n\t */\n\tgetERTScene() {\n\t\treturn this._sceneMgr;\n\t}\n\n\t/**\n\t * Set scene manager for Earth Received Time.\n\t * @param {SceneManager} sceneMgr\n\t */\n\tsetERTScene(sceneMgr) {\n\t\tthis._sceneMgr = sceneMgr;\n\t}\n\n\t/**\n\t * Get ERT offset in seconds.\n\t * @returns {number}\n\t */\n\tgetERTOffset() {\n\t\tif (this._sceneMgr !== null) {\n\t\t\tconst distance = this._sceneMgr.getDistance(this._ertTarget, 'earth', { subtractRadius: true });\n\t\t\treturn distance / AppUtils.constants.speedOfLight;\n\t\t}\n\t\telse {\n\t\t\tconsole.warn('Clock: could not get scene manager.');\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Get ERT from time.\n\t * @param {moment} time - Time at target\n\t * @returns {moment}\n\t */\n\tgetERTFromTime(time) {\n\t\tconst offset = this.getERTOffset();\n\t\ttime.add(offset, 's');\n\t\treturn time;\n\t}\n\n\t/**\n\t * Get time at target from ERT.\n\t * @param {moment} time - Earth Received Time\n\t * @returns {moment}\n\t */\n\tgetTimeFromERT(time) {\n\t\tconst offset = this.getERTOffset();\n\t\ttime.subtract(offset, 's');\n\t\treturn time;\n\t}\n\n\t/**\n\t * Get now time based on ERT mode.\n\t * @param {moment} time\n\t * @returns {moment}\n\t */\n\tgetNow(time) {\n\t\tif (this._isERT) {\n\t\t\treturn this.getTimeFromERT(time);\n\t\t}\n\t\telse {\n\t\t\treturn time;\n\t\t}\n\t}\n}\n","import * as Pioneer from 'pioneer';\n// Import locals\nimport {\n\tBaseManager,\n\tContentManager,\n\tLayerManager,\n\tBaseApp\n} from '../internal';\nimport '../lib/quadtree';\n\n/**\n * Label Manager class.\n * @extends BaseManager\n */\nexport class LabelManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {Pioneer.Scene} scene\n\t */\n\tconstructor(app, scene) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * Main Pioneer scene.\n\t\t * @type {Pioneer.Scene}\n\t\t */\n\t\tthis._scene = scene;\n\n\t\tthis._eventNames.push('hoverchange', 'labelclicked');\n\t\tthis._initCallbacks();\n\n\t\t/**\n\t\t * Classname for icons based on category.\n\t\t * @type {Object<string>}\n\t\t */\n\t\tthis._iconMap = {\n\t\t\tUniverse: 'no-icon',\n\t\t\tGalaxy: 'no-icon',\n\t\t\tStar: 'no-icon',\n\t\t\tBarycenter: 'icon-circle-white-small',\n\t\t\t'Landing site': 'icon-hexagon',\n\t\t\tMoon: 'icon-circle-white-small',\n\t\t\tAsteroid: 'icon-circle-white-small',\n\t\t\t'Dwarf Planet': 'icon-circle-white-small',\n\t\t\tComet: 'icon-circle-white-small',\n\t\t\tSpacecraft: 'icon-hexagon',\n\t\t\tPlanet: 'icon-circle-',\n\t\t\tDefault: 'icon-circle-white-small'\n\t\t};\n\n\t\t/**\n\t\t * Weight map for label priority.\n\t\t * @type {Object<string>}\n\t\t */\n\t\tthis._weightMap = {\n\t\t\tUniverse: '100',\n\t\t\tGalaxy: '100',\n\t\t\tStar: '100',\n\t\t\tBarycenter: '0',\n\t\t\t'Landing site': '5',\n\t\t\tAsteroid: '15',\n\t\t\tComet: '15',\n\t\t\tMoon: '25',\n\t\t\t'Dwarf Planet': '28',\n\t\t\tSpacecraft: '30',\n\t\t\tPlanet: '50'\n\t\t};\n\n\t\t/**\n\t\t * An object storing weights of labels.\n\t\t * @type {object} - { id: { weight: num }}\n\t\t */\n\t\tthis._weights = {};\n\n\t\t/**\n\t\t * TODO: Seems to be unused\n\t\t * Method for finding conflicting labels\n\t\t * @type {number}\n\t\t */\n\t\tthis._algorithm = this.Quadtree;\n\n\t\t/**\n\t\t * Quadtree object.\n\t\t * @type {Quadtree}\n\t\t * @private\n\t\t */\n\t\tthis._quadTree = new Quadtree({ // TODO: Quadtree is not defined nearby.\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t}, 2, 8);\n\n\t\t/**\n\t\t * Custom label object storing various label information.\n\t\t * @type {object}\n\t\t */\n\t\tthis._labels = {};\n\n\t\t/**\n\t\t * Array to store collinding labels ordered by weight.\n\t\t * @type {string[]}\n\t\t */\n\t\tthis._collidingLabels = [];\n\n\t\t// Manage multiple frame operations\n\t\tthis._frameCount = 0;\n\t\tthis._frameStep = 1;\n\t\tthis._frameCycle = this._frameStep * 3;\n\n\t\t/**\n\t\t * Sets name for active label class.\n\t\t * @type {string}\n\t\t */\n\t\tthis._activeClass = 'active';\n\n\t\t/**\n\t\t * Sets name for hidden label class.\n\t\t * @type {string}\n\t\t */\n\t\tthis._hiddenClass = 'hidden';\n\n\t\t/**\n\t\t * Sets default overlap percentage threshold to hide conflicting labels.\n\t\t * @type {number} - between 0.0 and 1.0\n\t\t */\n\t\tthis._overlapThreshold = 0.25;\n\n\t\t/**\n\t\t * All labels are clickable or not.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isClickable = true;\n\n\t\t/**\n\t\t * Update loop is stopped or not.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isPaused = false;\n\n\t\t/**\n\t\t * Stores if the label was clicked to prevent conflict with select controller.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._allLabelsHidden = false;\n\n\t\t/**\n\t\t * Exceptions on hiding labels.\n\t\t * @type {Set}\n\t\t */\n\t\tthis._exceptions = new Set();\n\n\t\t/**\n\t\t * Center bouding rect object.\n\t\t * @type {object}\n\t\t */\n\t\tthis._centerBoundingRect = {\n\t\t\tname: 'center',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: 50,\n\t\t\theight: 50\n\t\t};\n\n\t\tthis.bindFunctions([\n\t\t\t'update',\n\t\t\t'toggleLabels',\n\t\t\t'toggleLabelForEntity',\n\t\t\t'toggleIcons',\n\t\t\t'toggleIconForEntity',\n\t\t\t'_clickCallback',\n\t\t\t'setUpLabel',\n\t\t\t'removeLabel',\n\t\t\t'setUpIcon'\n\t\t]);\n\t}\n\n\t/**\n\t * Sets the list of all entities.\n\t * @param {Pioneer.Collection} entities\n\t */\n\tsetEntities(entities) {\n\t\tthis._labels = {};\n\t\tfor (let i = entities.size - 1; i >= 0; i--) {\n\t\t\tconst entity = entities.get(i);\n\t\t\tthis.addEntity(entity);\n\t\t}\n\t}\n\n\t/**\n\t * Adds an entity to the label manager.\n\t * @param {Pioneer.Entity} entity\n\t */\n\taddEntity(entity) {\n\t\tif (entity.getComponentByType('div')) {\n\t\t\tthis._labels[entity.getName()] = {\n\t\t\t\tname: entity.getName(),\n\t\t\t\tel: entity.getComponentByType('div').getDiv(),\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tcheck: false,\n\t\t\t\tcollisions: [],\n\t\t\t\tisHidden: false,\n\t\t\t\tisClickable: true\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Removes an entity to the label manager.\n\t * @param {Pioneer.Entity} entity\n\t */\n\tremoveEntity(entity) {\n\t\tif (this._labels[entity.getName()] !== undefined) {\n\t\t\tdelete this._labels[entity.getName()];\n\t\t}\n\t}\n\n\t/**\n\t * TODO Variable is not used anywhere\n\t * Sets type of algorithm to use.\n\t * @param {number} algo\n\t */\n\tsetAlgorithm(algo) {\n\t\tthis._algorithm = algo;\n\t}\n\n\t/**\n\t * Sets the scene.\n\t * @param {Pioneer.Scene} scene\n\t */\n\tsetScene(scene) {\n\t\tthis._scene = scene;\n\t}\n\n\t/**\n\t * Sets weights for labels.\n\t * @param {object} weights\n\t * @param {boolean} reset\n\t */\n\tsetWeights(weights, reset = true) {\n\t\tif (reset) this._weights = {};\n\t\tfor (const name of Object.keys(weights)) {\n\t\t\t// Use category weight\n\t\t\tconst category = weights[name].category;\n\t\t\tthis._weights[name] = {};\n\t\t\tif (this._weightMap[category] !== undefined) {\n\t\t\t\tthis._weights[name].weight = this._weightMap[category];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._weights[name].weight = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes label weights.\n\t * @param {object} weights\n\t */\n\tremoveWeights(weights) {\n\t\tfor (const name of Object.keys(weights)) {\n\t\t\tif (this._weights[name]) {\n\t\t\t\tdelete this._weights[name];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets weight for a label.\n\t * @param {string} name\n\t * @returns {number}\n\t */\n\tgetWeight(name) {\n\t\tif (Object.keys(this._weights).length <= 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (this._weights[name] !== undefined) {\n\t\t\treturn this._weights[name].weight;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Check if a label exists.\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\tisExisting(name) {\n\t\tif (this._labels[name] === undefined) {\n\t\t\tdelete this._labels[name];\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Setup labels.\n\t * @param {Pioneer.Entity} entity\n\t * @private\n\t */\n\tsetUpLabel(entity) {\n\t\tconst contentManager = /** @type {ContentManager} */ (this._app.getManager('content'));\n\t\tconst layerManager = /** @type {LayerManager} */ (this._app.getManager('layer'));\n\t\tthis.addEntity(entity);\n\t\tthis.setLabelProps({\n\t\t\tgetLabelClass: entityName => `no-select ${contentManager.getClassName(entityName) ?? ''}`\n\t\t}, [entity.getName()]);\n\n\t\tconst targetId = entity.getName();\n\t\tconst labelsLayer = layerManager.getLayer('labels');\n\n\t\t// Reset visibility of trails\n\t\tif (labelsLayer !== null && !labelsLayer.visible) {\n\t\t\tthis.toggleLabelForEntity(false, targetId);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the label on an entity.\n\t * @param {Pioneer.Entity} entity\n\t * @private\n\t */\n\tremoveLabel(entity) {\n\t\tthis.removeEntity(entity);\n\t}\n\n\t/**\n\t * Callback to execute custom code for icons after entity is created.\n\t * @param {Pioneer.Entity} entity\n\t * @private\n\t */\n\tsetUpIcon(entity) {\n\t\t// Check status of icons with the layer manager\n\t\t// Whatever custom code for icons we need to call after entity is created.\n\t\tconst layerManager = /** @type {LayerManager} */ (this._app.getManager('layer'));\n\t\tconst targetId = entity.getName();\n\t\tconst iconsLayer = layerManager.getLayer('icons');\n\n\t\t// Reset visibility of trails\n\t\tif (iconsLayer !== null && !iconsLayer.visible) {\n\t\t\tthis.toggleIconForEntity(false, targetId);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the clickable boolean flag for a label of given label name.\n\t * @param {string} labelName\n\t * @param {boolean} clickable\n\t */\n\tsetLabelClickable(labelName, clickable) {\n\t\tif (this._labels[labelName]) {\n\t\t\tthis._labels[labelName].isClickable = clickable;\n\t\t\tthis._labels[labelName].el.classList.toggle('clickable', clickable);\n\t\t}\n\t}\n\n\t/**\n\t * Enable/disable all labels click.\n\t * @param {boolean} isClickable\n\t */\n\tsetClickable(isClickable) {\n\t\tthis._isClickable = isClickable;\n\n\t\tfor (let i = 0, l = this._scene.getNumEntities(); i < l; i++) {\n\t\t\tconst entity = this._scene.getEntity(i);\n\t\t\tconst divComponent = entity.get('div');\n\t\t\tif (divComponent !== null) {\n\t\t\t\tconst div = divComponent.getDiv();\n\t\t\t\tif (isClickable) {\n\t\t\t\t\tdiv.classList.remove('unclickable');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdiv.classList.add('unclickable');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add label to hiding exceptions.\n\t * @param {string} label\n\t */\n\taddException(label) {\n\t\tthis._exceptions.add(label);\n\t}\n\n\t/**\n\t * Remove label from hiding exceptions.\n\t * @param {string} label\n\t */\n\tremoveException(label) {\n\t\tthis._exceptions.delete(label);\n\t}\n\n\t/**\n\t * Add labels to hiding exceptions.\n\t * @param {string[]} labels\n\t */\n\taddExceptions(labels) {\n\t\tlabels.forEach(label => this._exceptions.add(label));\n\t}\n\n\t/**\n\t * Remove labels from hiding exceptions.\n\t * @param {string[]} labels\n\t */\n\tremoveExceptions(labels) {\n\t\tlabels.forEach(label => this._exceptions.delete(label));\n\t}\n\n\t/**\n\t * Toggles all the label names in the scene.\n\t * @param {boolean} active\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined]\n\t */\n\ttoggleLabels(active, { scene = undefined } = {}) {\n\t\tif (scene === undefined) {\n\t\t\tscene = this._scene;\n\t\t}\n\n\t\tfor (let i = 0; i < scene.getNumEntities(); i++) {\n\t\t\tthis.toggleLabelForEntity(active, scene.getEntity(i).getName(), { scene });\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the label name for the specified entity.\n\t * @param {boolean} active\n\t * @param {string} entityId\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined]\n\t */\n\ttoggleLabelForEntity(active, entityId, { scene = undefined } = {}) {\n\t\tlet currentScene = scene;\n\t\tif (currentScene === undefined) {\n\t\t\tcurrentScene = this._scene;\n\t\t}\n\t\tconst entity = currentScene.getEntity(entityId);\n\t\tconst div = entity.get('div');\n\t\tif (this._exceptions.has(entity.getName())) {\n\t\t\treturn;\n\t\t}\n\t\tif (div !== null) {\n\t\t\tif (active) {\n\t\t\t\tdiv.getDiv().lastElementChild?.classList.remove('hidden');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdiv.getDiv().lastElementChild?.classList.add('hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles all the icons in the scene.\n\t * @param {boolean} active\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined]\n\t */\n\ttoggleIcons(active, { scene = undefined } = {}) {\n\t\tif (scene === undefined) {\n\t\t\tscene = this._scene;\n\t\t}\n\t\tfor (let i = 0; i < scene.getNumEntities(); i++) {\n\t\t\tthis.toggleIconForEntity(active, scene.getEntity(i).getName(), { scene });\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the icon for the specified entity.\n\t * @param {boolean} active\n\t * @param {string} entityId\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined]\n\t */\n\ttoggleIconForEntity(active, entityId, { scene = undefined } = {}) {\n\t\tlet currentScene = scene;\n\t\tif (currentScene === undefined) {\n\t\t\tcurrentScene = this._scene;\n\t\t}\n\t\tconst entity = currentScene.getEntity(entityId);\n\t\tconst div = entity.get('div');\n\t\tif (this._exceptions.has(entity.getName())) {\n\t\t\treturn;\n\t\t}\n\t\tif (div !== null) {\n\t\t\tif (active) {\n\t\t\t\tdiv.getDiv().firstElementChild?.classList.remove('hidden');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdiv.getDiv().firstElementChild?.classList.add('hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets link from entity's name.\n\t * @param {string} entityName\n\t * @returns {string}\n\t */\n\t_getLink(entityName) {\n\t\treturn `/${entityName}`;\n\t}\n\n\t/**\n\t * Callback to handle label click.\n\t * @param {Pioneer.Entity} entity\n\t */\n\t_clickCallback(entity) {\n\t\tconst router = this._app.getManager('router');\n\n\t\t// Get parsed link if available.\n\t\tconst parsedLink = this._getLink(entity.getName());\n\n\t\tconst linkPath = typeof parsedLink === 'string' ? parsedLink : (parsedLink.path ?? '');\n\n\t\tconst {\n\t\t\toptions = { keepTime: true },\n\t\t\tquery = {}\n\t\t} = typeof parsedLink === 'object' && parsedLink;\n\n\t\t// Go to the object, maintaining time query if it exists.\n\t\trouter.navigate(query, linkPath, options);\n\t}\n\n\t/**\n\t * setLabelProps (previously Prepare labels)\n\t * @param {object} options\n\t * @param {(name: string) => string} [options.getLabelClass]\n\t * @param {(name: string) => string} [options.getIconClass]\n\t * @param {(name: string) => string} [options.getTextClass]\n\t * @param {(event: MouseEvent, name: string) => void} [options.handleClick]\n\t * @param {(event: TouchEvent, name: string) => void} [options.handleTouch]\n\t * @param {(event: MouseEvent, name: string) => void} [options.handleMouseEnter]\n\t * @param {(event: MouseEvent, name: string) => void} [options.handleMouseLeave]\n\t * @param {Array<string>} labelNames\n\t * @param {Pioneer.Scene} sceneParam\n\t * @param {Pioneer.Entity} cameraParam\n\t */\n\tsetLabelProps({ getLabelClass, getIconClass, getTextClass, handleClick, handleTouch, handleMouseEnter, handleMouseLeave } = {}, labelNames = Object.keys(this._labels), sceneParam, cameraParam) {\n\t\tlet scene = sceneParam;\n\t\tif (!scene) {\n\t\t\tscene = this._scene;\n\t\t}\n\n\t\tlet cameraEntity = cameraParam;\n\t\tif (!cameraEntity) {\n\t\t\tcameraEntity = scene.get('camera');\n\t\t}\n\n\t\tconst camera = cameraEntity.getComponentByType('camera');\n\n\t\t// Create labels\n\t\tfor (const name of labelNames) {\n\t\t\tconst entity = scene.getEntity(name);\n\t\t\tconst entityInfo = this._app.getManager('content').getEntityInfo(name);\n\t\t\tconst divComponent = entity.get('div');\n\n\t\t\tif (divComponent === null) continue;\n\n\t\t\t// Set active camera\n\t\t\tdivComponent.setActiveCamera(camera);\n\n\t\t\t// Get label element.\n\t\t\tconst labelEl = divComponent.getDiv();\n\n\t\t\t// Call the getLabelClass if it's passed.\n\t\t\tconst labelClass = typeof getLabelClass === 'function' ? getLabelClass(name) : '';\n\t\t\tlabelEl.className += ` ${labelClass} clickable`;\n\n\t\t\t// Create icon and text child elements.\n\t\t\tconst iconEl = document.createElement('span');\n\t\t\tconst textEl = document.createElement('span');\n\n\t\t\t// Determine icon classes.\n\t\t\tconst iconMapClass = this._iconMap[entityInfo?.category] ?? this._iconMap.Default;\n\t\t\tconst iconNameClass = entityInfo?.category === 'Planet' ? name : '';\n\t\t\tconst iconCallbackClass = typeof getIconClass === 'function' ? getIconClass(name) : '';\n\t\t\ticonEl.className = `icon ${iconMapClass}${iconNameClass} ${iconCallbackClass}`;\n\t\t\t// Determine textEl classes and inner html.\n\t\t\ttextEl.className = `text ${typeof getTextClass === 'function' ? getTextClass(name) : ''}`;\n\t\t\ttextEl.innerHTML = entityInfo?.displayName || entityInfo?.iauName || labelEl.innerHTML;\n\n\t\t\t// Clear any labelEl html.\n\t\t\tlabelEl.innerHTML = '';\n\n\t\t\t// Append the babes.\n\t\t\tlabelEl.appendChild(iconEl);\n\t\t\tlabelEl.appendChild(textEl);\n\n\t\t\t// Define default click/touch/hover handlers\n\t\t\tconst defaultOnClick = async event => {\n\t\t\t\tconst labelInfo = this._labels[name];\n\n\t\t\t\tif (!this._isClickable || !labelInfo?.isClickable) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._clickCallback !== null) {\n\t\t\t\t\tthis._clickCallback(entity);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.triggerCallbacks('labelclicked', [true]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst defaultOnTouchEnd = async event => {\n\t\t\t\tconst labelInfo = this._labels[name];\n\n\t\t\t\tif (!this._isClickable || !labelInfo?.isClickable) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this.app.isDragging() && !this.app.isTouchMax() && this._clickCallback !== null) {\n\t\t\t\t\tthis._clickCallback(entity);\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.triggerCallbacks('labelclicked', [true]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Prevent touch or mouse conflict, trigger callbacks for labelclicked state.\n\t\t\tlabelEl.addEventListener('mousedown', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.triggerCallbacks('labelclicked', [false]);\n\t\t\t});\n\t\t\tlabelEl.addEventListener('touchstart', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.triggerCallbacks('labelclicked', [false]);\n\t\t\t});\n\n\t\t\tconst defaultOnMouseEnter = () => this.triggerCallbacks('hoverchange', [name, true]);\n\t\t\tconst defaultOnMouseLeave = () => this.triggerCallbacks('hoverchange', [name, false]);\n\n\t\t\t// Determine handlers if they are passed as options\n\t\t\tconst onClick = typeof handleClick === 'function' ? event => handleClick(event, name) : defaultOnClick;\n\t\t\tconst onTouchEnd = typeof handleTouch === 'function' ? event => handleTouch(event, name) : defaultOnTouchEnd;\n\t\t\tconst onMouseEnter = typeof handleMouseEnter === 'function' ? event => handleMouseEnter(event, name) : defaultOnMouseEnter;\n\t\t\tconst onMouseLeave = typeof handleMouseLeave === 'function' ? event => handleMouseLeave(event, name) : defaultOnMouseLeave;\n\n\t\t\t// There's probably a neater way to do this.\n\t\t\tif (handleClick !== null && labelEl.getAttribute('hasClickListener') !== 'true') {\n\t\t\t\tlabelEl.setAttribute('hasClickListener', 'true');\n\t\t\t\tlabelEl.addEventListener('click', onClick);\n\t\t\t}\n\t\t\tif (handleTouch !== null && labelEl.getAttribute('hasTouchEndListener') !== 'true') {\n\t\t\t\tlabelEl.setAttribute('hasTouchEndListener', 'true');\n\t\t\t\tlabelEl.addEventListener('touchend', onTouchEnd);\n\t\t\t}\n\t\t\tif (handleMouseEnter !== null && labelEl.getAttribute('hasMouseEnterListener') !== 'true') {\n\t\t\t\tlabelEl.setAttribute('hasMouseEnterListener', 'true');\n\t\t\t\tlabelEl.addEventListener('mouseenter', onMouseEnter);\n\t\t\t}\n\t\t\tif (handleMouseLeave !== null && labelEl.getAttribute('hasMouseLeaveListener') !== 'true') {\n\t\t\t\tlabelEl.setAttribute('hasMouseLeaveListener', 'true');\n\t\t\t\tlabelEl.addEventListener('mouseleave', onMouseLeave);\n\t\t\t}\n\t\t\tif (labelEl.getAttribute('hasMouseMoveListener') !== 'true') {\n\t\t\t\tlabelEl.setAttribute('hasMouseMoveListener', 'true');\n\t\t\t\tlabelEl.addEventListener('mousemove', event => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds specific class to list of label divs\n\t * @param {string} className\n\t * @param {Array<string>} labelNames\n\t */\n\taddClassToLabels(className, labelNames) {\n\t\tfor (const name of labelNames) {\n\t\t\tconst entity = this._scene.getEntity(name);\n\t\t\tconst labelEl = entity?.get('div')?.getDiv();\n\n\t\t\tlabelEl?.classList.add(className);\n\t\t}\n\t}\n\n\t/**\n\t * Removes specific class from list of label elements\n\t * @param {string} className\n\t * @param {Array<string>} labelNames\n\t */\n\tremoveClassFromLabels(className, labelNames) {\n\t\tfor (const name of labelNames) {\n\t\t\tconst entity = this._scene.getEntity(name);\n\t\t\tconst labelEl = entity?.get('div')?.getDiv();\n\n\t\t\tlabelEl?.classList.remove(className);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the item at the center of the screen.\n\t * @returns {object}\n\t */\n\tgetItemAtCenter() {\n\t\tthis._centerBoundingRect.x = (window.innerWidth / 2 - this._centerBoundingRect.width / 2);\n\t\tthis._centerBoundingRect.y = (window.innerHeight / 2 - this._centerBoundingRect.height / 2);\n\n\t\tconst candidates = this._quadTree.retrieve(this._centerBoundingRect);\n\t\t// Loop through candidates\n\t\tfor (let i = 0; i < candidates.length; i++) {\n\t\t\tconst candidate = candidates[i];\n\n\t\t\tcandidate.y += candidate.height / 2;\n\t\t\tcandidate.width = this._centerBoundingRect.width;\n\t\t\tcandidate.height = this._centerBoundingRect.height;\n\n\t\t\tif (this._checkCollision(candidate, this._centerBoundingRect)) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Builds a quadtree and update all labels.\n\t */\n\t_buildQuadtree() {\n\t\tthis._quadTree.clear();\n\t\tfor (const [key, label] of Object.entries(this._labels)) {\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst div = label.el;\n\t\t\tconst rect = div.getBoundingClientRect();\n\n\t\t\t// Skip if div is not displayed\n\t\t\tif (div.style.opacity === '0') {\n\t\t\t\tlabel.check = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Skip if div is out of window\n\t\t\tif (this._isOutOfWindow(rect)) {\n\t\t\t\tlabel.check = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Set label info\n\t\t\tlabel.x = rect.x;\n\t\t\tlabel.y = rect.y;\n\t\t\tlabel.width = rect.width;\n\t\t\tlabel.height = rect.height;\n\t\t\tlabel.check = true;\n\t\t\tlabel.collisions = [];\n\t\t\tlabel.isHidden = false;\n\t\t\tconst camera = this._scene.get('camera', 'camera');\n\t\t\tconst entity = this._scene.get(label.name);\n\t\t\tlabel.z = entity?.getCameraSpacePosition(camera).magnitude() || 0;\n\t\t\t// Insert into quad tree\n\t\t\tthis._quadTree.insert(label);\n\t\t}\n\t}\n\n\t/**\n\t * Checks collisions with Quadtree method.\n\t */\n\t_checkWithQuadtree() {\n\t\t// Check collision for each label\n\t\tfor (const key of Object.keys(this._labels)) {\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst label = this._labels[key];\n\t\t\tif (!label.check) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst candidates = this._quadTree.retrieve(label);\n\n\t\t\t// Loop through candidates\n\t\t\tfor (let i = 0; i < candidates.length; i++) {\n\t\t\t\tconst candidate = candidates[i];\n\t\t\t\tif (candidate.check && this._checkCollision(candidate, label) && label.name !== candidate.name) {\n\t\t\t\t\tif (this._overlap(candidate, label) >= this._overlapThreshold) {\n\t\t\t\t\t\tthis._addCollision(candidate.name, label.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Debug function\n\t// _drawQuadtree(node) {\n\t// \tlet bounds = node.bounds;\n\t// \tlet ctx = document.getElementById('canvas').getContext('2d');\n\t// \tif (node.nodes.length === 0) {\n\t// \t\tctx.strokeStyle = 'rgba(255,0,0,0.5)';\n\t// \t\tctx.strokeRect(bounds.x, bounds.y, bounds.width, bounds.height);\n\t// \t}\n\t// \telse {\n\t// \t\tfor (let i = 0; i < node.nodes.length; i = i + 1) {\n\t// \t\t\tthis._drawQuadtree(node.nodes[i]);\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t/**\n\t * Adds a collision to the temporary array.\n\t * @param {string} label1\n\t * @param {string} label2\n\t */\n\t_addCollision(label1, label2) {\n\t\tif (this._collidingLabels.indexOf(label1) < 0) {\n\t\t\tthis._collidingLabels.push(label1);\n\t\t}\n\t\tif (this._collidingLabels.indexOf(label2) < 0) {\n\t\t\tthis._collidingLabels.push(label2);\n\t\t}\n\t\tthis._labels[label1]?.collisions.push(label2);\n\t}\n\n\t/**\n\t * Helper function to check if there is a collision between two rects.\n\t * @param {object} rect1\n\t * @param {object} rect2\n\t * @returns {boolean}\n\t */\n\t_checkCollision(rect1, rect2) {\n\t\tif (rect1.x < rect2.x + rect2.width\n\t\t\t&& rect1.x + rect1.width > rect2.x\n\t\t\t&& rect1.y < rect2.y + rect2.height\n\t\t\t&& rect1.y + rect1.height > rect2.y) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Solves collisions.\n\t */\n\t_fixCollisions() {\n\t\t// Sort colliding labels\n\t\tthis._sort();\n\n\t\t// For each label ordered by weight and z order\n\t\t// determine if we need to show it or not\n\t\tfor (let i = 0; i < this._collidingLabels.length; i++) {\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst label = this._collidingLabels[i];\n\t\t\tif (!this.isExisting(label)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip already hidden labels\n\t\t\t// to avoid waterfall effect\n\t\t\tif (this._labels[label].isHidden) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Show label\n\t\t\t\tthis._showLabel(label);\n\t\t\t}\n\t\t\t// Hide its collisions\n\t\t\tfor (let j = 0; j < this._labels[label].collisions.length; j++) {\n\t\t\t\tconst collision = this._labels[label].collisions[j];\n\t\t\t\tthis._hideLabel(collision);\n\t\t\t}\n\t\t}\n\n\t\t// Restore labels that are not conflicting\n\t\tthis._restoreLabels();\n\t}\n\n\t/**\n\t * Sorts colliding labels.\n\t */\n\t_sort() {\n\t\t// Order labels by weight or z order\n\t\tthis._collidingLabels.sort((a, b) => {\n\t\t\tif (this.getWeight(b) - this.getWeight(a) !== 0) {\n\t\t\t\treturn this.getWeight(b) - this.getWeight(a);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn this.getZ(a) - this.getZ(b);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Calculates overlap percentage on two rects.\n\t * @param {object} rect1\n\t * @param {object} rect2\n\t * @returns {number}\n\t */\n\t_overlap(rect1, rect2) {\n\t\tconst overlap = (Math.min(rect1.x + rect1.width, rect2.x + rect2.width) - Math.max(rect1.x, rect2.x))\n\t\t* (Math.min(rect1.y + rect1.height, rect2.y + rect2.height) - Math.max(rect1.y, rect2.y));\n\t\tconst a1 = rect1.width * rect1.height;\n\t\tconst a2 = rect2.width * rect2.height;\n\t\tconst percentage = overlap / (a1 + a2 - overlap);\n\t\treturn percentage;\n\t}\n\n\t/**\n\t * Helper function to check if rect is outside of window.\n\t * @param {object} rect\n\t * @returns {boolean}\n\t */\n\t_isOutOfWindow(rect) {\n\t\tif (rect.x > window.innerWidth || rect.x + rect.width < 0 || rect.y > window.innerHeight || rect.y + rect.height < 0) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Restores label visibility.\n\t */\n\t_restoreLabels() {\n\t\tif (this._allLabelsHidden === true) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const key of Object.keys(this._labels)) {\n\t\t\tconst label = this._labels[key];\n\t\t\tif (!label.isHidden) {\n\t\t\t\tthis._showLabel(label.name);\n\t\t\t}\n\t\t\tif (label.collisions.length === 0) {\n\t\t\t\tthis._showLabel(label.name);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows a label.\n\t * @param {string} label\n\t */\n\t_showLabel(label) {\n\t\tconst object = this.pioneer.get('main', label);\n\t\tconst div = object?.getComponentByType('div').getDiv();\n\t\tdiv?.classList.add(this._activeClass);\n\t\tdiv?.classList.remove(this._hiddenClass);\n\t\tthis._labels[label].isHidden = false;\n\t}\n\n\t/**\n\t * Hides a label.\n\t * @param {string} label\n\t */\n\t_hideLabel(label) {\n\t\tif (this._exceptions.has(label)) {\n\t\t\treturn;\n\t\t}\n\t\tconst object = this.pioneer.get('main', label);\n\t\tif (object === null) {\n\t\t\treturn;\n\t\t}\n\t\tconst div = object.getComponentByType('div').getDiv();\n\t\tdiv.classList.add(this._hiddenClass);\n\t\tdiv.classList.remove(this._activeClass);\n\t\tthis._labels[label].isHidden = true;\n\t}\n\n\t/**\n\t * Gets Z position in camera space.\n\t * @param {string} name\n\t * @returns {number}\n\t */\n\tgetZ(name) {\n\t\tif (this.isExisting(name)) {\n\t\t\treturn this._labels[name].z;\n\t\t}\n\t}\n\n\t/**\n\t * Stops the update loop.\n\t */\n\tstop() {\n\t\tthis._isPaused = true;\n\t}\n\n\t/**\n\t * Starts the update loop.\n\t */\n\tstart() {\n\t\tthis._isPaused = false;\n\t}\n\n\t/**\n\t * Called every frame to update the labels.\n\t */\n\tupdate() {\n\t\tif (this._isPaused) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Spread operations accross multiple frames\n\t\tif (this._frameCount === 0) {\n\t\t\tthis._collidingLabels = [];\n\t\t\tthis._buildQuadtree();\n\t\t}\n\t\telse if (this._frameCount === this._frameCycle / 3) {\n\t\t\tthis._checkWithQuadtree();\n\t\t}\n\t\telse if (this._frameCount === 2 * this._frameCycle / 3) {\n\t\t\tthis._fixCollisions();\n\t\t}\n\n\t\tthis._frameCount++;\n\t\tthis._frameCount %= this._frameCycle;\n\t}\n}\n\n// Label manager algorithm modes\n// TODO Seems to be used by setAlgorithm, which has unused this._algorithm\nLabelManager.Quadtree = 1;\nLabelManager.BruteForce = 0;\n","import {\n\tParenting,\n\tEntity,\n\tWMTSComponent\n} from 'pioneer-scripts';\nimport {\n\tAtmosphereComponent,\n\tSpheroidLODComponent,\n\tMathUtils\n} from 'pioneer';\nimport {\n\tBaseManager,\n\tCameraManager,\n\tContentManager,\n\tBaseApp,\n\tSceneManager,\n\tContentPanel\n} from '../internal';\n\n/**\n * @typedef ToggleParams\n * @property {string} [layerId]\n * @property {string} [parentId]\n * @property {string} [group]\n */\n\n/**\n * @typedef {(visible: boolean, params: ToggleParams) => void} ToggleCallback\n */\n\n/**\n * @typedef Layer\n * @property {string} name\n * @property {string} group\n * @property {boolean} defaultVisibility\n * @property {boolean} visible\n * @property {string[]} categories\n * @property {string[]} sublayers\n * @property {string} [parent]\n * @property {Array<ToggleCallback>} toggleCallback\n */\n\n/**\n * Layer manager class.\n */\nexport class LayerManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * The scene manager.\n\t\t * @type {SceneManager}\n\t\t * @private\n\t\t */\n\t\tthis._sceneManager = /** @type {SceneManager} */(app.getManager('scene'));\n\n\t\t/**\n\t\t * The content manager\n\t\t * @type {ContentManager}\n\t\t * @private\n\t\t */\n\t\tthis._contentManager = /** @type {ContentManager} */(app.getManager('content'));\n\n\t\t/**\n\t\t * @type {Object<string, Layer>}\n\t\t * @private\n\t\t */\n\t\tthis._layers = {};\n\n\t\t/**\n\t\t * List of possible contextual layers to check when parent entity changes.\n\t\t * @type {string[]}\n\t\t */\n\t\tthis._contextualLayersList = ['majorMoons', 'minorMoons', 'landers', 'orbiters', 'satelliteGroup', 'heliosphere'];\n\n\t\tthis._targetId = '';\n\t\tthis._previousTarget = /** @type {string[]} */([]);\n\t\tthis._dependencies = new Set();\n\t\tthis._previousDependencies = new Set();\n\n\t\tthis.bindFunctions([\n\t\t\t'resetContextualVisibility',\n\t\t\t'toggleLayer',\n\t\t\t'changeSpheroidMap',\n\t\t\t'resetContextualLayers'\n\t\t]);\n\n\t\t// Add toggle layer\n\t\tthis._eventNames.push('toggleLayer');\n\t\tthis._initCallbacks();\n\t}\n\n\t/**\n\t * Adds a layer to the layer manager.\n\t * @param {string} id\n\t * @param {object} options - the options used to setup the layer\n\t * @param {string} [options.name = ''] - layer name\n\t * @param {string} [options.group = ''] - pioneer scripts group\n\t * @param {string | string[]} [options.categories = []] - entity info categories\n\t * @param {boolean} [options.defaultVisibility = true] - default visibility\n\t * @param {ToggleCallback | Array<ToggleCallback>} [options.toggleCallback = []] - callback list\n\t * @param {string[]} [options.sublayers = []] - layers that will be overriden by this one\n\t */\n\taddLayer(id, { name = '', group = '', categories = [], defaultVisibility = true, toggleCallback = [], sublayers = [] }) {\n\t\tif (this._layers[id] === undefined) {\n\t\t\tthis._layers[id] = /** @type {Layer} */({});\n\t\t}\n\t\tthis._layers[id].name = name;\n\t\tthis._layers[id].group = group;\n\t\tthis._layers[id].defaultVisibility = defaultVisibility;\n\t\tthis._layers[id].visible = defaultVisibility;\n\n\t\t// Categories\n\t\tif (!Array.isArray(categories)) {\n\t\t\tcategories = [categories];\n\t\t}\n\t\tthis._layers[id].categories = categories;\n\n\t\t// Sublayers\n\t\tif (!Array.isArray(sublayers)) {\n\t\t\tsublayers = [sublayers];\n\t\t}\n\t\tthis._layers[id].sublayers = sublayers;\n\t\tfor (let i = 0; i < sublayers.length; i++) {\n\t\t\tconst sublayer = sublayers[i];\n\t\t\tif (this._layers[sublayer] === undefined) {\n\t\t\t\tthis._layers[sublayer] = /** @type {Layer} */({});\n\t\t\t}\n\t\t\tthis._layers[sublayer].parent = id;\n\t\t}\n\n\t\t// Callbacks\n\t\tif (!Array.isArray(toggleCallback)) {\n\t\t\ttoggleCallback = [toggleCallback];\n\t\t}\n\t\tthis._layers[id].toggleCallback = toggleCallback;\n\t}\n\n\t/**\n\t * Adds a toggle callback to a layer.\n\t * @param {string} id\n\t * @param {ToggleCallback} toggleCallback\n\t */\n\taddCallback(id, toggleCallback) {\n\t\tconst layer = this.getLayer(id);\n\t\tif (layer === null) {\n\t\t\treturn;\n\t\t}\n\t\tlayer.toggleCallback.push(toggleCallback);\n\t}\n\n\t/**\n\t * Removes a toggle callback from a layer.\n\t * @param {string} id\n\t * @param {ToggleCallback} toggleCallback\n\t * @override\n\t */\n\tremoveCallback(id, toggleCallback) {\n\t\tconst layer = this.getLayer(id);\n\t\tif (layer === null) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = layer.toggleCallback.indexOf(toggleCallback);\n\t\tlayer.toggleCallback.splice(index, 1);\n\t}\n\n\t/**\n\t * Gets a layer.\n\t * @param {string} id\n\t * @returns {Layer}\n\t */\n\tgetLayer(id) {\n\t\tif (this._layers[id] === undefined) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._layers[id];\n\t}\n\n\t/**\n\t * Change the spheroid texture to new map\n\t * @param {string} id\n\t * @param {any} textureDescription\n\t */\n\tasync changeSpheroidMap(id, textureDescription) {\n\t\tif (textureDescription.type === 'cmts') {\n\t\t\tconsole.error('This function does not yet handle CMTS texture');\n\t\t\treturn;\n\t\t}\n\t\tconst sceneManager = /** @type {SceneManager} */(this.app.getManager('scene'));\n\t\tconst spheroidLOD = /** @type {SpheroidLODComponent} */ (sceneManager.get('main').getEntity(id)?.getComponentByType('spheroidLOD'));\n\t\tconst atmosphere = /** @type {AtmosphereComponent} */ (sceneManager.get('main').getEntity(id)?.getComponentByType('atmosphere'));\n\t\tconst wmts = /** @type {WMTSComponent} */ (sceneManager.get('main').getEntity(id)?.getComponentByType('wmts'));\n\n\t\tif (spheroidLOD && textureDescription.type === 'texture') {\n\t\t\tspheroidLOD.setEnabled(true);\n\t\t\tsceneManager.addLoading(id, 'spheroidLOD');\n\t\t\tObject.keys(textureDescription.textures).forEach(key => {\n\t\t\t\tconst url = '$STATIC_ASSETS_URL/maps/' + textureDescription.textures[key].url;\n\t\t\t\tspheroidLOD.setTexture(key, url, textureDescription.textures[key].sizes);\n\t\t\t});\n\t\t\tawait sceneManager.pioneer.waitUntilNextFrame();\n\t\t\tawait spheroidLOD.getLoadedPromise();\n\t\t\tif (wmts !== null) {\n\t\t\t\twmts.setEnabled(false);\n\t\t\t}\n\t\t\tsceneManager.removeLoading(id, 'spheroidLOD');\n\t\t}\n\t\telse if (textureDescription.type === 'wmts') {\n\t\t\t// Add WMTS components\n\t\t\tif (wmts === null) {\n\t\t\t\tawait sceneManager.addWMTSComponent(id, textureDescription);\n\t\t\t}\n\t\t\telse if (wmts.isEnabled() === false) {\n\t\t\t\tawait sceneManager.enableWMTSComponent(id, wmts);\n\t\t\t}\n\t\t}\n\t\tif (atmosphere !== null && atmosphere !== undefined) {\n\t\t\tatmosphere.setEnabled(textureDescription.features.includes('atmosphere'));\n\t\t}\n\t\t/** @type {ContentPanel} */(this.app.getComponent('contentPanel'))?.updateHDButton();\n\n\t\t// Flip Titan surface map 180 deg until we can fix it officially in Pioneer (TODO)\n\t\tif (id === 'titan') {\n\t\t\tthis.app.pioneer.get('main', 'titan', 'spheroidLOD').setLongitudeRotation(MathUtils.degToRad(180));\n\t\t}\n\t}\n\n\t/**\n\t * Toggles a layer on and off.\n\t * @param {string} id\n\t * @param {ToggleParams} [params={}]\n\t * @param {boolean} [forceVisibility]\n\t */\n\tasync toggleLayer(id, params = {}, forceVisibility) {\n\t\tconst { spout, spoutFontSize } = this.app.getManager('router').configs;\n\n\t\tif (this._layers[id] === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tparams.layerId = id;\n\t\tif (forceVisibility !== undefined && this._layers[id].visible === forceVisibility) {\n\t\t\treturn;\n\t\t}\n\t\tthis._layers[id].visible = !this._layers[id].visible;\n\t\tfor (let i = 0; i < this._layers[id].toggleCallback.length; i++) {\n\t\t\tconst callback = this._layers[id].toggleCallback[i];\n\t\t\tcallback(this._layers[id].visible, params);\n\t\t}\n\n\t\tfor (let i = 0; i < this._layers[id].sublayers.length; i++) {\n\t\t\tconst sublayer = this.getLayer(this._layers[id].sublayers[i]);\n\t\t\tsublayer.visible = this._layers[id].visible;\n\t\t\tthis.triggerCallbacks('toggleLayer', [this._layers[id].sublayers[i], this._layers[id].visible, params]);\n\t\t}\n\n\t\tthis.triggerCallbacks('toggleLayer', [id, this._layers[id].visible, params]);\n\n\t\tconst sceneManager = /** @type {SceneManager} */(this.app.getManager('scene'));\n\n\t\t// Make sure the scene is showing the right layers.\n\t\tif (params.parentId !== null && params.parentId !== undefined) {\n\t\t\tsceneManager.updateEntityLayerVisibilityForChildren(params.parentId, params.satelliteGroup);\n\t\t}\n\t\telse {\n\t\t\tsceneManager.updateEntityLayerVisibility(params.satelliteGroup);\n\t\t}\n\n\t\t// Add Spout labels to layers\n\t\tif (spout === true && this._layers[id].visible) {\n\t\t\tconst relevantEntities = [];\n\t\t\tawait this.pioneer.waitUntilNextFrame();\n\n\t\t\tif (id.toLowerCase().includes('constellations')) {\n\t\t\t\tconst constellations = this.app.pioneer.get('main', 'sun').getComponentByType('constellations');\n\t\t\t\tconstellations.getNames().forEach(name => {\n\t\t\t\t\trelevantEntities.push(this.app.pioneer.get('main').getEntity(`constellation_label_${name}`));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tawait this.app.getManager('spout').setUpSpoutLabels(spoutFontSize, relevantEntities?.[0]?.id);\n\t\t}\n\t}\n\n\t/**\n\t * Sets target entity id.\n\t * @param {string} entityId\n\t */\n\tsetTarget(entityId) {\n\t\t// Store previous targets and dependencies\n\t\tthis._previousTarget.push(this._targetId);\n\t\tthis._previousDependencies = new Set([...this._previousDependencies, ...this._dependencies]);\n\t\t// Update target id\n\t\tthis._targetId = entityId;\n\t\tthis._dependencies.clear();\n\n\t\tif (this._targetId !== '') {\n\t\t\t// Check for dependencies and activate them if needed\n\t\t\tconst dependencies = this._sceneManager.getDependencies(this._targetId);\n\t\t\tthis._dependencies = new Set(dependencies);\n\t\t}\n\t}\n\n\t/**\n\t * Clean previous targets and dependencies visibility status.\n\t */\n\tresetTarget() {\n\t\t// Dont clean if the camera is using one of the previous target\n\t\t// Cleanup will happen in a later call to resetTarget\n\t\tfor (let i = 0; i < this._previousTarget.length; i++) {\n\t\t\tconst previousTarget = this._previousTarget[i];\n\t\t\tconst cameraEntity = /** @type {CameraManager} */(this.app.getManager('camera')).cameraEntity;\n\t\t\tif (cameraEntity === null || cameraEntity.getParent() === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (cameraEntity.getParent().getName() === previousTarget) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Clean all the previous targets\n\t\tfor (let i = 0; i < this._previousTarget.length; i++) {\n\t\t\tconst previousTarget = this._previousTarget[i];\n\n\t\t\t// Reset contextual layers of the previous target to their original value\n\t\t\tthis.resetContextualVisibility(previousTarget);\n\t\t}\n\t\tthis._previousTarget = [];\n\n\t\tthis._previousDependencies.clear();\n\t}\n\n\t/**\n\t * Resets visibility defaults for contextual toggles\n\t * @param {string} previousTarget\n\t */\n\tresetContextualVisibility(previousTarget) {\n\t\t// Get the first ancestor of the previous target with contextual layers.\n\t\tconst time = this._sceneManager.main.getEngine().getTime();\n\t\tlet contextualLayers = this.getContextualLayers(previousTarget);\n\t\twhile (previousTarget !== '' && contextualLayers.length === 0) {\n\t\t\tpreviousTarget = Parenting.getParentOfEntity(previousTarget, time);\n\t\t\tcontextualLayers = this.getContextualLayers(previousTarget);\n\t\t}\n\t\t// Get the first ancestor of the current target with contextual layers.\n\t\tlet currentTarget = this._targetId;\n\t\tcontextualLayers = this.getContextualLayers(currentTarget);\n\t\twhile (currentTarget !== '' && contextualLayers.length === 0) {\n\t\t\tcurrentTarget = Parenting.getParentOfEntity(currentTarget, time);\n\t\t\tcontextualLayers = this.getContextualLayers(currentTarget);\n\t\t}\n\t\tif (currentTarget === previousTarget) {\n\t\t\treturn;\n\t\t}\n\t\tthis._contextId = previousTarget;\n\t\tfor (let i = 0; i < contextualLayers.length; i++) {\n\t\t\tconst layerName = contextualLayers[i];\n\t\t\tconst layer = this.getLayer(layerName);\n\n\t\t\t// Parent visibility overrides default values\n\t\t\tif (layer.parent !== undefined) {\n\t\t\t\tconst parentLayer = this.getLayer(layer.parent);\n\t\t\t\tif (parentLayer.visible !== layer.visible) {\n\t\t\t\t\tthis.toggleLayer(layerName, { parentId: previousTarget, group: layer.group });\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (layer.visible !== layer.defaultVisibility) {\n\t\t\t\t// Otherwise restore to default value\n\t\t\t\tthis.toggleLayer(layerName, { parentId: previousTarget, group: layer.group });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the target entity id.\n\t * @returns {string}\n\t */\n\tgetTarget() {\n\t\treturn this._targetId;\n\t}\n\n\t/**\n\t * Gets an entity layer.\n\t * @param {*} id\n\t * @returns {Layer|null}\n\t */\n\tgetEntityLayer(id) {\n\t\tconst entityInfo = this._contentManager.getEntityInfo(id);\n\t\tif (entityInfo === null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst category = entityInfo.category;\n\t\tconst subcategory = entityInfo.subcategory;\n\t\tconst layer = this.getLayerFromCategory(subcategory) || this.getLayerFromCategory(category);\n\t\treturn layer;\n\t}\n\n\t/**\n\t * Gets a layer tied to a category.\n\t * @param {string} category\n\t * @returns {Layer|null}\n\t */\n\tgetLayerFromCategory(category) {\n\t\tif (!category) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (const [key, value] of Object.entries(this._layers)) {\n\t\t\tif (value.categories.includes(category)) {\n\t\t\t\treturn this._layers[key];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets a layer tied to a satellite group.\n\t * @param {string} group\n\t * @returns {Layer|null}\n\t */\n\tgetLayerFromSatelliteGroup(group) {\n\t\tif (!group) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (const [key, value] of Object.entries(this._layers)) {\n\t\t\tif (value.categories.includes(group)) {\n\t\t\t\treturn this._layers[key];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get a list of contextual layers available for a planet. (Major Moons, Minor Moons, Landers, Orbiters, Rovers, Heliosphere)\n\t * @param {string} parent\n\t * @returns {Array<string>} layerList\n\t */\n\tgetContextualLayers(parent) {\n\t\tconst availableLayers = /** @type {string[]} */([]);\n\t\tif (parent === '') {\n\t\t\treturn availableLayers;\n\t\t}\n\n\t\tconst contentManager = /** @type {ContentManager} */(this.app.getManager('content'));\n\t\tconst entityInfo = contentManager.getEntityInfo(parent);\n\t\tconst moons = entityInfo?.hasMoons ? Entity.getEntityNamesInGroup(parent + ', moons') : new Set();\n\t\tconst spacecraft = Entity.getEntityNamesInGroup(parent + ', spacecraft');\n\t\t// Include heliosphere for Sun\n\t\tif (parent === 'sun') {\n\t\t\tif (availableLayers.includes('heliosphere') === false) {\n\t\t\t\tavailableLayers.push('heliosphere');\n\t\t\t}\n\t\t}\n\t\t// Include major and minor moons if have\n\t\tmoons.forEach(moon => {\n\t\t\tconst moonEntityInfo = contentManager.getEntityInfo(moon);\n\t\t\tif (moonEntityInfo !== null) {\n\t\t\t\tconst category = moonEntityInfo.subcategory || moonEntityInfo.category;\n\t\t\t\tswitch (category) {\n\t\t\t\t\tcase 'Major Moon':\n\t\t\t\t\t\tif (availableLayers.includes('majorMoons') === false) {\n\t\t\t\t\t\t\tavailableLayers.push('majorMoons');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Minor Moon':\n\t\t\t\t\t\tif (availableLayers.includes('minorMoons') === false) {\n\t\t\t\t\t\t\tavailableLayers.push('minorMoons');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// Include orbiters and landers if has spacecrafts\n\t\tconst time = this._app.pioneer.getTime();\n\t\tspacecraft.forEach(sc => {\n\t\t\tconst entityInfo = contentManager.getEntityInfo(sc);\n\t\t\tif (entityInfo !== null) {\n\t\t\t\tconst category = entityInfo.subcategory || entityInfo.category;\n\t\t\t\tswitch (category) {\n\t\t\t\t\tcase 'Orbiter':\n\t\t\t\t\t\tif (availableLayers.includes('orbiters') === false) {\n\t\t\t\t\t\t\tif (Parenting.getParentOfEntity(sc, time) === parent) {\n\t\t\t\t\t\t\t\tavailableLayers.push('orbiters');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Landing Site':\n\t\t\t\t\tcase 'Lander':\n\t\t\t\t\tcase 'Rover':\n\t\t\t\t\t\tif (availableLayers.includes('landers') === false) {\n\t\t\t\t\t\t\tif (Parenting.getParentOfEntity(sc, time) === parent) {\n\t\t\t\t\t\t\t\tavailableLayers.push('landers');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Include satellite group if have\n\t\tif (entityInfo?.constellation) {\n\t\t\tavailableLayers.push('satelliteGroup');\n\t\t}\n\n\t\tavailableLayers.sort((a, b) => {\n\t\t\tconst layers = Object.keys(this._layers);\n\t\t\treturn layers.indexOf(a) - layers.indexOf(b);\n\t\t});\n\n\t\treturn availableLayers;\n\t}\n\n\t/**\n\t * Resets all contextual layers of the old parent to their default state.\n\t * Used in the case of an entity changing parents (Object View).\n\t * @param {string} newParent\n\t * @param {string} oldParent\n\t */\n\tresetContextualLayers(newParent, oldParent) {\n\t\tconst newLayers = this.getContextualLayers(newParent);\n\t\tthis._contextualLayersList.forEach(layer => {\n\t\t\tif (newLayers.includes(layer) === false) {\n\t\t\t\tif (layer === 'heliosphere') {\n\t\t\t\t\tthis.toggleLayer(layer, { parentId: undefined }, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.toggleLayer(layer, { parentId: oldParent }, this.getLayer(layer).defaultVisibility || false);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns true if the entity should be visible with the currently visible layers. If there's no valid layer, it returns true.\n\t * @param {string} entityName\n\t * @param {string} satelliteGroup - The satellite group to check against entities\n\t * @returns {boolean}\n\t */\n\tisEntityVisibleWithCurrentLayers(entityName, satelliteGroup) {\n\t\tconst entityInfo = this._contentManager.getEntityInfo(entityName);\n\t\tif (entityInfo !== null) {\n\t\t\tconst layer = this.getLayerFromCategory(entityInfo.category);\n\t\t\tconst sublayer = this.getLayerFromCategory(entityInfo.subcategory);\n\t\t\tconst satelliteGroupLayer = this.getLayerFromSatelliteGroup(entityInfo.constellation);\n\n\t\t\t// Check status of spacecraft constellation first if in it\n\t\t\tif (satelliteGroupLayer !== null && entityInfo.constellation === satelliteGroup) {\n\t\t\t\treturn satelliteGroupLayer.visible;\n\t\t\t}\n\t\t\t// Check status of sublayer first\n\t\t\tif (sublayer !== null) {\n\t\t\t\treturn sublayer.visible;\n\t\t\t}\n\t\t\t// Check status of layer\n\t\t\tif (layer !== null) {\n\t\t\t\treturn layer.visible;\n\t\t\t}\n\t\t\t// If no layer then it is visible\n\t\t\tif (layer === null && sublayer === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t\t// If it doesn't have an entity info, then it has no layer, so it's always visible.\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n","import Navigo from 'navigo';\nimport {\n\tAppUtils,\n\tCancelToken,\n\tBaseApp,\n\tBaseManager\n} from '../internal';\n\n/**\n * Route Manager class.\n * @extends BaseManager\n */\nexport class RouteManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * Router instance that handles all routing.\n\t\t * @type {Navigo}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._router = new Navigo(null, true);\n\n\t\t/**\n\t\t * Information of previous route.\n\t\t * @type {null|object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._previousRoute = null;\n\n\t\t/**\n\t\t * Information of current route.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._currentRoute = {};\n\n\t\t/**\n\t\t * Flag indicating first app load or not.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._firstLoad = true;\n\n\t\t/**\n\t\t * Stored queries.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._query = {};\n\n\t\t/**\n\t\t * Persistent queries. Can only be removed by function.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._configs = {};\n\n\t\t/**\n\t\t * List of valid query keys.\n\t\t * @type {Array}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._validQueries = [];\n\n\t\t/**\n\t\t * Route for home.\n\t\t * @type {string}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._homeRoute = '/home';\n\n\t\t/**\n\t\t * A way to subscribe to query changes in all views\n\t\t */\n\t\tthis._queryCallbacks = {};\n\n\t\t/**\n\t\t * Previous view.\n\t\t * @type {string}\n\t\t */\n\t\tthis._previousView = null;\n\n\t\t/**\n\t\t * Current view.\n\t\t * @type {string}\n\t\t */\n\t\tthis._currentView = null;\n\t\t/**\n\t\t * Components that are always hidden on first load, even on view change\n\t\t * @type {Array<string>}\n\t\t */\n\t\tthis._alwaysHiddenComponents = [];\n\n\n\t\tthis.bindFunctions([\n\t\t\t'navigate',\n\t\t\t'onRootRoute',\n\t\t\t'onNotFound',\n\t\t\t'leave'\n\t\t]);\n\t}\n\n\t/**\n\t * Get the route for home.\n\t * @returns {string}\n\t */\n\tget homeRoute() {\n\t\treturn this._homeRoute;\n\t}\n\n\t/**\n\t * Getter for previous route.\n\t * @returns {object}\n\t */\n\tget previousRoute() {\n\t\treturn this._previousRoute;\n\t}\n\n\t/**\n\t * Getter for current route.\n\t * @returns {object}\n\t */\n\tget currentRoute() {\n\t\treturn this._currentRoute;\n\t}\n\n\t/**\n\t * Getter for current query.\n\t * @returns {object}\n\t */\n\tget query() {\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * Getter for current configs.\n\t * @returns {object}\n\t */\n\tget configs() {\n\t\treturn this._configs;\n\t}\n\n\t/**\n\t * Gets the current view.\n\t * @returns {string}\n\t */\n\tget currentView() {\n\t\treturn this._currentView;\n\t}\n\n\t/**\n\t * Sets the current view.\n\t * @param {string} view\n\t */\n\tset currentView(view) {\n\t\tthis._currentView = view;\n\t}\n\n\t/**\n\t * Gets the previous view.\n\t * @returns {string}\n\t */\n\tget previousView() {\n\t\treturn this._previousView;\n\t}\n\n\t/**\n\t * Initialize the router.\n\t * @param {Function} onBefore\n\t * @param {Function} onAfter\n\t */\n\tinit(onBefore, onAfter) {\n\t\tthis._router.hooks({\n\t\t\tbefore: async done => {\n\t\t\t\tthis._previousRoute = { ...this._currentRoute };\n\t\t\t\tthis._currentRoute = this._router.lastRouteResolved() || {};\n\n\t\t\t\t// Remove extra slash\n\t\t\t\tif (this._currentRoute.url) {\n\t\t\t\t\tthis._currentRoute.url = this._currentRoute.url.replace(/(\\/)+/, '/');\n\t\t\t\t}\n\n\t\t\t\t// Update query\n\t\t\t\tthis.addQuery(this.parseQuery(this.currentRoute.query));\n\n\t\t\t\tif (typeof onBefore === 'function') {\n\t\t\t\t\tawait onBefore(this._currentRoute, this._previousRoute);\n\t\t\t\t}\n\n\t\t\t\tdone();\n\t\t\t},\n\t\t\tafter: async () => {\n\t\t\t\tif (typeof onAfter === 'function') {\n\t\t\t\t\tawait onAfter(this._currentRoute, this._previousRoute);\n\t\t\t\t}\n\n\t\t\t\tthis._firstLoad = false;\n\t\t\t}\n\t\t});\n\n\t\tthis._router\n\t\t\t.on(this.onRootRoute)\n\t\t\t.notFound(this.onNotFound)\n\t\t\t.on('milky_way', this.onNotFound)\n\t\t\t.on('observable_universe', this.onNotFound);\n\t}\n\n\t/**\n\t * Execute on leaving a route.\n\t * @param {object} params - Parameters from url\n\t */\n\tleave(params) {\n\t\t// Cancel token\n\t\tparams.cancelToken.cancel();\n\t}\n\n\t/**\n\t * Handle root route.\n\t * @param {string} query\n\t */\n\tonRootRoute(query) {\n\t\tthis.reroute(this._homeRoute, query);\n\t}\n\n\t/**\n\t * Handle not found routes.\n\t * @param {string} query\n\t */\n\tonNotFound(query) {\n\t\t// Called when there is path specified but\n\t\t// there is no route matching\n\t\tlet newRoute = this._homeRoute;\n\t\t// Try to pass the query stored in the params\n\t\t// to the new route\n\t\tif (query) {\n\t\t\tnewRoute += '?' + query;\n\t\t}\n\t\tthis._router.navigate(newRoute);\n\t}\n\n\t/**\n\t * A way to replace a history state which essentially makes the back button skip the current route\n\t * @param {string} replaceStr\n\t */\n\treplaceState(replaceStr) {\n\t\thistory.replaceState({}, '', replaceStr);\n\t}\n\n\t/**\n\t * Reroute to a new path without adding a new step in the history.\n\t * @param {string} path\n\t * @param {string|object} [query='']\n\t */\n\treroute(path, query = '') {\n\t\tlet queryString;\n\t\tif (typeof query === 'string') {\n\t\t\tquery = this.parseQuery(query);\n\t\t}\n\t\tconst configs = AppUtils.filterObject(this._configs, val => val !== undefined);\n\t\tqueryString = this.buildQuery({ ...query, ...configs });\n\t\tconst pathname = window.location.pathname;\n\t\thistory.replaceState(queryString, '', `${pathname}#${path}${queryString}`);\n\t\tthis._router.resolve();\n\t}\n\n\t/**\n\t * Add cancel token to params. Create params for route without one.\n\t * @param {object} params\n\t * @returns {object}\n\t */\n\taddCancelToken(params) {\n\t\tconst output = params || {};\n\t\toutput.cancelToken = new CancelToken();\n\t\treturn output;\n\t}\n\n\t/**\n\t * Get the last resolved route.\n\t * @returns {object}\n\t */\n\tlastRouteResolved() {\n\t\treturn this._router.lastRouteResolved();\n\t}\n\n\t/**\n\t * Get the last resolved path.\n\t * @returns {string}\n\t */\n\tlastPathResolved() {\n\t\tconst lastRoute = this._router.lastRouteResolved();\n\t\treturn lastRoute.query ? lastRoute.url + '?' + lastRoute.query : lastRoute.url;\n\t}\n\n\t/**\n\t * Get only the path part, or first hash part if path is hash.\n\t * @param {string} url\n\t * @returns {string}\n\t */\n\tgetOnlyURL(url) {\n\t\tlet onlyURL = url;\n\t\tconst split = url.split('#');\n\t\tonlyURL = split.length > 1 ? this._cleanGETParam(split[1]) : this._cleanGETParam(split[0]);\n\t\treturn onlyURL;\n\t}\n\n\t/**\n\t * Get the first part of a url, also remove query.\n\t * @private\n\t * @param {string} url\n\t * @returns {string}\n\t */\n\t_cleanGETParam(url) {\n\t\treturn url.split(/\\?(.*)?$/)[0];\n\t}\n\n\t/**\n\t * Get the list of valid query keys.\n\t * @returns {Array}\n\t */\n\tgetValidQueries() {\n\t\treturn this._validQueries;\n\t}\n\n\t/**\n\t * Set the list of valid query keys.\n\t * @param {Array} list\n\t */\n\tsetValidQueries(list) {\n\t\tthis._validQueries = list;\n\t}\n\n\t/**\n\t * Parse a string and return a query object.\n\t * @param {string} queryString\n\t * @returns {object}\n\t */\n\tparseQuery(queryString) {\n\t\tif (!queryString) {\n\t\t\treturn {};\n\t\t}\n\t\tqueryString.replace('?', '');\n\n\t\tconst query = queryString.split('&').reduce((obj, str) => {\n\t\t\tconst parts = str.split('=');\n\t\t\tif (parts.length > 1) {\n\t\t\t\tlet val = decodeURIComponent(parts[1].trim());\n\t\t\t\tswitch (val.toLowerCase()) {\n\t\t\t\t\tcase 'true':\n\t\t\t\t\t\tval = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'false':\n\t\t\t\t\t\tval = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'undefined':\n\t\t\t\t\t\tval = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'null':\n\t\t\t\t\t\tval = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '':\n\t\t\t\t\t\tval = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst num = Number(val);\n\t\t\t\t\t\tif (!Number.isNaN(num)) {\n\t\t\t\t\t\t\tval = num;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Only update query, not configs\n\t\t\t\tconst key = decodeURIComponent(parts[0].trim());\n\t\t\t\tif (key in this._configs) {\n\t\t\t\t\tif (this._configs[key] === undefined) {\n\t\t\t\t\t\tthis._configs[key] = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tobj[key] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\treturn query;\n\t}\n\n\t/**\n\t * Build a query string from a query object.\n\t * @param {object} query\n\t * @returns {string}\n\t */\n\tbuildQuery(query) {\n\t\tlet queryString = '';\n\n\t\tfor (const [key, value] of Object.entries(query)) {\n\t\t\tqueryString += '&' + key + '=' + value;\n\t\t}\n\n\t\t// Replace the first `&` with `?`\n\t\tqueryString = queryString.replace('&', '?');\n\n\t\treturn queryString;\n\t}\n\n\t/**\n\t * Add query to the stored query.\n\t * @param {object} query\n\t * @returns {object} Updated query\n\t */\n\taddQuery(query) {\n\t\tthis._query = { ...this._query, ...query };\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * Remove query from the stored query.\n\t * @param {Array} [keys=[]] - Query keys to remove\n\t * @returns {object} Updated query\n\t */\n\tremoveQuery(keys = []) {\n\t\tkeys.forEach(key => delete this._query[key]);\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * Add configs to the stored configs.\n\t * @param {object} configs\n\t * @returns {object} Updated configs\n\t */\n\taddConfigs(configs) {\n\t\tthis._configs = { ...this._configs, ...configs };\n\t\treturn this._configs;\n\t}\n\n\t/**\n\t * Set specific config value\n\t * @param {string} key\n\t * @param {any} value\n\t */\n\tsetConfig(key, value) {\n\t\tthis.configs[key] = value;\n\t}\n\n\t/**\n\t * Remove config from the stored configs.\n\t * @param {Array} [keys=[]] - Config keys to remove\n\t * @returns {object} Updated configs\n\t */\n\tremoveConfigs(keys = []) {\n\t\tkeys.forEach(key => delete this._configs[key]);\n\t\treturn this._configs;\n\t}\n\n\t/**\n\t * Update, add to, or remove from the stored query.\n\t * { __remove: 'all' } will empty query before adding new query.\n\t * { __remove: string[] } will remove only queries in the list.\n\t * @param {object} query\n\t * @returns {object} Updated query\n\t */\n\tupdateQuery(query) {\n\t\tif (query.__remove) {\n\t\t\tif (query.__remove === 'all') {\n\t\t\t\tthis._query = {};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.removeQuery(query.__remove);\n\t\t\t}\n\t\t\tdelete query.__remove;\n\t\t}\n\n\t\tconst configs = AppUtils.filterObject(this._configs, val => val !== undefined);\n\t\treturn { ...this.addQuery(query), ...configs };\n\t}\n\n\t/**\n\t * Update, add to, or remove from path query.\n\t * @param {object} query\n\t * @param {string} [pathname=''] - Base path\n\t * @returns {string} Updated path\n\t */\n\tupdateQueryPath(query, pathname = '') {\n\t\tconst output = pathname || this._router.lastRouteResolved().url;\n\n\t\treturn output.replace(/(\\/)(?=\\/*\\1)/, '') + this.buildQuery(this.updateQuery(query));\n\t}\n\n\t/**\n\t * Reset to new view.\n\t * @param {string} currentView - Current view\n\t * @param {object} params\n\t */\n\tasync resetView(currentView, params) {\n\t\tthis._previousView = this._currentView;\n\t\tthis._currentView = currentView;\n\n\t\t// Update only when view change\n\t\tif (this._currentView !== this._previousView) {\n\t\t\t// Leave the previous view\n\t\t\tif (this._previousView !== null) {\n\t\t\t\tawait this._app.getView(this._previousView).onLeave(params);\n\t\t\t}\n\n\t\t\t// Enter the current view\n\t\t\tawait this._app.getView(this._currentView).onEnter(params);\n\n\t\t\tconst views = this._app.getViews();\n\t\t\tfor (let i = views.length - 1; i >= 0; i--) {\n\t\t\t\tconst view = views[i];\n\t\t\t\tthis._app.getView(view).setEnabled(view === currentView);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Execute actions in a route.\n\t * @param {string} view - Which view the route corresponds to\n\t * @param {object} params - Parameters from url\n\t * @param {string} query - Query from url\n\t */\n\tasync handleRoute(view, params, query) {\n\t\tif (!params) {\n\t\t\tparams = this.addCancelToken(params);\n\t\t\tthis._currentRoute.params = params;\n\t\t}\n\n\t\tlet objectQuery = {};\n\t\tif (query) {\n\t\t\tobjectQuery = this.parseQuery(query);\n\t\t}\n\t\tawait this.resetView(view, { ...params, ...objectQuery, ...this._configs });\n\t\tawait this.goToView(view, params, { ...objectQuery, ...this._configs });\n\t}\n\n\t/**\n\t * Check if app is still on route.\n\t * Useful for route with async actions in before hook to check if user leaves route abruptly.\n\t * @param {string} url - Url to check against current route\n\t * @returns {boolean}\n\t */\n\tstillOnRoute(url) {\n\t\tconst regex = /^\\/([^!/]*)/;\n\t\tconst match = this._currentRoute.url.match(regex);\n\t\tif (match === null || match[1] === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn match[1] === url;\n\t}\n\n\t/**\n\t * Check if url has changed or not.\n\t * Compare only the first part of 2 urls, nested route or query are not considered.\n\t * @param {string} a - First url\n\t * @param {string} b - Second url\n\t * @returns {boolean}\n\t */\n\turlChanged(a, b) {\n\t\treturn this.getOnlyURL(a) !== this.getOnlyURL(b);\n\t}\n\n\t/**\n\t * Check if a route has changed.\n\t * @param {object} current\n\t * @param {object} previous\n\t * @returns {boolean}\n\t */\n\trouteChanged(current, previous) {\n\t\tif (current === '' && !previous) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!previous || AppUtils.isEmptyObject(previous)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Route check\n\t\tif (current.url) {\n\t\t\treturn current.url !== previous.url;\n\t\t}\n\n\t\t// Object check\n\t\tconst currentRoute = AppUtils.deepCopy(current);\n\t\tconst previousRoute = AppUtils.deepCopy(previous);\n\t\treturn !AppUtils.deepEqual(currentRoute, previousRoute);\n\t}\n\n\t/**\n\t * Check if a query has changed.\n\t * @param {object} current - Like {time: '2020-03-10T20:52:10.904-07:00', rate: 1}\n\t * @param {string} previous - Like 'time=2020-02-10T07:14:45.000-08:00&rate=1'\n\t * @returns {boolean}\n\t */\n\tqueryChanged(current, previous) {\n\t\tif (!previous) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst currentQuery = AppUtils.deepCopy(current);\n\t\tconst previousQuery = {};\n\t\tfor (const p in currentQuery) {\n\t\t\tif (typeof currentQuery[p].toString === 'function') {\n\t\t\t\tcurrentQuery[p] = currentQuery[p].toString();\n\t\t\t}\n\t\t}\n\t\tprevious.split('&').forEach(param => {\n\t\t\tconst paramSplit = param.split('=');\n\t\t\tpreviousQuery[paramSplit[0]] = paramSplit[1];\n\t\t});\n\n\t\t// Object check\n\t\treturn !AppUtils.deepEqual(currentQuery, previousQuery);\n\t}\n\n\t/**\n\t * Go to a view.\n\t * @param {string} view - View's name\n\t * @param {object} params\n\t * @param {object} query\n\t */\n\tasync goToView(view, params, query) {\n\t\t// Check if it's a new route\n\t\tif (this.routeChanged(this.currentRoute, this.previousRoute)) {\n\t\t\tawait this._app.getView(view).onRouteChange({ ...params, ...query });\n\t\t}\n\t\telse if (this.queryChanged(query, this.previousRoute.query)) {\n\t\t\tawait this._app.getView(view).onQueryChange({ ...params, ...query });\n\t\t}\n\t}\n\n\t/**\n\t * Add routes to router.\n\t * @param {object[]} routes\n\t * @param {string} routes[].route - The route to add.\n\t * @param {string} routes[].view - The view corresponding to the route.\n\t */\n\taddRoutes(routes) {\n\t\tfor (let i = 0; i < routes.length; i++) {\n\t\t\tconst { route, view } = routes[i];\n\t\t\tthis._router.on(\n\t\t\t\troute,\n\t\t\t\tasync (params, query) => {\n\t\t\t\t\tawait this.handleRoute(view, params, query);\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbefore: async (done, params) => {\n\t\t\t\t\t\tawait this.before(done, params, view);\n\t\t\t\t\t},\n\t\t\t\t\tleave: this.leave\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Execute before every route.\n\t * @param {Function} done - Callback on done\n\t * @param {object} params - Parameters from url\n\t * @param {string} view - Which view the route corresponds to\n\t */\n\tbefore(done, params, view) {\n\t\tlet objectQuery = {};\n\t\tif (this._currentRoute.query) {\n\t\t\tobjectQuery = this.parseQuery(this._currentRoute.query);\n\t\t}\n\n\t\tparams = this.addCancelToken(params);\n\n\t\tconst isValid = this._app.getView(view)?.validateQuery({ ...params, ...objectQuery });\n\t\tif (!isValid) {\n\t\t\tparams.cancelToken.cancel();\n\t\t\tif (typeof done === 'function') {\n\t\t\t\t// Don't resolve route\n\t\t\t\tdone(false);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof done === 'function') {\n\t\t\tdone();\n\t\t}\n\t}\n\n\t/**\n\t * Method to subscribe to specific query key\n\t * See processQuery method in base_view.js to see when these callbacks are called\n\t * @param {string} key\n\t * @param {Function} callback\n\t * @returns {Function} unsubscribe function\n\t */\n\tsubscribeToQuery(key, callback) {\n\t\t// Check callback is a function\n\t\tif (typeof callback !== 'function') return;\n\n\t\t// Create array for key if necessary.\n\t\tif (!this._queryCallbacks[key]) {\n\t\t\tthis._queryCallbacks[key] = [];\n\t\t}\n\t\t// Push callback into array  if it's not already there\n\t\tif (!this._queryCallbacks[key].includes(callback)) {\n\t\t\tthis._queryCallbacks[key].push(callback);\n\t\t}\n\n\t\t// Return the unsubscribe function.\n\t\treturn () => {\n\t\t\tconst i = this._queryCallbacks[key].indexOf(callback);\n\t\t\tthis._queryCallbacks[key].splice(i, 1);\n\t\t};\n\t}\n\n\t/**\n\t * Start the routing\n\t */\n\tstart() {\n\t\tthis._router.resolve();\n\n\t\tthis.handleEmbedQueries();\n\t}\n\n\t/**\n\t * Handle embed queries from URL that should only be handled once\n\t */\n\thandleEmbedQueries() {\n\t\tconst { hideFullScreenToggle, lighting, noKeyboard, search } = this._configs;\n\t\tconst hideSearch = noKeyboard === true || search === false;\n\t\tconst searchComponent = this.app.getComponent('search');\n\t\tconst settingsComponent = this.app.getComponent('settings');\n\n\t\t// Custom tutorial slides if certain embed queries are true\n\t\tlet updatedTutorials = [];\n\t\tlet tutorialsWithVariables = null;\n\t\tconst tutorialOverlay = this.app.getComponent('tutorialOverlay');\n\n\t\tif (hideFullScreenToggle === true) {\n\t\t\t// Called on update of components in case a component updates the settings itself, like Compare View\n\t\t\tsettingsComponent?.hideFullScreenOption?.();\n\t\t}\n\t\tif (lighting === 'flood' || lighting === 'natural') {\n\t\t\tsettingsComponent?.toggleLightOptions?.(lighting);\n\t\t}\n\n\t\t// Hide search component and relevant tutorials\n\t\tif (hideSearch) {\n\t\t\tthis._alwaysHiddenComponents.push('search');\n\t\t\tsearchComponent?.hide();\n\t\t\tupdatedTutorials = tutorialOverlay?.hideTutorialSlide?.('search');\n\t\t}\n\t\tif (this._configs.hideFullScreenToggle === true) {\n\t\t\tconst settingsTutorial = this.app.tutorials?.find(slide => slide.id === 'settings');\n\t\t\t// Remove mention of full screen in settings tutorial\n\t\t\tif (settingsTutorial) {\n\t\t\t\tsettingsTutorial.description = settingsTutorial.description.replace(settingsTutorial.description, settingsTutorial.alternateDescription);\n\t\t\t}\n\t\t}\n\n\n\t\ttutorialsWithVariables = this.app.setTutorialVariables?.(updatedTutorials.length ? updatedTutorials : this.app.tutorials);\n\t\t// Hydrate tutorials with replaced function patterns, then set them in the tutorial overlay component.\n\t\ttutorialOverlay?.setTutorials?.(tutorialsWithVariables);\n\t}\n\n\t/**\n\t * Navigate to a path if it is not the current path. Path is adjusted to current base.\n\t * @param {string|object} route - Full path to navigate or query object. To remove query, use { __remove: 'all' } for every query, or { __remove: string[] } for queries in the list.\n\t * @param {string} [base=''] - Base path if navigate with query. If not provided, will only update query.\n\t * @param {object} [options={}]\n\t * @param {boolean} [options.keepTime = false] - If keepTime == true, populates the time again for the url\n\t * @returns {boolean} Navigated or not\n\t */\n\tnavigate(route, base = '', options = {}) {\n\t\tif (!AppUtils.isEmptyObject(options)) {\n\t\t\tif (typeof route === 'string') {\n\t\t\t\tbase = AppUtils.cleanPathDuplicate(`${base}/${route}`);\n\t\t\t\troute = {};\n\t\t\t}\n\t\t}\n\n\t\tif (options.__remove) {\n\t\t\troute.__remove = options.__remove;\n\t\t}\n\n\t\tif (options.keepTime) {\n\t\t\tconst timeManager = this._app.getManager('time');\n\t\t\tif (this.query.time && timeManager) {\n\t\t\t\tif (!base.includes('time=')) {\n\t\t\t\t\troute.time = route.time || timeManager.getTimeUrl();\n\t\t\t\t}\n\t\t\t\tif (!base.includes('rate=')) {\n\t\t\t\t\troute.rate = route.rate || timeManager.getTimeRate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._navigate(route, base);\n\t}\n\n\t/**\n\t * Navigate to a path if it is not the current path.\n\t * @param {string|object} route - Full path to navigate or query object. To remove query, use { __remove: 'all' } for every query, or { __remove: string[] } for queries in the list.\n\t * @param {string} [base=''] - Base path if navigate with query. If not provided, will only update query.\n\t * @returns {boolean} Navigated or not\n\t */\n\t_navigate(route, base = '') {\n\t\tif (typeof route === 'string') {\n\t\t\tconst current = this.lastPathResolved();\n\t\t\tlet outputRoute = route;\n\t\t\tif (!route.startsWith('/')) {\n\t\t\t\toutputRoute = '/' + route;\n\t\t\t}\n\t\t\tif (!route.includes(base)) {\n\t\t\t\toutputRoute = base + route;\n\t\t\t}\n\t\t\tif (current !== outputRoute) {\n\t\t\t\tconst parts = outputRoute.split('?');\n\t\t\t\tif (parts.length > 1) {\n\t\t\t\t\tthis._query = this.parseQuery(parts[1]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._query = {};\n\t\t\t\t\tconst configs = AppUtils.filterObject(this._configs, val => val !== undefined);\n\t\t\t\t\toutputRoute += this.buildQuery(configs);\n\t\t\t\t}\n\n\t\t\t\tthis._router.navigate(outputRoute);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\treturn this.navigate(this.updateQueryPath(route, base), base);\n\t\t}\n\t}\n\n\t/**\n\t * Return to home, optionally keeping query\n\t * @param {boolean} keepCurrentQuery\n\t */\n\treturnHome(keepCurrentQuery = true) {\n\t\tconst currentQuery = keepCurrentQuery ? this.buildQuery(this.query) : '';\n\t\tthis.navigate(currentQuery);\n\t}\n\n\t/**\n\t * Reload current route.\n\t * @param {boolean} [onQueryChange=true] - Call onQueryChange by default, otherwise call onRouteChange\n\t * @param {boolean} [clearQuery=false] - Clear all queries when reload\n\t */\n\tasync reload(onQueryChange = true, clearQuery = false) {\n\t\tconst view = await this._app.getView(this._currentView);\n\t\tconst { params, query } = this._router.lastRouteResolved();\n\t\tlet objectQuery = {};\n\t\tif (!clearQuery && query) {\n\t\t\tobjectQuery = this.parseQuery(query);\n\t\t}\n\n\t\tif (onQueryChange) {\n\t\t\tview.onQueryChange({ ...params, ...objectQuery });\n\t\t}\n\t\telse {\n\t\t\tview.onRouteChange({ ...params, ...objectQuery });\n\t\t}\n\t}\n}\n","import moment from 'moment-timezone';\nimport * as Pioneer from 'pioneer';\nimport {\n\tEntity,\n\tConstellationsComponent,\n\tDiscGridComponent,\n\tParenting,\n\tSceneHelpers,\n\tTorusComponent,\n\tWMTSComponent\n} from 'pioneer-scripts';\nimport {\n\tAppUtils,\n\tBaseManager,\n\tCameraManager,\n\tContentManager,\n\tBaseApp,\n\tLabelManager,\n\tLayerManager\n} from '../internal';\n\n/**\n * @typedef {import('../../../pioneer-scripts/src/entity').ExtraOptions} ExtraOptions\n */\n\n/**\n * Nomenclature:\n * Added* means that an entity name is in the entity statuses, but not necessarily loaded into the scene.\n * Loaded* means that an entity is in the entity statuses and is also loaded into the scene.\n * Visible* means that an entity's components are visible (or would be if the entity were loaded).\n */\n\n/**\n * Every app has a _sceneInfo object and it is passed in to populate the scene.\n * @typedef SceneInfo\n * @property {string[]} [dynamicEntityGroups] - Entity groups that are loaded depending on layers and distance.\n * @property {string[]} [dynamicEntities] - Individual entities that are loaded depending on layers and distance.\n * @property {string[]} [staticEntityGroups] - Entity groups that are loaded depending only on layers.\n * @property {string[]} [staticEntities] - Individual entities that are  lodaed depending only on layers.\n * @property {ExtraOptions} [entityOptions] - Extra options that are passed to PioneerScripts.Entity.createEntity().\n * @property {number} [zoomMax]\n * @property {object} [meta]\n * @property {string} meta.titlePrefix\n * @property {string} meta.titleSuffix\n * @property {string} meta.url\n * @property {string} meta.description\n */\n\n/**\n * A record of the current load status flags of the entities in the scene.\n * @typedef EntityStatus\n * @property {boolean} forceVisible - If true, it will always be loaded and visible no matter what.\n * @property {boolean} dynamic - If true, it will only be loaded when its parent has a large enough pixel-space system radius.\n * @property {boolean} layerVisibility - Whether or not the entity is in a visible layer.\n * @property {string[]} dependentEntities - The list of entities that are dependent on this. Only populated when loaded.\n * @property {Set<string>} entitiesForcingThisVisible - The list of entities that when visible should also show this entity.\n * @property {boolean} visible - Whether or not the entity is actually visible (components enabled), taking into account layers, camera, and forceVisible of other entities.\n * @property {Set<string>} componentTypesNotVisible - These components are forced invisible even when the entity is visible.\n */\n\n/**\n * Scene Manager class.\n * @extends BaseManager\n */\nexport class SceneManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * List of scenes.\n\t\t * @type {object}\n\t\t */\n\t\tthis._scenes = {};\n\n\t\t/**\n\t\t * Main scene.\n\t\t * @type {Pioneer.Scene}\n\t\t */\n\t\tthis._scene = this.add('main');\n\n\t\t/**\n\t\t * Stores HD status.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isHD = false;\n\n\t\t/**\n\t\t * Maps entity ids to HD WMTS components.\n\t\t * @type {object}\n\t\t */\n\t\tthis._hdWMTSMap = {};\n\n\t\t/**\n\t\t * List of loading items.\n\t\t * @type {string[]}\n\t\t */\n\t\tthis._loadingItems = [];\n\n\t\t/**\n\t\t * List of forced loaded components.\n\t\t * @type {Pioneer.BaseComponent[]}\n\t\t */\n\t\tthis._loadedComponents = [];\n\n\t\t/**\n\t\t * Below or equal to this size, it's low resolution.\n\t\t * Above it's high resolution.\n\t\t * @type {number}\n\t\t */\n\t\tthis._hdBreakpointSize = 512;\n\n\t\t/**\n\t\t * Maximum texture size.\n\t\t * @type {number}\n\t\t */\n\t\tthis._maxTextureSize = 4096;\n\n\t\t/**\n\t\t * Array of possible event names.\n\t\t * @type {string[]}\n\t\t * @default\n\t\t */\n\t\tthis._eventNames.push('loading', 'loaded');\n\t\tthis._initCallbacks();\n\n\t\t/**\n\t\t * Indicator that there is a component(s) loading.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isLoading = false;\n\n\t\t/**\n\t\t * A list of entities that are possible in the scene, loaded depending on their load style and visibilities.\n\t\t * @type {Pioneer.FastMap<string, EntityStatus>}\n\t\t */\n\t\tthis._entityStatuses = new Pioneer.FastMap();\n\n\t\t/**\n\t\t * The extra options to use when adding new Entities from PioneerScripts.\n\t\t * @type {ExtraOptions}\n\t\t * @private\n\t\t */\n\t\tthis._entityExtraOptions = undefined;\n\n\t\t/**\n\t\t * A list of entity added callbacks.\n\t\t * @type {((entity: Pioneer.Entity) => void)[]}\n\t\t * @private\n\t\t */\n\t\tthis._entityLoadedCallbacks = [];\n\n\t\t/**\n\t\t * A list of entity will be removed callbacks.\n\t\t * @type {((entity: Pioneer.Entity) => void)[]}\n\t\t * @private\n\t\t */\n\t\tthis._entityWillBeUnloadedCallbacks = [];\n\n\t\t/**\n\t\t * These components are not visible even when the entities are visible.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._componentTypesNotVisible = new Set();\n\n\t\t/**\n\t\t * Mobile Texture Size\n\t\t * TODO: Set this value to less than the max texture size to improve performance of HD textures on mobile.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._mobileTextureSize = 1024;\n\n\t\tthis.bindFunctions([\n\t\t\t'addLoading',\n\t\t\t'removeLoading',\n\t\t\t'update',\n\t\t\t'toggleStarfield',\n\t\t\t'toggleHeliosphere',\n\t\t\t'toggleConstellations',\n\t\t\t'addWMTSComponent',\n\t\t\t'tileIsReady',\n\t\t\t'enableWMTSComponent',\n\t\t\t'forceTextureSizeForEntity',\n\t\t\t'toggleHDTextureForEntity',\n\t\t\t'isEntityHD'\n\t\t]);\n\n\t\t/**\n\t\t * List of temporary entities.\n\t\t * @type {Pioneer.Entity[]}\n\t\t */\n\t\tthis._tempEntities = [];\n\t}\n\n\t// FUNCTIONS THAT DEAL WITH ADDING AND REMOVING.\n\n\t/**\n\t * Adds a new scene.\n\t * @param {string} name\n\t * @returns {Pioneer.Scene}\n\t */\n\tadd(name) {\n\t\tif (name === 'main' && this._scene) {\n\t\t\treturn this._scene;\n\t\t}\n\n\t\tthis._scenes[name] = this.pioneer.addScene(name);\n\t\tthis._scenes[name].setAmbientLightColor(new Pioneer.Color(0.005, 0.005, 0.005));\n\t\treturn this._scenes[name];\n\t}\n\n\t/**\n\t * Adds an entity to the scene manager.\n\t * @param {string} entityName - The name of the entity.\n\t * @param {boolean} dynamic - If true, it will only be loaded when its parent has a large enough pixel-space system radius.\n\t */\n\taddEntity(entityName, dynamic) {\n\t\tif (this._entityStatuses.has(entityName)) {\n\t\t\tthrow new Error(`Error adding entity: The entity ${entityName} has already been added.`);\n\t\t}\n\t\tthis._entityStatuses.set(entityName, {\n\t\t\tforceVisible: false,\n\t\t\tlayerVisibility: /** @type {LayerManager} */(this.app.getManager('layer')).isEntityVisibleWithCurrentLayers(entityName),\n\t\t\tdynamic,\n\t\t\tdependentEntities: [],\n\t\t\tentitiesForcingThisVisible: new Set(),\n\t\t\tvisible: true,\n\t\t\tcomponentTypesNotVisible: new Set()\n\t\t});\n\t}\n\n\t/**\n\t * Removes an entity from the scene manger.\n\t * @param {string} entityName\n\t */\n\tremoveEntity(entityName) {\n\t\tif (!this._entityStatuses.delete(entityName)) {\n\t\t\tthrow new Error(`Error removing entity: The entity ${entityName} was not in the scene manager.`);\n\t\t}\n\t\t// If it's in the scene, remove it, calling the callbacks beforehand.\n\t\tconst entity = this._scene.getEntity(entityName);\n\t\tif (entity !== null) {\n\t\t\tfor (let i = 0, k = this._entityWillBeUnloadedCallbacks.length; i < k; i++) {\n\t\t\t\tthis._entityWillBeUnloadedCallbacks[i](entity);\n\t\t\t}\n\t\t\tthis._scene.removeEntity(entityName);\n\t\t}\n\t}\n\n\n\t/**\n\t * Gets an entity's status object.\n\t * @param {string} entityName\n\t * @returns {EntityStatus}\n\t */\n\tgetEntityStatus(entityName) {\n\t\treturn this._entityStatuses.get(entityName);\n\t}\n\n\t/**\n\t * Sets the entities from the scene info.\n\t * @param {SceneInfo} sceneInfo\n\t */\n\taddEntitiesFromSceneInfo(sceneInfo) {\n\t\t// Get a big list of entity names from the static and dynamic entity names and groups.\n\t\tconst entityNames = /** @type {Map<string, boolean>} */(new Map()); // name => is dynamic\n\n\t\t// Do it for static entities.\n\t\tif (sceneInfo.staticEntities !== undefined) {\n\t\t\tif (sceneInfo.staticEntities.length === 1 && sceneInfo.staticEntities[0] === 'all') {\n\t\t\t\t// It was ['all'] so get every entity in PioneerScripts.\n\t\t\t\tEntity.getEntityNamesInGroup('').forEach(entityName => entityNames.set(entityName, false));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsceneInfo.staticEntities.forEach(entityName => entityNames.set(entityName, false));\n\t\t\t}\n\t\t}\n\t\tif (sceneInfo.staticEntityGroups !== undefined) {\n\t\t\tsceneInfo.staticEntityGroups.forEach(entityGroupName => {\n\t\t\t\tEntity.getEntityNamesInGroup(entityGroupName).forEach(entityName => entityNames.set(entityName, false));\n\t\t\t});\n\t\t}\n\n\t\t// Do it for dynamic entities. If an entity was already in the static list, don't add it here.\n\t\tif (sceneInfo.dynamicEntities !== undefined) {\n\t\t\tif (sceneInfo.dynamicEntities.length === 1 && sceneInfo.dynamicEntities[0] === 'all') {\n\t\t\t\t// It was ['all'] so get every entity in PioneerScripts.\n\t\t\t\tEntity.getEntityNamesInGroup('').forEach(entityName => {\n\t\t\t\t\tif (!entityNames.has(entityName)) {\n\t\t\t\t\t\tentityNames.set(entityName, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsceneInfo.dynamicEntities.forEach(entityName => {\n\t\t\t\t\tif (!entityNames.has(entityName)) {\n\t\t\t\t\t\tentityNames.set(entityName, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (sceneInfo.dynamicEntityGroups !== undefined) {\n\t\t\tsceneInfo.dynamicEntityGroups.forEach(entityGroupName => {\n\t\t\t\tEntity.getEntityNamesInGroup(entityGroupName).forEach(entityName => {\n\t\t\t\t\tif (!entityNames.has(entityName)) {\n\t\t\t\t\t\tentityNames.set(entityName, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Remove anything that doesn't have an entity info in the content manager.\n\t\tconst contentManager = /** @type {ContentManager} */(this.app.getManager('content'));\n\t\tfor (const entityName of entityNames.keys()) {\n\t\t\tif (contentManager.getEntityInfo(entityName) === null) {\n\t\t\t\tentityNames.delete(entityName);\n\t\t\t}\n\t\t}\n\n\t\t// Add all of the entity names to the scene manager.\n\t\tentityNames.forEach((dynamic, entityName) => this.addEntity(entityName, dynamic));\n\n\t\t// Add the entity options.\n\t\tthis.setExtraEntityOptions(sceneInfo.entityOptions);\n\n\t\t// Update the visibility of the layers.\n\t\tthis.updateEntityLayerVisibility();\n\t}\n\n\t// FUNCTIONS THAT DEAL WITH LOADING AND UNLOADING.\n\n\t/**\n\t * Adds an entity loaded callback.\n\t * @param {(entity: Pioneer.Entity) => void} callback\n\t */\n\taddEntityLoadedCallback(callback) {\n\t\tthis._entityLoadedCallbacks.push(callback);\n\t}\n\n\t/**\n\t * Removes an entity loaded callback.\n\t * @param {(entity: Pioneer.Entity) => void} callback\n\t */\n\tremoveEntityLoadedCallback(callback) {\n\t\tfor (let i = 0, l = this._entityLoadedCallbacks.length; i < l; i++) {\n\t\t\tif (this._entityLoadedCallbacks[i] === callback) {\n\t\t\t\tthis._entityLoadedCallbacks.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds an entity will be unloaded callback.\n\t * @param {(entity: Pioneer.Entity) => void} callback\n\t */\n\taddEntityWillBeUnloadedCallback(callback) {\n\t\tthis._entityWillBeUnloadedCallbacks.push(callback);\n\t}\n\n\t/**\n\t * Removes an entity will be unloaded callback.\n\t * @param {(entity: Pioneer.Entity) => void} callback\n\t */\n\tremoveEntityWillBeUnloadedCallback(callback) {\n\t\tfor (let i = 0, l = this._entityWillBeUnloadedCallbacks.length; i < l; i++) {\n\t\t\tif (this._entityWillBeUnloadedCallbacks[i] === callback) {\n\t\t\t\tthis._entityWillBeUnloadedCallbacks.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets a list of entities to be force loaded, regardless of layer or distance.\n\t * Previously force-loaded entities can be removed if desired.\n\t * @param {string[]} entityNames - The list of entities to be force loaded.\n\t * @param {boolean} removeExisting - If true, remove previous force loaded flags.\n\t */\n\tsetEntitiesForceVisible(entityNames, removeExisting) {\n\t\tif (removeExisting) {\n\t\t\tfor (let i = 0, l = this._entityStatuses.size; i < l; i++) {\n\t\t\t\tconst entityStatus = this._entityStatuses.getAt(i).value;\n\t\t\t\tentityStatus.forceVisible = false;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0, l = entityNames.length; i < l; i++) {\n\t\t\tconst entityName = entityNames[i];\n\t\t\tconst entityStatus = this._entityStatuses.get(entityName);\n\t\t\tif (entityStatus === undefined) {\n\t\t\t\tthrow new Error(`Entity ${entityName} was set to force load, but isn't in the scene manager. Use addEntity().`);\n\t\t\t}\n\t\t\tentityStatus.forceVisible = true;\n\t\t}\n\t\t// Do an update to get the entities created.\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Sets the extra options to use when loading new Entities from PioneerScripts.\n\t * @param {ExtraOptions} extraOptions\n\t */\n\tsetExtraEntityOptions(extraOptions) {\n\t\tthis._entityExtraOptions = { ...extraOptions };\n\t}\n\n\t// FUNCTIONS THAT DEAL LAYER VISIBILITY.\n\n\t/**\n\t * Update the layer visibility for only the children of parentId\n\t * @param {string} parentId\n\t * @param {string} satelliteGroup - The satellite group to check against entities\n\t */\n\tupdateEntityLayerVisibilityForChildren(parentId, satelliteGroup) {\n\t\tconst layerManager = /** @type {LayerManager} */(this.app.getManager('layer'));\n\t\tconst now = this._scene.getEngine().getTime();\n\t\tfor (let i = 0, l = this._entityStatuses.size; i < l; i++) {\n\t\t\tconst entry = this._entityStatuses.getAt(i);\n\t\t\tif (Parenting.getAllAncestorsOfEntity(entry.key, now).has(parentId)) {\n\t\t\t\tentry.value.layerVisibility = layerManager.isEntityVisibleWithCurrentLayers(entry.key, satelliteGroup);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the entity-layer visibility mapping, which is used in the loading of entities.\n\t * Called when a layer is toggled.\n\t * @param {string} satelliteGroup - The satellite group to check against entities\n\t */\n\tupdateEntityLayerVisibility(satelliteGroup) {\n\t\tconst layerManager = /** @type {LayerManager} */(this.app.getManager('layer'));\n\t\tfor (let i = 0, l = this._entityStatuses.size; i < l; i++) {\n\t\t\tconst entry = this._entityStatuses.getAt(i);\n\t\t\tentry.value.layerVisibility = layerManager.isEntityVisibleWithCurrentLayers(entry.key, satelliteGroup);\n\t\t}\n\t}\n\n\t// THE MAIN UPDATE FUNCTION AND ITS HELPERS.\n\n\t/**\n\t * Updates the loaded entities, both static and dynamic, keeping into account layers.\n\t * Makes loaded entities visible or invisible, depending on layers and other factors.\n\t * Runs every frame.\n\t */\n\tupdate() {\n\t\t// Get the camera entity.\n\t\tconst cameraEntity = /** @type {CameraManager} */(this.app.getManager('camera')).cameraEntity;\n\t\tconst contentManager = /** @type {ContentManager} */(this.app.getManager('content'));\n\n\t\t// Go through each of the entities.\n\t\tfor (let i = 0, l = this._entityStatuses.size; i < l; i++) {\n\t\t\tconst entry = this._entityStatuses.getAt(i);\n\t\t\tconst entityName = entry.key;\n\t\t\tconst entityStatus = entry.value;\n\n\t\t\t// Figure out if it should be loaded or not.\n\t\t\tconst shouldBeLoaded = entityStatus.forceVisible // force loaded (always loaded)\n\t\t\t\t|| (!entityStatus.dynamic // static loaded (checks layer)\n\t\t\t\t\t&& entityStatus.layerVisibility)\n\t\t\t\t|| (entityStatus.dynamic // dynamic loaded (checks layer and distance)\n\t\t\t\t\t&& entityStatus.layerVisibility\n\t\t\t\t\t&& this._isEntityVisibleWithinParent(entityName))\n\t\t\t\t|| cameraEntity?.getParent()?.getName() === entityName;\n\n\t\t\t// Load or unload the entity if needed, calling the appropriate callbacks.\n\t\t\tlet entity = this._scene.getEntity(entityName);\n\t\t\tif (shouldBeLoaded && entity === null) {\n\t\t\t\tthis._createEntity(entityName);\n\t\t\t\t// Also do all of its dependencies.\n\t\t\t\tconst dependentEntityNames = SceneHelpers.getDependentEntities(entityName);\n\t\t\t\tfor (const dependentEntityName of dependentEntityNames) {\n\t\t\t\t\tif (this._scene.getEntity(dependentEntityName) === null) {\n\t\t\t\t\t\tthis._createEntity(dependentEntityName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!shouldBeLoaded && entity !== null) {\n\t\t\t\t// First check if it isn't depended on by anything else that is in the scene.\n\t\t\t\tconst focusedEntityName = cameraEntity.getParent()?.getName();\n\t\t\t\tconst ignoreDependents = contentManager.getEntityInfo(entityName).ignoreDependentWhenUnloading;\n\t\t\t\tlet hasLoadedDependents = false;\n\t\t\t\tfor (let j = 0, m = entityStatus.dependentEntities.length; j < m; j++) {\n\t\t\t\t\tconst dependentEntityName = this._scene.get(entityStatus.dependentEntities[j])?.getName();\n\t\t\t\t\tif (dependentEntityName) {\n\t\t\t\t\t\tif (dependentEntityName === focusedEntityName && ignoreDependents?.includes(focusedEntityName)) {\n\t\t\t\t\t\t\thasLoadedDependents = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thasLoadedDependents = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasLoadedDependents) {\n\t\t\t\t\tfor (let j = 0, m = this._entityWillBeUnloadedCallbacks.length; j < m; j++) {\n\t\t\t\t\t\tthis._entityWillBeUnloadedCallbacks[j](entity);\n\t\t\t\t\t\tentity = null;\n\t\t\t\t\t}\n\t\t\t\t\tentityStatus.dependentEntities = [];\n\t\t\t\t\tthis._scene.removeEntity(entityName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If it's visible but should be invisible, make sure the components are hidden.\n\t\t\tconst visible = entityStatus.forceVisible || entityStatus.layerVisibility || this._isAncestorOfCamera(cameraEntity, entityName) || entityStatus.entitiesForcingThisVisible.size > 0;\n\t\t\tif (entity !== null && entityStatus.visible !== visible) {\n\t\t\t\t// Keep the entity loaded, but hide the components.\n\t\t\t\tthis.setVisibility(visible, entityName);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create an entity.\n\t * @param {string} entityName\n\t * @returns {Pioneer.Entity}\n\t * @private\n\t */\n\t_createEntity(entityName) {\n\t\t// Create the entity and set its components on/off, depending on its visibility.\n\t\tconst entity = Entity.create(entityName, this._scene, this._entityExtraOptions);\n\t\tif (!this._entityStatuses.get(entityName).visible) {\n\t\t\tthis.setVisibility(false, entityName);\n\t\t}\n\t\t// Populate its dependencies.\n\t\tconst dependentEntityNames = SceneHelpers.getDependentEntities(entityName);\n\t\tfor (const dependentEntityName of dependentEntityNames) {\n\t\t\tlet entityStatus = this._entityStatuses.get(dependentEntityName);\n\t\t\tif (entityStatus === undefined) {\n\t\t\t\tthis.addEntity(dependentEntityName, this._entityStatuses.get(entityName).dynamic);\n\t\t\t\tentityStatus = this._entityStatuses.get(dependentEntityName);\n\t\t\t}\n\t\t\tentityStatus.dependentEntities.push(entityName);\n\t\t}\n\t\t// Call the callbacks.\n\t\tfor (let j = 0, m = this._entityLoadedCallbacks.length; j < m; j++) {\n\t\t\tthis._entityLoadedCallbacks[j](entity);\n\t\t}\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Returns true if the entityName is an ancestor of the camera for any time.\n\t * @param {Pioneer.Entity} cameraEntity\n\t * @param {string} entityName\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isAncestorOfCamera(cameraEntity, entityName) {\n\t\tlet cameraAncestor = cameraEntity;\n\t\twhile (cameraAncestor !== null) {\n\t\t\tif (cameraAncestor.getName() === entityName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Check the all possible parents of the ancestor as well.\n\t\t\tfor (let i = 0, l = cameraAncestor.getNumParentingTableEntries(); i < l; i++) {\n\t\t\t\tif (cameraAncestor.getParentingTableEntry(i)[1] === entityName) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcameraAncestor = cameraAncestor.getParent();\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets the visibility of an entity.\n\t * @param {boolean} visible\n\t * @param {string} entityName\n\t * @private\n\t */\n\tsetVisibility(visible, entityName) {\n\t\t// Update the visibility in the entity statuses.\n\t\tconst entityStatus = this._entityStatuses.get(entityName);\n\t\tif (entityStatus !== undefined) {\n\t\t\tentityStatus.visible = visible;\n\t\t}\n\n\t\t// Get the entity in the scene. If not loaded, we've got nothing to do.\n\t\tconst entity = this._scene.getEntity(entityName);\n\t\tif (entity === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Enable or disable the components. Trails and labels are treated as a separate case.\n\t\tconst layerManager = /** @type {LayerManager} */(this.app.getManager('layer'));\n\t\tconst trailsVisible = layerManager.getLayer('trails').visible;\n\t\tconst divsVisible = layerManager.getLayer('labels').visible;\n\t\tfor (let i = 0; i < entity.getNumComponents(); i++) {\n\t\t\tconst component = entity.getComponent(i);\n\t\t\tconst type = component.getType();\n\t\t\tif (entity.getName() === 'sun') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (visible && type === 'trail') {\n\t\t\t\tcomponent.setEnabled(visible && trailsVisible && !entityStatus.componentTypesNotVisible.has('trail'));\n\t\t\t}\n\t\t\telse if (visible && type === 'div') {\n\t\t\t\tcomponent.setEnabled(visible && divsVisible && !entityStatus.componentTypesNotVisible.has('div'));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcomponent.setEnabled(visible && !entityStatus.componentTypesNotVisible.has(component.getType()));\n\t\t\t}\n\t\t}\n\n\t\t// If this forces other entities to be visible, mark them as forced visible.\n\t\tconst contentManager = /** @type {ContentManager} */(this.app.getManager('content'));\n\t\tconst entityInfo = contentManager.getEntityInfo(entityName);\n\t\tif (entityInfo.forceVisibleEntities !== undefined) {\n\t\t\tfor (let i = 0, l = entityInfo.forceVisibleEntities.length; i < l; i++) {\n\t\t\t\tconst entityStatus = this._entityStatuses.get(entityInfo.forceVisibleEntities[i]);\n\t\t\t\tif (entityStatus === undefined) {\n\t\t\t\t\tthrow new Error(`Entity ${entityName} was set to force load, but isn't in the scene manager. Use addEntity().`);\n\t\t\t\t}\n\t\t\t\tif (visible) {\n\t\t\t\t\tentityStatus.entitiesForcingThisVisible.add(entityName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tentityStatus.entitiesForcingThisVisible.delete(entityName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the entity is visible from the point of view of its parent.\n\t * @param {string} entityName\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isEntityVisibleWithinParent(entityName) {\n\t\tconst parentName = Parenting.getParentOfEntity(entityName, this._scene.getEngine().getTime());\n\t\tconst parent = this._scene.getEntity(parentName);\n\n\t\t// If the parent isn't already in the scene, we can't test the entity.\n\t\tif (parent === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst parentOptions = Entity.getEntityOptions(parentName);\n\t\tconst systemRadius = parentOptions.systemRadius\n\t\t\t|| parentOptions.radius * 25\n\t\t\t|| parentOptions.extentsRadius * 25;\n\t\tconst pixelSpaceSystemRadius = systemRadius / parent.getExtentsRadius() * parent.getGreatestPixelSpaceExtentsRadius();\n\t\treturn pixelSpaceSystemRadius >= 20;\n\t}\n\n\t// OTHER HELPING FUNCTIONS.\n\n\t/**\n\t * Gets a scene.\n\t * @param {*} name\n\t * @returns {Pioneer.Scene|null}\n\t */\n\tget(name) {\n\t\tif (this._scenes[name] !== undefined) {\n\t\t\treturn this._scenes[name];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get names of entities in current scene.\n\t * @returns {string[]}\n\t */\n\tgetEntitiesNames() {\n\t\tconst entityNames = [];\n\t\t// Looping through all entities\n\t\tfor (let i = 0; i < this._scene.getNumEntities(); i++) {\n\t\t\tconst entity = this._scene.getEntity(i);\n\t\t\tentityNames.push(entity.getName());\n\t\t}\n\t\treturn entityNames;\n\t}\n\n\t/**\n\t * Gets the parent of an object.\n\t * @param {string} id - object of which to return parent.\n\t * @returns {string|null}\n\t */\n\tgetParent(id) {\n\t\tconst entity = this._scene.getEntity(id);\n\t\tif (entity !== null) {\n\t\t\tconst parent = entity.getParent();\n\t\t\tif (parent !== null) {\n\t\t\t\treturn parent.getName();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns a list of parents.\n\t * @param {string} entityName\n\t * @returns {string[]}\n\t */\n\tgetParentList(entityName) {\n\t\tlet parent = this.getParent(entityName);\n\t\tconst parentList = [];\n\t\twhile (parent !== null && parent !== '') {\n\t\t\tparentList.push(parent);\n\t\t\tparent = this.getParent(parent);\n\t\t}\n\t\treturn parentList;\n\t}\n\n\t/**\n\t * Gets entity dependencies of entity.\n\t * @param {string} entityName\n\t * @returns {string[]}\n\t */\n\tgetDependencies(entityName) {\n\t\tconst entity = this._scene.getEntity(entityName);\n\t\tconst dependencies = new Set();\n\t\t// Parents from parenting table are dependencies\n\t\tif (entity !== null) {\n\t\t\tfor (let i = 0; i < entity.getNumParentingTableEntries(); i++) {\n\t\t\t\tconst parentName = entity.getParentingTableEntry(i)[1];\n\t\t\t\tif (parentName !== '') {\n\t\t\t\t\tdependencies.add(parentName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Look through options to get additional dependencies\n\t\tconst options = Entity.getEntityOptions(entityName);\n\t\tif (options !== undefined) {\n\t\t\tfor (const optionName of Object.keys(options)) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst option = options[optionName];\n\n\t\t\t\t// Check parents from parenting table\n\t\t\t\tif (optionName === 'parents') {\n\t\t\t\t\tfor (let i = 0; i < option.length; i++) {\n\t\t\t\t\t\tconst parentName = option[i][1];\n\t\t\t\t\t\tif (parentName !== '') {\n\t\t\t\t\t\t\tdependencies.add(parentName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check align targets\n\t\t\t\tif (optionName === 'align') {\n\t\t\t\t\tif (option.primary && option.primary.target && option.primary.target !== entityName) {\n\t\t\t\t\t\tdependencies.add(option.primary.target);\n\t\t\t\t\t}\n\t\t\t\t\tif (option.secondary && option.secondary.target && option.secondary.target !== entityName) {\n\t\t\t\t\t\tdependencies.add(option.secondary.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(dependencies);\n\t}\n\n\t/**\n\t * Returns a promise to check when an object is ready for a certain time.\n\t * @param {string} id - Id of the object\n\t * @param {moment} time - Moment time\n\t */\n\tasync isReady(id, time) {\n\t\tif (time === undefined) {\n\t\t\ttime = this.pioneer.getTime();\n\t\t}\n\t\telse {\n\t\t\ttime = this.app.getManager('time').momentToET(time);\n\t\t}\n\n\t\tawait SceneHelpers.waitTillEntitiesInPlace(this._scene, [id], time);\n\t}\n\n\t/**\n\t * Checks multiple ids over multiple times given.\n\t * @param {string[]} objectIds\n\t * @param {moment[]} times\n\t */\n\tasync isListReady(objectIds, times) {\n\t\tconst promises = [];\n\t\tif (times === undefined) {\n\t\t\ttimes = [undefined];\n\t\t}\n\t\tfor (let i = 0; i < objectIds.length; i++) {\n\t\t\tfor (let j = 0; j < times.length; j++) {\n\t\t\t\tpromises.push(this.isReady(objectIds[i], times[j]));\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Checks if the WMTS tile component is ready.\n\t * @param {WMTSComponent} wmtsComponent\n\t * @returns {Promise<boolean>}\n\t */\n\tasync tileIsReady(wmtsComponent) {\n\t\tlet loadedPromise = /** @type {Promise<void>} */(null);\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tconst check = setInterval(() => {\n\t\t\t\t// Reject if component is disabled\n\t\t\t\tif (!wmtsComponent.isEnabled() || !wmtsComponent.getEntity().isEnabled()) {\n\t\t\t\t\tclearInterval(check);\n\t\t\t\t\treject(new Error('disabled'));\n\t\t\t\t}\n\t\t\t\tif (loadedPromise === null && wmtsComponent.getTilesLoadedPromise() !== null) {\n\t\t\t\t\tloadedPromise = wmtsComponent.getTilesLoadedPromise().then(() => {\n\t\t\t\t\t\tclearInterval(check);\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 30);\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Checks if the CMTS terrain tile component is ready.\n\t * @param {Pioneer.CMTSComponent} cmtsComponent\n\t * @returns {Promise}\n\t */\n\tasync terrainIsReady(cmtsComponent) {\n\t\tlet loadedPromise = null;\n\t\tconst promise = new Promise(resolve => {\n\t\t\tconst check = setInterval(() => {\n\t\t\t\t// Stop checking if component is disabled during check\n\t\t\t\tif (!cmtsComponent.isEnabled() || !cmtsComponent.getEntity().isEnabled()) {\n\t\t\t\t\tclearInterval(check);\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\tif (loadedPromise === null && cmtsComponent._loadedPromise !== null) {\n\t\t\t\t\tloadedPromise = cmtsComponent.getTilesLoadedPromise().then(() => {\n\t\t\t\t\t\tclearInterval(check);\n\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 30);\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Checks if the component is ready.\n\t * @param {Pioneer.BaseComponent} component\n\t * @returns {Promise}\n\t */\n\tasync componentIsReady(component) {\n\t\tif (component.isEnabled() && component.getLoadState() === 'loaded') {\n\t\t\treturn;\n\t\t}\n\t\tconst promise = new Promise(resolve => {\n\t\t\tconst check = setInterval(() => {\n\t\t\t\t// Stop checking if component is disabled during check\n\t\t\t\tif (!component.isEnabled() || !component.getEntity().isEnabled()) {\n\t\t\t\t\tclearInterval(check);\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t\t// Return true if component is loaded\n\t\t\t\tif (component.getLoadState() === 'loaded') {\n\t\t\t\t\tclearInterval(check);\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t}, 30);\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Toggles Starfields\n\t * @param {boolean} visible\n\t */\n\ttoggleStarfield(visible) {\n\t\tfor (let i = 0; i < 7; i++) {\n\t\t\tthis._scene.get('sun', 'starfield', i).setEnabled(visible);\n\t\t}\n\t}\n\n\t/**\n\t * Toggle's heliosphere for the sun\n\t * @param {boolean} visible\n\t */\n\ttoggleHeliosphere(visible) {\n\t\tthis._scene.get('sun', 'model').setEnabled(visible);\n\t}\n\n\t/**\n\t * Toggles Constellations\n\t * @param {boolean} visible\n\t */\n\tasync toggleConstellations(visible) {\n\t\tconst sun = /** @type {Pioneer.Entity} */(this._scene.get('sun'));\n\t\tif (sun === null) {\n\t\t\treturn;\n\t\t}\n\t\tlet constellations = /** @type {ConstellationsComponent} */(sun.getComponentByType('constellations'));\n\t\tif (visible && constellations === null) {\n\t\t\t// Create\n\t\t\tconstellations = /** @type {ConstellationsComponent} */(sun.addComponent('constellations'));\n\t\t\tif (constellations instanceof ConstellationsComponent) {\n\t\t\t\tconstellations.setUrl('$STATIC_ASSETS_URL/stars/constellations.bin');\n\t\t\t\tconstellations.setColor(new Pioneer.Color(0.35, 0.7, 1, 0.5));\n\t\t\t}\n\t\t\tawait this.pioneer.waitUntilNextFrame();\n\t\t\tawait constellations.getLoadedPromise();\n\n\t\t\t// Add to label manager\n\t\t\tconst labelManager = /** @type {LabelManager} */ (this.app.getManager('label'));\n\t\t\tconst contentManager = /** @type {ContentManager} */ (this.app.getManager('content'));\n\t\t\tlabelManager.stop();\n\t\t\tconst highlightColor = new Pioneer.Color(0.35, 0.7, 1, 1);\n\t\t\tconst cameraComponent = /** @type {Pioneer.CameraComponent} */ (this.get('main').getEntity('camera').getComponentByType('camera'));\n\t\t\tconstellations.getNames().forEach(name => {\n\t\t\t\tconst entityName = `constellation_label_${name}`;\n\t\t\t\tconst entity = this._scene.getEntity(entityName);\n\t\t\t\tlabelManager.addEntity(entity);\n\t\t\t\tlabelManager.setLabelProps({\n\t\t\t\t\tgetLabelClass: entityName => `no-select ${contentManager.getClassName(entityName, 'constellation') ?? 'constellation'}`,\n\t\t\t\t\thandleTouch: null,\n\t\t\t\t\thandleMouseEnter: event => {\n\t\t\t\t\t\t// Handles constellation line highlight for hover on desktop and touch on mobile.\n\t\t\t\t\t\tconstellations.setHighlight(constellations.getNearestConstellationIndex(new Pioneer.Vector2(event.x, event.y), cameraComponent), highlightColor, 2.5);\n\t\t\t\t\t},\n\t\t\t\t\thandleMouseLeave: () => {\n\t\t\t\t\t\t// Handles constellation line un-highlight for hover exit on desktop and (second) touch outside of constellation label on mobile.\n\t\t\t\t\t\tconstellations.setHighlight(undefined, highlightColor, 2.5);\n\t\t\t\t\t},\n\t\t\t\t\thandleClick: null\n\t\t\t\t}, [entityName]);\n\t\t\t});\n\t\t\tlabelManager.start();\n\t\t}\n\t\telse if (!visible && constellations !== null) {\n\t\t\t// Remove from label manager\n\t\t\tconst labelManager = /** @type {LabelManager} */ (this.app.getManager('label'));\n\t\t\tlabelManager.stop();\n\t\t\tconstellations.getNames().forEach(name => {\n\t\t\t\tconst entityName = `constellation_label_${name}`;\n\t\t\t\tconst entity = this._scene.getEntity(entityName);\n\t\t\t\tlabelManager.removeEntity(entity);\n\t\t\t});\n\t\t\tlabelManager.start();\n\n\t\t\t// Delete\n\t\t\tsun.removeComponent(constellations);\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if HD is enabled.\n\t * @returns {boolean}\n\t */\n\tisHD() {\n\t\treturn this._isHD;\n\t}\n\n\t/**\n\t * Checks if an entity has HD available.\n\t * @param {string} id - The Entity id\n\t * @returns {boolean}\n\t */\n\thasHD(id) {\n\t\tconst entity = this._scene.get(id);\n\t\tif (entity === null) {\n\t\t\treturn false;\n\t\t}\n\t\t// Check WMTS\n\t\tif (Object.prototype.hasOwnProperty.call(this._hdWMTSMap, id)) {\n\t\t\treturn true;\n\t\t}\n\t\t// Check WMTS for parent too\n\t\tif (entity.getParent() !== null && Object.prototype.hasOwnProperty.call(this._hdWMTSMap, entity.getParent().getName())) {\n\t\t\treturn true;\n\t\t}\n\t\t// Check for high resolution textures\n\t\tif (entity.get('spheroidLOD') !== null) {\n\t\t\tconst spheroidLOD = entity.get('spheroidLOD');\n\t\t\tconst sizes = spheroidLOD.getTextureSizes('color');\n\t\t\tfor (let i = 0; i < sizes.length; i++) {\n\t\t\t\tif (sizes[i] > this._hdBreakpointSize) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets the HD breakpoint sizes.\n\t * Below is Low resolution, above will be considered HD.\n\t * @param {number} breakPointSize - Size (default 512)\n\t * @param {number} maxTextureSize - Size (default 4096)\n\t */\n\tsetHDBreakpoints(breakPointSize, maxTextureSize) {\n\t\tthis._hdBreakpointSize = breakPointSize;\n\t\tthis._maxTextureSize = maxTextureSize;\n\t}\n\n\t/**\n\t * Toggles HD features.\n\t */\n\tasync toggleHD() {\n\t\tthis._isHD = !this._isHD;\n\n\t\t// Toggle low resolution textures\n\t\tif (!this._isHD) {\n\t\t\tthis.pioneer.getConfig().setValue('maxTextureSize', this._hdBreakpointSize);\n\t\t}\n\n\t\t// Toggle WMTS\n\t\tfor (const name in this._hdWMTSMap) {\n\t\t\tconst wmts = this._hdWMTSMap[name];\n\t\t\tconst entity = this._scene.get(name);\n\t\t\tconst spheroidLOD = entity.getComponentByType('spheroidLOD');\n\t\t\tconst wmtsComponent = entity.getComponent(wmts);\n\t\t\tif (AppUtils.isMobileMode()) {\n\t\t\t\t// Mobile limit\n\t\t\t\twmtsComponent.setMaxLevel(5);\n\t\t\t}\n\t\t\twmtsComponent.setEnabled(this._isHD);\n\t\t\tif (this._isHD) {\n\t\t\t\t// Add it to the loading list\n\t\t\t\tthis.addLoading(name, 'wmts');\n\t\t\t\t// Wait for first level to be loaded\n\t\t\t\tawait this.pioneer.waitUntilNextFrame();\n\t\t\t\tconst ready = await this.tileIsReady(wmtsComponent).catch(() => {\n\t\t\t\t\tthis.removeLoading(name, 'wmts');\n\t\t\t\t});\n\t\t\t\tif (ready === true) {\n\t\t\t\t\tspheroidLOD.setEnabled(false);\n\t\t\t\t\tthis.removeLoading(name, 'wmts');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tspheroidLOD.setEnabled(true);\n\t\t\t}\n\n\t\t\t// Toggle 4K textures\n\t\t\tif (this._isHD) {\n\t\t\t\tthis.pioneer.getConfig().setValue('maxTextureSize', this._maxTextureSize);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set the texture size for a specific entity\n\t * @param {string} entityId\n\t * @param {number} size\n\t * @param {string} textureName\n\t */\n\tasync forceTextureSizeForEntity(entityId, size, textureName = 'color') {\n\t\tconst spheroidLOD = /** @type {Pioneer.SpheroidLODComponent} */ (this.app.pioneer.get('main', entityId, 'spheroidLOD'));\n\t\tif (spheroidLOD === null || spheroidLOD === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tspheroidLOD.forceTextureSize(textureName, size);\n\t}\n\n\t/**\n\t * Returns true if the entity's textures are larger than the HD break size point\n\t * @param {string} entityId\n\t * @returns {Promise<boolean>}\n\t */\n\tasync isEntityHD(entityId) {\n\t\tconst spheroidLOD = /** @type {Pioneer.SpheroidLODComponent} */ (this.app.pioneer.get('main', entityId, 'spheroidLOD'));\n\t\tif (spheroidLOD === null || spheroidLOD === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tawait spheroidLOD.getLoadedPromise();\n\t\treturn spheroidLOD.getTextureCurrentSize('color', 0) > this._hdBreakpointSize;\n\t}\n\n\t/**\n\t * Toggle the textures for an an entity between the min and max texture sizes available.\n\t * @param {string} entityId\n\t * @returns {Promise<boolean>}\n\t */\n\tasync toggleHDTextureForEntity(entityId) {\n\t\tconst spheroidLOD = /** @type {Pioneer.SpheroidLODComponent} */ (this.app.pioneer.get('main', entityId, 'spheroidLOD'));\n\t\tif (await this.isEntityHD(entityId) === false) {\n\t\t\tlet hdTextureSize = this._maxTextureSize;\n\t\t\tif (AppUtils.isiPhone()) {\n\t\t\t\thdTextureSize = this._mobileTextureSize;\n\t\t\t}\n\t\t\tthis.addLoading(entityId, 'spheroidLOD');\n\t\t\tspheroidLOD.getTextureNames().forEach(element => {\n\t\t\t\tthis.forceTextureSizeForEntity(entityId, hdTextureSize, element);\n\t\t\t});\n\t\t\tawait this.pioneer.waitUntilNextFrame();\n\t\t\tawait spheroidLOD.getLoadedPromise();\n\t\t\tthis.removeLoading(entityId, 'spheroidLOD');\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.addLoading(entityId, 'spheroidLOD');\n\t\t\tspheroidLOD.getTextureNames().forEach(element => {\n\t\t\t\tthis.forceTextureSizeForEntity(entityId, this._hdBreakpointSize, element);\n\t\t\t});\n\t\t\tawait this.pioneer.waitUntilNextFrame();\n\t\t\tawait spheroidLOD.getLoadedPromise();\n\t\t\tthis.removeLoading(entityId, 'spheroidLOD');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Create a ring or disc grid around an entity.\n\t * @param {string} name - Ring entity's name\n\t * @param {number} radius\n\t * @param {string} entityName\n\t * @param {object} [options={}]\n\t * @param {string} [options.orbitPlaneEntityName] - Entity to align ring along its orbit plane\n\t * @param {Pioneer.Color} [options.color]\n\t * @param {number} [options.numCircles=1]\n\t * @param {number} [options.numSpokes=0]\n\t * @param {Pioneer.Vector3} [options.labelPosition=new Pioneer.Vector3(-radius, 0, 0)]\n\t * @param {string} [options.labelText='']\n\t * @param {boolean} [options.isEnable=true] - Entity is enabled  or not by default\n\t */\n\tcreateRing(name, radius, entityName, { orbitPlaneEntityName, color, numCircles = 1, numSpokes = 0, labelPosition = new Pioneer.Vector3(-radius, 0, 0), labelText = '', isEnable = true } = {}) {\n\t\t// Create ring entity\n\t\tconst ringEntity = this._scene.addEntity(name);\n\t\tringEntity.setPosition(Pioneer.Vector3.Zero);\n\n\t\t// Attach to a parent entity\n\t\tconst entity = this._scene.getEntity(entityName);\n\t\tringEntity.setParent(entity);\n\n\t\t// Create ring\n\t\tconst ring = /** @type {DiscGridComponent} */(ringEntity.addComponent('discGrid'));\n\t\tring.setLineWidth(6);\n\t\tring.setSize(radius);\n\t\tring.setNumCircles(numCircles);\n\t\tring.setNumSpokes(numSpokes);\n\t\tring.setIgnoreDistance(true);\n\n\t\t// Set orientation\n\t\tif (orbitPlaneEntityName) {\n\t\t\tthis.setAlignPlane(ringEntity, orbitPlaneEntityName);\n\t\t}\n\n\t\t// Set color\n\t\tif (color instanceof Pioneer.Color) {\n\t\t\tring.setColor(color);\n\t\t}\n\n\t\t// Create label entity\n\t\tconst labelEntity = this._scene.addEntity(`${name}Label`);\n\t\tlabelEntity.setPosition(Pioneer.Vector3.Zero);\n\t\tlabelEntity.setParent(entity);\n\t\tconst fixed = /** @type {Pioneer.FixedController} */(labelEntity.addController('fixed'));\n\t\tfixed.setPosition(labelPosition);\n\t\tconst divComponent = /** @type {Pioneer.DivComponent} */(labelEntity.addComponent('div'));\n\t\tdivComponent.setFadeWhenCloseToCamera(false);\n\t\tconst div = divComponent.getDiv();\n\t\tdiv.classList.add('ring-label');\n\t\tdivComponent.getDiv().innerHTML = labelText;\n\n\t\tringEntity.setEnabled(isEnable);\n\t\tlabelEntity.setEnabled(isEnable);\n\t}\n\n\t/**\n\t * Create a torus around an entity.\n\t * @param {string} name - Torus entity's name\n\t * @param {number} innerRadius\n\t * @param {number} outerRadius\n\t * @param {string} entityName\n\t * @param {object} [options={}]\n\t * @param {string} [options.orbitPlaneEntityName] - Entity to align ring along its orbit plane\n\t * @param {Pioneer.Color} [options.color]\n\t * @param {[number, number]} [options.visibleDistance=[Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY]]\n\t * @param {Pioneer.Vector3} [options.labelPosition=new Pioneer.Vector3(-radius, 0, 0)]\n\t * @param {string} [options.labelText='']\n\t * @param {boolean} [options.isEnable=true] - Entity is enabled  or not by default\n\t */\n\tcreateTorus(name, innerRadius, outerRadius, entityName, { orbitPlaneEntityName, color, visibleDistance = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY], labelPosition = new Pioneer.Vector3(-outerRadius, 0, 0), labelText = '', isEnable = true } = {}) {\n\t\t// Create torus entity\n\t\tconst torusEntity = this._scene.addEntity(name);\n\t\ttorusEntity.setPosition(Pioneer.Vector3.Zero);\n\n\t\t// Attach to a parent entity\n\t\tconst parent = this._scene.getEntity(entityName);\n\t\ttorusEntity.setParent(parent);\n\n\t\t// Create torus\n\t\tconst torus = /** @type {TorusComponent} */(torusEntity.addComponent('torus'));\n\t\ttorus.setInnerRadius(innerRadius);\n\t\ttorus.setOuterRadius(outerRadius);\n\t\ttorus.setVisibleDistanceInterval(new Pioneer.Interval(...visibleDistance));\n\n\t\t// Set orientation\n\t\tif (orbitPlaneEntityName) {\n\t\t\tthis.setAlignPlane(torusEntity, orbitPlaneEntityName);\n\t\t}\n\n\t\t// Set color\n\t\tif (color instanceof Pioneer.Color) {\n\t\t\ttorus.setColor(color);\n\t\t}\n\n\t\t// Create label entity\n\t\tconst labelEntity = this._scene.addEntity(`${name}Label`);\n\t\tlabelEntity.setPosition(Pioneer.Vector3.Zero);\n\t\tlabelEntity.setParent(parent);\n\t\tconst fixed = /** @type {Pioneer.FixedController} */(labelEntity.addController('fixed'));\n\t\tfixed.setPosition(labelPosition);\n\t\tconst divComponent = /** @type {Pioneer.DivComponent} */(labelEntity.addComponent('div'));\n\t\tdivComponent.setFadeWhenCloseToCamera(false);\n\t\tconst div = divComponent.getDiv();\n\t\tdiv.classList.add('ring-label');\n\t\tdivComponent.getDiv().innerHTML = labelText;\n\n\t\ttorusEntity.setEnabled(isEnable);\n\t\tlabelEntity.setEnabled(isEnable);\n\t}\n\n\t/**\n\t * Sets the HD WMTS component for an entity.\n\t * @param {string} id - Target entity id\n\t * @param {string} wmts - Name of the WMTS component\n\t */\n\tsetEntityHDWMTS(id, wmts) {\n\t\tthis._hdWMTSMap[id] = wmts;\n\t}\n\n\t/**\n\t * Checks that the tiles are ready and sets the wmtsComponent to enabled.\n\t * @param {string} entityId\n\t * @param {WMTSComponent} wmtsComponent\n\t */\n\tasync enableWMTSComponent(entityId, wmtsComponent) {\n\t\tif (AppUtils.isMobileMode()) {\n\t\t\twmtsComponent.setMaxLevel(5);\n\t\t}\n\t\tconst spheroidLOD = this.get('main').getEntity(entityId).getComponentByType('spheroidLOD');\n\n\t\tthis.addLoading(entityId, 'wmts');\n\t\t// Wait for first level to be loaded\n\t\twmtsComponent.setEnabled(true);\n\t\tawait this.pioneer.waitUntilNextFrame();\n\t\tconst ready = await this.tileIsReady(wmtsComponent).catch(() => {\n\t\t\tthis.removeLoading(entityId, 'wmts');\n\t\t});\n\t\tif (ready) {\n\t\t\tspheroidLOD.setEnabled(false);\n\t\t\tthis.removeLoading(entityId, 'wmts');\n\t\t}\n\t\telse {\n\t\t\tspheroidLOD.setEnabled(true);\n\t\t}\n\t}\n\n\t/**\n\t * Add the WMTS component to the entity\n\t * @param {string} entityId\n\t * @param {any} wmtsData\n\t */\n\tasync addWMTSComponent(entityId, wmtsData) {\n\t\tconst entity = /** @type {Pioneer.Entity} */ (this.app.pioneer.get('main', entityId));\n\n\t\t// Create component if it doesn't already exist.\n\t\tlet wmts = /** @type {WMTSComponent} */ (entity.getComponentByType('wmts'));\n\t\tif (wmts === null) {\n\t\t\twmts = /** @type {WMTSComponent} */ (entity.addComponent('wmts', wmtsData.id));\n\t\t}\n\t\twmts.setEnabled(false);\n\n\t\t// Set the end point, layer, and tile matrix set.\n\t\twmts.setEndPoint(wmtsData.endPoint);\n\t\twmts.setLayer(wmtsData.layer);\n\n\t\tif (wmtsData.tile) {\n\t\t\twmts.setTileMatrixSet(wmtsData.tile);\n\t\t}\n\n\t\t// Set time\n\t\tconst now = new Date();\n\t\tif (wmtsData.time === 'yesterday') {\n\t\t\t// Set the date to one day before today.\n\t\t\tnow.setDate(now.getDate() - 1);\n\t\t\twmts.setDimensionValue('Time', now.getFullYear() + '-' + (String(now.getMonth() + 1)).padStart(2, '0') + '-' + (String(now.getDate())).padStart(2, '0'));\n\t\t}\n\t\telse if (wmtsData.time === 'now') {\n\t\t\twmts.setDimensionValue('Time', now.getFullYear() + '-' + (String(now.getMonth() + 1)).padStart(2, '0') + '-' + (String(now.getDate())).padStart(2, '0'));\n\t\t}\n\n\t\t// Set Max Level\n\t\tif (wmtsData.level) {\n\t\t\twmts.setMaxLevel(wmtsData.level);\n\t\t}\n\t\telse {\n\t\t\twmts.setMaxLevel(Infinity);\n\t\t}\n\t\t// Set Min level\n\t\twmts.setMinLevel(2);\n\n\t\tawait this.enableWMTSComponent(entityId, wmts);\n\t}\n\n\t/**\n\t * Parses JSON file and loads WMTS components accordingly.\n\t * @param {JSON} wmtsList\n\t */\n\tloadWMTSFromJSON(wmtsList) {\n\t\t// Loop for each entity id\n\t\tfor (const entityId in wmtsList) {\n\t\t\tlet hdId = '';\n\t\t\t// Loop for each wmts item\n\t\t\tfor (const key in wmtsList[entityId]) {\n\t\t\t\tif (key === 'hd' || hdId === '') {\n\t\t\t\t\t// Set HD WMTS id\n\t\t\t\t\thdId = wmtsList[entityId][key];\n\t\t\t\t\tthis._hdWMTSMap[entityId] = hdId;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Parse WMTS data\n\t\t\t\t\tconst wmtsData = wmtsList[entityId][key];\n\t\t\t\t\tconst entity = this._scene.get(entityId);\n\t\t\t\t\t// Create component\n\t\t\t\t\tconst wmts = entity.addComponent('wmts', key);\n\t\t\t\t\twmts.setEnabled(false);\n\t\t\t\t\t// Set the end point, layer, and tile matrix set.\n\t\t\t\t\twmts.setEndPoint(wmtsData.endPoint);\n\t\t\t\t\twmts.setLayer(wmtsData.layer);\n\t\t\t\t\tif (wmtsData.tile) {\n\t\t\t\t\t\twmts.setTileMatrixSet(wmtsData.tile);\n\t\t\t\t\t}\n\t\t\t\t\t// Set time\n\t\t\t\t\tconst now = new Date();\n\t\t\t\t\tif (wmtsData.time === 'yesterday') {\n\t\t\t\t\t\t// Set the date to one day before today.\n\t\t\t\t\t\tnow.setDate(now.getDate() - 1);\n\t\t\t\t\t\twmts.setDimensionValue('Time', now.getFullYear() + '-' + (String(now.getMonth() + 1)).padStart(2, '0') + '-' + (String(now.getDate())).padStart(2, '0'));\n\t\t\t\t\t}\n\t\t\t\t\telse if (wmtsData.time === 'now') {\n\t\t\t\t\t\twmts.setDimensionValue('Time', now.getFullYear() + '-' + (String(now.getMonth() + 1)).padStart(2, '0') + '-' + (String(now.getDate())).padStart(2, '0'));\n\t\t\t\t\t}\n\t\t\t\t\t// Set Max Level\n\t\t\t\t\tif (wmtsData.level) {\n\t\t\t\t\t\twmts.setMaxLevel(wmtsData.level);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twmts.setMaxLevel(Infinity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set orientation of an entity to another entity's plane.\n\t * @param {Pioneer.Entity} entity\n\t * @param {string} orbitPlaneEntityName\n\t */\n\tsetAlignPlane(entity, orbitPlaneEntityName) {\n\t\tconst orbitPlaneEntity = this._scene.getEntity(orbitPlaneEntityName);\n\t\tconst ori = new Pioneer.Quaternion();\n\t\tconst dynamoController = /** @type {Pioneer.DynamoController} */(orbitPlaneEntity.getControllerByType('dynamo'));\n\t\tdynamoController.getOrbitOrientation(ori, this.app.pioneer.getTime());\n\t\tentity.setOrientation(ori);\n\t}\n\n\t/**\n\t * Clears all temporary entities.\n\t */\n\tclearTempEntities() {\n\t\tconst cameraManager = /** @type {CameraManager} */(this.app.getManager('camera'));\n\t\tconst cameraEntity = cameraManager.cameraEntity;\n\t\tif (cameraEntity === null || cameraEntity.getParent() === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst camParent = cameraEntity.getParent().getName();\n\n\t\tthis._tempEntities = this._tempEntities.filter(tempEntity => {\n\t\t\t// Dont clear the temp entities if the camera is using one\n\t\t\tif (camParent === tempEntity.getName()) {\n\t\t\t\treturn true; // it stays in the temp entity array\n\t\t\t}\n\n\t\t\t// Remove from label, scene and this array\n\t\t\tconst labelManager = /** @type {LabelManager} */(this.app.getManager('label'));\n\t\t\tlabelManager.removeEntity(tempEntity);\n\t\t\tthis._scene.removeEntity(tempEntity?.getName());\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t/**\n\t * Adds a temporary entity.\n\t * @param {Pioneer.Entity} entity\n\t */\n\taddTempEntity(entity) {\n\t\tthis._tempEntities.push(entity);\n\t}\n\n\t/**\n\t * Adds loading of an object.\n\t * @param {string} id - Entity id\n\t * @param {string} type - Could be camera or wmts\n\t */\n\taddLoading(id, type) {\n\t\tconst itemId = id + '_' + type;\n\t\tif (this._loadingItems.indexOf(itemId) < 0) {\n\t\t\tthis._loadingItems.push(itemId);\n\t\t}\n\t\tif (this._loadingItems.length > 0) {\n\t\t\tthis._isLoading = true;\n\t\t\tthis.triggerCallbacks('loading');\n\t\t}\n\t}\n\n\t/**\n\t * Removes loading of an object.\n\t * @param {string} id - Entity id\n\t * @param {string} type - Could be camera or wmts\n\t */\n\tremoveLoading(id, type) {\n\t\tconst itemId = id + '_' + type;\n\t\tconst index = this._loadingItems.indexOf(itemId);\n\t\tif (index >= 0) {\n\t\t\tthis._loadingItems.splice(index, 1);\n\t\t}\n\t\tif (this._loadingItems.length === 0) {\n\t\t\tthis._isLoading = false;\n\t\t\tthis.triggerCallbacks('loaded', [id]);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a component to be loaded.\n\t * @param {Pioneer.BaseComponent} component\n\t */\n\tforceLoad(component) {\n\t\tcomponent.setForceLoaded(true);\n\t\tthis._loadedComponents.push(component);\n\t}\n\n\t/**\n\t * Removes force load for a component.\n\t * @param {Pioneer.BaseComponent} component\n\t */\n\tremoveForceLoad(component) {\n\t\tthis._loadedComponents = this._loadedComponents.filter(value => {\n\t\t\tif (value === component) {\n\t\t\t\tcomponent.setForceLoaded(false);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\n\t/**\n\t * Clear all forced components.\n\t */\n\tclearForceLoad() {\n\t\tfor (let i = 0; i < this._loadedComponents.length; i++) {\n\t\t\tconst component = this._loadedComponents[i];\n\t\t\tcomponent.setForceLoaded(false);\n\t\t}\n\n\t\tthis._loadedComponents = [];\n\t}\n\n\t/**\n\t * Gets the distance between two objects.\n\t * @param {string} objectA - Id of scene object A\n\t * @param {string} objectB - Id of scene object B\n\t * @param {object} options - the options\n\t * @param {moment} [options.time = undefined] - specific time as moment object\n\t * @param {boolean} [options.subtractRadius = false] - if calculation should subtract radiuses\n\t * @param {boolean} [options.precision = 0] - Rounding error up to precision number\n\t * @returns {number}\n\t */\n\tgetDistance(objectA, objectB, { time = undefined, subtractRadius = false, precision = 0 } = {}) {\n\t\tconst positionRel = Pioneer.Vector3.pool.get();\n\t\tconst entityA = this._scene.get(objectA);\n\t\tconst entityB = this._scene.get(objectB);\n\n\t\tlet distance = 0;\n\n\t\tif (time !== undefined) {\n\t\t\tconst pioneerTime = Pioneer.TimeUtils.unixToEt(time.valueOf() / 1000);\n\t\t\tentityA.getPositionRelativeToEntity(positionRel, Pioneer.Vector3.Zero, entityB, pioneerTime);\n\t\t}\n\t\telse {\n\t\t\tentityA.getPositionRelativeToEntity(positionRel, Pioneer.Vector3.Zero, entityB);\n\t\t}\n\t\tdistance = positionRel.magnitude();\n\n\t\tif (subtractRadius) {\n\t\t\tconst radiusA = entityA.getExtentsRadius();\n\t\t\tconst radiusB = entityB.getExtentsRadius();\n\t\t\tdistance -= (radiusA + radiusB);\n\t\t}\n\n\t\tif (precision > 0) {\n\t\t\tconst f = Math.pow(10, Math.floor(Math.log10(distance)) - precision);\n\t\t\tdistance = Math.round(distance / f) * f;\n\t\t}\n\n\t\tPioneer.Vector3.pool.release(positionRel);\n\t\treturn distance;\n\t}\n\n\t/**\n\t * Gets the speed of an object.\n\t * @param {string} objectA - Id of scene object A\n\t * @param {string} objectB - Speed of A relative to B\n\t * @param {object} options - the options\n\t * @param {moment} [options.time = undefined] - specific time as moment object\n\t * @returns {number}\n\t */\n\tgetSpeed(objectA, objectB, { time = undefined } = {}) {\n\t\tconst speed = Pioneer.Vector3.pool.get();\n\t\tconst entityA = this._scene.get(objectA);\n\t\tlet entityB = null;\n\t\tif (objectB === undefined) {\n\t\t\tentityB = entityA.getParent();\n\t\t}\n\t\telse {\n\t\t\tentityB = this._scene.get(objectB);\n\t\t}\n\n\t\tif (time !== undefined) {\n\t\t\tconst pioneerTime = this.app.getManager('time').momentToET(time);\n\t\t\tentityA.getVelocityRelativeToEntity(speed, Pioneer.Vector3.Zero, entityB, pioneerTime);\n\t\t}\n\t\telse {\n\t\t\tentityA.getVelocityRelativeToEntity(speed, Pioneer.Vector3.Zero, entityB);\n\t\t}\n\n\t\tPioneer.Vector3.pool.release(speed);\n\n\t\treturn speed.magnitude();\n\t}\n\n\t/**\n\t * Gets min and max coverage of am object.\n\t * @param {string} entityId\n\t * @param {boolean} checkOrientation\n\t * @returns {object}\n\t */\n\tgetCoverage(entityId, checkOrientation = true) {\n\t\tconst coverage = {\n\t\t\tmin: AppUtils.constants.maxDate,\n\t\t\tmax: AppUtils.constants.minDate\n\t\t};\n\t\t// Get coverage for entity\n\t\tconst entity = this.pioneer.get('main', entityId);\n\t\tconst margin = 0.001; // Adds a margin in seconds to the min/max coverage to prevent dynamo issues\n\n\t\tlet posOriMin = entity.getPositionCoverage().min;\n\t\tlet posOriMax = entity.getPositionCoverage().max;\n\t\tif (checkOrientation) {\n\t\t\t// Check interval for both position and orientation\n\t\t\tposOriMin = Math.max(entity.getPositionCoverage().min, entity.getOrientationCoverage().min);\n\t\t\tposOriMax = Math.min(entity.getPositionCoverage().max, entity.getOrientationCoverage().max);\n\t\t}\n\n\t\tcoverage.min = entity ? Math.min(posOriMin, coverage.min) : coverage.min;\n\t\tcoverage.max = entity ? Math.max(posOriMax - margin, coverage.max) : coverage.max;\n\n\t\t// Convert to moment\n\t\tif (coverage.min === -Infinity || coverage.min < AppUtils.minDate) {\n\t\t\tcoverage.min = moment(AppUtils.constants.minDate);\n\t\t}\n\t\telse {\n\t\t\tcoverage.min = Math.ceil(coverage.min * 1000) / 1000;\n\t\t\tlet unix = Pioneer.TimeUtils.etToUnix(coverage.min) * 1000;\n\t\t\tunix = Math.ceil(unix * 1000) / 1000;\n\t\t\tcoverage.min = moment.tz(unix, 'ETC/Utc');\n\t\t}\n\t\tif (coverage.max === Infinity || coverage.max > AppUtils.maxDate) {\n\t\t\tcoverage.max = moment(AppUtils.constants.maxDate);\n\t\t}\n\t\telse {\n\t\t\tcoverage.max = Math.floor(coverage.max * 1000) / 1000;\n\t\t\tlet unix = Pioneer.TimeUtils.etToUnix(coverage.max) * 1000;\n\t\t\tunix = Math.floor(unix * 1000) / 1000;\n\t\t\tcoverage.max = moment.tz(unix, 'ETC/Utc');\n\t\t}\n\n\t\treturn coverage;\n\t}\n\n\t/**\n\t * TODO: Toggle on/off ring of target.\n\t * @param {string} target\n\t * @returns {Promise<void>}\n\t */\n\tasync toggleRing(target) {\n\t\tconsole.log('toggleRing', target);\n\t}\n\n\t/**\n\t * Gets main scene.\n\t * @returns {Pioneer.Scene|null}\n\t */\n\tget main() {\n\t\treturn this._scene;\n\t}\n\n\t/**\n\t * Get loading status.\n\t * @returns {boolean}\n\t */\n\tget isLoading() {\n\t\treturn this._isLoading;\n\t}\n}\n","import Fuse from 'fuse.js';\nimport {\n\tBaseApp,\n\tBaseManager\n} from '../internal';\n\n/**\n * Search Manager class.\n * @extends BaseManager\n * @class\n */\nexport class SearchManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {object} [options={}]\n\t */\n\tconstructor(app, options = {}) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * Maximum results returned.\n\t\t * @type {number}\n\t\t */\n\t\tthis._maxEntries = 10;\n\n\t\t/**\n\t\t * Fuse instance.\n\t\t * @type {Fuse}\n\t\t */\n\t\tthis._fuse = null;\n\n\t\t/**\n\t\t * Database to search.\n\t\t * @type {object[]}\n\t\t */\n\t\tthis._database = null;\n\n\t\t/**\n\t\t * Fuse options.\n\t\t * @type {object}\n\t\t */\n\t\tthis._options = {\n\t\t\tthreshold: 0.4,\n\t\t\tkeys: [\n\t\t\t\t{\n\t\t\t\t\tname: 'id',\n\t\t\t\t\tweight: 0.99\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'name',\n\t\t\t\t\tweight: 0.98\n\t\t\t\t}\n\t\t\t],\n\t\t\tincludeScore: true,\n\t\t\tincludeMatches: true,\n\t\t\tignoreLocation: true,\n\t\t\t...options\n\t\t};\n\t}\n\n\t/**\n\t * Set Fuse options for search.\n\t * @param {object} options\n\t */\n\tsetOptions(options) {\n\t\tObject.assign(this._options, options);\n\t\tthis._fuse = new Fuse(this._database, this._options);\n\t}\n\n\t/**\n\t * Set database for search.\n\t * @param {object} database - Data that will be used to search\n\t * @param {object} [options={}] - Fuse options\n\t */\n\tsetDatabase(database, options = {}) {\n\t\tif (!database) {\n\t\t\tconsole.error('[SearchManager.setDatabase] Missing database.');\n\t\t\treturn;\n\t\t}\n\n\t\tObject.assign(this._options, options);\n\n\t\tthis._database = Object.keys(database).filter(key => database[key].searchable !== false).map(key => {\n\t\t\tconst keywords = database[key].keywords || [];\n\t\t\tkeywords.map(keyword => ({\n\t\t\t\tvalue: keyword\n\t\t\t}));\n\t\t\tdatabase[key].keywords = keywords;\n\t\t\treturn database[key];\n\t\t});\n\n\t\tif (!Array.isArray(this._database)) {\n\t\t\tconsole.error('[SearchManager.setDatabase] Database is not an array.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._fuse = new Fuse(this._database, this._options);\n\t}\n\n\t/**\n\t * Get entry using id.\n\t * @param {string} id\n\t * @returns {object}\n\t */\n\tgetEntry(id) {\n\t\treturn this._database.find(entry => entry.id === id);\n\t}\n\n\t/**\n\t * Finds a string and return searh results.\n\t * @param {string} text - string that is searched\n\t * @param {number} maxEntries\n\t * @returns {Fuse.FuseResult|null}\n\t */\n\tfind(text, maxEntries = this._maxEntries) {\n\t\tif (text === '' || text === null || text === undefined || !this._fuse) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Filtering based on negative keywords if any\n\t\tlet results = this._fuse.search(text);\n\n\t\t// Limiting by the max entries value\n\t\tresults = results.slice(0, maxEntries);\n\n\t\treturn results;\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport {\n\tBaseApp,\n\tBaseManager,\n\tCameraManager\n} from '../internal';\n\n/**\n * Selection Manager class.\n * @extends BaseManager\n */\nexport class SelectionManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {Pioneer.Scene} scene\n\t */\n\tconstructor(app, scene) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * Main Pioneer scene.\n\t\t * @type {Pioneer.Scene}\n\t\t */\n\t\tthis._scene = scene;\n\n\t\t/**\n\t\t * Current selected id.\n\t\t * @type {string}\n\t\t */\n\t\tthis._id = null;\n\n\t\t/**\n\t\t * All 3D objects are clickable or not.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isClickable = true;\n\n\t\t/**\n\t\t * State of suppressing 3D selection handler.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._isSuppressed = false;\n\n\t\tthis._eventNames.push('3dselection');\n\t\tthis._initCallbacks();\n\n\t\tthis.bindFunctions([\n\t\t\t'setSuppress',\n\t\t\t'handle3DSelection'\n\t\t]);\n\t}\n\n\t/**\n\t * Sets the scene.\n\t * @param {Pioneer.Scene} scene\n\t */\n\tsetScene(scene) {\n\t\tthis._scene = scene;\n\t}\n\n\t/**\n\t * Selects an entity.\n\t * @param {string} id\n\t */\n\tselectEntity(id) {\n\t\tconst oldId = this._id;\n\t\tif (id !== oldId) {\n\t\t\tconst event = new CustomEvent('selectionupdate', { detail: { new: id, old: this._id } });\n\t\t\twindow.dispatchEvent(event);\n\t\t\tthis._id = id;\n\t\t\tthis._switchSelectionClass(this._id, oldId);\n\t\t}\n\t}\n\n\t/**\n\t * Unselects what was selected before.\n\t */\n\tunselect() {\n\t\tconst oldId = this._id;\n\t\tif (oldId !== null) {\n\t\t\tconst event = new CustomEvent('unselect', { old: this._id });\n\t\t\twindow.dispatchEvent(event);\n\t\t}\n\t\tthis._id = null;\n\t\tthis._switchSelectionClass(this._id, oldId);\n\t}\n\n\t/**\n\t * Returns the ID of the currently selected object.\n\t * @returns {string}\n\t */\n\tgetCurrentId() {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Enable/disable all 3D objects click.\n\t * @param {boolean} isClickable\n\t */\n\tsetClickable(isClickable) {\n\t\tthis._isClickable = isClickable;\n\t}\n\n\t/**\n\t * Initializes the 3D click callback.\n\t * @param {CameraManager} cameraManager\n\t */\n\tinit3Dcallback(cameraManager) {\n\t\tcameraManager.setSelectionCallback(this.handle3DSelection);\n\t}\n\n\t/**\n\t * Gets link from entity's name.\n\t * @param {string} entityName\n\t * @returns {string}\n\t */\n\t_getLink(entityName) {\n\t\treturn `/${entityName}`;\n\t}\n\n\t/**\n\t * Set state of suppressing 3D selection handler once.\n\t * @param {boolean} suppress\n\t */\n\tsetSuppress(suppress) {\n\t\tthis._isSuppressed = suppress;\n\t}\n\n\t/**\n\t * A selection callback when a 3D object is clicked.\n\t * @param {Pioneer.Entity} entity\n\t */\n\thandle3DSelection(entity) {\n\t\tif (!this._isClickable) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._isSuppressed && entity !== null) {\n\t\t\tconst router = this._app.getManager('router');\n\t\t\tconst entityName = entity.getName();\n\t\t\tconst parsedLink = this._getLink(entityName);\n\n\t\t\tconst linkPath = typeof parsedLink === 'string' ? parsedLink : (parsedLink.path ?? '');\n\n\t\t\tconst {\n\t\t\t\toptions = { keepTime: true },\n\t\t\t\tquery = {}\n\t\t\t} = typeof parsedLink === 'object' && parsedLink;\n\n\t\t\t// Go to the object, maintaining time query if it exists.\n\t\t\tconst navigated = router.navigate(query, linkPath, options);\n\n\t\t\tthis.triggerCallbacks('3dselection', [navigated, entity]);\n\t\t}\n\t\t// Reset suppress state\n\t\tthis._isSuppressed = false;\n\t}\n\n\t/**\n\t * Updates selection class on entity div component.\n\t * @param {string|null} newId\n\t * @param {string|null} oldId\n\t */\n\t_switchSelectionClass(newId, oldId) {\n\t\t// Remove old selection class\n\t\tif (oldId !== null) {\n\t\t\tconst entity = this._scene.get(oldId);\n\t\t\tif (entity !== null) {\n\t\t\t\tconst label = entity.getComponentByType('div').getDiv();\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.classList.remove('selection');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Add new selection class\n\t\tif (newId !== null) {\n\t\t\tconst entity = this._scene.get(newId);\n\t\t\tif (entity !== null) {\n\t\t\t\tconst label = entity.getComponentByType('div').getDiv();\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.classList.add('selection');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport {\n\tSceneHelpers\n} from 'pioneer-scripts';\nimport {\n\tAppUtils,\n\tBaseApp,\n\tBaseManager\n} from '../internal';\n\n/**\n * Spout manager class.\n */\nexport class SpoutManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\tthis._scene = this.app.pioneer.get('main');\n\t\tthis._defaultTarget = this.getSpoutCameraTargetEntity(this.app.getManager('router').currentRoute.params);\n\t\tthis._defaultTargetRadius = this._defaultTarget ? this._scene.getEntity(this._defaultTarget)?.getExtentsRadius() : this._scene.getEntity('earth').getExtentsRadius();\n\t}\n\n\t/**\n\t * Enable Spout\n\t * @param {boolean} globe\n\t * @param {number} renderWidth\n\t * @param {number} globeDistance\n\t * @param {any} target\n\t * @param {number} fontSize\n\t * @param {number} lonAngleOffset\n\t * @param {boolean} alignToNorthPole\n\t */\n\tasync enableSpout(globe = false, renderWidth = 2048, globeDistance = this._defaultTargetRadius * 2, target = this._defaultTarget, fontSize = 25, lonAngleOffset = 0, alignToNorthPole = false) {\n\t\t// Set up viewport as invisible\n\t\tconst spoutViewport = this.app.pioneer.getViewport('spoutViewport') || this.app.pioneer.addViewport('spoutViewport');\n\t\tspoutViewport.getDiv().style.display = 'none';\n\t\tspoutViewport.getDiv().style.width = '100%';\n\t\tspoutViewport.getDiv().style.height = '100%';\n\n\t\t// Get the entity that will be the center for the globe spout\n\t\tconst targetEntity = this._scene.getEntity(target) || this._scene.getEntity('earth');\n\n\t\t// Set up the Spout camera entity\n\t\tconst spoutCamera = this.setUpSpoutCamera(globe, targetEntity, alignToNorthPole, lonAngleOffset);\n\n\t\t// Add Spout component.\n\t\tconst spoutComponent = spoutCamera.getComponentByClass(Pioneer.SpoutComponent) || spoutCamera.addComponentByClass(Pioneer.SpoutComponent);\n\t\tspoutViewport.setCamera(spoutComponent); // This causes 2 computeBoundingSphere errors.\n\t\tspoutComponent.setRenderWidth(renderWidth);\n\t\tthis._scene.setAmbientLightColor(new Pioneer.Color(1, 1, 1));\n\n\t\tif (globe === true) {\n\t\t\tspoutComponent.setForGlobe(true, globeDistance || targetEntity.getExtentsRadius() * 2);\n\t\t\tspoutComponent.setNearDistance(targetEntity.getExtentsRadius() * 0.5);\n\t\t\ttargetEntity.get('atmosphere')?.setExcludedFromCamera(spoutComponent, true);\n\t\t}\n\n\t\t// Turn divs into labels to work with Spout\n\t\tawait this.setUpSpoutLabels(fontSize, targetEntity);\n\t}\n\n\t/**\n\t * Set up spout camera.  If it's a globe, put a new entity at the target. Otherwise, just use the existing camera entity.\n\t * @param {boolean} globe\n\t * @param {any} targetEntity\n\t * @param {boolean} alignToNorthPole\n\t * @param {number} lonAngleOffset\n\t * @returns {Pioneer.CameraComponent} spoutCamera\n\t */\n\tsetUpSpoutCamera(globe, targetEntity = this._defaultTarget, alignToNorthPole = false, lonAngleOffset = 0) {\n\t\tlet spoutCamera;\n\t\tif (globe === true) {\n\t\t\tspoutCamera = this._scene.getEntity('spoutCamera') || this._scene.addEntity('spoutCamera');\n\t\t\tspoutCamera.clearControllers();\n\t\t\tspoutCamera.setParent(targetEntity);\n\t\t\tspoutCamera.setPosition(Pioneer.Vector3.Zero);\n\t\t\tspoutCamera.setOrientation(Pioneer.Quaternion.Identity);\n\n\t\t\tconst align = spoutCamera.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setPrimaryAlignType('align');\n\t\t\talign.setPrimaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\talign.setPrimaryTargetAxis(Pioneer.Vector3.ZAxis);\n\t\t\tif (alignToNorthPole) {\n\t\t\t\talign.setPrimaryTargetEntity(targetEntity.getName());\n\t\t\t}\n\t\t\telse {\n\t\t\t\talign.setPrimaryTargetEntity('camera');\n\t\t\t}\n\n\t\t\tconst xAxis = new Pioneer.Vector3();\n\t\t\tPioneer.Geometry.getXYZFromLLAOnSphere(xAxis, new Pioneer.LatLonAlt(0, Pioneer.MathUtils.degToRad(180 + lonAngleOffset), 1), 1);\n\t\t\talign.setSecondaryAlignType('align');\n\t\t\talign.setSecondaryAxis(Pioneer.Vector3.XAxis);\n\t\t\talign.setSecondaryTargetEntity('camera');\n\t\t\talign.setSecondaryTargetAxis(xAxis);\n\t\t}\n\t\telse {\n\t\t\tspoutCamera = this._scene.getEntity('camera');\n\t\t}\n\n\t\treturn spoutCamera;\n\t}\n\n\t/**\n\t * Set up spout labels\n\t * @param {number} fontSize\n\t * @param {any} targetEntity\n\t */\n\tasync setUpSpoutLabels(fontSize = 25, targetEntity = null) {\n\t\tlet target = targetEntity;\n\t\t// If no target given, grab target from URL\n\t\tif (!target) {\n\t\t\ttarget = await this.getSpoutCameraTargetEntity(this.app.getManager('router').currentRoute.params) || 'sun';\n\t\t}\n\n\t\tSceneHelpers.waitTillEntitiesInPlace(this._scene, [target], this.app.pioneer.getTime(), 10.0, 3.0).then(() => {\n\t\t\tfor (let i = 0; i < this._scene.getNumEntities(); i++) {\n\t\t\t\tconst entity = this._scene.getEntity(i);\n\n\t\t\t\tconst divComponent = entity.get('div');\n\t\t\t\tif (divComponent instanceof Pioneer.DivComponent) {\n\t\t\t\t\tconst label = entity.getComponentByClass(Pioneer.LabelComponent) ?? entity.addComponentByClass(Pioneer.LabelComponent);\n\t\t\t\t\tlabel.setText((divComponent.getDiv().querySelector('.text')?.innerHTML || divComponent.getDiv()?.textContent) || '');\n\t\t\t\t\tlabel.setColor(new Pioneer.Color(1, 1, 1, 1));\n\t\t\t\t\tlabel.setFontSize(fontSize);\n\t\t\t\t\tlabel.setAlignment(new Pioneer.Vector2(0, 0.5));\n\t\t\t\t\tlabel.setPixelOffset(new Pioneer.Vector2(-fontSize / 4, -1));\n\t\t\t\t\tdivComponent.setEnabled(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}).catch(error => {\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n\n\t/**\n\t * Logic for getting Spout camera parent\n\t * @param {object} params\n\t */\n\tasync getSpoutCameraTargetEntity(params) {\n\t\tlet spaceObject = null;\n\t\tconst contentManager = this.app.getManager('content');\n\t\tif (params) {\n\t\t\tconst onMoon = 'feature' in params && params['feature'] === 'moons';\n\t\t\tconst currentObjectId = onMoon ? params.child : params.spaceObject;\n\t\t\tconst currentObjectEntity = this.pioneer.get('main', currentObjectId) || this.pioneer.get('main', 'earth');\n\t\t\tconst entityInfo = contentManager.getEntityInfo(currentObjectId) || {};\n\t\t\tconst entityDesc = await contentManager.getEntityDesc(currentObjectId);\n\t\t\tconst spaceObjParentId = currentObjectId && this.pioneer.get('main', currentObjectId)?.getParent()?.getName();\n\n\t\t\tswitch (entityInfo.category) {\n\t\t\t\tcase 'Spacecraft':\n\t\t\t\t\tspaceObject = AppUtils.isFutureMission(entityDesc?.dates?.start) ? 'earth' : currentObjectEntity?.getParent()?.getName();\n\n\t\t\t\t\t// If lander, use parent of landing site aka celestial body\n\t\t\t\t\tif (entityInfo.keywords.includes('lander') && currentObjectEntity.getParent().getName().includes('landing_site')) {\n\t\t\t\t\t\tspaceObject = this.pioneer.get('main', currentObjectId)?.getParent()?.getParent()?.getName();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Landing site':\n\t\t\t\t\tspaceObject = spaceObjParentId;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tspaceObject = currentObjectId;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn spaceObject;\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport moment from 'moment-timezone';\nimport {\n\tBaseApp,\n\tBaseManager,\n\tERTManager\n} from '../internal';\n\n/**\n * Time manager class.\n */\nexport class TimeManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t */\n\tconstructor(app) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * Date formats object.\n\t\t * @default\n\t\t */\n\t\tthis._dateFormats = {\n\t\t\tutc: {\n\t\t\t\tfull: 'YYYY-MM-D HH[:]mm[:]ss',\n\t\t\t\tdatetime: 'YYYY-MM-D HH[:]mm',\n\t\t\t\tdate: 'YYYY MMMM D',\n\t\t\t\ttime: 'HH[:]mm[:]ss',\n\t\t\t\turl: 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n\t\t\t},\n\t\t\tlocal: {\n\t\t\t\tfull: 'M/D/YY hh[:]mm[:]ss',\n\t\t\t\tdatetime: 'M/D/YY hh[:]mm',\n\t\t\t\tdate: 'MMMM D, YYYY',\n\t\t\t\ttime: 'hh[:]mm[:]ss',\n\t\t\t\tmeridiem: 'a'\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Time limits.\n\t\t * @default\n\t\t */\n\t\tthis._timeLimits = {\n\t\t\tmin: null,\n\t\t\tmax: null\n\t\t};\n\n\t\t/**\n\t\t * Default time limits.\n\t\t * @default\n\t\t */\n\t\tthis._defaultLimits = {\n\t\t\tmin: null,\n\t\t\tmax: null\n\t\t};\n\n\t\t/**\n\t\t * Start time.\n\t\t * @type {moment}\n\t\t * @default\n\t\t */\n\t\tthis._startTime = null;\n\n\t\t/**\n\t\t * Time is forced pause.\n\t\t * @type {boolean}\n\t\t * @default\n\t\t */\n\t\tthis._forcedPause = false;\n\n\t\t/**\n\t\t * Display UTC variable.\n\t\t * @type {boolean}\n\t\t * @default\n\t\t */\n\t\tthis._isUTC = true;\n\n\t\t/**\n\t\t * ERT manager.\n\t\t * @type {ERTManager}\n\t\t */\n\t\tthis._ertMgr = null;\n\n\t\t/**\n\t\t * Time rate.\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._rate = 0;\n\n\t\t/**\n\t\t * Default time rate.\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._defaultRate = 1.0;\n\n\t\t/**\n\t\t * Stores the UTC timezone string.\n\t\t * @type {string}\n\t\t * @default\n\t\t */\n\t\tthis._utcTimezone = 'Etc/UTC';\n\n\t\t/**\n\t\t * Stores the local timezone string.\n\t\t * @type {string}\n\t\t * @default\n\t\t */\n\t\tthis._localTimezone = moment.tz.guess();\n\n\t\t/**\n\t\t * Stores previous time rate.\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._previousTimeRate = this.pioneer.getTimeRate();\n\n\t\t/**\n\t\t * Stores current timezone string.\n\t\t * @type {string}\n\t\t * @default\n\t\t */\n\t\tthis._timezone = this._utcTimezone;\n\n\t\t/**\n\t\t * Array of possible event names.\n\t\t * @type {string[]}\n\t\t * @default\n\t\t */\n\t\tthis._eventNames.push('update', 'change', 'timezone', 'ratechange', 'forcedpause', 'forcedpauseresume', 'getnow');\n\t\tthis._initCallbacks();\n\n\t\t// Set the time to 'now'\n\t\tthis.setToNow();\n\n\t\t// Add Pioneer callback every frame\n\t\tthis.pioneer.addCallback(() => {\n\t\t\tconst time = this.pioneer.getTime();\n\t\t\tconst rate = this.pioneer.getTimeRate();\n\t\t\tthis._time = moment.tz(Pioneer.TimeUtils.etToUnix(time) * 1000, this._timezone);\n\t\t\tlet nextTime = moment.tz(Pioneer.TimeUtils.etToUnix(time + rate / this.pioneer.getFPS()) * 1000, this._timezone);\n\t\t\tif (isNaN(nextTime)) {\n\t\t\t\tnextTime = this._time;\n\t\t\t}\n\t\t\t// Check for min/max boundaries\n\t\t\t// Use millisecond comparison instead of isBefore isAfter due to rounding to second\n\t\t\tif (this._timeLimits.max && nextTime.valueOf() > this._timeLimits.max.valueOf()) {\n\t\t\t\tconsole.warn('[Time Manager]: Clock has reached maximum limit.');\n\t\t\t\tthis._onLimitReach('max');\n\t\t\t}\n\t\t\telse if (this._timeLimits.min && nextTime.valueOf() < this._timeLimits.min.valueOf()) {\n\t\t\t\tconsole.warn('[Time Manager]: Clock has reached minimum limit.');\n\t\t\t\tthis._onLimitReach('min');\n\t\t\t}\n\t\t\telse if ((this._timeLimits.max && nextTime.valueOf() < this._timeLimits.max.valueOf()) && (this._timeLimits.min && nextTime.valueOf() > this._timeLimits.min.valueOf())) {\n\t\t\t\t// Resume time from previous limit reached\n\t\t\t\tif (this._forcedPause) {\n\t\t\t\t\tthis._forcedPause = false;\n\t\t\t\t\tif (this.getTimeRate() === 0) {\n\t\t\t\t\t\tthis.play();\n\n\t\t\t\t\t\t// Callbacks\n\t\t\t\t\t\tthis.triggerCallbacks('forcedpauseresume', [this._time]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Callbacks\n\t\t\tthis.triggerCallbacks('update', [this._time]);\n\t\t}, true);\n\t}\n\n\t/**\n\t * Limit reach handler.\n\t * @param {string} limit - 'min' or 'max'\n\t */\n\t_onLimitReach(limit) {\n\t\tif (this.getTimeRate() !== 0) {\n\t\t\tthis._forcedPause = true;\n\t\t\tthis.pause();\n\t\t\tthis._previousTimeRate = 0;\n\n\t\t\t// Callbacks\n\t\t\tthis.triggerCallbacks('forcedpause', [this._time, limit]);\n\t\t}\n\t\tthis.setTime(this._timeLimits[limit]);\n\t}\n\n\t/**\n\t * Set ERT manager.\n\t * @param {ERTManager} ertMgr\n\t */\n\tsetERTManager(ertMgr) {\n\t\tthis._ertMgr = ertMgr;\n\t}\n\n\t/**\n\t * Check if time is now.\n\t * @returns {boolean}\n\t */\n\tisNow() {\n\t\treturn this._rate === 1 && Math.abs(this._time.valueOf() - this.getNow().valueOf()) < 1000;\n\t}\n\n\t/**\n\t * Gets current real time as moment object.\n\t * @returns {moment}\n\t */\n\tgetNow() {\n\t\tlet time = moment().tz(this._timezone);\n\t\tfor (let i = this._callbacks.getnow.length - 1; i >= 0; i--) {\n\t\t\tconst callback = this._callbacks.getnow[i];\n\t\t\ttime = callback(time);\n\t\t}\n\t\treturn time;\n\t}\n\n\t/**\n\t * Sets the engine time to real time.\n\t */\n\tsetToNow() {\n\t\tthis.setTime(this.getNow());\n\t}\n\n\t/**\n\t * Sets start time.\n\t * @param {moment} time\n\t */\n\tsetStartTime(time) {\n\t\tthis._startTime = time;\n\t}\n\n\t/**\n\t * Sets the engine time start time.\n\t */\n\tsetToStart() {\n\t\tif (this._startTime !== null) {\n\t\t\tthis.setTime(this._startTime);\n\t\t}\n\t}\n\n\t/**\n\t * Gets engine time as moment object.\n\t * @returns {moment}\n\t */\n\tgetTime() {\n\t\treturn this._time;\n\t}\n\n\t/**\n\t * Sets current engine time.\n\t * @param {moment|number|string} time - Value that can be parsed by moment\n\t */\n\tsetTime(time) {\n\t\ttime = this.parseTime(time);\n\t\tconst etTime = this.momentToET(time);\n\t\tthis.pioneer.setTime(etTime);\n\t\tthis._time = moment.tz(Pioneer.TimeUtils.etToUnix(this.pioneer.getTime()) * 1000, this._timezone);\n\n\t\t// Callbacks\n\t\tthis.triggerCallbacks('change', [this._time]);\n\t}\n\n\t/**\n\t * Parses time and returns a moment object.\n\t * @param {moment|number|string} time - Any input time]\n\t * @param {string} dateFormat\n\t * @returns {moment}\n\t */\n\tparseTime(time, dateFormat = 'url') {\n\t\tlet isUTC = this._isUTC;\n\t\tlet format = moment.ISO_8601; // ISO string with no fractional seconds\n\n\t\tif (typeof time === 'string' && time !== '') { // Check for UTC string\n\t\t\tconst reg = /^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d(?:|:[0-5]\\d)(?:\\.\\d{1,6})?(?:|Z|[+-][01]\\d:[0-5]\\d)$/;\n\t\t\tisUTC = time.match(reg) !== null;\n\t\t\tconst isUTCFormat = isUTC ? 'utc' : 'local';\n\t\t\tconst urlFormat = this.getDateFormat(dateFormat, isUTCFormat);\n\t\t\tif (urlFormat) {\n\t\t\t\tformat = urlFormat;\n\t\t\t}\n\t\t}\n\t\telse if (typeof time === 'number') {\n\t\t\tisUTC = true;\n\t\t}\n\n\t\treturn isUTC\n\t\t\t? moment.utc(time) // This only means UTC format, time can be in any time zone, not just GMT\n\t\t\t: moment.tz(time, format, true, this._localTimezone);\n\t}\n\n\t/**\n\t * Convert ET time to moment.\n\t * @param {number} time\n\t * @returns {moment}\n\t */\n\tetToMoment(time) {\n\t\treturn moment.tz(Pioneer.TimeUtils.etToUnix(time) * 1000, 'Etc/UTC');\n\t}\n\n\t/**\n\t * Convert moment to ET time in second.\n\t * @param {moment} time\n\t * @returns {number}\n\t */\n\tmomentToET(time) {\n\t\tconst unix = time.valueOf() / 1000;\n\t\tconst etTime = Pioneer.TimeUtils.unixToEt(unix);\n\t\treturn Math.round(etTime * 1000) / 1000;\n\t}\n\n\t/**\n\t * Gets current timezone.\n\t * @returns {moment.MomentTimezone}\n\t */\n\tgetTimezone() {\n\t\treturn this._timezone;\n\t}\n\n\t/**\n\t * Gets UTC timezone.\n\t * @returns {moment.MomentTimezone}\n\t */\n\tgetUTCTimezone() {\n\t\treturn this._utcTimezone;\n\t}\n\n\t/**\n\t * Gets local timezone.\n\t * @returns {moment.MomentTimezone}\n\t */\n\tgetLocalTimezone() {\n\t\treturn this._localTimezone;\n\t}\n\n\t/**\n\t * Checks if time is displayed in UTC.\n\t * @returns {boolean}\n\t */\n\tisUTC() {\n\t\treturn this._isUTC;\n\t}\n\n\t/**\n\t * Sets UTC mode on/off for time display.\n\t * Updates timezone as UTC or local.\n\t * @param {boolean} val - on/off\n\t */\n\tsetDisplayUTC(val) {\n\t\t// TODO: Should support different timezone\n\t\tthis._isUTC = val;\n\t\tthis._timezone = this._isUTC ? this._utcTimezone : this._localTimezone;\n\n\t\t// Callbacks\n\t\tthis.triggerCallbacks('timezone', [val]);\n\t}\n\n\t/**\n\t * Gets all date formats.\n\t * @returns {object}\n\t */\n\tgetDateFormats() {\n\t\treturn this._dateFormats;\n\t}\n\n\t/**\n\t * Replace all date formats.\n\t * @param {object} formats\n\t */\n\tsetDateFormats(formats) {\n\t\tfor (const [key, value] of Object.entries(formats)) {\n\t\t\tif (this._dateFormats[key] !== undefined) {\n\t\t\t\tObject.assign(this._dateFormats[key], value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._dateFormats[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets a specific date format.\n\t * @param {string} format - Format\n\t * @param {string} utcLocal - Either utc or local\n\t * @returns {string}\n\t */\n\tgetDateFormat(format, utcLocal) {\n\t\tif (!utcLocal) {\n\t\t\tutcLocal = this._isUTC ? 'utc' : 'local';\n\t\t}\n\n\t\treturn this._dateFormats[utcLocal][format];\n\t}\n\n\t/**\n\t * Add/update a specific date format.\n\t * @param {string} name - Format name\n\t * @param {object} format\n\t */\n\tsetDateFormat(name, format) {\n\t\tthis._dateFormats[name] = format;\n\t}\n\n\t/**\n\t * Get time limits\n\t * @returns {object}\n\t */\n\tgetLimits() {\n\t\treturn this._timeLimits;\n\t}\n\n\t/**\n\t * Set time limits.\n\t * @param {object} limits\n\t */\n\tsetLimits(limits) {\n\t\tthis._timeLimits.min = limits.min.clone();\n\t\tthis._timeLimits.max = limits.max.clone();\n\t}\n\n\t/**\n\t * Get default time limits.\n\t * @returns {object}\n\t */\n\tgetDefaultLimits() {\n\t\treturn this._defaultLimits;\n\t}\n\n\t/**\n\t * Set default time limits.\n\t * @param {object} limits - min and max moments\n\t */\n\tsetDefaultLimits(limits) {\n\t\tthis._defaultLimits.min = limits.min.clone();\n\t\tthis._defaultLimits.max = limits.max.clone();\n\t}\n\n\t/**\n\t * Reset time limits to default.\n\t */\n\tresetLimits() {\n\t\tthis._timeLimits.min = this._defaultLimits.min.clone();\n\t\tthis._timeLimits.max = this._defaultLimits.max.clone();\n\t}\n\n\t/**\n\t * Set the lower limit for time.\n\t * @param {*} time - Any value that can be parsed by moment\n\t */\n\tsetMin(time) {\n\t\tthis._timeLimits.min = moment.tz(time, this._timezone);\n\t}\n\n\t/**\n\t * Reset the lower time limit to default.\n\t */\n\tresetMin() {\n\t\tthis._timeLimits.min = this._defaultLimits.min.clone();\n\t}\n\n\t/**\n\t * Set the upper limit for time.\n\t * @param {*} time - Any value that can be parsed by moment\n\t */\n\tsetMax(time) {\n\t\tthis._timeLimits.max = moment.tz(time, this._timezone);\n\t}\n\n\t/**\n\t * Reset the upper time limit to default.\n\t */\n\tresetMax() {\n\t\tthis._timeLimits.max = this._defaultLimits.max.clone();\n\t}\n\n\t/**\n\t * Gets a url formatted string in UTC.\n\t * @param {moment} [time] - Moment time\n\t * @returns {string}\n\t */\n\tgetTimeUrl(time) {\n\t\tlet utcTime;\n\t\tif (!time) {\n\t\t\tutcTime = moment.utc(this._time);\n\t\t}\n\t\telse {\n\t\t\tutcTime = moment.utc(moment.tz(time, this._timezone));\n\t\t}\n\t\t// Returns UTC formatted string\n\t\treturn utcTime.utc().format(this._dateFormats.utc.url);\n\t}\n\n\t/**\n\t * Get the default time rate.\n\t * @returns {number}\n\t */\n\tgetDefaultTimeRate() {\n\t\treturn this._defaultRate;\n\t}\n\n\t/**\n\t * Set the default time rate.\n\t * @param {number} rate\n\t */\n\tsetDefaultTimeRate(rate) {\n\t\tthis._defaultRate = rate;\n\t}\n\n\t/**\n\t * Reset time rate to default.\n\t */\n\tresetTimeRate() {\n\t\tthis.setTimeRate(this._defaultRate);\n\t}\n\n\t/**\n\t * Gets current time rate.\n\t * @returns {number}\n\t */\n\tgetTimeRate() {\n\t\treturn this.pioneer.getTimeRate();\n\t}\n\n\t/**\n\t * Sets current time rate.\n\t * @param {number} rate\n\t */\n\tsetTimeRate(rate) {\n\t\tthis._rate = rate;\n\t\tthis.pioneer.setTimeRate(rate);\n\n\t\t// Callbacks\n\t\tthis.triggerCallbacks('ratechange', [this._rate]);\n\t}\n\n\t/**\n\t * Plays previous time rate or 1 sec/sec if previous time rate is 0.\n\t */\n\tplay() {\n\t\tconst rate = this._previousTimeRate === 0 ? this._defaultRate : this._previousTimeRate;\n\t\tthis.setTimeRate(rate);\n\t}\n\n\t/**\n\t * Pauses time.\n\t */\n\tpause() {\n\t\tthis._previousTimeRate = this.getTimeRate();\n\t\tthis.setTimeRate(0);\n\t}\n\n\t/**\n\t * Gets time between two moments.\n\t * @param {moment} a - First moment time\n\t * @param {moment} b - Second moment time\n\t * @returns {moment}\n\t */\n\tgetMidTime(a, b) {\n\t\tconst midTime = (a.unix() + b.unix()) / 2;\n\t\tconst m = moment(midTime, 'X');\n\t\treturn m;\n\t}\n\n\t/**\n\t * Returns a list of event names.\n\t * @returns {Array<string>}\n\t */\n\tgetEventNames() {\n\t\treturn this._eventNames;\n\t}\n\n\t/**\n\t * Checks if time is within app time limits.\n\t * @param {moment} time\n\t * @returns {number} - negative for before, positive for after and zero for in bounds\n\t */\n\tisWithinLimits(time) {\n\t\tif (this._timeLimits.min && time.isBefore(this._timeLimits.min)) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this._timeLimits.max && time.isAfter(this._timeLimits.max)) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Gets time limits.\n\t * @returns {object}\n\t */\n\tget timeLimits() {\n\t\treturn this._timeLimits;\n\t}\n\n\t/**\n\t * Gets the forced pause status.\n\t * @returns {boolean}\n\t */\n\tget forcedPause() {\n\t\treturn this._forcedPause;\n\t}\n\n\t/**\n\t * Gets the previous time rate.\n\t * @returns {number}\n\t */\n\tget previousTimeRate() {\n\t\treturn this._previousTimeRate;\n\t}\n}\n","import {\n\tBaseApp,\n\tBaseManager\n} from '../internal';\n\n/**\n * Every app has a _sceneInfo object and it is passed in to populate the scene.\n * @typedef TitleOptions\n * @property {string} prefix\n * @property {string} suffix\n * @property {Function} parseFn\n */\n\n/**\n * Title Manager class.\n *\n * When initializing this class, pass in the prefex, suffix, and parse function into the options object. Eg:\n *\n * {\n * \tprefix: 'Eyes on <>',\n * \tsuffix: 'NASA/JPL',\n * \tparseFn: (currentRoute) => currentRoute.url\n * }\n * @extends BaseManager\n */\nexport class TitleManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {TitleOptions} options\n\t */\n\tconstructor(app, options) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * @type {TitleOptions}\n\t\t * @private\n\t\t */\n\t\tthis._options = options;\n\n\t\t/**\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._currentTitle = null;\n\n\t\t/**\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._fullTitle = null;\n\n\t\t/**\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._parseFn = this._options.parseFn ?? null;\n\t}\n\n\t/**\n\t * Builds the title strings and sets it.\n\t * @param {object} currentRoute\n\t */\n\tupdateTitle(currentRoute) {\n\t\tconst { prefix, suffix } = this._options || {};\n\n\t\tthis._currentTitle = this._parseRoute(currentRoute);\n\t\tthis._fullTitle = `${prefix} - ${this._currentTitle} - ${suffix}`;\n\n\t\t// In the future, we may need a customizable title format.\n\t\tdocument.title = this._fullTitle;\n\t}\n\n\t/**\n\t * Parses the route string. Applies parseFn if it's set\n\t * @param {string} routeStr\n\t * @returns {string}\n\t */\n\t_parseRoute(routeStr) {\n\t\tif (this._parseFn) {\n\t\t\treturn this._parseFn(routeStr);\n\t\t}\n\n\t\treturn 'Home';\n\t}\n\n\t/**\n\t * Set the parse function.\n\t * @param {Function} parseFn\n\t */\n\tsetParseFunction(parseFn) {\n\t\tif (typeof parseFn === 'function') {\n\t\t\tthis._parseFn = parseFn;\n\t\t}\n\t}\n\n\t/**\n\t * Get the current title.\n\t * @returns {string}\n\t */\n\tget currentTitle() {\n\t\treturn this._currentTitle;\n\t}\n\n\t/**\n\t * Get the current title.\n\t * @returns {string}\n\t */\n\tget fullTitle() {\n\t\treturn this._fullTitle;\n\t}\n}\n","import * as Pioneer from 'pioneer';\nimport { Entity } from 'pioneer-scripts';\n// Import locals\nimport {\n\tBaseApp,\n\tBaseManager,\n\tSceneManager,\n\tLayerManager\n} from '../internal';\n\n/**\n * The Trail Manager class.\n */\nexport class TrailManager extends BaseManager {\n\t/**\n\t * Constructor.\n\t * @param {BaseApp} app\n\t * @param {Pioneer.Scene} scene\n\t */\n\tconstructor(app, scene) {\n\t\tsuper(app);\n\n\t\t/**\n\t\t * The scene that the trails are in.\n\t\t * @type {Pioneer.Scene}\n\t\t */\n\t\tthis._scene = scene;\n\n\t\t/**\n\t\t * List of entities that has trail.\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._ids = [];\n\n\t\t/**\n\t\t * List of entities that hide trail.\n\t\t * @type {Array}\n\t\t * @private\n\t\t */\n\t\tthis._hiddenIds = [];\n\n\t\t/**\n\t\t * Trail opacities.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._opacity = {\n\t\t\tprimary: 0.75,\n\t\t\tsecondary: 0.35,\n\t\t\thover: 1.0\n\t\t};\n\n\t\t/**\n\t\t * Trail width boundaries.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._width = {\n\t\t\tdefault: [0, 2],\n\t\t\thover: [2, 4]\n\t\t};\n\n\t\tthis._orbitLinesOpts = {\n\t\t\tlineWidth: {\n\t\t\t\tdefault: 1.2,\n\t\t\t\thover: 2\n\t\t\t},\n\t\t\tglowWidth: {\n\t\t\t\tdefault: 0,\n\t\t\t\thover: 0\n\t\t\t},\n\t\t\talphaFade: [22, 8]\n\t\t};\n\n\t\t/**\n\t\t * Array of entity names that need orbit lines.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._orbitLineEntityNames = Entity.getEntityNamesInGroup('planets').add('moon');\n\n\t\t/**\n\t\t * Trail colors.\n\t\t * @type {object}\n\t\t * @private\n\t\t * @default\n\t\t */\n\t\tthis._colors = {\n\t\t\tdefault: new Pioneer.Color(1, 1, 1, this._opacity.secondary),\n\t\t\tmercury: new Pioneer.Color(151 / 255, 104 / 255, 172 / 255, this._opacity.primary),\n\t\t\tvenus: new Pioneer.Color(176 / 255, 121 / 255, 25 / 255, this._opacity.primary),\n\t\t\tearth: new Pioneer.Color(0 / 255, 153 / 255, 204 / 255, this._opacity.primary),\n\t\t\tmars: new Pioneer.Color(154 / 255, 78 / 255, 25 / 255, this._opacity.primary),\n\t\t\tjupiter: new Pioneer.Color(218 / 255, 139 / 255, 114 / 255, this._opacity.primary),\n\t\t\tsaturn: new Pioneer.Color(213 / 255, 193 / 255, 135 / 255, this._opacity.primary),\n\t\t\turanus: new Pioneer.Color(104 / 255, 204 / 255, 218 / 255, this._opacity.primary),\n\t\t\tneptune: new Pioneer.Color(112 / 255, 140 / 255, 227 / 255, this._opacity.primary)\n\t\t};\n\n\t\t// Binds\n\t\tthis.bindFunctions([\n\t\t\t'onHoverChange',\n\t\t\t'setUpTrail',\n\t\t\t'toggleTrails',\n\t\t\t'toggleOrbits'\n\t\t]);\n\t}\n\n\t/**\n\t * Sets the scene.\n\t * @param {Pioneer.Scene} scene\n\t */\n\tsetScene(scene) {\n\t\tthis._scene = scene;\n\t}\n\n\t/**\n\t * Create a trail for entity.\n\t * @param {string} id\n\t * @returns {Pioneer.TrailComponent}\n\t */\n\tcreate(id) {\n\t\tconst trail = this._scene.get(id, 'trail');\n\t\tif (trail) {\n\t\t\tconsole.warn('Trail already exists for', id);\n\t\t\treturn;\n\t\t}\n\n\t\tconst entity = this._scene.get(id);\n\t\tconst result = entity.addComponent('trail');\n\t\tthis._ids.push(id);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Set start time of the trails.\n\t * @param {string | string[]} ids - Id or array of ids of the entities.\n\t * @param {number} start - Start time.\n\t */\n\tsetStartTime(ids, start) {\n\t\tif (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst trail = this._scene.get(ids[i], 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\ttrail.setStartTime(start);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set end time of the trails.\n\t * @param {string | string[]} ids - Id or array of ids of the entities.\n\t * @param {number} end - End time.\n\t */\n\tsetEndTime(ids, end) {\n\t\tif (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst trail = this._scene.get(ids[i], 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\ttrail.setEndTime(end);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update trail when entity has or loses hover.\n\t * @param {string} id\n\t * @param {boolean} isHovered\n\t * @param {boolean} setEndOpacity\n\t */\n\tonHoverChange(id, isHovered, setEndOpacity = false) {\n\t\tconst entity = this._scene.get(id);\n\t\tconst trail = this._scene.get(id, 'trail');\n\t\tconst orbitLine = entity?.get('orbitLine');\n\n\t\tif (!entity || (!trail && !orbitLine)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst color = new Pioneer.Color();\n\t\tconst colorComponent = trail ?? orbitLine;\n\t\tconst optsKey = isHovered ? 'hover' : 'default';\n\n\t\t// Set properties for orbit line or trail.\n\t\tif (orbitLine) {\n\t\t\t// Set the line and glow width.\n\t\t\tconst { lineWidth, glowWidth } = this._orbitLinesOpts;\n\t\t\torbitLine.setLineWidth(lineWidth[optsKey]);\n\t\t\torbitLine.setGlowWidth(glowWidth[optsKey]);\n\t\t}\n\t\telse if (trail) {\n\t\t\t// Set the widths.\n\t\t\tconst width = entity.trailHover?.width?.[optsKey] ?? this._width[optsKey];\n\t\t\ttrail.setWidths(...width);\n\t\t}\n\n\t\t// Set alpha.\n\t\tconst { primary, secondary, hover } = this._opacity;\n\t\tconst alpha = isHovered ? hover : (this._colors[id] ? primary : secondary);\n\n\t\tcolor.copy(colorComponent.getColor());\n\t\tcolor.a = alpha;\n\t\tcolorComponent.setColor(color);\n\n\t\tsetEndOpacity && trail.setAlphaFade(color.a);\n\t}\n\n\t/**\n\t * Set alpha fade of the trails.\n\t * @param {string | string[]} ids - Id or array of ids of the entities.\n\t * @param {number} fade - Fade amount of the trails between 0 and 1.\n\t */\n\tsetFade(ids, fade) {\n\t\tif (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst trail = this._scene.get(ids[i], 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\ttrail.setAlphaFade(fade);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set the trails color.\n\t * @param {string | string[]} ids - Id or array of ids of the entities.\n\t * @param {number} widthMin - Min width of the trails.\n\t * @param {number} widthMax - Max width of the trails.\n\t */\n\tsetWidths(ids, widthMin, widthMax) {\n\t\tif (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst trail = this._scene.get(ids[i], 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\ttrail.setWidths(widthMin, widthMax);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set the widths of multiple trail ids\n\t * @param {Array<string>} ids\n\t * @param {number} minWidth\n\t * @param {number} maxWidth\n\t */\n\tsetMultipleWidths(ids, minWidth, maxWidth) {\n\t\tfor (const id of ids) {\n\t\t\tconst trail = this._scene.get(id, 'trail');\n\t\t\tif (!trail) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttrail.setWidths(minWidth, maxWidth);\n\t\t}\n\t}\n\n\t/**\n\t * Get the trails color.\n\t * @param {string} id - Id of the entity.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor(id) {\n\t\tconst trail = this._scene.get(id, 'trail');\n\n\t\tif (trail) {\n\t\t\treturn trail.getColor();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Set the trails color.\n\t * @param {string | string[]} ids - id or array of ids of the entities\n\t * @param {Pioneer.Color} [color=null] - color of the trails\n\t */\n\tsetColor(ids, color = null) {\n\t\tif (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst id = ids[i];\n\t\t\tconst trail = this._scene.get(id, 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\tconst trailColor = color instanceof Pioneer.Color\n\t\t\t\t\t? color\n\t\t\t\t\t: this._colors[id] || this._colors.default;\n\t\t\t\ttrail.setColor(trailColor);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Callback to execute custom code for trails after entity is created.\n\t * @param {Pioneer.Entity} entity\n\t * @private\n\t */\n\tsetUpTrail(entity) {\n\t\t// Check status of trails with the layer manager\n\t\t// Whatever custom code for trails we need to call after entity is created.\n\t\tconst layerManager = /** @type {LayerManager} */ (this._app.getManager('layer'));\n\t\tconst sceneManager = /** @type {SceneManager} */ (this._app.getManager('scene'));\n\t\tconst targetId = entity.getName();\n\t\tconst trailsLayer = layerManager.getLayer('trails');\n\n\t\t// Should the entity have orbit lines\n\t\tconst createOrbitLine = this._orbitLineEntityNames.has(targetId);\n\n\t\tif (createOrbitLine) {\n\t\t\tthis.createOrbitLine(entity);\n\t\t}\n\n\t\t// Reset visibility of trails\n\t\tif ((trailsLayer !== null && !trailsLayer.visible) || createOrbitLine) {\n\t\t\tsceneManager.setVisibility(false, targetId);\n\t\t}\n\t}\n\n\t/**\n\t * Show trails.\n\t * @param {string | string[] | null} [ids=null] - Id or array of ids of the entities. If none, show previously hidden or all trails.\n\t */\n\tshow(ids = null) {\n\t\tif (ids === null) {\n\t\t\tids = this._hiddenIds.length > 0 ? this._hiddenIds : this._ids;\n\t\t}\n\t\telse if (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst id = ids[i];\n\t\t\tconst trail = this._scene.get(id, 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\t// Remove from list of hidden trails\n\t\t\t\tconst hiddenIndex = this._hiddenIds.indexOf(id);\n\t\t\t\tif (hiddenIndex !== -1) {\n\t\t\t\t\tthis._hiddenIds.splice(hiddenIndex, 1);\n\t\t\t\t}\n\t\t\t\ttrail.setEnabled(true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.warn('TrailManager.show: Trail does not exist - ', id);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Hide trails.\n\t * @param {string | string[]} [ids=null] - Id or array of ids of the entities. If none, hide all trails.\n\t */\n\thide(ids = null) {\n\t\tif (ids === null) {\n\t\t\tids = this._ids;\n\t\t}\n\t\telse if (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\t\tthis._hiddenIds = ids;\n\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst trail = this._scene.get(ids[i], 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\ttrail.setEnabled(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggles all the trails in the scene.\n\t * @param {boolean} active\n\t * @param {object} options\n\t * @param {Pioneer.Scene} [options.scene = undefined]\n\t */\n\ttoggleTrails(active, { scene = undefined } = {}) {\n\t\tif (scene === undefined) {\n\t\t\tscene = this._scene;\n\t\t}\n\t\tfor (let i = 0; i < scene.getNumEntities(); i++) {\n\t\t\tconst entity = scene.getEntity(i);\n\t\t\tconst trail = entity.get('trail');\n\t\t\tif (trail !== null) {\n\t\t\t\tconst entityInfo = this._app.getManager('content').getEntityInfo(entity.getName());\n\t\t\t\tif (entityInfo) {\n\t\t\t\t\tconst category = entityInfo.category;\n\t\t\t\t\tconst subcategory = entityInfo.subcategory;\n\n\t\t\t\t\t// Check if layer for this category is disabled\n\t\t\t\t\t// We dont want to turn on trails of entities disabled\n\t\t\t\t\t// An exception should be made for forceVisibled entities.\n\t\t\t\t\tconst layer = this._app.getManager('layer').getLayerFromCategory(subcategory) || this._app.getManager('layer').getLayerFromCategory(category);\n\t\t\t\t\tconst { forceVisible = false } = this.app.getManager('scene').getEntityStatus(entity.getName()) || {};\n\n\t\t\t\t\tif (layer !== null && !layer.visible && !forceVisible) {\n\t\t\t\t\t\ttrail.setEnabled(false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttrail.setEnabled(active);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttrail.setEnabled(active);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates orbit lines\n\t * @param {Pioneer.Entity} entity\n\t */\n\tcreateOrbitLine(entity) {\n\t\t// First check if we have a trail and remove it.\n\t\tconst trail = entity.get('trail');\n\t\ttrail && entity.removeComponent(trail);\n\n\t\t// Add orbit line component.\n\t\tconst orbitLine = entity.addComponent('orbitLine');\n\n\t\t// Set color, fade and line properties.\n\t\tconst { lineWidth, glowWidth, alphaFade } = this._orbitLinesOpts;\n\t\tconst color = this._colors[entity.getName()] ?? this._colors.default;\n\n\t\torbitLine.setColor(color);\n\t\torbitLine.setPixelSpaceRadiiAlphaFade(...alphaFade);\n\t\torbitLine.setLineWidth(lineWidth.default);\n\t\torbitLine.setGlowWidth(glowWidth.default);\n\n\t\t// Set enbaled depending on whether 'orbits' is checked in the layers manager\n\t\tconst enabled = this._app.getManager('layer').getLayer('orbits').visible;\n\t\torbitLine.setEnabled(enabled);\n\t}\n\n\t/**\n\t * Callback for orbit line toggle\n\t * @param {boolean} active\n\t */\n\ttoggleOrbits(active) {\n\t\tthis._orbitLineEntityNames.forEach(entityName => {\n\t\t\tconst orbitLine = this._scene.get(entityName, 'orbitLine');\n\t\t\torbitLine?.setEnabled(active);\n\t\t});\n\t}\n\n\t/**\n\t * Get all entity ids with trail.\n\t * @returns {string[]}\n\t */\n\tget ids() {\n\t\treturn this._ids;\n\t}\n\n\t/**\n\t * Set entity ids with trail.\n\t * @param {string[]} ids\n\t */\n\tset ids(ids) {\n\t\tif (!Array.isArray(ids)) {\n\t\t\tids = [ids];\n\t\t}\n\t\tfor (let i = 0; i < ids.length; i++) {\n\t\t\tconst id = ids[i];\n\t\t\tif (this._ids.includes(id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst trail = this._scene.get(id, 'trail');\n\n\t\t\tif (trail) {\n\t\t\t\tthis._ids.push(id);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {\n\tBaseComponent,\n\tTimeManager,\n\tSelectionManager,\n\tLabelManager,\n\tTitleManager,\n\tTrailManager,\n\tCameraFollowManager,\n\tBreadcrumb,\n\tClock,\n\tClockShortcut,\n\tStory,\n\tLayerPanel,\n\tSearch,\n\tSettings,\n\tLoadIcon,\n\tOverlay,\n\tCarousel,\n\tTutorialOverlay,\n\tCarouselPanel,\n\tShareModal,\n\tTimeController,\n\tKioskBase,\n\tToast\n} from './internal';\n\n/**\n * The class that holds the mappings from component names to their corresponding constructors.\n * @type {Map<string, typeof BaseComponent>}\n */\nconst Types = new Map();\n\nTypes.set('TimeManager', TimeManager);\nTypes.set('SelectionManager', SelectionManager);\nTypes.set('LabelManager', LabelManager);\nTypes.set('TitleManager', TitleManager);\nTypes.set('TrailManager', TrailManager);\nTypes.set('CameraFollowManager', CameraFollowManager);\n\nTypes.set('LoadIcon', LoadIcon);\nTypes.set('Overlay', Overlay);\nTypes.set('Settings', Settings);\nTypes.set('Breadcrumb', Breadcrumb);\nTypes.set('Clock', Clock);\nTypes.set('ClockShortcut', ClockShortcut);\nTypes.set('Story', Story);\nTypes.set('LayerPanel', LayerPanel);\nTypes.set('Search', Search);\nTypes.set('Carousel', Carousel);\nTypes.set('TutorialOverlay', TutorialOverlay);\n\nTypes.set('CarouselPanel', CarouselPanel);\nTypes.set('ShareModal', ShareModal);\nTypes.set('TimeController', TimeController);\nTypes.set('KioskBase', KioskBase);\nTypes.set('Toast', Toast);\n\nexport { Types };\n","/**\n * The animation utils class.\n */\nexport class AnimationUtils {\n}\n\n/**\n * Uses the Web Animations API to create, pause and return an animation\n * @param {HTMLElement} element\n * @param {object|Array} keyframes\n * @param {object|number} timings\n * @returns {Animation}\n */\nAnimationUtils.createAnimation = (element, keyframes, timings) => {\n\tconst kEffect = new KeyframeEffect(element, keyframes, timings);\n\treturn new Animation(kEffect, element.ownerDocument.timeline);\n};\n\nAnimationUtils.directionalFade = (element, { direction = 'up', fade = 'in', yOffset = 0, xOffset = 0, timings = AnimationUtils.defaultTimings }) => {\n\t// Storing values\n\tconst v = {\n\t\tx: { ori: 0, dest: 0 },\n\t\ty: { ori: 0, dest: 0 },\n\t\topacity: { ori: 1.0, dest: 0.0 }\n\t};\n\n\t// Fade in/out horizontal\n\t// x0 > x100 / x100 > x0\n\t// Fade in/out vertical\n\t// y0 > y100 / y100 > y0\n\tif (direction === 'up' || direction === 'down') {\n\t\tv.y.ori = (fade === 'in') ? 100 : 0;\n\t\tv.y.dest = 100 - v.y.ori;\n\t\tif (direction === 'up') {\n\t\t\tv.y.ori *= -1;\n\t\t\tv.y.dest *= -1;\n\t\t}\n\t}\n\telse {\n\t\tv.x.ori = (fade === 'in') ? 100 : 0;\n\t\tv.x.dest = 100 - v.x.ori;\n\t\tif (direction === 'left') {\n\t\t\tv.x.ori *= -1;\n\t\t\tv.x.dest *= -1;\n\t\t}\n\t}\n\n\t// If fade in switch opacity values\n\tif (fade === 'in') {\n\t\tv.opacity.ori = 0.0;\n\t\tv.opacity.dest = 1.0;\n\t}\n\n\t// Apply offsets\n\tv.x.ori += xOffset;\n\tv.x.dest += xOffset;\n\tv.y.ori += yOffset;\n\tv.y.dest += yOffset;\n\n\tconst keyframes = [\n\t\t{ transform: 'translate(' + v.x.ori + '%, ' + v.y.ori + '%)', opacity: v.opacity.ori },\n\t\t{ transform: 'translate(' + v.x.dest + '%, ' + v.y.dest + '%)', opacity: v.opacity.dest }\n\t];\n\n\treturn AnimationUtils.createAnimation(element, keyframes, timings);\n};\n\nAnimationUtils.defaultTimings = {\n\tduration: 1000,\n\titeration: 1,\n\tfill: 'forwards',\n\teasing: 'ease'\n};\n","import merge from 'deepmerge';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport OverlayScrollbars from 'overlayscrollbars';\nimport 'overlayscrollbars/css/OverlayScrollbars.css';\nimport { Tween, update as tweenUpdate } from '@tweenjs/tween.js';\n\n/**\n * The utils class.\n */\nexport class AppUtils {\n\tstatic conversionTable = {\n\t\tkmToMi: 0.621371, // 1 km in miles\n\t\tkmToFt: 3280.84, // 1 km in feet\n\t\tmiToFt: 5280, // 1 mile in feet\n\t\tkmToM: 1000, // 1 km in meters\n\t\tauToKm: 149597871, // 1 astromonical unit in km\n\t\tldToKm: 384398 // 1 lunar distance in km\n\t};\n\n\tstatic constants = {\n\t\tspeedOfLight: 299792.458, // km/sec,\n\t\tminDate: -8e+15, // per https://262.ecma-international.org/5.1/#sec-15.9.1.1\n\t\tmaxDate: 8e+15 // per https://262.ecma-international.org/5.1/#sec-15.9.1.1\n\t};\n\n\t/**\n\t * Check if an object is empty or not.\n\t * @param {object} obj\n\t * @returns {boolean}\n\t */\n\tstatic isEmptyObject(obj) {\n\t\treturn obj.constructor === Object && Object.keys(obj).length === 0;\n\t}\n\n\t/**\n\t * Add starting part to path if path hasn't already started with it.\n\t * @param {string} pathName\n\t * @param {string} [start='/'] - Starting slash or symbol\n\t * @returns {string}\n\t */\n\tstatic addStartToPath(pathName, start = '/') {\n\t\tif (!pathName.startsWith(start)) {\n\t\t\treturn start + pathName;\n\t\t}\n\t\treturn pathName;\n\t}\n\n\t/**\n\t * Remove duplicate symbol from path.\n\t * @param {string} pathName\n\t * @param {string} [duplicate='/']\n\t * @param {string} [replacement='/']\n\t * @returns {string}\n\t */\n\tstatic cleanPathDuplicate(pathName, duplicate = '/', replacement = '/') {\n\t\tconst re = new RegExp(`${duplicate}+`, 'g');\n\t\treturn pathName.replace(re, replacement);\n\t}\n\n\t/**\n\t * Add ending part to path if path hasn't already ended with it.\n\t * @param {string} pathName\n\t * @param {string} [end='/'] - Ending slash or extension\n\t * @returns {string}\n\t */\n\tstatic addEndToPath(pathName, end = '/') {\n\t\tif (!pathName.endsWith(end)) {\n\t\t\treturn pathName + end;\n\t\t}\n\t\treturn pathName;\n\t}\n\n\t/**\n\t * Check if an object is HTML Element.\n\t * @param {object} obj\n\t * @returns {boolean}\n\t */\n\tstatic isElement(obj) {\n\t\treturn obj instanceof Element || obj instanceof Document;\n\t}\n\n\t/**\n\t * Check if a string is HTML.\n\t * @param {string} str\n\t * @returns {boolean}\n\t */\n\tstatic isHTML(str) {\n\t\tif (typeof str !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn str.match(/<[^/>]+>/gm) !== null && str.match(/<\\/[^>]+>/gm) !== null;\n\t}\n\n\t/**\n\t * Check if a string has HTML tag inside.\n\t * @param {string} str\n\t * @returns {boolean}\n\t */\n\tstatic hasHTML(str) {\n\t\tif (typeof str !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tconst doc = new DOMParser().parseFromString(str, 'text/html');\n\t\treturn Array.from(doc.body.childNodes).some(node => node.nodeType === 1);\n\t}\n\n\t/**\n\t * Load JSON file.\n\t * @param {string} fileName\n\t * @returns {Promise<object>}\n\t * @throws {Error} Throw error if status is not 200\n\t */\n\tstatic async loadJSON(fileName) {\n\t\tfileName = AppUtils.addEndToPath(fileName, '.json');\n\t\tconst response = await fetch(fileName);\n\t\tif (response.status === 200) {\n\t\t\treturn response.json();\n\t\t}\n\t\telse {\n\t\t\t// Throw error\n\t\t\tconst err = new Error(response.status + ' (' + response.statusText + ') when trying to fetch \"' + fileName + '\"');\n\t\t\terr.name = 'NotFound';\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * Convert milliseconds to time.\n\t * @param {number} [ms=0]\n\t * @returns {{hour: number, minute: number, second: number, millisecond: number}} Converted time\n\t */\n\tstatic msToTime(ms = 0) {\n\t\tconst millisecond = ms % 1000;\n\t\tms = (ms - millisecond) / 1000;\n\t\tconst second = ms % 60;\n\t\tms = (ms - second) / 60;\n\t\tconst minute = ms % 60;\n\t\tconst hour = (ms - minute) / 60;\n\n\t\treturn {\n\t\t\thour,\n\t\t\tminute,\n\t\t\tsecond,\n\t\t\tmillisecond\n\t\t};\n\t}\n\n\t/**\n\t * Format time into hh:mm:ss for session timer\n\t * @param {number} maxSessionTime - in ms\n\t * @param {number} incomingTime - in ms\n\t * @returns {string}\n\t */\n\tstatic formatCountdownTime(maxSessionTime, incomingTime) {\n\t\t// One hour in milliseconds\n\t\tconst oneHour = 60 * 60 * 1000;\n\t\tconst time = this.msToTime(incomingTime);\n\n\t\t// Pad the front with '0' until it hits 2 digits\n\t\ttime.hour = time.hour.toString().padStart(2, '0');\n\t\ttime.minute = time.minute.toString().padStart(2, '0');\n\t\ttime.second = time.second.toString().padStart(2, '0');\n\n\t\treturn `${maxSessionTime >= oneHour ? time.hour + ':' : ''}${time.minute || '00'}:${time.second}`;\n\t}\n\n\t/**\n\t * Convert to sec\n\t * @param {number} minutes\n\t * @returns {number}\n\t */\n\tstatic minToSec(minutes) {\n\t\treturn minutes * 60;\n\t}\n\n\t/**\n\t * Convert to ms\n\t * @param {number} minutes\n\t * @returns {number}\n\t */\n\tstatic minToMS(minutes) {\n\t\treturn minutes * 60000;\n\t}\n\n\t/**\n\t * Return if the mission start date is in the future\n\t * @param {string} startDate\n\t * @returns {boolean}\n\t */\n\tstatic isFutureMission(startDate) {\n\t\tconst today = new Date();\n\t\tconst missionStartDate = new Date(startDate);\n\n\t\treturn missionStartDate > today;\n\t}\n\n\t/**\n\t * Copies an object and its sublevels.\n\t * For objects that can be stringified and parsed.\n\t * @param {object} object1\n\t * @returns {object}\n\t */\n\tstatic deepCopy(object1) {\n\t\treturn JSON.parse(JSON.stringify(object1));\n\t}\n\n\t/**\n\t * Clones an object and its sublevels.\n\t * For object that cannot be stringified and parsed.\n\t * @see https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript/10916838#10916838\n\t * @param {any} obj\n\t * @returns {any}\n\t */\n\tstatic deepClone(obj) {\n\t\tconst out = /** @type {any} */(Array.isArray(obj) ? [] : {});\n\t\tfor (const key in obj) {\n\t\t\tconst value = /** @type {any} */(obj[key]);\n\t\t\tout[key] = (typeof value === 'object' && value !== null) ? AppUtils.deepClone(value) : value;\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t * Uses the deepmerge library from https://github.com/TehShrike/deepmerge\n\t * with custom options to prevent merging of Moment objects\n\t * @param {object} object1\n\t * @param {object} object2\n\t * @returns {object}\n\t */\n\tstatic deepMerge(object1, object2) {\n\t\tconst options = {\n\t\t\tisMergeableObject: (/** @type {any} */value) => (value && value._isAMomentObject ? false : Boolean(value) && typeof value === 'object')\n\t\t};\n\n\t\treturn merge(object1, object2, options);\n\t}\n\n\n\t/**\n\t * Checks for object deep equality.\n\t * @param {any} object1\n\t * @param {any} object2\n\t * @returns {boolean}\n\t */\n\tstatic deepEqual(object1, object2) {\n\t\tif (!object1 || !object2) {\n\t\t\treturn false;\n\t\t}\n\t\tconst keys1 = Object.keys(object1);\n\t\tconst keys2 = Object.keys(object2);\n\n\t\tif (keys1.length !== keys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of keys1) {\n\t\t\tconst val1 = object1[key];\n\t\t\tconst val2 = object2[key];\n\t\t\tconst areObjects = AppUtils.isObject(val1) && AppUtils.isObject(val2);\n\t\t\tif (areObjects && !AppUtils.deepEqual(val1, val2)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if (!areObjects && val1 !== val2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if element is an object.\n\t * @param {any} object\n\t * @returns {boolean}\n\t */\n\tstatic isObject(object) {\n\t\treturn object !== null && typeof object === 'object';\n\t}\n\n\t/**\n\t * Filter an object.\n\t * @param {object} obj - Original object\n\t * @param {Function} callback - Condition\n\t * @returns {object}\n\t */\n\tstatic filterObject(obj, callback) {\n\t\treturn Object.fromEntries(Object.entries(obj).filter(([key, val]) => callback(val, key)));\n\t}\n\n\t/**\n\t * Returns lodash's debounce method\n\t * @returns {Function}\n\t */\n\tstatic debounce() {\n\t\treturn debounce(...arguments);\n\t}\n\n\t/**\n\t * Returns lodash's throttle method\n\t * @returns {Function}\n\t */\n\tstatic throttle() {\n\t\treturn throttle(...arguments);\n\t}\n\n\t/**\n\t * Waits for n millisecons.\n\t * @param {number} n\n\t * @returns {Promise<void>}\n\t */\n\tstatic waitFor(n) {\n\t\treturn new Promise(resolve => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve();\n\t\t\t}, n);\n\t\t});\n\t}\n\n\t/**\n\t * Check if the media query is portrait.\n\t * @returns {boolean}\n\t */\n\tstatic isPortrait() {\n\t\treturn window.matchMedia('(orientation: portrait)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is landscape.\n\t * @returns {boolean}\n\t */\n\tstatic isLandscape() {\n\t\treturn window.matchMedia('(orientation: landscape)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is landscape.\n\t * @returns {boolean}\n\t */\n\tstatic isMobileLandscape() {\n\t\treturn window.matchMedia('(min-width: 320px) and (max-width: 915px) and (orientation: landscape)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is portrait.\n\t * @returns {boolean}\n\t */\n\tstatic isMobilePortrait() {\n\t\treturn window.matchMedia('(min-width: 320px) and (max-width: 640px) and (orientation: portrait)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is mobile.\n\t * @returns {boolean}\n\t */\n\tstatic isMobile() {\n\t\treturn AppUtils.isMobileLandscape() || AppUtils.isMobilePortrait();\n\t}\n\n\t/**\n\t * Check if the OS is iOS on an iPhone.\n\t * @returns {boolean}\n\t */\n\tstatic isiPhone() {\n\t\tconst platform = window.navigator?.userAgentData?.platform || window.navigator?.platform || 'unknown';\n\t\treturn platform === 'iPhone';\n\t}\n\n\t/**\n\t * Check if the OS is iOS on an iPad.\n\t * @returns {boolean}\n\t */\n\tstatic isiPad() {\n\t\t// TODO: Update this with a better check if we ever get an intel mac with a touchscreen.\n\t\tconst platform = window.navigator?.userAgentData?.platform || window.navigator?.platform || 'unknown';\n\t\tconst touchPoints = window.navigator.maxTouchPoints > 1;\n\t\treturn (platform === 'MacIntel' && touchPoints);\n\t}\n\n\t/**\n\t * Check if the media query is tablet portrait.\n\t * @returns {boolean}\n\t */\n\tstatic isTabletPortrait() {\n\t\treturn window.matchMedia('(min-width: 641px) and (max-width: 1024px) and (orientation: portrait)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is tablet landscape.\n\t * @returns {boolean}\n\t */\n\tstatic isTabletLandscape() {\n\t\treturn window.matchMedia('(min-width: 916px) and (max-width: 1024px) and (orientation: landscape)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is in tablet mode.\n\t * @returns {boolean}\n\t */\n\tstatic isTablet() {\n\t\treturn AppUtils.isTabletLandscape() || AppUtils.isTabletPortrait();\n\t}\n\n\t/**\n\t * Check if the media query is in mobile mode: mobile, tablet, or landscape.\n\t * @returns {boolean}\n\t */\n\tstatic isMobileMode() {\n\t\treturn AppUtils.isMobilePortrait() || AppUtils.isMobileLandscape() || AppUtils.isTabletLandscape() || AppUtils.isTabletPortrait() || AppUtils.isPanorama();\n\t}\n\n\t/**\n\t * Check if the media query is desktop.\n\t * @returns {boolean}\n\t */\n\tstatic isDesktop() {\n\t\treturn window.matchMedia('(min-width: 1025px) and (min-height: 600px)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is panorama.\n\t * @returns {boolean}\n\t */\n\tstatic isPanorama() {\n\t\treturn window.matchMedia('(min-width: 1025px) and (max-height: 599px) and (orientation: landscape)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is 2K.\n\t * @returns {boolean}\n\t */\n\tstatic is2K() {\n\t\treturn window.matchMedia('(min-width: 2880px) and (min-height: 1620px)').matches;\n\t}\n\n\t/**\n\t * Check if the media query is 2K.\n\t * @returns {boolean}\n\t */\n\tstatic is4K() {\n\t\treturn window.matchMedia('(min-width: 3200px) and (min-height: 1800px)').matches;\n\t}\n\n\t/**\n\t * Check if the device is using touch.\n\t * @returns {boolean}\n\t */\n\tstatic isTouch() {\n\t\treturn ('ontouchstart' in window) || window.navigator.maxTouchPoints > 0;\n\t}\n\n\t/**\n\t * Check if the device is primary touch.\n\t * @returns {boolean}\n\t */\n\tstatic isPrimaryTouch() {\n\t\treturn window.matchMedia('(pointer: coarse)').matches;\n\t}\n\n\t/**\n\t * Check if the device supports hovering.\n\t * @returns {boolean}\n\t */\n\tstatic canHover() {\n\t\treturn !(matchMedia('(hover: none)').matches);\n\t}\n\n\t/**\n\t * Create an element from HTML string.\n\t * @param {string} html\n\t * @returns {Element}\n\t */\n\tstatic htmlToElement(html) {\n\t\tconst template = document.createElement('template');\n\t\ttemplate.innerHTML = html.replace(/[\\t\\n]+/g, '').trim(); // Never return a text node of whitespace as the result\n\t\treturn template.content.firstElementChild;\n\t}\n\n\t/**\n\t * Create sibling elements from HTML string.\n\t * @param {string} html\n\t * @returns {NodeList}\n\t */\n\tstatic htmlToElements(html) {\n\t\tconst template = document.createElement('template');\n\t\ttemplate.innerHTML = html.replace(/[\\t\\n]+/g, '').trim(); // Never return a text node of whitespace as the result\n\t\treturn template.content.cloneNode(true).childNodes;\n\t}\n\n\t/**\n\t * Replace variables in HTML string with params' values.\n\t * @param {string} html\n\t * @param {Object<string, string>} [params={}] - Parameters to replace in HTML string\n\t * @returns {string}\n\t */\n\tstatic insertParamsToHTML(html, params = {}) {\n\t\thtml = html.replace(/[\\t\\n]+/g, '').trim();\n\t\tconst keys = Object.keys(params);\n\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key = keys[i];\n\t\t\tconst param = `{$${key}}`;\n\t\t\thtml = html.replaceAll(param, params[key]);\n\t\t}\n\t\t// Replace all unspecified params with empty string\n\t\thtml = html.replaceAll(/{\\$([A-Z])\\w+}/gi, '');\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Replace variables in HTML string with params' values then create an element.\n\t * Format of HTML variable: {$var}.\n\t * @example\n\t * // Replace <div>{$title}</div> with <div>Hello</div>\n\t * htmlWithParamsToElement(html, { title: 'Hello' });\n\t * @param {string} html\n\t * @param {Object<string, string>} [params={}] - Parameters to replace in HTML string\n\t * @returns {Element}\n\t */\n\tstatic htmlWithParamsToElement(html, params = {}) {\n\t\thtml = AppUtils.insertParamsToHTML(html, params);\n\t\treturn AppUtils.htmlToElement(html);\n\t}\n\n\t/**\n\t * Periodically check if an element is attached to DOM.\n\t * Execute a callback if element is attached, or output error on timeout.\n\t * @param {string|HTMLElement} elementQuery - Query string passed to document.querySelector or HTML element\n\t * @param {Function} callback - Callback to be called on verified attachment\n\t * @param {object} options\n\t * @param {number} [options.interval=100] - Interval to check in ms\n\t * @param {number} [options.timeout=5000] - Timeout to stop in ms\n\t */\n\tstatic onAttachElement(elementQuery, callback, { interval = 100, timeout = 5000 } = {}) {\n\t\tconst myInterval = setInterval(() => {\n\t\t\tconst attached = typeof elementQuery === 'string'\n\t\t\t\t? document.querySelector(elementQuery) !== null\n\t\t\t\t: document.body.contains(elementQuery);\n\t\t\tif (attached) {\n\t\t\t\tclearInterval(myInterval);\n\t\t\t\tclearTimeout(myTimeout);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}, interval);\n\t\tconst myTimeout = setTimeout(() => {\n\t\t\tclearInterval(myInterval);\n\t\t\tconsole.error(`[AppUtils.onAttachElement] Timeout exceeded for \"${elementQuery}\".`);\n\t\t}, timeout);\n\t}\n\n\t/**\n\t * A callback that is fired once the DOM has detected a node has been added to a specific element.\n\t * Similar to the above util, but without the timeouts.\n\t * https://stackoverflow.com/questions/5525071/how-to-wait-until-an-element-exists\n\t * @param {HTMLElement} parent\n\t * @param {HTMLElement} element\n\t * @param {string} selector\n\t * @param {() => void} callback\n\t */\n\tstatic appendWithCallback(parent, element, selector, callback) {\n\t\tconst promise = new Promise(resolve => {\n\t\t\tif (document.querySelector(selector)) {\n\t\t\t\treturn resolve(document.querySelector(selector));\n\t\t\t}\n\n\t\t\tconst observer = new MutationObserver(() => {\n\t\t\t\tif (document.querySelector(selector)) {\n\t\t\t\t\tresolve(document.querySelector(selector));\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tobserver.observe(document.body, {\n\t\t\t\tchildList: true,\n\t\t\t\tsubtree: true\n\t\t\t});\n\t\t});\n\n\t\tpromise.then(callback);\n\n\t\tparent.appendChild(element);\n\t}\n\n\t/**\n\t * Uses the mutation observer to wait for an element to be queryable in the DOM. Rejects after timeout.\n\t * @param {string} selector\n\t * @param {number} timeout\n\t * @returns {Promise<Element>}\n\t */\n\tstatic elementReady(selector, timeout = 1000) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst element = document.querySelector(selector);\n\t\t\tif (element) {\n\t\t\t\tresolve(element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst observer = new MutationObserver(() => {\n\t\t\t\t// Query for elements matching the specified selector\n\t\t\t\tconst element = document.querySelector(selector);\n\t\t\t\tif (element) {\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\tresolve(element);\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\tobserver.observe(document.body, {\n\t\t\t\tchildList: true,\n\t\t\t\tsubtree: true\n\t\t\t});\n\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tobserver.disconnect();\n\t\t\t\treject(console.warn(`${selector} not found in DOM`));\n\t\t\t}, timeout);\n\t\t});\n\t}\n\n\t/**\n\t * Add a default scrollbar to an element.\n\t * @param {HTMLElement} element\n\t * @param {OverlayScrollbars.Options} [options={}] - Options for OverlayScrollbars\n\t * @returns {OverlayScrollbars}\n\t */\n\tstatic addScrollbar(element, options = {}) {\n\t\tconst opts = /** @type {OverlayScrollbars.Options} */({\n\t\t\tclassName: 'os-theme-dark', // default\n\t\t\tresize: 'none', // default\n\t\t\tclipAlways: false,\n\t\t\tnormalizeRTL: false,\n\t\t\tpaddingAbsolute: true,\n\t\t\tautoUpdate: false,\n\t\t\tsizeAutoCapable: false,\n\t\t\toverflowBehavior: {\n\t\t\t\tx: 'hidden',\n\t\t\t\ty: 'scroll' // default\n\t\t\t},\n\t\t\tscrollbars: {\n\t\t\t\tclickScrolling: true,\n\t\t\t\tautoHide: 'move'\n\t\t\t},\n\t\t\t...options\n\t\t});\n\t\treturn OverlayScrollbars(element, opts);\n\t}\n\n\t/**\n\t * Makes sure we can add commas and a maximum number of decimal places without float inaccuracies\n\t * @param {number} number\n\t * @param {number} maxDps - number of decimal places\n\t * @param {number} minDps - minimum number of decimal places (ie. can include 10.0)\n\t * @returns {string}\n\t */\n\tstatic formatNumber(number, maxDps = 3, minDps = undefined) {\n\t\treturn number.toLocaleString(undefined, { maximumFractionDigits: maxDps, minimumFractionDigits: minDps });\n\t}\n\n\t/**\n\t * Formats a date to local style with options\n\t * @param {Date} date\n\t * @param {object} options\n\t * @returns {string}\n\t */\n\tstatic formatDate(date, options = {}) {\n\t\treturn date.toLocaleString(undefined, { year: 'numeric', month: 'long', day: 'numeric', ...options });\n\t}\n\n\t/**\n\t * Tween from one set of values to another in some duration\n\t * @param {object} from - Starting values\n\t * @param {object} to - Ending values\n\t * @param {object} options\n\t * @param {(obj: object) => void} [options.onUpdate] - Action on each update\n\t * @param {() => void} [options.onComplete] - Action on complete\n\t * @param {number} [options.duration=2000] - Duration of animation in milliseconds\n\t * @returns {Tween<object>}\n\t */\n\tstatic tween(from, to, { onUpdate, onComplete, duration = 2000 } = {}) {\n\t\tlet request = /** @type {number} */(0);\n\t\tconst tween = new Tween(from)\n\t\t\t.to(to, duration)\n\t\t\t.onUpdate(obj => {\n\t\t\t\tif (onUpdate !== undefined) {\n\t\t\t\t\tonUpdate(obj);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.onComplete(() => {\n\t\t\t\tif (typeof onComplete === 'function') {\n\t\t\t\t\tonComplete();\n\t\t\t\t}\n\t\t\t\t// Cancel request so it won't call function indefinitely\n\t\t\t\tcancelAnimationFrame(request);\n\t\t\t})\n\t\t\t.start();\n\n\t\tconst tweenAnimationFrame = (/** @type {number} */time) => {\n\t\t\trequest = requestAnimationFrame(tweenAnimationFrame);\n\t\t\ttweenUpdate(time);\n\t\t};\n\t\ttweenAnimationFrame();\n\n\t\treturn tween;\n\t}\n\n\t/**\n\t * Convert values from string to corresponding types in an object.\n\t * @param {Object<string, any>} obj\n\t * @returns {Object<string, any>}\n\t */\n\tstatic convertObjType(obj) {\n\t\tObject.entries(obj).forEach(([key, value]) => {\n\t\t\tlet outValue;\n\t\t\tswitch (value.trim()) {\n\t\t\t\tcase 'undefined':\n\t\t\t\t\toutValue = undefined; break;\n\t\t\t\tcase 'null':\n\t\t\t\t\toutValue = null; break;\n\t\t\t\tcase 'true':\n\t\t\t\t\toutValue = true; break;\n\t\t\t\tcase 'false':\n\t\t\t\t\toutValue = false; break;\n\t\t\t\tcase 'NaN':\n\t\t\t\t\toutValue = NaN; break;\n\t\t\t\tcase '':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\toutValue = isNaN(value) ? value : parseFloat(value); break;\n\t\t\t}\n\t\t\tobj[key] = outValue;\n\t\t});\n\t\treturn obj;\n\t}\n}\n","/**\n * Cancel token class.\n */\nexport class CancelToken {\n\t/**\n\t * Constructor.\n\t */\n\tconstructor() {\n\t\tthis._isCanceled = false;\n\t}\n\n\t/**\n\t * Sets the state to canceled.\n\t */\n\tcancel() {\n\t\tthis._isCanceled = true;\n\t}\n\n\t/**\n\t * Gets canceled state.\n\t * @returns {boolean}\n\t */\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n","// Generated by genversion.\nexport const version = '2.4.0';\n","/** @module pioneer */\n\n/**\n * A class that can be used to find out the capabilities of the current device.\n * @hideconstructor\n */\nexport class Capabilities {\n\t/**\n\t * Returns true if the context is WebGL 2.0.\n\t * @returns {boolean}\n\t */\n\tstatic isWebGL2() {\n\t\treturn typeof WebGL2RenderingContext !== 'undefined' && _context instanceof WebGL2RenderingContext;\n\t}\n\n\t/**\n\t * Returns true if the context has the gl_fragDepth output variable.\n\t * @returns {boolean}\n\t */\n\tstatic hasFragDepth() {\n\t\treturn this.isWebGL2() || this.hasGLExtension('EXT_frag_depth');\n\t}\n\n\t/**\n\t * Returns true if the device has the GL extension enabled.\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Using_Extensions}\n\t * @param {string} extensionName - The extension name.\n\t * @returns {boolean}\n\t */\n\tstatic hasGLExtension(extensionName) {\n\t\tif (_context === null) {\n\t\t\treturn false;\n\t\t}\n\t\tlet value = _cache.get(extensionName);\n\t\tif (value === undefined) {\n\t\t\tvalue = _context.getExtension(extensionName) !== null;\n\t\t\t_cache.set(extensionName, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Gets the supported compressed texture extension.\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Compressed_texture_formats}\n\t * @returns {string}\n\t * @internal\n\t */\n\tstatic __getCompressedTextureExtension() {\n\t\treturn _compressedTextureExtension;\n\t}\n\n\t/**\n\t * Sets the rendering context for use in other functions. Called by Engine.\n\t * @param {WebGLRenderingContext} context - The WebGL context.\n\t * @internal\n\t */\n\tstatic __setContext(context) {\n\t\t_context = context;\n\n\t\t// Check for support of compressed texture formats.\n\t\t_compressedTextureFormats.forEach((value, key) => {\n\t\t\tif (this.hasGLExtension('WEBGL_compressed_texture_' + key) === true\n\t\t\t\t|| this.hasGLExtension('WEBKIT_WEBGL_compressed_texture_' + key) === true) {\n\t\t\t\tif (_compressedTextureExtension === '') {\n\t\t\t\t\t_compressedTextureExtension = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * A cache of capabilities for performance.\n * @type {Map<string, boolean>}\n */\nconst _cache = new Map();\n\n/**\n * The rendering context for use in other functions.\n * @type {WebGLRenderingContext | null}\n */\nlet _context = null;\n\n/**\n * The supported compressed texture extension.\n * @type {string}\n */\nlet _compressedTextureExtension = '';\n\n/**\n * A mapping from compressed texture formats to their corresponding extensions.\n * @type {Map<string, string>}\n */\nconst _compressedTextureFormats = new Map([\n\t['astc', 'astc'],\n\t['s3tc', 'dxt'],\n\t['pvrtc', 'pvrtc'],\n\t['etc', 'etc2'],\n\t['etc1', 'etc1']]);\n","/** @module pioneer */\n\n/**\n * The global configuration. It has event triggering when values change.\n * It has the built-in default keys:\n * <ul>\n * <p>maxTextureSize = 512</p>\n * <p>useTextureCompression = true</p>\n * <p>fontFamily = 'Arial'</p>\n * <p>fontSize = 16</p>\n * <p>gammaCorrection = 1.0</p>\n * </ul>\n */\nexport class Config {\n\t/**\n\t * Constructor. Called by Engine.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The map of keys to values.\n\t\t * @type {Map<string, string | number | boolean>}\n\t\t * @private\n\t\t */\n\t\tthis._valueMap = new Map();\n\n\t\t/**\n\t\t * The map of keys to callbacks.\n\t\t * @type {Map<string, ((key: string, value: string | number | boolean) => any)[]>}\n\t\t * @private\n\t\t */\n\t\tthis._callbacksMap = new Map();\n\n\t\t// Setup some defaults.\n\t\tthis.setValue('maxTextureSize', 512);\n\t\tthis.setValue('useTextureCompression', true);\n\t\tthis.setValue('fontFamily', 'Arial');\n\t\tthis.setValue('fontSize', 16);\n\t\tthis.setValue('gammaCorrection', 1.0);\n\t}\n\n\t/**\n\t * Gets the value for a given key, or undefined if the key is not found.\n\t * @param {string} key - the key of the value to get\n\t * @returns {string | number | boolean | undefined}\n\t */\n\tgetValue(key) {\n\t\treturn this._valueMap.get(key);\n\t}\n\n\t/**\n\t * Sets a value for the given key. Calls any added event listeners.\n\t * @param {string} key - the key to set\n\t * @param {string | number | boolean} value - the value to set\n\t */\n\tsetValue(key, value) {\n\t\tconst changed = this._valueMap.get(key) !== value;\n\t\tif (changed) {\n\t\t\tthis._valueMap.set(key, value);\n\t\t\tconst callbacks = this._callbacksMap.get(key);\n\t\t\tif (callbacks) {\n\t\t\t\tfor (let i = 0; i < callbacks.length; i++) {\n\t\t\t\t\tcallbacks[i](key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds a callback to be called when the value of the key changes.\n\t * @param {string} key - the key for the callback\n\t * @param {(key: string, value: string | number | boolean) => any} callback - the callback\n\t */\n\taddEventListener(key, callback) {\n\t\tlet callbacks = this._callbacksMap.get(key);\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = [];\n\t\t\tthis._callbacksMap.set(key, callbacks);\n\t\t}\n\t\tcallbacks.push(callback);\n\t}\n\n\t/**\n\t * Removes the callback of the key.\n\t * @param {string} key - the key for the callback\n\t * @param {(key: string, value: string | number | boolean) => any} callback - the callback\n\t */\n\tremoveEventListener(key, callback) {\n\t\tconst callbacks = this._callbacksMap.get(key);\n\t\tif (callbacks) {\n\t\t\tfor (let i = 0; i < callbacks.length; i++) {\n\t\t\t\tif (callbacks[i] === callback) {\n\t\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\n\nimport { Sort } from './internal';\n\n/**\n * A download object for every download that is returned to the user.\n */\nexport class Download {\n\t/**\n\t * The constructor.\n\t * @param {string} url\n\t * @param {string} actualUrl\n\t * @param {boolean} binary\n\t */\n\tconstructor(url, actualUrl, binary) {\n\t\t/**\n\t\t * The unprocessed url given by the user.\n\t\t * @type {string}\n\t\t */\n\t\tthis.url = url;\n\n\t\t/**\n\t\t * The processed url actually sent to the browser.\n\t\t * @type {string}\n\t\t */\n\t\tthis.actualUrl = actualUrl;\n\n\t\t/**\n\t\t * The progress from 0 to 1.\n\t\t * @type {number}\n\t\t */\n\t\tthis.progress = 0;\n\n\t\t/**\n\t\t * The total content size in bytes.\n\t\t * @type {number}\n\t\t */\n\t\tthis.totalBytes = 0;\n\n\t\t/**\n\t\t * The content of the completed download.\n\t\t * @type {string | ArrayBuffer | undefined}\n\t\t */\n\t\tthis.content = undefined;\n\n\t\t/**\n\t\t * Whether or not the content is binary.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.binary = binary;\n\n\t\t/**\n\t\t * The status of the download. It can be 'downloading', 'completed', 'cancelled', or 'failed'\n\t\t * @type {'downloading' | 'completed' | 'cancelled' | 'failed'}\n\t\t */\n\t\tthis.status = 'downloading';\n\n\t\t/**\n\t\t * The error message, if there is one.\n\t\t * @type {string}\n\t\t */\n\t\tthis.errorMessage = '';\n\t}\n}\n\n/**\n * A download object for every download that is used by the Downloader.\n * @private\n */\nclass DownloadData {\n\t/**\n\t * The constructor.\n\t * @param {string} url\n\t * @param {string} actualUrl\n\t * @param {boolean} binary\n\t */\n\tconstructor(url, actualUrl, binary) {\n\t\t/**\n\t\t * The download object to be returned to the user.\n\t\t * @type {Download}\n\t\t */\n\t\tthis.download = new Download(url, actualUrl, binary);\n\n\t\t/**\n\t\t * The promise that is returned when completed or cancelled.\n\t\t * @type {Promise<Download> | null}\n\t\t */\n\t\tthis.promise = null;\n\n\t\t/**\n\t\t * The resolve function of the promise.\n\t\t * @type {(download: Download) => void}\n\t\t */\n\t\tthis.resolve = null;\n\n\t\t/**\n\t\t * The list of callbacks to call when the progress changes.\n\t\t * @type {((download: Download) => any)[]}\n\t\t */\n\t\tthis.progressCallbacks = [];\n\n\t\t/**\n\t\t * The XMLHttpRequest object.\n\t\t * @type {XMLHttpRequest | null}\n\t\t */\n\t\tthis.request = null;\n\t}\n}\n\n/**\n * A class that downloads assets. It can preprocess URLs via replacement keywords.\n */\nexport class Downloader {\n\t/**\n\t * Constructor. Called by Engine.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The mapping of strings to replacements when downloading urls.\n\t\t * @type {Map<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._replacements = new Map();\n\n\t\t/**\n\t\t * The current set of downloads, mapped from url to Download object.\n\t\t * @type {Map<string, DownloadData>}\n\t\t * @private\n\t\t */\n\t\tthis._currentDownloads = new Map();\n\n\t\t/**\n\t\t * The download queue, sorted by priority.\n\t\t * @type {[number, DownloadData][]}\n\t\t * @private\n\t\t */\n\t\tthis._downloadQueue = [];\n\n\t\t/**\n\t\t * The maximum number of current downloads.\n\t\t * @type {number}\n\t\t */\n\t\tthis._maxCurrentDownloads = 20;\n\t}\n\n\t/**\n\t * Gets the replacement for a given name, or undefined if no replacement was found.\n\t * @param {string} name - The name to be replaced.\n\t * @returns {string | undefined}\n\t */\n\tgetReplacement(name) {\n\t\treturn this._replacements.get(name);\n\t}\n\n\t/**\n\t * Sets a replacement so that when a URL contains <em>$name</em>, it will be replaced with the replacement.\n\t * @param {string} name - The name (without the $) to be replaced.\n\t * @param {string} replacement - The replacement string.\n\t */\n\tsetReplacement(name, replacement) {\n\t\tthis._replacements.set(name, replacement);\n\t}\n\n\t/**\n\t * Cancels a download for the given url. If there are multiple downloads of the same url, they are all cancelled.\n\t * @param {string} url - The url of the download to cancel.\n\t */\n\tcancel(url) {\n\t\tconst actualUrl = this.processUrl(url);\n\n\t\t// If we're currently downloading, call the abort function.\n\t\tif (this._currentDownloads.has(actualUrl)) {\n\t\t\tconst downloadData = this._currentDownloads.get(actualUrl);\n\t\t\tif (downloadData !== undefined && downloadData.request !== null) {\n\t\t\t\tdownloadData.request.abort();\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\t// If we're in the queue still, there's no request, so artificially end the download as if there was.\n\t\t\tconst queueIndex = this._downloadQueue.findIndex(([_, downloadData]) => downloadData.download.actualUrl === actualUrl);\n\t\t\tif (queueIndex !== -1) {\n\n\t\t\t\tconst downloadData = this._downloadQueue[queueIndex][1];\n\t\t\t\tdownloadData.download.content = undefined;\n\t\t\t\tdownloadData.download.status = 'cancelled';\n\t\t\t\tthis._downloadQueue.splice(queueIndex, 1);\n\t\t\t\tdownloadData.resolve(downloadData.download);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Process url parameters, replacing the <code>$name</code> variables with their corresponding replacements.\n\t * @param {string} url - The url to process.\n\t * @returns {string}\n\t */\n\tprocessUrl(url) {\n\t\tlet processedUrl = url;\n\t\tfor (const [name, replacement] of this._replacements) {\n\t\t\tprocessedUrl = processedUrl.replace('$' + name, replacement);\n\t\t}\n\t\treturn processedUrl;\n\t}\n\n\t/**\n\t * Downloads a file and returns a promise that resolves with a Download object.\n\t * If the download is cancelled, the status will be 'cancelled'.\n\t * If the download has failed, the status will be 'failed' and the errorMessage will be the error.\n\t * If the download has completed, the status will be 'completed'.\n\t * It replaces <code>$name</code> variables with their replacements.\n\t * @param {string} url - The url to download.\n\t * @param {boolean} binary - If true, the Download.content is an ArrayBuffer and is otherwise a string.\n\t * @param {(download: Download) => any} [progressCallback] - The callback to be called periodically to report the progress of the download.\n\t * @returns {Promise<Download>}\n\t */\n\tdownload(url, binary, progressCallback) {\n\t\t// Process the urls, doing the replacements.\n\t\tconst actualUrl = this.processUrl(url);\n\n\t\t// If the download already currently running, just return its promise.\n\t\tlet downloadData = this._currentDownloads.get(actualUrl);\n\t\tif (downloadData !== undefined && downloadData.promise !== null) {\n\t\t\tif (progressCallback) {\n\t\t\t\tdownloadData.progressCallbacks.push(progressCallback);\n\t\t\t}\n\t\t\treturn downloadData.promise;\n\t\t}\n\n\t\t// If the download is in the queue, return its promise.\n\t\tconst queueIndex = this._downloadQueue.findIndex(([_, downloadData]) => downloadData.download.actualUrl === actualUrl);\n\t\tif (queueIndex !== -1) {\n\t\t\tdownloadData = this._downloadQueue[queueIndex][1];\n\t\t\tif (progressCallback) {\n\t\t\t\tdownloadData.progressCallbacks.push(progressCallback);\n\t\t\t}\n\t\t\treturn downloadData.promise;\n\t\t}\n\n\t\t// Create the download object.\n\t\tdownloadData = new DownloadData(url, actualUrl, binary);\n\n\t\t// Set the promise.\n\t\tdownloadData.promise = new Promise((resolve) => {\n\n\t\t\t// Save the resolve function for later calling.\n\t\t\tdownloadData.resolve = resolve;\n\n\t\t\t// Add to the download queue and sort it.\n\t\t\tSort.add([0, downloadData], this._downloadQueue, (a, b) => a[0] < b[0], (a, b) => a[0] === b[0]);\n\n\t\t\t// Check the download queue to see if we can start this request right away.\n\t\t\tthis.checkDownloadQueue();\n\t\t});\n\n\t\treturn downloadData.promise;\n\t}\n\n\t/**\n\t * Does an actual request.\n\t * @param {DownloadData} downloadData\n\t * @private\n\t */\n\tdoRequest(downloadData) {\n\n\t\t// Create the XMLHttpRequest.\n\t\tconst request = new XMLHttpRequest();\n\n\t\t// Load listener.\n\t\trequest.addEventListener('load', () => {\n\t\t\tif (200 <= request.status && request.status <= 299) {\n\t\t\t\tdownloadData.download.content = request.response;\n\t\t\t\tdownloadData.download.status = 'completed';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdownloadData.download.content = undefined;\n\t\t\t\tdownloadData.download.status = 'failed';\n\t\t\t}\n\t\t\tthis._currentDownloads.delete(downloadData.download.actualUrl);\n\t\t\tthis.checkDownloadQueue();\n\t\t\tdownloadData.resolve(downloadData.download);\n\t\t});\n\n\t\t// Progress listener.\n\t\trequest.addEventListener('progress', (event) => {\n\t\t\tdownloadData.download.progress = event.lengthComputable ? (event.loaded / event.total) : 0;\n\t\t\tdownloadData.download.totalBytes = event.lengthComputable ? event.total : 0;\n\t\t\tfor (const progressCallback of downloadData.progressCallbacks) {\n\t\t\t\tprogressCallback(downloadData.download);\n\t\t\t}\n\t\t});\n\n\t\t// Abort listener.\n\t\trequest.addEventListener('abort', () => {\n\t\t\tdownloadData.download.content = undefined;\n\t\t\tdownloadData.download.status = 'cancelled';\n\t\t\tthis._currentDownloads.delete(downloadData.download.actualUrl);\n\t\t\tthis.checkDownloadQueue();\n\t\t\tdownloadData.resolve(downloadData.download);\n\t\t});\n\n\t\t// Error listener.\n\t\trequest.addEventListener('error', () => {\n\t\t\tdownloadData.download.content = undefined;\n\t\t\tdownloadData.download.status = 'failed';\n\t\t\tdownloadData.download.errorMessage = request.statusText;\n\t\t\tthis._currentDownloads.delete(downloadData.download.actualUrl);\n\t\t\tthis.checkDownloadQueue();\n\t\t\tdownloadData.resolve(downloadData.download);\n\t\t});\n\n\t\tif (downloadData.download.binary) {\n\t\t\trequest.responseType = 'arraybuffer';\n\t\t}\n\t\telse {\n\t\t\trequest.responseType = 'text';\n\t\t}\n\n\t\tdownloadData.request = request;\n\t\trequest.open('GET', downloadData.download.actualUrl);\n\t\trequest.send();\n\t}\n\n\t/**\n\t * Checks the download queue for another download and starts it, if needed.\n\t * @private\n\t */\n\tcheckDownloadQueue() {\n\t\tif (this._currentDownloads.size < this._maxCurrentDownloads && this._downloadQueue.length > 0) {\n\t\t\tconst [_, downloadData] = this._downloadQueue.shift();\n\t\t\tthis._currentDownloads.set(downloadData.download.actualUrl, downloadData);\n\t\t\tthis.doRequest(downloadData);\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tBaseController,\n\tCapabilities,\n\tCollection,\n\tConfig,\n\tDownloader,\n\tEntity,\n\tFPS,\n\tInput,\n\tMaterialManager,\n\tScene,\n\tTextureLoader,\n\tTextureLoaderCompressed,\n\tTHREE,\n\tTypes,\n\tVector2,\n\tVersion,\n\tViewport\n} from './internal';\n\n/**\n * @callback ComponentConstructor\n * @param {string} type - The type of the component.\n * @param {string} name\n * @param {Entity} parent\n * @returns {BaseComponent}\n */\n\n/**\n * @callback ControllerConstructor\n * @param {string} type\n * @param {string} name\n * @param {Entity} parent\n * @returns {BaseController}\n */\n\n/**\n * The main driver of the Pioneer engine.\n */\nexport class Engine {\n\t/**\n\t * Constructs the Pioneer engine.\n\t * @param {HTMLDivElement} rootDiv - A &lt;div&gt; element. The canvas and Pioneer UI will go inside of it.\n\t */\n\tconstructor(rootDiv) {\n\t\t// Make sure the root div is an actual div element.\n\t\tif (!(rootDiv instanceof HTMLDivElement)) {\n\t\t\tthrow new Error('The root div param is not an actual div element.');\n\t\t}\n\n\t\t/**\n\t\t * The root &lt;div&gt; element.\n\t\t * @type {HTMLDivElement}\n\t\t * @private\n\t\t */\n\t\tthis._rootDiv = rootDiv;\n\n\t\t/**\n\t\t * The canvas created by the engine inside the root div.\n\t\t * @type {HTMLCanvasElement}\n\t\t * @private\n\t\t */\n\t\tthis._canvas = null;\n\n\t\t/**\n\t\t * The current size of the render area as a Vector2.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._renderSize = new Vector2();\n\t\tthis._renderSize.freeze();\n\n\t\t/**\n\t\t * The input object.\n\t\t * @type {Input}\n\t\t * @private\n\t\t */\n\t\tthis._input = new Input(this);\n\n\t\t/**\n\t\t * The config.\n\t\t * @type {Config}\n\t\t * @private\n\t\t */\n\t\tthis._config = new Config();\n\n\t\t/**\n\t\t * The downloader object.\n\t\t * @type {Downloader}\n\t\t * @private\n\t\t */\n\t\tthis._downloader = new Downloader();\n\n\t\t/**\n\t\t * The texture loader used by all components for the loading of textures.\n\t\t * @type {TextureLoader}\n\t\t * @private\n\t\t */\n\t\tthis._textureLoader = null;\n\n\t\t/**\n\t\t * The compressed texture loader used by all components for the loading of textures.\n\t\t * @type {TextureLoaderCompressed}\n\t\t * @private\n\t\t */\n\t\tthis._textureLoaderCompressed = null;\n\n\t\t/**\n\t\t * The shader manager.\n\t\t * @type {MaterialManager}\n\t\t * @private\n\t\t */\n\t\tthis._materialManager = null;\n\n\t\t/**\n\t\t * The collection of scenes.\n\t\t * @type {Collection<Scene, Engine>}\n\t\t * @private\n\t\t */\n\t\tthis._scenes = new Collection(this, new Map([['scene', Scene]]));\n\n\t\t/**\n\t\t * The collection of viewports.\n\t\t * @type {Collection<Viewport, Engine>}\n\t\t * @private\n\t\t */\n\t\tthis._viewports = new Collection(this, new Map([['viewport', Viewport]]));\n\n\t\t/**\n\t\t * The real-world time last frame. Used to determine the in-app time.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lastAppTime = Date.now();\n\n\t\t/**\n\t\t * The time in seconds it took to complete the last frame.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._realDeltaTime = 0;\n\n\t\t/**\n\t\t * An FPS calculator.\n\t\t * @type {FPS}\n\t\t * @private\n\t\t */\n\t\tthis._fps = new FPS();\n\n\t\t/**\n\t\t * A limit for the FPS.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._fpsLimit = Number.POSITIVE_INFINITY;\n\n\t\t/**\n\t\t * The in-app time in ET seconds.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._time = 0;\n\n\t\t/**\n\t\t * The in-app time rate in seconds per second.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._timeRate = 0;\n\n\t\t/**\n\t\t * The list of callbacks to be called at the end of the next frame.\n\t\t * If they are not recurring, they will be removed after they are processed.\n\t\t * @type {{ callback: () => any, recurring: boolean }[]}\n\t\t * @private\n\t\t */\n\t\tthis._callbacks = [];\n\n\t\t/**\n\t\t * A list of callbacks to remove in the next frame.\n\t\t * @type {(() => any)[]}\n\t\t * @private\n\t\t */\n\t\tthis._callbacksToRemove = [];\n\n\t\t/**\n\t\t * This is used in requestAnimationFrame because bind (or ()=>{}) creates garbage.\n\t\t * @type {(this: Engine) => any}\n\t\t * @private\n\t\t */\n\t\tthis._thisLoop = this._loop.bind(this);\n\n\t\t/**\n\t\t * The ThreeJS renderer.\n\t\t * @type {THREE.WebGLRenderer}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsRenderer = null;\n\n\t\t/**\n\t\t * The div element where the viewports will go.\n\t\t * @type {HTMLDivElement}\n\t\t * @private\n\t\t */\n\t\tthis._viewportDiv = null;\n\n\t\t// Add styling to the root div to make sure it will work with Pioneer.\n\t\tif (this._rootDiv.style.position !== 'relative' && this._rootDiv.style.position !== 'absolute') {\n\t\t\tthis._rootDiv.style.position = 'relative';\n\t\t}\n\t\tthis._rootDiv.style.userSelect = 'none';\n\t\tthis._rootDiv.style.webkitUserSelect = 'none';\n\t\tthis._rootDiv.style.touchAction = 'none';\n\n\t\t// Create the canvas and attach it to the root div.\n\t\tthis._canvas = document.createElement('canvas');\n\t\tthis._canvas.style.position = 'absolute';\n\t\tthis._canvas.style.left = '0px';\n\t\tthis._canvas.style.top = '0px';\n\t\tthis._canvas.style.width = '100%';\n\t\tthis._canvas.style.height = '100%';\n\t\tthis._rootDiv.appendChild(this._canvas);\n\n\t\t// Create the viewport div for the viewports and attach it to the root div.\n\t\tthis._viewportDiv = document.createElement('div');\n\t\tthis._viewportDiv.style.position = 'absolute';\n\t\tthis._viewportDiv.style.left = '0px';\n\t\tthis._viewportDiv.style.top = '0px';\n\t\tthis._viewportDiv.style.width = '100%';\n\t\tthis._viewportDiv.style.height = '100%';\n\t\tthis._viewportDiv.style.overflow = 'hidden';\n\t\tthis._rootDiv.appendChild(this._viewportDiv);\n\n\t\ttry {\n\t\t\t// Create ThreeJS renderer, using the canvas as a reference.\n\t\t\tthis._threeJsRenderer = new THREE.WebGLRenderer({\n\t\t\t\tcanvas: this._canvas,\n\t\t\t\tantialias: true\n\t\t\t});\n\t\t\tthis._threeJsRenderer.setScissorTest(true);\n\n\t\t\t// Make sure the renderer is using the device pixel ratio for extra sharpness.\n\t\t\tthis._threeJsRenderer.setPixelRatio(window.devicePixelRatio);\n\n\t\t\t// Create the texture loaders.\n\t\t\tthis._textureLoader = new TextureLoader(this._downloader, this._threeJsRenderer);\n\t\t\tthis._textureLoaderCompressed = new TextureLoaderCompressed(this._downloader, this._config, this._threeJsRenderer);\n\n\t\t\t// Disable the cache so that things don't get loaded indefinitely.\n\t\t\tTHREE.Cache.enabled = false;\n\n\t\t\t// REMOVE LATER: Fix for GLSL warning about GL_ARB_gpu_shader5 (ThreeJS bug: https://github.com/mrdoob/three.js/issues/9716).\n\t\t\tconst origGetShaderInfoLog = this._threeJsRenderer.getContext().getShaderInfoLog.bind(this._threeJsRenderer.getContext());\n\t\t\tthis._threeJsRenderer.getContext().getShaderInfoLog = (shader) => {\n\t\t\t\tconst t = origGetShaderInfoLog(shader);\n\t\t\t\tif (t.includes('GL_ARB_gpu_shader5')) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Add the WebGL context to the capabilities.\n\t\t\tCapabilities.__setContext(this._threeJsRenderer.getContext());\n\n\t\t\t// Create the material manager.\n\t\t\tthis._materialManager = new MaterialManager(this._downloader);\n\t\t}\n\t\tcatch (error) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(error);\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Start looping.\n\t\trequestAnimationFrame(this._thisLoop);\n\t}\n\n\t// VERSION\n\n\t/**\n\t * Gets the Pioneer version.\n\t * @returns {string}\n\t */\n\tgetVersion() {\n\t\treturn Version;\n\t}\n\n\t// CANVAS AND CONTAINER DIVS\n\n\t/**\n\t * Returns the root div that was passed in the constructor.\n\t * @returns {HTMLDivElement}\n\t */\n\tgetRootDiv() {\n\t\treturn this._rootDiv;\n\t}\n\n\t/**\n\t * Gets the size of the rendering area.\n\t * @returns {Vector2}\n\t */\n\tgetRenderSize() {\n\t\treturn this._renderSize;\n\t}\n\n\t/**\n\t * Returns the canvas used for the engine.\n\t * @returns {HTMLCanvasElement}\n\t */\n\tgetCanvas() {\n\t\treturn this._canvas;\n\t}\n\n\t/**\n\t * Returns the div used for the UI.\n\t * @returns {HTMLDivElement}\n\t */\n\tgetViewportDiv() {\n\t\treturn this._viewportDiv;\n\t}\n\n\t// SUB-SYSTEMS\n\n\t/**\n\t * Returns the config.\n\t * @returns {Config}\n\t */\n\tgetConfig() {\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Returns the input manager.\n\t * @returns {Input}\n\t */\n\tgetInput() {\n\t\treturn this._input;\n\t}\n\n\t/**\n\t * Returns the downloader.\n\t * @returns {Downloader}\n\t */\n\tgetDownloader() {\n\t\treturn this._downloader;\n\t}\n\n\t/**\n\t * Gets the texture loader.\n\t * @returns {TextureLoader}\n\t */\n\tgetTextureLoader() {\n\t\treturn this._textureLoader;\n\t}\n\n\t/**\n\t * Gets the texture loader.\n\t * @returns {TextureLoaderCompressed}\n\t */\n\tgetTextureLoaderCompressed() {\n\t\treturn this._textureLoaderCompressed;\n\t}\n\n\t/**\n\t * Get the material manager.\n\t * @returns {MaterialManager}\n\t */\n\tgetMaterialManager() {\n\t\treturn this._materialManager;\n\t}\n\n\t// SCENES\n\n\t/**\n\t * Gets a scene by name.\n\t * @param {string|number} nameOrIndex - The name or zero-based index of the scene.\n\t * @returns {Scene}\n\t */\n\tgetScene(nameOrIndex) {\n\t\treturn this._scenes.get(nameOrIndex);\n\t}\n\n\t/**\n\t * Gets the number of scenes.\n\t * @returns {number}\n\t */\n\tgetNumScenes() {\n\t\treturn this._scenes.size;\n\t}\n\n\t/**\n\t * Adds a scene.\n\t * @param {string} name - The name of the scene to be added.\n\t * @returns {Scene}\n\t */\n\taddScene(name) {\n\t\treturn this._scenes.add('scene', name);\n\t}\n\n\t/**\n\t * Removes a scene.\n\t * @param {Scene|string|number} sceneOrNameOrIndex - The scene, name, or index to be removed.\n\t */\n\tremoveScene(sceneOrNameOrIndex) {\n\t\tthis._scenes.remove(sceneOrNameOrIndex);\n\t}\n\n\t/**\n\t * Gets the scene, entity, component, or controller described in the parameters.\n\t * @param {string} sceneNameOrIndex - The name of the scene.\n\t * @param {string} [entityNameOrIndex] - The name of the entity.\n\t * @param {string} [componentOrControllerType] - The type of the component or controller.\n\t * @param {number} [componentOrControllerTypeIndex = 0] - The zero-based index of the component or controller of the specified type, in case there are more than one of the same type.\n\t * @returns {Scene|Entity|BaseComponent|BaseController}\n\t */\n\tget(sceneNameOrIndex, entityNameOrIndex = undefined, componentOrControllerType = undefined, componentOrControllerTypeIndex = 0) {\n\t\tconst scene = this._scenes.get(sceneNameOrIndex);\n\t\tif (entityNameOrIndex === undefined || scene === null) {\n\t\t\treturn scene;\n\t\t}\n\t\treturn scene.get(entityNameOrIndex, componentOrControllerType, componentOrControllerTypeIndex);\n\t}\n\n\t// VIEWPORTS\n\n\t/**\n\t * Returns the viewport at the index.\n\t * @param {string|number} nameOrIndex - The name or zero-based index of the viewport to get.\n\t * @returns {Viewport}\n\t */\n\tgetViewport(nameOrIndex) {\n\t\treturn this._viewports.get(nameOrIndex);\n\t}\n\n\t/**\n\t * Returns the number of viewports.\n\t * @returns {number}\n\t */\n\tgetNumViewports() {\n\t\treturn this._viewports.size;\n\t}\n\n\t/**\n\t * Adds a viewport.\n\t * @param {string} [name=''] - A optional name to give the viewport.\n\t * @returns {Viewport}\n\t */\n\taddViewport(name = '') {\n\t\treturn this._viewports.add('viewport', name);\n\t}\n\n\t/**\n\t * Removes a viewport.\n\t * @param {Viewport|string|number} viewportOrNameOrIndex\n\t */\n\tremoveViewport(viewportOrNameOrIndex) {\n\t\tthis._viewports.remove(viewportOrNameOrIndex);\n\t}\n\n\t// TIME\n\n\t/**\n\t * Gets the in-app time in seconds since the J2000 epoch, which is at 2000-01-01T11:58:55.816 UTC. See {@link https://en.wikipedia.org/wiki/Epoch_(astronomy)#Julian_years_and_J2000}.\n\t * @returns {number}\n\t */\n\tgetTime() {\n\t\treturn this._time;\n\t}\n\n\t/**\n\t * Sets the in-app time.\n\t * @param {number} time - The time in seconds since the J2000 epoch.\n\t */\n\tsetTime(time) {\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t * Gets the in-app time rate in seconds per real-time second.\n\t * @returns {number}\n\t */\n\tgetTimeRate() {\n\t\treturn this._timeRate;\n\t}\n\n\t/**\n\t * Sets the in-app time rate.\n\t * @param {number} timeRate - The time rate in seconds per real-time second.\n\t */\n\tsetTimeRate(timeRate) {\n\t\tthis._timeRate = timeRate;\n\t}\n\n\t/**\n\t * Gets the average FPS over the last number of frames.\n\t * @returns {number}\n\t */\n\tgetFPS() {\n\t\treturn this._fps.getFPS();\n\t}\n\n\t/**\n\t * Gets a limit for the FPS.\n\t * @returns {number}\n\t */\n\tgetFPSLimit() {\n\t\treturn this._fpsLimit;\n\t}\n\n\t/**\n\t * Sets a limit for the FPS.\n\t * @param {number} limit\n\t */\n\tsetFPSLimit(limit) {\n\t\tthis._fpsLimit = limit;\n\t}\n\n\t/**\n\t * Gets the time in seconds it took to complete the last frame.\n\t * @returns {number}\n\t */\n\tgetDeltaTime() {\n\t\treturn this._realDeltaTime;\n\t}\n\n\t// COMPONENT REGISTRATION\n\n\t/**\n\t * Returns true if a component of the type is already registered.\n\t * @param {string} type\n\t */\n\tisComponentTypeRegistered(type) {\n\t\treturn Types.Components.has(type);\n\t}\n\n\t/**\n\t * Registers a component type.\n\t * @param {string} type - The name of the component that will be used with the addComponent function.\n\t * @param {typeof BaseComponent} typeConstructor - The component class to register.\n\t */\n\tregisterComponentType(type, typeConstructor) {\n\t\tif (Types.Components.has(type)) {\n\t\t\tthrow new Error('Already registered component type \\'' + type + '\\'.');\n\t\t}\n\t\tTypes.Components.set(type, typeConstructor);\n\t}\n\n\t/**\n\t * Unregisters a component type.\n\t * @param {string} type - The name of the component to unregister.\n\t */\n\tunregisterComponentType(type) {\n\t\tTypes.Components.delete(type);\n\t}\n\n\t/**\n\t * Returns true if a controller of the type is already registered.\n\t * @param {string} type\n\t */\n\tisControllerTypeRegistered(type) {\n\t\treturn Types.Controllers.has(type);\n\t}\n\n\t/**\n\t * Registers a controller type.\n\t * @param {string} type - The name of the controller that will be used with the addController function.\n\t * @param {typeof BaseController} typeConstructor - The controller class to register.\n\t */\n\tregisterControllerType(type, typeConstructor) {\n\t\tif (Types.Controllers.has(type)) {\n\t\t\tthrow new Error('Already registered controller type \\'' + type + '\\'.');\n\t\t}\n\t\tTypes.Controllers.set(type, typeConstructor);\n\t}\n\n\t/**\n\t * Unregisters a controller type.\n\t * @param {string} type - The name of the controller to unregister.\n\t */\n\tunregisterControllerType(type) {\n\t\tTypes.Controllers.delete(type);\n\t}\n\n\t// CALLBACKS AND PROMISES\n\n\t/**\n\t * Returns a promise that resolves at the end of the current frame.\n\t * It is useful for letting controllers and components do a single update.\n\t * @returns {Promise<void>}\n\t */\n\twaitUntilNextFrame() {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.addCallback(() => {\n\t\t\t\tresolve();\n\t\t\t}, false);\n\t\t});\n\t}\n\n\t/**\n\t * Adds a callback to be called at the end of the next frame.\n\t * @param {() => any} callback - The callback to be called.\n\t * @param {boolean} recurring - If true it will run at the end of every frame. If not, it will only run once at the end of the next frame.\n\t */\n\taddCallback(callback, recurring) {\n\t\tthis._callbacks.push({\n\t\t\tcallback: callback,\n\t\t\trecurring: recurring\n\t\t});\n\t}\n\n\t/**\n\t * Removes a callback added via `addCallback()`. If there were multiple, only the first found will be removed.\n\t * @param {() => any} callback - The callback to be removed.\n\t */\n\tremoveCallback(callback) {\n\t\tthis._callbacksToRemove.push(callback);\n\t}\n\n\t// INTERNALS\n\n\t/**\n\t * Returns the ThreeJS renderer for use by viewports and components.\n\t * @returns {THREE.WebGLRenderer}\n\t * @internal\n\t */\n\t__getThreeJsRenderer() {\n\t\treturn this._threeJsRenderer;\n\t}\n\n\t/**\n\t * The main loop. The requestAnimationFrame call calls this at the start of every frame.\n\t * @private\n\t */\n\t_loop() {\n\t\ttry {\n\t\t\t// Update the time according to the time rate and the real-world elapsed time.\n\t\t\tconst thisAppTime = Date.now();\n\t\t\tthis._realDeltaTime = (thisAppTime - this._lastAppTime) / 1000.0;\n\n\t\t\t// If not enough time has elapsed, don't run the loop.\n\t\t\tif (this._realDeltaTime < 1.0 / this._fpsLimit) {\n\t\t\t\trequestAnimationFrame(this._thisLoop);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastAppTime = thisAppTime;\n\t\t\tthis._fps.update(this._realDeltaTime);\n\t\t\tthis._time += this._timeRate * this._realDeltaTime;\n\n\t\t\t// Update the size of the divs to fill the box when the root div has changed.\n\t\t\tif (this._renderSize.x !== this._rootDiv.clientWidth || this._renderSize.y !== this._rootDiv.clientHeight) {\n\t\t\t\tthis._renderSize.thaw();\n\t\t\t\tthis._renderSize.set(this._rootDiv.clientWidth, this._rootDiv.clientHeight);\n\t\t\t\tthis._renderSize.freeze();\n\t\t\t\tthis._threeJsRenderer.setSize(this._renderSize.x, this._renderSize.y, false);\n\t\t\t}\n\n\t\t\t// Update the scene.\n\t\t\tfor (let i = 0; i < this._scenes.size; i++) {\n\t\t\t\tthis._scenes.get(i).__update();\n\t\t\t}\n\n\t\t\t// Update the viewport-dependent variables.\n\t\t\tfor (let i = 0; i < this._viewports.size; i++) {\n\t\t\t\tthis._viewports.get(i).__updateViewportVariables();\n\t\t\t}\n\n\t\t\t// Update the camera-non-specific visual parts of the entities in each scene.\n\t\t\tfor (let i = 0; i < this._scenes.size; i++) {\n\t\t\t\tthis._scenes.get(i).__updateVisuals();\n\t\t\t}\n\n\t\t\t// Fill the screen with black.\n\t\t\tthis._threeJsRenderer.setViewport(0, 0, this._renderSize.x, this._renderSize.y);\n\t\t\tthis._threeJsRenderer.setScissor(0, 0, this._renderSize.x, this._renderSize.y);\n\t\t\tthis._threeJsRenderer.clear();\n\n\t\t\t// Draw the viewports.\n\t\t\tfor (let i = 0; i < this._viewports.size; i++) {\n\t\t\t\tthis._viewports.get(i).__render();\n\t\t\t}\n\n\t\t\t// Remove any callbacks requested.\n\t\t\tfor (let i = 0, l = this._callbacksToRemove.length; i < l; i++) {\n\t\t\t\tfor (let j = 0, m = this._callbacks.length; j < m; j++) {\n\t\t\t\t\tif (this._callbacks[j].callback === this._callbacksToRemove[i]) {\n\t\t\t\t\t\tthis._callbacks.splice(j, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._callbacksToRemove = [];\n\n\t\t\t// Call the callbacks.\n\t\t\tfor (let i = 0; i < this._callbacks.length; i++) {\n\t\t\t\tthis._callbacks[i].callback();\n\t\t\t\tif (!this._callbacks[i].recurring) {\n\t\t\t\t\tthis._callbacksToRemove.push(this._callbacks[i].callback);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Make sure the input is ready for the next frame.\n\t\t\tthis._input.__resetStatesForNextFrame();\n\t\t}\n\t\tcatch (error) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(error);\n\t\t\tthrow error;\n\t\t}\n\n\t\t// Tell the browser to give us another frame.\n\t\trequestAnimationFrame(this._thisLoop);\n\t}\n}\n","export * from './internal';\n","/** @module pioneer */\nimport {\n\tEngine,\n\tVector2,\n\tViewport\n} from './internal';\n\n/**\n * A single touch on the device by the user.\n */\nclass Touch {\n\t/**\n\t * The constructor.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The browser-given identifier of the touch. Each identifier is unique. 0 is always the mouse left-click.\n\t\t * @type {number}\n\t\t */\n\t\tthis.identifier = 0;\n\n\t\t/**\n\t\t * The position relative to the root div where the touch initially occurred.\n\t\t * @type {Vector2}\n\t\t */\n\t\tthis.pressedPosition = new Vector2();\n\n\t\t/**\n\t\t * The duration so-far of the touch.\n\t\t * @type {number}\n\t\t */\n\t\tthis.pressedTime = 0;\n\n\t\t/**\n\t\t * The position relative to the root div where the touch was moved to last frame.\n\t\t * @type {Vector2}\n\t\t */\n\t\tthis.lastFramePosition = new Vector2();\n\n\t\t/**\n\t\t * The current position relative to the root div of the touch.\n\t\t * @type {Vector2}\n\t\t */\n\t\tthis.thisFramePosition = new Vector2();\n\t}\n}\n\n/**\n * The input system. Handles all the dragging, rotating, zooming, keyboard, touch, etc.\n * @hideconstructor\n */\nexport class Input {\n\t/**\n\t * Constructs the input manager.\n\t * @param {Engine} engine - The Pioneer engine.\n\t */\n\tconstructor(engine) {\n\t\t/**\n\t\t * The engine.\n\t\t * @type {Engine}\n\t\t * @private\n\t\t */\n\t\tthis._engine = engine;\n\n\t\t/**\n\t\t * The active viewport. The viewport is activated when a left-click or touch happens.\n\t\t * @type {Viewport}\n\t\t * @private\n\t\t */\n\t\tthis._activeViewport = null;\n\n\t\t/**\n\t\t * The amount that the cursor was tragged in the last frame.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._draggedOffset = new Vector2();\n\t\tthis._draggedOffset.freeze();\n\n\t\t/**\n\t\t * The amount that was zoomed in the last frame.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._zoomedOffset = 0;\n\n\t\t/**\n\t\t * The amount that was rotated in the last frame.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._rotatedOffset = 0;\n\n\t\t/**\n\t\t * Is shift pressed?\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._shiftPressed = false;\n\n\t\t/**\n\t\t * The keys that are pressed.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._keysPressed = new Set();\n\n\t\t/**\n\t\t * The modifiers keys that are pressed.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._modifierKeysPressed = new Set();\n\n\t\t/**\n\t\t * The maximum time in seconds before it is considered a drag.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxSelectTime = 0.5;\n\n\t\t/**\n\t\t * Minimum distance to move the press before it is considered a drag.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxSelectDistance = 5;\n\n\t\t/**\n\t\t * The position of the cursor.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._cursorPosition = new Vector2();\n\n\t\t/**\n\t\t * Did the user select something last frame?\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._selected = false;\n\n\t\t/**\n\t\t * If selected, this is the position of the selection.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._selectedPosition = new Vector2();\n\t\tthis._selectedPosition.freeze();\n\n\t\t/**\n\t\t * The current touches.\n\t\t * @type {Touch[]}\n\t\t * @private\n\t\t */\n\t\tthis._touches = [];\n\n\t\t// Setup the event listeners.\n\t\twindow.addEventListener('blur', () => {\n\t\t\tthis._touches = [];\n\t\t\tthis._keysPressed.clear();\n\t\t\tthis._modifierKeysPressed.clear();\n\t\t\tthis._shiftPressed = false;\n\t\t});\n\t\twindow.addEventListener('keydown', event => {\n\t\t\t// Don't process key down events if the user is focused on writing text.\n\t\t\tif (event.target instanceof HTMLElement && ['INPUT', 'SELECT', 'TEXTAREA'].includes(event.target.tagName)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.key === 'Shift') {\n\t\t\t\tthis._shiftPressed = true;\n\t\t\t}\n\t\t\t// If a modifier key is hit that isn't shift, clear all pressed keys.\n\t\t\telse if (modifierKeys.has(event.key)) {\n\t\t\t\tthis._modifierKeysPressed.add(event.key.toLowerCase());\n\t\t\t\tthis._keysPressed.clear();\n\t\t\t\tthis._shiftPressed = false;\n\t\t\t}\n\t\t\telse if (this._modifierKeysPressed.size === 0) {\n\t\t\t\tthis._keysPressed.add(event.key.toLowerCase());\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('keyup', event => {\n\t\t\tif (event.key === 'Shift') {\n\t\t\t\tthis._shiftPressed = false;\n\t\t\t}\n\t\t\telse if (modifierKeys.has(event.key)) {\n\t\t\t\tthis._modifierKeysPressed.delete(event.key.toLowerCase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._keysPressed.delete(event.key.toLowerCase());\n\t\t\t}\n\t\t});\n\t\tthis._engine.getRootDiv().addEventListener('mousedown', event => {\n\t\t\tif (event.button === 0) {\n\t\t\t\t// Unfocus any other elements on the page.\n\t\t\t\tif (document.activeElement instanceof HTMLElement) {\n\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t}\n\n\t\t\t\t// If this is the first touch.\n\t\t\t\tif (this._touches.length === 0) {\n\t\t\t\t\tconst rootDivBounds = this._engine.getRootDiv().getBoundingClientRect();\n\n\t\t\t\t\t// Check for an existing touch with the same identifier.\n\t\t\t\t\tlet touch = null;\n\t\t\t\t\tfor (let j = 0; j < this._touches.length; j++) {\n\t\t\t\t\t\tif (this._touches[j].identifier === 0) {\n\t\t\t\t\t\t\ttouch = this._touches[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (touch === null) {\n\t\t\t\t\t\ttouch = new Touch();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create the new touch.\n\t\t\t\t\ttouch.identifier = 0;\n\t\t\t\t\ttouch.pressedPosition.set(event.clientX - rootDivBounds.left, event.clientY - rootDivBounds.top);\n\t\t\t\t\ttouch.pressedTime = Date.now();\n\t\t\t\t\ttouch.lastFramePosition.copy(touch.pressedPosition);\n\t\t\t\t\ttouch.thisFramePosition.copy(touch.pressedPosition);\n\t\t\t\t\tthis._touches.push(touch);\n\n\t\t\t\t\t// Updates active viewport to the one clicked\n\t\t\t\t\tthis._updateActiveViewport();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('mousemove', event => {\n\t\t\tconst rootDivBounds = this._engine.getRootDiv().getBoundingClientRect();\n\t\t\tif (this._touches.length === 1 && this._touches[0].identifier === 0) {\n\t\t\t\tconst touch = this._touches[0];\n\t\t\t\ttouch.thisFramePosition.set(event.clientX - rootDivBounds.left, event.clientY - rootDivBounds.top);\n\n\t\t\t\t// Update the dragged offset and the latest touch position.\n\t\t\t\tthis._draggedOffset.thaw();\n\t\t\t\tthis._draggedOffset.sub(touch.thisFramePosition, touch.lastFramePosition);\n\n\t\t\t\t// If the cursor hasn't moved enough, there is no drag.\n\t\t\t\tconst pressedPositionDistance = Math.max(Math.abs(touch.thisFramePosition.x - touch.pressedPosition.x), Math.abs(touch.thisFramePosition.y - touch.pressedPosition.y));\n\t\t\t\tif ((Date.now() - touch.pressedTime) / 1000 <= this._maxSelectTime && pressedPositionDistance <= this._maxSelectDistance) {\n\t\t\t\t\tthis._draggedOffset.set(0, 0);\n\t\t\t\t}\n\t\t\t\tthis._draggedOffset.freeze();\n\t\t\t}\n\t\t\tif (this._touches.length <= 1) {\n\t\t\t\tthis._cursorPosition.set(event.clientX - rootDivBounds.left, event.clientY - rootDivBounds.top);\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('mouseup', event => {\n\t\t\tif (event.button === 0) {\n\t\t\t\tif (this._touches.length === 1 && this._touches[0].identifier === 0) {\n\t\t\t\t\tconst rootDivBounds = this._engine.getRootDiv().getBoundingClientRect();\n\t\t\t\t\tconst touch = this._touches[0];\n\t\t\t\t\ttouch.thisFramePosition.set(event.clientX - rootDivBounds.left, event.clientY - rootDivBounds.top);\n\t\t\t\t\tconst pressedPositionDistance = Math.max(Math.abs(touch.thisFramePosition.x - touch.pressedPosition.x), Math.abs(touch.thisFramePosition.y - touch.pressedPosition.y));\n\t\t\t\t\tif ((Date.now() - touch.pressedTime) / 1000 <= this._maxSelectTime && pressedPositionDistance <= this._maxSelectDistance) {\n\t\t\t\t\t\tthis._selected = true;\n\t\t\t\t\t\tthis._selectedPosition.thaw();\n\t\t\t\t\t\tthis._selectedPosition.copy(touch.thisFramePosition);\n\t\t\t\t\t\tthis._selectedPosition.freeze();\n\t\t\t\t\t}\n\t\t\t\t\tthis._touches.splice(0, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._engine.getRootDiv().addEventListener('wheel', event => {\n\t\t\tif (event.deltaY) {\n\t\t\t\tthis._zoomedOffset += event.deltaY * 0.1;\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t}, { passive: false });\n\t\tthis._engine.getRootDiv().addEventListener('touchstart', event => {\n\t\t\tconst rootDivBounds = this._engine.getRootDiv().getBoundingClientRect();\n\t\t\tfor (let i = 0; i < event.changedTouches.length; i++) {\n\t\t\t\tconst touchEvent = event.changedTouches[i];\n\n\t\t\t\t// Check for an existing touch with the same identifier.\n\t\t\t\tlet touch = null;\n\t\t\t\tfor (let j = 0; j < this._touches.length; j++) {\n\t\t\t\t\tif (this._touches[j].identifier === touchEvent.identifier) {\n\t\t\t\t\t\ttouch = this._touches[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (touch === null) {\n\t\t\t\t\ttouch = new Touch();\n\t\t\t\t}\n\n\t\t\t\t// Create the new touch.\n\t\t\t\ttouch.identifier = touchEvent.identifier;\n\t\t\t\ttouch.pressedPosition.thaw();\n\t\t\t\ttouch.pressedPosition.set(touchEvent.pageX - window.pageXOffset - rootDivBounds.left, touchEvent.pageY - window.pageYOffset - rootDivBounds.top);\n\t\t\t\ttouch.pressedPosition.freeze();\n\t\t\t\ttouch.pressedTime = Date.now();\n\t\t\t\ttouch.lastFramePosition.copy(touch.pressedPosition);\n\t\t\t\ttouch.thisFramePosition.copy(touch.pressedPosition);\n\t\t\t\tthis._touches.push(touch);\n\t\t\t\tif (this._touches.length === 1) {\n\t\t\t\t\tthis._cursorPosition.copy(touch.thisFramePosition);\n\t\t\t\t}\n\n\t\t\t\t// Updates active viewport to the one touched\n\t\t\t\tthis._updateActiveViewport();\n\t\t\t}\n\t\t}, { passive: false });\n\t\twindow.addEventListener('touchmove', event => {\n\t\t\tconst rootDivBounds = this._engine.getRootDiv().getBoundingClientRect();\n\t\t\tfor (let i = 0; i < event.changedTouches.length; i++) {\n\t\t\t\tconst touchEvent = event.changedTouches[i];\n\n\t\t\t\tfor (let j = 0; j < this._touches.length; j++) {\n\t\t\t\t\tconst touch = this._touches[j];\n\t\t\t\t\tif (touch.identifier === touchEvent.identifier) {\n\t\t\t\t\t\ttouch.thisFramePosition.set(touchEvent.pageX - window.pageXOffset - rootDivBounds.left, touchEvent.pageY - window.pageYOffset - rootDivBounds.top);\n\t\t\t\t\t\tif (this._touches.length === 1) {\n\t\t\t\t\t\t\tthis._draggedOffset.thaw();\n\t\t\t\t\t\t\tthis._draggedOffset.sub(touch.thisFramePosition, touch.lastFramePosition);\n\t\t\t\t\t\t\t// If the cursor hasn't moved enough, there is no drag.\n\t\t\t\t\t\t\tconst pressedPositionDistance = Math.max(Math.abs(touch.thisFramePosition.x - touch.pressedPosition.x), Math.abs(touch.thisFramePosition.y - touch.pressedPosition.y));\n\t\t\t\t\t\t\tif ((Date.now() - touch.pressedTime) / 1000 <= this._maxSelectTime && pressedPositionDistance <= this._maxSelectDistance) {\n\t\t\t\t\t\t\t\tthis._draggedOffset.set(0, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._draggedOffset.freeze();\n\t\t\t\t\t\t\tthis._cursorPosition.copy(touch.thisFramePosition);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this._touches.length === 2) {\n\t\t\t\t\t\t\tconst touchDiff = Vector2.pool.get();\n\t\t\t\t\t\t\ttouchDiff.sub(this._touches[i].thisFramePosition, this._touches[1 - i].thisFramePosition);\n\t\t\t\t\t\t\tconst touchOffset = Vector2.pool.get();\n\t\t\t\t\t\t\ttouchOffset.sub(this._touches[i].thisFramePosition, this._touches[i].lastFramePosition);\n\t\t\t\t\t\t\tconst dot = touchOffset.dot(touchDiff) / touchDiff.magnitude() / touchOffset.magnitude();\n\t\t\t\t\t\t\tconst cross = touchOffset.cross(touchDiff) / touchDiff.magnitude() / touchOffset.magnitude();\n\t\t\t\t\t\t\tif (dot < -0.7) {\n\t\t\t\t\t\t\t\tthis._zoomedOffset += -(dot + 0.7) * touchOffset.magnitude();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (dot > 0.7) {\n\t\t\t\t\t\t\t\tthis._zoomedOffset += -(dot - 0.7) * touchOffset.magnitude();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (Math.abs(cross) > 0.3) {\n\t\t\t\t\t\t\t\tthis._rotatedOffset += cross * touchOffset.magnitude();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tVector2.pool.release(touchOffset);\n\t\t\t\t\t\t\tVector2.pool.release(touchDiff);\n\n\t\t\t\t\t\t\t// If the touch hasn't moved enough, there is no zoom.\n\t\t\t\t\t\t\tconst pressedPositionDistance = Math.max(Math.abs(touch.thisFramePosition.x - touch.pressedPosition.x), Math.abs(touch.thisFramePosition.y - touch.pressedPosition.y));\n\t\t\t\t\t\t\tif ((Date.now() - touch.pressedTime) / 1000 <= this._maxSelectTime && pressedPositionDistance <= this._maxSelectDistance) {\n\t\t\t\t\t\t\t\tthis._zoomedOffset = 0;\n\t\t\t\t\t\t\t\tthis._rotatedOffset = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('touchend', event => {\n\t\t\tconst rootDivBounds = this._engine.getRootDiv().getBoundingClientRect();\n\t\t\tfor (let i = 0; i < event.changedTouches.length; i++) {\n\t\t\t\tconst touchEvent = event.changedTouches[i];\n\t\t\t\tfor (let j = 0; j < this._touches.length; j++) {\n\t\t\t\t\tconst touch = this._touches[j];\n\t\t\t\t\tif (touch.identifier === touchEvent.identifier) {\n\t\t\t\t\t\ttouch.thisFramePosition.set(touchEvent.pageX - window.pageXOffset - rootDivBounds.left, touchEvent.pageY - window.pageYOffset - rootDivBounds.top);\n\t\t\t\t\t\tif (this._touches.length === 1) {\n\t\t\t\t\t\t\tconst pressedPositionDistance = Math.max(Math.abs(touch.thisFramePosition.x - touch.pressedPosition.x), Math.abs(touch.thisFramePosition.y - touch.pressedPosition.y));\n\t\t\t\t\t\t\tif ((Date.now() - touch.pressedTime) / 1000 <= this._maxSelectTime && pressedPositionDistance <= this._maxSelectDistance) {\n\t\t\t\t\t\t\t\tthis._selected = true;\n\t\t\t\t\t\t\t\tthis._selectedPosition.thaw();\n\t\t\t\t\t\t\t\tthis._selectedPosition.copy(touch.thisFramePosition);\n\t\t\t\t\t\t\t\tthis._selectedPosition.freeze();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._touches.splice(j, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('touchcancel', () => {\n\t\t});\n\t}\n\n\t/**\n\t * Return the current active viewport.\n\t * @returns {Viewport}\n\t */\n\tgetActiveViewport() {\n\t\treturn this._activeViewport;\n\t}\n\n\t/**\n\t * Gets how much the user dragged this frame.\n\t * @returns {Vector2}\n\t */\n\tgetDraggedOffset() {\n\t\treturn this._draggedOffset;\n\t}\n\n\t/**\n\t * Returns how much the user zoomed this frame.\n\t * @returns {number}\n\t */\n\tgetZoomedOffset() {\n\t\treturn this._zoomedOffset;\n\t}\n\n\t/**\n\t * Returns how much the user rotated this frame.\n\t * @returns {number}\n\t */\n\tgetRotatedOffset() {\n\t\treturn this._rotatedOffset;\n\t}\n\n\t/**\n\t * Returns true if the shift key is down this frame.\n\t * @returns {boolean}\n\t */\n\tisShiftPressed() {\n\t\treturn this._shiftPressed;\n\t}\n\n\t/**\n\t * Returns true if the key is pressed.\n\t * @param {string} key - The key (in lower-case) to query.\n\t * @returns {boolean}\n\t */\n\tisKeyPressed(key) {\n\t\treturn this._keysPressed.has(key);\n\t}\n\n\t/**\n\t * Did the user click (or tap) last frame?\n\t * @returns {boolean}\n\t */\n\tisSelected() {\n\t\treturn this._selected;\n\t}\n\n\t/**\n\t * Gets the position when the user last selected, relative to the root div.\n\t * @returns {Vector2}\n\t */\n\tgetSelectedPosition() {\n\t\treturn this._selectedPosition;\n\t}\n\n\t/**\n\t * Gets the position of the cursor or the last touch.\n\t * @returns {Vector2}\n\t */\n\tgetCursorPosition() {\n\t\treturn this._cursorPosition;\n\t}\n\n\t/**\n\t * Manually set the active viewport. Called by a viewport on construction if there is no active viewport.\n\t * @param {Viewport} viewport - The viewport to set.\n\t * @internal\n\t */\n\t__setActiveViewport(viewport) {\n\t\tthis._activeViewport = viewport;\n\t}\n\n\t/**\n\t * Resets all of the values for the next frame. Called by Engine only.\n\t * @internal\n\t */\n\t__resetStatesForNextFrame() {\n\t\tfor (let i = 0; i < this._touches.length; i++) {\n\t\t\tthis._touches[i].lastFramePosition.copy(this._touches[i].thisFramePosition);\n\t\t}\n\n\t\tthis._selected = false;\n\t\tthis._altSelected = false;\n\t\tthis._draggedOffset.thaw();\n\t\tthis._draggedOffset.set(0, 0);\n\t\tthis._draggedOffset.freeze();\n\t\tthis._zoomedOffset = 0;\n\t\tthis._rotatedOffset = 0;\n\t}\n\n\t/**\n\t * Automatically updates the active viewport. Called by a mouse down or touch start event.\n\t * @private\n\t */\n\t_updateActiveViewport() {\n\t\tthis._activeViewport = null;\n\t\tfor (let i = this._engine.getNumViewports() - 1; i >= 0; i--) {\n\t\t\tconst pixelBounds = this._engine.getViewport(i).getBounds();\n\t\t\tif (this._engine.getViewport(i).isEnabled() && pixelBounds.contains(this._touches[0].pressedPosition)) {\n\t\t\t\tthis._activeViewport = this._engine.getViewport(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * All modifier keys in Javascript, from https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values.\n */\nconst modifierKeys = new Set(['Alt', 'AltGraph', 'CapsLock', 'Control', 'Fn', 'FnLock', 'Hyper', 'Meta', 'NumLock', 'ScrollLock', 'Shift', 'Super', 'Symbol', 'SymbolLock']);\n","// Three.js\nexport * as THREE from 'three';\nexport { EffectComposer as ThreeJsEffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nexport { GLTFLoader as ThreeJsGLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nexport { KTXLoader as ThreeJsKTXLoader } from 'three/examples/jsm/loaders/KTXLoader';\nexport { OutlinePass as ThreeJsOutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass.js';\nexport { RenderPass as ThreeJsRenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nexport { UnrealBloomPass as ThreeJsUnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\n\n// Shader Chunks\nexport { ShaderChunkLogDepth } from './shaders/log_depth';\n\n// Utils with 0 dependencies\nexport * from './utils/base_ref';\nexport * from './utils/collection';\nexport * from './utils/dependency_graph';\nexport * from './utils/fast_iterable';\nexport * from './utils/fps';\nexport * from './utils/freezable';\nexport * from './utils/math_utils';\nexport * from './utils/pool';\nexport * from './utils/reader';\nexport * from './utils/sort';\nexport * from './utils/tile';\nexport * from './utils/time_utils';\nexport * from './utils/wait_until';\n\n// Utils with only one of the above dependencies.\nexport * from './utils/aer';\nexport * from './utils/color';\nexport * from './utils/fast_map';\nexport * from './utils/fast_set';\nexport * from './utils/geometry';\nexport * from './utils/interval';\nexport * from './utils/orbital_elements';\nexport * from './utils/rect';\nexport * from './utils/quaternion';\nexport * from './utils/vector2';\nexport * from './utils/vector3';\n\n// Utils with only one of the above dependencies.\nexport * from './utils/cache';\nexport * from './utils/component_ref';\nexport * from './utils/controller_ref';\nexport * from './utils/cube_map';\nexport * from './utils/entity_ref';\nexport * from './utils/lat_lon_alt';\nexport * from './utils/line_mesh';\nexport * from './utils/material_utils_phong';\nexport * from './utils/material_utils_standard';\nexport * from './utils/material_utils';\nexport * from './utils/shader_fix';\nexport * from './utils/sprite_particles';\nexport * from './utils/texture_lod';\nexport * from './utils/three_js_helper';\n\n// Core\nexport * from './capabilities';\nexport * from './config';\nexport * from './downloader';\nexport * from './engine';\nexport * from './scene/entity';\nexport * from './scene/entity_item';\nexport * from './input';\nexport * from './material_manager';\nexport * from './scene/scene';\nexport * from './texture_loader';\nexport * from './texture_loader_compressed';\nexport * from './version';\nexport * from './viewport';\n\n// Components\nexport * from './scene/components/base_component';\nexport * from './scene/components/atmosphere_component';\nexport * from './scene/components/camera_component';\nexport * from './scene/components/cmts_component';\nexport * from './scene/components/comet_tail_component';\nexport * from './scene/components/connected_sprite_component';\nexport * from './scene/components/div_component';\nexport * from './scene/components/dynamic_environment_map_component';\nexport * from './scene/components/gizmo_component';\nexport * from './scene/components/label_component';\nexport * from './scene/components/light_source_component';\nexport * from './scene/components/model_component';\nexport * from './scene/components/orbital_particles_component';\nexport * from './scene/components/particle_spray_component';\nexport * from './scene/components/rings_component';\nexport * from './scene/components/skybox_component';\nexport * from './scene/components/spheroid_component';\nexport * from './scene/components/spheroid_lod_component';\nexport * from './scene/components/spout_component';\nexport * from './scene/components/sprite_component';\nexport * from './scene/components/starfield_component';\nexport * from './scene/components/trail_component';\n\n// Controllers\nexport * from './scene/controllers/base_controller';\nexport * from './scene/controllers/align_controller';\nexport * from './scene/controllers/animdata_controller';\nexport * from './scene/controllers/coverage_controller';\nexport * from './scene/controllers/dynamo_controller';\nexport * from './scene/controllers/fixed_controller';\nexport * from './scene/controllers/fixed_to_parent_controller';\nexport * from './scene/controllers/free_fly_controller';\nexport * from './scene/controllers/ground_clamp_controller';\nexport * from './scene/controllers/keyframe_controller';\nexport * from './scene/controllers/look_controller';\nexport * from './scene/controllers/model_animate_controller';\nexport * from './scene/controllers/orbit_controller';\nexport * from './scene/controllers/orbit_keyframe_controller';\nexport * from './scene/controllers/orbital_elements_controller';\nexport * from './scene/controllers/pick_controller';\nexport * from './scene/controllers/roll_controller';\nexport * from './scene/controllers/rotate_controller';\nexport * from './scene/controllers/rotate_by_entity_orientation_controller';\nexport * from './scene/controllers/scale_controller';\nexport * from './scene/controllers/select_controller';\nexport * from './scene/controllers/set_parent_controller';\nexport * from './scene/controllers/spin_controller';\nexport * from './scene/controllers/tap_controller';\nexport * from './scene/controllers/transition_controller';\nexport * from './scene/controllers/translate_controller';\nexport * from './scene/controllers/zoom_controller';\n\n// The types that imports all of the above components and controllers.\nexport * from './scene/types';\n","/** @module pioneer */\nimport {\n\tCapabilities,\n\tDownloader,\n\tShaderFix,\n\tTHREE\n} from './internal';\n\n// Preloaded shaders.\nimport { BasicShader } from './shaders/basic';\nimport { BasicAlphaShader } from './shaders/basic_alpha';\nimport { ConnectedSpriteShader } from './shaders/connected_sprite';\nimport { LineShader } from './shaders/line';\nimport { PlumesShader } from './shaders/plumes';\nimport { SpriteShader } from './shaders/sprite';\nimport { SpriteParticlesShader } from './shaders/sprite_particles';\nimport { TrailShader } from './shaders/trail';\n\n/**\n * A generic resource.\n * @template Type\n */\nclass Resource {\n\t/**\n\t * Constructs the class.\n\t * @param {Type} value\n\t */\n\tconstructor(value) {\n\t\t/**\n\t\t * The value of the resource.\n\t\t * @type {Type}\n\t\t */\n\t\tthis.value = value;\n\n\t\t/**\n\t\t * How many of this resource are currently being used.\n\t\t * @type {number}\n\t\t */\n\t\tthis.useCount = 0;\n\t}\n}\n\n/**\n * Material manager. Constructs materials from nodes.\n */\nexport class MaterialManager {\n\t/**\n\t * @param {Downloader} downloader\n\t */\n\tconstructor(downloader) {\n\t\t/**\n\t\t * The downloader.\n\t\t * @type {Downloader}\n\t\t * @private\n\t\t */\n\t\tthis._downloader = downloader;\n\n\t\t/**\n\t\t * A mapping from urls to materials.\n\t\t * @type {Map<string, Resource<THREE.RawShaderMaterial>>}\n\t\t * @private\n\t\t */\n\t\tthis._cache = new Map();\n\n\t\t/**\n\t\t * A mapping from cloned materials to the urls.\n\t\t * @type {Map<THREE.RawShaderMaterial, string>}\n\t\t * @private\n\t\t */\n\t\tthis._clonedMaterials = new Map();\n\n\t\t/**\n\t\t * A mapping from urls to promises that resolve to materials.\n\t\t * @type {Map<string, Promise<Resource<THREE.RawShaderMaterial>>>}\n\t\t * @private\n\t\t */\n\t\tthis._promises = new Map();\n\n\t\t// Preload node types that are required for the built-in components.\n\t\tthis._preload();\n\t}\n\n\t/**\n\t * Gets a material.\n\t * @param {string} url\n\t * @returns {Promise<THREE.RawShaderMaterial>}\n\t */\n\tasync get(url) {\n\t\t// If it is already loaded, return a resolved promise.\n\t\tlet resource = this._cache.get(url);\n\n\t\t// If it is loading right now, return the existing promise.\n\t\tif (resource === undefined) {\n\t\t\tconst promise = this._promises.get(url);\n\t\t\tif (promise !== undefined) {\n\t\t\t\tresource = await promise;\n\t\t\t}\n\t\t}\n\n\t\t// Load the material.\n\t\tif (resource === undefined) {\n\t\t\tconst download = await this._downloader.download(url, false);\n\t\t\tif (download.status !== 'completed' || typeof download.content !== 'string') {\n\t\t\t\tthrow new Error('Failed to download material \"' + url + '\".');\n\t\t\t}\n\t\t\tconst obj = JSON.parse(download.content);\n\t\t\tresource = new Resource(await this._load(url, obj));\n\t\t\tthis._cache.set(url, resource);\n\t\t}\n\n\t\t// Increment the use count and return it.\n\t\tresource.useCount += 1;\n\t\treturn this._clone(resource.value, url);\n\t}\n\n\t/**\n\t * Gets a pre-loaded material without using promises.\n\t * @param {string} url\n\t * @returns {THREE.RawShaderMaterial}\n\t */\n\tgetPreloaded(url) {\n\t\t// If it is already loaded, return a resolved promise.\n\t\tconst resource = this._cache.get(url);\n\t\tif (resource === undefined) {\n\t\t\tthrow new Error('Invalid pre-loaded material \"' + url + '\".');\n\t\t}\n\t\tresource.useCount += 1;\n\t\treturn this._clone(resource.value, url);\n\t}\n\n\t/**\n\t * Releases a material, unloading it if necessary.\n\t * @param {THREE.RawShaderMaterial} material\n\t */\n\trelease(material) {\n\t\t// Get the url from the material.\n\t\tconst url = this._clonedMaterials.get(material);\n\t\tif (url === undefined) {\n\t\t\treturn;\n\t\t}\n\t\t// Remove the cloned material.\n\t\tthis._clonedMaterials.delete(material);\n\t\t// Get the resource from the url.\n\t\tconst resource = this._cache.get(url);\n\t\tif (resource) {\n\t\t\tresource.useCount -= 1;\n\t\t\t// If it isn't be used by anyone, unload the original material.\n\t\t\tif (resource.useCount === 0) {\n\t\t\t\tthis._unload(resource.value);\n\t\t\t\tthis._cache.delete(url);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Unloads a material.\n\t * @param {THREE.RawShaderMaterial} material\n\t * @private\n\t */\n\t_unload(material) {\n\t\tconst uniforms = material.uniforms;\n\t\tfor (const uniform in uniforms) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(uniforms, uniform) && uniforms[uniform].value !== null && uniforms[uniform].value.dispose !== undefined) {\n\t\t\t\tuniforms[uniform].value.dispose();\n\t\t\t}\n\t\t}\n\t\tmaterial.dispose();\n\t}\n\n\t/**\n\t * Preloads a given list of shaders for quick access in the engine.\n\t * @private\n\t */\n\t_preload() {\n\t\t// Declare the preloaded shaders.\n\t\t/** @type {Map<string, any>} */\n\t\tconst shaders = new Map();\n\t\tshaders.set('basic', BasicShader);\n\t\tshaders.set('basic_alpha', BasicAlphaShader);\n\t\tshaders.set('connected_sprite', ConnectedSpriteShader);\n\t\tshaders.set('line', LineShader);\n\t\tshaders.set('plumes', PlumesShader);\n\t\tshaders.set('sprite', SpriteShader);\n\t\tshaders.set('sprite_particles', SpriteParticlesShader);\n\t\tshaders.set('trail', TrailShader);\n\n\t\t// Load them.\n\t\tfor (const [name, json] of shaders) {\n\t\t\tconst material = this._load(name, json);\n\t\t\tconst resource = new Resource(material);\n\t\t\tresource.useCount += 1;\n\t\t\tthis._cache.set(name, resource);\n\t\t}\n\t}\n\n\t/**\n\t * Loads a shader from JSON.\n\t * @param {string} url\n\t * @param {any} json\n\t * @returns {THREE.RawShaderMaterial}\n\t * @private\n\t */\n\t_load(url, json) {\n\t\ttry {\n\t\t\t// Generate ThreeJS uniform objects\n\t\t\t/** @type {Object<string, THREE.Uniform>} */\n\t\t\tconst uniforms = {};\n\t\t\tif (json.uniforms) {\n\t\t\t\tfor (const [name, type] of Object.entries(json.uniforms)) {\n\t\t\t\t\t// Don't add the Three.js pre-defined uniforms, because they would overwrite them when rendering.\n\t\t\t\t\tif (['modelMatrix', 'modelViewMatrix', 'projectionMatrix', 'viewMatrix', 'normalMatrix', 'cameraPosition'].includes(name)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tuniforms[name] = new THREE.Uniform(this._getUniformValueFromType(type));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Process some properties.\n\t\t\tlet transparent = false;\n\t\t\tlet depthWrite = true;\n\t\t\tlet side = /** @type {THREE.Side} */(THREE.FrontSide);\n\t\t\tlet blending = /** @type {THREE.Blending} */(THREE.NoBlending);\n\t\t\tif (json.properties) {\n\t\t\t\tif (json.properties.transparent === true) {\n\t\t\t\t\ttransparent = true;\n\t\t\t\t}\n\t\t\t\tif (json.properties.depthWrite === false) {\n\t\t\t\t\tdepthWrite = false;\n\t\t\t\t}\n\t\t\t\tswitch (json.properties.side) {\n\t\t\t\t\tcase 'front': side = THREE.FrontSide; break;\n\t\t\t\t\tcase 'back': side = THREE.BackSide; break;\n\t\t\t\t\tcase 'double': side = THREE.DoubleSide; break;\n\t\t\t\t}\n\t\t\t\tswitch (json.properties.blending) {\n\t\t\t\t\tcase 'normal': blending = THREE.NormalBlending; break;\n\t\t\t\t\tcase 'additive': blending = THREE.AdditiveBlending; break;\n\t\t\t\t\tcase 'subtractive': blending = THREE.SubtractiveBlending; break;\n\t\t\t\t\tcase 'multiply': blending = THREE.MultiplyBlending; break;\n\t\t\t\t\tcase 'custom': blending = THREE.CustomBlending; break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for required code.\n\t\t\tif (typeof json.vertex !== 'object' || typeof json.vertex.code !== 'string') {\n\t\t\t\tthrow new Error('Missing vertex stage code.');\n\t\t\t}\n\t\t\tif (typeof json.fragment !== 'object' || typeof json.fragment.code !== 'string') {\n\t\t\t\tthrow new Error('Missing fragment stage code.');\n\t\t\t}\n\n\t\t\t// Set the extension code.\n\t\t\tif (Array.isArray(json.vertex.extensions)) {\n\t\t\t\tlet extensionCode = '';\n\t\t\t\tfor (const extension of json.vertex.extensions) {\n\t\t\t\t\tif (Capabilities.hasGLExtension(extension)) {\n\t\t\t\t\t\textensionCode += '#extension GL_' + extension + ': enable\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const extension of json.vertex.extensions) {\n\t\t\t\t\tif (Capabilities.hasGLExtension(extension)) {\n\t\t\t\t\t\textensionCode += '#define L_' + extension + ' true\\n';\n\t\t\t\t\t}\n\t\t\t\t\tif (Capabilities.isWebGL2() && extension === 'EXT_frag_depth') {\n\t\t\t\t\t\textensionCode += '#define L_' + extension + ' true\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjson.vertex.code = extensionCode + json.vertex.code;\n\t\t\t}\n\t\t\tif (Array.isArray(json.fragment.extensions)) {\n\t\t\t\tlet extensionCode = '';\n\t\t\t\tfor (const extension of json.fragment.extensions) {\n\t\t\t\t\tif (Capabilities.hasGLExtension(extension)) {\n\t\t\t\t\t\textensionCode += '#extension GL_' + extension + ': enable\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const extension of json.fragment.extensions) {\n\t\t\t\t\tif (Capabilities.hasGLExtension(extension)) {\n\t\t\t\t\t\textensionCode += '#define L_' + extension + ' true\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjson.fragment.code = extensionCode + json.fragment.code;\n\t\t\t}\n\n\t\t\t// Create the material.\n\t\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\t\tuniforms,\n\t\t\t\tvertexShader: json.vertex.code,\n\t\t\t\tfragmentShader: json.fragment.code,\n\t\t\t\ttransparent: transparent,\n\t\t\t\tdepthWrite: depthWrite,\n\t\t\t\tside: side,\n\t\t\t\tblending: blending,\n\t\t\t\tglslVersion: THREE.GLSL3\n\t\t\t});\n\t\t\tShaderFix.fix(material);\n\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t// Return the loaded material.\n\t\t\treturn material;\n\t\t}\n\t\tcatch (e) {\n\t\t\tif (e instanceof Error) {\n\t\t\t\te.message = `While processing material \"${url}\": ${e.message}`;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Gets a uniform value from the type.\n\t * @param {string} type\n\t * @returns {any}\n\t * @private\n\t */\n\t_getUniformValueFromType(type) {\n\t\ttype = type.replace(/.* /, '');\n\t\tswitch (type) {\n\t\t\tcase 'int':\n\t\t\tcase 'float':\n\t\t\t\treturn 0;\n\t\t\tcase 'ivec2':\n\t\t\tcase 'vec2':\n\t\t\t\treturn new THREE.Vector2(0, 0);\n\t\t\tcase 'ivec3':\n\t\t\tcase 'vec3':\n\t\t\t\treturn new THREE.Vector3(0, 0, 0);\n\t\t\tcase 'ivec4':\n\t\t\tcase 'vec4':\n\t\t\t\treturn new THREE.Vector4(0, 0, 0, 0);\n\t\t\tcase 'mat3':\n\t\t\t\treturn new THREE.Matrix3();\n\t\t\tcase 'mat4':\n\t\t\t\treturn new THREE.Matrix4();\n\t\t\tcase 'sampler2D':\n\t\t\t\treturn null;\n\t\t\tcase 'samplerCube':\n\t\t\t\treturn null;\n\t\t}\n\t\tif (type.endsWith(']')) {\n\t\t\tconst indexOfOpenBracket = type.indexOf('[');\n\t\t\tconst indexOfCloseBracket = type.indexOf(']');\n\t\t\tconst baseType = type.substring(0, indexOfOpenBracket);\n\t\t\tconst numElements = Number.parseInt(type.substring(indexOfOpenBracket + 1, indexOfCloseBracket));\n\t\t\tconst array = [];\n\t\t\tfor (let i = 0; i < numElements; i++) {\n\t\t\t\tarray.push(this._getUniformValueFromType(baseType));\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\t\tthrow new Error('Unrecognized type: ' + type + '.');\n\t}\n\n\t/**\n\t * Clones a material.\n\t * @param {THREE.RawShaderMaterial} material\n\t * @param {string} url\n\t * @returns {THREE.RawShaderMaterial}\n\t * @private\n\t */\n\t_clone(material, url) {\n\t\t// Use the built-in Three.js material clone.\n\t\tconst newMaterial = material.clone();\n\n\t\t// Manually clone array uniforms of Three.js objects, since Three.js doesn't do this (see https://github.com/mrdoob/three.js/issues/16080).\n\t\tfor (const [name, uniform] of Object.entries(material.uniforms)) {\n\t\t\tconst value = uniform.value;\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tconst value0 = value[0];\n\t\t\t\tif (value0 && (value0.isColor || value0.isMatrix3 || value0.isMatrix4\n\t\t\t\t\t|| value0.isVector2 || value0.isVector3 || value0.isVector4\n\t\t\t\t\t|| value0.isTexture)) {\n\t\t\t\t\tmaterial.uniforms[name].value = [];\n\t\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\t\tmaterial.uniforms[name].value[i] = value[i].clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Make sure the new material is updated.\n\t\tnewMaterial.needsUpdate = true;\n\n\t\t// Add to the cloned materials list so that it can be found during the release.\n\t\tthis._clonedMaterials.set(newMaterial, url);\n\n\t\treturn newMaterial;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tComponentRef,\n\tEntity,\n\tLatLonAlt,\n\tMaterialUtils,\n\tMathUtils,\n\tShaderChunkLogDepth,\n\tShaderFix,\n\tSpheroidComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * An atmosphere over a component with a spheroid.\n */\nexport class AtmosphereComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The density of the atmosphere at sea level.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._density = 0.0;\n\n\t\t/**\n\t\t * The scale height of the atmosphere.\n\t\t * @type {number}\n\t\t * @private\n\t\t*/\n\t\tthis._scaleHeight = 1.0;\n\n\t\t/**\n\t\t * The emissivity of the atmosphere. 0 means not emissive and 1 means 100% emissive.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._emissivity = 0.0;\n\n\t\t/**\n\t\t * The base color of the atmosphere.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Color();\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The brightness of the sun in the sky when looking through the atmosphere.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._sunBrightness = 1.0;\n\n\t\t/**\n\t\t * The sunset color of the atmosphere.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._sunsetColor = new Color();\n\t\tthis._sunsetColor.freeze();\n\n\t\t/**\n\t\t * The sunset intensity of the atmosphere.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._sunsetIntensity = 0.0;\n\n\t\t/**\n\t\t * A reference to the spheroid component.\n\t\t * @type {ComponentRef<SpheroidComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._spheroidComponentRef = new ComponentRef(this.getEntity().getScene());\n\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid');\n\t\tthis._spheroidComponentRef.setRefChangedCallback(this._spheroidRefChangedCallback.bind(this));\n\n\t\t// Bind the callbacks to this.\n\t\tthis._spheroidChangedCallback = this._spheroidChangedCallback.bind(this);\n\n\t\t// It aligns with the entity's orientation.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the spheroid that this uses.\n\t * @returns {SpheroidComponent}\n\t */\n\tgetSpheroid() {\n\t\treturn this._spheroidComponentRef.get();\n\t}\n\n\t/**\n\t * Gets the density of the atmosphere at sea level.\n\t * @returns {number}\n\t */\n\tgetDensity() {\n\t\treturn this._density;\n\t}\n\n\t/**\n\t * Sets the density of the atmosphere at sea level.\n\t * @param {number} density\n\t */\n\tsetDensity(density) {\n\t\tthis._density = density;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'density', density);\n\t}\n\n\t/**\n\t * Gets the scale height of the atmosphere.\n\t * @returns {number}\n\t */\n\tgetScaleHeight() {\n\t\treturn this._scaleHeight;\n\t}\n\n\t/**\n\t * Sets the scale height of the atmosphere.\n\t * @param {number} scaleHeight\n\t */\n\tsetScaleHeight(scaleHeight) {\n\t\tthis._scaleHeight = scaleHeight;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'scaleHeight', scaleHeight);\n\t}\n\n\t/**\n\t * Gets the emissivity of the atmosphere. 0 means not emissive and 1 means 100% emissive. Defaults to 0.\n\t * @returns {number}\n\t */\n\tgetEmissivity() {\n\t\treturn this._emissivity;\n\t}\n\n\t/**\n\t * Sets the emissivity of the atmosphere.\n\t * @param {number} emissivity\n\t */\n\tsetEmissivity(emissivity) {\n\t\tthis._emissivity = emissivity;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'emissivity', emissivity);\n\t}\n\n\t/**\n\t * Gets the base color of the atmosphere. Default is white.\n\t * @returns {Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the base color of the atmosphere. Default is white.\n\t * @param {Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tThreeJsHelper.setUniformColorRGB(this.getThreeJsMaterials()[0], 'color', color);\n\t}\n\n\t/**\n\t * Gets the brightness of the sun in the sky when looking through the atmosphere.\n\t * @returns {number}\n\t */\n\tgetSunBrightness() {\n\t\treturn this._sunBrightness;\n\t}\n\n\t/**\n\t * Sets the brightness of the sun in the sky when looking through the atmosphere.\n\t * @param {number} sunBrightness\n\t */\n\tsetSunBrightness(sunBrightness) {\n\t\tthis._sunBrightness = sunBrightness;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'sunBrightness', sunBrightness);\n\t}\n\n\t/**\n\t * Gets the sunset color of the atmosphere. Default is white.\n\t * @returns {Color}\n\t */\n\tgetSunsetColor() {\n\t\treturn this._sunsetColor;\n\t}\n\n\t/**\n\t * Sets the sunset color of the atmosphere. Default is white.\n\t * @param {Color} sunsetColor\n\t */\n\tsetSunsetColor(sunsetColor) {\n\t\tthis._sunsetColor.thaw();\n\t\tthis._sunsetColor.copy(sunsetColor);\n\t\tthis._sunsetColor.freeze();\n\t\tThreeJsHelper.setUniformColorRGB(this.getThreeJsMaterials()[0], 'sunsetColor', sunsetColor);\n\t}\n\n\t/**\n\t * Gets the sunset intensity of the atmosphere. Default is 0.\n\t * @returns {number}\n\t */\n\tgetSunsetIntensity() {\n\t\treturn this._sunsetIntensity;\n\t}\n\n\t/**\n\t * Sets the sunset intensity of the atmosphere. Default is 0.\n\t * @param {number} sunsetIntensity\n\t */\n\tsetSunsetIntensity(sunsetIntensity) {\n\t\tthis._sunsetIntensity = sunsetIntensity;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'sunsetIntensity', sunsetIntensity);\n\t}\n\n\t/**\n\t * Sets the reference to use for the spheroid component, by name or the type index.\n\t * @param {string | number} nameOrTypeIndex\n\t */\n\tsetSpheroidReference(nameOrTypeIndex) {\n\t\tif (typeof nameOrTypeIndex === 'string') {\n\t\t\tthis._spheroidComponentRef.setByName(this.getEntity().getName(), nameOrTypeIndex);\n\t\t}\n\t\telse {\n\t\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid', nameOrTypeIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @package\n\t */\n\t__destroy() {\n\t\t// Remove the spheroid changed callback.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tspheroidComponent.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Updates the camera-non-specific parts of the component.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Update the spheroid component reference.\n\t\tthis._spheroidComponentRef.update();\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the camera position uniform.\n\t\tconst cameraPosition = Vector3.pool.get();\n\t\tcameraPosition.neg(this.getEntity().getCameraSpacePosition(camera));\n\t\tcameraPosition.rotateInverse(this.getEntity().getOrientation(), cameraPosition);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'cameraPosition', cameraPosition);\n\t\tVector3.pool.release(cameraPosition);\n\n\t\t// Set the lightPosition and lightColor uniform.\n\t\tMaterialUtils.setLightSourceUniforms(this.getThreeJsMaterials(), this.getEntity(), camera);\n\n\t\t// Set the entity's orientation to get the lights into the entity-space.\n\t\tThreeJsHelper.setUniformQuaternion(this.getThreeJsMaterials()[0], 'entityOrientation', this.getEntity().getOrientation());\n\n\t\t// Set the orientation to the entity's orientation.\n\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\t// Create the material.\n\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\tlightPositions: new THREE.Uniform([new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0)]),\n\t\t\t\tlightColors: new THREE.Uniform([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0)]),\n\t\t\t\tlightRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\tnumLights: new THREE.Uniform(0),\n\n\t\t\t\tdensity: new THREE.Uniform(this._density),\n\t\t\t\tscaleHeight: new THREE.Uniform(this._scaleHeight),\n\t\t\t\temissivity: new THREE.Uniform(this._emissivity),\n\t\t\t\tequatorialRadius: new THREE.Uniform(1.0),\n\t\t\t\tpolarRadius: new THREE.Uniform(1.0),\n\t\t\t\tcameraPosition: new THREE.Uniform(new THREE.Vector3(1, 0, 0)),\n\t\t\t\tentityOrientation: new THREE.Uniform(new THREE.Vector4(1, 0, 0, 0)),\n\t\t\t\tcolor: new THREE.Uniform(new THREE.Vector3(this._color.r, this._color.g, this._color.b)),\n\t\t\t\tsunBrightness: new THREE.Uniform(this._sunBrightness),\n\t\t\t\tsunsetColor: new THREE.Uniform(new THREE.Vector3(this._sunsetColor.r, this._sunsetColor.g, this._sunsetColor.b)),\n\t\t\t\tsunsetIntensity: new THREE.Uniform(this._sunsetIntensity),\n\n\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t},\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\ttransparent: true,\n\t\t\tdepthWrite: false,\n\t\t\tblending: THREE.NormalBlending\n\t\t});\n\t\tShaderFix.fix(material);\n\t\tthis.getThreeJsMaterials().push(material);\n\n\t\tconst object = ThreeJsHelper.createMeshObject(this, material, [{ name: 'position', dimensions: 3 }], false);\n\t\tthis.getThreeJsObjects().push(object);\n\n\t\t// Create the mesh itself.\n\t\tconst numLatVerts = 64;\n\t\tconst numLonVerts = 128;\n\t\tconst latStep = MathUtils.pi / (numLatVerts - 1);\n\t\tconst lonStep = MathUtils.twoPi / numLonVerts;\n\t\tconst numVerts = (numLonVerts + 1) * numLatVerts;\n\t\tconst meshPositions = new Float32Array(numVerts * 3);\n\t\tconst meshIndices = new Uint16Array(numLonVerts * (numLatVerts - 1) * 6);\n\t\tconst xyz = Vector3.pool.get();\n\t\tconst lla = LatLonAlt.pool.get();\n\t\tfor (let latI = 0; latI < numLatVerts; latI++) {\n\t\t\tlla.lat = latI * latStep - MathUtils.halfPi;\n\t\t\tlla.alt = 0;\n\t\t\tconst cosLat = Math.cos(lla.lat);\n\t\t\tconst sinLat = Math.sin(lla.lat);\n\t\t\tfor (let lonI = 0; lonI < numLonVerts + 1; lonI++) {\n\t\t\t\tlla.lon = lonI * lonStep - MathUtils.pi;\n\n\t\t\t\tconst vertexI = latI * (numLonVerts + 1) + lonI;\n\t\t\t\tmeshPositions[vertexI * 3 + 0] = cosLat * Math.cos(lla.lon);\n\t\t\t\tmeshPositions[vertexI * 3 + 1] = cosLat * Math.sin(lla.lon);\n\t\t\t\tmeshPositions[vertexI * 3 + 2] = sinLat;\n\n\t\t\t\tconst triangleI = latI * numLonVerts + lonI;\n\t\t\t\tif (latI < numLatVerts - 1 && lonI < numLonVerts) {\n\t\t\t\t\tmeshIndices[triangleI * 6 + 0] = (numLonVerts + 1) * (latI + 0) + (lonI + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = (numLonVerts + 1) * (latI + 1) + (lonI + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = (numLonVerts + 1) * (latI + 1) + (lonI + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 3] = (numLonVerts + 1) * (latI + 0) + (lonI + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = (numLonVerts + 1) * (latI + 1) + (lonI + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = (numLonVerts + 1) * (latI + 0) + (lonI + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tLatLonAlt.pool.release(lla);\n\t\tVector3.pool.release(xyz);\n\t\tThreeJsHelper.setVertices(object.geometry, 'position', meshPositions);\n\t\tThreeJsHelper.setIndices(object.geometry, meshIndices);\n\n\t\t// Make it render before other transparent objects.\n\t\tThreeJsHelper.setRenderOrder(object, -1);\n\n\t\t// Make it used in the dynamic environment map.\n\t\tThreeJsHelper.useInDynEnvMap(object, true);\n\n\t\t// Update from the spheroid properties.\n\t\tthis._spheroidChangedCallback();\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Callback called when the spheroid reference is found or lost.\n\t * @param {SpheroidComponent} oldRef\n\t * @param {SpheroidComponent} newRef\n\t * @private\n\t */\n\t_spheroidRefChangedCallback(oldRef, newRef) {\n\t\tif (oldRef !== null) {\n\t\t\toldRef.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tif (newRef !== null) {\n\t\t\tnewRef.addChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tthis._spheroidChangedCallback();\n\t}\n\n\t/**\n\t * Callback to be called when the spheroid component changed.\n\t * @private\n\t */\n\t_spheroidChangedCallback() {\n\t\t// Set the radii uniforms.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tconst material = this.getThreeJsMaterials()[0];\n\t\tif (spheroidComponent !== null) {\n\t\t\t// Set the radii.\n\t\t\tthis.__setRadius(Math.max(spheroidComponent.getEquatorialRadius(), spheroidComponent.getPolarRadius()));\n\t\t\t// Set the radii uniforms.\n\t\t\tif (material !== undefined) {\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'equatorialRadius', spheroidComponent.getEquatorialRadius());\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'polarRadius', spheroidComponent.getPolarRadius());\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.__setRadius(0);\n\t\t\tif (material !== undefined) {\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'equatorialRadius', 0);\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'polarRadius', 0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst vertexShader = `\n\tattribute vec3 position;\n\tuniform mat4 projectionMatrix;\n\tuniform mat4 modelViewMatrix;\n\n\tuniform float scaleHeight;\n\tuniform float equatorialRadius;\n\tuniform float polarRadius;\n\n\t${ShaderChunkLogDepth.VertexHead}\n\n\tvarying vec3 localPosition;\n\n\tvoid main() {\n\t\tfloat scaleHeightMultiplier = 20.0;\n\t\tlocalPosition = vec3(position.x * (equatorialRadius + scaleHeight * scaleHeightMultiplier), position.y * (equatorialRadius + scaleHeight * scaleHeightMultiplier), position.z * (polarRadius + scaleHeight * scaleHeightMultiplier));\n\t\tvec4 viewPosition = modelViewMatrix * vec4(localPosition, 1.);\n\t\tgl_Position = projectionMatrix * viewPosition;\n\t\tgl_Position.w = viewPosition.y;\n\n\t\t${ShaderChunkLogDepth.Vertex}\n\t}`;\n\nconst fragmentShader = `\n\tprecision highp float;\n\n\tuniform vec3 lightPositions[5];\n\tuniform vec3 lightColors[5];\n\tuniform int numLights;\n\n\tuniform float density;\n\tuniform float scaleHeight;\n\tuniform float equatorialRadius;\n\tuniform float polarRadius;\n\tuniform vec3 cameraPosition;\n\tuniform vec4 entityOrientation;\n\tuniform vec3 color;\n\tuniform float emissivity;\n\tuniform float sunBrightness;\n\tuniform vec3 sunsetColor;\n\tuniform float sunsetIntensity;\n\n\t${ShaderChunkLogDepth.FragmentHead}\n\n\tvarying vec3 localPosition;\n\n\tconst int numIterations = 5;\n\n\t// Inverse rotate a vector by a quaternion.\n\tvec3 quatRotInv(vec4 q, vec3 v) {\n\t\tfloat tx = q.w * v.x - q.y * v.z + q.z * v.y;\n\t\tfloat ty = q.w * v.y - q.z * v.x + q.x * v.z;\n\t\tfloat tz = q.w * v.z - q.x * v.y + q.y * v.x;\n\t\tfloat tw = q.x * v.x + q.y * v.y + q.z * v.z;\n\t\tfloat x = tx * q.w + tw * q.x + ty * q.z - tz * q.y;\n\t\tfloat y = ty * q.w + tw * q.y + tz * q.x - tx * q.z;\n\t\tfloat z = tz * q.w + tw * q.z + tx * q.y - ty * q.x;\n\t\treturn vec3(x, y, z);\n\t}\n\n\t// Given an origin and direction, computes the sampling start and end as distance from the origin in the direction.\n\tvoid getStartEndSamples(out float start, out float end, vec3 origin, vec3 direction, float maxDistance, float groundRadius, float atmosphereScaleHeight) {\n\t\t// Get the along the ray perpendicular to the sphere.\n\t\tfloat perpD = -dot(origin, direction);\n\t\tvec3 perp = origin + direction * perpD;\n\n\t\t// Figure out the sample distance.\n\t\tfloat atmosphereRadius = groundRadius + atmosphereScaleHeight * 6.0;\n\t\tfloat chordHalfLength = sqrt(max(0.0, atmosphereRadius * atmosphereRadius - dot(perp, perp)));\n\n\t\t// Figure out starting and ending sample points, and step distance.\n\t\tstart = max(0.0, perpD - chordHalfLength);\n\t\tend = min(maxDistance, perpD + chordHalfLength);\n\t}\n\n\t// Gets the density of the atmosphere at a given position.\n\tfloat getDensity(vec3 position, float radius, float density, float atmosphereScaleHeight) {\n\t\treturn density * exp(min(radius - length(position), 0.0) / atmosphereScaleHeight);\n\t}\n\n\t// Returns 0 if the ray does not intersect and 1.0 if the ray very intersects (with a gradient inbetween).\n\tfloat getDayLevel(vec3 origin, vec3 direction, float radius, float scaleHeight) {\n\t\tfloat blendHeight = scaleHeight * radius / 200.0;\n\t\tfloat perpD = -dot(origin, direction);\n\t\tfloat depth = radius - sqrt(dot(origin, origin) - sign(perpD) * perpD * perpD);\n\t\tif (depth < 0.0) { // day\n\t\t\treturn 1.0 - max(0.0, 0.25 * depth / blendHeight + 0.25);\n\t\t}\n\t\telse { // night\n\t\t\treturn 1.0 - min(1.0, 0.75 * depth / blendHeight + 0.25);\n\t\t}\n\t}\n\n\tfloat easeInOut(float x, float sharpness) {\n\t\tfloat b = sharpness;\n\t\tif (x < 0.5) {\n\t\t\treturn max(0.0, (pow(b, 2.0 * x) - 1.0) / (2.0 * (b - 1.0)));\n\t\t}\n\t\telse {\n\t\t\treturn min(1.0, 1.0 - (pow(b, 2.0 * (1.0 - x)) - 1.0) / (2.0 * (b - 1.0)));\n\t\t}\n\t}\n\n\tvec3 adjustOverbrightness(vec3 color) {\n\t\tfloat maxColor = max(color.r, max(color.g, color.b));\n\t\tif (maxColor > 1.0) {\n\t\t\tfloat f = (maxColor - 1.0) / maxColor;\n\t\t\tcolor.r = min(1.0, pow(color.r / maxColor, 1.0 / maxColor));\n\t\t\tcolor.g = min(1.0, pow(color.g / maxColor, 1.0 / maxColor));\n\t\t\tcolor.b = min(1.0, pow(color.b / maxColor, 1.0 / maxColor));\n\t\t}\n\t\treturn color;\n\t}\n\n\t// Calculates a glow around the light direction (the star).\n\tfloat glow(float spread, float amount, float lightDotCamera) {\n\t\treturn amount * spread / (1.0 + spread - lightDotCamera);\n\t}\n\n\tvec4 getEmissiveColor(float totalDensity, vec3 cameraPositionS, vec3 color, float emissivity) {\n\n\t\t// The color that will be added onto gl_FragColor.\n\t\tvec4 outColor;\n\n\t\t// Apply the total density to the transparency of the atmosphere.\n\t\toutColor.a = emissivity * clamp(totalDensity, 0.0, 1.0);\n\n\t\t// Multiply it all together with the source light color.\n\t\toutColor.rgb = emissivity * color * clamp(pow(15.0 * totalDensity / (density * equatorialRadius), 0.2), 0.75, 1.0);\n\n\t\t// Make it more opaque when lower down.\n\t\toutColor.a = mix(outColor.a, emissivity, getDensity(cameraPositionS, equatorialRadius + scaleHeight, 1.0, 2.0 * scaleHeight));\n\n\t\t// Clamp it to make it clean for the day/night transition.\n\t\toutColor.a = clamp(outColor.a, 0.0, 1.0);\n\n\t\treturn outColor;\n\t}\n\n\t// Gets the color for an atmosphere for a light.\n\tvec4 getColor(float totalDensity, vec3 lightColor, vec3 lightPosition, float spheroidRatio, vec3 positionS, vec3 cameraPositionS, vec3 cameraToPositionUnit) {\n\n\t\t// The color starts out in full brightness (as if emissivity was 1.0).\n\t\tvec4 outColor = getEmissiveColor(totalDensity, cameraPositionS, lightColor * color, 1.0);\n\n\t\t// Make the alpha dependent on the brightness of the light.\n\t\toutColor.a *= length(lightColor) / sqrt(3.0);\n\n\t\t// Setup vectors.\n\t\thighp vec3 lightPositionS = quatRotInv(entityOrientation, lightPosition);\n\t\tlightPositionS.z *= spheroidRatio;\n\t\thighp vec3 lightToPosition = positionS - lightPositionS;\n\t\thighp vec3 lightToPositionUnit = normalize(lightToPosition / 1.0e8);\n\n\t\t// Get the day level, from 0 to 1, and apply it to the alpha. Lots of tricks to get it looking good on earth.\n\t\tvec3 dayRefUp = normalize(cameraPositionS - min(0.0, dot(cameraPositionS, cameraToPositionUnit)) * cameraToPositionUnit);\n\t\tfloat dayLevel = -dot(lightToPositionUnit, dayRefUp);\n\t\toutColor.rgb *= easeInOut(0.5 + 2.0 * dayLevel, 2.0);\n\t\toutColor.a *= easeInOut(1.0 + 2.0 * dayLevel, 2.0);\n\n\t\t// Brighten up the atmosphere when looking from space toward the sun.\n\t\tfloat lightDotCamera = max(0.0, -dot(lightToPositionUnit, cameraToPositionUnit));\n\t\toutColor.a = clamp(outColor.a * (1.0 + glow(0.004, 1.0, lightDotCamera)), 0.0, 1.0);\n\n\t\t// Add narrower sun glare.\n\t\toutColor.rgb *= lightColor * (1.0 + sunBrightness * outColor.a * glow(0.00004, 1.0, lightDotCamera));\n\n\t\t// Add broader sun glare.\n\t\toutColor.rgb *= lightColor * (1.0 + sunBrightness * outColor.a * glow(0.04, 0.125, lightDotCamera));\n\n\t\t// Apply the sunset.\n\t\tfloat lightDotHorizon = pow(clamp(1.0 - dot(lightToPositionUnit, dayRefUp), 0.0, 1.0), 2.0);\n\t\tfloat cameraDotHorizon = pow(clamp(1.0 - dot(cameraToPositionUnit, dayRefUp), 0.0, 1.0), 8.0);\n\t\tfloat sunsetAmount = sunsetIntensity * lightDotHorizon * cameraDotHorizon * glow(0.04, 0.5, lightDotCamera);\n\t\toutColor.rgb = mix(outColor.rgb, sunsetColor, clamp(sunsetAmount, 0.0, 1.0));\n\n\t\treturn outColor;\n\t}\n\n\tvoid main(void) {\n\t\t// Convert everything into a sphere frame.\n\t\tfloat spheroidRatio = equatorialRadius / polarRadius;\n\t\thighp vec3 positionS = localPosition;\n\t\thighp vec3 cameraPositionS = cameraPosition;\n\t\tpositionS.z *= spheroidRatio;\n\t\tcameraPositionS.z *= spheroidRatio;\n\n\t\thighp vec3 cameraToPosition = positionS - cameraPositionS;\n\t\tfloat cameraToPositionDist = length(cameraToPosition / 1.0e8) * 1.0e8;\n\t\thighp vec3 cameraToPositionUnit = cameraToPosition / cameraToPositionDist;\n\n\t\t// Get the start and end of the sampling from the camera to the position.\n\t\tfloat start;\n\t\tfloat end;\n\t\tgetStartEndSamples(start, end, cameraPositionS, cameraToPositionUnit, 1.0e24, equatorialRadius, scaleHeight);\n\t\tfloat fracPerStep = 1.0 / float(numIterations - 1);\n\t\tfloat stepDist = fracPerStep * (end - start);\n\n\t\t// Do the sampling.\n\t\tfloat totalDensity = 0.0;\n\t\tfloat segmentStart = start;\n\t\tfor (int j = 0; j < numIterations; j++) {\n\t\t\t// Get the distance that this segment covers.\n\t\t\tfloat segDist = stepDist;\n\t\t\tif (j == 0 || j == numIterations - 1) {\n\t\t\t\tsegDist *= 0.5;\n\t\t\t}\n\n\t\t\t// Get the segment start that we're looking at.\n\t\t\tvec3 p = cameraPositionS + segmentStart * cameraToPositionUnit;\n\n\t\t\t// Get the density at that segment start. It'll be the density for the whole segment.\n\t\t\tfloat densityAtP = getDensity(p, equatorialRadius, density, scaleHeight);\n\n\t\t\t// Add it to the total density.\n\t\t\ttotalDensity += densityAtP * segDist;\n\n\t\t\t// Next step.\n\t\t\tsegmentStart += stepDist;\n\t\t}\n\n\t\t// Add emissivity lightness.\n\t\tgl_FragColor += getEmissiveColor(totalDensity, cameraPositionS, color, emissivity);\n\n\t\t// For each light,\n\t\tfor (int i = 0; i < 5; i++) {\n\t\t\tif (i >= numLights) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// If it's not a camera light,\n\t\t\tif (length(lightPositions[i]) > 0.0) {\n\t\t\t\t// Add on the color for the light.\n\t\t\t\tgl_FragColor += getColor(totalDensity, lightColors[i], lightPositions[i], spheroidRatio, positionS, cameraPositionS, cameraToPositionUnit);\n\t\t\t}\n\t\t}\n\n\t\t// Adjust for values that are greater than one.\n\t\tgl_FragColor.rgb = adjustOverbrightness(gl_FragColor.rgb);\n\n\t\t${ShaderChunkLogDepth.Fragment}\n\t}`;\n","/** @module pioneer */\nimport {\n\tCameraComponent,\n\tEntity,\n\tEntityItem,\n\tFastMap,\n\tTHREE\n} from '../../internal';\n\n/**\n * The base class for all components.\n * */\nexport class BaseComponent extends EntityItem {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The radius of the component.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._radius = 0.5;\n\n\t\t/**\n\t\t * The pixel-space radius of the component for each camera.\n\t\t * @type {FastMap<CameraComponent, number>}\n\t\t * @private\n\t\t */\n\t\tthis._pixelSpaceRadiusPerCamera = new FastMap();\n\n\t\t/**\n\t\t * The greatest pixel-space radius of the component in any camera.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._greatestPixelSpaceRadius = 0.0;\n\n\t\t/**\n\t\t * The load state of the component. It can be 'unloaded', 'loading', or 'loaded'.\n\t\t * @type {'unloaded' | 'loading' | 'loaded'}\n\t\t * @private\n\t\t */\n\t\tthis._loadState = 'unloaded';\n\n\t\t/**\n\t\t * A flag that determines if the component should always be loaded, except if disabled.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._forceLoaded = false;\n\n\t\t/**\n\t\t * A callback that is called right after the mesh has been created and materials have been loaded.\n\t\t * @type {() => any}\n\t\t * @private\n\t\t */\n\t\tthis._resourcesLoadedCallback = null;\n\n\t\t/**\n\t\t * A callback that is called right after the mesh is destroyed.\n\t\t * @type {() => any}\n\t\t * @private\n\t\t */\n\t\tthis._resourcesUnloadedCallback = null;\n\n\t\t/**\n\t\t * A promise that resolves when the resources are loaded.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._loadedPromise = Promise.resolve();\n\n\t\t/**\n\t\t * Camera exclusion list.\n\t\t * @type {Set<CameraComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._excludedCameras = new Set();\n\n\t\t/**\n\t\t * Whether or not the component is visible. It will still be enabled and run, just not render.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._visible = true;\n\n\t\t/**\n\t\t * The Three.js objects.\n\t\t * @type {THREE.Object3D[]}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsObjects = [];\n\n\t\t/**\n\t\t * The Three.js materials.\n\t\t * @type {THREE.ShaderMaterial[]}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsMaterials = [];\n\n\t\t/**\n\t\t * The flag that if true sets the root Three.js objects to have the same orientation as the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._usesEntityOrientation = false;\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\t// Unload any resources used by the component.\n\t\tif (this._loadState === 'loaded') {\n\t\t\tthis._unloadResources();\n\t\t}\n\t\t// Call the super.\n\t\tsuper.__destroy();\n\t}\n\n\t// ENABLED & DISABLED.\n\n\t/**\n\t * Sets whether the component is enabled by the user. If false, __update and __prepareForRender will not run.\n\t * Defaults to true.\n\t * @param {boolean} enabled\n\t * @override\n\t */\n\tsetEnabled(enabled) {\n\t\tsuper.setEnabled(enabled);\n\t\tthis.__updateLoadState();\n\t}\n\n\t// RADIUS.\n\n\t/**\n\t * Gets the radius of the component. No part of the component should be outside this.\n\t * @returns {number}\n\t */\n\tgetRadius() {\n\t\treturn this._radius;\n\t}\n\n\t/**\n\t * Sets the radius of the component. No part of the component should be outside this. Defaults to 0.5;\n\t * @param {number} radius\n\t * @protected\n\t */\n\t__setRadius(radius) {\n\t\tthis._radius = radius;\n\t}\n\n\t/**\n\t * Gets the pixel-space radius in a specific camera.\n\t * @param {CameraComponent} camera\n\t * @returns {number | undefined}\n\t */\n\tgetPixelSpaceRadiusInCamera(camera) {\n\t\treturn this._pixelSpaceRadiusPerCamera.get(camera);\n\t}\n\n\t/**\n\t * Gets the greatest pixel-space radius in all cameras.\n\t * @returns {number}\n\t */\n\tgetGreatestPixelSpaceRadius() {\n\t\treturn this._greatestPixelSpaceRadius;\n\t}\n\n\t// ACCESSING THREE.JS OBJECTS.\n\n\t/**\n\t * Gets the Three.js objects. This includes any child objects.\n\t * @returns {THREE.Object3D[]}\n\t */\n\tgetThreeJsObjects() {\n\t\treturn this._threeJsObjects;\n\t}\n\n\t/**\n\t * Gets the Three.js materials.\n\t * @returns {THREE.ShaderMaterial[]}\n\t */\n\tgetThreeJsMaterials() {\n\t\treturn this._threeJsMaterials;\n\t}\n\n\t/**\n\t * Gets the first Three.js root or descendent that matches the name, or null if not found.\n\t * @param {string} name\n\t * @returns {THREE.Object3D | null}\n\t */\n\tgetThreeJsObjectByName(name) {\n\t\tfor (let i = 0; i < this._threeJsObjects.length; i++) {\n\t\t\tconst object = this._threeJsObjects[i];\n\t\t\tif (object.name === name) {\n\t\t\t\treturn object;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t// LOADING AND UNLOADING OF RESOURCES.\n\n\t/**\n\t * Returns the load state. It can be 'unloaded', 'loading', or 'loaded'.\n\t * @returns {'unloaded' | 'loading' | 'loaded'}\n\t */\n\tgetLoadState() {\n\t\treturn this._loadState;\n\t}\n\n\t/**\n\t * Sets whether or not the component is always loaded, except if disabled. Defaults to false.\n\t * @param {boolean} enabled\n\t */\n\tsetForceLoaded(enabled) {\n\t\tthis._forceLoaded = enabled;\n\t\tif (this._forceLoaded && this._loadState === 'unloaded') {\n\t\t\tthis._loadResources();\n\t\t}\n\t}\n\n\t/**\n\t * Sets whether the component is visible. The __update function will run, but not the __prepareForRender function.\n\t * Only called by Entity and BaseComponent.\n\t * @internal\n\t */\n\t__updateLoadState() {\n\t\tconst entity = this.getEntity();\n\t\tconst isEnabled = entity.isEnabled() && this.isEnabled();\n\t\tconst isInTime = entity.isInPositionCoverage() && (entity.isInOrientationCoverage() || !this._usesEntityOrientation);\n\n\t\t// Create or destroy the rendering object based on the pixel-space radius.\n\t\tif ((isEnabled && (this._forceLoaded || (isInTime && this._greatestPixelSpaceRadius > 0.5))) && this._loadState === 'unloaded') {\n\t\t\tthis._loadResources();\n\t\t}\n\t\telse if ((!isEnabled || (!this._forceLoaded && (!isInTime || this._greatestPixelSpaceRadius < 0.25))) && this._loadState === 'loaded') {\n\t\t\tthis._unloadResources();\n\t\t}\n\t}\n\n\t/**\n\t * Reloads the resources of the component. They will be loaded, if necessary, on the next __update().\n\t */\n\tresetResources() {\n\t\t// If it was loading, set it to unloaded so any __loadResources function will stop.\n\t\tif (this._loadState === 'loading') {\n\t\t\tthis._loadState = 'unloaded';\n\t\t}\n\t\t// Unload any loaded resources.\n\t\telse if (this._loadState === 'loaded') {\n\t\t\tthis._unloadResources();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the callback that is called right after the resources have been loaded.\n\t * @param {() => any} callback\n\t */\n\tsetResourcesLoadedCallback(callback) {\n\t\tthis._resourcesLoadedCallback = callback;\n\t}\n\n\t/**\n\t * Sets the callback that is called right after the resources are unloaded.\n\t * @param {() => any} callback\n\t */\n\tsetResourcesUnloadedCallback(callback) {\n\t\tthis._resourcesUnloadedCallback = callback;\n\t}\n\n\t/**\n\t * Loads the Three.js objects, materials, and any other resources the component might need.\n\t * @private\n\t */\n\t_loadResources() {\n\t\t// Set the load state to loading.\n\t\tthis._loadState = 'loading';\n\t\t// Load the resources via the user function and set the loaded promise.\n\t\tthis._loadedPromise = this.__loadResources().then(() => {\n\t\t\t// If it has since been unloaded, unload and return.\n\t\t\tif (this._loadState !== 'loading') {\n\t\t\t\tthis._unloadResources();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Set the load state to loaded.\n\t\t\tthis._loadState = 'loaded';\n\t\t\t// Call the callback.\n\t\t\tif (this._resourcesLoadedCallback !== null) {\n\t\t\t\tthis._resourcesLoadedCallback();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Unloads any of the resources loaded by the component.\n\t * @private\n\t */\n\t_unloadResources() {\n\t\t// Unload the resources via the user function.\n\t\tthis.__unloadResources();\n\t\t// Set the load state to unloaded.\n\t\tthis._loadState = 'unloaded';\n\t\t// Clear the arrays.\n\t\tthis._threeJsObjects = [];\n\t\tthis._threeJsMaterials = [];\n\t\t// Call the callback.\n\t\tif (this._resourcesUnloadedCallback !== null) {\n\t\t\tthis._resourcesUnloadedCallback();\n\t\t}\n\t}\n\n\t/**\n\t * Loads the Three.js objects, materials, and any other resources the component might need.\n\t * It should be implemented by subclasses and never called directly.\n\t * It should populate the Three.js objects and materials arrays.\n\t * @returns {Promise<void | void[]>}\n\t * @protected\n\t */\n\t__loadResources() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any of the resources loaded by the component.\n\t * It should be implemented by subclasses and never called directly.\n\t * It does not need to clear the Three.js objects and materials arrays.\n\t * @protected\n\t */\n\t__unloadResources() {\n\t}\n\n\t/**\n\t * Gets a promise that resolves when the texture is loaded.\n\t * @override\n\t * @returns {Promise<void>}\n\t */\n\tgetLoadedPromise() {\n\t\treturn this._loadedPromise;\n\t}\n\n\t// UPDATING\n\n\t/**\n\t * Updates the camera-dependent parts of the component.\n\t * @param {CameraComponent} camera - the camera being used in the render\n\t * @abstract\n\t */\n\t__updateCameraVariablesBase(camera) {\n\t\t// Get the viewport using the camera.\n\t\tconst viewport = camera.getViewport();\n\n\t\t// Get the normal-space extents radius.\n\t\tconst normalSpaceRadius = camera.getNormalSpaceRadiusFromRadius(this._radius, this.getEntity().getCameraSpacePosition(camera).magnitude());\n\n\t\t// Get the pixel-space extents radius.\n\t\tconst pixelSpaceRadius = viewport.getPixelSpaceRadiusFromNormalSpaceRadius(normalSpaceRadius);\n\t\tthis._pixelSpaceRadiusPerCamera.set(camera, pixelSpaceRadius);\n\n\t\t// Call the component's updateCameraVariables function.\n\t\tthis.__updateCameraVariables(camera);\n\t}\n\n\t/**\n\t * Updates the component.\n\t * @internal\n\t */\n\t__updateBase() {\n\t\t// Update the greatest pixel-space radius.\n\t\tthis._greatestPixelSpaceRadius = 0.0;\n\t\tfor (let i = 0, l = this._pixelSpaceRadiusPerCamera.size; i < l; i++) {\n\t\t\tconst pixelSpaceRadius = this._pixelSpaceRadiusPerCamera.getAt(i).value;\n\t\t\tif (this._greatestPixelSpaceRadius < pixelSpaceRadius) {\n\t\t\t\tthis._greatestPixelSpaceRadius = pixelSpaceRadius;\n\t\t\t}\n\t\t}\n\n\t\tthis.__updateLoadState();\n\n\t\t// Call the component's update function.\n\t\tthis.__update();\n\t}\n\n\t/**\n\t * Updates the camera-dependent parts of the component. Only called by the Entity.\n\t * @param {CameraComponent} camera - the camera being used in the render\n\t * @abstract\n\t */\n\t__prepareForRenderBase(camera) {\n\t\t// If the component has been loaded.\n\t\tif (this._loadState === 'loaded') {\n\t\t\t// If the component is not excluding this camera,\n\t\t\tif (!this._excludedCameras.has(camera) && this._visible) {\n\t\t\t\t// Make all objects visible.\n\t\t\t\tfor (let i = 0; i < this._threeJsObjects.length; i++) {\n\t\t\t\t\tthis._threeJsObjects[i].visible = true;\n\t\t\t\t}\n\n\t\t\t\t// Call the component's prepareForRender.\n\t\t\t\tthis.__prepareForRender(camera);\n\n\t\t\t\t// Set the log-depth buffer uniforms, if they exist.\n\t\t\t\tfor (let i = 0; i < this._threeJsMaterials.length; i++) {\n\t\t\t\t\tconst uniforms = this._threeJsMaterials[i].uniforms;\n\t\t\t\t\tif (uniforms['invertDepth'] !== undefined) {\n\t\t\t\t\t\tuniforms['invertDepth'].value = camera.getInvertDepth();\n\t\t\t\t\t\tuniforms['nearDistance'].value = camera.getAutoNearDistance();\n\t\t\t\t\t\tuniforms['midDistance'].value = camera.getAutoMidDistance();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update the matrix for the objects, since it isn't done automatically in Three.js (unset by a flag).\n\t\t\t\tfor (let i = 0; i < this._threeJsObjects.length; i++) {\n\t\t\t\t\tthis._threeJsObjects[i].updateMatrix();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If the component is excluded in this camera.\n\t\t\telse {\n\t\t\t\t// Make all objects invisible.\n\t\t\t\tfor (let i = 0; i < this._threeJsObjects.length; i++) {\n\t\t\t\t\tthis._threeJsObjects[i].visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the camera-dependent parts of the component.\n\t * @param {CameraComponent} _camera - the camera being used in the render\n\t * @abstract\n\t */\n\t__updateCameraVariables(_camera) {\n\t}\n\n\t/**\n\t * Updates the camera-dependent parts of the component. Implemented by the component.\n\t * @param {CameraComponent} _camera\n\t * @abstract\n\t */\n\t__prepareForRender(_camera) {\n\t}\n\n\t/**\n\t * Gets the flag that if true, the component uses the entity's orientation.\n\t * @returns {boolean}\n\t */\n\tgetUsesEntityOrientation() {\n\t\treturn this._usesEntityOrientation;\n\t}\n\n\t/**\n\t * Sets the flag that if true sets the root Three.js objects to have the same orientation as the entity. Defaults to false.\n\t * @param {boolean} enabled\n\t * @protected\n\t */\n\t__setUsesEntityOrientation(enabled) {\n\t\tthis._usesEntityOrientation = enabled;\n\t\tthis.__updateLoadState();\n\t}\n\n\t// VISIBILITY OF THREE.JS OBJECTS.\n\n\t/**\n\t * Returns true if the component is currently excluded from the camera.\n\t * @param {CameraComponent} camera\n\t * @returns {boolean}\n\t */\n\tisExcludedFromCamera(camera) {\n\t\treturn this._excludedCameras.has(camera);\n\t}\n\n\t/**\n\t * Sets whether the component is excluded from the camera. The default is false.\n\t * @param {CameraComponent} camera\n\t * @param {boolean} excluded\n\t */\n\tsetExcludedFromCamera(camera, excluded) {\n\t\tif (!excluded && this._excludedCameras.has(camera)) {\n\t\t\tthis._excludedCameras.delete(camera);\n\t\t}\n\t\telse if (excluded && !this._excludedCameras.has(camera)) {\n\t\t\tthis.__removeCameraDependents(camera);\n\t\t\tthis._excludedCameras.add(camera);\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the component is visible. It will still be enabled and run, just not render.\n\t * @returns {boolean}\n\t */\n\tisVisible() {\n\t\treturn this._visible;\n\t}\n\n\t/**\n\t * Sets whether or not the component is visible. It will still be enabled and run, just not render. Defaults to true.\n\t * @param {boolean} visible\n\t */\n\tsetVisible(visible) {\n\t\tthis._visible = visible;\n\t}\n\n\t/**\n\t * Removes the camera from any camera-dependent variables. Called during camera clean up.\n\t * @param {CameraComponent} camera\n\t */\n\t__removeCameraDependentsBase(camera) {\n\t\t// Remove any camera-specific variables.\n\t\tthis._pixelSpaceRadiusPerCamera.delete(camera);\n\n\t\t// Call the user-implemented function.\n\t\tthis.__removeCameraDependents(camera);\n\t}\n\n\t/**\n\t * Clears the camera from any camera-dependent variables. Called by entity when clearing its camera references.\n\t * @internal\n\t */\n\t__clearCameraDependentsBase() {\n\t\t// Clear any camera-specific variables.\n\t\tthis._pixelSpaceRadiusPerCamera.clear();\n\n\t\t// Call the user-implemented function.\n\t\tthis.__clearCameraDependents();\n\t}\n\n\t/**\n\t * Removes the camera from any camera-dependent variables. Called during camera clean up.\n\t * @param {CameraComponent} _camera\n\t */\n\t__removeCameraDependents(_camera) {\n\t}\n\n\t/**\n\t * Clears the camera from any camera-dependent variables. Called by entity when clearing its camera references.\n\t * @internal\n\t */\n\t__clearCameraDependents() {\n\t}\n\n\t// MISCELLANEOUS\n\n\t/**\n\t * Converts the entity item to a nice string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\tlet typeIndex = 0;\n\t\t// Search the components for the type.\n\t\tfor (let i = 0, l = this.getEntity().getNumComponents(); i < l; i++) {\n\t\t\tconst component = this.getEntity().getComponent(i);\n\t\t\tif (this === component) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.getType() === component.getType()) {\n\t\t\t\ttypeIndex += 1;\n\t\t\t}\n\t\t}\n\t\treturn this.getEntity().getName() + '.' + this.getType() + '.' + typeIndex;\n\t}\n}\n\n/**\n * A temporary Three.js Quaternion.\n * @type {THREE.Quaternion}\n */\nBaseComponent._tempThreeJsQuaternion = new THREE.Quaternion();\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCapabilities,\n\tColor,\n\tDynamicEnvironmentMapComponent,\n\tEntity,\n\tGeometry,\n\tInterval,\n\tQuaternion,\n\tTHREE,\n\tThreeJsEffectComposer,\n\tThreeJsOutlinePass,\n\tThreeJsRenderPass,\n\tThreeJsUnrealBloomPass,\n\tVector2,\n\tVector3,\n\tViewport\n} from '../../internal';\n\n/**\n * Camera component. This is typically attached to a {@link Viewport}. The +y axis is forward, +x is right, and +z is up.\n */\nexport class CameraComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The Three.js renderer.\n\t\t * @type {THREE.WebGLRenderer}\n\t\t * @protected\n\t\t */\n\t\tthis._threeJsRenderer = this.getEntity().getScene().getEngine().__getThreeJsRenderer();\n\n\t\t/**\n\t\t * The viewport that is using this camera component.\n\t\t * @type {Viewport}\n\t\t * @private\n\t\t */\n\t\tthis._viewport = null;\n\n\t\t/**\n\t\t * The three js scene.\n\t\t * @type {THREE.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsScene = entity.getScene().getThreeJsScene();\n\n\t\t/**\n\t\t * The field of view in radians.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._fieldOfView = 1.0471975512;\n\n\t\t/**\n\t\t * The near clipping plane distance in km.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._nearDistance = undefined;\n\n\t\t/**\n\t\t * Whether or not to invert the depth buffer.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._invertDepth = 0;\n\n\t\t/**\n\t\t * The near clipping plane distance in km.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._autoNearDistance = 0.0;\n\n\t\t/**\n\t\t * The z-buffer mid-point distance in km. Only used when frag-depth buffering isn't available.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._midDistance = undefined;\n\n\t\t/**\n\t\t * The automatically calculated z-buffer mid-point distance in km. Only used when frag-depth buffering isn't available and _midDistance is unefined.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._autoMidDistance = 0.0;\n\n\t\t/**\n\t\t * The aspect ratio given by the viewport.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._aspectRatio = 1.0;\n\n\t\t/**\n\t\t * The render size of the previous frame, used for comparing with this frame.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._renderSize = new Vector2();\n\n\t\t/**\n\t\t * The list of entities which will occlude things like labels. Only things that are big enough on screen will be here.\n\t\t * @type {Entity[]}\n\t\t * @private\n\t\t */\n\t\tthis._occludingEntities = [];\n\n\t\t/**\n\t\t * The three js camera.\n\t\t * @type {THREE.PerspectiveCamera}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsCamera = new THREE.PerspectiveCamera(75, this._aspectRatio, 0.1, 1000);\n\n\t\t/**\n\t\t * The Three.js render pass composer.\n\t\t * @type {ThreeJsEffectComposer}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsComposer = null;\n\n\t\t/**\n\t\t * The Three.js outline pass.\n\t\t * @type {ThreeJsOutlinePass}\n\t\t * @private\n\t\t */\n\t\tthis._outlinePass = new ThreeJsOutlinePass(undefined, this._threeJsScene, this._threeJsCamera, []);\n\t\tthis._outlinePass.enabled = false;\n\n\t\t/**\n\t\t * The Three.js unreal bloom pass.\n\t\t * @type {ThreeJsUnrealBloomPass}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsUnrealBloomPass = new ThreeJsUnrealBloomPass(undefined, 0, 0, 0);\n\t\tthis._threeJsUnrealBloomPass.enabled = false;\n\n\t\t// Setup the pass composer.\n\t\tthis.__setupEffectComposer();\n\t}\n\n\t// FIELDS OF VIEW\n\n\t/**\n\t * Gets the viewport that is using this camera component.\n\t * @returns {Viewport}\n\t */\n\tgetViewport() {\n\t\treturn this._viewport;\n\t}\n\n\t/**\n\t * Returns the field of view in radians. Defaults to PI / 3. The field of view is applied to the viewport axis (horizontal or vertical) that has the greatest length.\n\t * @returns {number}\n\t */\n\tgetFieldOfView() {\n\t\treturn this._fieldOfView;\n\t}\n\n\t/**\n\t * Get the field of view in the horizontal direction. It will be less than or equal to the general field of view.\n\t * @returns {number}\n\t */\n\tgetHorizontalFieldOfView() {\n\t\tif (this._aspectRatio >= 1) {\n\t\t\treturn this._fieldOfView;\n\t\t}\n\t\telse {\n\t\t\treturn 2.0 * Math.atan(Math.tan(this._fieldOfView / 2.0) * this._aspectRatio);\n\t\t}\n\t}\n\n\t/**\n\t * Get the field of view in the vertical direction. It will be less than or equal to the general field of view.\n\t * @returns {number}\n\t */\n\tgetVerticalFieldOfView() {\n\t\tif (this._aspectRatio > 1) {\n\t\t\treturn 2.0 * Math.atan(Math.tan(this._fieldOfView / 2.0) / this._aspectRatio);\n\t\t}\n\t\telse {\n\t\t\treturn this._fieldOfView;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the field of view in radians.\n\t * @param {number} fieldOfView\n\t */\n\tsetFieldOfView(fieldOfView) {\n\t\tthis._fieldOfView = fieldOfView;\n\t}\n\n\t// LOD-DEPTH BUFFERING VARIABLES\n\n\t/**\n\t * Returns 1 if the depth is inverted, 0 otherwise.\n\t * @returns {number}\n\t */\n\tgetInvertDepth() {\n\t\treturn this._invertDepth;\n\t}\n\n\t/**\n\t * Sets whether or not the depth is inverted. Use 1 to invert the depth, 0 otherwise.\n\t * @param {number} invertDepth\n\t */\n\tsetInvertDepth(invertDepth) {\n\t\tthis._invertDepth = invertDepth;\n\t}\n\n\t/**\n\t * Returns the distance in km at which nothing closer gets rendered.\n\t * @returns {number}\n\t */\n\tgetNearDistance() {\n\t\treturn this._nearDistance;\n\t}\n\n\t/**\n\t * Sets the distance in km at which nothing closer gets rendered. Set this to be greater for enhanced depth precision. If it is set to undefined, then it is auto set to 1% of the distance to the parent. The default is undefined.\n\t * @param {number} nearDistance\n\t */\n\tsetNearDistance(nearDistance) {\n\t\tthis._nearDistance = nearDistance;\n\t}\n\n\t/**\n\t * Returns the auto near distance in km.\n\t * @returns {number}\n\t */\n\tgetAutoNearDistance() {\n\t\treturn this._autoNearDistance;\n\t}\n\n\t/**\n\t * Returns the z-buffer mid-point distance in km. Only used when frag-depth buffering isn't available.\n\t * @returns {number}\n\t */\n\tgetMidDistance() {\n\t\treturn this._midDistance;\n\t}\n\n\t/**\n\t * Sets the z-buffer mid-point distance in km. Only used when frag-depth buffering isn't available. If it is set to undefined, then it is auto set to the distance to the parent + 2 times the parent's radius. The default is undefined.\n\t * @param {number} midDistance\n\t */\n\tsetMidDistance(midDistance) {\n\t\tthis._midDistance = midDistance;\n\t}\n\n\t/**\n\t * Returns the z-buffer mid-point distance in km. Only used when frag-depth buffering isn't available.\n\t * @returns {number}\n\t */\n\tgetAutoMidDistance() {\n\t\treturn this._autoMidDistance;\n\t}\n\n\t// CAMERA/NORMAL-SPACE CONVERSIONS\n\n\t/**\n\t * Gets the normal-space position from a camera-space position.\n\t * @param {Vector3} outNormalSpacePosition\n\t * @param {Vector3} cameraSpacePosition\n\t */\n\tgetNormalSpacePositionFromCameraSpacePosition(outNormalSpacePosition, cameraSpacePosition) {\n\t\tconst orientation = Quaternion.pool.get();\n\t\torientation.copy(this.getEntity().getOrientation());\n\t\torientation.inverse(orientation);\n\t\tconst rotatedCameraSpacePosition = Vector3.pool.get();\n\t\trotatedCameraSpacePosition.rotate(orientation, cameraSpacePosition);\n\t\tQuaternion.pool.release(orientation);\n\n\t\toutNormalSpacePosition.x = this._threeJsCamera.projectionMatrix.elements[0] * rotatedCameraSpacePosition.x / rotatedCameraSpacePosition.y;\n\t\toutNormalSpacePosition.y = this._threeJsCamera.projectionMatrix.elements[9] * rotatedCameraSpacePosition.z / rotatedCameraSpacePosition.y;\n\t\toutNormalSpacePosition.z = this._threeJsCamera.projectionMatrix.elements[6] + this._threeJsCamera.projectionMatrix.elements[14] / rotatedCameraSpacePosition.y;\n\t\tVector3.pool.release(rotatedCameraSpacePosition);\n\t}\n\n\t/**\n\t * Gets the normal-space size (fraction of viewport) from a radius of a sphere and a distance to the camera.\n\t * @param {number} radius - radius of object\n\t * @param {number} distanceInCameraYDir - distance to camera of object along the camera's y axis.\n\t * @returns {number}\n\t */\n\tgetNormalSpaceRadiusFromRadius(radius, distanceInCameraYDir) {\n\t\treturn radius / Math.abs(distanceInCameraYDir) / Math.tan(this._fieldOfView / 2);\n\t}\n\n\t/**\n\t * Gets the camera-space position from a normal-space position.\n\t * @param {Vector3} outCameraSpacePosition\n\t * @param {Vector3} normalSpacePosition\n\t */\n\tgetCameraSpacePositionFromNormalSpacePosition(outCameraSpacePosition, normalSpacePosition) {\n\t\tconst rotatedCameraSpacePosition = Vector3.pool.get();\n\t\trotatedCameraSpacePosition.y = this._threeJsCamera.projectionMatrix.elements[14] / (normalSpacePosition.z - this._threeJsCamera.projectionMatrix.elements[6]);\n\t\trotatedCameraSpacePosition.x = normalSpacePosition.x * rotatedCameraSpacePosition.y / this._threeJsCamera.projectionMatrix.elements[0];\n\t\trotatedCameraSpacePosition.z = normalSpacePosition.y * rotatedCameraSpacePosition.y / this._threeJsCamera.projectionMatrix.elements[9];\n\n\t\toutCameraSpacePosition.rotate(this.getEntity().getOrientation(), rotatedCameraSpacePosition);\n\t\tVector3.pool.release(rotatedCameraSpacePosition);\n\t}\n\n\t/**\n\t * Gets the camera/world-space size (fraction of viewport) from a radius of a sphere and a distance to the camera.\n\t * @param {number} radius - normal-space radius of object\n\t * @param {number} distanceInCameraYDir - distance to camera of object along the camera's y axis.\n\t * @returns {number}\n\t */\n\tgetRadiusFromNormalSpaceRadius(radius, distanceInCameraYDir) {\n\t\treturn radius * Math.abs(distanceInCameraYDir) * Math.tan(this._fieldOfView / 2);\n\t}\n\n\t// OCCLUSION\n\n\t/**\n\t * Returns true if the camera-space position is occluded by any of the occluding entities.\n\t * @param {Vector3} cameraSpacePosition\n\t * @returns {boolean}\n\t */\n\tisPositionOccluded(cameraSpacePosition) {\n\t\tfor (let i = 0; i < this._occludingEntities.length; i++) {\n\t\t\tif (this._occludingEntities[i].isOccludingPosition(this, cameraSpacePosition)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Find the nearest entity that intersects the ray form the camera to the camera-space position, or null if there is no such intersection.\n\t * @param {Vector3} cameraSpacePosition\n\t * @returns {Entity}\n\t */\n\tgetNearestIntersectingEntity(cameraSpacePosition) {\n\t\tlet minDistance = Number.POSITIVE_INFINITY;\n\t\tlet minEntity = null;\n\t\tconst interval = Interval.pool.get();\n\t\tfor (let i = 0; i < this._occludingEntities.length; i++) {\n\t\t\tconst entityCameraSpacePosition = this._occludingEntities[i].getCameraSpacePosition(this);\n\t\t\tGeometry.getLineSphereIntersectionWithLineStartAtOrigin(interval, cameraSpacePosition, entityCameraSpacePosition, this._occludingEntities[i].getOcclusionRadius());\n\t\t\tif (!Number.isNaN(interval.min) && interval.min >= 0) {\n\t\t\t\tconst distance = interval.min * entityCameraSpacePosition.magnitude();\n\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\tminDistance = distance;\n\t\t\t\t\tminEntity = this._occludingEntities[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tInterval.pool.release(interval);\n\t\treturn minEntity;\n\t}\n\n\t// POST-PROCESSING\n\n\t/**\n\t * Sets the bloom value.\n\t * @param {number} strength\n\t */\n\tsetBloom(strength) {\n\t\tthis._threeJsUnrealBloomPass.enabled = (strength > 0);\n\t\tthis._threeJsUnrealBloomPass.strength = strength;\n\t}\n\n\t/**\n\t * Sets the outline pass. Works with any component that has implemented getThreeJsObjects(). If component is null, it is disabled.\n\t * @param {Color} color\n\t * @param {BaseComponent} component\n\t * @param {string} [subObjectName='']\n\t */\n\tsetOutline(color, component, subObjectName) {\n\t\tthis._outlinePass.enabled = (component !== null);\n\t\tif (component !== null) {\n\t\t\tif (subObjectName !== undefined) {\n\t\t\t\tconst subObject = component.getThreeJsObjectByName(subObjectName);\n\t\t\t\tif (subObject === null) {\n\t\t\t\t\tthrow new Error(`Could not set outline on component ${component} sub-object ${subObjectName}.`);\n\t\t\t\t}\n\t\t\t\tthis._outlinePass.selectedObjects = [subObject];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst objects = component.getThreeJsObjects();\n\t\t\t\tthis._outlinePass.selectedObjects = [];\n\t\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\t\tif (objects[i].parent === this._threeJsScene) {\n\t\t\t\t\t\tthis._outlinePass.selectedObjects.push(objects[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._outlinePass.visibleEdgeColor.setRGB(color.r, color.g, color.b);\n\t\t\tthis._outlinePass.hiddenEdgeColor.setRGB(color.r / 4, color.g / 4, color.b / 4);\n\t\t}\n\t\tthis.__setupEffectComposer();\n\t}\n\n\t// INTERNALS\n\n\t/**\n\t * Add an entity to the list of occluding entities. This is called by the entity during its prepareForRender, and used by occlusion and intersection functions.\n\t * @param {Entity} entity\n\t * @internal\n\t */\n\t__addToOccludingEntities(entity) {\n\t\t// Check to see if it already exists.\n\t\tfor (let i = 0; i < this._occludingEntities.length; i++) {\n\t\t\tif (this._occludingEntities[i] === entity) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// If not, add it.\n\t\tthis._occludingEntities.push(entity);\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tsuper.__destroy();\n\n\t\t// Remove any camera-dependent variables in the scene that reference this camera.\n\t\tthis.getEntity().getScene().__removeCameraDependents(this);\n\n\t\t// If it has a viewport, unlink it.\n\t\tif (this._viewport !== null) {\n\t\t\tthis._viewport.setCamera(null);\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the camera-dependent variables and those of its connected entities.\n\t * @internal\n\t */\n\t__updateCameraVariablesForConnectedScene() {\n\t\t// Update the aspect ratio.\n\t\tconst renderSize = this._viewport.getBounds().size;\n\t\tif (!renderSize.equals(this._renderSize)) {\n\t\t\tconst aspectRatio = renderSize.x / renderSize.y;\n\t\t\tif (this._aspectRatio !== aspectRatio) {\n\t\t\t\tthis._aspectRatio = aspectRatio;\n\t\t\t}\n\n\t\t\t// Set the resolution of the render passes.\n\t\t\tthis._threeJsComposer.setSize(renderSize.x, renderSize.y);\n\t\t\tthis._renderSize.copy(renderSize);\n\t\t}\n\n\t\t// Set the auto mid-point distance, if necessary.\n\t\tif (this._midDistance === undefined) {\n\t\t\tif (this.getEntity().getParent() !== null) {\n\t\t\t\tthis._autoMidDistance = this.getEntity().getPosition().magnitude() + this.getEntity().getParent().getExtentsRadius() * 10.0;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._autoMidDistance = this._midDistance;\n\t\t}\n\n\t\t// Set the near-point distance, if necessary.\n\t\tif (this._nearDistance === undefined) {\n\t\t\tif (this.getEntity().getParent() !== null) {\n\t\t\t\tthis._autoNearDistance = Math.max(0.00001, (this.getEntity().getPosition().magnitude() - this.getEntity().getParent().getExtentsRadius()) * 0.01);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._autoNearDistance = Math.max(0.00001, this.getEntity().getPosition().magnitude() * 0.01);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._autoNearDistance = this._nearDistance;\n\t\t}\n\n\t\t// Update the projection matrix.\n\t\tthis._updateProjectionMatrix();\n\n\t\t// Update the camera-dependent variables of entities in the scene that are connected to the camera.\n\t\tthis.getEntity().__updateCameraVariables(this, null, false);\n\n\t\t// Remove any objects that are too small visually from the occluding list.\n\t\tfor (let i = 0; i < this._occludingEntities.length; i++) {\n\t\t\tif (this._occludingEntities[i].getPixelSpaceOcclusionRadius(this) < 1 || !this._occludingEntities[i].isEnabled() || !this._occludingEntities[i].canOcclude() || this.getEntity().getScene().get(this._occludingEntities[i].getName()) === null) {\n\t\t\t\tthis._occludingEntities.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the camera for rendering.\n\t * @override\n\t */\n\t__prepareForRender() {\n\t\t// Prepare each entity in the scene for rendering using this.\n\t\tconst scene = this.getEntity().getScene();\n\t\tfor (let i = 0; i < scene.getNumEntities(); i++) {\n\t\t\tconst entity = scene.getEntity(i);\n\t\t\tif (entity.isEnabled()) {\n\t\t\t\tentity.__prepareForRender(this);\n\t\t\t}\n\t\t}\n\n\t\t// If there is a dynamic environment map component, render it first.\n\t\tconst dynEnvMapComponent = /** @type {DynamicEnvironmentMapComponent} */(this.getEntity().get('dynEnvMap'));\n\t\tif (dynEnvMapComponent !== null) {\n\t\t\tdynEnvMapComponent.__render();\n\t\t}\n\t}\n\n\t/**\n\t * Renders the camera. Called by Viewport.\n\t * @internal\n\t */\n\t__render() {\n\t\t// Set the camera's orientation.\n\t\tconst orientation = this.getEntity().getOrientation();\n\t\tCameraComponent._tempThreeJsQuaternion.set(orientation.x, orientation.y, orientation.z, orientation.w);\n\t\tthis._threeJsCamera.setRotationFromQuaternion(CameraComponent._tempThreeJsQuaternion);\n\n\t\t// Do the render!\n\t\tthis._threeJsComposer.render();\n\t}\n\n\t/**\n\t * Sets the viewport that is using this camera component. Only used by Viewport itself.\n\t * @param {Viewport} viewport\n\t * @internal\n\t */\n\t__setViewport(viewport) {\n\t\t// Unlink from any previous other viewport.\n\t\tif (this._viewport !== null && this._viewport !== viewport) {\n\t\t\tthis._viewport.setCamera(null);\n\t\t}\n\n\t\tthis._viewport = viewport;\n\t}\n\n\t/**\n\t * Updates the render targets and sets up the effect composer. Can be called multiple times when conditions change.\n\t * @private\n\t */\n\t__setupEffectComposer() {\n\t\t// Create the render target.\n\t\tconst size = new THREE.Vector2();\n\t\tthis._threeJsRenderer.getSize(size);\n\t\tconst renderTargetOptions = {\n\t\t\tsamples: (Capabilities.isWebGL2() && !this._outlinePass.enabled) ? 4 : 0\n\t\t};\n\t\tconst renderTarget = new THREE.WebGLRenderTarget(size.x, size.y, renderTargetOptions);\n\t\tif (this._threeJsComposer !== null) {\n\t\t\tthis._threeJsComposer.reset(renderTarget);\n\t\t}\n\t\telse {\n\t\t\t// Create the Three.js effect composer.\n\t\t\tthis._threeJsComposer = new ThreeJsEffectComposer(this._threeJsRenderer, renderTarget);\n\n\t\t\t// Add the render passes.\n\t\t\tconst renderPass = new ThreeJsRenderPass(this._threeJsScene, this._threeJsCamera);\n\t\t\tthis._threeJsComposer.addPass(renderPass);\n\t\t\tthis._threeJsComposer.addPass(this._outlinePass);\n\t\t\tthis._threeJsComposer.addPass(this._threeJsUnrealBloomPass);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the projection.\n\t * @private\n\t */\n\t_updateProjectionMatrix() {\n\t\tif (this._fieldOfView > 0 && this._fieldOfView < 180 && this._aspectRatio > 0) {\n\t\t\tconst tanHalfFov = Math.tan(this._fieldOfView / 2);\n\t\t\tlet sx = 0;\n\t\t\tlet sz = 0;\n\t\t\tif (this._aspectRatio >= 1) {\n\t\t\t\tsx = 1 / tanHalfFov;\n\t\t\t\tsz = this._aspectRatio / tanHalfFov;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsx = 1 / (tanHalfFov * this._aspectRatio);\n\t\t\t\tsz = 1 / tanHalfFov;\n\t\t\t}\n\t\t\tconst f1 = Number.EPSILON - 1.0;\n\t\t\tconst f2 = this._autoNearDistance * (2.0 - Number.EPSILON);\n\t\t\tconst projectionMatrix = new THREE.Matrix4();\n\t\t\tprojectionMatrix.set(\n\t\t\t\tsx, 0, 0, 0,\n\t\t\t\t0, 0, sz, 0,\n\t\t\t\t0, f1, 0, f2,\n\t\t\t\t0, 1, 0, 0);\n\t\t\tthis._threeJsCamera.projectionMatrix = projectionMatrix;\n\t\t\tconst projectionMatrixInverse = new THREE.Matrix4();\n\t\t\tprojectionMatrixInverse.set(\n\t\t\t\t1 / sx, 0, 0, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t0, 1 / sz, 0, 0,\n\t\t\t\t0, 0, 1 / f2, -f1 / f2);\n\t\t\tthis._threeJsCamera.projectionMatrixInverse = projectionMatrixInverse;\n\t\t}\n\t}\n\n\t/**\n\t * Required by BaseComponent, does nothing.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Required by BaseComponent, does nothing.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t}\n}\n","/** @module pioneer */\nimport {\n\tAtmosphereComponent,\n\tBaseComponent,\n\tCache,\n\tCameraComponent,\n\tComponentRef,\n\tCubeMap,\n\tEntity,\n\tEntityRef,\n\tFastMap,\n\tGeometry,\n\tLatLonAlt,\n\tMaterialUtils,\n\tMathUtils,\n\tSpheroidComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tTile,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/**\n * The CMTS component.\n */\nexport class CMTSComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The ThreeJS scene.\n\t\t * @type {THREE.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsScene = this.getEntity().getScene().getThreeJsScene();\n\n\t\t/**\n\t\t * The end points for the texture names.\n\t\t * @type {FastMap<string, { url: string, configuration: CMTSConfiguration }>}\n\t\t * @private\n\t\t */\n\t\tthis._endPoints = new FastMap();\n\n\t\t/**\n\t\t * The height scale if a height texture is used.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._heightScale = 1;\n\n\t\t/**\n\t\t * The number of end points still loading.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numEndPointsLoading = 0;\n\n\t\t/**\n\t\t * The minimum level to which the tiles must split.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._minLevel = Number.NEGATIVE_INFINITY;\n\n\t\t/**\n\t\t * The maximum level to which the tiles can split.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxLevel = Number.POSITIVE_INFINITY;\n\n\t\t/**\n\t\t * The tileOffsets in the CMTS.\n\t\t * @type {Array<{offset: Vector3, face: number, level: number, min: Vector2, max: Vector2}>}\n\t\t * @private\n\t\t */\n\t\tthis._tileOffsets = [];\n\n\t\t/**\n\t\t * A factor that determines when to split the tiles. Higher means more splits.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._splitJoinThresholdFactor = 512.0;\n\n\t\t/**\n\t\t * The tile size of the color configuration.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._colorTileSize = 512;\n\n\t\t/**\n\t\t * The entities used for shadows. Derived from the shadow entity names.\n\t\t * @type {EntityRef[]}\n\t\t * @private\n\t\t */\n\t\tthis._shadowEntities = [];\n\n\t\t/**\n\t\t * The downloader for easier future access.\n\t\t * @private\n\t\t */\n\t\tthis._engine = this.getEntity().getScene().getEngine();\n\n\t\t/**\n\t\t * The positions of all active cameras.\n\t\t * @type {Vector3[]}\n\t\t * @private\n\t\t */\n\t\tthis._cameraPositions = [];\n\n\t\t/**\n\t\t * The fields of view of all active cameras.\n\t\t * @type {number[]}\n\t\t * @private\n\t\t */\n\t\tthis._cameraFieldsOfView = [];\n\n\t\t/**\n\t\t * The root tile.\n\t\t * @type {CMTSTile[]}\n\t\t * @private\n\t\t */\n\t\tthis._rootTiles = [null, null, null, null, null, null];\n\n\t\t/**\n\t\t * A promise that resolves when all tiles are no longer transitioning.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._tilesLoadedPromise = null;\n\n\t\t/**\n\t\t * The callback that gets called when all tiles are no longer transitioning.\n\t\t * @type {() => any}\n\t\t * @private\n\t\t */\n\t\tthis._transitionsCompleteCallback = null;\n\n\t\t/**\n\t\t * A cache of textures, one for each tile.\n\t\t * @type {Cache<Promise<THREE.Texture>>}\n\t\t * @private\n\t\t */\n\t\tthis._textureCache = new Cache((textureUrl) => {\n\t\t\treturn this.getEntity().getScene().getEngine().getTextureLoader().loadTexture(textureUrl, true);\n\t\t}, (texturePromise) => {\n\t\t\ttexturePromise.then((texture) => {\n\t\t\t\ttexture.dispose();\n\t\t\t});\n\t\t});\n\n\t\t/**\n\t\t * A counter that ensures that we don't do too many splits or joins at once.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numCurrentLoads = 0;\n\n\t\t/**\n\t\t * Get the maximum number of loads that can happen at one time.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxCurrentLoads = 10;\n\n\t\t/**\n\t\t * A reference to the atmosphere component.\n\t\t * @type {ComponentRef<AtmosphereComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._atmosphereComponentRef = new ComponentRef(this.getEntity().getScene());\n\t\tthis._atmosphereComponentRef.setByType(this.getEntity().getName(), 'atmosphere');\n\n\t\t/**\n\t\t * A reference to the spheroid component.\n\t\t * @type {ComponentRef<SpheroidComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._spheroidComponentRef = new ComponentRef(this.getEntity().getScene());\n\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid');\n\t\tthis._spheroidComponentRef.setRefChangedCallback(this._spheroidRefChangedCallback.bind(this));\n\n\t\t// Bind the callbacks to this.\n\t\tthis._spheroidChangedCallback = this._spheroidChangedCallback.bind(this);\n\n\t\t// Lets the base component to check for valid orientation when determining whether this is visible.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Sets a base url for the CMTS protocol for a given texture.\n\t * @param {string} textureName\n\t * @param {string} endPoint\n\t */\n\tsetBaseUrl(textureName, endPoint) {\n\t\tthis.resetResources();\n\n\t\t// Set the end point.\n\t\tthis._endPoints.set(textureName, { url: endPoint, configuration: null });\n\t}\n\n\t/**\n\t * Gets the height scale if a height texture is used.\n\t * @returns {number}\n\t */\n\tgetHeightScale() {\n\t\treturn this._heightScale;\n\t}\n\n\t/**\n\t * Sets the height scale if a height texture is used.\n\t * @param {number} heightScale\n\t */\n\tsetHeightScale(heightScale) {\n\t\tthis._heightScale = heightScale;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the minimum level to which the tiles must split.\n\t * @returns {number}\n\t */\n\tgetMinLevel() {\n\t\treturn this._minLevel;\n\t}\n\n\t/**\n\t * Sets the minimum level to which the tiles must split. Defaults to negative infinity.\n\t * @param {number} minLevel\n\t */\n\tsetMinLevel(minLevel) {\n\t\tthis._minLevel = minLevel;\n\t}\n\n\t/**\n\t * Gets the maximum level to which the tiles can split.\n\t * @returns {number}\n\t */\n\tgetMaxLevel() {\n\t\treturn this._maxLevel;\n\t}\n\n\t/**\n\t * Sets the maximum level to which the tiles can split. Defaults to positive infinity.\n\t * @param {number} maxLevel\n\t */\n\tsetMaxLevel(maxLevel) {\n\t\tthis._maxLevel = maxLevel;\n\t}\n\n\t/**\n\t * Adds a tileOffset to the CMTS.\n\t * @param {Vector3} offset\n\t * @param {number} face\n\t * @param {number} level\n\t * @param {number} minX\n\t * @param {number} minY\n\t * @param {number} maxX\n\t * @param {number} maxY\n\t */\n\taddTileOffset(offset, face, level, minX, minY, maxX, maxY) {\n\t\tthis._tileOffsets.push({ offset, face, level, min: new Vector2(minX, minY), max: new Vector2(maxX, maxY) });\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Removes a tileOffset from the CMTS.\n\t * @param {number} face\n\t * @param {number} level\n\t * @param {number} minX\n\t * @param {number} minY\n\t * @param {number} maxX\n\t * @param {number} maxY\n\t */\n\tremoveTileOffset(level, face, minX, minY, maxX, maxY) {\n\t\tfor (let i = 0; i < this._tileOffsets.length; i++) {\n\t\t\tconst tileOffset = this._tileOffsets[i];\n\t\t\tif (tileOffset.face === face && tileOffset.level === level && tileOffset.min.x === minX && tileOffset.min.y === minY && tileOffset.max.x === maxX && tileOffset.max.y === maxY) {\n\t\t\t\tthis._tileOffsets.splice(i, 1);\n\t\t\t\tthis.resetResources();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the number of shadow entities. Can be used to enumerate the shadow entities.\n\t * @returns {number}\n\t */\n\tgetNumShadowEntities() {\n\t\treturn this._shadowEntities.length;\n\t}\n\n\t/**\n\t * Returns the shadow entity or its name at the index.\n\t * @param {number} index\n\t * @returns {string | undefined}\n\t */\n\tgetShadowEntity(index) {\n\t\treturn this._shadowEntities[index]?.getName();\n\t}\n\n\t/**\n\t * Sets the shadow entities. Each element can be either the name of an entity or an entity itself.\n\t * @param {string[]} shadowEntities\n\t */\n\tsetShadowEntities(shadowEntities) {\n\t\tthis._shadowEntities = [];\n\t\tfor (const shadowEntity of shadowEntities) {\n\t\t\tthis._shadowEntities.push(new EntityRef(this.getEntity().getScene(), shadowEntity));\n\t\t}\n\t\tconst shadowEntitiesEnabled = (shadowEntities.length > 0);\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tThreeJsHelper.setDefine(this.getThreeJsMaterials()[i], 'shadowEntities', shadowEntitiesEnabled);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the frame-space position and height direction on the surface at the given frame-space position.\n\t * Note that the height direction is not up with planetocentric coordinates.\n\t * @param {Vector3} outPosition\n\t * @param {Vector3} outHeightDir\n\t * @param {Vector3} position\n\t */\n\tgetGroundPosition(outPosition, outHeightDir, position) {\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent === null) {\n\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\treturn;\n\t\t}\n\t\t// Get the position on the surface of the spheroid.\n\t\tconst lla = LatLonAlt.pool.get();\n\t\tspheroidComponent.llaFromXYZ(lla, position);\n\t\tlla.alt = 0;\n\t\tspheroidComponent.xyzFromLLA(outPosition, lla);\n\t\t// Get the height direction.\n\t\tif (spheroidComponent.isPlanetographic()) {\n\t\t\tspheroidComponent.upFromLLA(outHeightDir, lla);\n\t\t}\n\t\telse {\n\t\t\toutHeightDir.normalize(position);\n\t\t}\n\t\t// If there is height data, add on the height.\n\t\tconst heightEndPoint = this._endPoints.get('height');\n\t\tif (heightEndPoint !== undefined) {\n\t\t\t// Get the position is in \"sphere\" space and get the cmts coord uvFace.\n\t\t\tconst uvFace = Vector3.pool.get();\n\t\t\tconst posOnSphere = Vector3.pool.get();\n\t\t\tlla.alt = 1;\n\t\t\tGeometry.getXYZFromLLAOnSphere(posOnSphere, lla, 0);\n\t\t\tCubeMap.xyzToUVFace(uvFace, posOnSphere);\n\t\t\t// Get the corresponding root tile.\n\t\t\tlet tile = this._rootTiles[uvFace.z];\n\t\t\t// Check if it is a valid tile.\n\t\t\tif (tile === undefined || tile === null) {\n\t\t\t\tVector3.pool.release(posOnSphere);\n\t\t\t\tVector3.pool.release(uvFace);\n\t\t\t\tLatLonAlt.pool.release(lla);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Get the lowest level tile that the uv is within and has height data.\n\t\t\twhile (tile.children.length > 0) {\n\t\t\t\tconst levelFactor = 1 << (tile.getLevel() + 1);\n\t\t\t\tconst xTile = Math.floor(uvFace.x * levelFactor - tile.getTileCoord().x * 2);\n\t\t\t\tconst yTile = Math.floor(uvFace.y * levelFactor - tile.getTileCoord().y * 2);\n\t\t\t\ttile = tile.children[yTile * 2 + xTile];\n\t\t\t}\n\t\t\twhile (tile.getHeightData() === null && tile.getParent() !== null) {\n\t\t\t\ttile = tile.getParent();\n\t\t\t}\n\t\t\t// Get the height within that tile.\n\t\t\tconst heightData = tile.getHeightData();\n\t\t\tif (heightData !== null) {\n\t\t\t\tconst levelFactor = 1 << tile.getLevel();\n\t\t\t\tconst pixelX = (uvFace.x * levelFactor - tile.getTileCoord().x) * (heightData.width - 4) + 2;\n\t\t\t\tconst pixelY = (1 - (uvFace.y * levelFactor - tile.getTileCoord().y)) * (heightData.width - 4) + 2;\n\t\t\t\tconst height = CMTSTile.getLinearInterpolatedHeightPixel(pixelX, pixelY, heightData.data, heightData.width);\n\t\t\t\t// Get the new height offset and scale.\n\t\t\t\tconst configuration = heightEndPoint.configuration;\n\t\t\t\tconst heightOffset = configuration['height_range'].min * this._heightScale;\n\t\t\t\tconst heightScale = (configuration['height_range'].max - configuration['height_range'].min) * this._heightScale;\n\t\t\t\t// Set the height and convert back to xyz.\n\t\t\t\tlla.alt = heightOffset + height * heightScale;\n\t\t\t\tspheroidComponent.xyzFromLLA(outPosition, lla);\n\t\t\t}\n\t\t\t// Cleanup.\n\t\t\tVector3.pool.release(posOnSphere);\n\t\t\tVector3.pool.release(uvFace);\n\t\t}\n\t\tLatLonAlt.pool.release(lla);\n\t}\n\n\t/**\n\t * Returns true if tiles are all loaded.\n\t * @returns {boolean}\n\t */\n\tareTilesLoaded() {\n\t\treturn this._tilesLoadedPromise === null;\n\t}\n\n\t/**\n\t * Returns a promise when no more tiles are loading.\n\t * @returns {Promise<void>}\n\t */\n\tgetTilesLoadedPromise() {\n\t\treturn this._tilesLoadedPromise ?? Promise.resolve();\n\t}\n\n\t/**\n\t * Sets the reference to use for the spheroid component, by name or the type index.\n\t * @param {string | number} nameOrTypeIndex\n\t */\n\tsetSpheroidReference(nameOrTypeIndex) {\n\t\tif (typeof nameOrTypeIndex === 'string') {\n\t\t\tthis._spheroidComponentRef.setByName(this.getEntity().getName(), nameOrTypeIndex);\n\t\t}\n\t\telse {\n\t\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid', nameOrTypeIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\t// Remove the spheroid changed callback.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tspheroidComponent.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Updates the component.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Update the spheroid component reference.\n\t\tthis._spheroidComponentRef.update();\n\n\t\t// If the end points are not loaded, there's nothing more to do.\n\t\tif (this.getLoadState() !== 'loaded' || this._spheroidComponentRef.get() === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._rootTiles[0] === null) {\n\t\t\tif (this._numEndPointsLoading === 0) {\n\t\t\t\t// Create the root tiles to start.\n\t\t\t\tfor (let face = 0; face < 6; face++) {\n\t\t\t\t\tthis._rootTiles[face] = new CMTSTile(this, null, face, 0, new Vector2(0, 0));\n\t\t\t\t\tthis._rootTiles[face].forceLoad();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set to true if any tile or configuration is still loading or unloading.\n\t\tlet transitioning = false;\n\n\t\t// Get the positions of all cameras as lat, lon, alt in the frame of the spheroid.\n\t\twhile (this._cameraPositions.length > this._engine.getNumViewports()) {\n\t\t\tthis._cameraPositions.pop();\n\t\t\tthis._cameraFieldsOfView.pop();\n\t\t}\n\t\twhile (this._cameraPositions.length < this._engine.getNumViewports()) {\n\t\t\tthis._cameraPositions.push(new Vector3());\n\t\t\tthis._cameraFieldsOfView.push(1);\n\t\t}\n\t\tfor (let i = 0, l = this._engine.getNumViewports(); i < l; i++) {\n\t\t\tconst cameraPosition = this._cameraPositions[i];\n\t\t\tconst cameraComponent = this._engine.getViewport(i).getCamera();\n\t\t\tcameraComponent.getEntity().getPositionRelativeToEntity(cameraPosition, Vector3.Zero, this.getEntity());\n\t\t\tcameraPosition.rotateInverse(this.getEntity().getOrientation(), cameraPosition);\n\t\t\tthis._cameraFieldsOfView[i] = cameraComponent.getFieldOfView();\n\t\t}\n\n\t\t// Do the update on all of the tiles recursively.\n\t\t// If any tile is still transitioning, set transitioning to true.\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\ttransitioning = this._rootTiles[face].update() || transitioning;\n\t\t}\n\n\t\t// If there is no current promise (there were no tiles or configuration transitioning) and now there are,\n\t\t// Create the loaded promise and record its resolve callback.\n\t\tif (this._tilesLoadedPromise === null && transitioning) {\n\t\t\tthis._tilesLoadedPromise = new Promise((resolve) => {\n\t\t\t\tthis._transitionsCompleteCallback = resolve;\n\t\t\t});\n\t\t}\n\n\t\t// If the loaded promise callback exists and we're no longer transitioning,\n\t\t// Clear the loaded promise and callback and call the callback (the resolve function of the promise).\n\t\tif (this._tilesLoadedPromise !== null && !transitioning) {\n\t\t\tconst callback = this._transitionsCompleteCallback;\n\t\t\tthis._tilesLoadedPromise = null;\n\t\t\tthis._transitionsCompleteCallback = null;\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the component for render.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\tif (this._rootTiles[0] === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set the orientation to the entity's orientation.\n\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects(), this.getEntity());\n\n\t\t// Prepare the root tiles for rendering.\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._rootTiles[face].prepareForRender(camera);\n\t\t}\n\n\t\t// Get the atmosphere.\n\t\tconst atmosphere = this._atmosphereComponentRef.get();\n\n\t\t// Setup the regular uniforms.\n\t\tMaterialUtils.setUniforms(this.getThreeJsMaterials(), camera, this.getEntity(), this._shadowEntities, atmosphere, true);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void[]>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\t/** @type {Array<Promise<void>>} */\n\t\tconst promises = [];\n\t\tfor (let i = 0, l = this._endPoints.size; i < l; i++) {\n\t\t\tconst entry = this._endPoints.getAt(i);\n\t\t\tconst endPoint = entry.value.url;\n\t\t\t// Load the end point.\n\t\t\tthis._numEndPointsLoading += 1;\n\t\t\tconst promise = this.getEntity().getScene().getEngine().getDownloader().download(endPoint + '/configuration.json', false).then((download) => {\n\t\t\t\tif (download.status === 'failed') {\n\t\t\t\t\tthrow new Error('Failed to download ' + endPoint + '/configuration.json');\n\t\t\t\t}\n\t\t\t\tif (download.status === 'completed' && typeof download.content === 'string') {\n\t\t\t\t\tconst configuration = /** @type {CMTSConfiguration} */(JSON.parse(download.content));\n\t\t\t\t\tentry.value.configuration = configuration;\n\t\t\t\t\tif (entry.key === 'color') {\n\t\t\t\t\t\tthis._colorTileSize = configuration.tile_size;\n\t\t\t\t\t}\n\t\t\t\t\tthis._numEndPointsLoading -= 1;\n\t\t\t\t}\n\t\t\t});\n\t\t\tpromises.push(promise);\n\t\t}\n\n\t\t// Return promise that resolves when all end points have been loaded.\n\t\treturn Promise.all(promises);\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tif (this._rootTiles[face] !== null) {\n\t\t\t\tthis._rootTiles[face].destroy();\n\t\t\t}\n\t\t}\n\t\tthis._rootTiles = [null, null, null, null, null, null];\n\t}\n\n\t/**\n\t * Gets the number of loads currently happening.\n\t * @returns {number}\n\t * @internal\n\t */\n\t__getNumCurrentLoads() {\n\t\treturn this._numCurrentLoads;\n\t}\n\n\t/**\n\t * Increments the number of loads currently happening. Used by CMTSTile.\n\t * @internal\n\t */\n\t__incNumCurrentLoads() {\n\t\tthis._numCurrentLoads += 1;\n\t}\n\n\t/**\n\t * Decrements the number of loads currently happening. Used by CMTSTile.\n\t * @internal\n\t */\n\t__decNumCurrentLoads() {\n\t\tthis._numCurrentLoads -= 1;\n\t}\n\n\t/**\n\t * Gets the maximum number of loads that can happen. Used by CMTSTile.\n\t * @internal\n\t */\n\t__getMaxCurrentLoads() {\n\t\treturn this._maxCurrentLoads;\n\t}\n\n\t/**\n\t * Gets the end points.\n\t * @returns {FastMap<string, { url: string, configuration: CMTSConfiguration }>}\n\t * @internal\n\t */\n\t__getEndPoints() {\n\t\treturn this._endPoints;\n\t}\n\n\t/**\n\t * Returns true if thare are no end points loading.\n\t * @returns {boolean}\n\t * @internal\n\t */\n\t__endPointsAreLoaded() {\n\t\treturn this._numEndPointsLoading === 0;\n\t}\n\n\t/**\n\t * Gets the tileOffsets. Used by CMTSTile.\n\t * @returns {Array<{offset: Vector3, face: number, level: number, min: Vector2, max: Vector2}>}\n\t * @internal\n\t */\n\t__getTileOffsets() {\n\t\treturn this._tileOffsets;\n\t}\n\n\t/**\n\t * Gets the texture cache. Used by CMTSTile.\n\t * @returns {Cache<Promise<THREE.Texture>>}\n\t * @internal\n\t */\n\t__getTextureCache() {\n\t\treturn this._textureCache;\n\t}\n\n\t/**\n\t * Gets the camera positions. Used by CMTSTile.\n\t * @returns {Vector3[]}\n\t * @internal\n\t */\n\t__getCameraPositions() {\n\t\treturn this._cameraPositions;\n\t}\n\n\t/**\n\t * Gets the camera fields of view. Used by CMTSTile.\n\t * @returns {number[]}\n\t * @internal\n\t */\n\t__getCameraFieldsOfView() {\n\t\treturn this._cameraFieldsOfView;\n\t}\n\n\t/**\n\t * Gets the Three.js scene. Used by CMTSTile.\n\t * @returns {THREE.Scene}\n\t * @internal\n\t */\n\t__getThreeJsScene() {\n\t\treturn this._threeJsScene;\n\t}\n\n\t/**\n\t * Gets the split/join threshold factor.\n\t * @returns {number}\n\t * @internal\n\t */\n\t__getSplitJoinThresholdFactor() {\n\t\treturn this._splitJoinThresholdFactor;\n\t}\n\n\t/**\n\t * Gets the tile size of the color configuration.\n\t * @returns {number}\n\t * @internal\n\t */\n\t__getColorTileSize() {\n\t\treturn this._colorTileSize;\n\t}\n\n\t/*\n\t * Gets the spheroid component this is using. Used by Tile.\n\t * @returns {SpheroidComponent}\n\t * @package\n\t */\n\t__getSpheroidComponent() {\n\t\treturn this._spheroidComponentRef.get();\n\t}\n\n\t/**\n\t * Callback called when the spheroid reference is found or lost.\n\t * @param {SpheroidComponent} oldRef\n\t * @param {SpheroidComponent} newRef\n\t * @private\n\t */\n\t_spheroidRefChangedCallback(oldRef, newRef) {\n\t\tif (oldRef !== null) {\n\t\t\toldRef.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tif (newRef !== null) {\n\t\t\tnewRef.addChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tthis._spheroidChangedCallback();\n\t}\n\n\t/**\n\t * Callback to be called when the spheroid component changed.\n\t * @private\n\t */\n\t_spheroidChangedCallback() {\n\t\t// Set the radii uniforms.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tthis.__setRadius(Math.max(spheroidComponent.getEquatorialRadius(), spheroidComponent.getPolarRadius()));\n\t\t}\n\t\telse {\n\t\t\tthis.__setRadius(0);\n\t\t}\n\t\tthis.resetResources();\n\t}\n}\n\n/**\n * A single tile with mesh, material, and bounds.\n * @extends Tile<CMTSTile>\n * @private\n */\nclass CMTSTile extends Tile {\n\t/**\n\t * Constructor.\n\t * @param {CMTSComponent} component\n\t * @param {CMTSTile} parent\n\t * @param {number} face\n\t * @param {number} level\n\t * @param {Vector2} tile\n\t */\n\tconstructor(component, parent, face, level, tile) {\n\t\tsuper(parent);\n\n\t\t/**\n\t\t * The CMTS component.\n\t\t * @type {CMTSComponent}\n\t\t * @private\n\t\t */\n\t\tthis._component = component;\n\n\t\t/**\n\t\t * The face.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._face = face;\n\n\t\t/**\n\t\t * The level.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._level = level;\n\n\t\t/**\n\t\t * The level exponential factor.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._levelPow = Math.pow(2, -Math.max(0, level));\n\n\t\t/**\n\t\t * The tile coordinates.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._tile = new Vector2();\n\t\tthis._tile.copy(tile);\n\n\t\t/**\n\t\t * True if this can't be split any more.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isLeaf = true;\n\n\t\t/**\n\t\t * The center of the tile's surface, for distance checking.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._center = new Vector3();\n\n\t\t/**\n\t\t * The \"radius\", the distance from the center to one of the corners, for distance checking.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._radius = 0;\n\n\t\t/**\n\t\t * The material used by the tile.\n\t\t * @type {THREE.ShaderMaterial}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsMaterial = null;\n\n\t\t/**\n\t\t * Gets the level to which the texture belongs for the given texture name.\n\t\t * @type {FastMap<string, number>}\n\t\t * @private\n\t\t */\n\t\tthis._textureLevels = new FastMap();\n\n\t\t/**\n\t\t * Gets the texture promises that are aquired from the texture cache.\n\t\t * @type {FastMap<string, Promise<THREE.Texture>>}\n\t\t * @private\n\t\t */\n\t\tthis._texturePromises = new FastMap();\n\n\t\t/**\n\t\t * A flag that says whether or not one of the non-positive textures is loading.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._nonPositiveTextureLoading = false;\n\n\t\t/**\n\t\t * The Three.js object of the tile.\n\t\t * @type {THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial | THREE.ShaderMaterial[]>}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsObject = null;\n\n\t\t/**\n\t\t * The height data if it exists.\n\t\t * @type {ImageData}\n\t\t * @private\n\t\t */\n\t\tthis._heightData = null;\n\n\t\t/**\n\t\t * The tile offset. The vertices will use this as their origin.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._tileOffset = this._getTileOffset();\n\n\t\t// Check if this tile is a leaf.\n\t\tfor (let y = 0; y < 2; y++) {\n\t\t\tfor (let x = 0; x < 2; x++) {\n\t\t\t\tfor (let i = 0; i < this._component.__getEndPoints().size; i++) {\n\t\t\t\t\tconst configuration = this._component.__getEndPoints().getAt(i).value.configuration;\n\t\t\t\t\tthis._isLeaf = this._isLeaf && !CMTSTile._isInABoundary(configuration, this._face, this._level + 1, new Vector2(this._tile.x * 2 + x, this._tile.y * 2 + y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get the spheroid component.\n\t\tconst spheroidComponent = component.__getSpheroidComponent();\n\n\t\t// Calculate the center.\n\t\tCMTSTile.cmtsCoordToPosition(this._center, this._face, this._levelPow, this._tile.x + 0.5, this._tile.y + 0.5, spheroidComponent);\n\n\t\t// Calculate the radius by getting the distance between the center and the origin point.\n\t\tconst origin1 = new Vector3();\n\t\tconst origin2 = new Vector3();\n\t\tconst origin3 = new Vector3();\n\t\tconst origin4 = new Vector3();\n\t\tCMTSTile.cmtsCoordToPosition(origin1, this._face, this._levelPow, this._tile.x, this._tile.y, spheroidComponent);\n\t\tCMTSTile.cmtsCoordToPosition(origin2, this._face, this._levelPow, this._tile.x + 1, this._tile.y, spheroidComponent);\n\t\tCMTSTile.cmtsCoordToPosition(origin3, this._face, this._levelPow, this._tile.x + 1, this._tile.y + 1, spheroidComponent);\n\t\tCMTSTile.cmtsCoordToPosition(origin4, this._face, this._levelPow, this._tile.x, this._tile.y + 1, spheroidComponent);\n\t\torigin1.sub(this._center, origin1);\n\t\torigin2.sub(this._center, origin2);\n\t\torigin3.sub(this._center, origin3);\n\t\torigin4.sub(this._center, origin4);\n\t\tthis._radius = Math.max(origin1.magnitude(), origin2.magnitude(), origin3.magnitude(), origin4.magnitude());\n\n\t\t// Figure out which texture levels this uses. It may use a texture from a higher level if a texture doesn't exist at this level.\n\t\tconst endPoints = this._component.__getEndPoints();\n\t\tfor (let i = 0; i < endPoints.size; i++) {\n\t\t\tconst textureName = endPoints.getAt(i).key;\n\t\t\tconst endPoint = endPoints.getAt(i).value;\n\n\t\t\t// If we're at level 0, check for non-positive levels.\n\t\t\tconst nonPositiveLevel = this._level === 0 ? this._getNonPositiveLevel(textureName) : 0;\n\n\t\t\tif (CMTSTile._isInABoundary(endPoint.configuration, this._face, this._level, this._tile)) {\n\t\t\t\tconst textureLevel = this._level === 0 ? nonPositiveLevel : this._level;\n\t\t\t\t// Set the material's level for the texture name to this level.\n\t\t\t\tthis._textureLevels.set(textureName, textureLevel);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ancestor = this.getParent();\n\t\t\t\twhile (ancestor !== null && ancestor._level !== ancestor._textureLevels.getAt(i).value) {\n\t\t\t\t\tancestor = ancestor.getParent();\n\t\t\t\t}\n\t\t\t\tif (ancestor !== null) { // It found an ancestor, so use that texture for this tile.\n\t\t\t\t\tthis._textureLevels.set(textureName, ancestor._textureLevels.getAt(i).value);\n\t\t\t\t}\n\t\t\t\telse { // There's no coverage for this tile all the way up to the top, so just set it to 0.\n\t\t\t\t\tthis._textureLevels.set(textureName, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the level.\n\t * @returns {number}\n\t */\n\tgetLevel() {\n\t\treturn this._level;\n\t}\n\n\t/**\n\t * Gets the tile coords.\n\t * @returns {Vector2}\n\t */\n\tgetTileCoord() {\n\t\treturn this._tile;\n\t}\n\n\t/**\n\t * Gets the height data, if any.\n\t * @returns {ImageData | null}\n\t */\n\tgetHeightData() {\n\t\treturn this._heightData;\n\t}\n\n\t/**\n\t * @param {CMTSTile} parent\n\t * @param {number} row - 0 or 1\n\t * @param {number} col - 0 or 1\n\t * @returns {CMTSTile}\n\t * @override\n\t */\n\tcreateNewTile(parent, row, col) {\n\t\tconst level = this._level + 1;\n\t\tconst tile = new Vector2(parent._tile.x * 2 + col, parent._tile.y * 2 + row);\n\t\treturn new CMTSTile(parent._component, this, this._face, level, tile);\n\t}\n\n\t/**\n\t * Returns true if this tile should be split.\n\t * @returns {boolean}\n\t * @override\n\t */\n\tcheckSplit() {\n\t\t// Don't split if we're a leaf or at the maximum level of detail.\n\t\tif (this._isLeaf || this._level >= this._component.getMaxLevel()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._component.__getNumCurrentLoads() >= this._component.__getMaxCurrentLoads()) {\n\t\t\treturn false;\n\t\t}\n\t\t// Always split if we're below the minimum level of detail.\n\t\tif (this._level < this._component.getMinLevel()) {\n\t\t\treturn true;\n\t\t}\n\t\t// Get the pixel size, used to determine how much we should split.\n\t\tconst tilePixelSize = this._component.__getColorTileSize();\n\t\t// Split if the nearest camera distance is less than the threshold.\n\t\treturn this._getNearestDistance() < this._component.__getSplitJoinThresholdFactor() * this._radius / tilePixelSize;\n\t}\n\n\t/**\n\t * Returns true if this tile should join its children.\n\t * @returns {boolean}\n\t * @override\n\t */\n\tcheckJoin() {\n\t\t// Always join is we're above the maximum level of detail.\n\t\tif (this._level >= this._component.getMaxLevel()) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._component.__getNumCurrentLoads() >= this._component.__getMaxCurrentLoads()) {\n\t\t\treturn false;\n\t\t}\n\t\t// Never join if we're at or below the minimum level of detail.\n\t\tif (this._level < this._component.getMinLevel()) {\n\t\t\treturn false;\n\t\t}\n\t\t// Get the pixel size, used to determine how much we should split.\n\t\tconst tilePixelSize = this._component.__getColorTileSize();\n\t\t// Check if the nearest camera distance is greater than the threshold.\n\t\treturn this._getNearestDistance() > this._component.__getSplitJoinThresholdFactor() * this._radius / tilePixelSize * 4;\n\t}\n\n\t/**\n\t * Asynchronously loads the tile so that it may be used.\n\t * @returns {Promise<void | void[]>}\n\t * @override\n\t */\n\tasync load() {\n\t\t// Increment the number of loads so we don't have too many concurrent loads.\n\t\tthis._component.__incNumCurrentLoads();\n\n\t\tif (this._threeJsMaterial !== null) {\n\t\t\tthis._component.__decNumCurrentLoads();\n\t\t\tthrow new Error('Tile already has material.');\n\t\t}\n\n\t\t// Get a material from the component's materials cache.\n\t\tthis._threeJsMaterial = MaterialUtils.get();\n\t\tthis._component.getThreeJsMaterials().push(this._threeJsMaterial);\n\t\tthis._threeJsMaterial.defines['shadowEntities'] = (this._component.getNumShadowEntities() > 0);\n\t\t// this._threeJsMaterial.wireframe = true;\n\t\t// this._threeJsMaterial.defines['baseColor'] = true;\n\t\t// this._threeJsMaterial.uniforms['color'].value.setRGB(0.25 + 0.75 * Math.random(), 0.25 + 0.75 * Math.random(), 0.25 + 0.75 * Math.random());\n\n\t\tconst endPoints = this._component.__getEndPoints();\n\t\t// A list of promises that will be returned by load.\n\t\tconst loadPromises = [];\n\t\tfor (let i = 0; i < endPoints.size; i++) {\n\t\t\tconst textureName = endPoints.getAt(i).key;\n\t\t\tconst endPoint = endPoints.getAt(i).value;\n\t\t\tlet texturePromise = /** @type {Promise<THREE.Texture>} */(null);\n\t\t\tconst textureLevel = this._textureLevels.get(textureName);\n\t\t\tconst tileX = this._tile.x >> (this._level - textureLevel);\n\t\t\tconst tileY = this._tile.y >> (this._level - textureLevel);\n\t\t\t// Form the URL from the end point and the tile params.\n\t\t\tconst textureUrl = endPoint.url + '/' + this._face + '/' + textureLevel + '/' + tileX + '/' + tileY + '.' + endPoint.configuration.extension;\n\t\t\t// Do the loading of the texture.\n\t\t\ttexturePromise = this._component.__getTextureCache().get(textureUrl);\n\t\t\tthis._texturePromises.set(textureName, texturePromise);\n\t\t\tloadPromises.push(texturePromise.then((texture) => {\n\t\t\t\tthis._setTexture(textureName, texture);\n\t\t\t}).catch(async () => { // There was an error, so just set it to pink.\n\t\t\t\tthis._component.__getTextureCache().release(texturePromise);\n\t\t\t\ttexturePromise = this._component.__getTextureCache().get('pink');\n\t\t\t\tconst texture = await texturePromise;\n\t\t\t\tthis._setTexture(textureName, texture);\n\t\t\t}));\n\t\t}\n\t\treturn Promise.all(loadPromises).finally(() => {\n\t\t\tthis._component.__decNumCurrentLoads();\n\t\t});\n\t}\n\n\t/**\n\t * Asynchronously unloads the tile.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tasync unload() {\n\t\tif (this._threeJsMaterial === null) {\n\t\t\tthrow new Error('Tile has no material to unload.');\n\t\t}\n\t\t// Remove up the material from the materials list.\n\t\tconst materials = this._component.getThreeJsMaterials();\n\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\tif (materials[i] === this._threeJsMaterial) {\n\t\t\t\tmaterials.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Dispose of the material.\n\t\tthis._threeJsMaterial.dispose();\n\t\tthis._threeJsMaterial = null;\n\t\t// Clean up the texture.\n\t\tfor (let i = 0; i < this._texturePromises.size; i++) {\n\t\t\tthis._component.__getTextureCache().release(this._texturePromises.getAt(i).value);\n\t\t}\n\t}\n\n\t/**\n\t * Asynchronously activates the tile.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tasync activate() {\n\t\tif (this._threeJsObject !== null || this._threeJsMaterial === null) {\n\t\t\tthrow new Error('NULL');\n\t\t}\n\t\t// Setup the attributes, depending on the types of data and textures available.\n\t\tconst attributes = [\n\t\t\t{ name: 'position', dimensions: 3 },\n\t\t\t{ name: 'normal', dimensions: 3 },\n\t\t\t{ name: 'uv', dimensions: 2 }\n\t\t];\n\t\tconst hasNormalTexture = this._textureLevels.has('normal');\n\t\tif (hasNormalTexture) {\n\t\t\tattributes.push({ name: 'tangent', dimensions: 3 });\n\t\t\tattributes.push({ name: 'bitangent', dimensions: 3 });\n\t\t}\n\t\tfor (let i = 0; i < this._textureLevels.size; i++) {\n\t\t\tconst textureName = this._textureLevels.getAt(i).key;\n\t\t\tif (textureName !== 'color' && textureName !== 'height') {\n\t\t\t\tattributes.push({ name: textureName + 'UV', dimensions: 2 });\n\t\t\t}\n\t\t}\n\t\t// Create the Three.js object.\n\t\tthis._threeJsObject = ThreeJsHelper.createMeshObject(this._component, this._threeJsMaterial, attributes, false);\n\t\tthis._component.getThreeJsObjects().push(this._threeJsObject);\n\t\tThreeJsHelper.useInDynEnvMap(this._threeJsObject, true);\n\n\t\tthis._setupMesh();\n\t}\n\n\t/**\n\t * Asynchronously deactivates the tile.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tasync deactivate() {\n\t\t// Remove the object from the objects list.\n\t\tconst objects = this._component.getThreeJsObjects();\n\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\tif (objects[i] === this._threeJsObject) {\n\t\t\t\tobjects.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Destroy the object and its geometry.\n\t\tThreeJsHelper.destroyObject(this._threeJsObject);\n\t\tthis._threeJsObject = null;\n\t}\n\n\t/**\n\t * Updates the tiles recursively. Returns true if the tile or any descendant is transitioning.\n\t * @returns {boolean}\n\t */\n\tupdate() {\n\t\tif (!this._component.__endPointsAreLoaded()) {\n\t\t\treturn false;\n\t\t}\n\t\tlet transitioning = this.check();\n\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\ttransitioning = this.children[i].update() || transitioning;\n\t\t}\n\n\t\t// If we're at the root level and it's loaded, see if we need to change to a negative level texture.\n\t\tif (!transitioning && !this._nonPositiveTextureLoading && this._level === 0 && this.children.length === 0) {\n\t\t\tconst endPoints = this._component.__getEndPoints();\n\t\t\tfor (let i = 0; i < endPoints.size; i++) {\n\t\t\t\tconst textureName = endPoints.getAt(i).key;\n\t\t\t\tconst endPoint = endPoints.getAt(i).value;\n\t\t\t\tconst textureLevel = this._getNonPositiveLevel(textureName);\n\t\t\t\tif (textureLevel !== this._textureLevels.get(textureName)) {\n\t\t\t\t\tthis._nonPositiveTextureLoading = true;\n\t\t\t\t\tthis._textureLevels.set(textureName, textureLevel);\n\t\t\t\t\ttransitioning = true;\n\t\t\t\t\t// Form the URL from the end point and the tile params.\n\t\t\t\t\tconst textureUrl = endPoint.url + '/' + this._face + '/' + textureLevel + '/0/0.' + endPoint.configuration.extension;\n\t\t\t\t\t// Save the previous texture promise.\n\t\t\t\t\tconst prevTexturePromise = this._texturePromises.get(textureName);\n\t\t\t\t\t// Do the loading of the texture.\n\t\t\t\t\tlet texturePromise = this._component.__getTextureCache().get(textureUrl);\n\t\t\t\t\tthis._texturePromises.set(textureName, texturePromise);\n\t\t\t\t\ttexturePromise.then((texture) => {\n\t\t\t\t\t\tthis._setTexture(textureName, texture);\n\t\t\t\t\t\tthis._setupMesh();\n\t\t\t\t\t\tthis._nonPositiveTextureLoading = false;\n\t\t\t\t\t}).catch(async () => { // There was an error, so just set it to pink.\n\t\t\t\t\t\tthis._component.__getTextureCache().release(texturePromise);\n\t\t\t\t\t\ttexturePromise = this._component.__getTextureCache().get('pink');\n\t\t\t\t\t\tconst texture = await texturePromise;\n\t\t\t\t\t\tthis._setTexture(textureName, texture);\n\t\t\t\t\t\tthis._nonPositiveTextureLoading = false;\n\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t// Now that the new texture is loaded, release the previous texture.\n\t\t\t\t\t\tif (textureName !== 'height') {\n\t\t\t\t\t\t\tthis._component.__getTextureCache().release(prevTexturePromise);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttransitioning = this._nonPositiveTextureLoading || transitioning;\n\n\t\treturn transitioning;\n\t}\n\n\t_setupMesh() {\n\t\t// Get the pixel tab, used to make mesh tabs.\n\t\tconst tilePixelSize = this._component.__getColorTileSize();\n\n\t\t// Since there is one set of UVs per texture name, we have to set them up here.\n\t\t/** @type {FastMap<string, Float32Array>} */\n\t\tconst meshUVs = new FastMap();\n\t\t/** @type {FastMap<string, Vector2>} */\n\t\tconst uvOffsets = new FastMap();\n\t\t/** @type {FastMap<string, Vector2>} */\n\t\tconst uvScales = new FastMap();\n\t\tfor (let i = 0; i < this._textureLevels.size; i++) {\n\t\t\tconst textureName = this._textureLevels.getAt(i).key;\n\t\t\t// Calculate the uv bounds, since it may be using a material from a different level.\n\t\t\tconst levelFactor = 1 << (this._level - Math.max(0, this._textureLevels.get(textureName)));\n\t\t\tuvOffsets.set(textureName, new Vector2(\n\t\t\t\t(this._tile.x - Math.floor(this._tile.x / levelFactor) * levelFactor) / levelFactor,\n\t\t\t\t(this._tile.y - Math.floor(this._tile.y / levelFactor) * levelFactor) / levelFactor));\n\t\t\tuvScales.set(textureName, new Vector2(1 / levelFactor, 1 / levelFactor));\n\t\t}\n\t\tconst hasNormalTexture = this._textureLevels.has('normal');\n\n\t\t// Create the vertices, normals, uvs, and indices arrays.\n\t\tconst numUVerts = this._heightData ? MathUtils.clamp(Math.ceil(this._heightData.width * uvScales.get('height').x) - 2, 5, 129) : (5 << MathUtils.clamp(2 - this._level / 2, 0, 2));\n\t\tconst numVVerts = this._heightData ? MathUtils.clamp(Math.ceil(this._heightData.height * uvScales.get('height').y) - 2, 5, 129) : (5 << MathUtils.clamp(2 - this._level / 2, 0, 2));\n\t\tconst numVerts = numUVerts * numVVerts;\n\t\tconst meshPositions = new Float32Array(numVerts * 3);\n\t\tconst meshNormals = new Float32Array(numVerts * 3);\n\t\tlet meshTangents = null;\n\t\tlet meshBitangents = null;\n\t\tif (hasNormalTexture) {\n\t\t\tmeshTangents = new Float32Array(numVerts * 3);\n\t\t\tmeshBitangents = new Float32Array(numVerts * 3);\n\t\t}\n\t\tconst meshIndices = new Uint16Array((numUVerts - 1) * (numVVerts - 1) * 6);\n\t\tfor (let i = 0; i < this._textureLevels.size; i++) {\n\t\t\tconst textureName = this._textureLevels.getAt(i).key;\n\t\t\t// Create the uv array.\n\t\t\tmeshUVs.set(textureName, new Float32Array(numVerts * 2));\n\t\t}\n\n\t\t// Get the height offset and scale, if it has a height map.\n\t\tlet heightOffset = 0;\n\t\tlet heightScale = 0;\n\t\tif (this._textureLevels.has('height')) {\n\t\t\tconst configuration = this._component.__getEndPoints().get('height').configuration;\n\t\t\theightOffset = configuration['height_range'].min * this._component.getHeightScale();\n\t\t\theightScale = (configuration['height_range'].max - configuration['height_range'].min) * this._component.getHeightScale();\n\t\t}\n\n\t\t// Set the vertices, normals, uvs, and indices arrays.\n\t\tconst tile = new Vector2();\n\t\tconst pos = new Vector3();\n\t\tconst heightDir = new Vector3();\n\t\tconst up = new Vector3();\n\t\tconst tangent = new Vector3();\n\t\tconst bitangent = new Vector3();\n\t\tconst lla = new LatLonAlt();\n\t\tconst spheroid = this._component.__getSpheroidComponent();\n\t\tfor (let y = 0; y < numVVerts; y++) {\n\t\t\tfor (let x = 0; x < numUVerts; x++) {\n\t\t\t\tconst vertexI = y * numUVerts + x;\n\t\t\t\t// Get the tile coordinate of this place within the tile.\n\t\t\t\ttile.set(this._tile.x + (x - 1) / (numUVerts - 3), this._tile.y + (y - 1) / (numVVerts - 3));\n\n\t\t\t\t// Convert it to an XYZ.\n\t\t\t\tCMTSTile.cmtsCoordToPosition(pos, this._face, this._levelPow, tile.x, tile.y, spheroid);\n\t\t\t\tif (hasNormalTexture) {\n\t\t\t\t\tCMTSTile.cmtsCoordToTangent(tangent, this._face, this._levelPow, tile.x, tile.y, spheroid);\n\t\t\t\t\tCMTSTile.cmtsCoordToBitangent(bitangent, this._face, this._levelPow, tile.x, tile.y, spheroid);\n\t\t\t\t}\n\n\t\t\t\t// Convert it to an LLA and get up.\n\t\t\t\tspheroid.llaFromXYZ(lla, pos);\n\t\t\t\tspheroid.upFromLLA(up, lla);\n\n\t\t\t\t// Get the height direction. It is not the same as up if it is planetocentric.\n\t\t\t\tif (spheroid.isPlanetographic()) {\n\t\t\t\t\theightDir.copy(up);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\theightDir.normalize(pos);\n\t\t\t\t}\n\n\t\t\t\tif (this._heightData) { // If there's a height map, get the heightmap value and apply it to the position.\n\t\t\t\t\tconst data = this._heightData.data;\n\t\t\t\t\tconst uvOffset = uvOffsets.get('height');\n\t\t\t\t\tconst uvScale = uvScales.get('height');\n\t\t\t\t\tconst heightTileSize = this._heightData.width - 4;\n\n\t\t\t\t\t// Get the height position.\n\t\t\t\t\tCMTSTile.getHeightPos(pos, heightDir, x, y, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t// Calculate the normal if there isn't a normal map.\n\t\t\t\t\tif (!this._textureLevels.has('normal')) {\n\t\t\t\t\t\tconst posX1 = Vector3.pool.get();\n\t\t\t\t\t\tconst posX2 = Vector3.pool.get();\n\t\t\t\t\t\tconst posY1 = Vector3.pool.get();\n\t\t\t\t\t\tconst posY2 = Vector3.pool.get();\n\t\t\t\t\t\tconst posX1Y1 = Vector3.pool.get();\n\t\t\t\t\t\tconst posX2Y2 = Vector3.pool.get();\n\t\t\t\t\t\tconst temp1 = Vector3.pool.get();\n\t\t\t\t\t\tconst temp2 = Vector3.pool.get();\n\t\t\t\t\t\tCMTSTile.cmtsCoordToPosition(posX1, this._face, this._levelPow, tile.x - 1 / (numUVerts - 3), tile.y, spheroid);\n\t\t\t\t\t\tCMTSTile.getHeightPos(posX1, heightDir, x - 1, y, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t\tCMTSTile.cmtsCoordToPosition(posX2, this._face, this._levelPow, tile.x + 1 / (numUVerts - 3), tile.y, spheroid);\n\t\t\t\t\t\tCMTSTile.getHeightPos(posX2, heightDir, x + 1, y, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t\tCMTSTile.cmtsCoordToPosition(posY1, this._face, this._levelPow, tile.x, tile.y - 1 / (numVVerts - 3), spheroid);\n\t\t\t\t\t\tCMTSTile.getHeightPos(posY1, heightDir, x, y - 1, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t\tCMTSTile.cmtsCoordToPosition(posY2, this._face, this._levelPow, tile.x, tile.y + 1 / (numVVerts - 3), spheroid);\n\t\t\t\t\t\tCMTSTile.getHeightPos(posY2, heightDir, x, y + 1, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t\tCMTSTile.cmtsCoordToPosition(posX1Y1, this._face, this._levelPow, tile.x - 1 / (numUVerts - 3), tile.y - 1 / (numVVerts - 3), spheroid);\n\t\t\t\t\t\tCMTSTile.getHeightPos(posX1Y1, heightDir, x - 1, y - 1, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t\tCMTSTile.cmtsCoordToPosition(posX2Y2, this._face, this._levelPow, tile.x + 1 / (numUVerts - 3), tile.y + 1 / (numVVerts - 3), spheroid);\n\t\t\t\t\t\tCMTSTile.getHeightPos(posX2Y2, heightDir, x + 1, y + 1, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale);\n\t\t\t\t\t\tposX1.sub(posX2, posX1);\n\t\t\t\t\t\tposY1.sub(posY2, posY1);\n\t\t\t\t\t\theightDir.cross(posX1, posY1);\n\t\t\t\t\t\theightDir.normalize(heightDir);\n\t\t\t\t\t\tVector3.pool.release(posX1);\n\t\t\t\t\t\tVector3.pool.release(posX2);\n\t\t\t\t\t\tVector3.pool.release(posY1);\n\t\t\t\t\t\tVector3.pool.release(posY2);\n\t\t\t\t\t\tVector3.pool.release(posX1Y1);\n\t\t\t\t\t\tVector3.pool.release(posX2Y2);\n\t\t\t\t\t\tVector3.pool.release(temp1);\n\t\t\t\t\t\tVector3.pool.release(temp2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (x === 0 || y === 0 || x === numUVerts - 1 || y === numVVerts - 1) {\n\t\t\t\t\tif (this._textureLevels.has('height')) {\n\t\t\t\t\t\tpos.setMagnitude(pos, pos.magnitude() - 2.0 * heightScale * this._levelPow);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpos.mult(pos, 0.9);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpos.sub(pos, this._tileOffset);\n\n\t\t\t\tmeshPositions[vertexI * 3 + 0] = pos.x;\n\t\t\t\tmeshPositions[vertexI * 3 + 1] = pos.y;\n\t\t\t\tmeshPositions[vertexI * 3 + 2] = pos.z;\n\n\t\t\t\tmeshNormals[vertexI * 3 + 0] = heightDir.x;\n\t\t\t\tmeshNormals[vertexI * 3 + 1] = heightDir.y;\n\t\t\t\tmeshNormals[vertexI * 3 + 2] = heightDir.z;\n\n\t\t\t\tif (hasNormalTexture) {\n\t\t\t\t\tmeshTangents[vertexI * 3 + 0] = tangent.x;\n\t\t\t\t\tmeshTangents[vertexI * 3 + 1] = tangent.y;\n\t\t\t\t\tmeshTangents[vertexI * 3 + 2] = tangent.z;\n\n\t\t\t\t\tmeshBitangents[vertexI * 3 + 0] = bitangent.x;\n\t\t\t\t\tmeshBitangents[vertexI * 3 + 1] = bitangent.y;\n\t\t\t\t\tmeshBitangents[vertexI * 3 + 2] = bitangent.z;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < this._textureLevels.size; i++) {\n\t\t\t\t\tconst textureName = this._textureLevels.getAt(i).key;\n\t\t\t\t\tconst uvOffset = uvOffsets.get(textureName);\n\t\t\t\t\tconst uvScale = uvScales.get(textureName);\n\t\t\t\t\tconst uvs = meshUVs.get(textureName);\n\t\t\t\t\tuvs[vertexI * 2 + 0] = ((uvOffset.x + (x - 1) / (numUVerts - 3) * uvScale.x)) * tilePixelSize / (tilePixelSize + 4) + 2.0 / (tilePixelSize + 4);\n\t\t\t\t\tuvs[vertexI * 2 + 1] = 1 - (((uvOffset.y + (y - 1) / (numVVerts - 3) * uvScale.y)) * tilePixelSize / (tilePixelSize + 4) + 2.0 / (tilePixelSize + 4));\n\t\t\t\t}\n\n\t\t\t\tif (x < numUVerts - 1 && y < numVVerts - 1) {\n\t\t\t\t\tconst triangleI = y * (numUVerts - 1) + x;\n\t\t\t\t\tmeshIndices[triangleI * 6 + 0] = numUVerts * (y + 0) + (x + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = numUVerts * (y + 0) + (x + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = numUVerts * (y + 1) + (x + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 3] = numUVerts * (y + 0) + (x + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = numUVerts * (y + 1) + (x + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = numUVerts * (y + 1) + (x + 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tThreeJsHelper.setVertices(this._threeJsObject.geometry, 'position', meshPositions);\n\t\tThreeJsHelper.setVertices(this._threeJsObject.geometry, 'normal', meshNormals);\n\t\tif (hasNormalTexture) {\n\t\t\tThreeJsHelper.setVertices(this._threeJsObject.geometry, 'tangent', meshTangents);\n\t\t\tThreeJsHelper.setVertices(this._threeJsObject.geometry, 'bitangent', meshBitangents);\n\t\t}\n\t\tfor (let i = 0; i < this._textureLevels.size; i++) {\n\t\t\tconst textureName = this._textureLevels.getAt(i).key;\n\t\t\tconst uvs = meshUVs.get(textureName);\n\t\t\tif (textureName === 'height') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (textureName === 'color') {\n\t\t\t\tThreeJsHelper.setVertices(this._threeJsObject.geometry, 'uv', uvs);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tThreeJsHelper.setVertices(this._threeJsObject.geometry, textureName + 'UV', uvs);\n\t\t\t}\n\t\t}\n\t\tThreeJsHelper.setIndices(this._threeJsObject.geometry, meshIndices);\n\t}\n\n\t/**\n\t * Gets the non-positive level for root tiles.\n\t * @param {string} textureName\n\t * @returns {number}\n\t * @private\n\t */\n\t_getNonPositiveLevel(textureName) {\n\t\tconst nearestDistance = this._getNearestDistance();\n\t\tconst endPoint = this._component.__getEndPoints().get(textureName);\n\t\tconst tilePixelSize = endPoint.configuration.tile_size;\n\t\treturn MathUtils.clamp(4 - Math.floor(Math.log2(nearestDistance / this._radius / this._component.__getSplitJoinThresholdFactor() * tilePixelSize * 4)), endPoint.configuration.first_level, 0);\n\t}\n\n\t/**\n\t * Gets the nearest distance of all cameras to see if we need to split or join this node.\n\t * @private\n\t */\n\t_getNearestDistance() {\n\t\tlet nearestDistance = Number.POSITIVE_INFINITY;\n\t\tconst cameraPositions = this._component.__getCameraPositions();\n\t\tconst cameraFieldsOfView = this._component.__getCameraFieldsOfView();\n\t\tfor (let i = 0, l = cameraPositions.length; i < l; i++) {\n\t\t\tconst position = cameraPositions[i];\n\t\t\tconst fieldOfView = cameraFieldsOfView[i];\n\t\t\tCMTSTile._pos.sub(position, this._center);\n\t\t\tconst distance = Math.max(0, CMTSTile._pos.magnitude() - this._radius) * Math.tan(fieldOfView / 2);\n\t\t\tif (nearestDistance > distance) {\n\t\t\t\tnearestDistance = distance;\n\t\t\t}\n\t\t}\n\t\treturn nearestDistance;\n\t}\n\n\t/**\n\t * Converts this to a string.\n\t * @returns {string}\n\t * @override\n\t */\n\ttoString() {\n\t\treturn this._face + '/' + this._level + '/' + this._tile.x + '/' + this._tile.y;\n\t}\n\n\t/**\n\t * Prepares the tile for rendering.\n\t * @param {CameraComponent} camera\n\t */\n\tprepareForRender(camera) {\n\t\t// Check if the tile should be hidden.\n\t\tconst entity = this._component.getEntity();\n\t\tif (this._threeJsObject !== null) {\n\t\t\tconst cameraSpacePosition = entity.getCameraSpacePosition(camera);\n\t\t\tconst centerInJ2000 = Vector3.pool.get();\n\t\t\tcenterInJ2000.rotate(entity.getOrientation(), this._center);\n\t\t\tconst angleBetweenCenterAndCamera = Math.acos(centerInJ2000.dot(cameraSpacePosition)\n\t\t\t\t/ centerInJ2000.magnitude() / cameraSpacePosition.magnitude());\n\t\t\tVector3.pool.release(centerInJ2000);\n\t\t\tif (angleBetweenCenterAndCamera < Math.PI / 2 - (Math.PI / 4) * this._levelPow) {\n\t\t\t\tthis._threeJsObject.visible = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Set the Three.js object position.\n\t\tThreeJsHelper.setPositionToEntity(this._threeJsObject, this._component.getEntity(), camera, this._tileOffset, true);\n\n\t\t// Prepare the children for rendering.\n\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\tthis.children[i].prepareForRender(camera);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the texture.\n\t * @param {string} textureName\n\t * @param {THREE.Texture} texture\n\t * @private\n\t */\n\t_setTexture(textureName, texture) {\n\t\tif (this._component.getLoadState() !== 'loaded') {\n\t\t\treturn;\n\t\t}\n\t\tif (textureName === 'height') {\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tcanvas.width = texture.image.width;\n\t\t\tcanvas.height = texture.image.height;\n\t\t\tconst context = canvas.getContext('2d', { desynchronized: true, alpha: false });\n\t\t\tcontext.drawImage(texture.image, 0, 0);\n\t\t\ttexture.dispose();\n\t\t\tthis._heightData = context.getImageData(0, 0, texture.image.width, texture.image.height);\n\t\t\t// Release the used height texture.\n\t\t\tthis._component.__getTextureCache().release(this._texturePromises.get('height'));\n\t\t\tthis._texturePromises.delete('height');\n\t\t\t// Recalculate the center using the height data.\n\t\t\tconst spheroid = this._component.__getSpheroidComponent();\n\t\t\tCMTSTile.cmtsCoordToPosition(this._center, this._face, this._levelPow, this._tile.x + 0.5, this._tile.y + 0.5, spheroid);\n\t\t\tconst up = Vector3.pool.get();\n\t\t\tconst lla = LatLonAlt.pool.get();\n\t\t\tspheroid.llaFromXYZ(lla, this._center);\n\t\t\tspheroid.upFromLLA(up, lla);\n\t\t\tconst height = CMTSTile.getLinearInterpolatedHeightPixel(this._heightData.width / 2, this._heightData.height / 2, this._heightData.data, this._heightData.width);\n\t\t\tconst configuration = this._component.__getEndPoints().get('height').configuration;\n\t\t\tconst heightOffset = configuration['height_range'].min * this._component.getHeightScale();\n\t\t\tconst heightScale = (configuration['height_range'].max - configuration['height_range'].min) * this._component.getHeightScale();\n\t\t\tthis._center.addMult(this._center, up, heightOffset + height * heightScale);\n\t\t\tVector3.pool.release(up);\n\t\t\tLatLonAlt.pool.release(lla);\n\t\t}\n\t\telse {\n\t\t\tthis._threeJsMaterial.uniforms[textureName + 'Texture'].value = texture;\n\t\t\tif (textureName === 'normal') {\n\t\t\t\tthis._threeJsMaterial.defines['normalMap'] = true;\n\t\t\t\tthis._threeJsMaterial.defines['normalUVs'] = true;\n\t\t\t\tthis._threeJsMaterial.defines['hasBitangents'] = true;\n\t\t\t\tthis._threeJsMaterial.uniforms['normalScale'].value.set(this._component.getHeightScale(), this._component.getHeightScale());\n\t\t\t\tthis._threeJsMaterial.uniforms['specularIntensity'].value = 0;\n\t\t\t\tthis._threeJsMaterial.uniforms['specularHardness'].value = 100;\n\t\t\t}\n\t\t\telse if (textureName === 'specular') {\n\t\t\t\tthis._threeJsMaterial.defines['specularMap'] = true;\n\t\t\t\tthis._threeJsMaterial.defines['specularUVs'] = true;\n\t\t\t}\n\t\t\telse if (textureName === 'night') {\n\t\t\t\tthis._threeJsMaterial.defines['nightMap'] = true;\n\t\t\t\tthis._threeJsMaterial.defines['nightUVs'] = true;\n\t\t\t}\n\t\t\telse if (textureName === 'decal') {\n\t\t\t\tthis._threeJsMaterial.defines['decalMap'] = true;\n\t\t\t\tthis._threeJsMaterial.defines['decalUVs'] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the greatest level available for the given tile.\n\t * @param {CMTSConfiguration} configuration\n\t * @param {number} face\n\t * @param {number} level\n\t * @param {Vector2} tile\n\t * @returns {number}\n\t */\n\tstatic _getGreatestLevel(configuration, face, level, tile) {\n\t\tlet greatestLevel = Number.NEGATIVE_INFINITY;\n\t\tfor (let i = 0, l = configuration.boundaries.length; i < l; i++) {\n\t\t\tconst boundary = configuration.boundaries[i];\n\t\t\tif (boundary.face !== face) { // Different face.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst levelDifference = boundary['last_level'] - level;\n\t\t\tif (boundary.min[0] <= (tile.x >> levelDifference) && (tile.x >> levelDifference) <= boundary.max[0]\n\t\t\t\t&& boundary.min[1] <= (tile.y >> levelDifference) && (tile.y >> levelDifference) <= boundary.max[1]\n\t\t\t\t&& greatestLevel < boundary['last_level']) {\n\t\t\t\tgreatestLevel = boundary['last_level'];\n\t\t\t}\n\t\t}\n\t\treturn greatestLevel;\n\t}\n\n\t/**\n\t * Returns true if the tile coordinates are within a boundary.\n\t * @param {CMTSConfiguration} configuration\n\t * @param {number} face\n\t * @param {number} level\n\t * @param {Vector2} tile\n\t * @returns {boolean}\n\t */\n\tstatic _isInABoundary(configuration, face, level, tile) {\n\t\tlet foundValidBoundary = false;\n\t\tfor (let i = 0, l = configuration.boundaries.length; i < l; i++) {\n\t\t\tconst boundary = configuration.boundaries[i];\n\t\t\tif (boundary.face !== face) { // Different face.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (boundary['last_level'] < level) { // Not a deep enough level to cover the child tile.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst levelFactor = 1 << (boundary['last_level'] - level);\n\t\t\tif (tile.x < Math.floor(boundary.min[0] / levelFactor) || Math.floor(boundary.max[0] / levelFactor) < tile.x) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (tile.y < Math.floor(boundary.min[1] / levelFactor) || Math.floor(boundary.max[1] / levelFactor) < tile.y) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfoundValidBoundary = true;\n\t\t}\n\t\treturn foundValidBoundary;\n\t}\n\n\t/**\n\t * Updates the position based on the tileOffsets.\n\t * @returns {Vector3}\n\t * @private\n\t */\n\t_getTileOffset() {\n\t\tconst tileOffsets = this._component.__getTileOffsets();\n\t\tfor (let i = 0, l = tileOffsets.length; i < l; i++) {\n\t\t\tconst tileOffset = tileOffsets[i];\n\t\t\tif (tileOffset.face !== this._face || tileOffset.level > this._level) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst levelMult = 1 << (this._level - tileOffset.level);\n\t\t\tif (tileOffset.min.x * levelMult <= this._tile.x && this._tile.x < (tileOffset.max.x + 1) * levelMult && tileOffset.min.y * levelMult <= this._tile.y && this._tile.y < (tileOffset.max.y + 1) * levelMult) {\n\t\t\t\treturn tileOffset.offset;\n\t\t\t}\n\t\t}\n\t\treturn Vector3.Zero;\n\t}\n\n\t/**\n\t * Adjust the position given the height on a tile.\n\t * @param {Vector3} pos\n\t * @param {Vector3} heightDir\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {Uint8ClampedArray} data\n\t * @param {Vector2} uvOffset\n\t * @param {number} numUVerts\n\t * @param {number} numVVerts\n\t * @param {Vector2} uvScale\n\t * @param {number} heightTileSize\n\t * @param {number} heightOffset\n\t * @param {number} heightScale\n\t */\n\tstatic getHeightPos(pos, heightDir, x, y, data, uvOffset, numUVerts, numVVerts, uvScale, heightTileSize, heightOffset, heightScale) {\n\t\tconst u = ((uvOffset.x + (x - 1) / (numUVerts - 3) * uvScale.x)) * heightTileSize / (heightTileSize + 4) + 2.0 / (heightTileSize + 4);\n\t\tconst v = 1 - (((uvOffset.y + (y - 1) / (numVVerts - 3) * uvScale.y)) * heightTileSize / (heightTileSize + 4) + 2.0 / (heightTileSize + 4));\n\t\tconst pixelX = u * (heightTileSize + 4);\n\t\tconst pixelY = v * (heightTileSize + 4);\n\t\tconst height = this.getLinearInterpolatedHeightPixel(pixelX, pixelY, data, heightTileSize + 4);\n\t\tpos.addMult(pos, heightDir, heightOffset + height * heightScale);\n\t}\n\n\t/** Gets the linearly interpolated height from a pixel.\n\t * @param {number} pixelX\n\t * @param {number} pixelY\n\t * @param {Uint8ClampedArray} data\n\t * @param {number} size\n\t * @returns {number} */\n\tstatic getLinearInterpolatedHeightPixel(pixelX, pixelY, data, size) {\n\t\tconst pixelXInt = Math.floor(pixelX);\n\t\tconst pixelYInt = Math.floor(pixelY);\n\t\tconst pixelXFrac = pixelX - pixelXInt;\n\t\tconst pixelYFrac = pixelY - pixelYInt;\n\t\tconst u = Math.abs(pixelXFrac - 0.5);\n\t\tconst v = Math.abs(pixelYFrac - 0.5);\n\t\tlet height = this.getHeightFromPixel(pixelXInt, pixelYInt, data, size) * ((1 - u) * (1 - v));\n\t\tif (pixelXFrac >= 0.5) {\n\t\t\theight += this.getHeightFromPixel(pixelXInt + 1, pixelYInt, data, size) * (u * (1 - v));\n\t\t\tif (pixelYFrac < 0.5) {\n\t\t\t\theight += this.getHeightFromPixel(pixelXInt + 1, pixelYInt - 1, data, size) * (u * v);\n\t\t\t}\n\t\t\telse if (pixelYFrac >= 0.5) {\n\t\t\t\theight += this.getHeightFromPixel(pixelXInt + 1, pixelYInt + 1, data, size) * (u * v);\n\t\t\t}\n\t\t}\n\t\telse if (pixelXFrac < 0.5) {\n\t\t\theight += this.getHeightFromPixel(pixelXInt - 1, pixelYInt, data, size) * (u * (1 - v));\n\t\t\tif (pixelYFrac < 0.5) {\n\t\t\t\theight += this.getHeightFromPixel(pixelXInt - 1, pixelYInt - 1, data, size) * (u * v);\n\t\t\t}\n\t\t\telse if (pixelYFrac >= 0.5) {\n\t\t\t\theight += this.getHeightFromPixel(pixelXInt - 1, pixelYInt + 1, data, size) * (u * v);\n\t\t\t}\n\t\t}\n\t\tif (pixelYFrac >= 0.5) {\n\t\t\theight += this.getHeightFromPixel(pixelXInt, pixelYInt + 1, data, size) * ((1 - u) * v);\n\t\t}\n\t\telse if (pixelYFrac < 0.5) {\n\t\t\theight += this.getHeightFromPixel(pixelXInt, pixelYInt - 1, data, size) * ((1 - u) * v);\n\t\t}\n\t\treturn height;\n\t}\n\n\t/** Gets the height from a pixel.\n\t * @param {number} pixelX\n\t * @param {number} pixelY\n\t * @param {Uint8ClampedArray} data\n\t * @param {number} size\n\t * @returns {number} */\n\tstatic getHeightFromPixel(pixelX, pixelY, data, size) {\n\t\tpixelX = MathUtils.clamp(pixelX, 0, size - 1);\n\t\tpixelY = MathUtils.clamp(pixelY, 0, size - 1);\n\t\tconst pixelIndex = (pixelY * size + pixelX) * 4; // 4 for the rgba channels.\n\t\t// We parse the color, combining it into a single 24-bit value.\n\t\t// Eventually a proposal will allow more efficient types of height data. https://github.com/WICG/canvas-color-space/blob/master/CanvasColorSpaceProposal.md\n\t\treturn data[pixelIndex + 0] / 256 + data[pixelIndex + 1] / 65536 + data[pixelIndex + 2] / 16777216;\n\t}\n\n\t/**\n\t * Converts a CMTS coordinate to an XYZ coordinate in the frame of the spheroid.\n\t * @param {Vector3} out\n\t * @param {number} face\n\t * @param {number} levelPow\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {SpheroidComponent} spheroid\n\t */\n\tstatic cmtsCoordToPosition(out, face, levelPow, x, y, spheroid) {\n\t\tlet u = x * levelPow;\n\t\tlet v = y * levelPow;\n\n\t\t// If the uv are out of bounds, get the correct uv and face.\n\t\twhile (u < 0 || u > 1 || v < 0 || v > 1) {\n\t\t\tif (0 <= face && face <= 3) { // One of the horizontal faces\n\t\t\t\tif (u > 1) {\n\t\t\t\t\tu -= 1;\n\t\t\t\t\tface = (face + 1) % 4;\n\t\t\t\t}\n\t\t\t\telse if (u < 0) {\n\t\t\t\t\tu += 1;\n\t\t\t\t\tface = (face + 3) % 4; // same as - 1\n\t\t\t\t}\n\t\t\t\telse if (face === 0) {\n\t\t\t\t\tif (v < 0) {\n\t\t\t\t\t\tv += 1;\n\t\t\t\t\t\tface = 5;\n\t\t\t\t\t}\n\t\t\t\t\telse if (v > 1) {\n\t\t\t\t\t\tv -= 1;\n\t\t\t\t\t\tface = 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (face === 1) {\n\t\t\t\t\tif (v < 0) {\n\t\t\t\t\t\tconst t = u;\n\t\t\t\t\t\tu = v + 1;\n\t\t\t\t\t\tv = 1 - t;\n\t\t\t\t\t\tface = 5;\n\t\t\t\t\t}\n\t\t\t\t\telse if (v > 1) {\n\t\t\t\t\t\tconst t = u;\n\t\t\t\t\t\tu = 2 - v;\n\t\t\t\t\t\tv = t;\n\t\t\t\t\t\tface = 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (face === 2) {\n\t\t\t\t\tif (v < 0) {\n\t\t\t\t\t\tu = 1 - u;\n\t\t\t\t\t\tv = 0 - v;\n\t\t\t\t\t\tface = 5;\n\t\t\t\t\t}\n\t\t\t\t\telse if (v > 1) {\n\t\t\t\t\t\tu = 1 - u;\n\t\t\t\t\t\tv = 2 - v;\n\t\t\t\t\t\tface = 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (face === 3) {\n\t\t\t\t\tif (v < 0) {\n\t\t\t\t\t\tconst t = u;\n\t\t\t\t\t\tu = 0 - v;\n\t\t\t\t\t\tv = t;\n\t\t\t\t\t\tface = 5;\n\t\t\t\t\t}\n\t\t\t\t\telse if (v > 1) {\n\t\t\t\t\t\tconst t = u;\n\t\t\t\t\t\tu = v - 1;\n\t\t\t\t\t\tv = 1 - t;\n\t\t\t\t\t\tface = 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (face === 4) {\n\t\t\t\tif (u < 0) {\n\t\t\t\t\tconst t = u;\n\t\t\t\t\tu = 1 - v;\n\t\t\t\t\tv = t + 1;\n\t\t\t\t\tface = 3;\n\t\t\t\t}\n\t\t\t\telse if (u > 1) {\n\t\t\t\t\tconst t = u;\n\t\t\t\t\tu = v;\n\t\t\t\t\tv = 2 - t;\n\t\t\t\t\tface = 1;\n\t\t\t\t}\n\t\t\t\telse if (v < 0) {\n\t\t\t\t\tv += 1;\n\t\t\t\t\tface = 0;\n\t\t\t\t}\n\t\t\t\telse if (v > 1) {\n\t\t\t\t\tu = 1 - u;\n\t\t\t\t\tv = 2 - v;\n\t\t\t\t\tface = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (face === 5) {\n\t\t\t\tif (u < 0) {\n\t\t\t\t\tconst t = u;\n\t\t\t\t\tu = v;\n\t\t\t\t\tv = 0 - t;\n\t\t\t\t\tface = 3;\n\t\t\t\t}\n\t\t\t\telse if (u > 1) {\n\t\t\t\t\tconst t = u;\n\t\t\t\t\tu = 1 - v;\n\t\t\t\t\tv = t - 1;\n\t\t\t\t\tface = 1;\n\t\t\t\t}\n\t\t\t\telse if (v < 0) {\n\t\t\t\t\tu = 1 - u;\n\t\t\t\t\tv = 0 - v;\n\t\t\t\t\tface = 2;\n\t\t\t\t}\n\t\t\t\telse if (v > 1) {\n\t\t\t\t\tv -= 1;\n\t\t\t\t\tface = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst uT = 2 * u - 1;\n\t\tconst vT = 2 * v - 1;\n\n\t\tconst basis = this._basis[face];\n\n\t\t// Convert to XYZ vector as if it were a sphere.\n\t\tout.set(\n\t\t\tbasis[0].x * uT + basis[1].x * vT + basis[2].x,\n\t\t\tbasis[0].y * uT + basis[1].y * vT + basis[2].y,\n\t\t\tbasis[0].z * uT + basis[1].z * vT + basis[2].z);\n\t\tout.normalize(out);\n\n\t\t// Get it as an LLA.\n\t\tGeometry.getLLAFromXYZOnSphere(this._lla, out, 0);\n\t\tthis._lla.alt = 0;\n\n\t\t// Convert to a proper XYZ.\n\t\tspheroid.xyzFromLLA(out, this._lla);\n\t};\n\n\t/**\n\t * Converts a CMTS coordinate to a tangent XYZ coordinate in the frame of the spheroid.\n\t * @param {Vector3} out\n\t * @param {number} face\n\t * @param {number} levelPow\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {SpheroidComponent} spheroid\n\t */\n\tstatic cmtsCoordToTangent(out, face, levelPow, x, y, spheroid) {\n\t\tthis.cmtsCoordToPosition(out, face, levelPow, x, y, spheroid);\n\t\tconst basis = this._basis[face];\n\t\tout.setNormalTo(out, basis[0]);\n\t};\n\n\t/**\n\t * Converts a CMTS coordinate to a bitangent XYZ coordinate in the frame of the spheroid.\n\t * @param {Vector3} out\n\t * @param {number} face\n\t * @param {number} levelPow\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {SpheroidComponent} spheroid\n\t */\n\tstatic cmtsCoordToBitangent(out, face, levelPow, x, y, spheroid) {\n\t\tthis.cmtsCoordToPosition(out, face, levelPow, x, y, spheroid);\n\t\tconst basis = this._basis[face];\n\t\tout.setNormalTo(out, basis[1]);\n\t};\n}\n\n/**\n * The basis vectors for every face. The first corresponds to the U direction, then the V direction, and then out of the face.\n */\nCMTSTile._basis = [\n\t[Vector3.YAxis, Vector3.ZAxis, Vector3.XAxis],\n\t[Vector3.XAxisNeg, Vector3.ZAxis, Vector3.YAxis],\n\t[Vector3.YAxisNeg, Vector3.ZAxis, Vector3.XAxisNeg],\n\t[Vector3.XAxis, Vector3.ZAxis, Vector3.YAxisNeg],\n\t[Vector3.YAxis, Vector3.XAxisNeg, Vector3.ZAxis],\n\t[Vector3.YAxis, Vector3.XAxis, Vector3.ZAxisNeg]\n];\n\n/**\n * A temporary lat/lon/alt.\n */\nCMTSTile._lla = new LatLonAlt();\n\n/**\n * A temporary vector3\n */\nCMTSTile._pos = new Vector3();\n\n/**\n * @typedef CMTSBoundary\n * @property {number} face\n * @property {number} last_level\n * @property {{ 0: number, 1: number }} min\n * @property {{ 0: number, 1: number }} max\n */\n\n/**\n * @typedef CMTSRange {\n * @property {number} min\n * @property {number} max\n */\n\n/**\n * @typedef CMTSConfiguration\n * @property {CMTSBoundary[]} boundaries\n * @property {number} first_level\n * @property {number} tile_size\n * @property {string} extension\n * @property {CMTSRange} height_range\n */\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tEntityRef,\n\tLightSourceComponent,\n\tMathUtils,\n\tShaderChunkLogDepth,\n\tShaderFix,\n\tTHREE,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * A comet coma and tail.\n */\nexport class CometTailComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The light source.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._lightSource = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The length of the particle stream.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._timeLength = 6e5;\n\n\t\t/**\n\t\t * The number of particles.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numberOfParticles = 200;\n\n\t\t/**\n\t\t * The color of the particles.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Color();\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The force multiplier of the star.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._starAccelerationMultiplier = 1.0;\n\n\t\t/**\n\t\t * The time of particle 0. All values in originTimeArray are relative to this.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._timeOfParticle0 = 0;\n\t}\n\n\t/**\n\t * Returns the light source's name.\n\t * @return {string}\n\t */\n\tgetLightSource() {\n\t\treturn this._lightSource.getName();\n\t}\n\n\t/**\n\t * Sets the light source's name.\n\t * @param {string} lightSource\n\t */\n\tsetLightSource(lightSource) {\n\t\tthis._lightSource.setName(lightSource);\n\t}\n\n\t/**\n\t * Gets the length in seconds of the particle stream.\n\t * @returns {number}\n\t */\n\tgetTimeLength() {\n\t\treturn this._timeLength;\n\t}\n\n\t/**\n\t * Sets the length of the particle stream. Defaults to 6e5.\n\t * @param {number} length\n\t */\n\tsetTimeLength(length) {\n\t\tthis._timeLength = length;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the acceleration multiplier of the star.\n\t * @returns {number}\n\t */\n\tgetStarAccelerationMultiplier() {\n\t\treturn this._starAccelerationMultiplier;\n\t}\n\n\t/**\n\t * Sets the acceleration multiplier of the star. Defaults to 1.\n\t * @param {number} starAccelerationMultiplier\n\t */\n\tsetStarAccelerationMultiplier(starAccelerationMultiplier) {\n\t\tthis._starAccelerationMultiplier = starAccelerationMultiplier;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'starAccelerationMultiplier', this._starAccelerationMultiplier);\n\t}\n\n\t/**\n\t * Gets the number of particles.\n\t * @returns {number}\n\t */\n\tgetNumberOfParticles() {\n\t\treturn this._numberOfParticles;\n\t}\n\n\t/**\n\t * Sets the number of particles. Defaults to 100.\n\t * @param {number} numberOfParticles\n\t */\n\tsetNumberOfParticles(numberOfParticles) {\n\t\tthis._numberOfParticles = numberOfParticles;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the color of the particles.\n\t * @returns {Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the particles. Defaults to white.\n\t * @param {Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color);\n\t}\n\n\t/**\n\t * Updates the particles.\n\t * @override\n\t */\n\t__update() {\n\t\t// Update the radius given the time length.\n\t\tthis.__setRadius(Math.max(this.getEntity().getExtentsRadius(), this._timeLength * this.getEntity().getVelocity().magnitude()));\n\n\t\t// If not loaded, do nothing.\n\t\tif (this.getLoadState() !== 'loaded') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if any particles have gone outside the time bounds and recreate them if so.\n\t\tconst time = this.getEntity().getScene().getEngine().getTime();\n\t\tconst originTimeAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['originTime'];\n\t\tconst originTimeArray = /** @type {Float32Array} */(originTimeAttribute.array);\n\t\tfor (let i = 0, l = this._numberOfParticles; i < l; i++) {\n\t\t\tconst particleTime = originTimeArray[i] + this._timeOfParticle0;\n\t\t\tif (particleTime < time - this._timeLength || particleTime > time) {\n\t\t\t\tthis._newParticle(i, MathUtils.wrap(particleTime, time - this._timeLength, time));\n\t\t\t}\n\t\t}\n\n\t\t// Update the uniform with the time. If there is a single particle, it's a coma, so don't update the time.\n\t\tif (this._numberOfParticles > 1) {\n\t\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'time', time - this._timeOfParticle0);\n\t\t}\n\t\telse {\n\t\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'time', 0);\n\t\t}\n\n\t\t// Get the light source for the updates below.\n\t\tconst lightSource = this._lightSource.get();\n\t\tif (lightSource !== null) {\n\t\t\t// Update the star absolute magnitude.\n\t\t\tconst lightSourceComponent = /** @type {LightSourceComponent} */(lightSource.getComponentByType('lightSource'));\n\t\t\tif (lightSourceComponent !== null) {\n\t\t\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'starAbsoluteMagnitude', lightSourceComponent.getAbsoluteMagnitude());\n\t\t\t}\n\n\t\t\t// Update the position entity uniform.\n\t\t\tconst position = Vector3.pool.get();\n\t\t\tthis.getEntity().getPositionRelativeToEntity(position, Vector3.Zero, lightSource);\n\t\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'positionOfEntity', position);\n\t\t\tVector3.pool.release(position);\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the position of the ThreeJs object.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects(), this.getEntity(), camera);\n\n\t\t// Set the position-in-camera as well.\n\t\tconst cameraSpacePosition = this.getEntity().getCameraSpacePosition(camera);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'positionInCamera', cameraSpacePosition);\n\n\t\tif (cameraSpacePosition.magnitude() < 4e4) {\n\t\t\tthis.getThreeJsObjects()[0].visible = false;\n\t\t}\n\t\telse {\n\t\t\tconst u = (cameraSpacePosition.magnitude() - 4e4) / 4e5;\n\t\t\tthis.getThreeJsMaterials()[0].uniforms['color'].value.w = this._color.a * MathUtils.clamp01(u);\n\t\t\tthis.getThreeJsObjects()[0].visible = true;\n\t\t}\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Setup the Three.js material.\n\t\tconst threeJsMaterial = new THREE.RawShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\ttime: new THREE.Uniform(0),\n\t\t\t\ttimeLength: new THREE.Uniform(0),\n\t\t\t\tpositionInCamera: new THREE.Uniform(new THREE.Vector3()),\n\t\t\t\tstarAbsoluteMagnitude: new THREE.Uniform(0),\n\t\t\t\tstarAccelerationMultiplier: new THREE.Uniform(0),\n\t\t\t\tpositionOfEntity: new THREE.Uniform(new THREE.Vector3()),\n\t\t\t\tcolor: new THREE.Uniform(new THREE.Vector4()),\n\n\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t},\n\t\t\tvertexShader: CometTailComponent.vertexShader,\n\t\t\tfragmentShader: CometTailComponent.fragmentShader,\n\t\t\ttransparent: true,\n\t\t\tdepthWrite: false,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\t\tShaderFix.fix(threeJsMaterial);\n\t\tthis.getThreeJsMaterials().push(threeJsMaterial);\n\n\t\t// Setup the attribute arrays.\n\t\tconst positionArray = new Float32Array([-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0]);\n\t\tconst indexArray = new Uint16Array([0, 1, 2, 2, 3, 0]);\n\t\tconst originTimeArray = new Float32Array(1 * this._numberOfParticles);\n\t\tconst originPositionArray = new Float32Array(3 * this._numberOfParticles);\n\t\tconst accelerationMultiplier = new Float32Array(1 * this._numberOfParticles);\n\n\t\t// Setup the Three.js geometry.\n\t\tconst threeJsGeometry = new THREE.InstancedBufferGeometry();\n\t\tthreeJsGeometry.setAttribute('position', new THREE.BufferAttribute(positionArray, 3));\n\t\tthreeJsGeometry.setAttribute('originTime', new THREE.InstancedBufferAttribute(originTimeArray, 1));\n\t\tthreeJsGeometry.setAttribute('originPosition', new THREE.InstancedBufferAttribute(originPositionArray, 3));\n\t\tthreeJsGeometry.setAttribute('accelerationMultiplier', new THREE.InstancedBufferAttribute(accelerationMultiplier, 1));\n\t\tthreeJsGeometry.setIndex(new THREE.BufferAttribute(indexArray, 1));\n\t\tthreeJsGeometry.instanceCount = this._numberOfParticles;\n\n\t\t// Setup the Three.js object.\n\t\tconst threeJsObject = /** @type {THREE.Mesh<THREE.InstancedBufferGeometry, THREE.ShaderMaterial>} */ (ThreeJsHelper.createMeshObjectGivenGeometry(this, threeJsMaterial, threeJsGeometry));\n\t\tthis.getThreeJsObjects().push(threeJsObject);\n\n\t\t// Setup the arrays.\n\t\tconst time = this.getEntity().getScene().getEngine().getTime();\n\t\tfor (let i = 0, l = this._numberOfParticles; i < l; i++) {\n\t\t\tthis._newParticle(i, time - (i / l) * this._timeLength);\n\t\t}\n\n\t\t// Set the uniforms.\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'timeLength', this._timeLength);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'starAccelerationMultiplier', this._starAccelerationMultiplier);\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color);\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Sets up a new particle at the comet.\n\t * @param {number} i - the particle number\n\t * @param {number} time - the time to instantiate\n\t * @private\n\t */\n\t_newParticle(i, time) {\n\t\t// Set the origin time.\n\t\tconst originTime = time;\n\t\tconst originTimeAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['originTime'];\n\t\tconst originTimeArray = /** @type {Float32Array} */(originTimeAttribute.array);\n\t\tif (i > 0) {\n\t\t\toriginTimeArray[i] = originTime - this._timeOfParticle0;\n\t\t}\n\t\telse {\n\t\t\t// Adjust the rest of the particle times to be relative to the new particle 0.\n\t\t\tfor (let j = 1, l = this._numberOfParticles; j < l; j++) {\n\t\t\t\toriginTimeArray[j] += this._timeOfParticle0 - originTime;\n\t\t\t}\n\t\t\tthis._timeOfParticle0 = originTime;\n\t\t\toriginTimeArray[0] = 0;\n\t\t}\n\t\toriginTimeAttribute.needsUpdate = true;\n\n\t\t// Set the origin position.\n\t\tconst originPosition = Vector3.pool.get();\n\t\tconst lightSource = this._lightSource.get();\n\t\tif (lightSource !== null) {\n\t\t\tthis.getEntity().getPositionRelativeToEntity(originPosition, Vector3.Zero, lightSource, originTime);\n\t\t}\n\t\tconst originPositionAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['originPosition'];\n\t\tconst originPositionArray = /** @type {Float32Array} */(originPositionAttribute.array);\n\t\toriginPositionArray[i * 3 + 0] = originPosition.x;\n\t\toriginPositionArray[i * 3 + 1] = originPosition.y;\n\t\toriginPositionArray[i * 3 + 2] = originPosition.z;\n\t\toriginPositionAttribute.needsUpdate = true;\n\t\tVector3.pool.release(originPosition);\n\n\t\t// Set the acceleration factor.\n\t\tconst accelerationMultiplierAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['accelerationMultiplier'];\n\t\tconst accelerationMultiplierArray = /** @type {Float32Array} */(accelerationMultiplierAttribute.array);\n\t\taccelerationMultiplierArray[i] = 0 + 1 * Math.random();\n\t\taccelerationMultiplierAttribute.needsUpdate = true;\n\t}\n}\n\nCometTailComponent.vertexShader = `\n\tattribute vec3 position;\n\tattribute float originTime;\n\tattribute vec3 originPosition;\n\tattribute vec3 originStarPosition;\n\tattribute vec3 originExternalAcceleration;\n\tattribute float accelerationMultiplier;\n\n\tuniform float time;\n\tuniform float timeLength;\n\tuniform vec3 positionInCamera;\n\tuniform float starAbsoluteMagnitude;\n\tuniform float starAccelerationMultiplier;\n\tuniform vec3 positionOfEntity;\n\tuniform mat4 viewMatrix;\n\tuniform mat4 modelViewMatrix;\n\tuniform mat4 projectionMatrix;\n\n\tvarying vec2 vPosition;\n\tvarying float vAlpha;\n\n\t${ShaderChunkLogDepth.VertexHead}\n\n\tvoid main() {\n\t\t// Get the position of the center point of the quad in model space.\n\t\tfloat deltaTime = time - originTime;\n\t\tvec3 externalAcceleration = starAccelerationMultiplier * accelerationMultiplier * normalize(originPosition) * 5.0e7 * pow(2.51188643151, 20.0 - starAbsoluteMagnitude) / dot(originPosition, originPosition);\n\t\tvec3 modelPosition = externalAcceleration * pow(deltaTime, 1.5);\n\n\t\t// Get a general expansion scale in all directions.\n\t\tfloat expansion = 0.2 * max(1.0e5, length(modelPosition));\n\n\t\t// Get the stretch direction in view space.\n\t\tvec3 modelStretch = modelPosition;\n\t\tvec3 cameraDirection = normalize(positionInCamera);\n\t\tmodelStretch = modelStretch - dot(cameraDirection, modelStretch) * cameraDirection;\n\t\tvec4 viewStretch = viewMatrix * vec4(modelStretch, 1.0);\n\n\t\t// Get the stretch amounts in the x and y directions.\n\t\tvec2 stretch2d = vec2(max(expansion, 2.0 * length(viewStretch.xz)), expansion);\n\n\t\t// Do the stretch calculation on the vertex position in view space.\n\t\t// It translates it, rotates it, stretches it, and unrotates it.\n\t\tvec2 translate = 0.5 * normalize(vec2(viewStretch.xz));\n\t\tfloat angle = length(viewStretch.xz) > 0.0 ? atan(viewStretch.z, viewStretch.x) : 0.0;\n\t\tfloat cosAngle = cos(angle);\n\t\tfloat sinAngle = sin(angle);\n\t\tfloat stretchedX = (stretch2d.x * cosAngle * cosAngle + stretch2d.y * sinAngle * sinAngle) * 0.5 * (position.x + translate.x) + (stretch2d.x - stretch2d.y) * sinAngle * cosAngle * 0.5 * (position.y + translate.y);\n\t\tfloat stretchedY = (stretch2d.x - stretch2d.y) * sinAngle * cosAngle * 0.5 * (position.x + translate.x) + (stretch2d.x * sinAngle * sinAngle + stretch2d.y * cosAngle * cosAngle) * 0.5 * (position.y + translate.y);\n\n\t\t// Get the position in view space and then in normalized space.\n\t\tvec4 viewPosition = vec4(stretchedX, 0.0, stretchedY, 0.0) + modelViewMatrix * vec4(modelPosition, 1.0);\n\t\tgl_Position = projectionMatrix * viewPosition;\n\t\tgl_Position.w = viewPosition.y;\n\n\t\t// Set the varying variables for adjusting te\n\t\tvPosition = vec2(cosAngle * position.x + sinAngle * position.y, -sinAngle * position.x + cosAngle * position.y);\n\t\tvAlpha = sqrt(1.0 - sqrt(deltaTime / timeLength));\n\n\t\t// Make the gas fade far from the star.\n\t\tvAlpha *= min(1.0, 1.0 - length(originPosition) / 7.0e8);\n\n\t\t${ShaderChunkLogDepth.Vertex}\n\t}`;\n\nCometTailComponent.fragmentShader = `\n\tprecision highp float;\n\n\tuniform vec4 color;\n\n\tvarying vec2 vPosition;\n\tvarying float vAlpha;\n\n\t${ShaderChunkLogDepth.FragmentHead}\n\n\tvoid main(void) {\n\t\t// Set the color to be a circle tinted by the color.\n\t\tgl_FragColor = vec4(color.rgb, 0.5 * color.a) * max(0.0, 1.0 - dot(vPosition, vPosition)) * vAlpha;\n\n\t\t${ShaderChunkLogDepth.Fragment}\n\t}`;\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tEntityRef,\n\tTHREE,\n\tThreeJsHelper,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/**\n * A 2D sprite in the X-Y plane relative to an entity.\n */\nexport class ConnectedSpriteComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The entity 1 to connect to.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._entity1 = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The offset of entity 1 in entity 1's frame.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._entity1Offset = new Vector3();\n\t\tthis._entity1Offset.freeze();\n\n\t\t/**\n\t\t * The entity 2 to connect to.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._entity2 = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The offset of entity 2 in entity 2's frame.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._entity2Offset = new Vector3();\n\t\tthis._entity2Offset.freeze();\n\n\t\t/**\n\t\t * The width of the sprite along the axis perpendicular to the line between the two entities at entity 1.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._width1 = 1.0;\n\n\t\t/**\n\t\t * The width of the sprite along the axis perpendicular to the line between the two entities at entity 2.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._width2 = 1.0;\n\n\t\t/**\n\t\t * The units of the width. It can be 'px' or 'km'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._widthUnits = 'km';\n\n\t\t/**\n\t\t * The url for the texture.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._textureUrl = '';\n\n\t\t/**\n\t\t * The aspect ratio of the texture.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._textureAspectRatio = 1;\n\n\t\t/**\n\t\t * The flag for whether to repeat or stretch the texture.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._textureRepeat = true;\n\n\t\t/**\n\t\t * The stretch factor for textures.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._textureStretch = 1;\n\n\t\t/**\n\t\t * The y offset from 0 to 1 of the texture.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._textureYOffset = 0;\n\n\t\t/**\n\t\t * The u offset from 0 to 1 of the start of the line. 0 is at Entity1, 1 is at Entity2.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._uOffsetStart = 0;\n\n\t\t/**\n\t\t * The u offset from 0 to 1 of the end of the line. 0 is at Entity1, 1 is at Entity2.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._uOffsetEnd = 1;\n\n\t\t/**\n\t\t * Each pixel in the texture is multiplied by this value.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._colorMultiplier = new Color(1, 1, 1, 1);\n\t\tthis._colorMultiplier.freeze();\n\n\t\t/**\n\t\t * A flag that determines if the sprite has blending mode.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._blending = 'normal';\n\t}\n\n\t/**\n\t * Gets the entity 1 to connect to.\n\t * @returns {string}\n\t */\n\tgetEntity1() {\n\t\treturn this._entity1.getName();\n\t}\n\n\t/**\n\t * Sets the entity 1 to connect to. It defaults to null.\n\t * @param {string} entityName\n\t */\n\tsetEntity1(entityName) {\n\t\tthis._entity1.setName(entityName);\n\t}\n\n\t/**\n\t * Gets the offset of entity 1 in entity 1's frame.\n\t * @returns {Vector3}\n\t */\n\tgetEntity1Offset() {\n\t\treturn this._entity1Offset;\n\t}\n\n\t/**\n\t * Sets the offset of entity 1 in entity 1's frame. It defaults to zero.\n\t * @param {Vector3} offset\n\t */\n\tsetEntity1Offset(offset) {\n\t\tthis._entity1Offset.thaw();\n\t\tthis._entity1Offset.copy(offset);\n\t\tthis._entity1Offset.freeze();\n\t}\n\n\t/**\n\t * Gets the entity 2 to connect to.\n\t * @returns {string}\n\t */\n\tgetEntity2() {\n\t\treturn this._entity2.getName();\n\t}\n\n\t/**\n\t * Sets the entity 2 to connect to. It defaults to null.\n\t * @param {string} entityName\n\t */\n\tsetEntity2(entityName) {\n\t\tthis._entity2.setName(entityName);\n\t}\n\n\t/**\n\t * Gets the offset of entity 2 in entity 2's frame.\n\t * @returns {Vector3}\n\t */\n\tgetEntity2Offset() {\n\t\treturn this._entity2Offset;\n\t}\n\n\t/**\n\t * Sets the offset of entity 2 in entity 2's frame. It defaults to zero.\n\t * @param {Vector3} offset\n\t */\n\tsetEntity2Offset(offset) {\n\t\tthis._entity2Offset.thaw();\n\t\tthis._entity2Offset.copy(offset);\n\t\tthis._entity2Offset.freeze();\n\t}\n\n\t/**\n\t * Gets the width of the sprite along the axis perpendicular to the line between the two entities at entity 1.\n\t * @return {number}\n\t */\n\tgetWidth1() {\n\t\treturn this._width1;\n\t}\n\n\t/**\n\t * Gets the width of the sprite along the axis perpendicular to the line between the two entities at entity 2.\n\t * @return {number}\n\t */\n\tgetWidth2() {\n\t\treturn this._width2;\n\t}\n\n\t/**\n\t * Sets the widths of the sprite along the axis perpendicular to the line between the two entities. It defaults to 1 for both.\n\t * @param {number} width1 - The width near entity1.\n\t * @param {number} width2 - The width near entity2.\n\t */\n\tsetWidths(width1, width2) {\n\t\tthis._width1 = width1;\n\t\tthis._width2 = width2;\n\t}\n\n\t/**\n\t * Gets the units of the width. It can be 'px' or 'km'.\n\t * @returns {string}\n\t */\n\tgetWidthUnits() {\n\t\treturn this._widthUnits;\n\t}\n\n\t/**\n\t * Sets the units of the width. It can be 'px' or 'km'. Defaults to 'km'.\n\t * @param {string} widthUnits\n\t */\n\tsetWidthUnits(widthUnits) {\n\t\tthis._widthUnits = widthUnits;\n\t\tif (this.getLoadState() === 'loaded') {\n\t\t\tconst material = this.getThreeJsMaterials()[0];\n\t\t\tmaterial.defines['PIXEL_BASED'] = (widthUnits === 'px');\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the url of the texture.\n\t * @returns {string}\n\t */\n\tgetTextureUrl() {\n\t\treturn this._textureUrl;\n\t}\n\n\t/**\n\t * Sets the url of the texture. It defaults '', meaning no texture.\n\t * @param {string} url\n\t */\n\tsetTextureUrl(url) {\n\t\tthis._textureUrl = url;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the flag for whether to repeat or stretch the texture.\n\t * @returns {boolean}\n\t */\n\tgetTextureRepeat() {\n\t\treturn this._textureRepeat;\n\t}\n\n\t/**\n\t * Sets the flag for whether to repeat or stretch the texture. Defaults to true.\n\t * @param {boolean} repeat\n\t */\n\tsetTextureRepeat(repeat) {\n\t\tthis._textureRepeat = repeat;\n\t}\n\n\t/**\n\t * Gets the stretch factor for textures.\n\t * @returns {number}\n\t */\n\tgetTextureStretch() {\n\t\treturn this._textureStretch;\n\t}\n\n\t/**\n\t * Sets the stretch factor for textures. Defaults to 1.\n\t * @param {number} stretch\n\t */\n\tsetTextureStretch(stretch) {\n\t\tthis._textureStretch = stretch;\n\t}\n\n\t/**\n\t * Gets the y offset from 0 to 1 of the texture.\n\t * @returns {number}\n\t */\n\tgetTextureYOffset() {\n\t\treturn this._textureYOffset;\n\t}\n\n\t/**\n\t * Sets the y offset from 0 to 1 of the texture. Defaults to 0.\n\t * @param {number} offset\n\t */\n\tsetTextureYOffset(offset) {\n\t\tthis._textureYOffset = offset;\n\t}\n\n\t/**\n\t * Gets the u offset from 0 to 1 of the start of the line. 0 is at Entity1, 1 is at Entity2.\n\t * @returns {number}\n\t */\n\tgetUOffsetStart() {\n\t\treturn this._uOffsetStart;\n\t}\n\n\t/**\n\t * Sets the u offset from 0 to 1 of the start of the line. 0 is at Entity1, 1 is at Entity2. Defaults to 0.\n\t * @param {number} uOffsetStart\n\t */\n\tsetUOffsetStart(uOffsetStart) {\n\t\tthis._uOffsetStart = uOffsetStart;\n\t}\n\n\t/**\n\t * Gets the u offset from 0 to 1 of the end of the line. 0 is at Entity1, 1 is at Entity2.\n\t * @returns {number}\n\t */\n\tgetUOffsetEnd() {\n\t\treturn this._uOffsetEnd;\n\t}\n\n\t/**\n\t * Sets the u offset from 0 to 1 of the end of the line. 0 is at Entity1, 1 is at Entity2. Defaults to 1.\n\t * @param {number} uOffsetEnd\n\t */\n\tsetUOffsetEnd(uOffsetEnd) {\n\t\tthis._uOffsetEnd = uOffsetEnd;\n\t}\n\n\t/**\n\t * Gets the color multiplier of the sprite. Each pixel in the texture is multiplied by this color.\n\t * @returns {Color}\n\t */\n\tgetColorMultiplier() {\n\t\treturn this._colorMultiplier;\n\t}\n\n\t/**\n\t * Sets the color multiplier of the sprite. Each pixel in the texture is multiplied by this color. It defaults to (1, 1, 1, 1).\n\t * @param {Color} colorMultiplier\n\t */\n\tsetColorMultiplier(colorMultiplier) {\n\t\tthis._colorMultiplier.thaw();\n\t\tthis._colorMultiplier.copy(colorMultiplier);\n\t\tthis._colorMultiplier.freeze();\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._colorMultiplier, 1.0);\n\t}\n\n\t/**\n\t * Sets blending mode. It defaults to 'normal'.\n\t * @param {string} blending - one of 'normal', 'additive', 'subtractive', 'multliply', 'custom', or 'none'\n\t */\n\tsetBlending(blending) {\n\t\tthis._blending = blending;\n\t\tThreeJsHelper.setBlending(this.getThreeJsMaterials()[0], blending);\n\t}\n\n\t/**\n\t * Updates the camera-independent parts of the component.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst entity1 = this._entity1.get();\n\t\tconst entity2 = this._entity2.get();\n\t\tif (entity1 === null || entity2 === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the radius of the component.\n\t\tconst offset = Vector3.pool.get();\n\t\tentity1.getPositionRelativeToEntity(offset, Vector3.Zero, entity2);\n\t\tthis.__setRadius(offset.magnitude() + entity1.getExtentsRadius() + entity2.getExtentsRadius());\n\t\tVector3.pool.release(offset);\n\t}\n\n\t/**\n\t * Prepares the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// If either entity is not there, don't show the line.\n\t\tconst entity1 = this._entity1.get();\n\t\tconst entity2 = this._entity2.get();\n\t\tif (entity1 === null || entity2 === null) {\n\t\t\tthis.getThreeJsObjects()[0].visible = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the two positions in camera space.\n\t\tconst cameraSpacePosition1 = Vector3.pool.get();\n\t\tconst cameraSpacePosition2 = Vector3.pool.get();\n\t\tconst cameraSpacePosition1Temp = Vector3.pool.get();\n\t\tcameraSpacePosition1.rotate(entity1.getOrientation(), this._entity1Offset);\n\t\tcameraSpacePosition1.add(entity1.getCameraSpacePosition(camera), cameraSpacePosition1);\n\t\tcameraSpacePosition2.rotate(entity2.getOrientation(), this._entity2Offset);\n\t\tcameraSpacePosition2.add(entity2.getCameraSpacePosition(camera), cameraSpacePosition2);\n\t\tcameraSpacePosition1Temp.copy(cameraSpacePosition1);\n\t\tcameraSpacePosition1.lerp(cameraSpacePosition1, cameraSpacePosition2, this._uOffsetStart);\n\t\tcameraSpacePosition2.lerp(cameraSpacePosition1Temp, cameraSpacePosition2, this._uOffsetEnd);\n\n\t\t// Make entity1 always the closer of the two. Indicate if they were flipped.\n\t\tlet entity1DistanceToCamera = cameraSpacePosition1.magnitude();\n\t\tlet entity2DistanceToCamera = cameraSpacePosition2.magnitude();\n\t\tlet entitiesFlipped = false;\n\t\tif (entity1DistanceToCamera > entity2DistanceToCamera) {\n\t\t\tcameraSpacePosition1Temp.copy(cameraSpacePosition1);\n\t\t\tcameraSpacePosition1.copy(cameraSpacePosition2);\n\t\t\tcameraSpacePosition2.copy(cameraSpacePosition1Temp);\n\t\t\tentity1DistanceToCamera = cameraSpacePosition1.magnitude();\n\t\t\tentity2DistanceToCamera = cameraSpacePosition2.magnitude();\n\t\t\tentitiesFlipped = true;\n\t\t}\n\t\tVector3.pool.release(cameraSpacePosition1Temp);\n\n\t\t// If we're in pixel mode, make sure the camera-space positions don't get too far from the normal clipping box or\n\t\t// visual bugs can appear. This clips their x and y to the normal-space bounds.\n\t\tconst normalSpacePosition1 = Vector3.pool.get();\n\t\tconst normalSpacePosition2 = Vector3.pool.get();\n\t\tcamera.getNormalSpacePositionFromCameraSpacePosition(normalSpacePosition1, cameraSpacePosition1);\n\t\tcamera.getNormalSpacePositionFromCameraSpacePosition(normalSpacePosition2, cameraSpacePosition2);\n\n\t\t// Get the vertical and horizontal axes. The vertical is the one connecting the entities.\n\t\tconst vAxis = Vector3.pool.get();\n\t\tconst hAxis = Vector3.pool.get();\n\t\tvAxis.sub(cameraSpacePosition2, cameraSpacePosition1);\n\t\thAxis.copy(cameraSpacePosition1);\n\t\thAxis.cross(vAxis, hAxis);\n\t\thAxis.normalize(hAxis);\n\n\t\t// Make the vAxis shorter so that we don't have such large numbers.\n\t\tvAxis.setMagnitude(vAxis, Math.min(vAxis.magnitude(), entity1DistanceToCamera * 10));\n\t\tcameraSpacePosition2.add(cameraSpacePosition1, vAxis);\n\t\tcamera.getNormalSpacePositionFromCameraSpacePosition(normalSpacePosition2, cameraSpacePosition2);\n\t\tentity2DistanceToCamera = cameraSpacePosition2.magnitude();\n\n\t\t// Get the widths at each entity and the 'midpoint' value.\n\t\tlet width1 = entitiesFlipped ? this._width2 : this._width1;\n\t\tlet width2 = entitiesFlipped ? this._width1 : this._width2;\n\n\t\t// If we're in pixel mode, the widths need to be adjusted from pixel-space to camera-space.\n\t\tif (this._widthUnits === 'px') {\n\t\t\tconst forward = Vector3.pool.get();\n\t\t\tcamera.getEntity().getOrientation().getAxis(forward, 1);\n\t\t\twidth1 = camera.getViewport().getNormalSpaceRadiusFromPixelSpaceRadius(width1);\n\t\t\twidth2 = camera.getViewport().getNormalSpaceRadiusFromPixelSpaceRadius(width2);\n\t\t\twidth1 = camera.getRadiusFromNormalSpaceRadius(width1, cameraSpacePosition1.dot(forward));\n\t\t\twidth2 = camera.getRadiusFromNormalSpaceRadius(width2, cameraSpacePosition2.dot(forward));\n\t\t\tVector3.pool.release(forward);\n\t\t}\n\n\t\t// Get the amount to repeat the texture.\n\t\tlet repeatAmount = 1 / this._textureStretch;\n\t\tif (this._widthUnits === 'px') {\n\t\t\tif (this._textureRepeat) {\n\t\t\t\tconst pixelSpacePosition1 = Vector2.pool.get();\n\t\t\t\tconst pixelSpacePosition2 = Vector2.pool.get();\n\t\t\t\tcamera.getViewport().getPixelSpacePositionFromNormalSpacePosition(pixelSpacePosition1, normalSpacePosition1);\n\t\t\t\tcamera.getViewport().getPixelSpacePositionFromNormalSpacePosition(pixelSpacePosition2, normalSpacePosition2);\n\t\t\t\tconst pixelDiff = Vector2.pool.get();\n\t\t\t\tpixelDiff.sub(pixelSpacePosition1, pixelSpacePosition2);\n\t\t\t\tif (pixelDiff.isNaN()) {\n\t\t\t\t\tconst bounds = camera.getViewport().getBounds();\n\t\t\t\t\tpixelDiff.x = bounds.size.x * (normalSpacePosition2.x - normalSpacePosition1.x) / 2.0;\n\t\t\t\t\tpixelDiff.y = bounds.size.y * (normalSpacePosition2.y - normalSpacePosition1.y) / 2.0;\n\t\t\t\t}\n\t\t\t\trepeatAmount *= pixelDiff.magnitude() / Math.max(this._width1, this._width2) * this._textureAspectRatio;\n\n\t\t\t\tVector2.pool.release(pixelDiff);\n\t\t\t\tVector2.pool.release(pixelSpacePosition1);\n\t\t\t\tVector2.pool.release(pixelSpacePosition2);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._textureRepeat) {\n\t\t\t\trepeatAmount *= vAxis.magnitude() / Math.max(this._width1, this._width2) * this._textureAspectRatio;\n\t\t\t}\n\t\t}\n\t\tVector3.pool.release(normalSpacePosition1);\n\t\tVector3.pool.release(normalSpacePosition2);\n\n\t\t// Set the camera position of the Three.js object.\n\t\tThreeJsHelper.setPosition(this.getThreeJsObjects(), cameraSpacePosition1);\n\n\t\t// Update the uniforms.\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'vAxis', vAxis);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'width1', width1);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'width2', width2);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'textureYOffset', this._textureYOffset * (entitiesFlipped ? -1 : 1));\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'repeatAmount', repeatAmount);\n\n\t\t// Release the temporaries.\n\t\tVector3.pool.release(cameraSpacePosition1);\n\t\tVector3.pool.release(cameraSpacePosition2);\n\t\tVector3.pool.release(vAxis);\n\t\tVector3.pool.release(hAxis);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Load the texture.\n\t\tconst texture = await ThreeJsHelper.loadTexture(this, this._textureUrl, true, false);\n\t\ttexture.wrapT = THREE.RepeatWrapping;\n\t\tthis._textureAspectRatio = texture.image.width / texture.image.height;\n\n\t\t// Check if the component has since stopped loading.\n\t\tif (this.getLoadState() !== 'loading') {\n\t\t\ttexture.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// Create the material.\n\t\tconst threeJsMaterial = this.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('connected_sprite');\n\t\tthis.getThreeJsMaterials().push(threeJsMaterial);\n\t\tThreeJsHelper.setBlending(this.getThreeJsMaterials()[0], this._blending);\n\t\tThreeJsHelper.setDefine(threeJsMaterial, 'PIXEL_BASED', (this._widthUnits === 'px'));\n\t\tThreeJsHelper.setUniformColorRGBA(threeJsMaterial, 'color', this._colorMultiplier, 1.0);\n\t\tThreeJsHelper.setUniformTexture(threeJsMaterial, 'colorTexture', texture);\n\n\t\t// Create the object.\n\t\tconst threeJsObject = ThreeJsHelper.createMeshObject(this, threeJsMaterial, [\n\t\t\t{ name: 'position', dimensions: 2 }], false);\n\t\tthis.getThreeJsObjects().push(threeJsObject);\n\n\t\t// Setup the vertices and indices.\n\t\tThreeJsHelper.setVertices(threeJsObject.geometry, 'position', new Float32Array([-1, 0, 1, 0, -1, 1, 1, 1]));\n\t\tThreeJsHelper.setIndices(threeJsObject.geometry, new Uint16Array([0, 2, 3, 3, 1, 0]));\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tEntity,\n\tEntityRef,\n\tMathUtils,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/**\n * Div component. Creates an HTML div element located at position of the entity, using absolute positioning.\n*/\nexport class DivComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The camera in which the div is active.\n\t\t * @type {CameraComponent}\n\t\t * @private\n\t\t*/\n\t\tthis._activeCamera = null;\n\n\t\t/**\n\t\t * The flag that determines whether or not the div ignores the distance to the camera when determining visibility.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._fadeWhenCloseToCamera = true;\n\n\t\t/**\n\t\t * The entity that, if defined, when the div gets close to, fades away. If set to '', it defaults to the parent.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._fadeWhenCloseToEntity = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The HTML div element. It will be contained in the labels container div, which will be after the canvas element.\n\t\t * @type {HTMLDivElement}\n\t\t * @private\n\t\t */\n\t\tthis._div = document.createElement('div');\n\t\tthis._div.style.position = 'absolute';\n\t\tthis._div.style.left = '0';\n\t\tthis._div.style.top = '0';\n\t\tthis._div.style.transform = 'translate(0%, 0%);';\n\n\t\t/**\n\t\t * The alignment of the text.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._alignment = new Vector2(0.0, 0.5);\n\t\tthis._alignment.freeze();\n\n\t\t/**\n\t\t * The size of the div in px. Used instead of offsetWidth/offsetHeight every frame so as not to trigger reflow.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._sizeInPx = new Vector2(0, 0);\n\n\t\t/**\n\t\t * The current html, used to see if the sizeInPx needs to be updated.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._currentHTML = '';\n\n\t\t// Set the radius to infinity, since it will always be visible.\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Gets the div.\n\t * @returns {HTMLDivElement}\n\t */\n\tgetDiv() {\n\t\treturn this._div;\n\t}\n\n\t/**\n\t * Gets the camera in which the div is active.\n\t * @returns {CameraComponent}\n\t */\n\tgetActiveCamera() {\n\t\treturn this._activeCamera;\n\t}\n\n\t/**\n\t * Sets the camea in which the div is active. Defaults to the first viewport when created.\n\t * @param {CameraComponent} activeCamera\n\t */\n\tsetActiveCamera(activeCamera) {\n\t\tthis._activeCamera = activeCamera;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the flag that determines whether or not the div ignores the distance to the camera when determining visibility.\n\t * @returns {boolean}\n\t */\n\tgetFadeWhenCloseToCamera() {\n\t\treturn this._fadeWhenCloseToCamera;\n\t}\n\n\t/**\n\t * Sets the flag that determines whether or not the div ignores the distance to the camera when determining visibility. Defaults to true.\n\t * @param {boolean} enable\n\t */\n\tsetFadeWhenCloseToCamera(enable) {\n\t\tthis._fadeWhenCloseToCamera = enable;\n\t}\n\n\t/**\n\t * Gets the entity name that, if defined, when the div gets close to, fades away.\n\t * @returns {string}\n\t */\n\tgetFadeWhenCloseToEntity() {\n\t\treturn this._fadeWhenCloseToEntity.getName();\n\t}\n\n\t/**\n\t * Sets the entity name that, if defined, when the div gets close to, fades away. If set to '', it defaults to the parent. Defaults to ''.\n\t * @param {string} entityName\n\t */\n\tsetFadeWhenCloseToEntity(entityName) {\n\t\tthis._fadeWhenCloseToEntity.setName(entityName);\n\t}\n\n\t/**\n\t * Gets the div alignment. Defaults to the left aligned to the entity and vertically centered.\n\t * @returns {Vector2}\n\t */\n\tgetAlignment() {\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * Sets the alignment. Defaults to Vector2(0.0, 0.5).\n\t * @param {Vector2} alignment - the alignment to set\n\t */\n\tsetAlignment(alignment) {\n\t\tthis._alignment.thaw();\n\t\tthis._alignment.copy(alignment);\n\t\tthis._alignment.freeze();\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\t// Detach the div from its parent.\n\t\tif (this._div.parentNode !== null) {\n\t\t\tthis._div.parentNode.removeChild(this._div);\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the component for render.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// If there's no active camera, set the first viewport as the default one.\n\t\tif (this._activeCamera === null) {\n\t\t\tconst firstViewport = this.getEntity().getScene().getEngine().getViewport(0);\n\t\t\tif (firstViewport !== null) {\n\t\t\t\tthis._activeCamera = firstViewport.getCamera();\n\t\t\t}\n\t\t}\n\t\t// Check to see that there's a camera and viewport set up.\n\t\tif (this._activeCamera !== camera || this._activeCamera === null || this._activeCamera.getViewport() === null) {\n\t\t\treturn;\n\t\t}\n\t\t// Attach the div to the viewport's div, if it isn't already done.\n\t\tif (this._activeCamera.getViewport().getDiv() !== this._div.parentNode) {\n\t\t\tthis._activeCamera.getViewport().getDiv().appendChild(this._div);\n\t\t}\n\n\t\tlet alphaMultiplier = 1;\n\n\t\t// Fade the label when too close to the object.\n\t\tif (alphaMultiplier > 0 && this._fadeWhenCloseToCamera) {\n\t\t\tconst normalizedSizeOfEntity = this.getEntity().getNormalSpaceExtentsRadius(camera);\n\t\t\talphaMultiplier *= MathUtils.clamp01((0.02 - normalizedSizeOfEntity) / 0.02);\n\t\t}\n\n\t\t// Fade the div when the entity div is visually close to the closest parent div.\n\t\tconst cameraSpacePosition = this.getEntity().getCameraSpacePosition(camera);\n\t\tif (alphaMultiplier > 0) {\n\t\t\tlet closeToEntity = /** @type {Entity} */(null);\n\t\t\tif (this._fadeWhenCloseToEntity.getName() === '') {\n\t\t\t\tcloseToEntity = this.getEntity().getParent();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcloseToEntity = this._fadeWhenCloseToEntity.get();\n\t\t\t}\n\t\t\tif (closeToEntity !== null) {\n\t\t\t\tconst normalSpaceDifferenceFromParent = Vector3.pool.get();\n\t\t\t\tnormalSpaceDifferenceFromParent.sub(this.getEntity().getNormalSpacePosition(camera), closeToEntity.getNormalSpacePosition(camera));\n\t\t\t\tconst normalizedEntityDistanceFromParent = normalSpaceDifferenceFromParent.magnitude();\n\t\t\t\tVector3.pool.release(normalSpaceDifferenceFromParent);\n\t\t\t\tconst normalizedParentRadius = closeToEntity.getNormalSpaceExtentsRadius(camera);\n\t\t\t\tif (normalizedParentRadius < 0.02) {\n\t\t\t\t\talphaMultiplier *= MathUtils.clamp01((normalizedEntityDistanceFromParent - 0.02) / 0.02);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If it is occluded, hide the div. Check parent always, too.\n\t\tif (alphaMultiplier > 0) {\n\t\t\tif (this.getEntity().getParent() !== null && this.getEntity().getParent().isOccludingPosition(camera, cameraSpacePosition)) {\n\t\t\t\talphaMultiplier = 0;\n\t\t\t}\n\t\t\telse if (camera.isPositionOccluded(cameraSpacePosition)) {\n\t\t\t\talphaMultiplier = 0;\n\t\t\t}\n\t\t}\n\n\t\t// If the div is behind the camera, make it invisible.\n\t\tif (alphaMultiplier > 0) {\n\t\t\tconst cameraForward = Vector3.pool.get();\n\t\t\tcamera.getEntity().getOrientation().getAxis(cameraForward, 1);\n\t\t\tif (cameraForward.dot(this.getEntity().getCameraSpacePosition(camera)) <= 0) {\n\t\t\t\talphaMultiplier = 0;\n\t\t\t}\n\t\t\tVector3.pool.release(cameraForward);\n\t\t}\n\n\t\t// Set the opacity and pointerEvents from the above conditions.\n\t\tif (this._div.style.opacity !== '' + alphaMultiplier) {\n\t\t\tthis._div.style.opacity = '' + alphaMultiplier;\n\t\t\tif (alphaMultiplier === 0) {\n\t\t\t\tthis._div.style.pointerEvents = 'none';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._div.style.pointerEvents = '';\n\t\t\t}\n\t\t}\n\n\t\tif (alphaMultiplier > 0) {\n\t\t\t// Update the pixel size if needed.\n\t\t\tif (this._currentHTML !== this._div.innerHTML) {\n\t\t\t\tthis._sizeInPx.set(this._div.offsetWidth, this._div.offsetHeight);\n\t\t\t\tthis._currentHTML = this._div.innerHTML;\n\t\t\t}\n\n\t\t\t// Set the position of the div.\n\t\t\tconst renderBounds = camera.getViewport().getBounds();\n\t\t\tconst pixelSpacePosition = this.getEntity().getPixelSpacePosition(camera);\n\t\t\tconst left = pixelSpacePosition.x - this._sizeInPx.x * this._alignment.x - renderBounds.origin.x + (renderBounds.size.x % 2 === 0 ? -0.5 : 0);\n\t\t\tconst top = pixelSpacePosition.y - this._sizeInPx.y * this._alignment.y - renderBounds.origin.y + (renderBounds.size.y % 2 === 0 ? -0.5 : 0);\n\t\t\tthis._div.style.transform = `translate(${left}px, ${top}px)`;\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tTHREE,\n\tThreeJsHelper\n} from '../../internal';\n\n/**\n * Environmental map component. The entity should also have a camera component.\n */\nexport class DynamicEnvironmentMapComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The face width of the highest resolution render. Must be power of two.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._faceSize = 64;\n\n\t\t/**\n\t\t * The color of the invalid area. Used for finding meshes with bad normals or faces.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._invalidColor = new Color(0, 0, 0, 1);\n\t\tthis._invalidColor.freeze();\n\n\t\t// STUFF FOR RENDERING FACES\n\n\t\t/**\n\t\t * The Three.js renderer.\n\t\t * @type {THREE.WebGLRenderer}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsRenderer = this.getEntity().getScene().getEngine().__getThreeJsRenderer();\n\n\t\t/**\n\t\t * The three js cameras.\n\t\t * @type {THREE.PerspectiveCamera[]}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsFaceCameras = [];\n\n\t\t/**\n\t\t * This render targets.\n\t\t * @type {THREE.WebGLRenderTarget[]}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsFaceRenderTargets = [];\n\n\t\t// STUFF FOR RENDERING FINAL TEXTURE\n\n\t\t/**\n\t\t * The ThreeJS quad.\n\t\t * @type {THREE.Mesh<THREE.BufferGeometry, THREE.RawShaderMaterial>}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsQuad = new THREE.Mesh();\n\n\t\t/**\n\t\t * The ThreeJS scene.\n\t\t * @type {THREE.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsScene = new THREE.Scene();\n\n\t\t/**\n\t\t * The ThreeJS cube camera.\n\t\t * @type {THREE.OrthographicCamera}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsCubeCamera = new THREE.OrthographicCamera(-1, 1, -1, 1, -1, 1);\n\n\t\t/**\n\t\t * This render target is the texture that will be used as the environment map.\n\t\t * @private\n\t\t */\n\t\tthis._envMapTexture = new THREE.WebGLRenderTarget(this._faceSize * 4, this._faceSize * 4, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, wrapS: THREE.ClampToEdgeWrapping, wrapT: THREE.ClampToEdgeWrapping });\n\n\t\t// Setup the cameras.\n\t\tthis._setupFaceCameras();\n\n\t\t// Setup the quad for the final render.\n\t\tthis._setupQuad();\n\t}\n\n\t/**\n\t * Gets the face size.\n\t * @return {number}\n\t */\n\tgetFaceSize() {\n\t\treturn this._faceSize;\n\t}\n\n\t/**\n\t * Sets the face size. Defaults to 64.\n\t * @param {number} faceSize\n\t */\n\tsetFaceSize(faceSize) {\n\t\tthis._faceSize = faceSize;\n\t\tif (this._envMapTexture.width !== this._faceSize * 4) {\n\t\t\tthis._envMapTexture.setSize(this._faceSize * 4, this._faceSize * 4);\n\t\t\tthis._threeJsQuad.material.uniforms['faceSize'].value = this._faceSize;\n\t\t}\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsFaceRenderTargets[face].setSize(this._faceSize, this._faceSize);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the color of the invalid area. Used for finding meshes with bad normals or faces.\n\t * @returns {Color}\n\t */\n\tgetInvalidColor() {\n\t\treturn this._invalidColor;\n\t}\n\n\t/**\n\t * Sets the color of the invalid area. Used for finding meshes with bad normals or faces.\n\t * @param {Color} invalidColor\n\t */\n\tsetInvalidColor(invalidColor) {\n\t\tthis._invalidColor.thaw();\n\t\tthis._invalidColor.copy(invalidColor);\n\t\tthis._invalidColor.freeze();\n\t\tif (this._threeJsQuad !== null) {\n\t\t\tThreeJsHelper.setUniformColorRGB(this._threeJsQuad.material, 'invalidColor', this._invalidColor);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the environment map texture.\n\t * @returns {THREE.Texture}\n\t */\n\tgetTexture() {\n\t\treturn this._envMapTexture.texture;\n\t}\n\n\t// INTERNALS\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tthis._threeJsQuad.geometry.dispose();\n\t\tthis._threeJsQuad.material.dispose();\n\t\tthis._envMapTexture.dispose();\n\t\tfor (let i = 0; i < this._threeJsFaceRenderTargets.length; i++) {\n\t\t\tthis._threeJsFaceRenderTargets[i].dispose();\n\t\t}\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Renders the camera. Called by Viewport.\n\t * @internal\n\t */\n\t__render() {\n\t\t// Update the projection matrix.\n\t\tthis._updateProjectionMatrix();\n\n\t\t// Set the camera's orientation for each of the face cameras.\n\t\tconst sqrt2 = 0.7071067811865476;\n\t\t_tempThreeJsQuaternion.set(0, 0, -sqrt2, sqrt2);\n\t\tthis._threeJsFaceCameras[0].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(0, 0, 0, 1);\n\t\tthis._threeJsFaceCameras[1].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(0, 0, sqrt2, sqrt2);\n\t\tthis._threeJsFaceCameras[2].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(0, 0, 1, 0);\n\t\tthis._threeJsFaceCameras[3].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(0.5, -0.5, -0.5, 0.5);\n\t\tthis._threeJsFaceCameras[4].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(-0.5, 0.5, -0.5, 0.5);\n\t\tthis._threeJsFaceCameras[5].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\n\t\t// Render each of the face cameras to the render targets.\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsRenderer.setRenderTarget(this._threeJsFaceRenderTargets[face]);\n\t\t\tthis._threeJsRenderer.render(this.getEntity().getScene().getThreeJsScene(), this._threeJsFaceCameras[face]);\n\t\t}\n\n\t\t// Render to the environment map texture using the render targets.\n\t\tthis._threeJsRenderer.setRenderTarget(this._envMapTexture);\n\t\t// this._threeJsRenderer.setRenderTarget(null);\n\t\tthis._threeJsRenderer.render(this._threeJsScene, this._threeJsCubeCamera);\n\t}\n\n\t/**\n\t * Sets up the cameras.\n\t * @private\n\t */\n\t_setupFaceCameras() {\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsFaceCameras.push(new THREE.PerspectiveCamera(90.0, 1.0, 0.1, 1000));\n\t\t\tconst projectionMatrix = new THREE.Matrix4();\n\t\t\tprojectionMatrix.set(\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t0, 1, 0, 0);\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrix = projectionMatrix;\n\t\t\tconst projectionMatrixInverse = new THREE.Matrix4();\n\t\t\tprojectionMatrixInverse.set(\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0);\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrixInverse = projectionMatrixInverse;\n\t\t\tthis._threeJsFaceCameras[face].layers.set(1);\n\n\t\t\tconst renderTarget = new THREE.WebGLRenderTarget(this._faceSize, this._faceSize, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter });\n\t\t\tthis._threeJsFaceRenderTargets.push(renderTarget);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the projection.\n\t * @private\n\t */\n\t_updateProjectionMatrix() {\n\t\tconst cameraComponent = /** @type {CameraComponent} */(this.getEntity().get('camera'));\n\t\tif (cameraComponent === null) {\n\t\t\treturn;\n\t\t}\n\t\tconst f1 = 1.0 - Number.EPSILON;\n\t\tconst f2 = -cameraComponent.getAutoNearDistance() * (2.0 - Number.EPSILON);\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrix.elements[6] = f1;\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrix.elements[14] = f2;\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrixInverse.elements[11] = 1 / f2;\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrixInverse.elements[15] = -f1 / f2;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the quad meshes up.\n\t */\n\t_setupQuad() {\n\t\t// Setup geometry.\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tconst meshPositions = new Float32Array([-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0]);\n\t\tconst meshIndices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(meshPositions, 3));\n\t\tgeometry.setIndex(new THREE.BufferAttribute(meshIndices, 1));\n\n\t\t// Setup material uniforms.\n\t\tconst uniforms = {\n\t\t\ttextures: new THREE.Uniform([]),\n\t\t\tfaceSize: new THREE.Uniform(this._faceSize),\n\t\t\tinvalidColor: new THREE.Uniform(new THREE.Vector3(this._invalidColor.r, this._invalidColor.g, this._invalidColor.b))\n\t\t};\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tuniforms['textures'].value.push(this._threeJsFaceRenderTargets[face].texture);\n\t\t}\n\n\t\t// Setup material.\n\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\tuniforms: uniforms,\n\t\t\tvertexShader: `\n\t\t\t\tattribute vec3 position;\n\t\t\t\tvarying vec2 xy;\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_Position = vec4(position, 1.0);\n\t\t\t\t\txy = position.xy;\n\t\t\t\t}`,\n\t\t\tfragmentShader: `\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform sampler2D textures[6];\n\t\t\t\tuniform float faceSize;\n\t\t\t\tuniform vec3 invalidColor;\n\n\t\t\t\tvarying vec2 xy;\n\n\t\t\t\tvoid adjustTextureCoordsForBorders(inout int textureIndex, inout vec2 xyInTexture, in float pixelSize) {\n\t\t\t\t\t// Get the pixells in pixel-space.\n\t\t\t\t\tvec2 xyInPixels = xyInTexture * pixelSize;\n\n\t\t\t\t\t// Flip the x since this code is for surface cubes, but we're inside out.\n\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.x;\n\n\t\t\t\t\t// If it's a border, adjust the pixel it's reading the next pixel in one face over.\n\t\t\t\t\t// This allows for nice linear filtering to happen on the material side of things.\n\t\t\t\t\tif (xyInPixels.x < 0.6 || xyInPixels.x > pixelSize - 0.6 || xyInPixels.y < 0.6 || xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\tif (0 <= textureIndex && textureIndex <= 3) { // One of the horizontal faces\n\t\t\t\t\t\t\tif (xyInPixels.x > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = (textureIndex + 1);\n\t\t\t\t\t\t\t\tif (textureIndex == 4) {\n\t\t\t\t\t\t\t\t\ttextureIndex = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.x < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = textureIndex - 1;\n\t\t\t\t\t\t\t\tif (textureIndex == -1) {\n\t\t\t\t\t\t\t\t\ttextureIndex = 3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textureIndex == 0) {\n\t\t\t\t\t\t\tif (xyInPixels.y < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textureIndex == 1) {\n\t\t\t\t\t\t\tif (xyInPixels.y < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textureIndex == 2) {\n\t\t\t\t\t\t\tif (xyInPixels.y < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.y = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textureIndex == 3) {\n\t\t\t\t\t\t\tif (xyInPixels.y < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.x = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.x = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textureIndex == 4) {\n\t\t\t\t\t\t\tif (xyInPixels.x < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.y;\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.x > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = xyInPixels.y;\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (xyInPixels.y < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.y = pixelSize - 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (textureIndex == 5) {\n\t\t\t\t\t\t\tif (xyInPixels.x < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = xyInPixels.y;\n\t\t\t\t\t\t\t\txyInPixels.y = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.x > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.y;\n\t\t\t\t\t\t\t\txyInPixels.y = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (xyInPixels.y < 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.x;\n\t\t\t\t\t\t\t\txyInPixels.y = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyInPixels.y > pixelSize - 0.6) {\n\t\t\t\t\t\t\t\txyInPixels.y = 1.5;\n\t\t\t\t\t\t\t\ttextureIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Shrink all pixels so that they fit within the border.\n\t\t\t\t\t// The border pixels have already been modified so that they work with this equation.\n\t\t\t\t\txyInPixels.x = ((pixelSize - 1.0) * xyInPixels.x - pixelSize) / (pixelSize - 3.0);\n\t\t\t\t\txyInPixels.y = ((pixelSize - 1.0) * xyInPixels.y - pixelSize) / (pixelSize - 3.0);\n\n\t\t\t\t\t// Flip the x back.\n\t\t\t\t\txyInPixels.x = pixelSize - xyInPixels.x;\n\n\t\t\t\t\t// Go back into unit-space.\n\t\t\t\t\txyInTexture = xyInPixels / pixelSize;\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\t// Make it pink everywhere else for easy debugging.\n\t\t\t\t\tvec3 color = invalidColor;\n\t\t\t\t\t// Get the mip level, size, and offset.\n\t\t\t\t\tfloat level = floor(1.0 - log2(1.0 - xy.y)); // 0 is base, then 1, etc.\n\t\t\t\t\tfloat mipSizeX = pow(2.0, -level); // 1, .5, .25, .125, etc.\n\t\t\t\t\tfloat mipOffsetY = 1.0 - pow(2.0, -level); // 0, .5, .75, .875, etc.\n\t\t\t\t\t// Get the xy within the mip level. Note the x value is * 3 for less computing further on.\n\t\t\t\t\tvec2 xyInMip;\n\t\t\t\t\txyInMip.x = 0.5 * (xy.x + 1.0) / mipSizeX * 4.0;\n\t\t\t\t\txyInMip.y = (xy.y + 1.0 - 2.0 * mipOffsetY) / mipSizeX;\n\t\t\t\t\tif (xyInMip.x <= 3.0) {\n\t\t\t\t\t\tint textureIndex = int(floor(xyInMip.y * 2.0) * 3.0 + floor(xyInMip.x));\n\t\t\t\t\t\t// Get the xy within the face/texture.\n\t\t\t\t\t\tvec2 xyInTexture;\n\t\t\t\t\t\txyInTexture.x = 1.0 - xyInMip.x + floor(xyInMip.x);\n\t\t\t\t\t\txyInTexture.y = 2.0 * (xyInMip.y - floor(xyInMip.y * 2.0) / 2.0);\n\t\t\t\t\t\t// Adjust the coordinates and face to account for borders.\n\t\t\t\t\t\tadjustTextureCoordsForBorders(textureIndex, xyInTexture, faceSize * mipSizeX);\n\t\t\t\t\t\t// Set the color based on the face (textureIndex) and the coords.\n\t\t\t\t\t\tif (textureIndex == 0) {\n\t\t\t\t\t\t\tcolor = texture2D(textures[0], xyInTexture).rgb;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (textureIndex == 1) {\n\t\t\t\t\t\t\tcolor = texture2D(textures[1], xyInTexture).rgb;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (textureIndex == 2) {\n\t\t\t\t\t\t\tcolor = texture2D(textures[2], xyInTexture).rgb;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (textureIndex == 3) {\n\t\t\t\t\t\t\tcolor = texture2D(textures[3], xyInTexture).rgb;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (textureIndex == 4) {\n\t\t\t\t\t\t\tcolor = texture2D(textures[4], xyInTexture).rgb;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (textureIndex == 5) {\n\t\t\t\t\t\t\tcolor = texture2D(textures[5], xyInTexture).rgb;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(color, 1.0);\n\t\t\t\t}`,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\n\t\t// Setup object.\n\t\tthis._threeJsQuad = new THREE.Mesh(geometry, material);\n\t\tthis._threeJsQuad.frustumCulled = false;\n\t\tthis._threeJsScene.add(this._threeJsQuad);\n\t}\n}\n\n/**\n * A temporary ThreeJs Quaternion.\n * @type {THREE.Quaternion}\n * @private\n */\nconst _tempThreeJsQuaternion = new THREE.Quaternion();\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tLineMesh,\n\tModelComponent,\n\tQuaternion,\n\tTHREE,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * Red, green, blue axes to help in understanding the orientation of an object.\n */\nexport class GizmoComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The size of the gizmo lines. If not set, defaults to two times the radius of the entity.\n\t\t * @type {number | undefined}\n\t\t * @private\n\t\t */\n\t\tthis._size = undefined;\n\n\t\t/**\n\t\t * Whether or not the gizmo lines are relative to the orientation of the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeToEntity = true;\n\n\t\t/**\n\t\t * The joint for the model to show the gizmo. If empty, the entity itself is used.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._joint = '';\n\n\t\t/**\n\t\t * The joint's ThreeJs object.\n\t\t * @type {THREE.Object3D}\n\t\t * @private\n\t\t */\n\t\tthis._jointObject = null;\n\n\t\t/**\n\t\t * The model for the joint.\n\t\t * @type {ModelComponent}\n\t\t * @private\n\t\t */\n\t\tthis._model = null;\n\n\t\t/**\n\t\t * The line mesh.\n\t\t * @type {LineMesh}\n\t\t * @private\n\t\t */\n\t\tthis._lineMesh = null;\n\n\t\t// Set the radius to twice the entity's radius.\n\t\tthis.__setRadius(entity.getExtentsRadius() * 2.0);\n\n\t\t// It uses the entity's orientation.\n\t\tthis.__setUsesEntityOrientation(this._relativeToEntity);\n\t}\n\n\t/**\n\t * Gets the size of the gizmo lines. If not set, defaults to two times the extents radius of the entity.\n\t * @returns {number}\n\t */\n\tgetSize() {\n\t\tif (this._size !== undefined) {\n\t\t\treturn this._size;\n\t\t}\n\t\telse {\n\t\t\treturn Math.max(0.0001, this.getEntity().getExtentsRadius() * 2.0);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the size of the gizmo lines. If not set, defaults to two times the extents radius of the entity.\n\t * @param {number} [size]\n\t */\n\tsetSize(size) {\n\t\tthis._size = size;\n\t\tthis.__setRadius(this.getSize());\n\t}\n\n\t/**\n\t * Gets whether or not the gizmo lines are relative to the orientation of the entity. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRelativeToEntity() {\n\t\treturn this._relativeToEntity;\n\t}\n\n\t/**\n\t * Sets whether or not the gizmo lines are relative to the orientation of the entity.\n\t * @param {boolean} relativeToEntity\n\t */\n\tsetRelativeToEntity(relativeToEntity) {\n\t\tthis._relativeToEntity = relativeToEntity;\n\t\tthis.__setUsesEntityOrientation(this._relativeToEntity);\n\t}\n\n\t/**\n\t * Sets the gizmo to be at the joint on the specified model. If no model is given, the first model in the entity is used.\n\t * @param {string} joint\n\t * @param {ModelComponent} [model]\n\t */\n\tsetJoint(joint, model) {\n\t\tthis._joint = joint;\n\t\tif (!model) {\n\t\t\tconst modelFromEntity = /** @type {ModelComponent} */(this.getEntity().get('model'));\n\t\t\tif (modelFromEntity !== null) {\n\t\t\t\tthis._model = modelFromEntity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._model = model;\n\t\t}\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// If a joint is specified, setup the joint's ThreeJs object.\n\t\tif (this._joint !== '' && (this._jointObject === null || this._jointObject.name !== this._joint) && this._model !== null) {\n\t\t\tthis._jointObject = this._model.getThreeJsObjectByName(this._joint);\n\t\t}\n\t\t// If the joint object is valid,\n\t\tif (this._jointObject !== null) {\n\t\t\t// Get the position of the joint within the entity by adding up the ancestor positions.\n\t\t\tconst position = Vector3.pool.get();\n\t\t\tlet jointAncestor = this._jointObject;\n\t\t\tGizmoComponent._tempThreeJsVector3.copy(jointAncestor.position);\n\t\t\tGizmoComponent._tempThreeJsQuaternion.copy(jointAncestor.quaternion);\n\t\t\twhile (jointAncestor.parent !== null && jointAncestor.parent !== this._model.getThreeJsObjects()[0]) {\n\t\t\t\tjointAncestor = jointAncestor.parent;\n\t\t\t\tGizmoComponent._tempThreeJsVector3.add(jointAncestor.position);\n\t\t\t\tGizmoComponent._tempThreeJsQuaternion.multiplyQuaternions(jointAncestor.quaternion, GizmoComponent._tempThreeJsQuaternion);\n\t\t\t}\n\t\t\tposition.copyFromThreeJs(GizmoComponent._tempThreeJsVector3);\n\t\t\tposition.mult(position, 0.001); // Get it into the proper km scale.\n\t\t\tposition.rotate(this._model.getRotation(), position); // Rotate it to be in the model component's frame.\n\n\t\t\t// Set the Three.js object position the entity's camera-space position.\n\t\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera, position, true);\n\n\t\t\tVector3.pool.release(position);\n\n\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\torientation.copyFromThreeJs(GizmoComponent._tempThreeJsQuaternion);\n\t\t\torientation.mult(this._model.getRotation(), orientation);\n\t\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity(), orientation);\n\t\t\tQuaternion.pool.release(orientation);\n\t\t}\n\t\telse {\n\t\t\tif (this._relativeToEntity) {\n\t\t\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tThreeJsHelper.setOrientation(this.getThreeJsObjects()[0], Quaternion.Identity);\n\t\t\t}\n\n\t\t\t// Set the Three.js object position the entity's camera-space position.\n\t\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t\t}\n\t\tThreeJsHelper.setScale(this.getThreeJsObjects()[0], this.getSize());\n\n\t\tthis._lineMesh.prepareForRender(camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tthis._lineMesh = new LineMesh(this);\n\t\tconst positions = [];\n\t\tpositions.push(new Vector3(0, 0, 0));\n\t\tpositions.push(new Vector3(1, 0, 0));\n\t\tpositions.push(new Vector3(0, 0, 0));\n\t\tpositions.push(new Vector3(0, 1, 0));\n\t\tpositions.push(new Vector3(0, 0, 0));\n\t\tpositions.push(new Vector3(0, 0, 1));\n\t\tthis._lineMesh.setPositions(positions);\n\t\tconst colors = [];\n\t\tcolors.push(new Color(1, 0, 0));\n\t\tcolors.push(new Color(1, 0, 0));\n\t\tcolors.push(new Color(0, 1, 0));\n\t\tcolors.push(new Color(0, 1, 0));\n\t\tcolors.push(new Color(0, 0, 1));\n\t\tcolors.push(new Color(0, 0, 1));\n\t\tthis._lineMesh.setColors(colors);\n\t\tconst widths = [];\n\t\twidths.push(2);\n\t\twidths.push(2);\n\t\twidths.push(2);\n\t\twidths.push(2);\n\t\twidths.push(2);\n\t\twidths.push(2);\n\t\tthis._lineMesh.setWidths(widths);\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n}\n\n/**\n * A temporary ThreeJs Vector3.\n * @type {THREE.Vector3}\n */\nGizmoComponent._tempThreeJsVector3 = new THREE.Vector3();\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tMathUtils,\n\tQuaternion,\n\tRect,\n\tShaderChunkLogDepth,\n\tSpoutComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/**\n * Label component.\n */\nexport class LabelComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The text to be displayed.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._text = '<PLACEHOLDER>';\n\n\t\t/**\n\t\t * The font face.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._fontFamily = 'Arial';\n\n\t\t/**\n\t\t * The font size in pixels.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._fontSize = 16;\n\n\t\t/**\n\t\t * The color of the text.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Color();\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * A flag the determines whether or not the label ignores the distance when determining visibility.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._ignoreDistance = false;\n\n\t\t/**\n\t\t * The alignment of the text.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._alignment = new Vector2(0.0, 0.5);\n\t\tthis._alignment.freeze();\n\n\t\t/**\n\t\t * The pixel offset of the text.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._pixelOffset = new Vector2(0, 0);\n\t\tthis._pixelOffset.freeze();\n\n\t\t/**\n\t\t * The pixel-space size of the text.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._pixelSize = new Vector2();\n\n\t\t/**\n\t\t * The pixel device ratio. Saved here when text is created.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._devicePixelRatio = 1;\n\n\t\t/**\n\t\t * The canvas to draw text on.\n\t\t * @type {HTMLCanvasElement}\n\t\t * @private\n\t\t */\n\t\tthis._canvas = null;\n\n\t\t/**\n\t\t * The normal-space bounds.\n\t\t * @type {Map<CameraComponent, Rect>}\n\t\t * @private\n\t\t */\n\t\tthis._normalSpaceBounds = new Map();\n\n\t\t// Set the font family and font size from the config, if it exists.\n\t\tconst fontFamily = entity.getScene().getEngine().getConfig().getValue('fontFamily');\n\t\tif (typeof fontFamily === 'string') {\n\t\t\tthis._fontFamily = fontFamily;\n\t\t}\n\t\tconst fontSize = entity.getScene().getEngine().getConfig().getValue('fontSize');\n\t\tif (typeof fontSize === 'number') {\n\t\t\tthis._fontSize = fontSize;\n\t\t}\n\n\t\t// Set the radius to infinity, since it will always show, regardless of distance.\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Returns the text.\n\t * @returns {string}\n\t */\n\tgetText() {\n\t\treturn this._text;\n\t}\n\n\t/**\n\t * Sets the text. Defaults to ''.\n\t * @param {string} text\n\t */\n\tsetText(text) {\n\t\tthis._text = text;\n\t\tthis._updateText();\n\t}\n\n\t/**\n\t * Gets the font face.\n\t * @returns {string}\n\t */\n\tgetFontFamily() {\n\t\treturn this._fontFamily;\n\t}\n\n\t/**\n\t * Sets the font face. Defaults to Arial.\n\t * @param {string} fontFamily\n\t */\n\tsetFontFamily(fontFamily) {\n\t\tthis._fontFamily = fontFamily;\n\t\tthis._updateText();\n\t}\n\n\t/**\n\t * Gets the font size in pixels.\n\t * @returns {number}\n\t */\n\tgetFontSize() {\n\t\treturn this._fontSize;\n\t}\n\n\t/**\n\t * Sets the font size in pixels. Defaults to 16.\n\t * @param {number} fontSize\n\t */\n\tsetFontSize(fontSize) {\n\t\tthis._fontSize = fontSize;\n\t\tthis._updateText();\n\t}\n\n\t/**\n\t * Gets the text color.\n\t * @returns {Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the text color. Defaults to white.\n\t * @param {Color} color - the color to set\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t}\n\n\t/**\n\t * Ignores the distance when determining whether it should show the label or not. Defaults to false.\n\t * @param {boolean} enable\n\t */\n\tsetIgnoreDistance(enable) {\n\t\tthis._ignoreDistance = enable;\n\t}\n\n\t/**\n\t * Gets the label alignment.\n\t * @returns {Vector2}\n\t */\n\tgetAlignment() {\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * Sets the alignment. Defaults to the left aligned to the entity and vertically centered (0, .5). Each component should only be between 0 and 1.\n\t * @param {Vector2} alignment - the alignment to set\n\t */\n\tsetAlignment(alignment) {\n\t\tthis._alignment.thaw();\n\t\tthis._alignment.copy(alignment);\n\t\tthis._alignment.freeze();\n\t\tthis._updateText();\n\t}\n\n\t/**\n\t * Gets the pixel offset.\n\t * @returns {Vector2}\n\t */\n\tgetPixelOffset() {\n\t\treturn this._pixelOffset;\n\t}\n\n\t/**\n\t * Sets the pixel offset.\n\t * @param {Vector2} pixelOffset\n\t */\n\tsetPixelOffset(pixelOffset) {\n\t\tthis._pixelOffset.thaw();\n\t\tthis._pixelOffset.copy(pixelOffset);\n\t\tthis._pixelOffset.freeze();\n\t}\n\n\t/**\n\t * Gets the normal-space bounds of the label for the given camera. Used by the selection controller for selecting labels.\n\t * @param {CameraComponent} camera\n\t * @returns {Rect}\n\t */\n\tgetNormalSpaceBounds(camera) {\n\t\treturn this._normalSpaceBounds.get(camera);\n\t}\n\n\t/**\n\t * Prepares the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\tconst cameraSpacePosition = this.getEntity().getCameraSpacePosition(camera);\n\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t\tThreeJsHelper.setOrientation(this.getThreeJsObjects()[0], Quaternion.Identity);\n\n\t\t// If the camera is a Spout camera, use Spout for the render size.\n\t\tconst renderSize = Vector2.pool.get();\n\t\tif (camera.getType() === 'spout') {\n\t\t\tconst spoutComponent = /** @type {SpoutComponent} */(camera);\n\t\t\trenderSize.set(spoutComponent.getForGlobe() ? -spoutComponent.getRenderWidth() : spoutComponent.getRenderWidth(), spoutComponent.getRenderWidth());\n\t\t\trenderSize.div(renderSize, 4);\n\t\t}\n\t\t// Otherwise use the viewport size.\n\t\telse {\n\t\t\trenderSize.copy(camera.getViewport().getBounds().size);\n\t\t}\n\n\t\t// Set the uniforms.\n\t\tconst pixelOffset = Vector2.pool.get();\n\t\tconst pixelSize = Vector2.pool.get();\n\t\tconst renderUp = Vector3.pool.get();\n\t\tconst renderRight = Vector3.pool.get();\n\t\tpixelOffset.set(\n\t\t\t(this._pixelOffset.x - this._alignment.x * this._canvas.width),\n\t\t\t(this._pixelOffset.y - this._alignment.y * this._canvas.height));\n\t\tpixelSize.set(this._canvas.width, this._canvas.height);\n\t\tcamera.getEntity().getOrientation().getAxis(renderUp, 2);\n\t\tcamera.getEntity().getOrientation().getAxis(renderRight, 0);\n\t\tThreeJsHelper.setUniformVector2(this.getThreeJsMaterials()[0], 'pixelOffset', pixelOffset);\n\t\tThreeJsHelper.setUniformVector2(this.getThreeJsMaterials()[0], 'pixelSize', pixelSize);\n\t\tThreeJsHelper.setUniformVector2(this.getThreeJsMaterials()[0], 'renderSize', renderSize);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'renderUp', renderUp);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'renderRight', renderRight);\n\n\t\t// Update the normal-space bounds.\n\t\tif (camera.getType() !== 'spout') {\n\t\t\t// Get the normalized bounds.\n\t\t\tif (!this._normalSpaceBounds.has(camera)) {\n\t\t\t\tthis._normalSpaceBounds.set(camera, new Rect());\n\t\t\t}\n\n\t\t\tconst normalSpaceBounds = this._normalSpaceBounds.get(camera);\n\t\t\tnormalSpaceBounds.thaw();\n\t\t\tconst normalSpacePosition = this.getEntity().getNormalSpacePosition(camera);\n\t\t\tnormalSpaceBounds.origin.x = normalSpacePosition.x + 2.0 * (this._pixelOffset.x - this._alignment.x * this._pixelSize.x) / renderSize.x;\n\t\t\tnormalSpaceBounds.origin.y = normalSpacePosition.y + 2.0 * (this._pixelOffset.y - this._alignment.y * this._pixelSize.y) / renderSize.y;\n\t\t\tnormalSpaceBounds.size.x = 2.0 * this._pixelSize.x / renderSize.x;\n\t\t\tnormalSpaceBounds.size.y = 2.0 * this._pixelSize.y / renderSize.y;\n\t\t\tnormalSpaceBounds.freeze();\n\t\t}\n\t\tVector2.pool.release(pixelSize);\n\t\tVector2.pool.release(pixelOffset);\n\t\tVector3.pool.release(renderUp);\n\t\tVector3.pool.release(renderRight);\n\t\tVector2.pool.release(renderSize);\n\n\t\t// Fade the label when the camera is close.\n\t\tlet alphaMultiplier = 1.0;\n\t\tconst normalizedRadiusOfEntity = this.getEntity().getNormalSpaceExtentsRadius(camera);\n\t\tif (!this._ignoreDistance) {\n\t\t\talphaMultiplier *= MathUtils.clamp01((0.02 - normalizedRadiusOfEntity) / 0.02);\n\t\t}\n\n\t\t// Fade the label when the entity is visually close to its parent and its parent also has a label.\n\t\tif (this.getEntity().getParent() !== null) {\n\t\t\tconst normalizedEntityDistanceFromParent = camera.getNormalSpaceRadiusFromRadius(this.getEntity().getPosition().magnitude(), cameraSpacePosition.magnitude());\n\t\t\tconst normalizedParentRadius = this.getEntity().getParent().getNormalSpaceExtentsRadius(camera);\n\t\t\tif (!this._ignoreDistance && normalizedParentRadius < 0.02) {\n\t\t\t\talphaMultiplier *= MathUtils.clamp01((normalizedEntityDistanceFromParent - 0.02) / 0.02);\n\t\t\t}\n\t\t}\n\n\t\t// If it is occluded, hide label. Check parent always, too.\n\t\tif (this.getEntity().getParent() !== null && this.getEntity().getParent().isOccludingPosition(camera, cameraSpacePosition)) {\n\t\t\talphaMultiplier = 0;\n\t\t}\n\t\telse if (camera.isPositionOccluded(cameraSpacePosition)) {\n\t\t\talphaMultiplier = 0;\n\t\t}\n\n\t\t// Set the color of the sprite and include the alpha multiplier.\n\t\tconst color = Color.pool.get();\n\t\tcolor.copy(this._color);\n\t\tcolor.a *= alphaMultiplier;\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'colorMultiplier', color);\n\t\tColor.pool.release(color);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Create the Three.js object.\n\t\tif (LabelComponent._useCount === 0) {\n\t\t\t// Create the shared geometry as a square 0, 0 to 1, 1.\n\t\t\tLabelComponent._threeJsGeometry = ThreeJsHelper.createGeometry([{ name: 'position', dimensions: 2 }, { name: 'uv', dimensions: 2 }], false);\n\t\t\tThreeJsHelper.setVertices(LabelComponent._threeJsGeometry, 'position', new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]));\n\t\t\tThreeJsHelper.setVertices(LabelComponent._threeJsGeometry, 'uv', new Float32Array([0, 1, 1, 1, 1, 0, 0, 0]));\n\t\t\tThreeJsHelper.setIndices(LabelComponent._threeJsGeometry, new Uint16Array([0, 1, 2, 2, 3, 0]));\n\n\t\t\t// Create the shared material.\n\t\t\tLabelComponent._threeJsMaterial = new THREE.ShaderMaterial({\n\t\t\t\tuniforms: {\n\t\t\t\t\tcolorMultiplier: new THREE.Uniform(new THREE.Vector4(1.0, 1.0, 1.0, 1.0)),\n\t\t\t\t\tcolorTexture: new THREE.Uniform(null),\n\t\t\t\t\tpixelOffset: new THREE.Uniform(new THREE.Vector2(0, 0)),\n\t\t\t\t\tpixelSize: new THREE.Uniform(new THREE.Vector2(1, 1)),\n\t\t\t\t\trenderSize: new THREE.Uniform(new THREE.Vector2(1, 1)),\n\t\t\t\t\trenderUp: new THREE.Uniform(new THREE.Vector3(0, 1, 0)),\n\t\t\t\t\trenderRight: new THREE.Uniform(new THREE.Vector3(1, 0, 0)),\n\n\t\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t\t},\n\t\t\t\tvertexShader: `\n\t\t\t\t\tuniform vec2 pixelOffset;\n\t\t\t\t\tuniform vec2 pixelSize;\n\t\t\t\t\tuniform vec2 renderSize;\n\t\t\t\t\tuniform vec3 renderUp;\n\t\t\t\t\tuniform vec3 renderRight;\n\t\t\t\t\tvarying vec2 fUV;\n\n\t\t\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\t\t\tvoid main() {\n\t\t\t\t\t\t// Get a frame for the label to be on the x-y axis.\n\t\t\t\t\t\tvec3 forward = (modelMatrix * vec4(0, 0, 0, 1.)).xyz;\n\t\t\t\t\t\tfloat distance = length(forward);\n\t\t\t\t\t\tforward = normalize(forward);\n\t\t\t\t\t\tvec3 up = normalize(renderUp);\n\t\t\t\t\t\tvec3 right = normalize(cross(forward, up));\n\n\t\t\t\t\t\t// Setup the up and right vectors.\n\t\t\t\t\t\tup *= (position.y * pixelSize.y + pixelOffset.y) / renderSize.y * distance;\n\t\t\t\t\t\tright *= (position.x * pixelSize.x + pixelOffset.x) / renderSize.x * distance * projectionMatrix[1][3];\n\n\t\t\t\t\t\t// Do the transforms.\n\t\t\t\t\t\tvec4 viewPosition = modelViewMatrix * vec4(up + right, 1.);\n\t\t\t\t\t\tgl_Position = projectionMatrix * viewPosition;\n\n\t\t\t\t\t\tfUV = uv;\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t\t\t}`,\n\t\t\t\tfragmentShader: `\n\t\t\t\t\tprecision highp float;\n\n\t\t\t\t\tuniform vec4 colorMultiplier;\n\t\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\t\tvarying vec2 fUV;\n\n\t\t\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\t\t\tvoid main(void) {\n\t\t\t\t\t\tgl_FragColor = texture2D(colorTexture, fUV);\n\t\t\t\t\t\tgl_FragColor *= colorMultiplier;\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t\t\t}`,\n\t\t\t\tside: THREE.DoubleSide\n\t\t\t});\n\t\t\tThreeJsHelper.setupLogDepthBuffering(LabelComponent._threeJsMaterial);\n\t\t}\n\t\tLabelComponent._useCount += 1;\n\n\t\t// Create the material.\n\t\tconst material = LabelComponent._threeJsMaterial.clone();\n\t\tthis.getThreeJsMaterials().push(material);\n\t\tThreeJsHelper.setTransparent(material, true);\n\t\tThreeJsHelper.setOverlay(material, true);\n\t\tThreeJsHelper.setUniformColorRGBA(material, 'colorMultiplier', this._color);\n\n\t\t// Create the object.\n\t\tconst object = ThreeJsHelper.createMeshObjectGivenGeometry(this, material, LabelComponent._threeJsGeometry);\n\t\tthis.getThreeJsObjects().push(object);\n\n\t\t// Create the canvas.\n\t\tthis._canvas = document.createElement('canvas');\n\t\tthis._canvas.width = 1;\n\t\tthis._canvas.height = 1;\n\n\t\t// Update the text.\n\t\tthis._updateText();\n\t}\n\n\t/**\n\t * Unloads the resources.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tLabelComponent._useCount -= 1;\n\t\tif (LabelComponent._useCount === 0) {\n\t\t\tThreeJsHelper.destroyGeometry(LabelComponent._threeJsGeometry);\n\t\t\tThreeJsHelper.destroyMaterial(LabelComponent._threeJsMaterial);\n\t\t}\n\t\tconst object = this.getThreeJsObjects()[0];\n\t\tif (object.parent !== null) {\n\t\t\tobject.parent.remove(object);\n\t\t}\n\t\tthis.getThreeJsMaterials()[0].dispose();\n\t\tthis._canvas = null;\n\t}\n\n\t_updateText() {\n\t\tif (this._canvas === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = this._canvas.getContext('2d');\n\t\tthis._devicePixelRatio = window.devicePixelRatio;\n\n\t\t// Get the dimensions of the text.\n\t\tcontext.font = this._fontSize + 'px ' + this._fontFamily;\n\t\tconst metrics = context.measureText(this._text);\n\t\tthis._pixelSize.set(metrics.width * this._devicePixelRatio, this._fontSize * this._devicePixelRatio);\n\n\t\t// Get the texture size. It needs to be a power of 2.\n\t\tconst textureWidth = MathUtils.ceilPow2(this._pixelSize.x);\n\t\tconst textureHeight = MathUtils.ceilPow2(this._pixelSize.y);\n\n\t\tif (textureWidth !== this._canvas.width || textureHeight !== this._canvas.height) {\n\t\t\tthis._canvas.width = textureWidth;\n\t\t\tthis._canvas.height = textureHeight;\n\t\t}\n\n\t\tcontext.clearRect(0, 0, this._canvas.width, this._canvas.height);\n\t\tthis._canvas.style.width = (textureWidth / this._devicePixelRatio) + 'px';\n\t\tthis._canvas.style.height = (textureHeight / this._devicePixelRatio) + 'px';\n\t\tcontext.font = this._pixelSize.y + 'px ' + this._fontFamily; // need to do this again due to browser bug\n\t\tcontext.fillStyle = 'rgba(255, 255, 255, 255)';\n\t\tcontext.fillText(this._text, (this._canvas.width - this._pixelSize.x) * MathUtils.clamp01(this._alignment.x), (this._canvas.height - this._pixelSize.y * 0.1875) - (this._canvas.height - this._pixelSize.y) * MathUtils.clamp01(this._alignment.y));\n\n\t\tconst material = this.getThreeJsMaterials()[0];\n\t\tThreeJsHelper.setUniformTexture(material, 'colorTexture', ThreeJsHelper.loadTextureFromCanvas(this._canvas));\n\t}\n}\n\n/**\n * A global shared material, copied by labels.\n * @type {THREE.ShaderMaterial}\n */\nLabelComponent._threeJsMaterial = null;\n\n/**\n * A global shared geometry unit square with a corner at (0, 0), copied by labels.\n * @type {THREE.BufferGeometry}\n */\nLabelComponent._threeJsGeometry = null;\n\n/**\n * The count for the number of labels used.\n * @type {number}\n */\nLabelComponent._useCount = 0;\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tColor,\n\tEntity\n} from '../../internal';\n\n/**\n * A light source. Does not produce any actual light per se, but is used by other shaders when referenced. Shaders can use the 'lightSourceColor' and 'lightSourcePos' uniforms, and call setUniforms() to use the light source.\n */\nexport class LightSourceComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The color of the light. Alpha is not used.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Color(1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The absolute magnitude of the light.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._absoluteMagnitude = 1;\n\n\t\t// Make the light source work everywhere.\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Gets the color. Defaults to white.\n\t * @returns {Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color.\n\t * @param {Color} color - the color to set\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t}\n\n\t/**\n\t * Gets the absolute magnitude. Defaults to 1.\n\t * @returns {number}\n\t */\n\tgetAbsoluteMagnitude() {\n\t\treturn this._absoluteMagnitude;\n\t}\n\n\t/**\n\t * Sets the absolute magnitude.\n\t * @param {number} absoluteMagnitude\n\t */\n\tsetAbsoluteMagnitude(absoluteMagnitude) {\n\t\tthis._absoluteMagnitude = absoluteMagnitude;\n\t}\n\n\t/**\n\t * Loads the light source, adding it to the scene.\n\t * @returns {Promise<void | void[]>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tthis.getEntity().getScene().__addLightSource(this.getEntity().getName(), this.getTypeIndex());\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads the light source, removing it from the scene.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tthis.getEntity().getScene().__removeLightSource(this.getEntity().getName(), this.getTypeIndex());\n\t}\n\n\t/**\n\t * Sets the type index. Overriden to ensure that the scene has the correct type index.\n\t * @param {number} typeIndex\n\t * @override\n\t * @internal\n\t */\n\t__setTypeIndex(typeIndex) {\n\t\tif (this.getLoadState() === 'loaded') {\n\t\t\tthis.getEntity().getScene().__removeLightSource(this.getEntity().getName(), this.getTypeIndex());\n\t\t}\n\t\tsuper.__setTypeIndex(typeIndex);\n\t\tif (this.getLoadState() === 'loaded') {\n\t\t\tthis.getEntity().getScene().__addLightSource(this.getEntity().getName(), this.getTypeIndex());\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tDynamicEnvironmentMapComponent,\n\tEntity,\n\tEntityRef,\n\tFastMap,\n\tInterval,\n\tMaterialUtils,\n\tMathUtils,\n\tQuaternion,\n\tTHREE,\n\tThreeJsGLTFLoader,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * A model, usually imported from a GLTF file.\n */\nexport class ModelComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The url of the model.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._url = '';\n\n\t\t/**\n\t\t * The entities uses for shadows. Derived from the shadow entity names.\n\t\t * @type {EntityRef[]}\n\t\t * @private\n\t\t */\n\t\tthis._shadowEntities = [];\n\n\t\t/**\n\t\t * The translation to apply to the model when rendering it.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._translation = new Vector3();\n\t\tthis._translation.freeze();\n\n\t\t/**\n\t\t * The rotation to apply to the model when rendering it.\n\t\t * @type {Quaternion}\n\t\t * @private\n\t\t */\n\t\tthis._rotation = new Quaternion();\n\t\tthis._rotation.freeze();\n\n\t\t/**\n\t\t * The mapping of file names to urls when loading GLTF references.\n\t\t * @type {Map<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._urlReferenceMap = new Map();\n\n\t\t/**\n\t\t * The Three.js animation clips, keyed by name.\n\t\t * @type {Map<string, THREE.AnimationClip>}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsAnimationClips = new Map();\n\n\t\t/**\n\t\t * A mapping of names to objects of objects that should be hidden.\n\t\t * @type {FastMap<string, THREE.Object3D>}\n\t\t * @private\n\t\t */\n\t\tthis._hiddenObjects = new FastMap();\n\n\t\t/**\n\t\t * The scale to apply to the model.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._scale = new Vector3(0.001, 0.001, 0.001);\n\t\tthis._scale.freeze();\n\n\t\t/**\n\t\t * The size of the actual model without any scaling. Defaults to NaN since it doesn't\n\t\t * know the actual model radius until the model is loaded.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._modelRadius = NaN;\n\n\t\t/**\n\t\t * The url for the environment cube map.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._environmentCubemapUrl = '';\n\n\t\t/**\n\t\t * The url for the cylindrical cube map.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._environmentCylindricalUrl = '';\n\n\t\t/**\n\t\t * The environment cube map.\n\t\t * @type {THREE.Texture}\n\t\t * @private\n\t\t */\n\t\tthis._environmentCubemap = null;\n\n\t\t/**\n\t\t * The intensity of the environment.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._environmentIntensity = 0.5;\n\n\t\t/**\n\t\t * The dynamic environment map texture, if used.\n\t\t * @type {DynamicEnvironmentMapComponent}\n\t\t * @private\n\t\t */\n\t\tthis._dynamicEnvironmentMapComponent = null;\n\n\t\t/**\n\t\t * The pixel radius interval over which the model is visible. It will fade to nothing for 50% outside of these bounds.\n\t\t * @type {Interval | undefined}\n\t\t */\n\t\tthis._pixelRadiusVisibleInterval = undefined;\n\n\t\t/**\n\t\t * The flag that if true, uses compressed textures.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._useCompressedTextures = false;\n\n\t\t/**\n\t\t * A bound function for use in callbacks.\n\t\t * @type {function():void}\n\t\t * @private\n\t\t */\n\t\tthis._onConfigChanged = this._onConfigChanged.bind(this);\n\n\t\tthis.__setRadius(this.getEntity().getExtentsRadius());\n\t}\n\n\t/**\n\t * Returns the url of the model file.\n\t * @returns {string}\n\t */\n\tgetUrl() {\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * Sets the url of the model file.\n\t * @param {string} url\n\t */\n\tsetUrl(url) {\n\t\tif (this._url !== '') {\n\t\t\tthis.getEntity().getScene().getEngine().getDownloader().cancel(this._url);\n\t\t}\n\t\tthis.resetResources();\n\t\tthis._modelRadius = NaN;\n\t\tthis._loading = false;\n\t\tthis._url = url;\n\t}\n\n\t/**\n\t * Sets an object to be hidden on the model.\n\t * @param {string} name - The object name\n\t * @param {boolean} hidden - Whether or not it should be hidden\n\t */\n\tsetHiddenObject(name, hidden) {\n\t\tif (hidden && !this._hiddenObjects.has(name)) {\n\t\t\tthis._hiddenObjects.set(name, null);\n\t\t}\n\t\telse if (!hidden && this._hiddenObjects.has(name)) {\n\t\t\tthis._hiddenObjects.delete(name);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the translation of the model.\n\t * @returns {Vector3} translation\n\t */\n\tgetTranslation() {\n\t\treturn this._translation;\n\t}\n\n\t/**\n\t * Sets the translation of the model. It defaults to the zero vector.\n\t * @param {Vector3} translation\n\t */\n\tsetTranslation(translation) {\n\t\tthis._translation.thaw();\n\t\tthis._translation = translation;\n\t\tthis._translation.freeze();\n\t}\n\n\t/**\n\t * Gets the scale of the model.\n\t * @returns {Vector3} scale\n\t */\n\tgetScale() {\n\t\treturn this._scale;\n\t}\n\n\t/**\n\t * Sets the scale of the model. It defaults to 0.001, since most models are in meters, not kilometers.\n\t * @param {Vector3 | number} scale\n\t */\n\tsetScale(scale) {\n\t\tthis._scale.thaw();\n\t\tif (typeof scale === 'number') {\n\t\t\tthis._scale.set(scale, scale, scale);\n\t\t}\n\t\telse {\n\t\t\tthis._scale.copy(scale);\n\t\t}\n\t\tthis._scale.freeze();\n\t\tThreeJsHelper.setScale(this.getThreeJsObjects()[0], this._scale);\n\t\tif (!isNaN(this._modelRadius)) {\n\t\t\tthis.__setRadius(Math.max(this._scale.x, this._scale.y, this._scale.z) * this._modelRadius);\n\t\t}\n\t\telse {\n\t\t\tthis.__setRadius(this.getEntity().getExtentsRadius());\n\t\t}\n\t}\n\n\t/**\n\t * Gets the rotation applied to the model. Defaults to the identity rotation.\n\t * @returns {Quaternion}\n\t */\n\tgetRotation() {\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Sets the rotation applied to the modeol.\n\t * @param {Quaternion} rotation\n\t */\n\tsetRotation(rotation) {\n\t\tthis._rotation.thaw();\n\t\tthis._rotation.copy(rotation);\n\t\tthis._rotation.freeze();\n\t}\n\n\t/**\n\t * Gets the url of the environment cubemap applied to the model during loading\n\t * @returns {string}\n\t */\n\tgetEnvironmentCubemapUrl() {\n\t\treturn this._environmentCubemapUrl;\n\t}\n\n\t/**\n\t * Sets the url of the environment cubemap applied to the model during loading\n\t * @param {string} url - the url is used by TextureLoader.loadCubeTexture and follows its rules for the $FACE variable.\n\t */\n\tsetEnvironmentCubemapUrl(url) {\n\t\tthis._environmentCubemapUrl = url;\n\t}\n\n\t/**\n\t * Gets the intensity multiplier applied to environment lighting\n\t * @returns {number}\n\t */\n\tgetEnvironmentIntensity() {\n\t\treturn this._environmentIntensity;\n\t}\n\n\t/**\n\t * Sets the intensity multiplier applied to environment lighting\n\t * @param {number} environmentIntensity\n\t */\n\tsetEnvironmentIntensity(environmentIntensity) {\n\t\tthis._environmentIntensity = environmentIntensity;\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[i], 'environmentIntensity', this._environmentIntensity);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the url of the cylindrical cubemap applied to the model during loading\n\t * @returns {string}\n\t */\n\tgetEnvironmentCylindricalUrl() {\n\t\treturn this._environmentCylindricalUrl;\n\t}\n\n\t/**\n\t * Sets the url of the cylindrical cubemap applied to the model during loading\n\t * @param {string} url - url of the image to use\n\t */\n\tsetEnvironmentCylindricalUrl(url) {\n\t\tthis._environmentCylindricalUrl = url;\n\t}\n\n\t/**\n\t * Sets the pixel radius interval over which the model is visible.\n\t * It will fade to nothing for 5% outside of these bounds.\n\t * The material must already have transparency enabled for it to work.\n\t * Defaults to [0, +infinity].\n\t * @param {Interval | undefined} interval\n\t */\n\tsetPixelRadiusVisibleInterval(interval) {\n\t\tif (interval !== undefined) {\n\t\t\tif (this._pixelRadiusVisibleInterval === undefined) {\n\t\t\t\tthis._pixelRadiusVisibleInterval = new Interval(interval.min, interval.max);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._pixelRadiusVisibleInterval.copy(interval);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._pixelRadiusVisibleInterval = undefined;\n\t\t\tfor (const material of this.getThreeJsMaterials()) {\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'alphaMultiplier', 1);\n\t\t\t}\n\t\t\tthis.getThreeJsObjects()[0].visible = true;\n\t\t}\n\t}\n\n\t/**\n\t * Sets whether or not the dynamic environment map is enabled.\n\t * @param {DynamicEnvironmentMapComponent} dynamicEnvironmentMapComponent\n\t */\n\tsetDynamicEnvironmentMapComponent(dynamicEnvironmentMapComponent) {\n\t\tthis._dynamicEnvironmentMapComponent = dynamicEnvironmentMapComponent;\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tconst material = this.getThreeJsMaterials()[i];\n\t\t\tif (material.uniforms['dynEnvTexture'] !== undefined) {\n\t\t\t\tThreeJsHelper.setDefine(material, 'dynEnvMap', true);\n\t\t\t\tThreeJsHelper.setUniformTexture(material, 'dynEnvTexture', this._dynamicEnvironmentMapComponent.getTexture());\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'dynEnvFaceSize', dynamicEnvironmentMapComponent.getFaceSize());\n\t\t\t}\n\t\t}\n\t\t// Disable the static environment cube map.\n\t\tif (this._environmentCubemap !== null) {\n\t\t\tthis._environmentCubemap.dispose();\n\t\t\tthis._environmentCubemap = null;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the flag that if true, uses compressed textures.\n\t * @returns {boolean}\n\t */\n\tgetUseCompressedTextures() {\n\t\treturn this._useCompressedTextures;\n\t}\n\n\t/**\n\t * Sets the flag that if true, uses compressed textures.\n\t * @param {boolean} useCompressedTextures\n\t */\n\tsetUseCompressedTextures(useCompressedTextures) {\n\t\tthis._useCompressedTextures = useCompressedTextures;\n\t}\n\n\t/**\n\t * Sets the mapping of file names to urls when loading GLTF references.\n\t * @param {Map<string, string>} urlReferenceMap;\n\t */\n\tsetURLReferenceMap(urlReferenceMap) {\n\t\tthis._urlReferenceMap.clear();\n\t\tfor (const entry of urlReferenceMap) {\n\t\t\tthis._urlReferenceMap.set(entry[0], entry[1]);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the Three.js animation clip of the given name. Returns null if the clip doesn't exist.\n\t * @param {string} name\n\t * @returns {THREE.AnimationClip}\n\t */\n\tgetAnimationClip(name) {\n\t\treturn this._threeJsAnimationClips.get(name) || null;\n\t}\n\n\t/**\n\t * Gets a material by name.\n\t * @param {string} name\n\t * @returns {THREE.ShaderMaterial | null}\n\t */\n\tgetMaterial(name) {\n\t\tconst materials = this.getThreeJsMaterials();\n\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\tif (materials[i].name === name) {\n\t\t\t\treturn materials[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Replaces a material with a new material.\n\t * @param {string} name\n\t * @param {THREE.ShaderMaterial} newMaterial\n\t */\n\tupdateMaterial(name, newMaterial) {\n\t\t// Find the material by name and replace it in the materials list.\n\t\tconst materials = this.getThreeJsMaterials();\n\t\tlet foundMaterial;\n\t\tfor (let i = 0; i < materials.length; i++) {\n\t\t\tconst material = materials[i];\n\t\t\tif (material.name === name) {\n\t\t\t\tfoundMaterial = material;\n\t\t\t\tmaterials.splice(i, 1);\n\t\t\t\tmaterials.push(newMaterial);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!foundMaterial) {\n\t\t\tthrow new Error(`No material with the name ${name} was found in ${this}.`);\n\t\t}\n\t\t// Replace the material in every object that has it.\n\t\tfor (let i = 0, l = this.getThreeJsObjects().length; i < l; i++) {\n\t\t\tconst object = this.getThreeJsObjects()[i];\n\t\t\tif (object instanceof THREE.Mesh) {\n\t\t\t\tif (object.material === foundMaterial) {\n\t\t\t\t\tobject.material = newMaterial;\n\t\t\t\t\tobject.material.name = name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the number of shadow entities. Can be used to enumerate the shadow entities.\n\t * @returns {number}\n\t */\n\tgetNumShadowEntities() {\n\t\treturn this._shadowEntities.length;\n\t}\n\n\t/**\n\t * Returns the shadow entity or its name at the index.\n\t * @param {number} index\n\t * @returns {string | undefined}\n\t */\n\tgetShadowEntity(index) {\n\t\treturn this._shadowEntities[index]?.getName();\n\t}\n\n\t/**\n\t * Sets the shadow entities. Each element can be either the name of an entity or an entity itself.\n\t * @param {string[]} shadowEntities\n\t */\n\tsetShadowEntities(shadowEntities) {\n\t\tthis._shadowEntities = [];\n\t\tfor (const shadowEntity of shadowEntities) {\n\t\t\tthis._shadowEntities.push(new EntityRef(this.getEntity().getScene(), shadowEntity));\n\t\t}\n\t\tconst shadowEntitiesEnabled = (shadowEntities.length > 0);\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tThreeJsHelper.setDefine(this.getThreeJsMaterials()[i], 'shadowEntities', shadowEntitiesEnabled);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the camera-dependent parts of the component.\n\t * @param {CameraComponent} camera\n\t * @override\n\t */\n\t__prepareForRender(camera) {\n\t\t// Make any objects hidden that should be hidden.\n\t\tfor (let i = 0, l = this._hiddenObjects.size; i < l; i++) {\n\t\t\tconst entry = this._hiddenObjects.getAt(i);\n\t\t\tif (entry.value === null) {\n\t\t\t\tentry.value = this.getThreeJsObjectByName(entry.key);\n\t\t\t}\n\t\t\tif (entry.value !== null) {\n\t\t\t\tentry.value.visible = false;\n\t\t\t}\n\t\t}\n\n\t\t// Set the alpha multiplier based on conditions.\n\t\tif (this._pixelRadiusVisibleInterval !== undefined) {\n\t\t\tconst pixelRadius = this.getEntity().getPixelSpaceExtentsRadius(camera);\n\t\t\tconst alphaMultiplier = MathUtils.clamp01(Math.min(\n\t\t\t\t1 + 2 * (pixelRadius - this._pixelRadiusVisibleInterval.min) / this._pixelRadiusVisibleInterval.min,\n\t\t\t\tisFinite(this._pixelRadiusVisibleInterval.max) ? (1 - 2 * (pixelRadius - this._pixelRadiusVisibleInterval.max) / this._pixelRadiusVisibleInterval.max) : 1));\n\t\t\tfor (const material of this.getThreeJsMaterials()) {\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'alphaMultiplier', alphaMultiplier);\n\t\t\t}\n\t\t\tif (alphaMultiplier === 0) {\n\t\t\t\tthis.getThreeJsObjects()[0].visible = false;\n\t\t\t}\n\t\t}\n\n\t\t// Apply the position to the ThreeJS object.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera, this._translation, true);\n\n\t\t// Apply the rotation and orientation to the ThreeJS object.\n\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity(), this._rotation);\n\n\t\t// Setup the regular uniforms.\n\t\tMaterialUtils.setUniforms(this.getThreeJsMaterials(), camera, this.getEntity(), this._shadowEntities, null, false);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\tconst engine = this.getEntity().getScene().getEngine();\n\n\t\tconst binary = this._url.startsWith('blob:') || this._url.endsWith('.glb');\n\t\ttry {\n\t\t\tconst download = await engine.getDownloader().download(this._url, binary);\n\n\t\t\t// If we're no longer loading or the download was canceled, do nothing.\n\t\t\tif (this.getLoadState() !== 'loading' || download.status === 'cancelled') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If the download failed, error.\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\tthrow new Error('Failed to load model component file \"' + download.url + '\": ' + download.errorMessage);\n\t\t\t}\n\t\t\t// If the download isn't the right format, error.\n\t\t\telse if (!download.actualUrl.endsWith('.gltf') && !download.actualUrl.endsWith('.glb') && !download.actualUrl.startsWith('blob:')) {\n\t\t\t\tthrow new Error('Unknown model format.');\n\t\t\t}\n\n\t\t\t// Create and setup the Three.js loading manager needed by the ThreeJsGLTFLoader.\n\t\t\tconst manager = new THREE.LoadingManager();\n\t\t\t// Use the standard texture loaders only if there are no replacement URLs for the references.\n\t\t\tif (this._urlReferenceMap.size === 0) {\n\t\t\t\tmanager.addHandler(/.$/, this._useCompressedTextures ? engine.getTextureLoaderCompressed() : engine.getTextureLoader());\n\t\t\t}\n\t\t\t// If there is a reference map, replace every reference in the GLTF with the mapped URL.\n\t\t\tmanager.setURLModifier((url) => {\n\t\t\t\tconst urlFileName = url.substring(url.lastIndexOf('/') + 1);\n\t\t\t\tif (this._urlReferenceMap.has(urlFileName)) {\n\t\t\t\t\treturn this._urlReferenceMap.get(urlFileName);\n\t\t\t\t}\n\t\t\t\treturn url;\n\t\t\t});\n\n\t\t\t// Load and parse the rest of the model.\n\t\t\tconst loader = new ThreeJsGLTFLoader(manager);\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tloader.parse(download.content, THREE.LoaderUtils.extractUrlBase(download.actualUrl), async (gltf) => {\n\t\t\t\t\t// Save the root for use below.\n\t\t\t\t\tconst root = gltf.scene;\n\n\t\t\t\t\t// Populate the Three.js objects and materials lists. Even if we're no longer loading, this makes it easier to clean.\n\t\t\t\t\tthis._populateThreeJsObjectsAndMaterials(gltf.scene);\n\n\t\t\t\t\t// If we're no longer loading clean up and return.\n\t\t\t\t\tif (this.getLoadState() !== 'loading') {\n\t\t\t\t\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Cleans up some of the extra objects.\n\t\t\t\t\tthis._clean();\n\n\t\t\t\t\t// Set the initial properties of the root object.\n\t\t\t\t\tThreeJsHelper.setupObject(this, root);\n\n\t\t\t\t\t// Set the scale of the model.\n\t\t\t\t\tThreeJsHelper.setScale(root, this._scale);\n\n\t\t\t\t\t// Set the radius based on the bounding box.\n\t\t\t\t\tconst boundingBox = new THREE.Box3().setFromObject(root);\n\t\t\t\t\tthis._modelRadius = Math.max(boundingBox.min.length(), boundingBox.max.length());\n\t\t\t\t\tthis.__setRadius(Math.max(this._scale.x, this._scale.y, this._scale.z) * this._modelRadius);\n\n\t\t\t\t\t// Save the animation clips.\n\t\t\t\t\tfor (let i = 0; i < gltf.animations.length; i++) {\n\t\t\t\t\t\tthis._threeJsAnimationClips.set(gltf.animations[i].name, gltf.animations[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Load the environment map if it does have a standard material. Dynamic has priority over static.\n\t\t\t\t\tif (this._dynamicEnvironmentMapComponent === null && this._environmentCubemap === null) {\n\t\t\t\t\t\t// Cubemap has priority over cylindrical\n\t\t\t\t\t\tif (this._environmentCubemapUrl !== '') {\n\t\t\t\t\t\t\tawait engine.getTextureLoader().loadCubeTexture(this._environmentCubemapUrl, true).then((cubeTexture) => {\n\t\t\t\t\t\t\t\tthis._environmentCubemap = engine.getTextureLoader().generateEnvMap(cubeTexture);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this._environmentCylindricalUrl !== '') {\n\t\t\t\t\t\t\tawait engine.getTextureLoader().loadTexture(this._environmentCylindricalUrl, true).then((texture) => {\n\t\t\t\t\t\t\t\tthis._environmentCubemap = engine.getTextureLoader().generateEnvMap(texture);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update the materials to be the Pioneer compatible materials.\n\t\t\t\t\tthis._updateMaterials();\n\n\t\t\t\t\t// If the config's gamma value changes, set the callback to update the model.\n\t\t\t\t\tthis.getEntity().getScene().getEngine().getConfig().addEventListener('gammaCorrection', this._onConfigChanged);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}, (error) => {\n\t\t\t\t\treject(new Error(`Error loading gltf: ${error}`));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tcatch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.message = `While loading model \"${this._url}\": ${error.message}`;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\t// Clear the hidden object references.\n\t\tfor (let i = 0, l = this._hiddenObjects.size; i < l; i++) {\n\t\t\tthis._hiddenObjects.getAt(i).value = null;\n\t\t}\n\t\t// Remove the gamma correction event listener.\n\t\tthis.getEntity().getScene().getEngine().getConfig().removeEventListener('gammaCorrection', this._onConfigChanged);\n\t\t// Clear the objects and materials.\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n\n\t/**\n\t * Populates the Three.js object list with all objects, including the children.\n\t * @param {THREE.Object3D} object\n\t * @private\n\t */\n\t_populateThreeJsObjectsAndMaterials(object) {\n\t\t// Add the object to the list.\n\t\tthis.getThreeJsObjects().push(object);\n\t\t// If the object's materials haven't already been added to the list, add them.\n\t\tif (object instanceof THREE.Mesh) {\n\t\t\t/** @type {THREE.ShaderMaterial | THREE.ShaderMaterial[]} */\n\t\t\tlet materials = object.material;\n\t\t\tif (!Array.isArray(materials)) {\n\t\t\t\tmaterials = [materials];\n\t\t\t}\n\t\t\tfor (const material of materials) {\n\t\t\t\tlet alreadyAdded = false;\n\t\t\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\t\t\tif (this.getThreeJsMaterials()[i] === material) {\n\t\t\t\t\t\talreadyAdded = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!alreadyAdded) {\n\t\t\t\t\tthis.getThreeJsMaterials().push(material);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Go through the children.\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tthis._populateThreeJsObjectsAndMaterials(object.children[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Clean up a number of objects that aren't needed.\n\t * @private\n\t */\n\t_clean() {\n\t\t// Remove lamps and hemis.\n\t\tconst removeRegex = /_(lamp|hemi)/i;\n\t\tfor (let i = 0; i < this.getThreeJsObjects().length; i++) {\n\t\t\tconst object = this.getThreeJsObjects()[i];\n\t\t\tif (object.name.match(removeRegex)) {\n\t\t\t\tif (object.parent) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\t\t\t\tthis.getThreeJsObjects().splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// Make invisible any object with a name starting with '_root' or having a material named 'transparent'.\n\t\t// Only remove its attributes so that it doesn't break things too much.\n\t\tfor (let i = 0, l = this.getThreeJsObjects().length; i < l; i++) {\n\t\t\tlet shouldMakeInvisible = false;\n\t\t\tconst object = this.getThreeJsObjects()[i];\n\t\t\tif (object instanceof THREE.Mesh && object.geometry instanceof THREE.BufferGeometry) {\n\t\t\t\tif (object.name.startsWith('_root')) {\n\t\t\t\t\tshouldMakeInvisible = true;\n\t\t\t\t}\n\t\t\t\tif (object instanceof THREE.Mesh && object.material instanceof THREE.Material && object.material.name === 'transparent') {\n\t\t\t\t\tshouldMakeInvisible = true;\n\t\t\t\t}\n\t\t\t\tif (shouldMakeInvisible) {\n\t\t\t\t\tobject.geometry.deleteAttribute('position');\n\t\t\t\t\tobject.geometry.deleteAttribute('normal');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Manage pioneer config changes\n\t * @private\n\t */\n\t_onConfigChanged() {\n\t\tthis._updateMaterials();\n\t}\n\n\t/**\n\t * Updates the existing object materials to be ones compatible with Pioneer. Creates tangents if necessary.\n\t * @private\n\t */\n\t_updateMaterials() {\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tconst oldMaterial = this.getThreeJsMaterials()[i];\n\t\t\tif (!(oldMaterial instanceof THREE.MeshStandardMaterial)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst newMaterial = this._getNewPioneerMaterial(oldMaterial);\n\t\t\tthis.getThreeJsMaterials()[i] = newMaterial;\n\n\t\t\t// Check if the new material requires a tangent attribute.\n\t\t\tlet needsTangents = false;\n\t\t\tif (newMaterial.defines['normalMap']) {\n\t\t\t\tneedsTangents = true;\n\t\t\t}\n\n\t\t\t// Go through each object and replace the materials, computing the tangents if necessary.\n\t\t\tfor (const object of this.getThreeJsObjects()) {\n\t\t\t\tif (object instanceof THREE.Mesh) {\n\t\t\t\t\tlet hasOldMaterial = false;\n\t\t\t\t\tif (Array.isArray(object.material)) {\n\t\t\t\t\t\tfor (let j = 0, k = object.material.length; j < k; j++) {\n\t\t\t\t\t\t\tif (object.material[j] === oldMaterial) {\n\t\t\t\t\t\t\t\tobject.material[j] = newMaterial;\n\t\t\t\t\t\t\t\thasOldMaterial = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.material === oldMaterial) {\n\t\t\t\t\t\tobject.material = newMaterial;\n\t\t\t\t\t\thasOldMaterial = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the object's geometry doesn't have a tangent attribute defined, create it manually from the positions and uvs.\n\t\t\t\t\tif (hasOldMaterial && needsTangents && object.geometry instanceof THREE.BufferGeometry && object.geometry.getAttribute('tangent') === undefined) {\n\t\t\t\t\t\tThreeJsHelper.computeTangents(object.geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\toldMaterial.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Use the Three.JS material as a basis to create a new Pioneer-compatible material.\n\t * @param {THREE.MeshStandardMaterial} material\n\t * @returns {THREE.ShaderMaterial}\n\t * @private\n\t */\n\t_getNewPioneerMaterial(material) {\n\t\tconst newMaterial = MaterialUtils.getPBR();\n\t\tnewMaterial.name = material.name;\n\t\tnewMaterial.transparent = material.transparent;\n\t\tnewMaterial.depthWrite = material.depthWrite;\n\t\tnewMaterial.side = material.side;\n\n\t\tif (material.map !== null) {\n\t\t\t// Retrieve KTX compressed format from if available\n\t\t\t// @ts-ignore\n\t\t\tconst ktxFormat = material.map.ktxFormat;\n\t\t\tif (ktxFormat !== undefined) {\n\t\t\t\tmaterial.map.format = ktxFormat;\n\t\t\t}\n\t\t\tnewMaterial.uniforms['colorTexture'].value = material.map;\n\t\t\tnewMaterial.defines['colorMap'] = true;\n\t\t}\n\n\t\tif (material.roughnessMap) {\n\t\t\tnewMaterial.uniforms['roughnessTexture'].value = material.roughnessMap;\n\t\t\tnewMaterial.defines['roughnessMap'] = true;\n\t\t}\n\n\t\tif (material.metalnessMap) {\n\t\t\tnewMaterial.uniforms['metalnessTexture'].value = material.metalnessMap;\n\t\t\tnewMaterial.defines['metalnessMap'] = true;\n\t\t}\n\n\t\tif (material.normalMap !== null) {\n\t\t\tnewMaterial.uniforms['normalTexture'].value = material.normalMap;\n\t\t\tnewMaterial.uniforms['normalScale'].value = material.normalScale;\n\t\t\tnewMaterial.defines['normalMap'] = true;\n\t\t}\n\n\t\t// Update the emissivity.\n\t\tnewMaterial.uniforms['emissiveColor'].value.copy(material.emissive);\n\t\tnewMaterial.uniforms['emissiveColor'].value.multiplyScalar(material.emissiveIntensity);\n\t\tif (material.emissiveMap !== null) {\n\t\t\tnewMaterial.uniforms['emissiveTexture'].value = material.emissiveMap;\n\t\t\tnewMaterial.defines['emissiveMap'] = true;\n\t\t}\n\n\t\tnewMaterial.uniforms['color'].value = material.color;\n\t\tnewMaterial.uniforms['roughness'].value = material.roughness;\n\t\tnewMaterial.uniforms['metalness'].value = material.metalness;\n\n\t\t// Apply environment map\n\t\tlet textureSideLength = 0;\n\t\tif (this._dynamicEnvironmentMapComponent !== null) {\n\t\t\tnewMaterial.defines['dynEnvMap'] = true;\n\t\t\tnewMaterial.uniforms['dynEnvTexture'].value = this._dynamicEnvironmentMapComponent.getTexture();\n\t\t\tnewMaterial.uniforms['dynEnvFaceSize'].value = this._dynamicEnvironmentMapComponent.getFaceSize();\n\t\t}\n\t\telse if (this._environmentCubemap !== null) {\n\t\t\tnewMaterial.defines['envMap'] = true;\n\t\t\tnewMaterial.defines['envIsCubeUV'] = true;\n\n\t\t\tnewMaterial.uniforms['envTexture'].value = this._environmentCubemap;\n\t\t\ttextureSideLength = this._environmentCubemap.image.height;\n\t\t\tnewMaterial.uniforms['maxMipLevel'].value = Math.log(textureSideLength) * Math.LOG2E;\n\t\t}\n\t\tnewMaterial.uniforms['environmentIntensity'].value = this._environmentIntensity;\n\n\t\t// Apply gamma correction.\n\t\tnewMaterial.uniforms['gammaCorrectionFactor'].value = this.getEntity().getScene().getEngine().getConfig().getValue('gammaCorrection');\n\n\t\t// Apply shadow entity define.\n\t\tif (this._shadowEntities.length > 0) {\n\t\t\tnewMaterial.defines['shadowEntities'] = true;\n\t\t}\n\n\t\t// Trigger the update in Three.js.\n\t\tnewMaterial.needsUpdate = true;\n\n\t\treturn newMaterial;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tOrbitalElements,\n\tSpriteParticles,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * @typedef LoadFunctionReturnValue\n * @property {OrbitalElements[]} orbitalElements\n * @property {Color[]} colors\n * @property {number[]} scales\n */\n\n/**\n * @callback LoadFunction\n * @returns {LoadFunctionReturnValue}\n */\n\n/**\n * A particle cloud with orbital parameters.\n */\nexport class OrbitalParticlesComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The size of each particle.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._scaleOfParticles = 1.0;\n\n\t\t/**\n\t\t * The function that loads the particle arrays.\n\t\t * @type {LoadFunction}\n\t\t * @private\n\t\t */\n\t\tthis._loadFunction = null;\n\n\t\t/**\n\t\t * The orbital elements of each particle.\n\t\t * @type {OrbitalElements[]}\n\t\t * @private\n\t\t */\n\t\tthis._orbitalElementsList = [];\n\n\t\t/**\n\t\t * The positions of the particles as an array.\n\t\t * @type {Float32Array}\n\t\t * @private\n\t\t */\n\t\tthis._offsetArray = new Float32Array(0);\n\n\t\t/**\n\t\t * The sprite particles object.\n\t\t * @type {SpriteParticles}\n\t\t * @private\n\t\t */\n\t\tthis._spriteParticles = null;\n\n\t\t// Set the radius of the component to zero. It will be set to the furthest out particle.\n\t\tthis.__setRadius(this.getEntity().getExtentsRadius() * 100);\n\t}\n\n\t/**\n\t * Gets the scale of the particles flowing out.\n\t * @returns {number}\n\t */\n\tgetScaleOfParticles() {\n\t\treturn this._scaleOfParticles;\n\t}\n\n\t/**\n\t * Sets the scale of the particles flowing out. Defaults to 1.0.\n\t * @param {number} scaleOfParticles\n\t */\n\tsetScaleOfParticles(scaleOfParticles) {\n\t\tthis._scaleOfParticles = scaleOfParticles;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets the function that loads the particle arrays. It should return a { orbitalElements: OrbitalElements[], colors: Color[], scales: number[] } object.\n\t * @param {LoadFunction} loadFunction\n\t */\n\tsetLoadFunction(loadFunction) {\n\t\tthis._loadFunction = loadFunction;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Updates the component.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Do nothing if there's no particles.\n\t\tif (this._spriteParticles === null) {\n\t\t\treturn;\n\t\t}\n\t\t// Update the particle positions from the orbital elements.\n\t\tconst position = Vector3.pool.get();\n\t\tconst velocity = Vector3.pool.get();\n\t\tconst time = this.getEntity().getScene().getEngine().getTime();\n\t\tfor (let i = 0, l = this._orbitalElementsList.length; i < l; i++) {\n\t\t\tthis._orbitalElementsList[i].project(position, velocity, time);\n\t\t\tthis._offsetArray[i * 3 + 0] = position.x;\n\t\t\tthis._offsetArray[i * 3 + 1] = position.y;\n\t\t\tthis._offsetArray[i * 3 + 2] = position.z;\n\t\t}\n\t\tVector3.pool.release(position);\n\t\tVector3.pool.release(velocity);\n\t\tthis._spriteParticles.setParticleOffsets(this._offsetArray);\n\t}\n\n\t/**\n\t * Prepares the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\tthis._spriteParticles.prepareForRender(camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Create the sprite particles.\n\t\tthis._spriteParticles = new SpriteParticles(this);\n\t\t// Push the object and material to the list.\n\t\tthis.getThreeJsMaterials().push(this._spriteParticles.getThreeJsMaterial());\n\t\tthis.getThreeJsObjects().push(this._spriteParticles.getThreeJsObject());\n\t\t// Initialize the particles.\n\t\tawait this._initializeParticles();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._spriteParticles = null;\n\t}\n\n\t/**\n\t * Initializes the particles. Resets them if they were already initialized.\n\t * @private\n\t */\n\tasync _initializeParticles() {\n\t\tif (this._loadFunction === null) {\n\t\t\treturn;\n\t\t}\n\t\t// Load the orbital elements.\n\t\tconst returnValue = await this._loadFunction();\n\t\tconst numParticles = returnValue.orbitalElements.length;\n\t\t// Set the orbital elements.\n\t\tthis._orbitalElementsList = [];\n\t\tlet maxParticleDistance = 0;\n\t\tfor (let i = 0, l = numParticles; i < l; i++) {\n\t\t\t// Copy them over so they can't be changed outside of the class.\n\t\t\tconst orbitalElements = new OrbitalElements();\n\t\t\torbitalElements.copy(returnValue.orbitalElements[i]);\n\t\t\tthis._orbitalElementsList.push(orbitalElements);\n\t\t\t// Set the orbit apoapsis as the furthest distance the particle will go.\n\t\t\tconst apoapsis = orbitalElements.semiMajorAxis * (1 + orbitalElements.eccentricity);\n\t\t\tmaxParticleDistance = Math.max(maxParticleDistance, apoapsis);\n\t\t}\n\t\t// Set the radius.\n\t\tthis.__setRadius(maxParticleDistance);\n\t\t// Initialize the offset array. It will be dynamic over time.\n\t\tthis._offsetArray = new Float32Array(numParticles * 3);\n\t\t// Create and set the color and scale arrays, since they are static over time.\n\t\tconst colorArray = new Float32Array(numParticles * 4);\n\t\tconst scaleArray = new Float32Array(numParticles * 1);\n\t\tfor (let i = 0, l = numParticles; i < l; i++) {\n\t\t\tcolorArray[i * 4 + 0] = returnValue.colors[i].r;\n\t\t\tcolorArray[i * 4 + 1] = returnValue.colors[i].g;\n\t\t\tcolorArray[i * 4 + 2] = returnValue.colors[i].b;\n\t\t\tcolorArray[i * 4 + 3] = returnValue.colors[i].a;\n\t\t\tscaleArray[i * 1 + 0] = returnValue.scales[i] * this._scaleOfParticles;\n\t\t}\n\t\tthis._spriteParticles.setParticleColors(colorArray);\n\t\tthis._spriteParticles.setParticleScales(scaleArray);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tMathUtils,\n\tQuaternion,\n\tShaderChunkLogDepth,\n\tShaderFix,\n\tTHREE,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * A bunch of sprite particles in a stream.\n */\nexport class ParticleSprayComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The length of the particle stream.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._length = 1;\n\n\t\t/**\n\t\t * The spread in degrees of the particle stream.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._spread = 30;\n\n\t\t/**\n\t\t * The number of particles.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numberOfParticles = 0;\n\n\t\t/**\n\t\t * The speed in units/sec of the particles flowing out.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._speedOfParticles = 0.1;\n\n\t\t/**\n\t\t * The size of each particle.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._sizeOfParticles = 0.1;\n\n\t\t/**\n\t\t * The flag that says whether the spacing between particles is random. If not, the particles are evenly spaced. Certain affects look better with even spacing.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._particleSpacingRandom = true;\n\n\t\t/**\n\t\t * The color of the particles.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._colorOfParticles = new Color();\n\t\tthis._colorOfParticles.freeze();\n\n\t\t/**\n\t\t * The offset of the particle origin. If relativeToEntityOrientation is true, this is also relative to the entity orientation.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis._originOffset = new Vector3();\n\t\tthis._originOffset.freeze();\n\n\t\t/**\n\t\t * The direction of the particle stream. If relativeToEntityOrientation is true, this is also relative to the entity orientation.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._direction = new Vector3();\n\t\tthis._direction.freeze();\n\n\t\t/**\n\t\t * The flag that says whether or not the offset origin and direction are relative to the entity orientation.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeToEntityOrientation = true;\n\n\t\t// Set the radius of the component.\n\t\tthis.__setRadius(this._length);\n\t}\n\n\t/**\n\t * Gets the length of the particle stream.\n\t * @returns {number}\n\t */\n\tgetLength() {\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * Sets the length of the particle stream. Defaults to 1.\n\t * @param {number} length\n\t */\n\tsetLength(length) {\n\t\tthis._length = length;\n\t\tthis.__setRadius(this._length);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'length', this._length);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'totalTime', this._length / this._speedOfParticles);\n\t}\n\n\t/**\n\t * Gets the spread in degrees of the particle stream.\n\t * @returns {number}\n\t */\n\tgetSpread() {\n\t\treturn this._spread;\n\t}\n\n\t/**\n\t * Sets the spread in degrees of the particle stream. Defaults to 30.\n\t * @param {number} spread\n\t */\n\tsetSpread(spread) {\n\t\tthis._spread = spread;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'spread', MathUtils.degToRad(this._spread));\n\t}\n\n\t/**\n\t * Gets the number of particles.\n\t * @returns {number}\n\t */\n\tgetNumberOfParticles() {\n\t\treturn this._numberOfParticles;\n\t}\n\n\t/**\n\t * Sets the number of particles. Defaults to 0.\n\t * @param {number} numberOfParticles\n\t */\n\tsetNumberOfParticles(numberOfParticles) {\n\t\tthis._numberOfParticles = numberOfParticles;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the speed in units/sec of the particles flowing out.\n\t * @returns {number}\n\t */\n\tgetSpeedOfParticles() {\n\t\treturn this._speedOfParticles;\n\t}\n\n\t/**\n\t * Sets the speed in km/sec of the particles flowing out. Defaults to 0.1.\n\t * @param {number} speedOfParticles\n\t */\n\tsetSpeedOfParticles(speedOfParticles) {\n\t\tthis._speedOfParticles = speedOfParticles;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'totalTime', this._length / this._speedOfParticles);\n\t}\n\n\t/**\n\t * Gets the size in km of the particles flowing out.\n\t * @returns {number}\n\t */\n\tgetSizeOfParticles() {\n\t\treturn this._sizeOfParticles;\n\t}\n\n\t/**\n\t * Sets the size in km of the particles flowing out. Defaults to 1.0.\n\t * @param {number} sizeOfParticles\n\t */\n\tsetSizeOfParticles(sizeOfParticles) {\n\t\tthis._sizeOfParticles = sizeOfParticles;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the flag that says whether the spacing between particles is random. If not, the particles are evenly spaced. Certain affects look better with even spacing.\n\t * @returns {boolean}\n\t */\n\tgetParticleSpacingRandom() {\n\t\treturn this._particleSpacingRandom;\n\t}\n\n\t/**\n\t * Sets the flag that says whether the spacing between particles is random. If not, the particles are evenly spaced. Certain affects look better with even spacing. Defaults to true.\n\t * @param {boolean} particleSpacingRandom\n\t */\n\tsetParticleSpacingRandom(particleSpacingRandom) {\n\t\tthis._particleSpacingRandom = particleSpacingRandom;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the color of the particles.\n\t * @return {Color}\n\t */\n\tgetColorOfParticles() {\n\t\treturn this._colorOfParticles;\n\t}\n\n\t/**\n\t * Sets the color of the particles. Defaults to white.\n\t * @param {Color} color\n\t */\n\tsetColorOfParticles(color) {\n\t\tthis._colorOfParticles.thaw();\n\t\tthis._colorOfParticles.copy(color);\n\t\tthis._colorOfParticles.freeze();\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'globalColor', this._colorOfParticles);\n\t}\n\n\t/**\n\t * Gets the offset of the particle origin. If relativeToEntityOrientation is true, this is also relative to the entity orientation.\n\t * @returns {Vector3}\n\t */\n\tgetOriginOffset() {\n\t\treturn this._originOffset;\n\t}\n\n\t/**\n\t * Sets the offset of the particle origin. If relativeToEntityOrientation is true, this is also relative to the entity orientation. Defaults to zero.\n\t * @param {Vector3} originOffset\n\t */\n\tsetOriginOffset(originOffset) {\n\t\tthis._originOffset.thaw();\n\t\tthis._originOffset.copy(originOffset);\n\t\tthis._originOffset.freeze();\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'originOffset', this._originOffset);\n\t}\n\n\t/**\n\t * Gets the direction of the particle stream. If relativeToEntityOrientation is true, this is also relative to the entity orientation.\n\t * @returns {Vector3}\n\t */\n\tgetDirection() {\n\t\treturn this._direction;\n\t}\n\n\t/**\n\t * Sets the direction of the particle stream. If relativeToEntityOrientation is true, this is also relative to the entity orientation. Defaults to the x-axis.\n\t * @param {Vector3} direction\n\t */\n\tsetDirection(direction) {\n\t\tthis._direction.thaw();\n\t\tthis._direction.normalize(direction);\n\t\tthis._direction.freeze();\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'direction', this._direction);\n\n\t\t// Get the perpendicular direction for orienting the particles.\n\t\tconst directionPerp = Vector3.pool.get();\n\t\tdirectionPerp.cross(this._direction, Vector3.XAxis);\n\t\tif (directionPerp.isZero()) {\n\t\t\tdirectionPerp.cross(this._direction, Vector3.YAxis);\n\t\t}\n\t\tdirectionPerp.normalize(directionPerp);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'directionPerp', directionPerp);\n\t\tVector3.pool.release(directionPerp);\n\t}\n\n\t/**\n\t * Gets the flag that says whether or not the offset origin and direction are relative to the entity orientation.\n\t * @returns {boolean}\n\t */\n\tgetRelativeToEntityOrientation() {\n\t\treturn this._relativeToEntityOrientation;\n\t}\n\n\t/**\n\t * Sets the flag that says whether or not the offset origin and direction are relative to the entity orientation. Defaults to true.\n\t * @param {boolean} relativeToEntityOrientation\n\t */\n\tsetRelativeToEntityOrientation(relativeToEntityOrientation) {\n\t\tthis._relativeToEntityOrientation = relativeToEntityOrientation;\n\t}\n\n\t/**\n\t * Prepares the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\tconst time = MathUtils.wrap(this.getEntity().getScene().getEngine().getTime(), 0, this._length / this._speedOfParticles);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'time', time);\n\n\t\tif (this._relativeToEntityOrientation) {\n\t\t\tconst originOffset = Vector3.pool.get();\n\t\t\tconst direction = Vector3.pool.get();\n\t\t\toriginOffset.rotate(this.getEntity().getOrientation(), this._originOffset);\n\t\t\tdirection.rotate(this.getEntity().getOrientation(), this._direction);\n\t\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'originOffset', originOffset);\n\t\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'direction', direction);\n\n\t\t\t// Get the perpendicular direction for orienting the particles.\n\t\t\tconst directionPerp = Vector3.pool.get();\n\t\t\tdirectionPerp.cross(direction, Vector3.XAxis);\n\t\t\tif (directionPerp.isZero()) {\n\t\t\t\tdirectionPerp.cross(direction, Vector3.YAxis);\n\t\t\t}\n\t\t\tdirectionPerp.normalize(directionPerp);\n\t\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'directionPerp', directionPerp);\n\t\t\tVector3.pool.release(directionPerp);\n\n\t\t\tVector3.pool.release(originOffset);\n\t\t\tVector3.pool.release(direction);\n\t\t}\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Setup the Three.js material.\n\t\tconst threeJsMaterial = new THREE.RawShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\tspread: new THREE.Uniform(0),\n\t\t\t\toriginOffset: new THREE.Uniform(new THREE.Vector3()),\n\t\t\t\tdirection: new THREE.Uniform(new THREE.Vector3()),\n\t\t\t\tdirectionPerp: new THREE.Uniform(new THREE.Vector3()),\n\t\t\t\tlength: new THREE.Uniform(0),\n\t\t\t\ttime: new THREE.Uniform(0),\n\t\t\t\ttotalTime: new THREE.Uniform(0),\n\t\t\t\tglobalColor: new THREE.Uniform(new THREE.Vector4(1, 1, 1, 1)),\n\n\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t},\n\t\t\tvertexShader: ParticleSprayComponent.vertexShader,\n\t\t\tfragmentShader: ParticleSprayComponent.fragmentShader,\n\t\t\ttransparent: true,\n\t\t\tdepthWrite: false,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\t\tShaderFix.fix(threeJsMaterial);\n\t\tthis.getThreeJsMaterials().push(threeJsMaterial);\n\n\t\t// Setup the attribute arrays.\n\t\tconst positionArray = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);\n\t\tconst paramsArray = new Float32Array(3 * this._numberOfParticles);\n\t\tconst colorArray = new Float32Array(4 * this._numberOfParticles);\n\t\tconst sizeArray = new Float32Array(1 * this._numberOfParticles);\n\t\tconst indexArray = new Uint16Array([0, 1, 2, 2, 3, 0]);\n\n\t\t// Setup the Three.js geometry.\n\t\tconst threeJsGeometry = new THREE.InstancedBufferGeometry();\n\t\tthreeJsGeometry.setAttribute('position', new THREE.BufferAttribute(positionArray, 2));\n\t\tthreeJsGeometry.setAttribute('params', new THREE.InstancedBufferAttribute(paramsArray, 3));\n\t\tthreeJsGeometry.setAttribute('color', new THREE.InstancedBufferAttribute(colorArray, 4));\n\t\tthreeJsGeometry.setAttribute('size', new THREE.InstancedBufferAttribute(sizeArray, 1));\n\t\tthreeJsGeometry.setIndex(new THREE.BufferAttribute(indexArray, 1));\n\t\tthreeJsGeometry.instanceCount = this._numberOfParticles;\n\n\t\t// Setup the Three.js object.\n\t\tconst threeJsObject = /** @type {THREE.Mesh<THREE.InstancedBufferGeometry, THREE.ShaderMaterial>} */ (ThreeJsHelper.createMeshObjectGivenGeometry(this, threeJsMaterial, threeJsGeometry));\n\t\tthis.getThreeJsObjects().push(threeJsObject);\n\n\t\t// Set its orientation to the identity. The origin offset and direction vectors will be rotated if they are relative ot the entity.\n\t\tThreeJsHelper.setOrientation(this.getThreeJsObjects()[0], Quaternion.Identity);\n\n\t\t// Initialize the particles.\n\t\tthis._initializeParticles();\n\n\t\t// Setup uniforms.\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'length', this._length);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'spread', MathUtils.degToRad(this._spread));\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'totalTime', this._length / this._speedOfParticles);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'originOffset', this._originOffset);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'direction', this._direction);\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'globalColor', this._colorOfParticles);\n\n\t\t// Get the perpendicular direction for orienting the particles.\n\t\tconst directionPerp = Vector3.pool.get();\n\t\tdirectionPerp.cross(this._direction, Vector3.XAxis);\n\t\tif (directionPerp.isZero()) {\n\t\t\tdirectionPerp.cross(this._direction, Vector3.YAxis);\n\t\t}\n\t\tdirectionPerp.normalize(directionPerp);\n\t\tThreeJsHelper.setUniformVector3(this.getThreeJsMaterials()[0], 'directionPerp', directionPerp);\n\t\tVector3.pool.release(directionPerp);\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Initializes the particles. Resets them if they were already initialized.\n\t * @private\n\t */\n\t_initializeParticles() {\n\t\t// Get the attributes and arrays.\n\t\tconst paramsAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['params'];\n\t\tconst colorAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['color'];\n\t\tconst sizeAttribute = /** @type THREE.Mesh */(this.getThreeJsObjects()[0]).geometry.attributes['size'];\n\t\tconst paramsArray = /** @type {Float32Array} */(paramsAttribute.array);\n\t\tconst colorArray = /** @type {Float32Array} */(colorAttribute.array);\n\t\tconst sizeArray = /** @type {Float32Array} */(sizeAttribute.array);\n\n\t\t// Setup the particles.\n\t\tfor (let i = 0, l = this._numberOfParticles; i < l; i++) {\n\t\t\tparamsArray[i * 3 + 0] = Math.random() * 2 - 1;\n\t\t\tparamsArray[i * 3 + 1] = Math.random() * 2 - 1;\n\t\t\tif (this._particleSpacingRandom) {\n\t\t\t\tparamsArray[i * 3 + 2] = Math.random();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparamsArray[i * 3 + 2] = i / this._numberOfParticles;\n\t\t\t}\n\t\t\tcolorArray[i * 4 + 0] = 1;\n\t\t\tcolorArray[i * 4 + 1] = 1;\n\t\t\tcolorArray[i * 4 + 2] = 1;\n\t\t\tcolorArray[i * 4 + 3] = 1;\n\t\t\tsizeArray[i * 1 + 0] = this._sizeOfParticles;\n\t\t}\n\n\t\t// Flag to update the attributes.\n\t\tparamsAttribute.needsUpdate = true;\n\t\tcolorAttribute.needsUpdate = true;\n\t\tsizeAttribute.needsUpdate = true;\n\t}\n}\n\nParticleSprayComponent.vertexShader = `\n\tattribute vec2 position;\n\tattribute vec3 params; // x, y are in plane made by direction if z were 1, z is 0 to 1 where the particle is in the total length at time = 0\n\tattribute vec4 color;\n\tattribute float size;\n\n\tuniform float spread;\n\tuniform vec3 originOffset; // in model-space\n\tuniform vec3 direction; // in model-space\n\tuniform vec3 directionPerp; // in model-space\n\tuniform float length;\n\tuniform float time;\n\tuniform float totalTime;\n\n\tuniform mat4 modelViewMatrix;\n\tuniform mat4 projectionMatrix;\n\n\tvarying vec2 vPosition;\n\tvarying vec4 vColor;\n\n\t${ShaderChunkLogDepth.VertexHead}\n\n\tvoid main() {\n\t\tfloat u = mod(params.z + time / totalTime, 1.0);\n\t\tfloat sinSpread = sin(spread);\n\t\tfloat uSpread = sinSpread > 0.0 ? u : (1.0 - u);\n\t\tfloat sizeAtU = size * max(0.1, uSpread);\n\t\tvec3 directionPerp2 = cross(direction, directionPerp);\n\t\tvec3 modelPosition = originOffset + (directionPerp * params.x * sinSpread * uSpread + directionPerp2 * params.y * sinSpread * uSpread + direction * u) * length;\n\t\tvec4 viewPosition = vec4(position.x * sizeAtU, 0, position.y * sizeAtU, 1) + modelViewMatrix * vec4(modelPosition, 1.0);\n\t\tgl_Position = projectionMatrix * viewPosition;\n\t\tgl_Position.w = viewPosition.y;\n\n\t\t// Set the varying variables.\n\t\tvPosition = position;\n\t\tvColor = color * (1.0 - u);\n\n\t\t${ShaderChunkLogDepth.Vertex}\n\t}`;\n\nParticleSprayComponent.fragmentShader = `\n\tprecision highp float;\n\n\tuniform vec4 globalColor;\n\n\tvarying vec2 vPosition;\n\tvarying vec4 vColor;\n\n\t${ShaderChunkLogDepth.FragmentHead}\n\n\tvoid main(void) {\n\t\t// Set the color to be a circle tinted by the color and globalColor.\n\t\tgl_FragColor = globalColor * vColor * max(0.0, 1.0 - dot(vPosition, vPosition));\n\n\t\t${ShaderChunkLogDepth.Fragment}\n\t}`;\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tComponentRef,\n\tEntity,\n\tEntityRef,\n\tMaterialUtils,\n\tMathUtils,\n\tQuaternion,\n\tShaderChunkLogDepth,\n\tSpheroidComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * Rings, such as for Saturn.\n */\nexport class RingsComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The url for the top texture.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._topTextureUrl = '';\n\n\t\t/**\n\t\t * The url for the bottom texture.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._bottomTextureUrl = '';\n\n\t\t/**\n\t\t * The inner radius.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._innerRadius = 0;\n\n\t\t/**\n\t\t * The outer radius.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._outerRadius = 0;\n\n\t\t/**\n\t\t * The distance at which the ring begins to fade (50% less than this number and it is completely gone).\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._fadeDistance = 0;\n\n\t\t/**\n\t\t * The entities uses for shadows. Derived from the shadow entity names.\n\t\t * @type {EntityRef[]}\n\t\t * @private\n\t\t */\n\t\tthis._shadowEntities = [];\n\n\t\t/**\n\t\t * A reference to the spheroid component.\n\t\t * @type {ComponentRef<SpheroidComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._spheroidComponentRef = new ComponentRef(this.getEntity().getScene());\n\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid');\n\t\tthis._spheroidComponentRef.setRefChangedCallback(this._spheroidRefChangedCallback.bind(this));\n\n\t\t// Bind the callbacks to this.\n\t\tthis._spheroidChangedCallback = this._spheroidChangedCallback.bind(this);\n\n\t\t// Lets the base component to check for valid orientation when determining whether this is visible.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the top texture url.\n\t * @returns {string}\n\t */\n\tgetTopTextureUrl() {\n\t\treturn this._topTextureUrl;\n\t}\n\n\t/**\n\t * Sets the top texture url.\n\t * @param {string} url\n\t */\n\tsetTopTextureUrl(url) {\n\t\tthis._topTextureUrl = url;\n\t\tThreeJsHelper.loadTextureIntoUniform(this, this.getThreeJsMaterials()[0], 'topTexture', this._topTextureUrl, true, false);\n\t}\n\n\t/**\n\t * Gets the bottom texture url.\n\t * @returns {string}\n\t */\n\tgetBottomTextureUrl() {\n\t\treturn this._bottomTextureUrl;\n\t}\n\n\t/**\n\t * Sets the bottom texture url.\n\t * @param {string} url\n\t */\n\tsetBottomTextureUrl(url) {\n\t\tthis._bottomTextureUrl = url;\n\t\tThreeJsHelper.loadTextureIntoUniform(this, this.getThreeJsMaterials()[0], 'bottomTexture', this._bottomTextureUrl, true, false);\n\t}\n\n\t/**\n\t * Gets the inner radius.\n\t * @returns {number}\n\t */\n\tgetInnerRadius() {\n\t\treturn this._innerRadius;\n\t}\n\n\t/**\n\t * Sets the inner radius.\n\t * @param {number} radius\n\t */\n\tsetInnerRadius(radius) {\n\t\tthis._innerRadius = radius;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'innerRadius', this._innerRadius);\n\t}\n\n\t/**\n\t * Gets the outer radius.\n\t * @returns {number}\n\t */\n\tgetOuterRadius() {\n\t\treturn this._outerRadius;\n\t}\n\n\t/**\n\t * Sets the outer radius.\n\t * @param {number} radius\n\t */\n\tsetOuterRadius(radius) {\n\t\tthis._outerRadius = radius;\n\t\tthis.__setRadius(this._outerRadius);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'outerRadius', this._outerRadius);\n\t}\n\n\t/**\n\t * Gets the top texture used for the rings. The alpha channel is used by the main material for shadows.\n\t * @returns {THREE.Texture}\n\t */\n\tgetTopTexture() {\n\t\tconst material = this.getThreeJsMaterials()[0];\n\t\tif (material !== undefined) {\n\t\t\treturn material.uniforms['topTexture'].value;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the distance at which the ring begins to fade (50% less than this number and it is completely gone).\n\t * @returns {number}\n\t */\n\tgetFadeDistance() {\n\t\treturn this._fadeDistance;\n\t}\n\n\t/**\n\t * Sets the distance at which the ring begins to fade (50% less than this number and it is completely gone). Defaults to 0.\n\t * @param {number} fadeDistance\n\t */\n\tsetFadeDistance(fadeDistance) {\n\t\tthis._fadeDistance = fadeDistance;\n\t}\n\n\t/**\n\t * Returns the shadow entity or its name at the index.\n\t * @param {number} index\n\t * @returns {string | undefined}\n\t */\n\tgetShadowEntity(index) {\n\t\treturn this._shadowEntities[index]?.getName();\n\t}\n\n\t/**\n\t * Sets the shadow entities. Each element can be either the name of an entity or an entity itself.\n\t * @param {string[]} shadowEntities\n\t */\n\tsetShadowEntities(shadowEntities) {\n\t\tthis._shadowEntities = [];\n\t\tfor (const shadowEntity of shadowEntities) {\n\t\t\tthis._shadowEntities.push(new EntityRef(this.getEntity().getScene(), shadowEntity));\n\t\t}\n\t\tconst shadowEntitiesEnabled = (shadowEntities.length > 0);\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tThreeJsHelper.setDefine(this.getThreeJsMaterials()[i], 'shadowEntities', shadowEntitiesEnabled);\n\t\t}\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @package\n\t */\n\t__destroy() {\n\t\t// Remove the spheroid changed callback.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tspheroidComponent.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Updates the camera-non-specific parts of the component.\n\t * @override\n\t * @package\n\t */\n\t__update() {\n\t\t// Update the spheroid component reference.\n\t\tthis._spheroidComponentRef.update();\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the alpha fade distance multiplier.\n\t\tif (this._fadeDistance > 0) {\n\t\t\tconst posInSpriteFrame = Vector3.pool.get();\n\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\tconst threeJsOrientation = this.getThreeJsObjects()[0].quaternion;\n\t\t\torientation.copyFromThreeJs(threeJsOrientation);\n\t\t\tposInSpriteFrame.rotateInverse(this.getEntity().getOrientation(), this.getEntity().getCameraSpacePosition(camera));\n\t\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'alphaFadeMultiplier',\n\t\t\t\tMathUtils.lerp(0, 1, MathUtils.clamp01(2 * (Math.abs(posInSpriteFrame.z) / this._fadeDistance - 1) + 1)));\n\t\t\tQuaternion.pool.release(orientation);\n\t\t\tVector3.pool.release(posInSpriteFrame);\n\t\t}\n\n\t\t// Set the lightPosition and lightColor uniform.\n\t\tMaterialUtils.setLightSourceUniforms(this.getThreeJsMaterials(), this.getEntity(), camera);\n\n\t\t// Setup the regular uniforms.\n\t\tMaterialUtils.setUniforms(this.getThreeJsMaterials(), camera, this.getEntity(), this._shadowEntities, null, false);\n\n\t\t// Set the orientation to the entity's orientation.\n\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Load the textures.\n\t\tconst topPromise = ThreeJsHelper.loadTexture(this, this._topTextureUrl, true, false);\n\t\tconst bottomPromise = ThreeJsHelper.loadTexture(this, this._bottomTextureUrl, true, false);\n\n\t\tconst [topTexture, bottomTexture] = await Promise.all([topPromise, bottomPromise]);\n\n\t\t// Check if the component has since been destroyed.\n\t\tif (this.isDestroyed()) {\n\t\t\ttopTexture.dispose();\n\t\t\tbottomTexture.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// Create the material.\n\t\tconst material = new THREE.ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\tambientLightColor: new THREE.Uniform(new THREE.Color()),\n\t\t\t\tlightPositions: new THREE.Uniform([new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0)]),\n\t\t\t\tlightColors: new THREE.Uniform([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0)]),\n\t\t\t\tlightRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\tnumLights: new THREE.Uniform(0),\n\n\t\t\t\tentityPos: new THREE.Uniform(new THREE.Vector3()),\n\t\t\t\tinnerRadius: new THREE.Uniform(this._innerRadius),\n\t\t\t\touterRadius: new THREE.Uniform(this._outerRadius),\n\t\t\t\ttopTexture: new THREE.Uniform(topTexture),\n\t\t\t\tbottomTexture: new THREE.Uniform(bottomTexture),\n\t\t\t\talphaFadeMultiplier: new THREE.Uniform(1),\n\t\t\t\tspheroidEquatorialRadius: new THREE.Uniform(0),\n\t\t\t\tspheroidPolarRadius: new THREE.Uniform(0),\n\n\t\t\t\t// Shadow Entities\n\t\t\t\tnumShadowEntities: new THREE.Uniform(0),\n\t\t\t\tshadowEntityPositions: new THREE.Uniform([new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),\n\t\t\t\tshadowEntityRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\tshadowEntitySunsetIntensity: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\tshadowEntitySunsetColors: new THREE.Uniform([new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),\n\n\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t},\n\t\t\tvertexShader: RingsComponent.vertexShader,\n\t\t\tfragmentShader: RingsComponent.fragmentShader,\n\t\t\ttransparent: true,\n\t\t\tdepthWrite: false,\n\t\t\tblending: THREE.NormalBlending,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\t\tThreeJsHelper.setupLogDepthBuffering(material);\n\t\tThreeJsHelper.setDefine(material, 'shadowEntities', this._shadowEntities.length > 0);\n\t\tthis.getThreeJsMaterials().push(material);\n\n\t\tconst object = ThreeJsHelper.createMeshObject(this, material, [\n\t\t\t{ name: 'position', dimensions: 3 },\n\t\t\t{ name: 'normal', dimensions: 3 }], false);\n\n\t\tconst numSegments = 10;\n\t\tconst positions = new Float32Array(3 * numSegments * numSegments);\n\t\tconst normals = new Float32Array(3 * numSegments * numSegments);\n\t\tconst indices = new Uint16Array(6 * (numSegments - 1) * (numSegments - 1));\n\t\tfor (let j = 0; j < numSegments; j++) {\n\t\t\tfor (let i = 0; i < numSegments; i++) {\n\t\t\t\tconst vertexIndex = i + j * numSegments;\n\t\t\t\tpositions[vertexIndex * 3 + 0] = (i / (numSegments - 1)) * 2.0 - 1.0;\n\t\t\t\tpositions[vertexIndex * 3 + 1] = (j / (numSegments - 1)) * 2.0 - 1.0;\n\t\t\t\tpositions[vertexIndex * 3 + 2] = 0.0;\n\t\t\t\tnormals[vertexIndex * 3 + 0] = 0.0;\n\t\t\t\tnormals[vertexIndex * 3 + 1] = 0.0;\n\t\t\t\tnormals[vertexIndex * 3 + 2] = 1.0;\n\t\t\t\tif (i + 1 < numSegments && j + 1 < numSegments) {\n\t\t\t\t\tindices[(i + j * (numSegments - 1)) * 6 + 0] = (i + 0) + (j + 0) * numSegments;\n\t\t\t\t\tindices[(i + j * (numSegments - 1)) * 6 + 1] = (i + 0) + (j + 1) * numSegments;\n\t\t\t\t\tindices[(i + j * (numSegments - 1)) * 6 + 2] = (i + 1) + (j + 0) * numSegments;\n\t\t\t\t\tindices[(i + j * (numSegments - 1)) * 6 + 3] = (i + 1) + (j + 0) * numSegments;\n\t\t\t\t\tindices[(i + j * (numSegments - 1)) * 6 + 4] = (i + 0) + (j + 1) * numSegments;\n\t\t\t\t\tindices[(i + j * (numSegments - 1)) * 6 + 5] = (i + 1) + (j + 1) * numSegments;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tThreeJsHelper.setVertices(object.geometry, 'position', positions);\n\t\tThreeJsHelper.setVertices(object.geometry, 'normal', normals);\n\t\tThreeJsHelper.setIndices(object.geometry, indices);\n\t\tobject.material = material;\n\t\tthis.getThreeJsObjects().push(object);\n\n\t\t// Update from the spheroid properties.\n\t\tthis._spheroidChangedCallback();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Callback called when the spheroid reference is found or lost.\n\t * @param {SpheroidComponent} oldRef\n\t * @param {SpheroidComponent} newRef\n\t * @private\n\t */\n\t_spheroidRefChangedCallback(oldRef, newRef) {\n\t\tif (oldRef !== null) {\n\t\t\toldRef.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tif (newRef !== null) {\n\t\t\tnewRef.addChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tthis._spheroidChangedCallback();\n\t}\n\n\t/**\n\t * Callback to be called when the spheroid component changed.\n\t * @private\n\t */\n\t_spheroidChangedCallback() {\n\t\t// Set the radii uniforms.\n\t\tconst material = this.getThreeJsMaterials()[0];\n\t\tif (material !== null) {\n\t\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\t\tif (spheroidComponent !== null) {\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'spheroidEquatorialRadius', spheroidComponent.getEquatorialRadius());\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'spheroidPolarRadius', spheroidComponent.getPolarRadius());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'spheroidEquatorialRadius', 0);\n\t\t\t\tThreeJsHelper.setUniformNumber(material, 'spheroidPolarRadius', 0);\n\t\t\t}\n\t\t}\n\t}\n}\n\nRingsComponent.vertexShader = `\n\tuniform float outerRadius;\n\n\tvarying vec3 localPosition;\n\tvarying vec3 cameraSpacePosition;\n\tvarying vec3 modelNormal;\n\n\t${ShaderChunkLogDepth.VertexHead}\n\n\tvoid main() {\n\t\tlocalPosition = position * outerRadius;\n\t\tcameraSpacePosition = (modelMatrix * vec4(localPosition, 1.)).xyz;\n\t\tmodelNormal = (modelMatrix * vec4(normal, 0.)).xyz;\n\t\tvec4 viewPosition = viewMatrix * vec4(cameraSpacePosition, 1.);\n\t\tgl_Position = projectionMatrix * viewPosition;\n\n\t\t${ShaderChunkLogDepth.Vertex}\n\t}`;\n\nRingsComponent.fragmentShader = `\n\tprecision highp float;\n\n\t#ifndef saturate\n\t\t#define saturate(a) clamp(a, 0.0, 1.0)\n\t#endif\n\n\t// Lights\n\tuniform vec3 ambientLightColor;\n\tuniform vec3 lightPositions[5];\n\tuniform vec3 lightColors[5];\n\tuniform float lightRadii[5];\n\tuniform int numLights;\n\n\tuniform float innerRadius;\n\tuniform float outerRadius;\n\tuniform sampler2D topTexture;\n\tuniform sampler2D bottomTexture;\n\tuniform float alphaFadeMultiplier;\n\tuniform float spheroidEquatorialRadius;\n\tuniform float spheroidPolarRadius;\n\tuniform vec3 entityPos;\n\n\t// Shadow Entities.\n\t#ifdef shadowEntities\n\t\tuniform int numShadowEntities;\n\t\tuniform vec3 shadowEntityPositions[5];\n\t\tuniform float shadowEntityRadii[5];\n\t\tuniform float shadowEntitySunsetIntensity[5];\n\t\tuniform vec3 shadowEntitySunsetColors[5];\n\t#endif\n\n\t// The varying attributes.\n\tvarying vec3 localPosition;\n\tvarying vec3 cameraSpacePosition;\n\tvarying vec3 modelNormal;\n\n\t${ShaderChunkLogDepth.FragmentHead}\n\n\tfloat spheroidShadow(vec3 lightDir, float lightCosAngle, float spheroidScaling, vec3 normal, vec3 ringPos) {\n\t\tvec3 sunDirScaled = normalize(lightDir - (spheroidScaling - 1.0) * lightCosAngle * normal);\n\t\tfloat pDotLScaled = dot(ringPos, sunDirScaled);\n\t\tif(dot(ringPos, ringPos) - pDotLScaled * pDotLScaled < spheroidEquatorialRadius * spheroidEquatorialRadius && pDotLScaled > 0.0) {\n\t\t\treturn 0.0;\n\t\t}\n\t\telse {\n\t\t\treturn 1.0;\n\t\t}\n\t}\n\n\t#ifdef shadowEntities\n\t\tvec3 applyRayleighScattering(vec3 color, float amount) {\n\t\t\tfloat value = (color.r + color.g + color.b);\n\t\t\tif (value > 0.0) {\n\t\t\t\tfloat rFactor = 1.0; // 6.3^-4 / 6.3^-4\n\t\t\t\tfloat gFactor = 1.602; // 5.6^-4 / 6.3^-4\n\t\t\t\tfloat bFactor = 3.228; // 4.7^-4 / 6.3^-4\n\t\t\t\tcolor.r *= pow(rFactor, -amount);\n\t\t\t\tcolor.g *= pow(gFactor, -amount);\n\t\t\t\tcolor.b *= pow(bFactor, -amount);\n\t\t\t\tcolor = value * color / (color.r + color.g + color.b);\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tvec3 getLightColorFromShadowEntities(vec3 lightColor, vec3 lightDir, vec3 lightPosition, float lightRadius, vec3 normal) {\n\t\t\tvec3 color = lightColor;\n\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\tif (i >= numShadowEntities) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvec3 origin = cameraSpacePosition - shadowEntityPositions[i];\n\t\t\t\tvec3 axis = normalize(shadowEntityPositions[i] - lightPosition);\n\t\t\t\tfloat sd = dot(origin, axis);\n\t\t\t\tif (sd > 0.0) {\n\t\t\t\t\tfloat e = length(origin - sd * axis);\n\t\t\t\t\tfloat ld = dot(cameraSpacePosition - lightPosition, axis);\n\t\t\t\t\tfloat lr = lightRadius;\n\t\t\t\t\tfloat sr = shadowEntityRadii[i];\n\t\t\t\t\tfloat e0 = (ld * sr - sd * lr) / (ld - sd);\n\t\t\t\t\tfloat e1 = (ld * sr + sd * lr) / (ld - sd);\n\t\t\t\t\tfloat lightLevel = 0.0;\n\t\t\t\t\tif (e1 < 0.0 || sd < 0.0) { // light in front of shadow entity\n\t\t\t\t\t\tlightLevel = 1.0;\n\t\t\t\t\t}\n\t\t\t\t\telse if (e0 < e1) {\n\t\t\t\t\t\te0 /= max(1.0, shadowEntitySunsetIntensity[i] * 2.0);\n\t\t\t\t\t\tlightLevel = (e - e0) / (e1 - e0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlightLevel = e < e0 ? 0.0 : 1.0; // 0 radius light.\n\t\t\t\t\t}\n\t\t\t\t\tcolor = saturate(lightLevel) * applyRayleighScattering(color, saturate(1.5 - lightLevel) * saturate(shadowEntitySunsetIntensity[i]));\n\t\t\t\t}\n}\n\t\t\treturn color;\n\t\t}\n\t#endif\n\n\tvoid main(void) {\n\t\tfloat spheroidScaling = spheroidEquatorialRadius / spheroidPolarRadius;\n\t\tvec3 positionDir = normalize(cameraSpacePosition);\n\t\tvec3 ringPos = cameraSpacePosition - entityPos;\n\t\tvec3 normal = normalize(modelNormal);\n\t\tfloat cameraCosAngle = -dot(positionDir, normal);\n\n\t\t// Calculate the UVs.\n\t\tvec2 uv;\n\t\tuv.x = (length(localPosition) - innerRadius) / (outerRadius - innerRadius);\n\t\tif (uv.x < 0.0 || uv.x > 1.0) {\n\t\t\tgl_FragColor = vec4(0, 0, 0, 0);\n\t\t\treturn;\n\t\t}\n\t\tuv.y = 0.0;\n\n\t\t// Get the pixels at those uvs.\n\t\tvec4 topPixel = texture2D(topTexture, uv);\n\t\tvec4 bottomPixel = texture2D(bottomTexture, uv);\n\n\t\t// Get the initial diffuse light.\n\t\tvec3 diffuseLight = ambientLightColor;\n\t\t\n\t\t// For each light,\n\t\tfor (int i = 0; i < 5; i++) {\n\t\t\tif (i >= numLights) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvec3 lightDir = normalize(cameraSpacePosition - lightPositions[i]);\n\t\t\tfloat lightCosAngle = -dot(lightDir, normal);\n\n\t\t\tvec3 incomingLight = lightColors[i];\n\n\t\t\t#ifdef shadowEntities\n\t\t\t\tincomingLight = getLightColorFromShadowEntities(incomingLight, lightDir, lightPositions[i], lightRadii[i], normal);\n\t\t\t#endif\n\n\t\t\tfloat cameraDirDotLight = dot(positionDir, lightDir);\n\t\t\tfloat bottomTopRatio = (1.0 + 0.2 * cameraDirDotLight) * sign(cameraCosAngle) * lightCosAngle;\n\t\t\tfloat shadow = spheroidShadow(lightDir, lightCosAngle, spheroidScaling, normal, ringPos);\n\t\t\tvec3 bottomColor = saturate(incomingLight * (1.0 - bottomTopRatio) * shadow);\n\t\t\tvec3 topColor = 2.0 * saturate(incomingLight * bottomTopRatio * shadow);\n\n\t\t\tvec3 color = mix(bottomPixel.rgb * bottomColor, topPixel.rgb * topColor, bottomTopRatio);\n\t\t\tgl_FragColor.rgb += color;\n\t\t}\n\n\t\tgl_FragColor.a = topPixel.a;\n\t\tgl_FragColor.a *= alphaFadeMultiplier;\n\n\t\t${ShaderChunkLogDepth.Fragment}\n\t}`;\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tEntity,\n\tLatLonAlt,\n\tMaterialUtils,\n\tMathUtils,\n\tTHREE,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/** The skybox component. */\nexport class SkyboxComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The number of latitudinal lines. The longitudinal lines will be double it.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numLatVerts = 20;\n\n\t\t/**\n\t\t * The texture URL.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._textureUrl = '';\n\n\t\t// Set the radius to the whole universe.\n\t\tthis.__setRadius(1e24);\n\n\t\t// It uses the orientatin of the entity.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the texture url.\n\t * @returns {string}\n\t */\n\tgetTextureUrl() {\n\t\treturn this._textureUrl;\n\t}\n\n\t/**\n\t * Sets the texture url.\n\t * @param {string} url\n\t */\n\tsetTextureUrl(url) {\n\t\tthis._textureUrl = url;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the orientation to the entity's orientation.\n\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Load the texture.\n\t\tconst texture = await ThreeJsHelper.loadTexture(this, this._textureUrl, false, false);\n\n\t\t// Check if the component has since stopped loading.\n\t\tif (this.getLoadState() !== 'loading') {\n\t\t\ttexture.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// Create Three.js material.\n\t\tconst material = MaterialUtils.get();\n\t\tthis.getThreeJsMaterials().push(material);\n\t\tmaterial.defines['colorMapEmmissive'] = true;\n\t\tmaterial.needsUpdate = true;\n\t\tmaterial.uniforms['colorTexture'].value = texture;\n\n\t\t// Create the Three.js object.\n\t\tconst object = ThreeJsHelper.createMeshObject(this, material, [{ name: 'position', dimensions: 3 }, { name: 'uv', dimensions: 2 }], false);\n\t\tthis.getThreeJsObjects().push(object);\n\n\t\t// Make it used in the dynamic environment map.\n\t\tThreeJsHelper.useInDynEnvMap(object, true);\n\n\t\t// Setup the geometry.\n\t\tconst latStep = MathUtils.pi / (this._numLatVerts - 1);\n\t\tconst lonStep = MathUtils.pi / this._numLatVerts;\n\t\tconst numVerts = (this._numLatVerts * 2 + 1) * this._numLatVerts;\n\n\t\tconst meshPositions = new Float32Array(numVerts * 3);\n\t\tconst meshUVs = new Float32Array(numVerts * 2);\n\t\tconst meshIndices = new Uint16Array(this._numLatVerts * (this._numLatVerts - 1) * 12);\n\n\t\tconst xyz = Vector3.pool.get();\n\t\tconst lla = LatLonAlt.pool.get();\n\t\tfor (let latI = 0; latI < this._numLatVerts; latI++) {\n\t\t\tfor (let lonI = 0; lonI < this._numLatVerts * 2 + 1; lonI++) {\n\t\t\t\t// Calculate the lla.\n\t\t\t\tlla.lat = latI * latStep - MathUtils.halfPi;\n\t\t\t\tlla.lon = lonI * lonStep - MathUtils.pi;\n\t\t\t\tlla.alt = 0;\n\n\t\t\t\t// Calculate the xyz from the lla.\n\t\t\t\txyz.x = 5e23 * Math.cos(lla.lat) * Math.cos(lla.lon);\n\t\t\t\txyz.y = 5e23 * Math.cos(lla.lat) * Math.sin(lla.lon);\n\t\t\t\txyz.z = 5e23 * Math.sin(lla.lat);\n\n\t\t\t\tconst vertexI = latI * (this._numLatVerts * 2 + 1) + lonI;\n\t\t\t\tmeshPositions[vertexI * 3 + 0] = xyz.x;\n\t\t\t\tmeshPositions[vertexI * 3 + 1] = xyz.y;\n\t\t\t\tmeshPositions[vertexI * 3 + 2] = xyz.z;\n\t\t\t\tmeshUVs[vertexI * 2 + 0] = 0.5 - lla.lon / MathUtils.twoPi;\n\t\t\t\tmeshUVs[vertexI * 2 + 1] = 0.5 - lla.lat / MathUtils.pi;\n\n\t\t\t\tconst triangleI = latI * this._numLatVerts * 2 + lonI;\n\t\t\t\tif (latI < this._numLatVerts - 1 && lonI < this._numLatVerts * 2) {\n\t\t\t\t\tmeshIndices[triangleI * 6 + 0] = (this._numLatVerts * 2 + 1) * (latI + 0) + (lonI + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = (this._numLatVerts * 2 + 1) * (latI + 1) + (lonI + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = (this._numLatVerts * 2 + 1) * (latI + 1) + (lonI + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 3] = (this._numLatVerts * 2 + 1) * (latI + 0) + (lonI + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = (this._numLatVerts * 2 + 1) * (latI + 1) + (lonI + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = (this._numLatVerts * 2 + 1) * (latI + 0) + (lonI + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tLatLonAlt.pool.release(lla);\n\t\tVector3.pool.release(xyz);\n\t\tconst geometry = /** @type {THREE.Mesh} */(this.getThreeJsObjects()[0]).geometry;\n\t\tThreeJsHelper.setVertices(geometry, 'position', meshPositions);\n\t\tThreeJsHelper.setVertices(geometry, 'uv', meshUVs);\n\t\tThreeJsHelper.setIndices(geometry, meshIndices);\n\t}\n\n\t/**\n\t * Unloads the resources.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tAER,\n\tBaseComponent,\n\tEntity,\n\tFastSet,\n\tGeometry,\n\tLatLonAlt,\n\tMathUtils,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * The spheroid component.\n */\nexport class SpheroidComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The equatorial radius.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._equatorialRadius = 1;\n\n\t\t/**\n\t\t  * The polar radius.\n\t\t  * @type {number}\n\t\t  * @private\n\t\t  */\n\t\tthis._polarRadius = 1;\n\n\t\t/**\n\t\t * The flag that if true is planetographic, otherwise is planetocentric.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._planetographic = false;\n\n\t\t/**\n\t\t * The flag that determines if the changedCallbacks need to be called on the next update.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._changed = true;\n\n\t\t/**\n\t\t * A set of callbacks to call when the spheroid properties change.\n\t\t * @type {FastSet<() => any>}\n\t\t * @private\n\t\t */\n\t\tthis._changedCallbacks = new FastSet();\n\t}\n\n\t/**\n\t * Gets the equatorial radius.\n\t * @returns {number}\n\t */\n\tgetEquatorialRadius() {\n\t\treturn this._equatorialRadius;\n\t}\n\n\t/**\n\t * Sets the equatorial radius.\n\t * @param {number} equatorialRadius\n\t */\n\tsetEquatorialRadius(equatorialRadius) {\n\t\tthis._equatorialRadius = equatorialRadius;\n\t\tthis._changed = true;\n\t}\n\n\t/**\n\t * Gets the polar radius.\n\t * @returns {number}\n\t */\n\tgetPolarRadius() {\n\t\treturn this._polarRadius;\n\t}\n\n\t/**\n\t * Sets the polar radius.\n\t * @param {number} polarRadius\n\t */\n\tsetPolarRadius(polarRadius) {\n\t\tthis._polarRadius = polarRadius;\n\t\tthis._changed = true;\n\t}\n\n\t/**\n\t * Gets the flag that if true is planetographic, otherwise is planetocentric.\n\t * @returns {boolean}\n\t */\n\tisPlanetographic() {\n\t\treturn this._planetographic;\n\t}\n\n\t/**\n\t * Sets flag that if true is planetographic, otherwise is planetocentric. Defaults to true.\n\t * @param {boolean} planetographic\n\t */\n\tsetPlanetographic(planetographic) {\n\t\tthis._planetographic = planetographic;\n\t\tthis._changed = true;\n\t}\n\n\t/**\n\t * Adds a callback to be called when this changes.\n\t * @param {() => any} changedCallback\n\t */\n\taddChangedCallback(changedCallback) {\n\t\tthis._changedCallbacks.add(changedCallback);\n\t}\n\n\t/**\n\t * Removes a callback to be called when this changes.\n\t * @param {() => any} changedCallback\n\t */\n\tremoveChangedCallback(changedCallback) {\n\t\tthis._changedCallbacks.delete(changedCallback);\n\t}\n\n\t/**\n\t * Updates the component.\n\t * @override\n\t * @package\n\t */\n\t__update() {\n\t\t// If one of the properties have changed, call the callbacks to notify other components or controllers.\n\t\tif (this._changed) {\n\t\t\tfor (let i = 0, l = this._changedCallbacks.size; i < l; i++) {\n\t\t\t\tthis._changedCallbacks.getAt(i)();\n\t\t\t}\n\t\t\tthis._changed = false;\n\t\t}\n\t}\n\n\t/**\n\t * Takes an LLA and sets out to the equivalent XYZ.\n\t * @param {Vector3} out - the XYZ vector to be set\n\t * @param {LatLonAlt} lla - the LLA vector to convert\n\t */\n\txyzFromLLA(out, lla) {\n\t\tconst cosLat = Math.cos(lla.lat);\n\t\tconst sinLat = Math.sin(lla.lat);\n\t\tif (this._planetographic) {\n\t\t\tconst eSq = 1.0 - (this._polarRadius * this._polarRadius) / (this._equatorialRadius * this._equatorialRadius);\n\t\t\tconst radiusOfCurvature = this._equatorialRadius / Math.sqrt(1.0 - eSq * sinLat * sinLat);\n\t\t\tout.x = (radiusOfCurvature + lla.alt) * cosLat * Math.cos(lla.lon);\n\t\t\tout.y = (radiusOfCurvature + lla.alt) * cosLat * Math.sin(lla.lon);\n\t\t\tout.z = ((1.0 - eSq) * radiusOfCurvature + lla.alt) * sinLat;\n\t\t}\n\t\telse {\n\t\t\tconst a = this._equatorialRadius;\n\t\t\tconst b = this._polarRadius;\n\t\t\tconst radius = a * b / Math.sqrt(b * b * cosLat * cosLat + a * a * sinLat * sinLat);\n\t\t\tout.x = (radius + lla.alt) * cosLat * Math.cos(lla.lon);\n\t\t\tout.y = (radius + lla.alt) * cosLat * Math.sin(lla.lon);\n\t\t\tout.z = (radius + lla.alt) * sinLat;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the radius at the given XYZ.\n\t * @param {Vector3} xyz - the xyz vector to use\n\t * @param {number} [numIterations] - the number of iterations to use. Defaults to 5.\n\t * @returns {number}\n\t */\n\tradiusFromXYZ(xyz, numIterations = 5) {\n\t\tif (this._planetographic) {\n\t\t\t// Using http://mathforum.org/library/drmath/view/51834.html as a reference. The standard algorithm from the Astronomical Almanac.\n\t\t\tconst r = xyz.magnitudeXY();\n\t\t\tconst eSq = 1.0 - (this._polarRadius * this._polarRadius) / (this._equatorialRadius * this._equatorialRadius);\n\t\t\tlet lat = Math.atan(xyz.z / ((1.0 - eSq) * r));\n\t\t\tlet radius = 0;\n\t\t\tfor (let i = 0; i < numIterations; i++) {\n\t\t\t\tconst sinLat = Math.sin(lat);\n\t\t\t\tradius = this._equatorialRadius / Math.sqrt(1.0 - eSq * sinLat * sinLat);\n\t\t\t\tlat = Math.atan((xyz.z + radius * eSq * sinLat) / r);\n\t\t\t}\n\t\t\treturn radius;\n\t\t}\n\t\telse {\n\t\t\tconst f = (xyz.z * xyz.z) / (xyz.x * xyz.x + xyz.y * xyz.y);\n\t\t\tconst cosLatSq = 1 / (1 + f);\n\t\t\tconst sinLatSq = f * cosLatSq;\n\t\t\tconst a = this._equatorialRadius;\n\t\t\tconst b = this._polarRadius;\n\t\t\treturn a * b / Math.sqrt(b * b * cosLatSq + a * a * sinLatSq);\n\t\t}\n\t}\n\n\t/**\n\t * Takes an XYZ and sets out to the equivalent LLA.\n\t * @param {LatLonAlt} out - the LLA vector to be set\n\t * @param {Vector3} xyz - the XYZ vector to convert\n\t * @param {number} [numIterations] - the number of iterations to use. Defaults to 5.\n\t */\n\tllaFromXYZ(out, xyz, numIterations = 5) {\n\t\tif (this._planetographic) {\n\t\t\tout.lon = Math.atan2(xyz.y, xyz.x);\n\n\t\t\t// Using http://mathforum.org/library/drmath/view/51834.html as a reference. The standard algorithm from the Astronomical Almanac.\n\t\t\tconst r = xyz.magnitudeXY();\n\t\t\tconst eSq = 1.0 - (this._polarRadius * this._polarRadius) / (this._equatorialRadius * this._equatorialRadius);\n\t\t\tout.lat = Math.atan(xyz.z / ((1.0 - eSq) * r));\n\t\t\tlet C = 0;\n\t\t\tfor (let i = 0; i < numIterations; i++) {\n\t\t\t\tconst sinLat = Math.sin(out.lat);\n\t\t\t\tC = 1.0 / Math.sqrt(1.0 - eSq * sinLat * sinLat);\n\t\t\t\tout.lat = Math.atan((xyz.z + this._equatorialRadius * C * eSq * sinLat) / r);\n\t\t\t}\n\t\t\tout.alt = r / Math.cos(out.lat) - this._equatorialRadius * C;\n\t\t}\n\t\telse {\n\t\t\tconst xyLength = xyz.magnitudeXY();\n\t\t\tout.lon = Math.atan2(xyz.y, xyz.x);\n\t\t\tout.lat = Math.atan(xyz.z / xyLength);\n\t\t\tconst cosLat = Math.cos(out.lat);\n\t\t\tconst sinLat = Math.sin(out.lat);\n\t\t\tconst a = this._equatorialRadius;\n\t\t\tconst b = this._polarRadius;\n\t\t\tconst radius = a * b / Math.sqrt(b * b * cosLat * cosLat + a * a * sinLat * sinLat);\n\t\t\tout.alt = xyz.magnitude() - radius;\n\t\t}\n\t}\n\n\t/**\n\t * Sets out to lla but with the planetographic flag toggled, adjusting the latitude and altiude so that they represent the same location.\n\t * @param {LatLonAlt} out - the LLA vector to be set\n\t * @param {LatLonAlt} lla\n\t */\n\tllaToggleGraphicCentric(out, lla) {\n\t\tconst xyz = Vector3.pool.get();\n\t\tthis.xyzFromLLA(xyz, lla);\n\t\tthis._planetographic = !this._planetographic;\n\t\tthis.llaFromXYZ(out, xyz);\n\t\tthis._planetographic = !this._planetographic;\n\t\tVector3.pool.release(xyz);\n\t}\n\n\t/**\n\t * Returns the up vector from the LLA.\n\t * @param {Vector3} out - the up vector to be set\n\t * @param {LatLonAlt} lla - the LLA to use\n\t */\n\tupFromLLA(out, lla) {\n\t\tconst llaPlanetographic = LatLonAlt.pool.get();\n\t\tif (this._planetographic) {\n\t\t\tllaPlanetographic.copy(lla);\n\t\t}\n\t\telse {\n\t\t\tthis.llaToggleGraphicCentric(llaPlanetographic, lla);\n\t\t}\n\t\tout.x = Math.cos(llaPlanetographic.lat) * Math.cos(llaPlanetographic.lon);\n\t\tout.y = Math.cos(llaPlanetographic.lat) * Math.sin(llaPlanetographic.lon);\n\t\tout.z = Math.sin(llaPlanetographic.lat);\n\t\tLatLonAlt.pool.release(llaPlanetographic);\n\t}\n\n\t/**\n\t * Returns the east vector from the LLA.\n\t * @param {Vector3} out - the east vector to be set\n\t * @param {LatLonAlt} lla - the LLA to use\n\t */\n\teastFromLLA(out, lla) {\n\t\tout.x = -Math.sin(lla.lon);\n\t\tout.y = Math.cos(lla.lon);\n\t\tout.z = 0;\n\t}\n\n\t/**\n\t * Returns the north vector from the LLA.\n\t * @param {Vector3} out - the north vector to be set\n\t * @param {LatLonAlt} lla - the LLA to use\n\t */\n\tnorthFromLLA(out, lla) {\n\t\tconst llaPlanetographic = LatLonAlt.pool.get();\n\t\tif (this._planetographic) {\n\t\t\tllaPlanetographic.copy(lla);\n\t\t}\n\t\telse {\n\t\t\tthis.llaToggleGraphicCentric(llaPlanetographic, lla);\n\t\t}\n\t\tout.x = -Math.sin(llaPlanetographic.lat) * Math.cos(llaPlanetographic.lon);\n\t\tout.y = -Math.sin(llaPlanetographic.lat) * Math.sin(llaPlanetographic.lon);\n\t\tout.z = Math.cos(llaPlanetographic.lat);\n\t\tLatLonAlt.pool.release(llaPlanetographic);\n\t}\n\n\t/**\n\t * Returns an orientation representing +x as east, +y as north, and +z as up from a LLA.\n\t * @param {Quaternion} out - the orientation to be set\n\t * @param {LatLonAlt} lla - the LLA to use\n\t */\n\torientationFromLLA(out, lla) {\n\t\tconst llaPlanetographic = LatLonAlt.pool.get();\n\t\tif (this._planetographic) {\n\t\t\tllaPlanetographic.copy(lla);\n\t\t}\n\t\telse {\n\t\t\tthis.llaToggleGraphicCentric(llaPlanetographic, lla);\n\t\t}\n\t\tconst sLat = Math.sin(llaPlanetographic.lat);\n\t\tconst sLon = Math.sin(llaPlanetographic.lon);\n\t\tconst cLon = Math.cos(llaPlanetographic.lon);\n\t\tout.w = 0.5 * Math.sqrt((1.0 + sLat) * (1.0 - sLon));\n\t\tout.x = 0.5 * Math.sqrt((1.0 - sLat) * (1.0 - sLon));\n\t\tout.y = 0.5 * Math.sqrt((1.0 - sLat) * (1.0 + sLon)) * Math.sign(cLon);\n\t\tout.z = 0.5 * Math.sqrt((1.0 + sLat) * (1.0 + sLon)) * Math.sign(cLon);\n\t\tLatLonAlt.pool.release(llaPlanetographic);\n\t}\n\n\t/**\n\t * Sets out to the AER of an XYZ from the viewpoint of an observer at a LLA.\n\t * @param {AER} out - the AER vector to be set\n\t * @param {Vector3} xyz - the XYZ point to observe\n\t * @param {LatLonAlt} lla - the LLA from which to observe\n\t */\n\taerFromXYZRelToLLA(out, xyz, lla) {\n\t\t// get the relative xyz at lla, as v\n\t\tconst v = Vector3.pool.get();\n\t\tthis.xyzFromLLA(v, lla);\n\t\tconst llaPlanetographic = LatLonAlt.pool.get();\n\t\tif (!this._planetographic) {\n\t\t\tthis.llaFromXYZ(llaPlanetographic, v);\n\t\t}\n\t\telse {\n\t\t\tllaPlanetographic.copy(lla);\n\t\t}\n\t\tv.sub(xyz, v);\n\t\tout.range = v.magnitude(); // the range\n\n\t\t// normalize it\n\t\tv.mult(v, 1.0 / out.range);\n\n\t\t// get the angle between horizon and v, using up. this is the elevation\n\t\tconst up = Vector3.pool.get();\n\t\tthis.upFromLLA(up, llaPlanetographic);\n\t\tconst vDotUp = v.dot(up);\n\t\tout.elevation = MathUtils.halfPi - Math.acos(vDotUp); // get angle from horizontal\n\n\t\t// make v be just the tangent part\n\t\tv.addMult(v, up, -vDotUp);\n\t\tVector3.pool.release(up);\n\n\t\t// get the azimuth using the north/east directions\n\t\tconst north = Vector3.pool.get();\n\t\tthis.northFromLLA(north, llaPlanetographic);\n\t\tconst east = Vector3.pool.get();\n\t\tthis.eastFromLLA(east, llaPlanetographic);\n\t\tout.azimuth = Math.atan2(v.dot(east), v.dot(north));\n\t\tVector3.pool.release(north);\n\t\tVector3.pool.release(east);\n\t\tLatLonAlt.pool.release(llaPlanetographic);\n\t\tVector3.pool.release(v);\n\t}\n\n\t/**\n\t * Gets the location at the point of intersection of the ray and the spheroid. Origin and direction are in frame space.\n\t * @param {Vector3} outPosition\n\t * @param {Vector3} origin\n\t * @param {Vector3} direction\n\t */\n\tgetRayIntersection(outPosition, origin, direction) {\n\t\tconst spheroidRatio = this._equatorialRadius / this._polarRadius;\n\t\tconst originAsSphere = Vector3.pool.get();\n\t\tconst directionAsSphere = Vector3.pool.get();\n\t\toriginAsSphere.set(origin.x, origin.y, origin.z * spheroidRatio);\n\t\tdirectionAsSphere.set(direction.x, direction.y, direction.z * spheroidRatio);\n\t\tconst intersectionDistance = Geometry.getLineSphereIntersectionWithSphereAtOrigin(originAsSphere, directionAsSphere, this._equatorialRadius);\n\t\toutPosition.addMult(originAsSphere, directionAsSphere, intersectionDistance);\n\t\tVector3.pool.release(originAsSphere);\n\t\tVector3.pool.release(directionAsSphere);\n\t\toutPosition.z /= spheroidRatio;\n\t}\n\n\t/**\n\t * Gets the frame-space position and up on the surface at the given frame-space position.\n\t * Note that the height direction is not up with planetocentric coordinates.\n\t * @param {Vector3} outPosition\n\t * @param {Vector3} outHeightDir\n\t * @param {Vector3} position\n\t */\n\tgetGroundPosition(outPosition, outHeightDir, position) {\n\t\t// Get the position on the surface of the spheroid.\n\t\tconst lla = LatLonAlt.pool.get();\n\t\tthis.llaFromXYZ(lla, position);\n\t\tlla.alt = 0;\n\t\tthis.xyzFromLLA(outPosition, lla);\n\t\tconst up = Vector3.pool.get();\n\t\tthis.upFromLLA(outHeightDir, lla);\n\t\tLatLonAlt.pool.release(lla);\n\t\tVector3.pool.release(up);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tAtmosphereComponent,\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tComponentRef,\n\tCubeMap,\n\tEntity,\n\tEntityRef,\n\tFastMap,\n\tGeometry,\n\tLatLonAlt,\n\tMaterialUtils,\n\tMathUtils,\n\tQuaternion,\n\tSpheroidComponent,\n\tTHREE,\n\tTextureLOD,\n\tThreeJsHelper,\n\tVector3\n} from '../../internal';\n\n/**\n * The spheroid LOD component.\n */\nexport class SpheroidLODComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * Texture URLs for the various textures.\n\t\t * @type {FastMap<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._textureUrls = new FastMap();\n\n\t\t/**\n\t\t * The LOD objects (one per face and one per texture type) that determines the texture.\n\t\t * @type {FastMap<string, TextureLOD[]>}\n\t\t * @private\n\t\t */\n\t\tthis._textureLODs = new FastMap();\n\n\t\t/**\n\t\t * The pixel sizes used for the LOD textures.\n\t\t * @type {FastMap<string, number[]>}\n\t\t * @private\n\t\t */\n\t\tthis._textureSizes = new FastMap();\n\n\t\t/**\n\t\t * The mapping used for the mesh and textures.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._mapping = 'cylinder';\n\n\t\t/**\n\t\t * The longitudinal rotation in radians of the spheroid.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._longitudinalRotation = 0;\n\n\t\t/**\n\t\t * The number of faces, determined by the mapping.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numFaces = 1;\n\n\t\t/**\n\t\t * The lower left coordinate of the bounds.\n\t\t * @type {LatLonAlt}\n\t\t * @private\n\t\t */\n\t\tthis._lowerLeftBounds = new LatLonAlt(-MathUtils.halfPi, -MathUtils.pi, 0);\n\n\t\t/**\n\t\t * The upper right coordinate of the bounds.\n\t\t * @type {LatLonAlt}\n\t\t * @private\n\t\t */\n\t\tthis._upperRightBounds = new LatLonAlt(+MathUtils.halfPi, MathUtils.pi, 0);\n\n\t\t/**\n\t\t * The layout used for the cubemap mapping.\n\t\t * @type {Vector3[][]}\n\t\t */\n\t\tthis._cubeMapFaceFrames = CubeMap._defaultCubeMapFaceFrames;\n\n\t\t/**\n\t\t * The entities uses for shadows. Derived from the shadow entity names.\n\t\t * @type {EntityRef[]}\n\t\t * @private\n\t\t */\n\t\tthis._shadowEntities = [];\n\n\t\t/**\n\t\t * The features that are enabled.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._features = new Set();\n\n\t\t/**\n\t\t * The flag that if true, uses compressed textures.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._useCompression = false;\n\n\t\t/**\n\t\t * A reference to the atmosphere component.\n\t\t * @type {ComponentRef<AtmosphereComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._atmosphereComponentRef = new ComponentRef(this.getEntity().getScene());\n\t\tthis._atmosphereComponentRef.setByType(this.getEntity().getName(), 'atmosphere');\n\n\t\t/**\n\t\t * A reference to the spheroid component.\n\t\t * @type {ComponentRef<SpheroidComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._spheroidComponentRef = new ComponentRef(this.getEntity().getScene());\n\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid');\n\t\tthis._spheroidComponentRef.setRefChangedCallback(this._spheroidRefChangedCallback.bind(this));\n\n\t\t// Bind the callbacks to this.\n\t\tthis._spheroidChangedCallback = this._spheroidChangedCallback.bind(this);\n\n\t\t// Lets the base component to check for valid orientation when determining whether this is visible.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the list of texture names as a new array.\n\t * @returns {string[]}\n\t */\n\tgetTextureNames() {\n\t\t/** @type {string[]} */\n\t\tconst names = [];\n\t\tfor (let i = 0; i < this._textureUrls.size; i++) {\n\t\t\tnames.push(this._textureUrls.getAt(i).key);\n\t\t}\n\t\treturn names;\n\t}\n\n\t/**\n\t * Gets the texture URL for the given name. Returns undefined if it doesn't exist.\n\t * @param {string} name\n\t * @returns {string}\n\t */\n\tgetTextureUrl(name) {\n\t\treturn this._textureUrls.get(name);\n\t}\n\n\t/**\n\t * Gets the level-of-detail sizes of the named texture. Defaults to [16, 512, 4096].\n\t * @param {string} name\n\t * @returns {number[]}\n\t */\n\tgetTextureSizes(name) {\n\t\treturn this._textureSizes.get(name);\n\t}\n\n\t/**\n\t * Sets the texture URL for the given name.\n\t * @param {string} name\n\t * @param {string} url\n\t * @param {number[]} [sizes=[4, 512, 4096]]\n\t */\n\tsetTexture(name, url, sizes = [4, 512, 4096]) {\n\t\t// Activate feature\n\t\tif (SpheroidLODComponent._textureToFeature.has(name)) {\n\t\t\tthis.setFeature(SpheroidLODComponent._textureToFeature.get(name), url !== '');\n\t\t}\n\n\t\tthis._textureUrls.set(name, url);\n\t\tthis._textureSizes.set(name, [...sizes]);\n\t\tlet textureLODs = this._textureLODs.get(name);\n\t\t// If there is no texture LOD yet, add it.\n\t\tif (textureLODs === undefined) {\n\t\t\ttextureLODs = [];\n\t\t\tconst materials = this.getThreeJsMaterials();\n\t\t\tfor (let i = 0, l = this._numFaces; i < l; i++) {\n\t\t\t\tconst textureLOD = new TextureLOD(this);\n\t\t\t\tif (materials.length > 0) {\n\t\t\t\t\tconst uniform = materials[i].uniforms[name + 'Texture'];\n\t\t\t\t\tif (uniform !== undefined) {\n\t\t\t\t\t\ttextureLOD.setUniform(uniform);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttextureLODs.push(textureLOD);\n\t\t\t}\n\t\t\tthis._textureLODs.set(name, textureLODs);\n\t\t}\n\t\tfor (let i = 0, l = this._numFaces; i < l; i++) {\n\t\t\ttextureLODs[i].setUrl(url.replace('$FACE', i.toString()));\n\t\t\ttextureLODs[i].setSizes(sizes);\n\t\t}\n\t}\n\n\t/**\n\t * Forces the texture to be at the texture size. If size is undefined, it does normal LOD levels.\n\t * @param {string} name\n\t * @param {number} size\n\t */\n\tforceTextureSize(name, size) {\n\t\tconst textureLODs = this._textureLODs.get(name);\n\t\tif (textureLODs === undefined) {\n\t\t\tthrow new Error('No texture named \"' + name + '\" has been defined.');\n\t\t}\n\t\tfor (let i = 0; i < textureLODs.length; i++) {\n\t\t\ttextureLODs[i].setForcedSize(size);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the texture from the material.\n\t * @param {string} name\n\t */\n\tunsetTexture(name) {\n\t\t// Deactivate feature\n\t\tif (SpheroidLODComponent._textureToFeature.has(name)) {\n\t\t\tthis.setFeature(SpheroidLODComponent._textureToFeature.get(name), false);\n\t\t}\n\n\t\tthis._textureUrls.delete(name);\n\t\tthis._textureLODs.delete(name);\n\t\tthis._textureSizes.delete(name);\n\t\tconst materials = this.getThreeJsMaterials();\n\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\tconst uniform = materials[i].uniforms[name + 'Texture'];\n\t\t\tif (uniform !== undefined) {\n\t\t\t\tuniform.value.dispose();\n\t\t\t\tuniform.value = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the texture level-of-detail's current size.\n\t * @param {string} name\n\t * @param {number} face\n\t * @returns {number}\n\t */\n\tgetTextureCurrentSize(name, face) {\n\t\tconst textureLODs = this._textureLODs.get(name);\n\t\tif (textureLODs !== undefined && textureLODs[face] !== undefined) {\n\t\t\treturn textureLODs[face].getCurrentSize();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Returns true if the feature is enabled. All features disabled by default.\n\t * @param {string} feature\n\t * @returns {boolean}\n\t */\n\tisFeatureEnabled(feature) {\n\t\treturn this._features.has(feature);\n\t}\n\n\t/**\n\t * Enables or disables a feature, one of 'normalMap', 'nightMap', 'decalMap', 'specularMap', 'shadowRings', 'shadowEntities', 'noShading'.\n\t * @param {string} feature - the feature to enable or disable\n\t * @param {boolean} enable - turn on or off the feature in the shader\n\t */\n\tsetFeature(feature, enable) {\n\t\tconst materials = this.getThreeJsMaterials();\n\t\tif (enable && !this._features.has(feature)) {\n\t\t\tthis._features.add(feature);\n\t\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\t\tconst material = materials[i];\n\t\t\t\tmaterial.defines[feature] = true;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t}\n\t\t\tif (feature === 'normalMap') {\n\t\t\t\tthis._updateMeshes();\n\t\t\t}\n\t\t}\n\t\telse if (!enable && this._features.has(feature)) {\n\t\t\tthis._features.delete(feature);\n\t\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\t\tconst material = materials[i];\n\t\t\t\tdelete material.defines[feature];\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t}\n\t\t\tif (feature === 'normalMap') {\n\t\t\t\tthis._updateMeshes();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the mapping used. Defaults to 'cylinder'.\n\t * @returns {string}\n\t */\n\tgetMapping() {\n\t\treturn this._mapping;\n\t}\n\n\t/**\n\t * Sets the mapping used. It can be 'cylinder' or 'cube'.\n\t * @param {string} mapping - the mapping to use\n\t */\n\tsetMapping(mapping) {\n\t\t// Determine the number of faces.\n\t\tconst oldNumFaces = this._numFaces;\n\t\tif (mapping === 'cylinder') {\n\t\t\tthis._numFaces = 1;\n\t\t}\n\t\telse if (mapping === 'cube') {\n\t\t\tthis._numFaces = 6;\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('Invalid mapping type.');\n\t\t}\n\n\t\t// If there are a different number of faces, redo the texture LODs.\n\t\tif (this._numFaces !== oldNumFaces) {\n\t\t\tfor (let i = 0; i < this._textureLODs.size; i++) {\n\t\t\t\tconst name = this._textureLODs.getAt(i).key;\n\t\t\t\tconst textureLODs = [];\n\t\t\t\tfor (let face = 0, l = this._numFaces; face < l; face++) {\n\t\t\t\t\tconst textureLOD = new TextureLOD(this);\n\t\t\t\t\ttextureLOD.setUrl(this._textureUrls.get(name).replace('$FACE', face.toString()));\n\t\t\t\t\ttextureLOD.setSizes(this._textureSizes.get(name));\n\t\t\t\t\ttextureLODs.push(textureLOD);\n\t\t\t\t}\n\t\t\t\tthis._textureLODs.set(name, textureLODs);\n\t\t\t}\n\t\t}\n\n\t\t// Set the mapping.\n\t\tthis._mapping = mapping;\n\n\t\t// Reset the resources, since the mapping changed.\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets the lower left and upper right coordinates of the bounds.\n\t * @param {LatLonAlt} lowerLeft\n\t * @param {LatLonAlt} upperRight\n\t */\n\tsetBounds(lowerLeft, upperRight) {\n\t\tthis._lowerLeftBounds.copy(lowerLeft);\n\t\tthis._upperRightBounds.copy(upperRight);\n\n\t\t// Reset the resources, since the bounds changed.\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets how the 6 cubemaps will be laid out. It takes an 6-array of a 3-array of strings, like [['+x', '-y', '+z'], ['-x', '+y', '-z'], ...].\n\t * The first component is u, the second component is v, and the third component is outward.\n\t * @param {string[][]} layout\n\t */\n\tsetCubeMapLayout(layout) {\n\t\t// Set the vectors up correctly.\n\t\tthis._cubeMapFaceFrames = [];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tthis._cubeMapFaceFrames.push([]);\n\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\tlet v = null;\n\t\t\t\tswitch (layout[i][j]) {\n\t\t\t\t\tcase '+x':\n\t\t\t\t\t\tv = Vector3.XAxis; break;\n\t\t\t\t\tcase '-x':\n\t\t\t\t\t\tv = Vector3.XAxisNeg; break;\n\t\t\t\t\tcase '+y':\n\t\t\t\t\t\tv = Vector3.YAxis; break;\n\t\t\t\t\tcase '-y':\n\t\t\t\t\t\tv = Vector3.YAxisNeg; break;\n\t\t\t\t\tcase '+z':\n\t\t\t\t\t\tv = Vector3.ZAxis; break;\n\t\t\t\t\tcase '-z':\n\t\t\t\t\t\tv = Vector3.ZAxisNeg; break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid cubemap layout component.');\n\t\t\t\t}\n\t\t\t\tthis._cubeMapFaceFrames[i][j] = v;\n\t\t\t}\n\t\t}\n\t\t// Reset the resources, since the layout changed.\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the number of shadow entities. Can be used to enumerate the shadow entities.\n\t * @returns {number}\n\t */\n\tgetNumShadowEntities() {\n\t\treturn this._shadowEntities.length;\n\t}\n\n\t/**\n\t * Returns the shadow entity or its name at the index.\n\t * @param {number} index\n\t * @returns {string | undefined}\n\t */\n\tgetShadowEntity(index) {\n\t\treturn this._shadowEntities[index]?.getName();\n\t}\n\n\t/**\n\t * Sets the shadow entities. Each element can be either the name of an entity or an entity itself.\n\t * @param {string[]} shadowEntities\n\t */\n\tsetShadowEntities(shadowEntities) {\n\t\tthis._shadowEntities = [];\n\t\tfor (const shadowEntity of shadowEntities) {\n\t\t\tthis._shadowEntities.push(new EntityRef(this.getEntity().getScene(), shadowEntity));\n\t\t}\n\t\tconst shadowEntitiesEnabled = (shadowEntities.length > 0);\n\t\tfor (let i = 0, l = this.getThreeJsMaterials().length; i < l; i++) {\n\t\t\tThreeJsHelper.setDefine(this.getThreeJsMaterials()[i], 'shadowEntities', shadowEntitiesEnabled);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the flag that if true, uses compressed textures.\n\t * @returns {boolean}\n\t */\n\tgetUseCompression() {\n\t\treturn this._useCompression;\n\t}\n\n\t/**\n\t * Sets the flag that if true, uses compressed textures.\n\t * @param {boolean} useCompression\n\t */\n\tsetUseCompression(useCompression) {\n\t\tthis._useCompression = useCompression;\n\t}\n\n\t/**\n\t * Gets the longitudinal rotation in radians of the spheroid.\n\t * @returns {number}\n\t */\n\tgetLongitudeRotation() {\n\t\treturn this._longitudinalRotation;\n\t}\n\n\t/**\n\t * Sets the longitudinal rotation in radians of the spheroid.\n\t * @param {number} rotation\n\t */\n\tsetLongitudeRotation(rotation) {\n\t\tthis._longitudinalRotation = rotation;\n\t}\n\n\t/**\n\t * Gets a new promise that resolves when the component is loaded.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tgetLoadedPromise() {\n\t\tconst promises = [super.getLoadedPromise()];\n\t\tfor (let i = 0; i < this._textureLODs.size; i++) {\n\t\t\tconst textureLODs = this._textureLODs.getAt(i).value;\n\t\t\tfor (let i = 0, l = textureLODs.length; i < l; i++) {\n\t\t\t\tpromises.push(textureLODs[i].getLoadedPromise());\n\t\t\t}\n\t\t}\n\t\treturn Promise.all(promises).then();\n\t}\n\n\t/**\n\t * Gets the color of the named texture at the given position in frame-space. If the position is higher up, it reduces the lat/lon of the position to find the color.\n\t * @param {Color} outColor\n\t * @param {Vector3} position\n\t * @param {string} textureName\n\t */\n\tgetColorAtPosition(outColor, position, textureName) {\n\t\tconst uvFace = Vector3.pool.get();\n\t\tif (this._mapping === 'cube') {\n\t\t\tCubeMap.xyzToUVFace(uvFace, position, this._cubeMapFaceFrames);\n\t\t}\n\t\telse if (this._mapping === 'cylinder') {\n\t\t\tconst lla = LatLonAlt.pool.get();\n\t\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\t\tif (spheroidComponent === null) {\n\t\t\t\toutColor.set(0, 0, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tuvFace.set(lla.lon / MathUtils.twoPi + 0.5, lla.lat / Math.PI + 0.5, 0);\n\t\t\tLatLonAlt.pool.release(lla);\n\t\t}\n\t\t// Get the texture LOD corresponding to the face.\n\t\tconst textureLODs = this._textureLODs.get(textureName);\n\t\tif (textureLODs === undefined) {\n\t\t\tthrow new Error('Invalid texture name.');\n\t\t}\n\t\t// Get the texture.\n\t\t/** @type {THREE.Texture} */\n\t\tconst texture = textureLODs[uvFace.z].getUniform().value;\n\t\t// Since we can't read from a loaded texture, we load it to a canvas.\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = texture.image.width;\n\t\tcanvas.height = texture.image.height;\n\t\tconst context = canvas.getContext('2d');\n\t\tcontext.drawImage(texture.image, 0, 0);\n\t\tconst imageData = context.getImageData(0, 0, texture.image.width, texture.image.height);\n\t\t// Get the pixel from the image data.\n\t\tconst numbersPerPixel = texture.format === THREE.RGBAFormat ? 4 : 3;\n\t\tconst pixelIndex = (Math.floor((1 - uvFace.y) * imageData.height) * imageData.width + Math.floor(uvFace.x * imageData.width)) * numbersPerPixel;\n\t\toutColor.set(imageData.data[pixelIndex + 0], imageData.data[pixelIndex + 1], imageData.data[pixelIndex + 2], numbersPerPixel === 4 ? imageData.data[pixelIndex + 3] : 1.0);\n\t\tVector3.pool.release(uvFace);\n\t}\n\n\t/**\n\t * Sets the reference to use for the spheroid component, by name or the type index.\n\t * @param {string | number} nameOrTypeIndex\n\t */\n\tsetSpheroidReference(nameOrTypeIndex) {\n\t\tif (typeof nameOrTypeIndex === 'string') {\n\t\t\tthis._spheroidComponentRef.setByName(this.getEntity().getName(), nameOrTypeIndex);\n\t\t}\n\t\telse {\n\t\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid', nameOrTypeIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @package\n\t */\n\t__destroy() {\n\t\t// Remove the spheroid changed callback.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tspheroidComponent.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Updates the camera-non-specific parts of the component.\n\t * @override\n\t * @package\n\t */\n\t__update() {\n\t\t// Set the texture LOD target size.\n\t\tfor (let i = 0; i < this._textureLODs.size; i++) {\n\t\t\tconst textureLODs = this._textureLODs.getAt(i).value;\n\t\t\tfor (let i = 0, l = textureLODs.length; i < l; i++) {\n\t\t\t\ttextureLODs[i].update();\n\t\t\t}\n\t\t}\n\n\t\t// Update the spheroid component reference.\n\t\tthis._spheroidComponentRef.update();\n\t}\n\n\t/**\n\t * Prepares the component for render.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the orientation and position to the entity's orientation and camera-space position.\n\t\tconst objects = this.getThreeJsObjects();\n\t\tconst longitudinalRotation = Quaternion.pool.get();\n\t\tlongitudinalRotation.setFromAxisAngle(Vector3.ZAxis, this._longitudinalRotation);\n\t\tfor (let i = 0; i < objects.length; i++) {\n\t\t\tThreeJsHelper.setOrientationToEntity(objects[i], this.getEntity(), longitudinalRotation);\n\t\t\tThreeJsHelper.setPositionToEntity(objects[i], this.getEntity(), camera);\n\t\t}\n\t\tQuaternion.pool.release(longitudinalRotation);\n\n\t\t// Get the atmosphere.\n\t\tconst atmosphere = this._atmosphereComponentRef.get();\n\n\t\t// Setup the regular uniforms.\n\t\tMaterialUtils.setUniforms(this.getThreeJsMaterials(), camera, this.getEntity(), this._shadowEntities, atmosphere, true);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tconst textureLODPromises = [];\n\t\tfor (let i = 0; i < this._numFaces; i++) {\n\t\t\t// Create the material.\n\t\t\tconst material = MaterialUtils.get();\n\t\t\tthis.getThreeJsMaterials().push(material);\n\t\t\tfor (const feature of this._features) {\n\t\t\t\tmaterial.defines[feature] = true;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t}\n\n\t\t\t// Create the object.\n\t\t\tconst object = ThreeJsHelper.createMeshObject(this, material, [\n\t\t\t\t{ name: 'position', dimensions: 3 },\n\t\t\t\t{ name: 'normal', dimensions: 3 },\n\t\t\t\t{ name: 'uv', dimensions: 2 }], false);\n\t\t\tthis.getThreeJsObjects().push(object);\n\n\t\t\t// Make it used in the dynamic environment map.\n\t\t\tThreeJsHelper.useInDynEnvMap(object, true);\n\n\t\t\t// Set the texture LODs uniforms.\n\t\t\tfor (let j = 0; j < this._textureLODs.size; j++) {\n\t\t\t\tconst name = this._textureLODs.getAt(j).key;\n\t\t\t\tconst uniform = material.uniforms[name + 'Texture'];\n\t\t\t\tif (uniform !== undefined) {\n\t\t\t\t\tconst textureLOD = this._textureLODs.get(name)[i];\n\t\t\t\t\ttextureLOD.setUniform(uniform);\n\t\t\t\t\ttextureLOD.update();\n\t\t\t\t\ttextureLODPromises.push(textureLOD.getLoadedPromise());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(textureLODPromises).then(() => {\n\t\t\tthis._updateMeshes();\n\t\t});\n\t}\n\n\t/**\n\t * Destroys the triangle meshes and LOD objects.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\t// Destroy al of the objects and materials and textures.\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\n\t\t// Set the texture LODs uniforms to null.\n\t\tfor (let i = 0; i < this._textureLODs.size; i++) {\n\t\t\tconst name = this._textureLODs.getAt(i).key;\n\t\t\tfor (let face = 0; face < this._numFaces; face++) {\n\t\t\t\tthis._textureLODs.get(name)[face].setUniform(null);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the ThreeJS mesh with the latest parameters.\n\t * @private\n\t */\n\t_updateMeshes() {\n\t\t// No triangle meshes or spheroid, so do nothing.\n\t\tif (this.getThreeJsObjects().length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._mapping === 'cylinder') {\n\t\t\tconst latDistance = this._upperRightBounds.lat - this._lowerLeftBounds.lat;\n\t\t\tconst lonDistance = this._upperRightBounds.lon - this._lowerLeftBounds.lon;\n\t\t\tconst numLatVerts = Math.max(Math.ceil(100 * latDistance / MathUtils.pi), 4);\n\t\t\tconst numLonVerts = Math.max(Math.ceil(200 * lonDistance / MathUtils.twoPi), 4);\n\t\t\tconst latStep = latDistance / (numLatVerts - 1);\n\t\t\tconst lonStep = lonDistance / (numLonVerts - 1);\n\t\t\tconst numVerts = numLonVerts * numLatVerts;\n\n\t\t\tconst meshPositions = new Float32Array(numVerts * 3);\n\t\t\tconst meshNormals = new Float32Array(numVerts * 3);\n\t\t\tconst meshUVs = new Float32Array(numVerts * 2);\n\t\t\tconst meshIndices = new Uint16Array((numLonVerts - 1) * (numLatVerts - 1) * 6);\n\n\t\t\tconst xyz = Vector3.pool.get();\n\t\t\tconst lla = LatLonAlt.pool.get();\n\t\t\tfor (let latI = 0; latI < numLatVerts; latI++) {\n\t\t\t\tfor (let lonI = 0; lonI < numLonVerts; lonI++) {\n\t\t\t\t\tlla.lat = this._lowerLeftBounds.lat + latI * latStep;\n\t\t\t\t\tlla.lon = this._lowerLeftBounds.lon + lonI * lonStep;\n\t\t\t\t\tlla.alt = 0;\n\n\t\t\t\t\tconst vertexI = latI * numLonVerts + lonI;\n\t\t\t\t\tspheroidComponent.xyzFromLLA(xyz, lla);\n\t\t\t\t\tmeshPositions[vertexI * 3 + 0] = xyz.x;\n\t\t\t\t\tmeshPositions[vertexI * 3 + 1] = xyz.y;\n\t\t\t\t\tmeshPositions[vertexI * 3 + 2] = xyz.z;\n\t\t\t\t\tspheroidComponent.upFromLLA(xyz, lla);\n\t\t\t\t\tmeshNormals[vertexI * 3 + 0] = xyz.x;\n\t\t\t\t\tmeshNormals[vertexI * 3 + 1] = xyz.y;\n\t\t\t\t\tmeshNormals[vertexI * 3 + 2] = xyz.z;\n\t\t\t\t\tmeshUVs[vertexI * 2 + 0] = lonI / (numLonVerts - 1);\n\t\t\t\t\tmeshUVs[vertexI * 2 + 1] = 1.0 - latI / (numLatVerts - 1);\n\n\t\t\t\t\tif (latI + 1 < numLatVerts && lonI + 1 < numLonVerts) {\n\t\t\t\t\t\tconst triangleI = latI * (numLonVerts - 1) + lonI;\n\t\t\t\t\t\tmeshIndices[triangleI * 6 + 0] = numLonVerts * (latI + 0) + (lonI + 0);\n\t\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = numLonVerts * (latI + 1) + (lonI + 1);\n\t\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = numLonVerts * (latI + 1) + (lonI + 0);\n\t\t\t\t\t\tmeshIndices[triangleI * 6 + 3] = numLonVerts * (latI + 0) + (lonI + 0);\n\t\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = numLonVerts * (latI + 0) + (lonI + 1);\n\t\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = numLonVerts * (latI + 1) + (lonI + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tLatLonAlt.pool.release(lla);\n\t\t\tVector3.pool.release(xyz);\n\n\t\t\tconst mesh = /** @type {THREE.Mesh<THREE.BufferGeometry>} */ (this.getThreeJsObjects()[0]);\n\t\t\tThreeJsHelper.setVertices(mesh.geometry, 'position', meshPositions);\n\t\t\tThreeJsHelper.setVertices(mesh.geometry, 'normal', meshNormals);\n\t\t\tThreeJsHelper.setVertices(mesh.geometry, 'uv', meshUVs);\n\t\t\tThreeJsHelper.setIndices(mesh.geometry, meshIndices);\n\t\t\tif (this._features.has('normalMap')) {\n\t\t\t\tThreeJsHelper.computeTangents(mesh.geometry);\n\t\t\t}\n\t\t}\n\t\telse if (this._mapping === 'cube') {\n\t\t\tconst numGridLines = 50;\n\n\t\t\tconst xyz = Vector3.pool.get();\n\t\t\tconst lla = LatLonAlt.pool.get();\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst meshPositions = new Float32Array(numGridLines * numGridLines * 3);\n\t\t\t\tconst meshNormals = new Float32Array(numGridLines * numGridLines * 3);\n\t\t\t\tconst meshUVs = new Float32Array(numGridLines * numGridLines * 2);\n\t\t\t\tconst meshIndices = new Uint16Array((numGridLines - 1) * (numGridLines - 1) * 6);\n\n\t\t\t\t// Check the handed-ness of the cubemap vectors.\n\t\t\t\tlet flipped = false;\n\t\t\t\tconst zVector = Vector3.pool.get();\n\t\t\t\tzVector.cross(this._cubeMapFaceFrames[i][0], this._cubeMapFaceFrames[i][1]);\n\t\t\t\tif (zVector.x !== this._cubeMapFaceFrames[i][2].x || zVector.y !== this._cubeMapFaceFrames[i][2].y || zVector.z !== this._cubeMapFaceFrames[i][2].z) {\n\t\t\t\t\tflipped = true;\n\t\t\t\t}\n\t\t\t\tVector3.pool.release(zVector);\n\n\t\t\t\t// Create the vertices, normals, and uvs.\n\t\t\t\tlet vertexI = 0;\n\t\t\t\tlet triangleI = 0;\n\t\t\t\tfor (let k = 0; k < numGridLines; k++) {\n\t\t\t\t\tfor (let j = 0; j < numGridLines; j++) {\n\t\t\t\t\t\txyz.mult(this._cubeMapFaceFrames[i][0], (2 * j) / (numGridLines - 1) - 1);\n\t\t\t\t\t\txyz.addMult(xyz, this._cubeMapFaceFrames[i][1], (2 * k) / (numGridLines - 1) - 1);\n\t\t\t\t\t\txyz.addMult(xyz, this._cubeMapFaceFrames[i][2], 1.0);\n\t\t\t\t\t\txyz.normalize(xyz);\n\n\t\t\t\t\t\t// Convert to lla as if xyz was on a sphere, then using it as a geodetic lla.\n\t\t\t\t\t\tGeometry.getLLAFromXYZOnSphere(lla, xyz, 0);\n\t\t\t\t\t\tlla.alt = 0;\n\n\t\t\t\t\t\t// Set the position.\n\t\t\t\t\t\tspheroidComponent.xyzFromLLA(xyz, lla);\n\t\t\t\t\t\tmeshPositions[vertexI * 3 + 0] = xyz.x;\n\t\t\t\t\t\tmeshPositions[vertexI * 3 + 1] = xyz.y;\n\t\t\t\t\t\tmeshPositions[vertexI * 3 + 2] = xyz.z;\n\n\t\t\t\t\t\t// Set the normals.\n\t\t\t\t\t\tspheroidComponent.upFromLLA(xyz, lla);\n\t\t\t\t\t\tmeshNormals[vertexI * 3 + 0] = xyz.x;\n\t\t\t\t\t\tmeshNormals[vertexI * 3 + 1] = xyz.y;\n\t\t\t\t\t\tmeshNormals[vertexI * 3 + 2] = xyz.z;\n\n\t\t\t\t\t\t// Set the UVs.\n\t\t\t\t\t\tmeshUVs[vertexI * 2 + 0] = j / (numGridLines - 1);\n\t\t\t\t\t\tmeshUVs[vertexI * 2 + 1] = 1.0 - k / (numGridLines - 1);\n\n\t\t\t\t\t\t// Set the indices.\n\t\t\t\t\t\tif (j < numGridLines - 1 && k < numGridLines - 1) {\n\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 0] = (k + 0) * numGridLines + (j + 0);\n\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 3] = (k + 1) * numGridLines + (j + 1);\n\t\t\t\t\t\t\tif (!flipped) {\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = (k + 0) * numGridLines + (j + 1);\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = (k + 1) * numGridLines + (j + 1);\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = (k + 1) * numGridLines + (j + 0);\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = (k + 0) * numGridLines + (j + 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = (k + 1) * numGridLines + (j + 1);\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = (k + 0) * numGridLines + (j + 1);\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = (k + 0) * numGridLines + (j + 0);\n\t\t\t\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = (k + 1) * numGridLines + (j + 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttriangleI += 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvertexI += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst mesh = /** @type {THREE.Mesh<THREE.BufferGeometry>} */ (this.getThreeJsObjects()[i]);\n\t\t\t\tThreeJsHelper.setVertices(mesh.geometry, 'position', meshPositions);\n\t\t\t\tThreeJsHelper.setVertices(mesh.geometry, 'normal', meshNormals);\n\t\t\t\tThreeJsHelper.setVertices(mesh.geometry, 'uv', meshUVs);\n\t\t\t\tThreeJsHelper.setIndices(mesh.geometry, meshIndices);\n\t\t\t\tif (this._features.has('normalMap')) {\n\t\t\t\t\tThreeJsHelper.computeTangents(mesh.geometry);\n\t\t\t\t}\n\t\t\t}\n\t\t\tLatLonAlt.pool.release(lla);\n\t\t\tVector3.pool.release(xyz);\n\t\t}\n\t}\n\n\t/**\n\t * Callback called when the spheroid reference is found or lost.\n\t * @param {SpheroidComponent} oldRef\n\t * @param {SpheroidComponent} newRef\n\t * @private\n\t */\n\t_spheroidRefChangedCallback(oldRef, newRef) {\n\t\tif (oldRef !== null) {\n\t\t\toldRef.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tif (newRef !== null) {\n\t\t\tnewRef.addChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tthis._spheroidChangedCallback();\n\t}\n\n\t/**\n\t * Callback to be called when the spheroid component changed.\n\t * @private\n\t */\n\t_spheroidChangedCallback() {\n\t\t// Set the radii uniforms.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tthis.__setRadius(Math.max(spheroidComponent.getEquatorialRadius(), spheroidComponent.getPolarRadius()));\n\t\t}\n\t\telse {\n\t\t\tthis.__setRadius(0);\n\t\t}\n\t\tthis.resetResources();\n\t}\n}\n\n/**\n * Maps texture names to features to activate/deactivate automatically.\n * @type {Map<string, string>}\n */\nSpheroidLODComponent._textureToFeature = new Map([\n\t['normal', 'normalMap'],\n\t['night', 'nightMap'],\n\t['decal', 'decalMap'],\n\t['specular', 'specularMap']\n]);\n","/** @module pioneer */\nimport {\n\tCameraComponent,\n\tEntity,\n\tTHREE\n} from '../../internal';\n\n/**\n * Spout component. The entity should also have a camera component.\n */\nexport class SpoutComponent extends CameraComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The render width.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._renderWidth = 2048;\n\n\t\t/**\n\t\t * The distance to which the globe cameras should render.\n\t\t * @private\n\t\t */\n\t\tthis._globeDistance = 1;\n\n\t\t// STUFF FOR RENDERING FACES\n\n\t\t/**\n\t\t * The three js cameras.\n\t\t * @type {THREE.PerspectiveCamera[]}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsFaceCameras = [];\n\n\t\t/**\n\t\t * This render targets.\n\t\t * @type {THREE.WebGLRenderTarget[]}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsFaceRenderTargets = [];\n\n\t\t// STUFF FOR RENDERING FINAL TEXTURE\n\n\t\t/**\n\t\t * The ThreeJS quad.\n\t\t * @type {THREE.Mesh}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsQuad = new THREE.Mesh();\n\n\t\t/**\n\t\t * The ThreeJS scene.\n\t\t * @type {THREE.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsSpoutScene = new THREE.Scene();\n\n\t\t/**\n\t\t * The ThreeJS cube camera.\n\t\t * @type {THREE.OrthographicCamera}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsCubeCamera = new THREE.OrthographicCamera(-1, 1, -1, 1, -1, 1);\n\n\t\t/**\n\t\t * This render target is used to mark the start of the shared texture render block.\n\t\t * @private\n\t\t */\n\t\tthis._tagStart = new THREE.WebGLRenderTarget(2, 3, { minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter });\n\n\t\t/**\n\t\t * This render target is used to mark the end of the shared texture render block.\n\t\t * @private\n\t\t */\n\t\tthis._tagEnd = new THREE.WebGLRenderTarget(3, 2, { minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter });\n\n\t\t/**\n\t\t * This render target is used to signal that all the shared textures are rendered and can be sent to Spout.\n\t\t * @private\n\t\t */\n\t\tthis._tagSend = new THREE.WebGLRenderTarget(3, 3, { minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter });\n\n\t\t/**\n\t\t * This render target is the texture that will be read by Spout.\n\t\t * @private\n\t\t */\n\t\tthis._spoutTexture = new THREE.WebGLRenderTarget(this._renderWidth, this._renderWidth / 2, { minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter });\n\n\t\t// Setup the cameras.\n\t\tthis._setupFaceCameras();\n\n\t\t// Setup the quad for the final render.\n\t\tthis._setupQuad();\n\t}\n\n\t/**\n\t * Gets the render width.\n\t * @returns {number}\n\t */\n\tgetRenderWidth() {\n\t\treturn this._renderWidth;\n\t}\n\n\t/**\n\t * Sets the render width.\n\t * @param {number} renderWidth\n\t */\n\tsetRenderWidth(renderWidth) {\n\t\tthis._renderWidth = renderWidth;\n\t\tif (this._spoutTexture.width !== this._renderWidth) {\n\t\t\tthis._spoutTexture.setSize(this._renderWidth, this._renderWidth / 2);\n\t\t}\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsFaceRenderTargets[face].setSize(this._renderWidth / 4, this._renderWidth / 4);\n\t\t}\n\t}\n\n\t/**\n\t * Gets if this is for a globe projection.\n\t * @return {boolean}\n\t */\n\tgetForGlobe() {\n\t\treturn this.getInvertDepth() === 1;\n\t}\n\n\t/**\n\t * Sets if this is for a globe projection.\n\t * @param {boolean} forGlobe\n\t * @param {number} globeDistance - The distance to which the camera should render.\n\t */\n\tsetForGlobe(forGlobe, globeDistance) {\n\t\tthis.setInvertDepth(forGlobe ? 1 : 0);\n\t\tthis._globeDistance = globeDistance;\n\t}\n\n\t// INTERNALS\n\n\t/**\n\t * Renders the camera. Called by Viewport.\n\t * @override\n\t * @internal\n\t */\n\t__render() {\n\t\t// Set the near and mid distances manually to work with the globe.\n\t\tif (this.getForGlobe()) {\n\t\t\tthis.setNearDistance(Math.max(0.1, this.getEntity().getParent().getOcclusionRadius() * 0.5));\n\t\t\tthis.setMidDistance(this.getAutoNearDistance());\n\t\t}\n\n\t\t// Update the projection matrix.\n\t\tthis._updateProjectionMatrices();\n\n\t\t// Set the camera's orientation for each of the face cameras.\n\t\tconst sqrt2 = 0.7071067811865476;\n\t\tconst ori = this.getEntity().getOrientation();\n\t\t_tempThreeJsQuaternion.set(ori.x, ori.y, ori.z, ori.w);\n\t\tthis._threeJsFaceCameras[0].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(sqrt2 * (ori.x - ori.y), sqrt2 * (ori.x + ori.y), sqrt2 * (-ori.w + ori.z), sqrt2 * (ori.w + ori.z));\n\t\tthis._threeJsFaceCameras[1].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(ori.y, -ori.x, ori.w, -ori.z);\n\t\tthis._threeJsFaceCameras[2].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(sqrt2 * (ori.x + ori.y), sqrt2 * (-ori.x + ori.y), sqrt2 * (ori.w + ori.z), sqrt2 * (ori.w - ori.z));\n\t\tthis._threeJsFaceCameras[3].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(sqrt2 * (ori.w + ori.x), sqrt2 * (ori.y + ori.z), sqrt2 * (-ori.y + ori.z), sqrt2 * (ori.w - ori.x));\n\t\tthis._threeJsFaceCameras[4].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\t\t_tempThreeJsQuaternion.set(sqrt2 * (-ori.w + ori.x), sqrt2 * (ori.y - ori.z), sqrt2 * (ori.y + ori.z), sqrt2 * (ori.w + ori.x));\n\t\tthis._threeJsFaceCameras[5].setRotationFromQuaternion(_tempThreeJsQuaternion);\n\n\t\t// If we're using the globe, flip all of the face culling, since depth is inverted.\n\t\tif (this.getForGlobe()) {\n\t\t\tthis._threeJsRenderer.state.setCullFace(THREE.CullFaceFront);\n\t\t}\n\n\t\t// Render each of the face cameras to the render targets.\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsRenderer.setRenderTarget(this._threeJsFaceRenderTargets[face]);\n\t\t\tthis._threeJsRenderer.render(this.getEntity().getScene().getThreeJsScene(), this._threeJsFaceCameras[face]);\n\t\t}\n\n\t\t// If we're using the globe, revert all of the face culling.\n\t\tif (this.getForGlobe()) {\n\t\t\tthis._threeJsRenderer.state.setCullFace(THREE.CullFaceBack);\n\t\t}\n\n\t\t// All of the render targets cleared between 'tagStart' and 'tagEnd', will be recorded as Spout textures.\n\t\tthis._threeJsRenderer.setRenderTarget(this._tagStart);\n\t\tthis._threeJsRenderer.clearColor();\n\t\tthis._threeJsRenderer.setRenderTarget(this._spoutTexture);\n\t\tthis._threeJsRenderer.clearColor();\n\t\tthis._threeJsRenderer.setRenderTarget(this._tagEnd);\n\t\tthis._threeJsRenderer.clearColor();\n\n\t\t// Render to the Spout texture using the render targets.\n\t\tthis._threeJsRenderer.setRenderTarget(this._spoutTexture);\n\t\t// this._threeJsRenderer.setRenderTarget(null); // Uncomment this to make it render to the viewport for debugging.\n\t\tthis._threeJsRenderer.render(this._threeJsSpoutScene, this._threeJsCubeCamera);\n\n\t\t// Signal that all of the recorded textures have been rendered and can be sent to Spout.\n\t\tthis._threeJsRenderer.setRenderTarget(this._tagSend);\n\t\tthis._threeJsRenderer.clearColor();\n\n\t\t// Make the render target back to default.\n\t\tthis._threeJsRenderer.setRenderTarget(null);\n\t}\n\n\t/**\n\t * Sets up the cameras.\n\t * @private\n\t */\n\t_setupFaceCameras() {\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsFaceCameras.push(new THREE.PerspectiveCamera(90.0, 1.0, 0.1, 1000));\n\t\t\tconst projectionMatrix = new THREE.Matrix4();\n\t\t\tprojectionMatrix.set(\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t\t0, 1, 0, 0);\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrix = projectionMatrix;\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrixInverse.copy(projectionMatrix).invert();\n\n\t\t\t// Setup the render target for the camera.\n\t\t\tconst renderTarget = new THREE.WebGLRenderTarget(this._renderWidth / 4, this._renderWidth / 4, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter });\n\t\t\tthis._threeJsFaceRenderTargets.push(renderTarget);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the projection.\n\t * @private\n\t */\n\t_updateProjectionMatrices() {\n\t\tconst n = this.getAutoNearDistance();\n\t\tlet f1 = Number.EPSILON - 1.0;\n\t\tlet f2 = n * (2.0 - Number.EPSILON);\n\t\tif (this.getInvertDepth() === 1) {\n\t\t\tconst f = this._globeDistance;\n\t\t\tf1 = (n + f) * (1 - Number.EPSILON) / (n - f);\n\t\t\tf2 = -2 * n * f * (1 - Number.EPSILON) / (n - f);\n\t\t}\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrix.elements[6] = f1;\n\t\t\tthis._threeJsFaceCameras[face].projectionMatrix.elements[14] = f2;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the quad meshes up.\n\t */\n\t_setupQuad() {\n\t\t// Setup geometry.\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tconst meshPositions = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);\n\t\tconst meshIndices = new Uint16Array([0, 1, 2, 0, 2, 3]);\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(meshPositions, 2));\n\t\tgeometry.setIndex(new THREE.BufferAttribute(meshIndices, 1));\n\n\t\t// Setup material uniforms.\n\t\tconst uniforms = {\n\t\t\ttextures: new THREE.Uniform([])\n\t\t};\n\t\tfor (let face = 0; face < 6; face++) {\n\t\t\tuniforms['textures'].value.push(this._threeJsFaceRenderTargets[face].texture);\n\t\t}\n\n\t\t// Setup material.\n\t\tconst material = new THREE.RawShaderMaterial({\n\t\t\tuniforms: uniforms,\n\t\t\tvertexShader: `\n\t\t\t\tattribute vec2 position;\n\t\t\t\tvarying vec2 xy;\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_Position = vec4(position.x, position.y, 0.0, 1.0);\n\t\t\t\t\txy = position;\n\t\t\t\t}`,\n\t\t\tfragmentShader: `\n\t\t\t\tprecision highp float;\n\n\t\t\t\tuniform sampler2D textures[6];\n\n\t\t\t\tvarying vec2 xy;\n\t\t\t\tconst float PI = 3.1415926535897932384626433832795;\n\n\t\t\t\tvec3 xyToUvFace(vec2 xy) {\n\t\t\t\t\tvec3 xyz = vec3(\n\t\t\t\t\t\tcos(xy.y * PI / 2.0) * cos(xy.x * PI),\n\t\t\t\t\t\tcos(xy.y * PI / 2.0) * sin(xy.x * PI),\n\t\t\t\t\t\tsin(-xy.y * PI / 2.0));\n\n\t\t\t\t\tvec3 basis[3];\n\t\t\t\t\tfloat face;\n\t\t\t\t\tif (xyz.x * xyz.x >= xyz.y * xyz.y && xyz.x * xyz.x >= xyz.z * xyz.z) {\n\t\t\t\t\t\tif (xyz.x >= 0.0) {\n\t\t\t\t\t\t\tbasis[0] = vec3(0, 1, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(1, 0, 0);\n\t\t\t\t\t\t\tface = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbasis[0] = vec3(0, -1, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(-1, 0, 0);\n\t\t\t\t\t\t\tface = 2.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (xyz.y * xyz.y >= xyz.x * xyz.x && xyz.y * xyz.y >= xyz.z * xyz.z) {\n\t\t\t\t\t\tif (xyz.y >= 0.0) {\n\t\t\t\t\t\t\tbasis[0] = vec3(-1, 0, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(0, 1, 0);\n\t\t\t\t\t\t\tface = 1.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbasis[0] = vec3(1, 0, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(0, -1, 0);\n\t\t\t\t\t\t\tface = 3.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (xyz.z >= 0.0) {\n\t\t\t\t\t\t\tbasis[0] = vec3(0, 1, 0); basis[1] = vec3(-1, 0, 0); basis[2] = vec3(0, 0, 1);\n\t\t\t\t\t\t\tface = 4.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbasis[0] = vec3(0, 1, 0); basis[1] = vec3(1, 0, 0); basis[2] = vec3(0, 0, -1);\n\t\t\t\t\t\t\tface = 5.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvec3 uv = vec3(\n\t\t\t\t\t\tbasis[0].x * xyz.x + basis[0].y * xyz.y + basis[0].z * xyz.z,\n\t\t\t\t\t\tbasis[1].x * xyz.x + basis[1].y * xyz.y + basis[1].z * xyz.z,\n\t\t\t\t\t\tbasis[2].x * xyz.x + basis[2].y * xyz.y + basis[2].z * xyz.z);\n\t\t\t\t\tuv.x /= uv.z;\n\t\t\t\t\tuv.y /= uv.z;\n\n\t\t\t\t\treturn vec3(0.5 * (uv.x + 1.0), 0.5 * (uv.y + 1.0), face);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec3 uvFace = xyToUvFace(xy);\n\n\t\t\t\t\tvec4 pixel;\n\t\t\t\t\tint face = int(uvFace.z);\n\n\t\t\t\t\tif (face == 0) {\n\t\t\t\t\t\tpixel = texture2D(textures[0], vec2(uvFace.x, uvFace.y));\n\t\t\t\t\t}\n\t\t\t\t\telse if (face == 1) {\n\t\t\t\t\t\tpixel = texture2D(textures[1], vec2(uvFace.x, uvFace.y));\n\t\t\t\t\t}\n\t\t\t\t\telse if (face == 2) {\n\t\t\t\t\t\tpixel = texture2D(textures[2], vec2(uvFace.x, uvFace.y));\n\t\t\t\t\t}\n\t\t\t\t\telse if (face == 3) {\n\t\t\t\t\t\tpixel = texture2D(textures[3], vec2(uvFace.x, uvFace.y));\n\t\t\t\t\t}\n\t\t\t\t\telse if (face == 4) {\n\t\t\t\t\t\tpixel = texture2D(textures[4], vec2(uvFace.x, uvFace.y));\n\t\t\t\t\t}\n\t\t\t\t\telse if (face == 5) {\n\t\t\t\t\t\tpixel = texture2D(textures[5], vec2(uvFace.x, uvFace.y));\n\t\t\t\t\t}\n\n\t\t\t\t\tgl_FragColor = pixel;\n\t\t\t\t}`,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\n\t\t// Setup object.\n\t\tthis._threeJsQuad = new THREE.Mesh(geometry, material);\n\t\tthis._threeJsQuad.frustumCulled = false;\n\t\tthis._threeJsSpoutScene.add(this._threeJsQuad);\n\t}\n}\n\n/**\n * A temporary ThreeJs Quaternion.\n * @type {THREE.Quaternion}\n * @private\n */\nconst _tempThreeJsQuaternion = new THREE.Quaternion();\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tMathUtils,\n\tQuaternion,\n\tShaderChunkLogDepth,\n\tTHREE,\n\tThreeJsHelper,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/**\n * A 2D sprite in the X-Y plane relative to an entity.\n */\nexport class SpriteComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The url for the texture.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._textureUrl = '';\n\n\t\t/**\n\t\t * The size of the sprite. If a component is NaN, it uses the aspect ratio of the texture to determine that component's size.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._size = new Vector2(1, Number.NaN);\n\t\tthis._size.freeze();\n\n\t\t/**\n\t\t * The units of the size. It can be 'pixels' or 'km'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._sizeUnits = 'km';\n\n\t\t/**\n\t\t * Each pixel in the texture is multiplied by this value.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._colorMultiplier = new Color(1, 1, 1, 1);\n\t\tthis._colorMultiplier.freeze();\n\n\t\t/**\n\t\t * The alignment of the sprite along the x-y plane.\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._alignment = new Vector2(0.5, 0.5);\n\t\tthis._alignment.freeze();\n\n\t\t/**\n\t\t * The distance at which the sprite begins to fade (50% less than this number and it is completely gone).\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._fadeDistance = 0;\n\n\t\t/**\n\t\t * A flag that determines if the sprite has transparent pixels.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._transparent = false;\n\n\t\t/**\n\t\t * A flag that determines if the sprite has blending mode.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._blending = 'normal';\n\n\t\t/**\n\t\t * A flag that determines if the sprite is a billboard (always facing the camera).\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._billboard = false;\n\n\t\t/**\n\t\t * The render ordering of the sprite. Lesser numbers are rendered behind greater numbers.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._renderOrder = 0;\n\t}\n\n\t/**\n\t * Gets the url of the texture.\n\t * @returns {string}\n\t */\n\tgetTextureUrl() {\n\t\treturn this._textureUrl;\n\t}\n\n\t/**\n\t * Sets the url of the texture.\n\t * @param {string} url\n\t */\n\tsetTextureUrl(url) {\n\t\tthis._textureUrl = url;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the size of the sprite.\n\t * @return {Vector2}\n\t */\n\tgetSize() {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Sets the size of the sprite. If a component is NaN, it uses the aspect ratio of the texture to determine that component's size.\n\t * @param {Vector2} size\n\t */\n\tsetSize(size) {\n\t\tthis._size.thaw();\n\t\tthis._size.copy(size);\n\t\tthis._size.freeze();\n\t\tthis._updateSizeUniform();\n\t}\n\n\t/**\n\t * Gets the units of the size. It can be 'pixels' or 'km'. Defaults to 'km'.\n\t * @returns {string}\n\t */\n\tgetSizeUnits() {\n\t\treturn this._sizeUnits;\n\t}\n\n\t/**\n\t * Sets the units of the size. It can be 'pixels' or 'km'.\n\t * @param {string} sizeUnits\n\t */\n\tsetSizeUnits(sizeUnits) {\n\t\tthis._sizeUnits = sizeUnits;\n\t\tthis._updateSizeUniform();\n\t}\n\n\t/**\n\t * Gets the color multiplier of the sprite. Each pixel in the texture is multiplied by this color.\n\t * @returns {Color}\n\t */\n\tgetColorMultiplier() {\n\t\treturn this._colorMultiplier;\n\t}\n\n\t/**\n\t * Sets the color multiplier of the sprite. Each pixel in the texture is multiplied by this color.\n\t * @param {Color} colorMultiplier\n\t */\n\tsetColorMultiplier(colorMultiplier) {\n\t\tthis._colorMultiplier.thaw();\n\t\tthis._colorMultiplier.copy(colorMultiplier);\n\t\tthis._colorMultiplier.freeze();\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'colorMultiplier', colorMultiplier);\n\t}\n\n\t/**\n\t * Gets the sprite alignment on the X-Y plane. Defaults to being center aligned on both axes.\n\t * @returns {Vector2}\n\t */\n\tgetAlignment() {\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * Sets the alignment.\n\t * @param {Vector2} alignment - the alignment to set\n\t */\n\tsetAlignment(alignment) {\n\t\tthis._alignment.thaw();\n\t\tthis._alignment.copy(alignment);\n\t\tthis._alignment.freeze();\n\t\tThreeJsHelper.setUniformVector2(this.getThreeJsMaterials()[0], 'origin', this._alignment);\n\t}\n\n\t/**\n\t * Gets the distance at which the sprite begins to fade (50% less than this number and it is completely gone).\n\t * @returns {number}\n\t */\n\tgetFadeDistance() {\n\t\treturn this._fadeDistance;\n\t}\n\n\t/**\n\t * Sets the distance at which the sprite begins to fade (50% less than this number and it is completely gone). Defaults to 0.\n\t * @param {number} fadeDistance\n\t */\n\tsetFadeDistance(fadeDistance) {\n\t\tthis._fadeDistance = fadeDistance;\n\t}\n\n\t/**\n\t * Returns true if the sprite is a billboard (always facing the camera). Defaults to false.\n\t * @returns {boolean}\n\t */\n\tisBillboard() {\n\t\treturn this._billboard;\n\t}\n\n\t/**\n\t * Sets whether the sprite is a billboard (always facing the camera).\n\t * @param {boolean} billboard\n\t */\n\tsetBillboard(billboard) {\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * Gets the transparency of the sprite. Determines whether or not the sprite has alpha values other than 0 or 1.\n\t * @returns {boolean}\n\t */\n\tgetTransparent() {\n\t\treturn this._transparent;\n\t}\n\n\t/**\n\t * Sets whether or not the sprite has alpha values other than 0 or 1. Defaults to false.\n\t * @param {boolean} transparent\n\t */\n\tsetTransparent(transparent) {\n\t\tthis._transparent = transparent;\n\t\tThreeJsHelper.setTransparent(this.getThreeJsMaterials()[0], this._transparent);\n\t}\n\n\t/**\n\t * Sets blending mode. Mode is one of 'normal', 'additive', 'subtractive', 'multliply', 'custom', or 'none'. Defaults to 'normal'.\n\t * @param {string} blending\n\t */\n\tsetBlending(blending) {\n\t\tthis._blending = blending;\n\t\tThreeJsHelper.setBlending(this.getThreeJsMaterials()[0], this._blending);\n\t}\n\n\t/**\n\t * Gets the render ordering of the sprite. Lesser numbers are rendered behind greater numbers.\n\t * @returns {number}\n\t */\n\tgetRenderOrder() {\n\t\treturn this._renderOrder;\n\t}\n\n\t/**\n\t * Sets the render ordering of the sprite. Lesser numbers are rendered behind greater numbers. Defaults to 0.\n\t * @param {number} renderOrder\n\t */\n\tsetRenderOrder(renderOrder) {\n\t\tthis._renderOrder = renderOrder;\n\t\tThreeJsHelper.setRenderOrder(this.getThreeJsObjects()[0], this._renderOrder);\n\t}\n\n\t/**\n\t * Updates the camera-dependent parts of the component.\n\t * @param {CameraComponent} camera - the camera being used in the render\n\t * @override\n\t */\n\t__prepareForRender(camera) {\n\t\t// If the size units are in pixels, adjust the size accordingly.\n\t\tif (this._sizeUnits === 'pixels') {\n\t\t\tconst size = Vector2.pool.get();\n\t\t\tconst sizeMultiplier = this.getEntity().getExtentsRadius() / this.getEntity().getPixelSpaceExtentsRadius(camera);\n\t\t\tsize.mult(this._size, sizeMultiplier);\n\t\t\tThreeJsHelper.setUniformVector2(this.getThreeJsMaterials()[0], 'size', size);\n\t\t\tVector2.pool.release(size);\n\t\t}\n\n\t\t// If it is a billboard, set the orientation to always face the camera.\n\t\tif (this.getThreeJsObjects().length > 0) {\n\t\t\tif (this._billboard) {\n\t\t\t\tThreeJsHelper.setOrientationToBillboard(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\t\t\t}\n\t\t}\n\n\t\t// Set the alpha fade distance multiplier.\n\t\tif (this._fadeDistance > 0) {\n\t\t\tconst posInSpriteFrame = Vector3.pool.get();\n\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\tconst threeJsOrientation = this.getThreeJsObjects()[0].quaternion;\n\t\t\torientation.copyFromThreeJs(threeJsOrientation);\n\t\t\tposInSpriteFrame.rotateInverse(this.getEntity().getOrientation(), this.getEntity().getCameraSpacePosition(camera));\n\t\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'alphaFadeMultiplier',\n\t\t\t\tMathUtils.lerp(0, 1, MathUtils.clamp01(2 * (Math.abs(posInSpriteFrame.z) / this._fadeDistance - 1) + 1)));\n\t\t\tQuaternion.pool.release(orientation);\n\t\t\tVector3.pool.release(posInSpriteFrame);\n\t\t}\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Load the texture.\n\t\tconst texture = await ThreeJsHelper.loadTexture(this, this._textureUrl, false, false);\n\n\t\t// Check if the component has since stopped loading.\n\t\tif (this.getLoadState() !== 'loading') {\n\t\t\ttexture.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// Create the Three.js object.\n\t\tif (SpriteComponent._useCount === 0) {\n\t\t\t// Create the shared geometry as a square 0, 0 to 1, 1.\n\t\t\tSpriteComponent._threeJsGeometry = ThreeJsHelper.createGeometry([{ name: 'position', dimensions: 3 }, { name: 'uv', dimensions: 2 }], false);\n\t\t\tThreeJsHelper.setVertices(SpriteComponent._threeJsGeometry, 'position', new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0]));\n\t\t\tThreeJsHelper.setVertices(SpriteComponent._threeJsGeometry, 'uv', new Float32Array([0, 1, 1, 1, 1, 0, 0, 0]));\n\t\t\tThreeJsHelper.setIndices(SpriteComponent._threeJsGeometry, new Uint16Array([0, 1, 2, 2, 3, 0]));\n\n\t\t\t// Create the shared material.\n\t\t\tSpriteComponent._threeJsMaterial = new THREE.ShaderMaterial({\n\t\t\t\tuniforms: {\n\t\t\t\t\tcolorMultiplier: new THREE.Uniform(new THREE.Vector4(1.0, 1.0, 1.0, 1.0)),\n\t\t\t\t\talphaFadeMultiplier: new THREE.Uniform(1),\n\t\t\t\t\tsize: new THREE.Uniform(new THREE.Vector2(1.0, 1.0)),\n\t\t\t\t\tcolorTexture: new THREE.Uniform(null),\n\t\t\t\t\torigin: new THREE.Uniform(new THREE.Vector2(0, 0)),\n\n\t\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t\t},\n\t\t\t\tvertexShader: `\n\t\t\t\t\tuniform vec2 size;\n\t\t\t\t\tuniform vec2 origin;\n\t\t\t\t\tvarying vec2 fUV;\n\n\t\t\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\t\t\tvoid main() {\n\t\t\t\t\t\tvec4 viewPosition = modelViewMatrix * vec4((position.x - origin.x) * size.x, (position.y - origin.y) * size.y, 0.0, 1.0);\n\t\t\t\t\t\tgl_Position = projectionMatrix * viewPosition;\n\t\t\t\t\t\tfUV = uv;\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t\t\t}`,\n\t\t\t\tfragmentShader: `\n\t\t\t\t\tprecision highp float;\n\n\t\t\t\t\tuniform vec4 colorMultiplier;\n\t\t\t\t\tuniform float alphaFadeMultiplier;\n\t\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\t\tvarying vec2 fUV;\n\n\t\t\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\t\t\tvoid main(void) {\n\t\t\t\t\t\tgl_FragColor = texture2D(colorTexture, fUV);\n\t\t\t\t\t\tgl_FragColor *= colorMultiplier;\n\t\t\t\t\t\tgl_FragColor.a *= alphaFadeMultiplier;\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t\t\t}`,\n\t\t\t\tside: THREE.DoubleSide\n\t\t\t});\n\t\t\tThreeJsHelper.setupLogDepthBuffering(SpriteComponent._threeJsMaterial);\n\t\t}\n\t\tSpriteComponent._useCount += 1;\n\n\t\t// Create the material.\n\t\tconst material = SpriteComponent._threeJsMaterial.clone();\n\t\tthis.getThreeJsMaterials().push(material);\n\t\tThreeJsHelper.setTransparent(material, this._transparent);\n\t\tThreeJsHelper.setBlending(material, this._blending);\n\t\tThreeJsHelper.setUniformColorRGBA(material, 'colorMultiplier', this._colorMultiplier);\n\t\tThreeJsHelper.setUniformNumber(material, 'alphaFadeMultiplier', 1);\n\t\tThreeJsHelper.setUniformVector2(material, 'origin', this._alignment);\n\t\tThreeJsHelper.setUniformTexture(material, 'colorTexture', texture);\n\n\t\t// Create the object.\n\t\tconst object = ThreeJsHelper.createMeshObjectGivenGeometry(this, material, SpriteComponent._threeJsGeometry);\n\t\tthis.getThreeJsObjects().push(object);\n\t\tThreeJsHelper.setRenderOrder(object, this._renderOrder);\n\n\t\tthis._updateSizeUniform();\n\t}\n\n\t/**\n\t * Unloads the resources.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\t// Destroy the material.\n\t\tThreeJsHelper.destroyMaterial(this.getThreeJsMaterials()[0]);\n\t\t// Remove the object from the scene.\n\t\tconst object = this.getThreeJsObjects()[0];\n\t\tif (object.parent !== undefined) {\n\t\t\tobject.parent.remove(object);\n\t\t}\n\t\t// If there are no more sprites, destroy the geometry and material.\n\t\tSpriteComponent._useCount -= 1;\n\t\tif (SpriteComponent._useCount === 0) {\n\t\t\tThreeJsHelper.destroyGeometry(SpriteComponent._threeJsGeometry);\n\t\t\tThreeJsHelper.destroyMaterial(SpriteComponent._threeJsMaterial);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the size of the sprite given the size of this component and the texture size.\n\t * @private\n\t */\n\t_updateSizeUniform() {\n\t\tif (this.getThreeJsMaterials().length > 0) {\n\t\t\t/** @type {THREE.Texture} */\n\t\t\tconst texture = this.getThreeJsMaterials()[0].uniforms['colorTexture'].value;\n\t\t\tif (texture !== null) {\n\t\t\t\tconst textureAspectRatio = texture.image.width / texture.image.height;\n\t\t\t\tconst size = Vector2.pool.get();\n\t\t\t\tif (Number.isNaN(this._size.x)) {\n\t\t\t\t\tsize.set(this._size.y * textureAspectRatio, this._size.y);\n\t\t\t\t}\n\t\t\t\telse if (Number.isNaN(this._size.y)) {\n\t\t\t\t\tsize.set(this._size.x, this._size.x / textureAspectRatio);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsize.set(this._size.x, this._size.y);\n\t\t\t\t}\n\t\t\t\tThreeJsHelper.setUniformVector2(this.getThreeJsMaterials()[0], 'size', size);\n\t\t\t\tVector2.pool.release(size);\n\n\t\t\t\tif (this._sizeUnits === 'km') {\n\t\t\t\t\tthis.__setRadius(Math.max(size.x, size.y));\n\t\t\t\t}\n\t\t\t\telse { // pixels\n\t\t\t\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sizeUnits === 'km') {\n\t\t\t\tif (Number.isNaN(this._size.x)) {\n\t\t\t\t\tthis.__setRadius(this._size.y);\n\t\t\t\t}\n\t\t\t\telse if (Number.isNaN(this._size.y)) {\n\t\t\t\t\tthis.__setRadius(this._size.y);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.__setRadius(Math.max(this._size.x, this._size.y));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A global shared material, copied by sprites.\n * @type {THREE.ShaderMaterial}\n */\nSpriteComponent._threeJsMaterial = null;\n\n/**\n * A global shared geometry unit square with a corner at (0, 0), copied by sprites.\n * @type {THREE.BufferGeometry}\n */\nSpriteComponent._threeJsGeometry = null;\n\n/**\n * The count for the number of sprites used.\n * @type {number}\n */\nSpriteComponent._useCount = 0;\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tQuaternion,\n\tReader,\n\tShaderChunkLogDepth,\n\tSpoutComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tVector2,\n\tVector3\n} from '../../internal';\n\nconst eclipJ2000ToJ200Rotation = new Quaternion(0.9791532214288992, 0.2031230389823101, 0, 0);\n\n// Star used in the Starfield component.\nclass Star {\n\tconstructor() {\n\t\tthis.mag = 0;\n\t\tthis.absMag = 0;\n\t\tthis.color = new Color();\n\t\tthis.position = new Vector3();\n\t\tthis.particle = null;\n\t}\n}\n\n/**\n * The starfield component. Loads a star file.\n * @todo Document the star file format.\n */\nexport class StarfieldComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The database URL.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._url = '';\n\n\t\t// Set the radius to the whole universe.\n\t\tthis.__setRadius(1e24);\n\t}\n\n\t/**\n\t * Gets the url of the star database.\n\t * @returns {string}\n\t */\n\tgetUrl() {\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * Sets the url.\n\t * @param {string} url - the url to set\n\t */\n\tsetUrl(url) {\n\t\tthis._url = url;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// If the camera is a Spout camera, use Spout for the render size.\n\t\tconst renderSize = Vector2.pool.get();\n\t\tif (camera.getType() === 'spout') {\n\t\t\tconst spoutComponent = /** @type {SpoutComponent} */(camera);\n\t\t\trenderSize.set(spoutComponent.getRenderWidth(), spoutComponent.getRenderWidth() * 0.5);\n\t\t}\n\t\t// Otherwise use the viewport size.\n\t\telse {\n\t\t\trenderSize.copy(camera.getViewport().getBounds().size);\n\t\t}\n\n\t\tconst resolutionFactor = Math.sqrt(Math.max(renderSize.x, renderSize.y) * window.devicePixelRatio) / 60;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'resolutionFactor', resolutionFactor);\n\t\tVector2.pool.release(renderSize);\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\t// Load the stars from the database.\n\t\tconst stars = await this._loadStars();\n\n\t\t// Check if the component has since been destroyed.\n\t\tif (this.isDestroyed()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Setup the Three.js material.\n\t\tconst material = new THREE.ShaderMaterial({\n\t\t\tvertexShader: StarfieldComponent.vertexShader,\n\t\t\tfragmentShader: StarfieldComponent.fragmentShader,\n\t\t\ttransparent: true,\n\t\t\tblending: THREE.AdditiveBlending,\n\t\t\tdepthWrite: false,\n\t\t\tuniforms: {\n\t\t\t\tresolutionFactor: new THREE.Uniform(1.0),\n\n\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t}\n\t\t});\n\t\tThreeJsHelper.setupLogDepthBuffering(material);\n\t\tthis.getThreeJsMaterials().push(material);\n\n\t\t// Setup the Three.js geometry.\n\t\tconst threeJsGeometry = new THREE.BufferGeometry();\n\t\tthreeJsGeometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(0), 3));\n\t\tthreeJsGeometry.setAttribute('color', new THREE.BufferAttribute(new Float32Array(0), 4));\n\t\tthreeJsGeometry.setIndex(new THREE.BufferAttribute(new Uint16Array(0), 1));\n\n\t\t// Setup the Three.js object.\n\t\tconst threeJsObject = new THREE.Points(threeJsGeometry, material);\n\t\tThreeJsHelper.setupObject(this, threeJsObject);\n\t\tthreeJsObject.renderOrder = -2; // Make it render before other transparent objects.\n\t\tthis.getThreeJsObjects().push(threeJsObject);\n\n\t\t// Update the particle geometry from the star database.\n\t\tconst meshPositions = new Float32Array(stars.length * 3);\n\t\tconst meshColors = new Float32Array(stars.length * 4);\n\t\tconst meshIndices = new Uint16Array(stars.length);\n\t\tfor (let i = 0; i < stars.length; i++) {\n\t\t\tconst star = stars[i];\n\t\t\tmeshPositions[i * 3 + 0] = star.position.x;\n\t\t\tmeshPositions[i * 3 + 1] = star.position.y;\n\t\t\tmeshPositions[i * 3 + 2] = star.position.z;\n\t\t\tmeshColors[i * 4 + 0] = star.color.r;\n\t\t\tmeshColors[i * 4 + 1] = star.color.g;\n\t\t\tmeshColors[i * 4 + 2] = star.color.b;\n\t\t\tmeshColors[i * 4 + 3] = star.absMag; // The alpha channel is for the absolute magnitude, used in the shader.\n\t\t\tmeshIndices[i] = i;\n\t\t}\n\n\t\tThreeJsHelper.setVertices(threeJsGeometry, 'position', meshPositions);\n\t\tThreeJsHelper.setVertices(threeJsGeometry, 'color', meshColors);\n\t\tThreeJsHelper.setIndices(threeJsGeometry, meshIndices);\n\t}\n\n\t/**\n\t * Unloads the resources.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Loads the star database.\n\t * @returns {Promise<Star[]>}\n\t * @private\n\t */\n\t_loadStars() {\n\t\t// The promise that is used to tell when the animdef is loaded.\n\t\treturn this.getEntity().getScene().getEngine().getDownloader().download(this._url, true).then((download) => {\n\t\t\tif (download.status === 'cancelled') {\n\t\t\t\treturn Promise.resolve([]);\n\t\t\t}\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\treturn Promise.reject(new Error('Failed to load starfield component file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t}\n\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\treturn Promise.reject(new Error('Failed to load starfield component file \"' + download.url + '\": Not a binary file.'));\n\t\t\t}\n\t\t\tconst reader = new Reader(download.content);\n\t\t\tconst numStars = reader.readInt32();\n\t\t\t/** @type {Star[]} */\n\t\t\tconst stars = [];\n\t\t\tfor (let i = 0; i < numStars; i++) {\n\t\t\t\tconst star = new Star();\n\t\t\t\tstar.mag = reader.readFloat32();\n\t\t\t\tstar.absMag = reader.readFloat32();\n\t\t\t\tstar.color.r = reader.readByte() / 255;\n\t\t\t\tstar.color.g = reader.readByte() / 255;\n\t\t\t\tstar.color.b = reader.readByte() / 255;\n\t\t\t\tstar.color.div(star.color, star.color.max());\n\t\t\t\tstar.position.y = -reader.readFloat32();\n\t\t\t\tstar.position.z = reader.readFloat32();\n\t\t\t\tstar.position.x = reader.readFloat32();\n\t\t\t\tstar.position.rotate(eclipJ2000ToJ200Rotation, star.position);\n\t\t\t\tstars.push(star);\n\t\t\t}\n\n\t\t\treturn stars;\n\t\t});\n\t}\n}\n\nStarfieldComponent.vertexShader = `\n\t#define PI 3.1415926538\n\n\tattribute vec4 color;\n\tvarying vec4 fColor;\n\n\tuniform float resolutionFactor;\n\n\t${ShaderChunkLogDepth.VertexHead}\n\n\t// Returns the watts per km^2.\n\tfloat absoluteMagnitudeToFlux(float absoluteMagnitude, float distance) {\n\t\tfloat luminosityInWatts = 3.0128e28 * pow(10.0, absoluteMagnitude / -2.5);\n\t\treturn luminosityInWatts / (4.0 * PI * distance * distance);\n\t}\n\n\tvoid main() {\n\t\tvec4 viewPosition = modelViewMatrix * vec4(position, 1.0);\n\t\tgl_Position = projectionMatrix * viewPosition;\n\t\tgl_Position.w = viewPosition.y;\n\t\tfColor = color;\n\n\t\t// Get the flux and brightness of the star at the camera's point.\n\t\tfloat absMag = color.a;\n\t\tfloat distance = length(viewPosition);\n\t\tfloat flux = absoluteMagnitudeToFlux(absMag, distance);\n\t\tfloat brightness = 2.0 * log(1.0 + flux * 1e4);\n\n\t\t// Adjust the color and size so that it is visually pleasing.\n\t\tfColor.a = clamp(brightness * resolutionFactor, 0.05, 1.0);\n\t\tgl_PointSize = clamp(brightness * 4.0 * resolutionFactor, 5.0, 24.0);\n\n\t\t// If it is too close, fade the star.\n\t\tfColor.a = mix(0.0, fColor.a, clamp((distance - 1.0e12) / 9.0e12, 0.0, 1.0));\n\n\t\t${ShaderChunkLogDepth.Vertex}\n\t}`;\n\nStarfieldComponent.fragmentShader = `\n\tprecision highp float;\n\n\tvarying vec4 fColor;\n\n\t${ShaderChunkLogDepth.FragmentHead}\n\n\tvoid main(void) {\n\t\tfloat distanceFromEdge = clamp(1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5)), 0.0, 1.0);\n\t\tfloat a = pow(distanceFromEdge, 5.0);\n\t\tgl_FragColor.rgb = fColor.rgb;\n\t\tgl_FragColor.a = fColor.a * a;\n\n\t\t${ShaderChunkLogDepth.Fragment}\n\t}`;\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tDynamoController,\n\tEntity,\n\tEntityRef,\n\tInterval,\n\tMathUtils,\n\tQuaternion,\n\tSpoutComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/**\n * Point used in Trail component.\n * @private\n */\nclass Point {\n\t/**\n\t * Constructor.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The time of the point.\n\t\t * @type {number}\n\t\t */\n\t\tthis.time = 0;\n\n\t\t/**\n\t\t * The position of the entity at this time.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position = new Vector3();\n\n\t\t/**\n\t\t * The velocity of the entity at this time.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.velocity = new Vector3();\n\t}\n}\n\n/**\n * The trail component.\n */\nexport class TrailComponent extends BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The color of the trail.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The alpha value to which the trail fades (_points[0] is this value)\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._alphaFade = 0;\n\n\t\t/**\n\t\t * The minimum width for the trail.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._widthMin = 0;\n\n\t\t/**\n\t\t * The maximum width for the trail.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._widthMax = 2;\n\n\t\t/**\n\t\t * A flag the determines whether or not the trail ignores the distance when determining visibility.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._ignoreDistance = false;\n\n\t\t/**\n\t\t * The start time. May be absolute or relative.\n\t\t * @type {number | undefined}\n\t\t * @private\n\t\t */\n\t\tthis._startTime = undefined;\n\n\t\t/**\n\t\t * The end time. May be absolute or relative.\n\t\t * @type {number|undefined}\n\t\t * @private\n\t\t */\n\t\tthis._endTime = 0;\n\n\t\t/**\n\t\t * Whether the start time is absolute or relative.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeStartTime = true;\n\n\t\t/**\n\t\t * Whether the end time is absolute or relative.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeEndTime = true;\n\n\t\t/**\n\t\t * The multiplier of the start time to use. Only valid when startTime is relative.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._startTimeMultiplier = 1;\n\n\t\t/**\n\t\t * The multiplier of the end time to use. Only valid when endTime is relative.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._endTimeMultiplier = 1;\n\n\t\t/**\n\t\t * The entity that the trail is relative to. Defaults to entity's parent if null.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._relativeToEntity = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * Flag if the trail is relative to the parent entity's orientation.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeToEntityOrientation = false;\n\n\t\t/**\n\t\t * The maximum angle in radians allowed between segments before they are split.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._angleCurveThreshold = 0.05235987755; // 3 degrees\n\n\t\t/**\n\t\t * The initial time step for following the trail. Undefined means the trail length / the angular curve threshold.\n\t\t * @type {number | undefined}\n\t\t * @private\n\t\t */\n\t\tthis._initialTimeStep = undefined;\n\n\t\t/**\n\t\t * The circular buffer of points.\n\t\t * @type {Array<Point>}\n\t\t * @private\n\t\t */\n\t\tthis._points = [];\n\n\t\t/**\n\t\t * The start index for the points array.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._pointsStart = 0;\n\n\t\t/**\n\t\t * The number of items in the points array.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._pointsCount = 0;\n\n\t\t/**\n\t\t * The entity that the trail is relative-to.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._currentRelativeToEntity = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The dash length for dashed lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dashLength = 1;\n\n\t\t/**\n\t\t * The dash gap length for dashed lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dashGapLength = 0;\n\n\t\t/**\n\t\t * The glow width for the lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._glowWidth = 0;\n\n\t\t/**\n\t\t * An offset time for the dash offset.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dashOffsetTime = 0;\n\n\t\t// Make the radius infinite since this should always show.\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Gets the color of the trail.\n\t * @returns {Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the trail. Defaults to white.\n\t * @param {Color} color - The color to set\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color);\n\t}\n\n\t/**\n\t * Gets the value to which the trail alpha fades, between 0 and 1. Defaults to 0.\n\t * @returns {number}\n\t */\n\tgetAlphaFade() {\n\t\treturn this._alphaFade;\n\t}\n\n\t/**\n\t * Sets the min and max widths for the trail.\n\t * @param {number} min\n\t * @param {number} max\n\t */\n\tsetWidths(min, max) {\n\t\tthis._widthMin = min;\n\t\tthis._widthMax = max;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'widthMin', min);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'widthMax', max);\n\t}\n\n\t/**\n\t * Sets the value to which trail alpha fades, between 0 and 1. Defaults to 0.\n\t * @param {number} alphaFade - the value to set\n\t */\n\tsetAlphaFade(alphaFade) {\n\t\tthis._alphaFade = alphaFade;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'alphaFade', alphaFade);\n\t}\n\n\t/**\n\t * Sets the line dash and gap length.\n\t * @param {number} dashLength\n\t * @param {number} dashGapLength\n\t */\n\tsetDashLength(dashLength, dashGapLength) {\n\t\tthis._dashLength = dashLength;\n\t\tthis._dashGapLength = dashGapLength;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'dashLength', dashLength);\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'dashGapLength', dashGapLength);\n\t}\n\n\t/**\n\t * Sets the glow for the lines.\n\t * @param {number} glowWidth\n\t */\n\tsetGlowWidth(glowWidth) {\n\t\tthis._glowWidth = glowWidth;\n\t\tThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'glowWidth', this._glowWidth);\n\t}\n\n\t/**\n\t * Gets the start time of the trail. If relative start time is true, this is a positive offset time. Otherwise it is absolute. If it is undefined and relative time is true, it is a dynamic length. Defaults to undefined.\n\t * @returns {number | undefined}\n\t */\n\tgetStartTime() {\n\t\treturn this._startTime;\n\t}\n\n\t/**\n\t * Sets the start time of the trail. If relative start time is true, this is a positive offset time. Otherwise it is absolute.\n\t * If it is undefined and relative start time is true, the length is dynamic. Default is undefined.\n\t * @param {number | undefined} value - The value to set\n\t */\n\tsetStartTime(value) {\n\t\tthis._startTime = value;\n\t}\n\n\t/**\n\t * Gets the end time of the trail. If relative time is true, this is a positive offset time. Otherwise it is absolute. If it is undefined and relative time is true, it is a dynamic length. Defaults to 0.\n\t * @returns {number | undefined}\n\t */\n\tgetEndTime() {\n\t\treturn this._endTime;\n\t}\n\n\t/**\n\t * Sets the end time of the trail. If relative end time is true, this is a positive offset time. Otherwise it is absolute.\n\t * If it is undefined and relative time is true, the length is dynamic.\n\t * @param {number | undefined} value - The value to set\n\t */\n\tsetEndTime(value) {\n\t\tthis._endTime = value;\n\t}\n\n\t/**\n\t * Returns true if the trail start time is relative to the current time. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRelativeStartTime() {\n\t\treturn this._relativeStartTime;\n\t}\n\n\t/**\n\t * Sets if the trail start time is relative to the current time.\n\t * @param {boolean} value - The value to set\n\t */\n\tsetRelativeStartTime(value) {\n\t\tthis._relativeStartTime = value;\n\t\tthis.resetPoints();\n\t}\n\n\t/**\n\t * Returns true if the trail end time is relative to the current time. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRelativeEndTime() {\n\t\treturn this._relativeEndTime;\n\t}\n\n\t/**\n\t * Sets if the trail end time is relative to the current time.\n\t * @param {boolean} value - The value to set\n\t */\n\tsetRelativeEndTime(value) {\n\t\tthis._relativeEndTime = value;\n\t\tthis.resetPoints();\n\t}\n\n\t/**\n\t * Gets the multiplier of the start time to use. Only valid when startTime is relative. Defaults to 1.\n\t * @returns {number}\n\t */\n\tgetStartTimeMultiplier() {\n\t\treturn this._startTimeMultiplier;\n\t}\n\n\t/**\n\t * Sets the multiplier of the start time to use. Only valid when startTime is relative. Defaults to 1.\n\t * @param {number} startTimeMultiplier\n\t */\n\tsetStartTimeMultiplier(startTimeMultiplier) {\n\t\tthis._startTimeMultiplier = startTimeMultiplier;\n\t}\n\n\t/**\n\t * Gets the multiplier of the end time to use. Only valid when endTime is relative. Defaults to 1.\n\t * @returns {number}\n\t */\n\tgetEndTimeMultiplier() {\n\t\treturn this._endTimeMultiplier;\n\t}\n\n\t/**\n\t * Sets the multiplier of the end time to use. Only valid when endTime is relative. Defaults to 1.\n\t * @param {number} endTimeMultiplier\n\t */\n\tsetEndTimeMultiplier(endTimeMultiplier) {\n\t\tthis._endTimeMultiplier = endTimeMultiplier;\n\t}\n\n\t/**\n\t * Gets the entity name that the trail is relative to.\n\t * @returns {string}\n\t */\n\tgetRelativeToEntity() {\n\t\treturn this._relativeToEntity.getName();\n\t}\n\n\t/**\n\t * Sets the entity name that the trail is relative to. Defaults to the parent if ''.\n\t * @param {string} entityName\n\t */\n\tsetRelativeToEntity(entityName) {\n\t\tthis._relativeToEntity.setName(entityName);\n\t\tthis._currentRelativeToEntity.setName(entityName);\n\t\tthis.resetPoints();\n\t}\n\n\t/**\n\t * Returns true if the trail is relative to the parent entity's orientation. Defaults to false.\n\t * @returns {boolean}\n\t */\n\tisRelativeToEntityOrientation() {\n\t\treturn this._relativeToEntityOrientation;\n\t}\n\n\t/**\n\t * Sets if the trail is relative to the parent entity's orientation. Used for landers and ground objects.\n\t * @param {boolean} enable\n\t */\n\tsetRelativeToEntityOrientation(enable) {\n\t\tthis._relativeToEntityOrientation = enable;\n\t\tif (!enable) {\n\t\t\tThreeJsHelper.setOrientation(this.getThreeJsObjects(), Quaternion.Identity);\n\t\t}\n\t\tthis.resetPoints();\n\t}\n\n\t/**\n\t * Gets the maximum angle in radians allowed between segments before they are split.\n\t * @returns {number}\n\t */\n\tgetAngleCurveThreshold() {\n\t\treturn this._angleCurveThreshold;\n\t}\n\n\t/**\n\t * Sets the maximum angle in radians allowed between segments before they are split. Defaults to 3 degrees.\n\t * @param {number} angleCurveThreshold\n\t */\n\tsetAngleCurveThreshold(angleCurveThreshold) {\n\t\tthis._angleCurveThreshold = angleCurveThreshold;\n\t\tthis.resetPoints();\n\t}\n\n\t/**\n\t * Gets the initial time step for following the trail. Undefined means the trail length / the angular curve threshold.\n\t * @returns {number | undefined}\n\t */\n\tgetInitialTimeStep() {\n\t\treturn this._initialTimeStep;\n\t}\n\n\t/**\n\t * Sets the initial time step for following the trail. Undefined means the trail length / the angular curve threshold. Defaults to undefined.\n\t * @param {number | undefined} initialTimeStep\n\t */\n\tsetInitialTimeStep(initialTimeStep) {\n\t\tthis._initialTimeStep = initialTimeStep;\n\t\tthis.resetPoints();\n\t}\n\n\t/**\n\t * Ignores the distance when determining whether it should show the trail or not. Defaults to false.\n\t * @param {boolean} enable\n\t */\n\tsetIgnoreDistance(enable) {\n\t\tthis._ignoreDistance = enable;\n\t}\n\n\t/**\n\t * Resets the points on the trail, so that they will be newly added. Useful for when the entity's controllers have bee modified and the whole trail needs to be updated.\n\t */\n\tresetPoints() {\n\t\tthis._points = [];\n\t\tthis._pointsCount = 0;\n\t\tthis._pointsStart = 0;\n\n\t\tif (this.getThreeJsObjects().length > 0) {\n\t\t\tconst geometry = (/** @type {THREE.Mesh} */(this.getThreeJsObjects()[0])).geometry;\n\t\t\tconst newArray = new Float32Array(0);\n\t\t\tconst buffer = new THREE.InterleavedBuffer(newArray, TrailComponent.VERTEX_SIZE);\n\t\t\tgeometry.setAttribute('position', new THREE.InterleavedBufferAttribute(buffer, 3, 0, false));\n\t\t\tgeometry.setAttribute('positionPrev', new THREE.InterleavedBufferAttribute(buffer, 3, 3, false));\n\t\t\tgeometry.setAttribute('positionNext', new THREE.InterleavedBufferAttribute(buffer, 3, 6, false));\n\t\t\tgeometry.setAttribute('side', new THREE.InterleavedBufferAttribute(buffer, 1, 9, false));\n\t\t\tgeometry.setAttribute('index', new THREE.InterleavedBufferAttribute(buffer, 1, 10, false));\n\t\t\tgeometry.setAttribute('dashOffset', new THREE.InterleavedBufferAttribute(buffer, 1, 11, false));\n\n\t\t\t// Setup the index buffer.\n\t\t\tgeometry.setIndex(new THREE.BufferAttribute(new Uint16Array(0), 1));\n\t\t}\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\t// Create the material.\n\t\tconst material = this.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('trail');\n\t\tthis.getThreeJsMaterials().push(material);\n\t\tmaterial.uniforms['dashLength'].value = this._dashLength;\n\t\tmaterial.uniforms['dashGapLength'].value = this._dashGapLength;\n\t\tmaterial.uniforms['indexStart'].value = 0;\n\t\tmaterial.uniforms['indexCount'].value = 0;\n\t\tmaterial.uniforms['indexLength'].value = 0;\n\t\tmaterial.uniforms['color'].value.set(this._color.r, this._color.g, this._color.b, this._color.a);\n\t\tmaterial.uniforms['widthMin'].value = this._widthMin;\n\t\tmaterial.uniforms['widthMax'].value = this._widthMax;\n\t\tmaterial.uniforms['glowWidth'].value = this._glowWidth;\n\t\tmaterial.uniforms['alphaFade'].value = this._alphaFade;\n\n\t\t// Create the object.\n\t\tconst threeJsObject = ThreeJsHelper.createMeshObject(this, material, [\n\t\t\t{ name: 'position', dimensions: 3 },\n\t\t\t{ name: 'positionPrev', dimensions: 3 },\n\t\t\t{ name: 'positionNext', dimensions: 3 },\n\t\t\t{ name: 'side', dimensions: 1 },\n\t\t\t{ name: 'index', dimensions: 1 },\n\t\t\t{ name: 'dashOffset', dimensions: 1 }\n\t\t], true);\n\t\tthis.getThreeJsObjects().push(threeJsObject);\n\n\t\t// Return the resolved promise.\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tthis.getEntity().getScene().getEngine().getMaterialManager().release(this.getThreeJsMaterials()[0]);\n\t\tThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._points = [];\n\t\tthis._pointsCount = 0;\n\t\tthis._pointsStart = 0;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// If the parent has changed, we need to reset the points so that they work with the new parent.\n\t\tif (this._relativeToEntity.getName() === '' && this.getEntity().getParent() !== null && this._currentRelativeToEntity.get() !== this.getEntity().getParent()) {\n\t\t\tthis._currentRelativeToEntity.setName(this.getEntity().getParent().getName());\n\t\t\tthis.resetPoints();\n\t\t}\n\t\tif (this._currentRelativeToEntity === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the points and set the calculated positions and colors.\n\t\tthis._updatePoints();\n\n\t\t// Set the index start, count, and length uniforms.\n\t\tconst material = this.getThreeJsMaterials()[0];\n\t\tmaterial.uniforms['indexStart'].value = this._pointsStart;\n\t\tmaterial.uniforms['indexCount'].value = this._pointsCount;\n\t\tmaterial.uniforms['indexLength'].value = this._points.length;\n\n\t\t// Set the alpha multiplier based on conditions.\n\t\tlet alphaMultiplier = 1.0;\n\t\tif (!this._ignoreDistance) {\n\t\t\t// Set the alpha multiplier based on the camera distance to the entity.\n\t\t\tconst normalizedSizeOfEntity = this.getEntity().getNormalSpaceExtentsRadius(camera);\n\t\t\talphaMultiplier *= (0.02 - normalizedSizeOfEntity) / 0.02;\n\n\t\t\t// When the position is too far, there's imprecision \"wiggle\" in the shader. This fades the trail before the wiggle occurs.\n\t\t\tconst camDistOverPosDist = this.getEntity().getCameraSpacePosition(camera).magnitude() / this.getEntity().getPosition().magnitude();\n\t\t\talphaMultiplier *= MathUtils.clamp01(camDistOverPosDist * 1000);\n\t\t}\n\t\tThreeJsHelper.setUniformNumber(material, 'alphaMultiplier', alphaMultiplier);\n\n\t\t// Set the pixel size.\n\t\t// If the camera is a Spout camera, make the lines thicker and use Spout for the render size.\n\t\tconst pixelSize = Vector2.pool.get();\n\t\tif (camera instanceof SpoutComponent) {\n\t\t\tpixelSize.set(camera.getRenderWidth() * 0.1, camera.getRenderWidth() * 0.5 * 0.1);\n\t\t}\n\t\t// Otherwise use the viewport size.\n\t\telse {\n\t\t\tpixelSize.copy(camera.getViewport().getBounds().size);\n\t\t}\n\t\tThreeJsHelper.setUniformVector2(material, 'pixelSize', pixelSize);\n\t\tVector2.pool.release(pixelSize);\n\n\t\t// Set the position and orientation of the Three.js objects.\n\t\tconst currentRelativeToEntity = this._currentRelativeToEntity.get();\n\t\tif (currentRelativeToEntity !== null) {\n\t\t\t// Set the Three.js object position the relative-to-entity's camera-space position.\n\t\t\tThreeJsHelper.setPosition(this.getThreeJsObjects(), currentRelativeToEntity.getCameraSpacePosition(camera));\n\n\t\t\t// If relativeToEntityOrientation is set, set the orientation to that entity.\n\t\t\tif (this._relativeToEntityOrientation) {\n\t\t\t\tThreeJsHelper.setOrientation(this.getThreeJsObjects(), currentRelativeToEntity.getOrientation());\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the points array.\n\t * @private\n\t */\n\t_updatePoints() {\n\t\tconst intervalForUpdate = Interval.pool.get();\n\n\t\t// Determine the interval that will be updated.\n\t\tthis._getIntervalForUpdate(intervalForUpdate);\n\n\t\t// If one of the values is NaN, don't update the trail.\n\t\tif (isNaN(intervalForUpdate.min) || isNaN(intervalForUpdate.max)) {\n\t\t\tInterval.pool.release(intervalForUpdate);\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the step for the vertices to be added.\n\t\t// For a circular trail, 360 degrees total / 3 degrees each = 120 steps.\n\t\tconst initialTimeStep = this._initialTimeStep ?? (intervalForUpdate.length() * this._angleCurveThreshold / (2 * Math.PI));\n\n\t\t// Get the start and end index ranges.\n\t\tconst updateRange = Interval.pool.get();\n\t\tupdateRange.set(Number.POSITIVE_INFINITY, 0);\n\n\t\t// FRONT POINTS\n\n\t\t// Pop off one end point.\n\t\tif (this._relativeStartTime && this._pointsCount > 0 && this._points[this._pointsStart].time !== intervalForUpdate.min) {\n\t\t\tthis._popFrontPoint(updateRange);\n\t\t}\n\n\t\t// Clear off any excess end points.\n\t\twhile (this._pointsCount > 0 && this._points[this._pointsStart].time < intervalForUpdate.min) {\n\t\t\tthis._popFrontPoint(updateRange);\n\t\t}\n\n\t\t// Add on any new end points.\n\t\tconst orientation = Quaternion.pool.get();\n\t\twhile (this._pointsCount === 0 || this._points[this._pointsStart].time > intervalForUpdate.min) {\n\t\t\t// If we have a ton of points and we're in relative mode, don't add any more.\n\t\t\tif (this._pointsCount >= 16000 && this._relativeStartTime) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Create new point.\n\t\t\tthis._pushFrontPoint(updateRange);\n\t\t\tconst nextPoint = this._points[this._pointsStart];\n\n\t\t\t// Get a starting step.\n\t\t\tlet minStep = 1;\n\t\t\tlet maxStep = Number.POSITIVE_INFINITY;\n\t\t\tlet step = initialTimeStep;\n\t\t\tif (this._pointsCount > 2) {\n\t\t\t\tstep = this._points[(this._pointsStart + 2) % this._points.length].time\n\t\t\t\t\t- this._points[(this._pointsStart + 1) % this._points.length].time;\n\t\t\t}\n\n\t\t\t// Get the next time, taking into account curvature.\n\t\t\tlet curvatureCheckCount = 0;\n\t\t\twhile (curvatureCheckCount < 20) {\n\t\t\t\tlet nextTime = intervalForUpdate.max;\n\t\t\t\tif (this._pointsCount > 1) {\n\t\t\t\t\tnextTime = this._points[(this._pointsStart + 1) % this._points.length].time - step;\n\t\t\t\t}\n\t\t\t\tif (nextTime < intervalForUpdate.min) {\n\t\t\t\t\tnextTime = intervalForUpdate.min;\n\t\t\t\t}\n\n\t\t\t\t// Get the next position and/or orientation states.\n\t\t\t\tnextPoint.time = nextTime;\n\t\t\t\tthis._getPositionAndVelocity(nextPoint.position, nextPoint.velocity, nextPoint.time);\n\n\t\t\t\t// Invalid position and/or orientation states, so we can't draw any more trail.\n\t\t\t\tif (nextPoint.position.isNaN() || (this._relativeToEntityOrientation && orientation.isNaN())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Get angle for curvature checking.\n\t\t\t\tlet angle = 0;\n\t\t\t\tif (this._pointsCount >= 2) {\n\t\t\t\t\tangle = this._points[(this._pointsStart + 1) % this._points.length].velocity.angle(nextPoint.velocity);\n\t\t\t\t}\n\n\t\t\t\t// Grow or shrink the step depending on the angle.\n\t\t\t\tif (angle > this._angleCurveThreshold) { // too big of an angle, so shrink the step.\n\t\t\t\t\tmaxStep = step;\n\t\t\t\t\tstep = (minStep + step) / 2.0;\n\t\t\t\t}\n\t\t\t\telse if (this._pointsCount > 1 && step < initialTimeStep * 10 && (isNaN(angle) || angle < this._angleCurveThreshold / 3) && nextTime !== intervalForUpdate.min) { // too small of an angle, so grow the step.\n\t\t\t\t\tminStep = step;\n\t\t\t\t\tif (maxStep === Number.POSITIVE_INFINITY) {\n\t\t\t\t\t\tstep *= 2;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstep = (step + maxStep) / 2.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcurvatureCheckCount++;\n\t\t\t}\n\t\t\tif (nextPoint.position.isNaN() || (this._relativeToEntityOrientation && orientation.isNaN())) {\n\t\t\t\tthis._popFrontPoint(updateRange);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// BACK POINTS\n\n\t\t// Pop off one end point.\n\t\tif (this._relativeEndTime && this._pointsCount > 0 && this._points[(this._pointsStart + this._pointsCount - 1) % this._points.length].time !== intervalForUpdate.max) {\n\t\t\tthis._popBackPoint(updateRange);\n\t\t}\n\n\t\t// Clear off any excess end points.\n\t\twhile (this._pointsCount > 0 && this._points[(this._pointsStart + this._pointsCount - 1) % this._points.length].time > intervalForUpdate.max) {\n\t\t\tthis._popBackPoint(updateRange);\n\t\t}\n\n\t\t// Add on any new end points.\n\t\twhile (this._pointsCount === 0 || this._points[(this._pointsStart + this._pointsCount - 1) % this._points.length].time < intervalForUpdate.max) {\n\t\t\t// If we have a ton of points and we're in relative mode, don't add any more.\n\t\t\tif (this._pointsCount >= 16000 && this._relativeEndTime) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Create new point.\n\t\t\tthis._pushBackPoint(updateRange);\n\t\t\tconst nextPoint = this._points[(this._pointsStart + this._pointsCount - 1) % this._points.length];\n\n\t\t\t// Get a starting step.\n\t\t\tlet minStep = 1;\n\t\t\tlet maxStep = Number.POSITIVE_INFINITY;\n\t\t\tlet step = initialTimeStep;\n\t\t\tif (this._pointsCount > 2) {\n\t\t\t\tstep = this._points[(this._pointsStart + this._pointsCount - 2) % this._points.length].time\n\t\t\t\t\t- this._points[(this._pointsStart + this._pointsCount - 3) % this._points.length].time;\n\t\t\t}\n\n\t\t\t// Get the next time, taking into account curvature.\n\t\t\tlet curvatureCheckCount = 0;\n\t\t\twhile (curvatureCheckCount < 20) {\n\t\t\t\tlet nextTime = intervalForUpdate.min;\n\t\t\t\tif (this._pointsCount > 1) {\n\t\t\t\t\tnextTime = this._points[(this._pointsStart + this._pointsCount - 2) % this._points.length].time + step;\n\t\t\t\t}\n\t\t\t\tif (nextTime > intervalForUpdate.max) {\n\t\t\t\t\tnextTime = intervalForUpdate.max;\n\t\t\t\t}\n\n\t\t\t\t// Get the next position and/or orientation states.\n\t\t\t\tnextPoint.time = nextTime;\n\t\t\t\tthis._getPositionAndVelocity(nextPoint.position, nextPoint.velocity, nextPoint.time);\n\n\t\t\t\t// Invalid position and/or orientation states, so we can't draw any more trail.\n\t\t\t\tif (nextPoint.position.isNaN() || (this._relativeToEntityOrientation && orientation.isNaN())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Get angle for curvature checking.\n\t\t\t\tlet angle = 0;\n\t\t\t\tif (this._pointsCount >= 2) {\n\t\t\t\t\tangle = this._points[(this._pointsStart + this._pointsCount - 2) % this._points.length].velocity.angle(nextPoint.velocity);\n\t\t\t\t}\n\n\t\t\t\t// Grow or shrink the step depending on the angle.\n\t\t\t\tif (angle > this._angleCurveThreshold) { // too big of an angle, so shrink the step.\n\t\t\t\t\tmaxStep = step;\n\t\t\t\t\tstep = (minStep + step) / 2.0;\n\t\t\t\t}\n\t\t\t\telse if (this._pointsCount > 1 && step < initialTimeStep * 10 && (isNaN(angle) || angle < this._angleCurveThreshold / 3) && nextTime !== intervalForUpdate.max) { // too small of an angle, so grow the step.\n\t\t\t\t\tminStep = step;\n\t\t\t\t\tif (maxStep === Number.POSITIVE_INFINITY) {\n\t\t\t\t\t\tstep *= 2;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstep = (step + maxStep) / 2.0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcurvatureCheckCount++;\n\t\t\t}\n\t\t\tif (nextPoint.position.isNaN() || (this._relativeToEntityOrientation && orientation.isNaN())) {\n\t\t\t\tthis._popBackPoint(updateRange);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tInterval.pool.release(intervalForUpdate);\n\t\tQuaternion.pool.release(orientation);\n\n\t\t// UPDATE THE VERTEX ARRAY\n\n\t\tconst geometry = (/** @type {THREE.Mesh} */(this.getThreeJsObjects()[0])).geometry;\n\t\tconst buffer = /** @type {THREE.InterleavedBufferAttribute} */(geometry.attributes['positionCurr']).data;\n\t\tconst array = /** @type {Float32Array} */(buffer.array);\n\t\tfor (let i = updateRange.min, max = Math.min(this._points.length - 1, updateRange.max); i <= max; i++) {\n\t\t\tconst thisPosition = this._points[i].position;\n\t\t\tconst prevPosition = !isNaN(this._points[(i + this._points.length - 1) % this._points.length].position.x)\n\t\t\t\t? this._points[(i + this._points.length - 1) % this._points.length].position\n\t\t\t\t: thisPosition;\n\t\t\tconst nextPosition = !isNaN(this._points[(i + 1) % this._points.length].position.x)\n\t\t\t\t? this._points[(i + 1) % this._points.length].position\n\t\t\t\t: thisPosition;\n\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 0] = thisPosition.x;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 1] = thisPosition.y;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 2] = thisPosition.z;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 0] = thisPosition.x;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 1] = thisPosition.y;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 2] = thisPosition.z;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 3] = prevPosition.x;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 4] = prevPosition.y;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 5] = prevPosition.z;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 3] = prevPosition.x;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 4] = prevPosition.y;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 5] = prevPosition.z;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 6] = nextPosition.x;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 7] = nextPosition.y;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 8] = nextPosition.z;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 6] = nextPosition.x;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 7] = nextPosition.y;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 8] = nextPosition.z;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 9] = +1;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 9] = -1;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 10] = i;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 10] = i;\n\t\t\tarray[i * 2 * TrailComponent.VERTEX_SIZE + 11] = this._points[i].time - this._dashOffsetTime;\n\t\t\tarray[(i * 2 + 1) * TrailComponent.VERTEX_SIZE + 11] = this._points[i].time - this._dashOffsetTime;\n\t\t}\n\t\tbuffer.needsUpdate = true;\n\t\tbuffer.updateRange.offset = updateRange.max < updateRange.min ? 0 : updateRange.min * 2 * TrailComponent.VERTEX_SIZE;\n\t\tbuffer.updateRange.count = updateRange.max < updateRange.min ? -1 : (updateRange.length() + 1) * 2 * TrailComponent.VERTEX_SIZE;\n\n\t\tInterval.pool.release(updateRange);\n\t}\n\n\t/**\n\t * Gets the interval for updating the points.\n\t * @param {Interval} intervalForUpdate\n\t * @private\n\t */\n\t_getIntervalForUpdate(intervalForUpdate) {\n\t\tconst currentTime = (this._relativeStartTime || this._relativeEndTime)\n\t\t\t? this.getEntity().getScene().getEngine().getTime()\n\t\t\t: undefined;\n\t\t// Set the interval min from the start time.\n\t\tif (this._relativeStartTime) {\n\t\t\tif (this._startTime !== undefined) {\n\t\t\t\tintervalForUpdate.min = currentTime - this._startTimeMultiplier * this._startTime;\n\t\t\t}\n\t\t\telse { // We're using a dynamic length, dependent on the orbital parameters.\n\t\t\t\tintervalForUpdate.min = currentTime - this._startTimeMultiplier * this._getAutoLength(currentTime);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tintervalForUpdate.min = this._startTime;\n\t\t}\n\t\t// Set the interval max from the end time.\n\t\tif (this._relativeEndTime) {\n\t\t\tif (this._endTime !== undefined) {\n\t\t\t\tintervalForUpdate.max = currentTime + this._endTimeMultiplier * this._endTime;\n\t\t\t}\n\t\t\telse { // We're using a dynamic length, dependent on the position, speed, and orbital parameters.\n\t\t\t\tintervalForUpdate.max = currentTime + this._endTimeMultiplier * this._getAutoLength(currentTime);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tintervalForUpdate.max = this._endTime;\n\t\t}\n\t\tintervalForUpdate.intersection(intervalForUpdate, this.getEntity().getPositionCoverage());\n\t}\n\n\t/**\n\t * Pops the front of the positions array.\n\t * @param {Interval} updateRange\n\t * @private\n\t */\n\t_popFrontPoint(updateRange) {\n\t\tif (this._pointsCount > 0) {\n\t\t\tthis._resize(this._pointsCount - 1, updateRange);\n\t\t\tupdateRange.expandTo(this._pointsStart);\n\t\t\tif (this._pointsCount > 1) {\n\t\t\t\tupdateRange.expandTo((this._pointsStart + 1) % this._points.length);\n\t\t\t}\n\t\t\tthis._points[this._pointsStart].position.x = NaN;\n\t\t\tthis._pointsStart = (this._pointsStart + 1) % this._points.length;\n\t\t\tthis._pointsCount -= 1;\n\t\t}\n\t}\n\n\t/**\n\t * Pops the back of the positions array.\n\t * @param {Interval} updateRange\n\t * @private\n\t */\n\t_popBackPoint(updateRange) {\n\t\tif (this._pointsCount > 0) {\n\t\t\tthis._resize(this._pointsCount - 1, updateRange);\n\t\t\tthis._pointsCount -= 1;\n\t\t\tupdateRange.expandTo((this._pointsStart + this._pointsCount) % this._points.length);\n\t\t\tif (this._pointsCount > 0) {\n\t\t\t\tupdateRange.expandTo((this._pointsStart + this._pointsCount - 1) % this._points.length);\n\t\t\t}\n\t\t\tthis._points[(this._pointsStart + this._pointsCount) % this._points.length].position.x = NaN;\n\t\t}\n\t}\n\n\t/**\n\t * Pushes a value to the front of the positions array.\n\t * @param {Interval} updateRange\n\t * @private\n\t */\n\t_pushFrontPoint(updateRange) {\n\t\tthis._resize(this._pointsCount + 1, updateRange);\n\t\tthis._pointsStart = (this._pointsStart + this._points.length - 1) % this._points.length;\n\t\tupdateRange.expandTo(this._pointsStart);\n\t\tif (this._pointsCount > 0) {\n\t\t\tupdateRange.expandTo((this._pointsStart + 1) % this._points.length);\n\t\t}\n\t\tthis._pointsCount += 1;\n\t}\n\n\t/**\n\t * Pushes a value to the back of the positions array.\n\t * @param {Interval} updateRange\n\t * @private\n\t */\n\t_pushBackPoint(updateRange) {\n\t\tthis._resize(this._pointsCount + 1, updateRange);\n\t\tthis._pointsCount += 1;\n\t\tupdateRange.expandTo((this._pointsStart + this._pointsCount - 1) % this._points.length);\n\t\tif (this._pointsCount > 1) {\n\t\t\tupdateRange.expandTo((this._pointsStart + this._pointsCount - 2) % this._points.length);\n\t\t}\n\t}\n\n\t/**\n\t * Pops the front of the positions array.\n\t * @param {number} newCount\n\t * @param {Interval} updateRange\n\t * @private\n\t */\n\t_resize(newCount, updateRange) {\n\t\tlet resizing = false;\n\t\tlet newSize = this._points.length;\n\t\tif (newCount + 1 > this._points.length\n\t\t\t|| (newCount <= this._points.length / 4 && newCount >= 8)) {\n\t\t\tresizing = true;\n\t\t}\n\t\tif (resizing) {\n\t\t\tnewSize = Math.max(8, MathUtils.ceilPow2(newCount + 1));\n\t\t\tconst points = /** @type {Point[]} */([]);\n\t\t\t// Copy over the original array of points, moving everything to start at 0.\n\t\t\tfor (let i = 0, l = this._pointsCount; i < l; i++) {\n\t\t\t\tpoints.push(this._points[(this._pointsStart + i) % this._points.length]);\n\t\t\t}\n\t\t\tthis._pointsStart = 0;\n\t\t\t// Double the size of the array of points.\n\t\t\tfor (let i = this._pointsCount, l = newSize; i < l; i++) {\n\t\t\t\tconst point = new Point();\n\t\t\t\tpoint.position.x = Number.NaN;\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t\tthis._points = points;\n\n\t\t\t// Update the vertex buffer.\n\t\t\tconst geometry = (/** @type {THREE.Mesh} */(this.getThreeJsObjects()[0])).geometry;\n\t\t\tconst newArray = new Float32Array(this._points.length * 2 * TrailComponent.VERTEX_SIZE);\n\t\t\tconst buffer = new THREE.InterleavedBuffer(newArray, TrailComponent.VERTEX_SIZE);\n\t\t\tgeometry.setAttribute('positionCurr', new THREE.InterleavedBufferAttribute(buffer, 3, 0, false));\n\t\t\tgeometry.setAttribute('positionPrev', new THREE.InterleavedBufferAttribute(buffer, 3, 3, false));\n\t\t\tgeometry.setAttribute('positionNext', new THREE.InterleavedBufferAttribute(buffer, 3, 6, false));\n\t\t\tgeometry.setAttribute('side', new THREE.InterleavedBufferAttribute(buffer, 1, 9, false));\n\t\t\tgeometry.setAttribute('index', new THREE.InterleavedBufferAttribute(buffer, 1, 10, false));\n\t\t\tgeometry.setAttribute('dashOffset', new THREE.InterleavedBufferAttribute(buffer, 1, 11, false));\n\n\t\t\t// Setup the index buffer.\n\t\t\tconst indices = new Uint16Array(this._points.length * 6);\n\t\t\tfor (let i = 0; i < this._points.length; i++) {\n\t\t\t\tindices[i * 6 + 0] = (i * 2 + 0) % (this._points.length * 2);\n\t\t\t\tindices[i * 6 + 1] = (i * 2 + 2) % (this._points.length * 2);\n\t\t\t\tindices[i * 6 + 2] = (i * 2 + 3) % (this._points.length * 2);\n\t\t\t\tindices[i * 6 + 3] = (i * 2 + 3) % (this._points.length * 2);\n\t\t\t\tindices[i * 6 + 4] = (i * 2 + 1) % (this._points.length * 2);\n\t\t\t\tindices[i * 6 + 5] = (i * 2 + 0) % (this._points.length * 2);\n\t\t\t}\n\t\t\tgeometry.setIndex(new THREE.BufferAttribute(indices, 1));\n\n\t\t\t// Set the dash offset time, since every vertex will be updated anyway.\n\t\t\tthis._dashOffsetTime = this._points[this._pointsStart].time;\n\n\t\t\tupdateRange.min = 0;\n\t\t\tupdateRange.max = newSize;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the auto-length of a trail, if the start or end time is undefined.\n\t * @param {number} time\n\t * @returns {number}\n\t * @private\n\t */\n\t_getAutoLength(time) {\n\t\t// Find the last dynamo that contains the time.\n\t\tlet dynamoController = null;\n\t\tfor (let i = 0; ; i++) {\n\t\t\tconst aDynamoController = this.getEntity().getControllerByClass(DynamoController, i);\n\t\t\tif (aDynamoController === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (aDynamoController.getPointType() === 'orb' && aDynamoController.getCoverage().contains(time)) {\n\t\t\t\tdynamoController = aDynamoController;\n\t\t\t}\n\t\t}\n\t\t// Get the specific angular momentum and velocity for the calcs.\n\t\tconst specificAngularMomentum = Vector3.pool.get();\n\t\tconst velocityAtTime = Vector3.pool.get();\n\t\tthis.getEntity().getPositionAtTime(specificAngularMomentum, time);\n\t\tthis.getEntity().getVelocityAtTime(velocityAtTime, time);\n\t\tspecificAngularMomentum.cross(specificAngularMomentum, velocityAtTime);\n\t\tlet period = 0;\n\t\tif (dynamoController !== null) {\n\t\t\t// Get the dynamo params for the calcs.\n\t\t\tconst eccentricity = dynamoController.getEccentricity(time);\n\t\t\tconst gravParameter = dynamoController.getHeaderValue('gravitationalParameter1') + dynamoController.getHeaderValue('gravitationalParameter2');\n\t\t\tconst specificOrbitalEnergy = -0.5 * (gravParameter * gravParameter / specificAngularMomentum.magnitudeSqr()) * (1 - eccentricity * eccentricity);\n\t\t\tperiod = 2 * Math.PI * gravParameter / Math.sqrt(8.0 * Math.abs(Math.min(1.0, specificOrbitalEnergy * specificOrbitalEnergy * specificOrbitalEnergy)));\n\t\t}\n\t\telse {\n\t\t\tperiod = 2 * Math.PI * specificAngularMomentum.magnitude() / velocityAtTime.magnitudeSqr();\n\t\t}\n\t\tVector3.pool.release(specificAngularMomentum);\n\t\tVector3.pool.release(velocityAtTime);\n\t\treturn period;\n\t}\n\n\t/**\n\t * Gets the position and the velocity relative to the relative-to entity at the given time.\n\t * @param {Vector3} position\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @private\n\t */\n\t_getPositionAndVelocity(position, velocity, time) {\n\t\tconst relativeToEntity = this._relativeToEntity.getName() !== '' ? this._relativeToEntity.get() : this.getEntity().getParent();\n\t\tif (this._relativeToEntity.getName() === '') { // The relative to entity is the parent at the given time.\n\t\t\tthis.getEntity().getPositionAtTime(position, time);\n\t\t\tthis.getEntity().getVelocityAtTime(velocity, time);\n\t\t\tconst parentOfPositionName = this.getEntity().getParentAtTime(time);\n\t\t\tconst currentRelativeToEntity = this._currentRelativeToEntity.get();\n\t\t\tif (currentRelativeToEntity !== null && parentOfPositionName !== '' && parentOfPositionName !== currentRelativeToEntity.getName()) {\n\t\t\t\tconst parentOfPosition = this.getEntity().getScene().getEntity(parentOfPositionName);\n\t\t\t\tif (parentOfPosition !== null) {\n\t\t\t\t\tparentOfPosition.getPositionRelativeToEntity(position, position, currentRelativeToEntity, time);\n\t\t\t\t\tparentOfPosition.getVelocityRelativeToEntity(velocity, velocity, currentRelativeToEntity, time);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tposition.copy(Vector3.NaN);\n\t\t\t\t\tvelocity.copy(Vector3.NaN);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (relativeToEntity !== null) {\n\t\t\tthis.getEntity().getPositionRelativeToEntity(position, Vector3.Zero, relativeToEntity, time);\n\t\t\tthis.getEntity().getVelocityRelativeToEntity(velocity, Vector3.Zero, relativeToEntity, time);\n\t\t}\n\t\telse {\n\t\t\tposition.copy(Vector3.NaN);\n\t\t\tvelocity.copy(Vector3.NaN);\n\t\t}\n\t\tif (this._relativeToEntityOrientation && relativeToEntity !== null) {\n\t\t\tconst relativeToEntityOrientation = Quaternion.pool.get();\n\t\t\trelativeToEntity.getOrientationAtTime(relativeToEntityOrientation, time);\n\t\t\tposition.rotateInverse(relativeToEntityOrientation, position);\n\t\t\tvelocity.rotateInverse(relativeToEntityOrientation, velocity);\n\t\t\tQuaternion.pool.release(relativeToEntityOrientation);\n\t\t}\n\t}\n}\n\nTrailComponent.VERTEX_SIZE = 12;\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tEntityRef,\n\tModelComponent,\n\tQuaternion,\n\tTHREE,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller that aligns an entity with another entity on arbitrary axes.\n */\nexport class AlignController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The align type for primary alignment. It can be 'none', 'align', 'velocity', 'point', or 'position'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._primaryAlignType = 'none';\n\n\t\t/**\n\t\t * The axis of this entity that will be used for primary alignment.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._primaryAxis = new Vector3(1, 0, 0);\n\t\tthis._primaryAxis.freeze();\n\n\t\t/**\n\t\t * The target entity for primary alignment.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._primaryTargetEntity = new EntityRef(this.getEntity().getScene());\n\t\tthis._primaryTargetEntity.setRefChangedCallback((oldRef, newRef) => {\n\t\t\tthis._removeDependentStates(oldRef, this._primaryAlignType);\n\t\t\tthis._addDependentStates(newRef, this._primaryAlignType);\n\t\t});\n\n\t\t/**\n\t\t * The axis of the target entity with which this entity will align or point for primary alignment.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._primaryTargetAxis = new Vector3(1, 0, 0);\n\t\tthis._primaryTargetAxis.freeze();\n\n\t\t/**\n\t\t * The align type for secondary alignment. It can be 'none', 'align', 'velocity', 'point', or 'position'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._secondaryAlignType = 'none';\n\n\t\t/**\n\t\t * The axis of this entity that will align with the target entity's axis for secondary alignment.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._secondaryAxis = new Vector3(0, 1, 0);\n\t\tthis._secondaryAxis.freeze();\n\n\t\t/**\n\t\t * The target entity for secondary alignment.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._secondaryTargetEntity = new EntityRef(this.getEntity().getScene());\n\t\tthis._secondaryTargetEntity.setRefChangedCallback((oldRef, newRef) => {\n\t\t\tthis._removeDependentStates(oldRef, this._secondaryAlignType);\n\t\t\tthis._addDependentStates(newRef, this._secondaryAlignType);\n\t\t});\n\n\t\t/**\n\t\t * The axis of the target entity with which this entity will align for secondary alignment.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._secondaryTargetAxis = new Vector3(0, 1, 0);\n\t\tthis._secondaryTargetAxis.freeze();\n\n\t\t/**\n\t\t * The joint for the model to align. If empty, the entity itself is used.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._joint = '';\n\n\t\t/**\n\t\t * The joint's ThreeJs object.\n\t\t * @type {THREE.Object3D}\n\t\t * @private\n\t\t */\n\t\tthis._jointObject = null;\n\n\t\t/**\n\t\t * The model for the joint.\n\t\t * @type {ModelComponent}\n\t\t * @private\n\t\t */\n\t\tthis._model = null;\n\n\t\t/**\n\t\t * The id of the root of the model. Used to tell if the model's Three.js object has been destroyed and reloaded.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._modelRootId = 0;\n\n\t\t// Let the base controller know that this changes the orientation.\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Gets the align type for the primary alignment.\n\t * @returns {string}\n\t */\n\tgetPrimaryAlignType() {\n\t\treturn this._primaryAlignType;\n\t}\n\n\t/**\n\t * Sets the align type for the primary alignment. It can be 'none', 'align', 'velocity', or 'point'.\n\t * 'none' means no alignment\n\t * 'align' aligns the entity with the target entity's axis\n\t * 'velocity' aligns the entity with the target entity's velocity\n\t * 'point' points the entity at the target entity.\n\t * 'position' aligns the entity with the target entity's local position\n\t * @param {string} alignType\n\t */\n\tsetPrimaryAlignType(alignType) {\n\t\tif (this._primaryAlignType === alignType) {\n\t\t\treturn;\n\t\t}\n\t\tthis._removeDependentStates(this._primaryTargetEntity.get(), this._primaryAlignType);\n\t\tthis._primaryAlignType = alignType;\n\t\tthis._addDependentStates(this._primaryTargetEntity.get(), this._primaryAlignType);\n\t}\n\n\t/**\n\t * Gets the axis of this entity that will align with the target entity's axis for the primary alignment\n\t * @returns {Vector3}\n\t */\n\tgetPrimaryAxis() {\n\t\treturn this._primaryAxis;\n\t}\n\n\t/**\n\t * Sets the axis of this entity that will be used in the primary alignment. The axis must be normalized.\n\t * @param {Vector3} axis\n\t */\n\tsetPrimaryAxis(axis) {\n\t\tthis._primaryAxis.thaw();\n\t\tthis._primaryAxis.copy(axis);\n\t\tthis._primaryAxis.freeze();\n\t}\n\n\t/**\n\t * Gets the target entity name with which this entity will align or point for primary alignment.\n\t * @returns {string}\n\t */\n\tgetPrimaryTargetEntity() {\n\t\treturn this._primaryTargetEntity.getName();\n\t}\n\n\t/**\n\t * Sets the target entity name with which this entity will align or point for primary alignment.\n\t * @param {string} targetEntityName\n\t */\n\tsetPrimaryTargetEntity(targetEntityName) {\n\t\tthis._primaryTargetEntity.setName(targetEntityName);\n\t}\n\n\t/**\n\t * Gets the axis of the target entity with which this entity will align for primary alignment. The axis is in the target entity's oriented frame.\n\t * @returns {Vector3}\n\t */\n\tgetPrimaryTargetAxis() {\n\t\treturn this._primaryTargetAxis;\n\t}\n\n\t/**\n\t * Sets the axis of the target entity with which this entity will align for primary alignment. The axis is in the target entity's oriented frame. The axis must be normalized.\n\t * @param {Vector3} targetAxis\n\t */\n\tsetPrimaryTargetAxis(targetAxis) {\n\t\tthis._primaryTargetAxis.thaw();\n\t\tthis._primaryTargetAxis.copy(targetAxis);\n\t\tthis._primaryTargetAxis.freeze();\n\t}\n\n\t/**\n\t * Gets the align type for the secondary alignment.\n\t * @returns {string}\n\t */\n\tgetSecondaryAlignType() {\n\t\treturn this._secondaryAlignType;\n\t}\n\n\t/**\n\t * Sets the align type for the secondary alignment. It can be 'none', 'align', 'velocity', 'point', or 'position'.\n\t * 'none' means no alignment\n\t * 'align' aligns the entity with the target entity's axis\n\t * 'velocity' aligns the entity with the target entity's velocity\n\t * 'point' points the entity at the target entity\n\t * 'position' aligns the entity with the target entity's local position\n\t * @param {string} alignType\n\t */\n\tsetSecondaryAlignType(alignType) {\n\t\tif (this._secondaryAlignType === alignType) {\n\t\t\treturn;\n\t\t}\n\t\tthis._removeDependentStates(this._secondaryTargetEntity.get(), this._secondaryAlignType);\n\t\tthis._secondaryAlignType = alignType;\n\t\tthis._addDependentStates(this._secondaryTargetEntity.get(), this._secondaryAlignType);\n\t}\n\n\t/**\n\t * Gets the axis of this entity that will align with the target entity's axis for the secondary alignment\n\t * @returns {Vector3}\n\t */\n\tgetSecondaryAxis() {\n\t\treturn this._secondaryAxis;\n\t}\n\n\t/**\n\t * Sets the axis of this entity that will be used in the secondary alignment. The axis must be normalized.\n\t * @param {Vector3} axis\n\t */\n\tsetSecondaryAxis(axis) {\n\t\tthis._secondaryAxis.thaw();\n\t\tthis._secondaryAxis.copy(axis);\n\t\tthis._secondaryAxis.freeze();\n\t}\n\n\t/**\n\t * Gets the target entity name with which this entity will align or point for secondary alignment.\n\t * @returns {string}\n\t */\n\tgetSecondaryTargetEntity() {\n\t\treturn this._secondaryTargetEntity.getName();\n\t}\n\n\t/**\n\t * Sets the target entity name with which this entity will align or point for secondary alignment.\n\t * @param {string} targetEntityName\n\t */\n\tsetSecondaryTargetEntity(targetEntityName) {\n\t\tthis._secondaryTargetEntity.setName(targetEntityName);\n\t}\n\n\t/**\n\t * Gets the axis of the target entity with which this entity will align for secondary alignment. The axis is in the target entity's oriented frame.\n\t * @returns {Vector3}\n\t */\n\tgetSecondaryTargetAxis() {\n\t\treturn this._secondaryTargetAxis;\n\t}\n\n\t/**\n\t * Sets the axis of the target entity with which this entity will align for secondary alignment. The axis is in the target entity's oriented frame. The axis must be normalized.\n\t * @param {Vector3} targetAxis\n\t */\n\tsetSecondaryTargetAxis(targetAxis) {\n\t\tthis._secondaryTargetAxis.thaw();\n\t\tthis._secondaryTargetAxis.copy(targetAxis);\n\t\tthis._secondaryTargetAxis.freeze();\n\t}\n\n\t/**\n\t * Sets the alignment to be at the joint on the specified model. If no model is given, the first model in the entity is used.\n\t * @param {string} joint\n\t * @param {ModelComponent} [model]\n\t */\n\tsetJoint(joint, model) {\n\t\tthis._joint = joint;\n\t\tif (!model) {\n\t\t\tconst modelFromEntity = /** @type {ModelComponent} */(this.getEntity().get('model'));\n\t\t\tif (modelFromEntity !== null) {\n\t\t\t\tthis._model = modelFromEntity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._model = model;\n\t\t}\n\t\tif (this._joint !== '') {\n\t\t\tthis.addDependentState(this.getEntity().getName(), 'orientation');\n\t\t\tthis.removeModifiedState('orientation');\n\t\t}\n\t\telse {\n\t\t\tthis.removeDependentState(this.getEntity().getName(), 'orientation');\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t}\n\n\t/**\n\t * Sets the orientation at the given time.\n\t * @param {Quaternion} orientation\n\t * @param {number} [time]\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tif (this._joint !== '') {\n\t\t\treturn;\n\t\t}\n\t\tthis._getOrientation(orientation, time);\n\t}\n\n\t/**\n\t * Updates the orientation.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst newOrientation = Quaternion.pool.get();\n\t\tif (this._jointObject !== null) {\n\t\t\tnewOrientation.copy(this.getEntity().getOrientation());\n\t\t}\n\t\telse {\n\t\t\tnewOrientation.copy(this.getEntity().getOrientation());\n\t\t}\n\t\tthis._getOrientation(newOrientation);\n\n\t\t// Set the orientation.\n\t\tif (this._jointObject !== null) {\n\t\t\t// Get the orientation back into the ThreeJS object coordinates.\n\t\t\tthis._jointObject.quaternion.set(newOrientation.x, newOrientation.y, newOrientation.z, newOrientation.w);\n\t\t}\n\t\telse {\n\t\t\tthis.getEntity().setOrientation(newOrientation);\n\t\t}\n\n\t\tQuaternion.pool.release(newOrientation);\n\t}\n\n\t/**\n\t * Gets the orientation of the entity or joint at the given time.\n\t * The orientation should be initialized to the existing orientation of the entity.\n\t * @param {Quaternion} orientation\n\t * @param {number} [time]\n\t * @private\n\t */\n\t_getOrientation(orientation, time) {\n\t\t// If a joint is specified, setup the joint's ThreeJs object.\n\t\tif (this._joint !== '' && this._model !== null) {\n\t\t\tconst root = this._model.getThreeJsObjects()[0];\n\t\t\tif (root !== undefined && (this._jointObject === null || this._jointObject.name !== this._joint || root.id !== this._modelRootId)) {\n\t\t\t\tconst subObject = this._model.getThreeJsObjectByName(this._joint);\n\t\t\t\tif (subObject !== null) {\n\t\t\t\t\tthis._jointObject = subObject;\n\t\t\t\t\tthis._modelRootId = root.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// No joint object yet when there should be, so do nothing.\n\t\t\tif (this._jointObject === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Get the temporaries.\n\t\tconst targetAxis = Vector3.pool.get();\n\n\t\t// Get the primary axis from local to world coordinates.\n\t\tconst primaryAxisGlobal = Vector3.pool.get();\n\t\tconst primaryRotation = Quaternion.pool.get();\n\t\tconst localToWorld = Quaternion.pool.get();\n\t\tif (this._jointObject !== null) {\n\t\t\tlet jointAncestor = this._jointObject;\n\t\t\tAlignController._tempThreeJsQuaternion.set(0, 0, 0, 1);\n\t\t\twhile (jointAncestor.parent !== null && jointAncestor.parent !== this._model.getThreeJsObjects()[0]) {\n\t\t\t\tjointAncestor = jointAncestor.parent;\n\t\t\t\tAlignController._tempThreeJsQuaternion.multiplyQuaternions(jointAncestor.quaternion, AlignController._tempThreeJsQuaternion);\n\t\t\t}\n\t\t\tlocalToWorld.copyFromThreeJs(AlignController._tempThreeJsQuaternion);\n\t\t\tlocalToWorld.mult(this._model.getRotation(), localToWorld);\n\t\t\tlocalToWorld.mult(orientation, localToWorld);\n\t\t}\n\t\telse {\n\t\t\tlocalToWorld.copy(orientation);\n\t\t}\n\t\tif (localToWorld.isNaN()) {\n\t\t\tlocalToWorld.copy(Quaternion.Identity);\n\t\t}\n\t\tprimaryAxisGlobal.rotate(localToWorld, this._primaryAxis);\n\n\t\t// Get the primary axis.\n\t\tthis._getAxis(targetAxis, this._primaryAlignType, this._primaryTargetEntity, this._primaryTargetAxis, primaryAxisGlobal, time);\n\n\t\tif (targetAxis.isNaN()) {\n\t\t\ttargetAxis.set(1, 0, 0);\n\t\t}\n\n\t\t// Get the rotation needed to align it, and apply it to the new orientation.\n\t\tprimaryRotation.setFromVectorFromTo(primaryAxisGlobal, targetAxis);\n\t\torientation.mult(primaryRotation, localToWorld);\n\t\tif (orientation.isNaN()) {\n\t\t\torientation.copy(Quaternion.Identity);\n\t\t}\n\t\tVector3.pool.release(primaryAxisGlobal);\n\t\tQuaternion.pool.release(primaryRotation);\n\n\t\t// Nothing to do if there is no secondary target entity.\n\t\tif (this._secondaryAlignType !== 'none' && this._secondaryTargetEntity !== null) {\n\t\t\t// Get the secondary axis.\n\t\t\tthis._getAxis(targetAxis, this._secondaryAlignType, this._secondaryTargetEntity, this._secondaryTargetAxis, primaryAxisGlobal, time);\n\n\t\t\t// Get the rotation required to align this entity. The rotation is around the primary target axis.\n\t\t\tif (!targetAxis.isNaN()) {\n\t\t\t\tconst secondaryRotation = Quaternion.pool.get();\n\t\t\t\tconst primaryAxisOriented = Vector3.pool.get();\n\t\t\t\tconst secondaryAxisOriented = Vector3.pool.get();\n\t\t\t\tprimaryAxisOriented.rotate(orientation, this._primaryAxis);\n\t\t\t\tsecondaryAxisOriented.rotate(orientation, this._secondaryAxis);\n\t\t\t\tconst angle = secondaryAxisOriented.angleAroundAxis(targetAxis, primaryAxisOriented);\n\t\t\t\tsecondaryRotation.setFromAxisAngle(primaryAxisOriented, angle);\n\t\t\t\torientation.mult(secondaryRotation, orientation);\n\t\t\t\tQuaternion.pool.release(secondaryRotation);\n\t\t\t\tVector3.pool.release(primaryAxisOriented);\n\t\t\t\tVector3.pool.release(secondaryAxisOriented);\n\t\t\t}\n\t\t}\n\n\t\t// Set the orientation.\n\t\torientation.normalize(orientation);\n\t\tif (this._jointObject !== null) {\n\t\t\t// Get the orientation back into the ThreeJS object coordinates.\n\t\t\torientation.multInverseL(localToWorld, orientation);\n\t\t}\n\n\t\t// Release the temporaries.\n\t\tQuaternion.pool.release(localToWorld);\n\t\tVector3.pool.release(targetAxis);\n\t}\n\n\t/**\n\t * Gets the axis to aligning.\n\t * @param {Vector3} outAxis\n\t * @param {string} alignType\n\t * @param {EntityRef} targetEntityRef\n\t * @param {Vector3} targetAxis\n\t * @param {Vector3} axisGlobal\n\t * @param {number} time\n\t*/\n\t_getAxis(outAxis, alignType, targetEntityRef, targetAxis, axisGlobal, time) {\n\t\tconst targetEntity = targetEntityRef.get();\n\t\tif (alignType === 'align' && targetEntity !== null) {\n\t\t\t// Get the primary target entity axis in the global frame.\n\t\t\tconst primaryOrientation = Quaternion.pool.get();\n\t\t\ttargetEntity.getOrientationAtTime(primaryOrientation, time);\n\t\t\toutAxis.rotate(primaryOrientation, targetAxis);\n\t\t\tQuaternion.pool.release(primaryOrientation);\n\t\t}\n\t\telse if (alignType === 'velocity' && targetEntity !== null) {\n\t\t\t// Get the primary target entity velocity.\n\t\t\ttargetEntity.getVelocityAtTime(outAxis, time);\n\t\t\toutAxis.normalize(outAxis);\n\t\t}\n\t\telse if (alignType === 'point' && targetEntity !== null) {\n\t\t\t// Get the position of the primary target entity in this entity's frame.\n\t\t\ttargetEntity.getPositionRelativeToEntity(outAxis, Vector3.Zero, this.getEntity(), time);\n\t\t\toutAxis.normalize(outAxis);\n\t\t}\n\t\telse if (alignType === 'position' && targetEntity !== null) {\n\t\t\t// Get the position of the primary target entity in this entity's frame.\n\t\t\toutAxis.normalize(targetEntity.getPosition());\n\t\t}\n\t\telse {\n\t\t\toutAxis.copy(axisGlobal);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the dependent states based on the align entities.\n\t * @param {Entity} entity\n\t * @param {string} alignType\n\t */\n\t_removeDependentStates(entity, alignType) {\n\t\tif (entity !== null) {\n\t\t\tif (alignType === 'align') {\n\t\t\t\tthis.removeDependentState(entity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (alignType === 'velocity') {\n\t\t\t\tthis.removeDependentState(entity.getName(), 'velocity');\n\t\t\t}\n\t\t\telse if (alignType === 'point') {\n\t\t\t\tthis.removeDependentState(this.getEntity().getName(), 'position');\n\t\t\t\tthis.removeDependentState(entity.getName(), 'position');\n\t\t\t}\n\t\t\telse if (alignType === 'position') {\n\t\t\t\tthis.removeDependentState(entity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds the dependent states based on the align entities.\n\t * @param {Entity} entity\n\t * @param {string} alignType\n\t */\n\t_addDependentStates(entity, alignType) {\n\t\tif (entity !== null) {\n\t\t\tif (alignType === 'align') {\n\t\t\t\tthis.addDependentState(entity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (alignType === 'velocity') {\n\t\t\t\tthis.addDependentState(entity.getName(), 'velocity');\n\t\t\t}\n\t\t\telse if (alignType === 'point') {\n\t\t\t\tthis.addDependentState(this.getEntity().getName(), 'position');\n\t\t\t\tthis.addDependentState(entity.getName(), 'position');\n\t\t\t}\n\t\t\telse if (alignType === 'position') {\n\t\t\t\tthis.addDependentState(entity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A temporary ThreeJs Quaternion.\n * @type {THREE.Quaternion}\n */\nAlignController._tempThreeJsQuaternion = new THREE.Quaternion();\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEngine,\n\tEntity,\n\tInterval,\n\tQuaternion,\n\tReader,\n\tVector3\n} from '../../internal';\n\nconst eclipJ2000ToJ200Rotation = new Quaternion(0.9791532214288992, 0.2031230389823101, 0, 0);\n\nclass State {\n\t/**\n\t * Takes a Reader and populates the values.\n\t * @param {Reader} _reader\n\t */\n\tread(_reader) {\n\t}\n\n\t/**\n\t * Sets this to an interpolated state between state a and state b with an applied offset.\n\t * @param {State} _state0 - the state at the beginning of the interval\n\t * @param {State} _state1 - the state at the end of the interval\n\t * @param {number} _intervalLength - the length of the interval\n\t * @param {number} _u - the factor between 0 and 1\n\t */\n\tinterpolate(_state0, _state1, _intervalLength, _u) {\n\t}\n}\n\n/** A state that represents a position and velocity. Used by {@link Animdata}.\n * @private */\nclass PosState extends State {\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Position in km at the start of this interval.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position = new Vector3();\n\n\t\t/**\n\t\t * Velocity in km/s at the start of this interval.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.velocity = new Vector3();\n\t}\n\n\t/**\n\t * Takes a Reader and populates the values.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tread(reader) {\n\t\tthis.position.y = -reader.readFloat64();\n\t\tthis.position.z = reader.readFloat64();\n\t\tthis.position.x = reader.readFloat64();\n\t\tthis.velocity.y = -reader.readFloat64();\n\t\tthis.velocity.z = reader.readFloat64();\n\t\tthis.velocity.x = reader.readFloat64();\n\t\tthis.position.rotate(eclipJ2000ToJ200Rotation, this.position);\n\t\tthis.velocity.rotate(eclipJ2000ToJ200Rotation, this.velocity);\n\t}\n\n\t/**\n\t * Sets this to an interpolated state between state a and state b with an applied offset.\n\t * @param {PosState} state0 - the state at the beginning of the interval\n\t * @param {PosState} state1 - the state at the end of the interval\n\t * @param {number} intervalLength - the length of the interval\n\t * @param {number} u - the factor between 0 and 1\n\t * @override\n\t */\n\tinterpolate(state0, state1, intervalLength, u) {\n\t\tconst oneMinusU = 1.0 - u;\n\t\tconst oneMinusUQuantitySquared = oneMinusU * oneMinusU;\n\t\tconst uSquared = u * u;\n\t\tconst a = (1.0 + 2.0 * u) * oneMinusUQuantitySquared;\n\t\tconst b = u * oneMinusUQuantitySquared;\n\t\tconst c = uSquared * (3.0 - 2.0 * u);\n\t\tconst d = uSquared * -oneMinusU;\n\t\tthis.position.mult(state0.position, a);\n\t\tthis.position.addMult(this.position, state0.velocity, intervalLength * b);\n\t\tthis.position.addMult(this.position, state1.position, c);\n\t\tthis.position.addMult(this.position, state1.velocity, intervalLength * d);\n\t\tconst sixUSquaredMinusU = 6.0 * (uSquared - u);\n\t\tconst aV = sixUSquaredMinusU;\n\t\tconst bV = 3.0 * uSquared - 4.0 * u + 1.0;\n\t\tconst cV = -sixUSquaredMinusU;\n\t\tconst dV = 3.0 * uSquared - 2.0 * u;\n\t\tthis.velocity.mult(state0.position, aV / intervalLength);\n\t\tthis.velocity.addMult(this.velocity, state0.velocity, bV);\n\t\tthis.velocity.addMult(this.velocity, state1.position, cV / intervalLength);\n\t\tthis.velocity.addMult(this.velocity, state1.velocity, dV);\n\t}\n}\n\n/** A state that represents an orientation. Used by {@link Animdata}.\n * @private */\nclass OriState extends State {\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Orientation in radians at the start of this interval.\n\t\t * @type {Quaternion}\n\t\t */\n\t\tthis.orientation = new Quaternion();\n\t}\n\n\t/**\n\t * Takes a Reader and populates the values.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tread(reader) {\n\t\tthis.orientation.y = reader.readFloat32();\n\t\tthis.orientation.z = -reader.readFloat32();\n\t\tthis.orientation.x = -reader.readFloat32();\n\t\tthis.orientation.w = reader.readFloat32();\n\t\tthis.orientation.mult(eclipJ2000ToJ200Rotation, this.orientation);\n\t}\n\n\t/**\n\t * Sets this to an interpolated state between state a and state b with an applied offset.\n\t * @param {OriState} state0 - the state at the beginning of the interval\n\t * @param {OriState} state1 - the state at the end of the interval\n\t * @param {number} _intervalLength - the length of the interval (not used)\n\t * @param {number} u - the factor between 0 and 1\n\t * @override\n\t */\n\tinterpolate(state0, state1, _intervalLength, u) {\n\t\tthis.orientation.slerp(state0.orientation, state1.orientation, u);\n\t}\n}\n\n/** Data for a point in time. Used by {@link Animdata}.\n * @private */\nclass DataPoint {\n\t/**\n\t * Constructor\n\t * @param {AnimdataController} controller - The controller.\n\t */\n\tconstructor(controller) {\n\t\t/**\n\t\t * Interval for this data point. Really only start is used.\n\t\t * @type {Interval}\n\t\t */\n\t\tthis.interval = new Interval();\n\n\t\t/**\n\t\t * The state at the start of the data point.\n\t\t * @type {State}\n\t\t */\n\t\tthis.state = controller.__getNewState();\n\t}\n\n\t/**\n\t * Read binary data into the data point.\n\t * @param {Reader} reader - The reader to read data\n\t */\n\tread(reader) {\n\t\tthis.interval.min = reader.readFloat64();\n\t\tthis.interval.max = reader.readFloat64();\n\t\tthis.state.read(reader);\n\t}\n}\n\n/** The animdata file. Contains list of intervals and states. Used by {@link Animdata}.\n * @private */\nclass AnimdataFile {\n\t/**\n\t * Constructor. Starts loading the data.\n\t * @param {AnimdataController} controller - The controller\n\t * @param {number} coverageIndex - The coverage index\n\t * @param {number} animdataIndex - The animdata index\n\t */\n\tconstructor(controller, coverageIndex, animdataIndex) {\n\t\t/**\n\t\t * The interval covered by this animdata. It goes from the beginning of the first data point to the beginning of the last data point.\n\t\t * @type {Interval}\n\t\t */\n\t\tthis.interval = new Interval();\n\n\t\t/**\n\t\t * The list of data points contained in this animdata.\n\t\t * @type {DataPoint[]}\n\t\t */\n\t\tthis.dataPoints = [];\n\n\t\tconst url = controller.getUrl() + '/' + controller.getStateType() + '_data/' + ('00' + coverageIndex).slice(-3) + '.' + ('000' + (animdataIndex + 1)).slice(-4) + '.animdata';\n\t\t/**\n\t\t * The promise that is used to tell when the animdata is loaded.\n\t\t * @type {Promise<void>}\n\t\t */\n\t\tthis.promise = controller.getEntity().getScene().getEngine().getDownloader().download(url, true).then(async (download) => {\n\t\t\tif (download.status === 'cancelled') {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\treturn Promise.reject(new Error('Failed to load animdata controller file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t}\n\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\treturn Promise.reject(new Error('Failed to load animdata controller file \"' + download.url + '\": Not a binary file.'));\n\t\t\t}\n\t\t\tconst reader = new Reader(download.content);\n\t\t\tthis.interval.min = reader.readFloat64();\n\t\t\tthis.interval.max = reader.readFloat64();\n\t\t\tconst numDataPoints = reader.readInt32();\n\t\t\tfor (let dataPointIndex = 0; dataPointIndex < numDataPoints; dataPointIndex++) {\n\t\t\t\tconst dataPoint = new DataPoint(controller);\n\t\t\t\tdataPoint.read(reader);\n\t\t\t\tthis.dataPoints.push(dataPoint);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/** A single animdata file index and the interval it covers. Used by {@link Animdata}.\n * @private */\nclass FileOverlap {\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The file index of this animdata file.\n\t\t * @type {number}\n\t\t */\n\t\tthis.fileIndex = 0;\n\n\t\t/**\n\t\t * The coverage of this animdata file.\n\t\t * @type {Interval}\n\t\t */\n\t\tthis.interval = new Interval();\n\t}\n}\n\n/** A list of data point locations in the bucket. Used by {@link Animdata}.\n * @private */\nclass BucketOverlap {\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The animdata file index for this bucket overlap.\n\t\t * @type {number}\n\t\t */\n\t\tthis.fileIndex = 0;\n\n\t\t/**\n\t\t * Data point indices in this file in this bucket.\n\t\t * @type {number[]}\n\t\t */\n\t\tthis.dataPointIndices = [];\n\t}\n}\n\n/** A list of bucket overlaps in the animinfo file. Used by {@link Animdata}.\n * @private */\nclass Bucket {\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * List of animdata file indices and data point indices for this bucket.\n\t\t * @type {BucketOverlap[]}\n\t\t */\n\t\tthis.bucketOverlaps = [];\n\t}\n}\n\n/** The animinfo file, containing file overlaps and bucket overlaps. Used by {@link Animdata}.\n * @private */\nclass AniminfoFile {\n\t/**\n\t * Constructor. Starts loading the data.\n\t * @param {AnimdataController} controller - The controller\n\t * @param {number} coverageIndex - The coverage index\n\t * @param {number} animinfoIndex - The animinfo index\n\t */\n\tconstructor(controller, coverageIndex, animinfoIndex) {\n\t\t/**\n\t\t * List of files & intervals to which the buckets refer, hashed by fileIndex.\n\t\t * @type {Map.<number,FileOverlap>}\n\t\t */\n\t\tthis.fileOverlaps = new Map();\n\n\t\t/**\n\t\t * List of buckets in animinfo file.\n\t\t * @type {Bucket[]}\n\t\t */\n\t\tthis.buckets = [];\n\n\t\tconst url = controller.getUrl() + '/' + controller.getStateType() + '_info/' + ('00' + coverageIndex).slice(-3) + '.' + ('000' + animinfoIndex).slice(-4) + '.animinfo';\n\t\t/**\n\t\t * The promise that is used to tell when the animinfo is loaded.\n\t\t * @type {Promise<void>}\n\t\t */\n\t\tthis.promise = controller.getEntity().getScene().getEngine().getDownloader().download(url, true).then(async (download) => {\n\t\t\tif (download.status === 'cancelled') {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\treturn Promise.reject(new Error('Failed to load animdata controller file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t}\n\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\treturn Promise.reject(new Error('Failed to load animdata controller file \"' + download.url + '\": Not a binary file.'));\n\t\t\t}\n\t\t\tconst reader = new Reader(download.content);\n\t\t\tconst numFileOverlaps = reader.readInt16();\n\t\t\tfor (let fileOverlapIndex = 0; fileOverlapIndex < numFileOverlaps; fileOverlapIndex++) {\n\t\t\t\tconst fileOverlap = new FileOverlap();\n\t\t\t\tfileOverlap.fileIndex = reader.readInt16();\n\t\t\t\tfileOverlap.interval.min = reader.readFloat64();\n\t\t\t\tfileOverlap.interval.max = reader.readFloat64();\n\t\t\t\tthis.fileOverlaps.set(fileOverlap.fileIndex, fileOverlap);\n\t\t\t}\n\t\t\tconst numBuckets = reader.readInt16();\n\t\t\tfor (let bucketIndex = 0; bucketIndex < numBuckets; bucketIndex++) {\n\t\t\t\tconst bucket = new Bucket();\n\t\t\t\tconst numBucketOverlaps = reader.readInt16();\n\t\t\t\tfor (let bucketOverlapIndex = 0; bucketOverlapIndex < numBucketOverlaps; bucketOverlapIndex++) {\n\t\t\t\t\tconst bucketOverlap = new BucketOverlap();\n\t\t\t\t\tbucketOverlap.fileIndex = reader.readInt16();\n\t\t\t\t\tconst numDataPointIndices = reader.readInt16();\n\t\t\t\t\tfor (let dataPointIndex = 0; dataPointIndex < numDataPointIndices; dataPointIndex++) {\n\t\t\t\t\t\tbucketOverlap.dataPointIndices.push(reader.readInt16());\n\t\t\t\t\t}\n\t\t\t\t\tbucket.bucketOverlaps.push(bucketOverlap);\n\t\t\t\t}\n\t\t\t\tthis.buckets.push(bucket);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/** The bookkeeping information for a given coverage defined in the animdef file. Used by {@link Animdata}.\n * @private */\nclass Coverage {\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * The interval that this coverage covers.\n\t\t * @type {Interval}\n\t\t */\n\t\tthis.interval = new Interval();\n\n\t\t/**\n\t\t * The number of data files.\n\t\t * @type {number}\n\t\t */\n\t\tthis.numDataFiles = 0;\n\n\t\t/**\n\t\t * The number of buckets.\n\t\t * @type {number}\n\t\t */\n\t\tthis.numBuckets = 0;\n\n\t\t/**\n\t\t * The size in seconds of each bucket.\n\t\t * @type {number}\n\t\t */\n\t\tthis.bucketStepSize = 0;\n\n\t\t/**\n\t\t * The number of buckets contained in each animinfo file.\n\t\t * @type {number}\n\t\t */\n\t\tthis.numBucketsPerAniminfoFile = 0;\n\n\t\t/**\n\t\t * Currently loaded or downloading animinfo files, keyed by index.\n\t\t * @type {Map.<number,AniminfoFile>}\n\t\t */\n\t\tthis.animinfos = new Map();\n\n\t\t/**\n\t\t * Currently loaded or downloading animdata files, keyed by index.\n\t\t * @type {Map.<number,AnimdataFile>}\n\t\t */\n\t\tthis.animdatas = new Map();\n\t}\n}\n\n/** The animdef file, containing all of the coverages. Used by {@link Animdata}.\n * @private */\nclass AnimdefFile {\n\t/**\n\t * Constructor. Starts loading the data.\n\t * @param {AnimdataController} controller - The controller\n\t */\n\tconstructor(controller) {\n\t\t/**\n\t\t * List of coverages defined in animdef file.\n\t\t * @type {Coverage[]}\n\t\t */\n\t\tthis.coverages = [];\n\n\t\tconst url = controller.getUrl() + '/' + controller.getStateType() + '.animdef';\n\t\t/**\n\t\t * The promise that is used to tell when the animdef is loaded.\n\t\t * @type {Promise<void>}\n\t\t */\n\t\tthis.promise = controller.getEntity().getScene().getEngine().getDownloader().download(url, true).then(async (download) => {\n\t\t\tif (download.status === 'cancelled') {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\treturn Promise.reject(new Error('Failed to load animdata controller file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t}\n\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\treturn Promise.reject(new Error('Failed to load animdata controller file \"' + download.url + '\": Not a binary file.'));\n\t\t\t}\n\t\t\tconst reader = new Reader(download.content);\n\t\t\tconst numCoverages = reader.readInt16();\n\t\t\tfor (let coverageIndex = 0; coverageIndex < numCoverages; coverageIndex++) {\n\t\t\t\tconst coverage = new Coverage();\n\t\t\t\tcoverage.interval.min = reader.readFloat64();\n\t\t\t\tcoverage.interval.max = reader.readFloat64();\n\t\t\t\tcoverage.numDataFiles = reader.readInt16();\n\t\t\t\tcoverage.numBuckets = reader.readInt32();\n\t\t\t\tcoverage.bucketStepSize = reader.readFloat64();\n\t\t\t\tcoverage.numBucketsPerAniminfoFile = reader.readInt16();\n\t\t\t\tthis.coverages.push(coverage);\n\t\t\t}\n\t\t\tcontroller.__updateCoverage();\n\t\t});\n\t}\n}\n\n/** The animdata controller. Downloads animdata files to control the position and orientation of entities. */\nexport class AnimdataController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The base url used to construct the other urls for the animdef, animinfo, and animdata files.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._baseUrl = '';\n\n\t\t/**\n\t\t * The state, currently either 'pos' or 'ori'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._stateType = '';\n\n\t\t/**\n\t\t * The animdef file that contains all the other data.\n\t\t * @type {AnimdefFile}\n\t\t * @private\n\t\t */\n\t\tthis._animdef = null;\n\n\t\t/**\n\t\t * The current data point used for updates.\n\t\t * @type {DataPoint}\n\t\t * @private\n\t\t */\n\t\tthis._currentDataPoint = null;\n\n\t\t/**\n\t\t * Temporary data point used in calculations.\n\t\t * @type {DataPoint}\n\t\t * @private\n\t\t */\n\t\tthis._tempDataPoint = null;\n\n\t\t/**\n\t\t * A shortcut for to get to the download method.\n\t\t * @type {Engine}\n\t\t * @private\n\t\t */\n\t\tthis._engine = this.getEntity().getScene().getEngine();\n\n\t\t/**\n\t\t * The coverage set by setCoverage.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._forcedCoverage = new Interval();\n\t\tthis._forcedCoverage.copy(this.getCoverage());\n\t}\n\n\t/**\n\t * Returns the base url used to download the animdata.\n\t * @returns {string}\n\t */\n\tgetUrl() {\n\t\treturn this._baseUrl;\n\t}\n\n\t/**\n\t * Returns the state type (pos or ori)\n\t * @returns {string}\n\t */\n\tgetStateType() {\n\t\treturn this._stateType;\n\t}\n\n\t/**\n\t * Sets the base url used to download the animdata.\n\t * @param {string} baseUrl\n\t * @param {string} stateType\n\t */\n\tsetBaseUrlAndStateType(baseUrl, stateType) {\n\t\tthis._baseUrl = baseUrl;\n\t\tthis._stateType = stateType;\n\t\tthis._currentDataPoint = new DataPoint(this);\n\t\tthis._tempDataPoint = new DataPoint(this);\n\t\tthis._animdef = new AnimdefFile(this);\n\n\t\t// Let the base controller know that this changes the position or orientation.\n\t\tif (this._stateType === 'pos') {\n\t\t\tthis.addModifiedState('position');\n\t\t\tthis.addModifiedState('velocity');\n\t\t}\n\t\telse if (this._stateType === 'ori') {\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t}\n\n\t/**\n\t * Sets the time interval over which the controller is valid.\n\t * @param {Interval} coverage\n\t * @override\n\t*/\n\tsetCoverage(coverage) {\n\t\tthis._forcedCoverage.copy(coverage);\n\t\tthis.__updateCoverage();\n\t}\n\n\t/**\n\t * Since animdata has a possibly narrower coverage than the base controller (forced) coverage, this updates the base controller coverage to reflect that.\n\t * @internal\n\t */\n\t__updateCoverage() {\n\t\tconst realCoverage = Interval.pool.get();\n\t\tif (this._animdef !== null && this._animdef.coverages.length > 0) {\n\t\t\trealCoverage.copy(this._animdef.coverages[0].interval);\n\t\t\tfor (let i = 1; i < this._animdef.coverages.length; i++) {\n\t\t\t\trealCoverage.union(realCoverage, this._animdef.coverages[i].interval);\n\t\t\t}\n\t\t\trealCoverage.intersection(realCoverage, this._forcedCoverage);\n\t\t}\n\t\telse {\n\t\t\trealCoverage.copy(this._forcedCoverage);\n\t\t\trealCoverage.max = realCoverage.min;\n\t\t}\n\t\tsuper.setCoverage(realCoverage);\n\t\tInterval.pool.release(realCoverage);\n\t}\n\n\t/**\n\t * If the animdata is pos, updates the position.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tif (this._stateType === 'pos') {\n\t\t\tconst state = /** @type {PosState} */(this._tempDataPoint.state);\n\t\t\tif (this._tempDataPoint.interval.min !== time) {\n\t\t\t\tif (this._getDataPointAtTime(this._tempDataPoint, time)) {\n\t\t\t\t\tposition.copy(state.position);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tposition.copy(state.position);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * If the animdata is pos, updates the velocity.\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, time) {\n\t\tif (this._stateType === 'pos') {\n\t\t\tconst state = /** @type {PosState} */(this._tempDataPoint.state);\n\t\t\tif (this._tempDataPoint.interval.min !== time) {\n\t\t\t\tif (this._getDataPointAtTime(this._tempDataPoint, time)) {\n\t\t\t\t\tvelocity.copy(state.velocity);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvelocity.copy(state.velocity);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * If the animdata is ori, updates the orientation.\n\t * @param {Quaternion} orientation\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tif (this._stateType === 'ori') {\n\t\t\tconst state = /** @type {OriState} */(this._tempDataPoint.state);\n\t\t\tif (this._getDataPointAtTime(this._tempDataPoint, time)) {\n\t\t\t\torientation.copy(state.orientation);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new promise that resolves when the controller is loaded.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tgetLoadedPromise() {\n\t\treturn this.downloadDataForInterval(new Interval(this._engine.getTime(), this._engine.getTime()));\n\t}\n\n\t/**\n\t * This does whatever is necessary to download the data for the given interval. Returns a promise that will resolve when all the data is loaded.\n\t * @param {Interval} interval - The interval over which to download the data.\n\t * @returns {Promise<void>}\n\t */\n\tdownloadDataForInterval(interval) {\n\t\tif (this._animdef === null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._animdef.promise.then(async () => {\n\t\t\tconst animinfoPromises = [];\n\n\t\t\t// For each coverage...\n\t\t\tfor (let coverageIndex = 0; coverageIndex < this._animdef.coverages.length; coverageIndex++) {\n\t\t\t\tconst coverage = this._animdef.coverages[coverageIndex];\n\n\t\t\t\t// If the interval is within the coverage,\n\t\t\t\tif (coverage.interval.intersects(interval)) {\n\t\t\t\t\t// Calculate the set of animinfos that would cover the interval.\n\t\t\t\t\tconst animinfoIndexStart = Math.floor((Math.max(interval.min, coverage.interval.min) - coverage.interval.min) / coverage.bucketStepSize / coverage.numBucketsPerAniminfoFile);\n\t\t\t\t\tconst animinfoIndexEnd = Math.floor((Math.min(interval.max, coverage.interval.max) - 0.0001 - coverage.interval.min) / coverage.bucketStepSize / coverage.numBucketsPerAniminfoFile);\n\n\t\t\t\t\t// For each animinfo in that set...\n\t\t\t\t\tfor (let animinfoIndex = animinfoIndexStart; animinfoIndex <= animinfoIndexEnd; animinfoIndex++) {\n\t\t\t\t\t\t// If that animinfo hasn't been loaded yet,\n\t\t\t\t\t\tif (!coverage.animinfos.has(animinfoIndex)) {\n\t\t\t\t\t\t\tcoverage.animinfos.set(animinfoIndex, new AniminfoFile(this, coverageIndex, animinfoIndex));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst animinfo = coverage.animinfos.get(animinfoIndex);\n\t\t\t\t\t\taniminfoPromises.push(animinfo.promise.then(() => {\n\t\t\t\t\t\t\tconst animdataPromises = [];\n\n\t\t\t\t\t\t\t// For each file overlap in the animinfo...\n\t\t\t\t\t\t\tfor (const fileOverlap of animinfo.fileOverlaps.values()) {\n\t\t\t\t\t\t\t\t// If the interval overlaps with the file overlap,\n\t\t\t\t\t\t\t\tif (fileOverlap.interval.intersects(interval)) {\n\t\t\t\t\t\t\t\t\tconst animdataIndex = fileOverlap.fileIndex;\n\n\t\t\t\t\t\t\t\t\t// If that animdata hasn't been downloaded yet,\n\t\t\t\t\t\t\t\t\tif (!coverage.animdatas.has(animdataIndex)) {\n\t\t\t\t\t\t\t\t\t\tcoverage.animdatas.set(animdataIndex, new AnimdataFile(this, coverageIndex, animdataIndex));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst animdata = coverage.animdatas.get(animdataIndex);\n\t\t\t\t\t\t\t\t\tanimdataPromises.push(animdata.promise);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Promise.all(animdataPromises).then();\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.all(animinfoPromises).then();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns a new state of the controller type.\n\t * @returns {State}\n\t * @internal\t*/\n\t__getNewState() {\n\t\tif (this._stateType === 'pos') {\n\t\t\treturn new PosState();\n\t\t}\n\t\telse if (this._stateType === 'ori') {\n\t\t\treturn new OriState();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tif (this._currentDataPoint !== null) {\n\t\t\tif (this._getDataPointAtTime(this._currentDataPoint, this._engine.getTime())) {\n\t\t\t\tif (this._stateType === 'pos') {\n\t\t\t\t\tconst state = /** @type {PosState} */(this._currentDataPoint.state);\n\t\t\t\t\tthis.getEntity().setPosition(state.position);\n\t\t\t\t\tthis.getEntity().setVelocity(state.velocity);\n\t\t\t\t}\n\t\t\t\tif (this._stateType === 'ori') {\n\t\t\t\t\tconst state = /** @type {OriState} */(this._currentDataPoint.state);\n\t\t\t\t\tthis.getEntity().setOrientation(state.orientation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets outDataPoint to the state associated with the time and returns true. If it doesn't exist, it starts the download process for that time and returns false.\n\t * @param {DataPoint} outDataPoint - the state to be set\n\t * @param {number} time - the time to check\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_getDataPointAtTime(outDataPoint, time) {\n\t\t// For every coverage in the animdef,\n\t\tfor (let coverageIndex = 0; coverageIndex < this._animdef.coverages.length; coverageIndex++) {\n\t\t\tconst coverage = this._animdef.coverages[coverageIndex];\n\n\t\t\t// If the time is within the coverage,\n\t\t\tif (coverage.interval.contains(time)) {\n\t\t\t\t// Calculate the animinfo that would cover the time.\n\t\t\t\tconst animinfoIndex = Math.floor((time - coverage.interval.min) / coverage.bucketStepSize / coverage.numBucketsPerAniminfoFile);\n\n\t\t\t\t// If that animinfo has been downloaded, else download it.\n\t\t\t\tif (coverage.animinfos.has(animinfoIndex)) {\n\t\t\t\t\tconst animinfo = coverage.animinfos.get(animinfoIndex);\n\n\t\t\t\t\t// Calculate the bucket of the animinfo that would cover the time.\n\t\t\t\t\tconst bucketIndexInAniminfoFile = Math.floor((time - coverage.interval.min) / coverage.bucketStepSize) - animinfoIndex * coverage.numBucketsPerAniminfoFile;\n\t\t\t\t\tconst bucket = animinfo.buckets[bucketIndexInAniminfoFile];\n\n\t\t\t\t\tif (bucket === undefined) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For each bucket overlap in the bucket (should be a very small number)...\n\t\t\t\t\tfor (let bucketOverlapIndex = 0; bucketOverlapIndex < bucket.bucketOverlaps.length; bucketOverlapIndex++) {\n\t\t\t\t\t\tconst bucketOverlap = bucket.bucketOverlaps[bucketOverlapIndex];\n\t\t\t\t\t\tconst animdataIndex = bucketOverlap.fileIndex;\n\n\t\t\t\t\t\t// If the animdata covers the time,\n\t\t\t\t\t\tif (animinfo.fileOverlaps.get(animdataIndex).interval.contains(time)) {\n\t\t\t\t\t\t\t// If the animdata has been downloaded, else download it.\n\t\t\t\t\t\t\tif (coverage.animdatas.has(animdataIndex)) {\n\t\t\t\t\t\t\t\tconst animdata = coverage.animdatas.get(animdataIndex);\n\n\t\t\t\t\t\t\t\t// For each data point index in the bucket overlap...\n\t\t\t\t\t\t\t\tfor (let dataPointIndexIndex = 0; dataPointIndexIndex < bucketOverlap.dataPointIndices.length; dataPointIndexIndex++) {\n\t\t\t\t\t\t\t\t\tconst dataPointIndex = bucketOverlap.dataPointIndices[dataPointIndexIndex];\n\t\t\t\t\t\t\t\t\tconst dataPoint = animdata.dataPoints[dataPointIndex];\n\n\t\t\t\t\t\t\t\t\tif (dataPoint === undefined) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// If the data point covers the time, return the data point.\n\t\t\t\t\t\t\t\t\tif (dataPoint.interval.contains(time)) {\n\t\t\t\t\t\t\t\t\t\tconst u = (time - dataPoint.interval.min) / dataPoint.interval.length();\n\t\t\t\t\t\t\t\t\t\toutDataPoint.interval.min = time;\n\t\t\t\t\t\t\t\t\t\toutDataPoint.interval.max = time;\n\t\t\t\t\t\t\t\t\t\toutDataPoint.state.interpolate(dataPoint.state, animdata.dataPoints[dataPointIndex + 1].state, dataPoint.interval.length(), u);\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tcoverage.animdatas.set(animdataIndex, new AnimdataFile(this, coverageIndex, animdataIndex));\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcoverage.animinfos.set(animinfoIndex, new AniminfoFile(this, coverageIndex, animinfoIndex));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tEntity,\n\tEntityItem,\n\tInterval,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * The base class for all controllers.\n */\nexport class BaseController extends EntityItem {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The interval over which the controller is valid.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._coverage = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\tthis._coverage.freeze();\n\n\t\t/**\n\t\t * The modified states.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._modifiedStates = new Set();\n\n\t\t/**\n\t\t * The dependent states. In the format of '<entity name>.<state>'.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._dependentStates = new Set();\n\n\t\t// Add this to the controller dependency graph.\n\t\tthis.getEntity().getScene().getControllerDependencyGraph().addItem(this);\n\t}\n\n\t/**\n\t * Destroys the controller resources.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tthis.getEntity().getScene().getControllerDependencyGraph().removeItem(this);\n\t\tsuper.__destroy();\n\t}\n\n\t// STATES AND DEPENDENCIES\n\n\t/**\n\t * Adds a modified state to the controller.\n\t * @param {string} modifiedState\n\t * @protected\n\t */\n\taddModifiedState(modifiedState) {\n\t\tif (!this._modifiedStates.has(modifiedState)) {\n\t\t\tthis._modifiedStates.add(modifiedState);\n\t\t\tthis.getEntity().getScene().getControllerDependencyGraph().needsSorting();\n\t\t\tif (modifiedState === 'position' || modifiedState === 'orientation') {\n\t\t\t\tthis.getEntity().__updateCoverage();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes a modified state.\n\t * @param {string} modifiedState\n\t * @protected\n\t */\n\tremoveModifiedState(modifiedState) {\n\t\tif (this._modifiedStates.delete(modifiedState)) {\n\t\t\tthis.getEntity().getScene().getControllerDependencyGraph().needsSorting();\n\t\t\tif (modifiedState === 'position' || modifiedState === 'orientation') {\n\t\t\t\tthis.getEntity().__updateCoverage();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if this has the modified state.\n\t * @param {string} modifiedState\n\t * @returns {boolean}\n\t */\n\thasModifiedState(modifiedState) {\n\t\treturn this._modifiedStates.has(modifiedState);\n\t}\n\n\t/**\n\t * Adds a dependent state.\n\t * @param {string} entityName\n\t * @param {string} dependentState\n\t * @protected\n\t */\n\taddDependentState(entityName, dependentState) {\n\t\tif (!this._dependentStates.has(entityName + '.' + dependentState)) {\n\t\t\tthis._dependentStates.add(entityName + '.' + dependentState);\n\t\t\tthis.getEntity().getScene().getControllerDependencyGraph().needsSorting();\n\t\t}\n\t}\n\n\t/**\n\t * Removes a dependent state.\n\t * @param {string} entityName\n\t * @param {string} dependentState\n\t * @protected\n\t */\n\tremoveDependentState(entityName, dependentState) {\n\t\tif (this._dependentStates.delete(entityName + '.' + dependentState)) {\n\t\t\tthis.getEntity().getScene().getControllerDependencyGraph().needsSorting();\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if this has the dependent state.\n\t * @param {string} entityName\n\t * @param {string} dependentState\n\t * @returns {boolean}\n\t */\n\thasDependentState(entityName, dependentState) {\n\t\treturn this._dependentStates.has(entityName + '.' + dependentState);\n\t}\n\n\t/**\n\t * Gets an iterator to the modified states.\n\t * @returns {Set<string>}\n\t * @internal\n\t */\n\tget __modifiedStates() {\n\t\treturn this._modifiedStates;\n\t}\n\n\t/**\n\t * Gets the time interval over which the controller is valid.\n\t * @returns {Interval}\n\t */\n\tgetCoverage() {\n\t\treturn this._coverage;\n\t}\n\n\t/**\n\t * Sets the time interval over which the controller is valid.\n\t * @param {Interval} coverage\n\t */\n\tsetCoverage(coverage) {\n\t\tthis._coverage.thaw();\n\t\tthis._coverage.copy(coverage);\n\t\tthis._coverage.freeze();\n\t\tthis.getEntity().__updateCoverage();\n\t}\n\n\t/**\n\t * Updates the given position for the given time.\n\t * @param {Vector3} _position - The position to update.\n\t * @param {number} _time - The time to check\n\t */\n\t__updatePositionAtTime(_position, _time) { }\n\n\t/**\n\t * Updates the given velocity for the given time.\n\t * @param {Vector3} _velocity - The velocity to update.\n\t * @param {number} _time - The time to check\n\t */\n\t__updateVelocityAtTime(_velocity, _time) { }\n\n\t/**\n\t * Updates given orientation for the given time.\n\t * @param {Quaternion} _orientation - The orientation to update.\n\t * @param {number} _time - The time to check.\n\t */\n\t__updateOrientationAtTime(_orientation, _time) { }\n\n\t/**\n\t * Converts the entity item to a nice string.\n\t * @returns {string}\n\t * @override\n\t */\n\ttoString() {\n\t\tlet typeIndex = 0;\n\t\t// Search the controllers for the type.\n\t\tfor (let i = 0, l = this.getEntity().getNumControllers(); i < l; i++) {\n\t\t\tconst controller = this.getEntity().getController(i);\n\t\t\tif (this === controller) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.getType() === controller.getType()) {\n\t\t\t\ttypeIndex += 1;\n\t\t\t}\n\t\t}\n\t\treturn this.getEntity().getName() + '.' + this.getType() + '.' + typeIndex;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tInterval\n} from '../../internal';\n\n/**\n * A controller that calls enter and functions based on a coverage.\n */\nexport class CoverageController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The time interval over which the coverage is active.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis.coverage = new Interval();\n\n\t\t/**\n\t\t * The function called when the time enters the coverage.\n\t\t * @type {((entity: Entity) => any) | undefined}\n\t\t * @private\n\t\t */\n\t\tthis.enterFunction = undefined;\n\n\t\t/**\n\t\t * The function called when the time exits the coverage.\n\t\t * @type {((entity: Entity) => any) | undefined}\n\t\t * @private\n\t\t */\n\t\tthis.exitFunction = undefined;\n\n\t\t/**\n\t\t * The function called when the time is inside the coverage, every frame.\n\t\t * @type {((entity: Entity) => any) | undefined}\n\t\t * @private\n\t\t */\n\t\tthis.updateFunction = undefined;\n\n\t\t/**\n\t\t * Flag determining if the coverage is active or not.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis.active = false;\n\n\t\t/**\n\t\t * The last real time the update function ran.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis.lastUpdateTime = Number.NEGATIVE_INFINITY;\n\n\t\t/**\n\t\t * How often to run the update function, in milliseconds. 0 means run every frame.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis.updateInterval = 0;\n\t}\n\n\t/**\n\t * Sets the coverage.\n\t * @param {Interval} coverage\n\t * @override\n\t */\n\tsetCoverage(coverage) {\n\t\tthis.coverage.copy(coverage);\n\t}\n\n\t/**\n\t * Sets the enter function. This function will be triggered once when the time enters the coverage.\n\t * @param {((entity: Entity) => any) | undefined} enterFunction\n\t */\n\tsetEnterFunction(enterFunction) {\n\t\tthis.enterFunction = enterFunction;\n\t}\n\n\t/**\n\t * Sets the exit function. This function will be triggered once when the time exits the coverage.\n\t * @param {((entity: Entity) => any) | undefined} exitFunction\n\t */\n\tsetExitFunction(exitFunction) {\n\t\tthis.exitFunction = exitFunction;\n\t}\n\n\t/**\n\t * Sets the update function. This function will be triggered every frame that the time is within the coverage.\n\t * @param {((entity: Entity) => any) | undefined} updateFunction\n\t */\n\tsetUpdateFunction(updateFunction) {\n\t\tthis.updateFunction = updateFunction;\n\t}\n\n\t/**\n\t * Sets how often to run the update function, in seconds. The default 0 means run every frame.\n\t * @param {number} updateInterval\n\t */\n\tsetUpdateInterval(updateInterval) {\n\t\tthis.updateInterval = updateInterval * 1000;\n\t}\n\n\t/**\n\t * Updates the position and orientation if they are fixed.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst time = this.getEntity().getScene().getEngine().getTime();\n\n\t\t// If this is the first coverage controller, we'll trigger all of the exit functions() necessary.\n\t\tif (this.getTypeIndex() === 0) {\n\t\t\tfor (let i = 0; ; i++) {\n\t\t\t\tconst coverageController = this.getEntity().getControllerByClass(CoverageController, i);\n\t\t\t\tif (coverageController === null) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst newActive = coverageController.coverage.contains(time);\n\t\t\t\tif (coverageController.active && !newActive) {\n\t\t\t\t\tif (coverageController.exitFunction) {\n\t\t\t\t\t\tcoverageController.exitFunction(this.getEntity());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now call the enter function.\n\t\tconst newActive = this.coverage.contains(time);\n\t\tif (!this.active && newActive) {\n\t\t\tif (this.enterFunction) {\n\t\t\t\tthis.enterFunction(this.getEntity());\n\t\t\t}\n\t\t}\n\n\t\t// Call the update function.\n\t\tif (newActive && this.updateFunction) {\n\t\t\tconst now = Date.now();\n\t\t\tif (now - this.lastUpdateTime >= this.updateInterval) {\n\t\t\t\tthis.lastUpdateTime = now;\n\t\t\t\tthis.updateFunction(this.getEntity());\n\t\t\t}\n\t\t}\n\t\tthis.active = newActive;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tDownloader,\n\tEntity,\n\tInterval,\n\tMathUtils,\n\tOrbitalElements,\n\tQuaternion,\n\tReader,\n\tVector3\n} from '../../internal';\n\nclass Point {\n\t/**\n\t * Load the point from the reader.\n\t * @param {Reader} reader\n\t */\n\tload(reader) {\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\tthis.time = reader.readFloat64();\n\t}\n\n\t/**\n\t * Sets this to the calculated point in between two points.\n\t * @param {[Point, Point]} _points\n\t * @param {number} _time\n\t * @param {Object<string, number>} _header\n\t * @param {boolean} _incremental\n\t * @abstract\n\t */\n\tcalculate(_points, _time, _header, _incremental) { }\n\n\t/**\n\t * Apply the point to the entity.\n\t * @param {Entity} _entity\n\t * @abstract\n\t */\n\tapply(_entity) { }\n\n\t/**\n\t * Sets the entity's point to NaN to clear out any data.\n\t * @param {Entity} _entity\n\t * @abstract\n\t */\n\tsetNaN(_entity) { }\n\n\t/**\n\t * Reads the header information for this type from the reader.\n\t * @param {Reader} _reader\n\t * @returns {Object<string, number>}\n\t */\n\tstatic readHeader(_reader) {\n\t\treturn {};\n\t}\n}\n\nclass PosPoint extends Point {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.position = new Vector3();\n\t\tthis.velocity = new Vector3();\n\t}\n\n\t/**\n\t * Load the point from the reader.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tload(reader) {\n\t\tsuper.load(reader);\n\n\t\tthis.position = new Vector3(reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t\tthis.velocity = new Vector3(reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t}\n\n\t/**\n\t * Sets this to the calculated point in between two points.\n\t * @param {[PosPoint, PosPoint]} points\n\t * @param {number} time\n\t * @param {Object<string, number>} _header\n\t * @param {boolean} _incremental\n\t * @override\n\t */\n\tcalculate(points, time, _header, _incremental) {\n\t\tthis.time = time;\n\t\tconst totalT = points[1].time - points[0].time;\n\t\tconst u = (time - points[0].time) / totalT;\n\t\tconst oneSubU = 1.0 - u;\n\t\tconst oneSubUSq = oneSubU * oneSubU;\n\t\tconst uSq = u * u;\n\t\tconst a = (1.0 + 2.0 * u) * oneSubUSq;\n\t\tconst b = u * oneSubUSq;\n\t\tconst c = uSq * (3.0 - 2.0 * u);\n\t\tconst d = uSq * -oneSubU;\n\t\tthis.position.mult(points[0].position, a);\n\t\tthis.position.addMult(this.position, points[0].velocity, totalT * b);\n\t\tthis.position.addMult(this.position, points[1].position, c);\n\t\tthis.position.addMult(this.position, points[1].velocity, totalT * d);\n\t\tconst sixUSqSubU = 6.0 * (uSq - u);\n\t\tconst aV = sixUSqSubU;\n\t\tconst bV = 3.0 * uSq - 4.0 * u + 1.0;\n\t\tconst cV = -sixUSqSubU;\n\t\tconst dV = 3.0 * uSq - 2.0 * u;\n\t\tthis.velocity.mult(points[0].position, aV / totalT);\n\t\tthis.velocity.addMult(this.velocity, points[0].velocity, bV);\n\t\tthis.velocity.addMult(this.velocity, points[1].position, cV / totalT);\n\t\tthis.velocity.addMult(this.velocity, points[1].velocity, dV);\n\t}\n\n\t/**\n\t * Apply the point to the entity.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tapply(entity) {\n\t\tentity.setPosition(this.position);\n\t\tentity.setVelocity(this.velocity);\n\t}\n\n\t/**\n\t * Sets the entity's point to NaN to clear out any data.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tsetNaN(entity) {\n\t\tentity.setPosition(Vector3.NaN);\n\t\tentity.setVelocity(Vector3.NaN);\n\t}\n\n\t/**\n\t * Reads the header information for this type from the reader.\n\t * @param {Reader} _reader\n\t * @returns {Object<string, number>}\n\t * @override\n\t */\n\tstatic readHeader(_reader) {\n\t\treturn {};\n\t}\n}\n\nclass LinPoint extends Point {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.position = new Vector3();\n\t\tthis.velocity = new Vector3();\n\t}\n\n\t/**\n\t * Load the point from the reader.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tload(reader) {\n\t\tsuper.load(reader);\n\t\tthis.position.set(reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t\tthis.velocity.copy(Vector3.Zero);\n\t}\n\n\t/**\n\t * Sets this to the calculated point in between two points.\n\t * @param {[LinPoint, LinPoint]} points\n\t * @param {number} time\n\t * @param {Object<string, number>} _header\n\t * @param {boolean} _incremental\n\t * @override\n\t */\n\tcalculate(points, time, _header, _incremental) {\n\t\tthis.time = time;\n\t\tif (points[1].time > points[0].time) {\n\t\t\tconst u = MathUtils.clamp01((time - points[0].time) / (points[1].time - points[0].time));\n\t\t\tthis.position.lerp(points[0].position, points[1].position, u);\n\t\t\tthis.velocity.sub(points[1].position, points[0].position);\n\t\t\tthis.velocity.div(this.velocity, points[1].time - points[0].time);\n\t\t}\n\t\telse {\n\t\t\tthis.position.copy(points[1].position);\n\t\t\tthis.velocity.copy(Vector3.Zero);\n\t\t}\n\t}\n\n\t/**\n\t * Apply the point to the entity.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tapply(entity) {\n\t\tentity.setPosition(this.position);\n\t\tentity.setVelocity(this.velocity);\n\t}\n\n\t/**\n\t * Sets the entity's point to NaN to clear out any data.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tsetNaN(entity) {\n\t\tentity.setPosition(Vector3.NaN);\n\t\tentity.setVelocity(Vector3.NaN);\n\t}\n\n\t/**\n\t * Reads the header information for this type from the reader.\n\t * @param {Reader} _reader\n\t * @returns {Object<string, number>}\n\t * @override\n\t */\n\tstatic readHeader(_reader) {\n\t\treturn {};\n\t}\n}\n\nclass OriPoint extends Point {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.orientation = new Quaternion();\n\t\tthis.angularVelocity = new Vector3();\n\t}\n\n\t/**\n\t * Load the point from the reader.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tload(reader) {\n\t\tsuper.load(reader);\n\n\t\tthis.orientation = new Quaternion(reader.readFloat64(), reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t\tthis.angularVelocity = new Vector3(reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t}\n\n\t/**\n\t * Sets this to the calculated point in between two points.\n\t * @param {[OriPoint, OriPoint]} points\n\t * @param {number} time\n\t * @param {Object<string, number>} _header\n\t * @param {boolean} incremental\n\t * @override\n\t */\n\tcalculate(points, time, _header, incremental) {\n\t\tthis.time = time;\n\t\tconst orientation0 = Quaternion.pool.get();\n\t\tconst orientation1 = Quaternion.pool.get();\n\t\tconst u = (time - points[0].time) / (points[1].time - points[0].time);\n\t\tpoints[0]._project(orientation0, time, incremental);\n\t\tpoints[1]._project(orientation1, time, incremental);\n\t\tthis.orientation.slerp(orientation0, orientation1, u);\n\t\tQuaternion.pool.release(orientation0);\n\t\tQuaternion.pool.release(orientation1);\n\t\tthis.angularVelocity.slerp(points[0].angularVelocity, points[1].angularVelocity, u);\n\t\tthis.angularVelocity.neg(this.angularVelocity);\n\t\tthis.angularVelocity.rotate(this.orientation, this.angularVelocity);\n\t}\n\n\t/**\n\t * Apply the point to the entity.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tapply(entity) {\n\t\tentity.setOrientation(this.orientation);\n\t\tentity.setAngularVelocity(this.angularVelocity);\n\t}\n\n\t/**\n\t * Apply the point, projected in time, to the orientation, if it applies.\n\t * @param {Quaternion} orientation\n\t * @param {number} time\n\t * @param {boolean} incremental\n\t */\n\t_project(orientation, time, incremental) {\n\t\tconst rotationAxis = Vector3.pool.get();\n\t\tconst rotation = Quaternion.pool.get();\n\t\trotationAxis.normalize(this.angularVelocity);\n\t\trotation.setFromAxisAngle(rotationAxis, this.angularVelocity.magnitude() * (time - this.time));\n\t\tVector3.pool.release(rotationAxis);\n\t\tif (incremental) {\n\t\t\trotation.multInverseR(this.orientation, rotation);\n\t\t\torientation.mult(orientation, rotation);\n\t\t}\n\t\telse {\n\t\t\torientation.multInverseR(this.orientation, rotation);\n\t\t}\n\t\tQuaternion.pool.release(rotation);\n\t}\n\n\t/**\n\t * Sets the entity's point to NaN to clear out any data.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tsetNaN(entity) {\n\t\tentity.setOrientation(Quaternion.NaN);\n\t\tentity.setAngularVelocity(Vector3.NaN);\n\t}\n\n\t/**\n\t * Reads the header information for this type from the reader.\n\t * @param {Reader} _reader\n\t * @returns {Object<string, number>}\n\t * @override\n\t */\n\tstatic readHeader(_reader) {\n\t\treturn {};\n\t}\n}\n\nclass QuatPoint extends Point {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.orientation = new Quaternion();\n\t\tthis.angularVelocity = new Vector3();\n\t}\n\n\t/**\n\t * Load the point from the reader.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tload(reader) {\n\t\tsuper.load(reader);\n\n\t\tthis.orientation = new Quaternion(reader.readFloat64(), reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t}\n\n\t/**\n\t * Sets this to the calculated point in between two points.\n\t * @param {[QuatPoint, QuatPoint]} points\n\t * @param {number} time\n\t * @param {Object<string, number>} _header\n\t * @param {boolean} _incremental\n\t * @override\n\t */\n\tcalculate(points, time, _header, _incremental) {\n\t\tthis.time = time;\n\t\tconst u = MathUtils.clamp01((time - points[0].time) / (points[1].time - points[0].time));\n\t\tthis.orientation.slerp(points[0].orientation, points[1].orientation, u);\n\t}\n\n\t/**\n\t * Apply the point to the entity.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tapply(entity) {\n\t\tentity.setOrientation(this.orientation);\n\t\tentity.setAngularVelocity(Vector3.Zero);\n\t}\n\n\t/**\n\t * Sets the entity's point to NaN to clear out any data.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tsetNaN(entity) {\n\t\tentity.setOrientation(Quaternion.NaN);\n\t\tentity.setAngularVelocity(Vector3.NaN);\n\t}\n\n\t/**\n\t * Reads the header information for this type from the reader.\n\t * @param {Reader} _reader\n\t * @returns {Object<string, number>}\n\t * @override\n\t */\n\tstatic readHeader(_reader) {\n\t\treturn {};\n\t}\n}\n\nclass OrbPoint extends Point {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.oe = new OrbitalElements();\n\t\tthis.oe.orbitOrientation.freeze();\n\n\t\tthis.position = new Vector3();\n\t\tthis.velocity = new Vector3();\n\t}\n\n\t/**\n\t * Load the point from the reader.\n\t * @param {Reader} reader\n\t * @override\n\t */\n\tload(reader) {\n\t\tsuper.load(reader);\n\t\tthis.oe.epoch = this.time;\n\n\t\tthis.oe.semiMajorAxis = reader.readFloat64();\n\t\tthis.oe.eccentricity = reader.readFloat64();\n\t\tthis.oe.meanAngularMotion = reader.readFloat64();\n\t\tthis.oe.meanAnomalyAtEpoch = reader.readFloat64();\n\t\tthis.oe.orbitOrientation.thaw();\n\t\tthis.oe.orbitOrientation.set(reader.readFloat64(), reader.readFloat64(), reader.readFloat64(), reader.readFloat64());\n\t\tthis.oe.orbitOrientation.freeze();\n\t}\n\n\t/**\n\t * Sets this to the calculated point in between two points.\n\t * @param {[OrbPoint, OrbPoint]} points\n\t * @param {number} time\n\t * @param {Object<string, number>} header\n\t * @param {boolean} incremental\n\t * @override\n\t */\n\tcalculate(points, time, header, incremental) {\n\t\tthis.time = time;\n\t\tthis.oe.epoch = time;\n\t\tconst position0 = Vector3.pool.get();\n\t\tconst position1 = Vector3.pool.get();\n\t\tconst velocity0 = Vector3.pool.get();\n\t\tconst velocity1 = Vector3.pool.get();\n\t\tconst u = MathUtils.clamp01((time - points[0].time) / (points[1].time - points[0].time));\n\t\tpoints[0]._project(position0, velocity0, time, header, incremental);\n\t\tpoints[1]._project(position1, velocity1, time, header, incremental);\n\t\tthis.position.lerp(position0, position1, u);\n\t\tthis.velocity.lerp(velocity0, velocity1, u);\n\t\tVector3.pool.release(position0);\n\t\tVector3.pool.release(position1);\n\t\tVector3.pool.release(velocity0);\n\t\tVector3.pool.release(velocity1);\n\t}\n\n\t/**\n\t * Apply the point to the entity.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tapply(entity) {\n\t\tentity.setPosition(this.position);\n\t\tentity.setVelocity(this.velocity);\n\t}\n\n\t/**\n\t * Apply the point, projected in time, to the position, if it applies.\n\t * @param {Vector3} position\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @param {Object<string, number>} header\n\t * @param {boolean} incremental\n\t */\n\t_project(position, velocity, time, header, incremental) {\n\t\tconst newPosition = Vector3.pool.get();\n\t\tconst newVelocity = Vector3.pool.get();\n\n\t\t// Project the position and velocity.\n\t\tthis.oe.project(newPosition, newVelocity, time);\n\n\t\t// Get and multiply by the body factor so that the orbit works relative to the other object and not the focus.\n\t\tlet bodyFactor = 1;\n\t\tif (header['body'] === 1) {\n\t\t\tbodyFactor = header['gravitationalParameter2'] / (header['gravitationalParameter1'] + header['gravitationalParameter2']);\n\t\t}\n\t\telse if (header['body'] === 2) {\n\t\t\tbodyFactor = -header['gravitationalParameter1'] / (header['gravitationalParameter1'] + header['gravitationalParameter2']);\n\t\t}\n\t\tnewPosition.mult(newPosition, bodyFactor);\n\t\tnewVelocity.mult(newVelocity, bodyFactor);\n\n\t\t// Rotate the vectors by the orbit orientation.\n\t\tif (incremental) {\n\t\t\tposition.add(newPosition, position);\n\t\t}\n\t\telse {\n\t\t\tposition.copy(newPosition);\n\t\t}\n\t\tvelocity.copy(newVelocity);\n\t\tVector3.pool.release(newPosition);\n\t\tVector3.pool.release(newVelocity);\n\t}\n\n\t/**\n\t * Sets the entity's point to NaN to clear out any data.\n\t * @param {Entity} entity\n\t * @override\n\t */\n\tsetNaN(entity) {\n\t\tentity.setPosition(Vector3.NaN);\n\t\tentity.setVelocity(Vector3.NaN);\n\t}\n\n\t/**\n\t * Reads the header information for this type from the reader.\n\t * @param {Reader} reader\n\t * @returns {Object<string, number>}\n\t * @override\n\t */\n\tstatic readHeader(reader) {\n\t\treturn {\n\t\t\tgravitationalParameter1: reader.readFloat64(),\n\t\t\tgravitationalParameter2: reader.readFloat64()\n\t\t};\n\t}\n}\n\nclass PointSet {\n\t/**\n\t * @param {typeof Point} PointClass\n\t * @param {number} version\n\t * @param {number} numberOfDigits\n\t * @param {string} name\n\t */\n\tconstructor(PointClass, version, numberOfDigits, name) {\n\t\t/**\n\t\t * The type of data.\n\t\t * @type {typeof Point}\n\t\t */\n\t\tthis._PointClass = PointClass;\n\n\t\t/**\n\t\t * The version of the dynamo type.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._version = version;\n\n\t\t/**\n\t\t * The number of digits for every index file's level.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numberOfDigits = numberOfDigits;\n\n\t\t/**\n\t\t * The name to be used when loading the point set.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\n\t\t/**\n\t\t * The array of points sets.\n\t\t * @type {PointSet[]}\n\t\t */\n\t\tthis._pointSets = [];\n\n\t\t/**\n\t\t * The array of points.\n\t\t * @type {Point[]}\n\t\t */\n\t\tthis._points = [];\n\n\t\t/**\n\t\t * The hint index used for getting the point or point set index.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._hintIndex = 0;\n\n\t\t/**\n\t\t * The interval which covers the points.\n\t\t * @type {Interval}\n\t\t */\n\t\tthis._interval = new Interval(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\n\t\t/**\n\t\t * State that determines whether the point set data is not loaded, loading, or loaded.\n\t\t * @type {number}\n\t\t */\n\t\tthis._loadedState = PointSet.State.NOT_LOADED;\n\n\t\t/**\n\t\t * The timestamp when this point set was loaded.\n\t\t * @type {number}\n\t\t */\n\t\tthis._accessedTime = Number.POSITIVE_INFINITY;\n\t}\n\n\t/**\n\t * Returns the name of the point set, used in downloading the file.\n\t * @returns {string}\n\t */\n\tgetName() {\n\t\treturn this._name;\n\t}\n\n\t/**\n\t * Returns the loaded state of the point set.\n\t * @returns {number}\n\t */\n\tgetLoadedState() {\n\t\treturn this._loadedState;\n\t}\n\n\t/**\n\t * Returns the loaded state of the point set.\n\t * @returns {number}\n\t */\n\tgetLoadedTime() {\n\t\treturn this._accessedTime;\n\t}\n\n\t/**\n\t * Returns true if the point set has point sets.\n\t * @returns {boolean}\n\t */\n\thasPointSets() {\n\t\treturn this._pointSets.length !== 0;\n\t}\n\n\t/**\n\t * Returns true if the point set has points.\n\t * @returns {boolean}\n\t */\n\thasPoints() {\n\t\treturn this._points.length !== 0;\n\t}\n\n\t/**\n\t * Loads the data from a reader.\n\t * @param {Reader} reader\n\t */\n\tload(reader) {\n\t\t// Point set if it is in the definition file.\n\t\tlet containsPoints = true;\n\t\tif (this._version === 2 || (this._version === 1 && this._name === 'def')) {\n\t\t\tcontainsPoints = (reader.readByte() === 1);\n\t\t}\n\n\t\tif (containsPoints) {\n\t\t\t// Read the data points.\n\t\t\tconst numPoints = reader.readInt32();\n\t\t\tfor (let i = 0; i < numPoints; i++) {\n\t\t\t\tconst point = new this._PointClass();\n\t\t\t\tpoint.load(reader);\n\t\t\t\tthis._points.push(point);\n\t\t\t}\n\t\t\t// Adjust the interval to match the data points.\n\t\t\tif (this._points.length > 0) {\n\t\t\t\tthis._interval.min = this._points[0].time;\n\t\t\t\tthis._interval.max = this._points[this._points.length - 1].time;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Read the data sets.\n\t\t\tconst numPointSets = reader.readInt32();\n\t\t\tif (this._version === 1) {\n\t\t\t\tthis._numberOfDigits = Math.ceil(Math.log10(numPointSets));\n\t\t\t}\n\t\t\tfor (let i = 0; i < numPointSets; i++) {\n\t\t\t\tlet newName = '';\n\t\t\t\tif (this._name === 'def') {\n\t\t\t\t\tnewName = (i + '').padStart(this._numberOfDigits, '0');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewName = this._name + '_' + (i + '').padStart(this._numberOfDigits, '0');\n\t\t\t\t}\n\t\t\t\tconst pointSet = new PointSet(this._PointClass, this._version, this._numberOfDigits, newName);\n\t\t\t\tpointSet._interval.min = reader.readFloat64();\n\t\t\t\tif (this._version === 1) {\n\t\t\t\t\tpointSet._interval.max = reader.readFloat64();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tthis._pointSets[i - 1]._interval.max = pointSet._interval.min;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._pointSets.push(pointSet);\n\t\t\t}\n\t\t\tif (this._version === 2) {\n\t\t\t\tthis._pointSets.splice(this._pointSets.length - 1, 1);\n\t\t\t}\n\t\t\t// Adjust the interval to match the data points.\n\t\t\tif (this._pointSets.length > 0) {\n\t\t\t\tthis._interval.min = this._pointSets[0]._interval.min;\n\t\t\t\tthis._interval.max = this._pointSets[this._pointSets.length - 1]._interval.max;\n\t\t\t}\n\t\t}\n\n\t\t// Set the loaded flag to true and set the time loaded.\n\t\tthis._loadedState = PointSet.State.LOADED;\n\t\tthis._accessedTime = Date.now();\n\t}\n\n\t/**\n\t * Loads the point set from a url.\n\t * @param {Downloader} downloader\n\t * @param {string} baseUrl\n\t */\n\tloadFromUrl(downloader, baseUrl) {\n\t\tthis._loadedState = PointSet.State.LOADING;\n\t\tdownloader.download(baseUrl + '/' + this._name + '.dyn', true).then(async (download) => {\n\t\t\tif (download.status === 'cancelled') {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\treturn Promise.reject(new Error('Failed to load dynamo controller file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t}\n\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\treturn Promise.reject(new Error('Failed to load dynamo controller file \"' + download.url + '\": Not a binary file.'));\n\t\t\t}\n\t\t\tconst reader = new Reader(download.content);\n\t\t\tthis.load(reader);\n\t\t});\n\t}\n\n\t/**\n\t * Unloads one point set that hasn't been accessed recently. Returns true if a point set was unloaded.\n\t * @returns {boolean}\n\t */\n\tunloadOldPointSet() {\n\t\t// Remove the oldest point set.\n\t\tfor (let i = 0, l = this._pointSets.length; i < l; i++) {\n\t\t\tconst pointSet = this._pointSets[i];\n\t\t\tif (pointSet._loadedState === PointSet.State.LOADED) {\n\t\t\t\tif (Date.now() - pointSet._accessedTime > 15000) { // If this point set hasn't been accessed in 15 seconds, expire it.\n\t\t\t\t\tpointSet.unload();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (pointSet.unloadOldPointSet()) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Unloads the data.\n\t */\n\tunload() {\n\t\tthis._loadedState = PointSet.State.NOT_LOADED;\n\t\tthis._accessedTime = Number.POSITIVE_INFINITY;\n\t\tthis._pointSets = [];\n\t\tthis._points = [];\n\t}\n\n\t/**\n\t * Gets the point set index for the given time, using a starting index as a hint to make things faster.\n\t * @param {number} time\n\t * @returns {PointSet}\n\t */\n\tgetPointSet(time) {\n\t\tthis._accessedTime = Date.now();\n\t\tif (this._pointSets.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\t// Use hint index to see if we can quickly find the right point set.\n\t\tif (this._pointSets[this._hintIndex]._interval.contains(time)) {\n\t\t\t// do nothing\n\t\t}\n\t\telse if (this._hintIndex - 1 >= 0 && this._pointSets[this._hintIndex - 1]._interval.contains(time)) {\n\t\t\tthis._hintIndex -= 1;\n\t\t}\n\t\telse if (this._hintIndex + 1 < this._pointSets.length && this._pointSets[this._hintIndex + 1]._interval.contains(time)) {\n\t\t\tthis._hintIndex += 1;\n\t\t}\n\t\t// Do a binary search to find the right point set index.\n\t\telse {\n\t\t\tlet min = 0;\n\t\t\tlet max = this._pointSets.length - 1;\n\t\t\tlet index = 0;\n\t\t\twhile (min !== max) {\n\t\t\t\tindex = Math.ceil((min + max) / 2);\n\t\t\t\tif (time < this._pointSets[index]._interval.min) {\n\t\t\t\t\tmax = index - 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmin = index;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._hintIndex = min;\n\t\t}\n\t\treturn this._pointSets[this._hintIndex];\n\t}\n\n\t/**\n\t * Gets the point index for the given time, using a starting index as a hint to make things faster.\n\t * @param {[Point | null, Point | null]} points\n\t * @param {number} time\n\t */\n\tgetPoints(points, time) {\n\t\tthis._accessedTime = Date.now();\n\t\tif (this._points.length === 0) {\n\t\t\tpoints[0] = null;\n\t\t\tpoints[1] = null;\n\t\t\treturn;\n\t\t}\n\t\t// Use hint index to see if we can quickly find the right point.\n\t\tif (this._hintIndex + 1 < this._points.length && this._points[this._hintIndex].time <= time && time < this._points[this._hintIndex + 1].time) {\n\t\t\t// do nothing\n\t\t}\n\t\telse if (this._hintIndex - 1 >= 0 && this._points[this._hintIndex - 1].time <= time && time < this._points[this._hintIndex].time) {\n\t\t\tthis._hintIndex -= 1;\n\t\t}\n\t\telse if (this._hintIndex + 2 < this._points.length && this._points[this._hintIndex + 1].time <= time && time < this._points[this._hintIndex + 2].time) {\n\t\t\tthis._hintIndex += 1;\n\t\t}\n\t\t// Do a binary search to find the right point index.\n\t\telse {\n\t\t\tlet min = 0;\n\t\t\tlet max = this._points.length - 2;\n\t\t\tlet index = 0;\n\t\t\twhile (min !== max) {\n\t\t\t\tindex = Math.ceil((min + max) / 2);\n\t\t\t\tif (time < this._points[index].time) {\n\t\t\t\t\tmax = index - 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmin = index;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._hintIndex = min;\n\t\t}\n\t\tpoints[0] = this._points[this._hintIndex];\n\t\tpoints[1] = this._points[this._hintIndex + 1];\n\t}\n}\n\nPointSet.State = {\n\tNOT_LOADED: 0,\n\tLOADING: 1,\n\tLOADED: 2\n};\n\n/**\n * A controller that animates via the Dynamo file format.\n */\nexport class DynamoController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The base url within which the Dynamo files are contained.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._baseUrl = '';\n\n\t\t/**\n\t\t * The flag that says whether all data is loaded for the current time.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._dataLoadedAtCurrentTime = false;\n\n\t\t/**\n\t\t * The time offset that is applied to the dynamo when reading data.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._timeOffset = 0;\n\n\t\t/**\n\t\t * The version of the dynamo type.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._version = 0;\n\n\t\t/**\n\t\t * The point type.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._pointType = '';\n\n\t\t/**\n\t\t * The class of the point type.\n\t\t * @type {typeof Point}\n\t\t * @private\n\t\t */\n\t\tthis._PointClass = null;\n\n\t\t/**\n\t\t * The number of digits for every index file's level.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numberOfDigits = 0;\n\n\t\t/**\n\t\t * Point-specific header information for use in calculations.\n\t\t * @type {Object<string, number>}\n\t\t * @private\n\t\t */\n\t\tthis._header = {\n\t\t\tbody: 0\n\t\t};\n\n\t\t/**\n\t\t * A flag that determines whether the controller incrementally changes the position each frame instead of setting the position.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._incremental = false;\n\n\t\t/**\n\t\t * The root point set in the definition file.\n\t\t * @type {PointSet}\n\t\t * @private\n\t\t */\n\t\tthis._pointSet = null;\n\n\t\t/**\n\t\t * A reference to the downloader for downloading files.\n\t\t * @type {Downloader}\n\t\t * @private\n\t\t */\n\t\tthis._downloader = entity.getScene().getEngine().getDownloader();\n\n\t\t/**\n\t\t * Temporary point for calculations.\n\t\t * @type {[Point | null, Point | null]}\n\t\t * @private\n\t\t */\n\t\tthis._points = [null, null];\n\n\t\t/**\n\t\t * The last known good points used in the update function.\n\t\t * @type {[Point | null, Point | null]}\n\t\t * @private\n\t\t */\n\t\tthis._lastPoints = [null, null];\n\n\t\t/**\n\t\t * The last time used in the update function.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lastTime = Number.NaN;\n\n\t\t/**\n\t\t * Temporary point for calculations.\n\t\t * @type {Point}\n\t\t * @private\n\t\t */\n\t\tthis._pCalc = null;\n\n\t\t/**\n\t\t * The user coverage that limits the coverage coming from the data.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._userCoverage = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\tthis._userCoverage.freeze();\n\t}\n\n\t/**\n\t * Gets the point type. It can be 'pos', 'lin', 'orb', 'ori', or 'quat'.\n\t * @returns {string}\n\t */\n\tgetPointType() {\n\t\treturn this._pointType;\n\t}\n\n\t/**\n\t * Gets the value of a header key.\n\t * @param {string} key\n\t * @returns {number}\n\t */\n\tgetHeaderValue(key) {\n\t\treturn this._header[key];\n\t}\n\n\t/**\n\t * Sets a key and value in the header information that the controller may use when updating.\n\t * @param {string} key\n\t * @param {number} value\n\t */\n\tsetHeaderValue(key, value) {\n\t\tthis._header[key] = value;\n\t}\n\n\t/**\n\t * Returns true if the controller incrementally changes the position each frame instead of setting the position. Defaults to false.\n\t * @returns {boolean}\n\t */\n\tisIncremental() {\n\t\treturn this._incremental;\n\t}\n\n\t/**\n\t * Sets whether the controller incrementally changes the position each frame instead of setting the position.\n\t * @param {boolean} incremental\n\t */\n\tsetIncremental(incremental) {\n\t\tthis._incremental = incremental;\n\t}\n\n\t/**\n\t * Gets the base url within which the Dynamo files are contained.\n\t * @returns {string}\n\t */\n\tgetBaseUrl() {\n\t\treturn this._baseUrl;\n\t}\n\n\t/**\n\t * Sets the base url within which the Dynamo files are contained.\n\t * @param {string} baseUrl\n\t */\n\tsetBaseUrl(baseUrl) {\n\t\t// Clear out previous dynamo.\n\t\tif (this._baseUrl !== '') {\n\t\t\tthis._downloader.cancel(this._baseUrl + '/def.dyn');\n\t\t\tthis._pointSet = null;\n\t\t\tthis._PointClass = null;\n\t\t\tthis._userCoverage.thaw();\n\t\t\tthis._userCoverage = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\t\tthis._userCoverage.freeze();\n\t\t\tsuper.setCoverage(new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY));\n\t\t\tthis.addModifiedState('position');\n\t\t\tthis.addModifiedState('velocity');\n\t\t\tthis.addModifiedState('orientation');\n\t\t\tthis.addModifiedState('angularVelocity');\n\t\t\tthis._dataLoadedAtCurrentTime = false;\n\t\t}\n\n\t\tthis._baseUrl = baseUrl;\n\t\tif (this._baseUrl.endsWith('/')) {\n\t\t\tthis._baseUrl = this._baseUrl.slice(0, -1);\n\t\t}\n\n\t\tthis._loadDef();\n\t}\n\n\t/**\n\t * Gets a promise when the initial dynamo (the def file) is loaded.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tgetLoadedPromise() {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst engine = this.getEntity().getScene().getEngine();\n\t\t\tconst callback = () => {\n\t\t\t\tconst time = engine.getTime();\n\t\t\t\tif (this.isDestroyed() || !this.isEnabled() || !this.getEntity().isEnabled() || this._baseUrl === '' || (this._pointSet !== null && !this.getCoverage().contains(time)) || this._dataLoadedAtCurrentTime) {\n\t\t\t\t\tengine.removeCallback(callback);\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t};\n\t\t\tengine.addCallback(callback, true);\n\t\t});\n\t}\n\n\t/**\n\t * Gets the time offset that is applied to the dynamo when reading data.\n\t * @returns {number}\n\t */\n\tgetTimeOffset() {\n\t\treturn this._timeOffset;\n\t}\n\n\t/**\n\t * Sets the time offset that is applied to the dynamo when reading data.\n\t * @param {number} timeOffset\n\t */\n\tsetTimeOffset(timeOffset) {\n\t\tconst oldTimeOffset = this._timeOffset;\n\t\tthis._timeOffset = timeOffset;\n\t\t// Adjust the coverage offset to reflect new offset.\n\t\tconst newCoverage = new Interval();\n\t\tnewCoverage.copy(this.getCoverage());\n\t\tnewCoverage.min += this._timeOffset - oldTimeOffset;\n\t\tnewCoverage.max += this._timeOffset - oldTimeOffset;\n\t\tsuper.setCoverage(newCoverage);\n\t\t// It doesn't change the point set intervals.\n\t}\n\n\t/**\n\t * Sets the time interval over which the controller is valid.\n\t * @param {Interval} coverage\n\t * @override\n\t */\n\tsetCoverage(coverage) {\n\t\tthis._userCoverage.thaw();\n\t\tthis._userCoverage.copy(coverage);\n\t\tthis._userCoverage.freeze();\n\t\tconst finalCoverage = Interval.pool.get();\n\t\tif (this._pointSet !== null) {\n\t\t\tfinalCoverage.intersection(this._userCoverage, this._pointSet._interval);\n\t\t}\n\t\telse {\n\t\t\tfinalCoverage.copy(new Interval(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY));\n\t\t}\n\t\tfinalCoverage.min += this._timeOffset;\n\t\tfinalCoverage.max += this._timeOffset;\n\t\tsuper.setCoverage(finalCoverage);\n\t\tInterval.pool.release(finalCoverage);\n\t}\n\n\t/**\n\t * Gets the orbital elements at the given time.\n\t * @param {OrbitalElements} orbitalElements\n\t * @param {number} time\n\t */\n\tgetOrbitalElements(orbitalElements, time) {\n\t\tif (this._PointClass === OrbPoint && this._pointSet !== null) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] !== null) {\n\t\t\t\tthis._lastPoints[0] = this._points[0];\n\t\t\t\tthis._lastPoints[1] = this._points[1];\n\t\t\t}\n\t\t\tif (this._lastPoints[0] !== null) {\n\t\t\t\tconst oe0 = /** @type {OrbPoint} */(this._lastPoints[0]).oe;\n\t\t\t\tconst oe1 = /** @type {OrbPoint} */(this._lastPoints[1]).oe;\n\t\t\t\tconst u = MathUtils.clamp01((time - this._lastPoints[0].time) / (this._lastPoints[1].time - this._lastPoints[0].time));\n\t\t\t\torbitalElements.eccentricity = MathUtils.lerp(oe0.eccentricity, oe1.eccentricity, u);\n\t\t\t\torbitalElements.semiMajorAxis = MathUtils.lerp(oe0.semiMajorAxis, oe1.semiMajorAxis, u);\n\t\t\t\torbitalElements.epoch = MathUtils.lerp(oe0.epoch, oe1.epoch, u);\n\t\t\t\torbitalElements.meanAngularMotion = MathUtils.lerp(oe0.meanAngularMotion, oe1.meanAngularMotion, u);\n\t\t\t\torbitalElements.meanAnomalyAtEpoch = MathUtils.lerpAngle(oe0.meanAnomalyAtEpoch, oe1.meanAnomalyAtEpoch, u);\n\t\t\t\torbitalElements.orbitOrientation.slerp(oe0.orbitOrientation, oe1.orbitOrientation, u);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the eccentricity of the orbit at the given time, assuming it is the 'orb' type.\n\t * @param {number} time\n\t * @returns {number}\n\t */\n\tgetEccentricity(time) {\n\t\tif (this._PointClass === OrbPoint && this._pointSet !== null) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] !== null) {\n\t\t\t\tthis._lastPoints[0] = this._points[0];\n\t\t\t\tthis._lastPoints[1] = this._points[1];\n\t\t\t}\n\t\t\tif (this._lastPoints[0] !== null) {\n\t\t\t\tconst u = MathUtils.clamp01((time - this._lastPoints[0].time) / (this._lastPoints[1].time - this._lastPoints[0].time));\n\t\t\t\treturn MathUtils.lerp(/** @type {OrbPoint} */(this._lastPoints[0]).oe.eccentricity, /** @type {OrbPoint} */(this._lastPoints[1]).oe.eccentricity, u);\n\t\t\t}\n\t\t}\n\t\treturn Number.NaN;\n\t}\n\n\t/**\n\t * Gets the semi-major axis of the orbit at the given time, assuming it is the 'orb' type.\n\t * @param {number} time\n\t * @returns {number}\n\t */\n\tgetSemiMajorAxis(time) {\n\t\tif (this._PointClass === OrbPoint && this._pointSet !== null) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] !== null) {\n\t\t\t\tthis._lastPoints[0] = this._points[0];\n\t\t\t\tthis._lastPoints[1] = this._points[1];\n\t\t\t}\n\t\t\tif (this._lastPoints[0] !== null) {\n\t\t\t\tconst u = MathUtils.clamp01((time - this._lastPoints[0].time) / (this._lastPoints[1].time - this._lastPoints[0].time));\n\t\t\t\treturn MathUtils.lerp(/** @type {OrbPoint} */(this._lastPoints[0]).oe.semiMajorAxis, /** @type {OrbPoint} */(this._lastPoints[1]).oe.semiMajorAxis, u);\n\t\t\t}\n\t\t}\n\t\treturn Number.NaN;\n\t}\n\n\t/**\n\t * Gets the orbit orientation of the orbit at the given time, assuming it is the 'orb' type. The x-axis points toward the periapsis and the z-axis points in the direction of the angular momentum.\n\t * @param {Quaternion} outOrbitOrientation\n\t * @param {number} time\n\t */\n\tgetOrbitOrientation(outOrbitOrientation, time) {\n\t\tif (this._PointClass === OrbPoint && this._pointSet !== null) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] !== null) {\n\t\t\t\tthis._lastPoints[0] = this._points[0];\n\t\t\t\tthis._lastPoints[1] = this._points[1];\n\t\t\t}\n\t\t\tif (this._lastPoints[0] !== null) {\n\t\t\t\tconst u = MathUtils.clamp01((time - this._lastPoints[0].time) / (this._lastPoints[1].time - this._lastPoints[0].time));\n\t\t\t\toutOrbitOrientation.slerp(/** @type {OrbPoint} */(this._lastPoints[0]).oe.orbitOrientation, /** @type {OrbPoint} */(this._lastPoints[1]).oe.orbitOrientation, u);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroys any resources with the dynamo.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\t// Cancel any download.\n\t\tif (this._baseUrl !== '') {\n\t\t\tthis._downloader.cancel(this._baseUrl + '/def.dyn');\n\t\t}\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * If the type has positions, updates the position.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tif (this._pointSet === null) { // No def file loaded yet, so the time may or may not be covered, so set it to NaN.\n\t\t\tposition.copy(Vector3.NaN);\n\t\t\treturn;\n\t\t}\n\t\tif (/** @type {PosPoint | LinPoint | OrbPoint} */(this._pCalc).position === undefined || !this.getCoverage().contains(time)) {\n\t\t\treturn; // It's not a position type or it's not covered.\n\t\t}\n\t\tif (this._pCalc.time !== time) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] === null) { // No valid data yet, so set to NaN.\n\t\t\t\tposition.copy(Vector3.NaN);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._pCalc.calculate(this._points, time - this._timeOffset, this._header, this._incremental);\n\t\t}\n\t\tposition.copy(/** @type {PosPoint | LinPoint | OrbPoint} */(this._pCalc).position);\n\t}\n\n\t/**\n\t * If the type has positions, updates the velocity.\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, time) {\n\t\tif (this._pointSet === null) { // No def file loaded yet, so the time may or may not be covered, so set it to NaN.\n\t\t\tvelocity.copy(Vector3.NaN);\n\t\t\treturn;\n\t\t}\n\t\telse if (/** @type {PosPoint | LinPoint | OrbPoint} */(this._pCalc).velocity === undefined || !this.getCoverage().contains(time)) {\n\t\t\treturn; // It's not a velocity type or it's not covered.\n\t\t}\n\t\tif (this._pCalc.time !== time) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] === null) { // No valid data yet, so set to NaN.\n\t\t\t\tvelocity.copy(Vector3.NaN);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._pCalc.calculate(this._points, time - this._timeOffset, this._header, this._incremental);\n\t\t}\n\t\tvelocity.copy(/** @type {PosPoint | LinPoint | OrbPoint} */(this._pCalc).velocity);\n\t}\n\n\t/**\n\t * If the type has orientations, updates the orientation.\n\t * @param {Quaternion} orientation\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tif (this._pointSet === null) { // No def file loaded yet, so the time may or may not be covered, so set it to NaN.\n\t\t\torientation.copy(Quaternion.NaN);\n\t\t\treturn;\n\t\t}\n\t\tif (/** @type {OriPoint | QuatPoint} */(this._pCalc).orientation === undefined || !this.getCoverage().contains(time)) {\n\t\t\treturn; // It's not an orientation type or it's not covered.\n\t\t}\n\t\tif (this._pCalc.time !== time) {\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] === null) { // No valid data yet, so set to NaN.\n\t\t\t\torientation.copy(Quaternion.NaN);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._pCalc.calculate(this._points, time - this._timeOffset, this._header, this._incremental);\n\t\t}\n\t\torientation.copy(/** @type {OriPoint | QuatPoint} */(this._pCalc).orientation);\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst entity = this.getEntity();\n\t\tconst engine = entity.getScene().getEngine();\n\t\tconst time = engine.getTime();\n\t\tif (this._pointSet !== null) {\n\t\t\tthis._pointSet.unloadOldPointSet();\n\t\t\tthis._getPointsAtTime(this._points, time);\n\t\t\tif (this._points[0] !== null) {\n\t\t\t\t// Apply the data.\n\t\t\t\tthis._pCalc.calculate(this._points, time - this._timeOffset, this._header, this._incremental);\n\t\t\t\tthis._pCalc.apply(entity);\n\t\t\t\t// Record these as the last known good values.\n\t\t\t\tthis._lastPoints[0] = this._points[0];\n\t\t\t\tthis._lastPoints[1] = this._points[1];\n\t\t\t\tthis._dataLoadedAtCurrentTime = true;\n\t\t\t}\n\t\t\t// Data for the current time is still loading.\n\t\t\telse {\n\t\t\t\t// If we've got good previous data, apply it, otherwise do nothing.\n\t\t\t\tif (this._lastPoints[0] !== null && this._lastPoints[1] !== null) {\n\t\t\t\t\t// Apply the last known good data.\n\t\t\t\t\tthis._pCalc.calculate(this._lastPoints, time - this._timeOffset, this._header, this._incremental);\n\t\t\t\t\tthis._pCalc.apply(entity);\n\t\t\t\t}\n\t\t\t\tthis._dataLoadedAtCurrentTime = false;\n\t\t\t}\n\t\t}\n\t\telse { // No def.dyn file has yet been loaded.\n\t\t\tthis.getEntity().setPosition(Vector3.NaN);\n\t\t\tthis.getEntity().setVelocity(Vector3.NaN);\n\t\t\tthis.getEntity().setOrientation(Quaternion.NaN);\n\t\t\tthis.getEntity().setAngularVelocity(Vector3.NaN);\n\t\t\tthis._dataLoadedAtCurrentTime = false;\n\t\t}\n\t\tthis._lastTime = time;\n\t}\n\n\tasync _loadDef() {\n\t\t// Save the url here since it may change in the async process.\n\t\tconst url = this._baseUrl;\n\n\t\t/**\n\t\t * The promise that is used to tell when the dyndef is loaded.\n\t\t * @type {Promise<void>}\n\t\t */\n\t\treturn this._downloader.download(this._baseUrl + '/def.dyn', true).then(async (download) => {\n\t\t\tif (download.status === 'cancelled') {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t\telse if (download.status === 'failed') {\n\t\t\t\treturn Promise.reject(new Error('Failed to load dynamo controller file \"' + download.url + '\": ' + download.errorMessage));\n\t\t\t}\n\t\t\tif (!(download.content instanceof ArrayBuffer)) {\n\t\t\t\treturn Promise.reject(new Error('Failed to load dynamo controller file \"' + download.url + '\": Not a binary file.'));\n\t\t\t}\n\n\t\t\t// Open the reader.\n\t\t\tconst reader = new Reader(download.content);\n\n\t\t\t// Version\n\t\t\tthis._version = reader.readInt16();\n\t\t\tif (this._version !== 1 && this._version !== 2) {\n\t\t\t\tthrow new Error(download.url + ' is not Dynamo version 1 or 2');\n\t\t\t}\n\n\t\t\t// Type\n\t\t\tthis._pointType = reader.readString();\n\t\t\tif (this._pointType === 'pos') {\n\t\t\t\tthis._PointClass = PosPoint;\n\t\t\t}\n\t\t\telse if (this._pointType === 'lin') {\n\t\t\t\tthis._PointClass = LinPoint;\n\t\t\t}\n\t\t\telse if (this._pointType === 'ori') {\n\t\t\t\tthis._PointClass = OriPoint;\n\t\t\t}\n\t\t\telse if (this._pointType === 'quat') {\n\t\t\t\tthis._PointClass = QuatPoint;\n\t\t\t}\n\t\t\telse if (this._pointType === 'orb') {\n\t\t\t\tthis._PointClass = OrbPoint;\n\t\t\t}\n\n\t\t\t// Set the calculation point.\n\t\t\tthis._pCalc = new this._PointClass();\n\n\t\t\t// Let the base controller know that this changes the position or orientation.\n\t\t\tif (this._PointClass === PosPoint || this._PointClass === LinPoint || this._PointClass === OrbPoint) {\n\t\t\t\tthis.addModifiedState('position');\n\t\t\t\tthis.addModifiedState('velocity');\n\t\t\t\tthis.removeModifiedState('orientation');\n\t\t\t\tthis.removeModifiedState('angularVelocity');\n\t\t\t}\n\t\t\telse if (this._PointClass === OriPoint || this._PointClass === QuatPoint) {\n\t\t\t\tthis.addModifiedState('orientation');\n\t\t\t\tthis.addModifiedState('angularVelocity');\n\t\t\t\tthis.removeModifiedState('position');\n\t\t\t\tthis.removeModifiedState('velocity');\n\t\t\t}\n\n\t\t\t// Read the number of digits for each level of the file names.\n\t\t\tif (this._version === 2) {\n\t\t\t\tthis._numberOfDigits = reader.readByte();\n\t\t\t}\n\n\t\t\t// Header\n\t\t\tthis._header = Object.assign(this._header, this._PointClass.readHeader(reader));\n\n\t\t\tthis._pointSet = new PointSet(this._PointClass, this._version, this._numberOfDigits, 'def');\n\t\t\tthis._pointSet.load(reader);\n\n\t\t\t// Update the coverage.\n\t\t\tconst finalCoverage = Interval.pool.get();\n\t\t\tfinalCoverage.intersection(this._userCoverage, this._pointSet._interval);\n\t\t\tfinalCoverage.min += this._timeOffset;\n\t\t\tfinalCoverage.max += this._timeOffset;\n\t\t\tsuper.setCoverage(finalCoverage);\n\t\t\tInterval.pool.release(finalCoverage);\n\t\t}).catch((error) => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.message = `While loading dynamo \"${url}/def.dyn\": ${error.message}`;\n\t\t\t}\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Gets the points p0 and p1 at the given time.\n\t * @param {[Point | null, Point | null]} points\n\t * @param {number} time\n\t */\n\t_getPointsAtTime(points, time) {\n\t\tlet pointSet = this._pointSet;\n\t\twhile (true) {\n\t\t\tif (pointSet.hasPoints()) {\n\t\t\t\tpointSet.getPoints(points, time - this._timeOffset);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (pointSet.getLoadedState() === PointSet.State.LOADED) {\n\t\t\t\tpointSet = pointSet.getPointSet(time - this._timeOffset);\n\t\t\t\tif (pointSet === null) {\n\t\t\t\t\tpoints[0] = null;\n\t\t\t\t\tpoints[1] = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pointSet.getLoadedState() === PointSet.State.NOT_LOADED) {\n\t\t\t\tpointSet.loadFromUrl(this._downloader, this._baseUrl);\n\t\t\t\tpoints[0] = null;\n\t\t\t\tpoints[1] = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints[0] = null;\n\t\t\t\tpoints[1] = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nDynamoController.maxLoadedPointSetsPerController = 5;\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/** A controller that sets a fixed position and/or orientation. */\nexport class FixedController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t// The position to be updated. If null, the position is not fixed.\n\t\tthis._position = null;\n\n\t\t// The orientation to be updated. If null, the orientation is not fixed.\n\t\tthis._orientation = null;\n\t}\n\n\t/**\n\t * Gets the position to be fixed, or null if the position is not fixed. Don't modify this directly.\n\t * @returns {Vector3}\n\t */\n\tgetPosition() {\n\t\treturn this._position;\n\t}\n\n\t/**\n\t * Sets the position. Use null to unfix the position.\n\t * @param {Vector3} position\n\t */\n\tsetPosition(position) {\n\t\tif (position !== null) {\n\t\t\tif (this._position === null) {\n\t\t\t\tthis._position = new Vector3();\n\t\t\t}\n\t\t\tthis._position.thaw();\n\t\t\tthis._position.copy(position);\n\t\t\tthis._position.freeze();\n\t\t}\n\t\telse {\n\t\t\tthis._position = null;\n\t\t}\n\t\tif (position !== null) {\n\t\t\tthis.addModifiedState('position');\n\t\t\tthis.addModifiedState('velocity');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('position');\n\t\t\tthis.removeModifiedState('velocity');\n\t\t}\n\t}\n\n\t/**\n\t * Gets the orientation to be fixed, or null if the orientation is not fixed. Don't modify this directly.\n\t * @returns {Quaternion}\n\t */\n\tgetOrientation() {\n\t\treturn this._orientation;\n\t}\n\n\t/**\n\t * Sets the orientation.\n\t * @param {Quaternion} orientation\n\t */\n\tsetOrientation(orientation) {\n\t\tif (orientation !== null) {\n\t\t\tif (this._orientation === null) {\n\t\t\t\tthis._orientation = new Quaternion();\n\t\t\t}\n\t\t\tthis._orientation.thaw();\n\t\t\tthis._orientation.copy(orientation);\n\t\t\tthis._orientation.freeze();\n\t\t}\n\t\telse {\n\t\t\tthis._orientation = null;\n\t\t}\n\t\tif (orientation !== null) {\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('orientation');\n\t\t}\n\t}\n\n\t/**\n\t * If the position is fixed, updates the position to the fixed position.\n\t * @param {Vector3} position\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, _time) {\n\t\tif (this._position !== null) {\n\t\t\tposition.copy(this._position);\n\t\t}\n\t}\n\n\t/**\n\t * If the position is fixed, updates the velocity to zero.\n\t * @param {Vector3} velocity\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, _time) {\n\t\tif (this._position !== null) {\n\t\t\tvelocity.set(0, 0, 0);\n\t\t}\n\t}\n\n\t/**\n\t * If the orientation is fixed, updates the orientation to the fixed orientation.\n\t * @param {Quaternion} orientation\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, _time) {\n\t\tif (this._orientation !== null) {\n\t\t\torientation.copy(this._orientation);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the position and orientation if they are fixed.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tif (this._position !== null) {\n\t\t\tthis.getEntity().setPosition(this._position);\n\t\t\tthis.getEntity().setVelocity(Vector3.Zero);\n\t\t}\n\t\tif (this._orientation !== null) {\n\t\t\tthis.getEntity().setOrientation(this._orientation);\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/** A controller that rotates the position and orientation by the parent's orientation last frame change.\n *  Great for objects that are connected to their parents or landers.\n *  It needs to added as the last controller to work. */\nexport class FixedToParentController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The parent's last orientation.\n\t\t * @type {Quaternion}\n\t\t * @private\n\t\t */\n\t\tthis._lastParentOrientation = new Quaternion();\n\n\t\t// Start off with the correct last orientation.\n\t\tconst parent = this.getEntity().getParent();\n\t\tif (parent !== null) {\n\t\t\tthis._lastParentOrientation.copy(parent.getOrientation());\n\t\t}\n\n\t\t// Let the base controller know that this changes the orientation.\n\t\tthis.addModifiedState('position');\n\t\tthis.addModifiedState('orientation');\n\n\t\t// Add the dependency on the parent's orientation.\n\t\tthis.addDependentState('parent', 'orientation');\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst parent = this.getEntity().getParent();\n\t\tif (parent !== null) {\n\t\t\tconst rotation = Quaternion.pool.get();\n\t\t\trotation.inverse(this._lastParentOrientation);\n\t\t\trotation.mult(parent.getOrientation(), rotation);\n\t\t\tconst position = Vector3.pool.get();\n\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\tposition.rotate(rotation, this.getEntity().getPosition());\n\t\t\tthis.getEntity().setPosition(position);\n\t\t\torientation.mult(rotation, this.getEntity().getOrientation());\n\t\t\tthis.getEntity().setOrientation(orientation);\n\t\t\tQuaternion.pool.release(orientation);\n\t\t\tVector3.pool.release(position);\n\t\t\tQuaternion.pool.release(rotation);\n\t\t\tthis._lastParentOrientation.copy(parent.getOrientation());\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tCameraComponent,\n\tEntity,\n\tLatLonAlt,\n\tQuaternion,\n\tSpheroidComponent,\n\tVector3\n} from '../../internal';\n\n/**\n * A camera controller that flies around freely.\n */\nexport class FreeFlyController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The sensitivity for dragging.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dragSensitivity = 0.01;\n\n\t\t/**\n\t\t * The smoothness of the dragging. Zero means no smoothness.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dragSmoothness = 0.8;\n\n\t\t/**\n\t\t * The current value applied every frame to the movement.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._moveSmoothedValue = new Vector3(0.0, 0.0, 0.0);\n\n\t\t/**\n\t\t * The flag that determines whether the camera changes parent to whatever it is closer to.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._changeParentToNearestEntity = true;\n\n\t\t/**\n\t\t * The vector that runs every frame emulating user input.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._forcedMoving = new Vector3();\n\n\t\tthis._isMoving = false;\n\n\t\t// Let the base controller know that this changes the position.\n\t\tthis.addModifiedState('position');\n\n\t\tthis.addDependentState('parent', 'orientation');\n\t\tthis.addDependentState('parent', 'radius');\n\t}\n\n\t/**\n\t * Gets the drag sensitivity. Defaults to 0.01.\n\t * @returns {number}\n\t */\n\tgetDragSensitivity() {\n\t\treturn this._dragSensitivity;\n\t}\n\n\t/**\n\t * Sets the drag sensitivity.\n\t * @param {number} dragSensitivity\n\t */\n\tsetDragSensitivity(dragSensitivity) {\n\t\tthis._dragSensitivity = dragSensitivity;\n\t}\n\n\t/**\n\t * Gets the drag smoothness. Defaults to 0.8.\n\t * @returns {number}\n\t */\n\tgetDragSmoothness() {\n\t\treturn this._dragSmoothness;\n\t}\n\n\t/**\n\t * Sets the drag smoothness, between 0 and 1.\n\t * @param {number} dragSmoothness\n\t */\n\tsetDragSmoothness(dragSmoothness) {\n\t\tthis._dragSmoothness = dragSmoothness;\n\t}\n\n\t/**\n\t * Gets the flag that determines whether the camera changes parent to whatever it is closer to. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tgetChangeParentToNearestEntity() {\n\t\treturn this._changeParentToNearestEntity;\n\t}\n\n\t/**\n\t * Sets the flag that determines whether the camera changes parent to whatever it is closer to. This requires this entity to have a camera component for faster checking.\n\t * @param {boolean} changeParentToNearestEntity\n\t */\n\tsetChangeParentToNearestEntity(changeParentToNearestEntity) {\n\t\tthis._changeParentToNearestEntity = changeParentToNearestEntity;\n\t}\n\n\t/**\n\t * Gets the vector that runs every frame emulating user input. Defaults to Vector3.Zero.\n\t * @returns {Vector3}\n\t */\n\tgetForcedMoving() {\n\t\treturn this._forcedMoving;\n\t}\n\n\t/**\n\t * Sets the vector that runs every frame emulating user input.\n\t * @param {Vector3} forcedMoving\n\t */\n\tsetForcedMoving(forcedMoving) {\n\t\tthis._forcedMoving = forcedMoving;\n\t}\n\n\t/**\n\t * Updates the entity's position.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// If it has no parent, don't do anything.\n\t\tif (this.getEntity().getParent() === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the parent, if needed. Only do it if there was any input.\n\t\tif (this._changeParentToNearestEntity && (this.getEntity().getParent() === null || this._isMoving)) {\n\t\t\tconst scene = this.getEntity().getScene();\n\t\t\tconst cameraComponent = /** @type {CameraComponent} */(this.getEntity().get('camera'));\n\t\t\tlet nearestEntity = null;\n\t\t\tlet nearestDistance = Number.POSITIVE_INFINITY;\n\t\t\tfor (let i = 0, l = scene.getNumEntities(); i < l; i++) {\n\t\t\t\tconst entity = scene.getEntity(i);\n\t\t\t\tif (entity === this.getEntity() || !entity.canOcclude()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst distance = entity.getCameraSpacePosition(cameraComponent).magnitude() - entity.getOcclusionRadius();\n\t\t\t\tif (nearestDistance > distance) {\n\t\t\t\t\tnearestDistance = distance;\n\t\t\t\t\tnearestEntity = entity;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Switch parents. Since it's happening in the update function.\n\t\t\tif (nearestEntity !== null && nearestEntity !== this.getEntity().getParent()) {\n\t\t\t\tthis.getEntity().setParent(nearestEntity);\n\t\t\t}\n\t\t}\n\n\t\t// Set the position and orientation if they have never been set before.\n\t\tif (this.getEntity().getOrientation().isNaN()) {\n\t\t\tthis.getEntity().setOrientation(Quaternion.Identity);\n\t\t}\n\t\tif (this.getEntity().getPosition().isNaN()) {\n\t\t\tthis.getEntity().setPosition(new Vector3(0, -1, 0));\n\t\t}\n\n\t\t// Get the move value from the controls.\n\t\tconst move = Vector3.pool.get();\n\t\tmove.set(0.0, 0.0, 0.0);\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\t\tconst viewport = input.getActiveViewport();\n\t\tif (viewport !== null) {\n\t\t\tconst camera = viewport.getCamera();\n\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\t// Get the multipliers.\n\t\t\t\tlet moveMultiplier = 1;\n\t\t\t\tif (input.isKeyPressed('x')) {\n\t\t\t\t\tmoveMultiplier = 0.05;\n\t\t\t\t}\n\t\t\t\tif (input.isShiftPressed()) {\n\t\t\t\t\tmoveMultiplier = 5;\n\t\t\t\t}\n\n\t\t\t\t// Add zoom movement.\n\t\t\t\tconst zoomOffset = input.getZoomedOffset();\n\t\t\t\tif (zoomOffset !== 0) {\n\t\t\t\t\tmove.y += -zoomOffset * this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\n\t\t\t\t// Add key movement.\n\t\t\t\tif (input.isKeyPressed('w')) {\n\t\t\t\t\tmove.y += this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('s')) {\n\t\t\t\t\tmove.y -= this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('d')) {\n\t\t\t\t\tmove.x += this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('a')) {\n\t\t\t\t\tmove.x -= this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('e')) {\n\t\t\t\t\tmove.z += this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('q')) {\n\t\t\t\t\tmove.z -= this._dragSensitivity * moveMultiplier;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the forced moving.\n\t\tmove.add(move, this._forcedMoving);\n\n\t\tthis._isMoving = (move.magnitudeSqr() > 0);\n\n\t\t// Apply smoothing.\n\t\tthis._moveSmoothedValue.lerp(move, this._moveSmoothedValue, this._dragSmoothness);\n\t\tif (!this._isMoving && this._moveSmoothedValue.magnitudeSqr() < 0.0000001) {\n\t\t\tthis._moveSmoothedValue.set(0.0, 0.0, 0.0);\n\t\t}\n\t\tVector3.pool.release(move);\n\n\t\t// Get the distance to the current parent.\n\t\tlet distance = Number.POSITIVE_INFINITY;\n\t\tconst spheroid = /** @type {SpheroidComponent} */(this.getEntity().getParent().getComponentByType('spheroid'));\n\t\tif (spheroid !== null && !this.getEntity().getParent().getOrientation().isNaN()) {\n\t\t\tconst position = Vector3.pool.get();\n\t\t\tposition.rotateInverse(this.getEntity().getParent().getOrientation(), this.getEntity().getPosition());\n\t\t\tconst lla = LatLonAlt.pool.get();\n\t\t\tspheroid.llaFromXYZ(lla, position);\n\t\t\tdistance = Math.min(distance, lla.alt);\n\t\t\tLatLonAlt.pool.release(lla);\n\t\t\tVector3.pool.release(position);\n\t\t}\n\t\telse {\n\t\t\tdistance = Math.min(distance, this.getEntity().getPosition().magnitude() - this.getEntity().getParent().getOcclusionRadius());\n\t\t}\n\t\tdistance = Math.max(0.1, distance);\n\n\t\t// Do the move.\n\t\tconst oldPosition = this.getEntity().getPosition();\n\t\tconst newPosition = Vector3.pool.get();\n\t\tconst rotatedMove = Vector3.pool.get();\n\t\trotatedMove.rotate(this.getEntity().getOrientation(), this._moveSmoothedValue);\n\t\tnewPosition.addMult(oldPosition, rotatedMove, distance);\n\t\tthis.getEntity().setPosition(newPosition);\n\t\tVector3.pool.release(rotatedMove);\n\t\tVector3.pool.release(newPosition);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tBaseController,\n\tComponentRef,\n\tEntity,\n\tQuaternion,\n\tSpheroidComponent,\n\tVector3\n} from '../../internal';\n\n/**\n * @typedef {Object} HasGetGroundPosition\n * @property {(outPosition: Vector3, outHeightDir: Vector3, position: Vector3) => void} getGroundPosition\n */\n\n/**\n * A controller that clamps an entty to the ground.\n */\nexport class GroundClampController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The component to clamp to.\n\t\t * @type {ComponentRef<BaseComponent & HasGetGroundPosition>}\n\t\t * @private\n\t\t */\n\t\tthis._groundComponentRef = new ComponentRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The offset in the up direction.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._distanceFromGround = 0;\n\n\t\t/**\n\t\t * The frame-up vector for use in clamping correctly to slanted surfaces.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._up = new Vector3(0, 0, 1);\n\n\t\t// Let the base controller know that this changes the position.\n\t\tthis.addModifiedState('position');\n\t}\n\n\t/**\n\t * Sets the component to clamp to. Defaults to the nearest ancestor spheroid or null.\n\t * @param {string} entityName\n\t * @param {string} componentType\n\t * @param {number} [componentTypeIndex]\n\t */\n\tsetGroundComponentRef(entityName, componentType, componentTypeIndex) {\n\t\tthis.removeDependentState(this._groundComponentRef.getEntityName(), 'orientation');\n\t\tthis._groundComponentRef.setByType(entityName, componentType, componentTypeIndex);\n\t\tthis.addDependentState(entityName, 'orientation');\n\t}\n\n\t/**\n\t * Gets the distance in the up direction from the ground.\n\t * @returns {number}\n\t */\n\tgetDistanceFromGround() {\n\t\treturn this._distanceFromGround;\n\t}\n\n\t/**\n\t * Sets the distance in the up direction from the ground. Negative is below the ground. Defaults to 0.\n\t * @param {number} distanceFromGround\n\t */\n\tsetDistanceFromGround(distanceFromGround) {\n\t\tthis._distanceFromGround = distanceFromGround;\n\t}\n\n\t/**\n\t * Sets the frame-up vector for use in clamping correctly to slanted surfaces.\n\t * @param {Vector3} up\n\t */\n\tsetUp(up) {\n\t\tthis._up.copy(up);\n\t}\n\n\t/**\n\t * Updates a position for the given time.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\t// Get the entity parent.\n\t\tconst entityParentNameAtTime = this.getEntity().getParentAtTime(time);\n\t\tconst entityParentAtTime = this.getEntity().getScene().getEntity(entityParentNameAtTime);\n\t\tif (entityParentAtTime === null) {\n\t\t\treturn;\n\t\t}\n\t\t// Get the ground component, or get the nearest ancestor with a spheroid.\n\t\tlet groundComponent = this._groundComponentRef.get();\n\t\tif (groundComponent === null) {\n\t\t\tlet parent = this.getEntity().getParent();\n\t\t\twhile (parent !== null) {\n\t\t\t\tgroundComponent = /** @type {SpheroidComponent} */(parent.getComponentByType('spheroid'));\n\t\t\t\tif (groundComponent !== null) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparent = parent.getParent();\n\t\t\t}\n\t\t\tif (groundComponent === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconst groundComponentEntity = groundComponent.getEntity();\n\t\t// Get the position of the entity in the component entity's frame-space.\n\t\tconst entityPosition = Vector3.pool.get();\n\t\tconst heightDir = Vector3.pool.get();\n\t\tconst groundOrientationAtTime = Quaternion.pool.get();\n\t\tgroundComponentEntity.getOrientationAtTime(groundOrientationAtTime, time);\n\t\tentityParentAtTime.getPositionRelativeToEntity(entityPosition, position, groundComponentEntity, time);\n\t\tentityPosition.rotateInverse(groundOrientationAtTime, entityPosition);\n\t\t// Get the height at the given position.\n\t\tif (groundComponent.getGroundPosition !== undefined) {\n\t\t\tgroundComponent.getGroundPosition(entityPosition, heightDir, entityPosition);\n\t\t}\n\t\tif (!entityPosition.isNaN()) {\n\t\t\tconst entityUp = Vector3.pool.get();\n\t\t\tconst entityOrientation = Quaternion.pool.get();\n\t\t\tthis.getEntity().getOrientationAtTime(entityOrientation, time);\n\t\t\tentityUp.rotate(entityOrientation, this._up);\n\t\t\tQuaternion.pool.release(entityOrientation);\n\t\t\tentityUp.rotateInverse(groundOrientationAtTime, entityUp);\n\t\t\tconst cosUpAndGroundUp = Math.abs(entityUp.dot(heightDir));\n\t\t\tVector3.pool.release(entityUp);\n\t\t\t// Add on the up offset.\n\t\t\tentityPosition.addMult(entityPosition, heightDir, Math.min(this._distanceFromGround / cosUpAndGroundUp, this._distanceFromGround + this.getEntity().getExtentsRadius()));\n\t\t\t// Get the position back into the entity-space of the parent.\n\t\t\tentityPosition.rotate(groundOrientationAtTime, entityPosition);\n\t\t\tgroundComponentEntity.getPositionRelativeToEntity(position, entityPosition, entityParentAtTime, time);\n\t\t}\n\t\telse {\n\t\t\tposition.copy(Vector3.NaN);\n\t\t}\n\t\t// Cleanup.\n\t\tVector3.pool.release(entityPosition);\n\t\tVector3.pool.release(heightDir);\n\t\tQuaternion.pool.release(groundOrientationAtTime);\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tif (this.getEntity().getParent() === null) {\n\t\t\treturn;\n\t\t}\n\t\t// Get the ground component, or get the nearest ancestor with a spheroid.\n\t\tlet groundComponent = this._groundComponentRef.get();\n\t\tif (groundComponent === null) {\n\t\t\tlet parent = this.getEntity().getParent();\n\t\t\twhile (parent !== null) {\n\t\t\t\tgroundComponent = /** @type {SpheroidComponent} */(parent.getComponentByType('spheroid'));\n\t\t\t\tif (groundComponent !== null) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparent = parent.getParent();\n\t\t\t}\n\t\t\tif (groundComponent === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tconst groundComponentEntity = groundComponent.getEntity();\n\t\t// Get the position of the entity in the component entity's frame-space.\n\t\tconst entityPosition = Vector3.pool.get();\n\t\tconst heightDir = Vector3.pool.get();\n\t\tthis.getEntity().getPositionRelativeToEntity(entityPosition, Vector3.Zero, groundComponentEntity);\n\t\tentityPosition.rotateInverse(groundComponentEntity.getOrientation(), entityPosition);\n\t\t// Get the height at the given position.\n\t\tif (groundComponent.getGroundPosition !== undefined) {\n\t\t\tgroundComponent.getGroundPosition(entityPosition, heightDir, entityPosition);\n\t\t}\n\t\tif (!entityPosition.isNaN()) {\n\t\t\tconst entityUp = Vector3.pool.get();\n\t\t\tentityUp.rotate(this.getEntity().getOrientation(), this._up);\n\t\t\tentityUp.rotateInverse(groundComponentEntity.getOrientation(), entityUp);\n\t\t\tconst cosUpAndGroundUp = Math.abs(entityUp.dot(heightDir));\n\t\t\tVector3.pool.release(entityUp);\n\t\t\t// Add on the up offset.\n\t\t\tentityPosition.addMult(entityPosition, heightDir, Math.min(this._distanceFromGround / cosUpAndGroundUp, this._distanceFromGround + this.getEntity().getExtentsRadius()));\n\t\t\t// Get the position back into the entity-space of the parent.\n\t\t\tentityPosition.rotate(groundComponentEntity.getOrientation(), entityPosition);\n\t\t\tgroundComponentEntity.getPositionRelativeToEntity(entityPosition, entityPosition, this.getEntity().getParent());\n\t\t}\n\t\telse {\n\t\t\tentityPosition.copy(this.getEntity().getLastPosition());\n\t\t}\n\t\t// Set the position.\n\t\tthis.getEntity().setPosition(entityPosition);\n\t\tVector3.pool.release(entityPosition);\n\t\tVector3.pool.release(heightDir);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tEntityRef,\n\tInterval,\n\tQuaternion,\n\tSort,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller animates the position and orientation of an entity via keyframes.\n */\nexport class KeyframeController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The position keyframes.\n\t\t * @type {Array<{0: number, 1: PositionKeyframe}>}\n\t\t * @private\n\t\t */\n\t\tthis._positionKeyframes = [];\n\n\t\t/**\n\t\t * The orientation keyframes.\n\t\t * @type {Array<{0: number, 1: OrientationKeyframe}>}\n\t\t * @private\n\t\t */\n\t\tthis._orientationKeyframes = [];\n\n\t\t/**\n\t\t * The flag that if true says that the times given are relative to the first update in real time,\n\t\t * and if false says that the times are in ET time.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._timesAreRealTime = false;\n\n\t\t/**\n\t\t * The time of the first update, used when _timesAreRealTime is true.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._timeOfFirstUpdate = NaN;\n\n\t\t// Set the coverage to nothing, since there are no keyframes.\n\t\tthis.setCoverage(new Interval(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY));\n\n\t\t// Helper vectors and quaternions for calculations.\n\t\tthis._position0 = new Vector3();\n\t\tthis._position1 = new Vector3();\n\t\tthis._orientation0 = new Quaternion();\n\t\tthis._orientation1 = new Quaternion();\n\t\tthis._newPosition = new Vector3();\n\t\tthis._newVelocity = new Vector3();\n\t\tthis._newOrientation = new Quaternion();\n\t\tthis._tangent0 = new Vector3();\n\t\tthis._tangent1 = new Vector3();\n\t\tthis._tempA = new Vector3();\n\t\tthis._tempB = new Vector3();\n\t}\n\n\t/**\n\t * Adds a position keyframe.\n\t * If positionOrEntity is an entity, the entity's position at the given time is used instead.\n\t * @param {number} time\n\t * @param {Vector3} position\n\t * @param {string} [relativeToEntityPosition]\n\t * @param {number} [relativeToEntityPositionTime]\n\t * @param {string} [relativeToEntityOrientation]\n\t * @param {number} [relativeToEntityOrientationTime]\n\t */\n\taddPositionKeyframe(time, position, relativeToEntityPosition, relativeToEntityPositionTime, relativeToEntityOrientation, relativeToEntityOrientationTime) {\n\t\t/** @type {{0: number, 1: PositionKeyframe}} */\n\t\tconst entry = [time, {\n\t\t\tposition,\n\t\t\trelativeToEntityPosition: relativeToEntityPosition ? new EntityRef(this.getEntity().getScene(), relativeToEntityPosition) : undefined,\n\t\t\trelativeToEntityPositionTime,\n\t\t\trelativeToEntityOrientation: relativeToEntityOrientation ? new EntityRef(this.getEntity().getScene(), relativeToEntityOrientation) : undefined,\n\t\t\trelativeToEntityOrientationTime\n\t\t}];\n\t\tSort.add(entry, this._positionKeyframes, isLessAdd);\n\t\tif (this._positionKeyframes.length === 1) {\n\t\t\tthis.addModifiedState('position');\n\t\t\tthis.addModifiedState('velocity');\n\t\t}\n\t\tthis._updateCoverage();\n\t}\n\n\t/**\n\t * Removes a position keyframe. Returns true if the key was removed.\n\t * @param {number} time\n\t */\n\tremovePositionKeyframe(time) {\n\t\tconst found = Sort.remove(time, this._positionKeyframes, isLess, isEqual);\n\t\tif (found) {\n\t\t\tif (this._positionKeyframes.length === 0) {\n\t\t\t\tthis.removeModifiedState('position');\n\t\t\t\tthis.removeModifiedState('velocity');\n\t\t\t}\n\t\t\tthis._updateCoverage();\n\t\t}\n\t\treturn found;\n\t}\n\n\t/**\n\t * Adds an orientation keyframe.\n\t * If orientationOrEntity is an entity, the entity's orientation at the given time is used instead.\n\t * @param {number} time\n\t * @param {Quaternion} orientation\n\t * @param {string} [relativeToEntityOrientation]\n\t * @param {number} [relativeToEntityOrientationTime]\n\t */\n\taddOrientationKeyframe(time, orientation, relativeToEntityOrientation, relativeToEntityOrientationTime) {\n\t\t/** @type {{0: number, 1: OrientationKeyframe}} */\n\t\tconst entry = [time, {\n\t\t\torientation,\n\t\t\trelativeToEntityOrientation: relativeToEntityOrientation ? new EntityRef(this.getEntity().getScene(), relativeToEntityOrientation) : undefined,\n\t\t\trelativeToEntityOrientationTime\n\t\t}];\n\t\tSort.add(entry, this._orientationKeyframes, isLessAdd);\n\t\tif (this._orientationKeyframes.length === 1) {\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t\tthis._updateCoverage();\n\t}\n\n\t/**\n\t * Removes an orientation keyframe. Returns true if the key was removed.\n\t * @param {number} time\n\t */\n\tremoveOrientationKeyframe(time) {\n\t\tconst found = Sort.remove(time, this._orientationKeyframes, isLess, isEqual);\n\t\tif (found) {\n\t\t\tif (this._orientationKeyframes.length === 0) {\n\t\t\t\tthis.removeModifiedState('orientation');\n\t\t\t}\n\t\t\tthis._updateCoverage();\n\t\t}\n\t\treturn found;\n\t}\n\n\t/**\n\t * Gets the flag that if true says that the times given are relative to the first update in real time,\n\t * and if false says that the times are in ET time.\n\t * @returns {boolean}\n\t */\n\tareTimesRealTime() {\n\t\treturn this._timesAreRealTime;\n\t}\n\n\t/**\n\t * Sets the flag that if true says that the times given are relative to the first update in real time,\n\t * and if false says that the times are in ET time.\n\t * @param {boolean} timesAreRealTime\n\t */\n\tsetTimesAreRealTime(timesAreRealTime) {\n\t\tthis._timesAreRealTime = timesAreRealTime;\n\t\tthis._updateCoverage();\n\t}\n\n\t/**\n\t * Sets the position to the keyframed position at the given time.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tthis._getPositionAtTime(position, time);\n\t}\n\n\t/**\n\t * Sets the velocity to the keyframed velocity at the given time.\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, time) {\n\t\tthis._getVelocityAtTime(velocity, time);\n\t}\n\n\t/**\n\t * Sets the orientation to the keyframed orientation at the given time.\n\t * @param {Quaternion} orientation\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tthis._getOrientationAtTime(orientation, time);\n\t}\n\n\t/**\n\t * Updates the position and orientation from the keyframes.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst engine = this.getEntity().getScene().getEngine();\n\t\tlet time = 0;\n\t\tif (this._timesAreRealTime) {\n\t\t\tif (isNaN(this._timeOfFirstUpdate)) {\n\t\t\t\tthis._timeOfFirstUpdate = Date.now() / 1000;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttime = Date.now() / 1000 - this._timeOfFirstUpdate;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttime = engine.getTime();\n\t\t}\n\t\tif (this._getPositionAtTime(this._newPosition, time)) {\n\t\t\tthis.getEntity().setPosition(this._newPosition);\n\t\t}\n\t\tif (this._getVelocityAtTime(this._newVelocity, time)) {\n\t\t\tthis.getEntity().setVelocity(this._newVelocity);\n\t\t}\n\t\tif (this._getOrientationAtTime(this._newOrientation, time)) {\n\t\t\tthis.getEntity().setOrientation(this._newOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * Sets outPosition to the position at the given time. Returns true if they were set.\n\t * @param {Vector3} outPosition\n\t * @param {number} time\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_getPositionAtTime(outPosition, time) {\n\t\tconst index = Sort.getIndex(time, this._positionKeyframes, isLess);\n\t\tif (index < this._positionKeyframes.length) { // Any time before or at the ending time.\n\t\t\tif (index === 0) { // Any time before or at the beginning time.\n\t\t\t\tif (this._positionKeyframes[0][0] === time) { // It's right at the beginning time.\n\t\t\t\t\tthis._getPositionOfKeyframe(outPosition, this._positionKeyframes[0]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // Any time after the beginning time.\n\t\t\t\tconst index0 = index - 1;\n\t\t\t\tconst index1 = index;\n\t\t\t\tconst time0 = this._positionKeyframes[index0][0];\n\t\t\t\tconst time1 = this._positionKeyframes[index1][0];\n\t\t\t\tthis._getPositionOfKeyframe(this._position0, this._positionKeyframes[index0]);\n\t\t\t\tthis._getPositionOfKeyframe(this._position1, this._positionKeyframes[index1]);\n\t\t\t\tif (index0 > 0) {\n\t\t\t\t\tconst timeA = this._positionKeyframes[index0 - 1][0];\n\t\t\t\t\tthis._getPositionOfKeyframe(this._tempA, this._positionKeyframes[index0 - 1]);\n\t\t\t\t\tthis._tempA.sub(this._position0, this._tempA);\n\t\t\t\t\tthis._tempB.sub(this._position1, this._position0);\n\t\t\t\t\tthis._tempB.mult(this._tempB, 0.5);\n\t\t\t\t\tthis._tangent0.addMult(this._tempB, this._tempA, 0.5 * (time1 - time0) / (time0 - timeA));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tangent0.sub(this._position1, this._position0);\n\t\t\t\t}\n\t\t\t\tif (index1 < this._positionKeyframes.length - 1) {\n\t\t\t\t\tconst timeB = this._positionKeyframes[index1 + 1][0];\n\t\t\t\t\tthis._getPositionOfKeyframe(this._tempB, this._positionKeyframes[index1 + 1]);\n\t\t\t\t\tthis._tempA.sub(this._position1, this._position0);\n\t\t\t\t\tthis._tempB.sub(this._tempB, this._position1);\n\t\t\t\t\tthis._tempA.mult(this._tempA, 0.5);\n\t\t\t\t\tthis._tangent1.addMult(this._tempA, this._tempB, 0.5 * (time1 - time0) / (timeB - time1));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tangent1.sub(this._position1, this._position0);\n\t\t\t\t}\n\t\t\t\tconst u = (time - time0) / (time1 - time0);\n\t\t\t\tthis._cubicHermiteSpline(outPosition, this._position0, this._position1, this._tangent0, this._tangent1, u);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets outVelocity to the velocity at the given time. Returns true if they were set.\n\t * @param {Vector3} outVelocity\n\t * @param {number} time\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_getVelocityAtTime(outVelocity, time) {\n\t\tconst index = Sort.getIndex(time, this._positionKeyframes, isLess);\n\t\tif (index < this._positionKeyframes.length) { // Any time before or at the ending time.\n\t\t\tif (index === 0) { // Any time before or at the beginning time.\n\t\t\t\tif (this._positionKeyframes[0][0] === time) { // It's right at the beginning time.\n\t\t\t\t\tif (this._positionKeyframes.length > 1) {\n\t\t\t\t\t\tconst time0 = this._positionKeyframes[0][0];\n\t\t\t\t\t\tconst time1 = this._positionKeyframes[1][0];\n\t\t\t\t\t\tthis._getPositionOfKeyframe(this._position0, this._positionKeyframes[0]);\n\t\t\t\t\t\tthis._getPositionOfKeyframe(this._position1, this._positionKeyframes[1]);\n\t\t\t\t\t\toutVelocity.sub(this._position1, this._position0);\n\t\t\t\t\t\toutVelocity.div(outVelocity, time1 - time0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\toutVelocity.set(0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // Any time after the beginning time.\n\t\t\t\tconst index0 = index - 1;\n\t\t\t\tconst index1 = index;\n\t\t\t\tconst time0 = this._positionKeyframes[index0][0];\n\t\t\t\tconst time1 = this._positionKeyframes[index1][0];\n\t\t\t\tthis._getPositionOfKeyframe(this._position0, this._positionKeyframes[index0]);\n\t\t\t\tthis._getPositionOfKeyframe(this._position1, this._positionKeyframes[index1]);\n\t\t\t\tif (index0 > 0) {\n\t\t\t\t\tconst timeA = this._positionKeyframes[index0 - 1][0];\n\t\t\t\t\tthis._getPositionOfKeyframe(this._tempA, this._positionKeyframes[index0 - 1]);\n\t\t\t\t\tthis._tempA.sub(this._position0, this._tempA);\n\t\t\t\t\tthis._tempB.sub(this._position1, this._position0);\n\t\t\t\t\tthis._tempB.mult(this._tempB, 0.5);\n\t\t\t\t\tthis._tangent0.addMult(this._tempB, this._tempA, 0.5 * (time1 - time0) / (time0 - timeA));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tangent0.sub(this._position1, this._position0);\n\t\t\t\t}\n\t\t\t\tif (index1 < this._positionKeyframes.length - 1) {\n\t\t\t\t\tconst timeB = this._positionKeyframes[index1 + 1][0];\n\t\t\t\t\tthis._getPositionOfKeyframe(this._tempB, this._positionKeyframes[index1 + 1]);\n\t\t\t\t\tthis._tempA.sub(this._position1, this._position0);\n\t\t\t\t\tthis._tempB.sub(this._tempB, this._position1);\n\t\t\t\t\tthis._tempA.mult(this._tempA, 0.5);\n\t\t\t\t\tthis._tangent1.addMult(this._tempA, this._tempB, 0.5 * (time1 - time0) / (timeB - time1));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tangent1.sub(this._position1, this._position0);\n\t\t\t\t}\n\t\t\t\tconst u = (time - time0) / (time1 - time0);\n\t\t\t\tthis._cubicHermiteSplineDerivative(outVelocity, this._position0, this._position1, this._tangent0, this._tangent1, u);\n\t\t\t\toutVelocity.div(outVelocity, time1 - time0);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets outOrientation to the orientation at the given time. Returns true if it was set.\n\t * @param {Quaternion} outOrientation\n\t * @param {number} time\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_getOrientationAtTime(outOrientation, time) {\n\t\tconst index = Sort.getIndex(time, this._orientationKeyframes, isLess);\n\t\tif (index < this._orientationKeyframes.length) { // Any time before or at the ending time.\n\t\t\tif (index === 0) { // Any time before or at the beginning time.\n\t\t\t\tif (this._orientationKeyframes[0][0] === time) { // It's right at the beginning time.\n\t\t\t\t\tthis._getOrientationOfKeyframe(outOrientation, this._orientationKeyframes[0]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // Any time after the beginning time.\n\t\t\t\tconst index0 = index - 1;\n\t\t\t\tconst index1 = index;\n\t\t\t\tconst time0 = this._orientationKeyframes[index0][0];\n\t\t\t\tthis._getOrientationOfKeyframe(this._orientation0, this._orientationKeyframes[index0]);\n\t\t\t\tconst time1 = this._orientationKeyframes[index1][0];\n\t\t\t\tthis._getOrientationOfKeyframe(this._orientation1, this._orientationKeyframes[index1]);\n\t\t\t\toutOrientation.slerp(this._orientation0, this._orientation1, (time - time0) / (time1 - time0));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Gets the position from a keyframe value.\n\t * @param {Vector3} outPosition\n\t * @param {{0: number, 1: PositionKeyframe}} keyframe\n\t * @private\n\t */\n\t_getPositionOfKeyframe(outPosition, keyframe) {\n\t\tconst positionKeyframe = keyframe[1];\n\t\toutPosition.copy(positionKeyframe.position);\n\t\tif (positionKeyframe.relativeToEntityOrientation !== undefined) {\n\t\t\tconst time = keyframe[1].relativeToEntityOrientationTime !== undefined ? keyframe[1].relativeToEntityOrientationTime : keyframe[0];\n\t\t\tconst otherEntity = positionKeyframe.relativeToEntityOrientation.get();\n\t\t\tif (otherEntity !== null) {\n\t\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\t\totherEntity.getOrientationAtTime(orientation, time);\n\t\t\t\toutPosition.rotate(orientation, outPosition);\n\t\t\t\tQuaternion.pool.release(orientation);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\t}\n\t\t}\n\t\tif (positionKeyframe.relativeToEntityPosition !== undefined) {\n\t\t\tconst time = keyframe[1].relativeToEntityPositionTime !== undefined ? keyframe[1].relativeToEntityPositionTime : keyframe[0];\n\t\t\tconst relativeToEntityPosition = Vector3.pool.get();\n\t\t\tconst otherEntity = positionKeyframe.relativeToEntityPosition.get();\n\t\t\tif (otherEntity !== null) {\n\t\t\t\totherEntity.getPositionRelativeToEntity(relativeToEntityPosition, Vector3.Zero, this.getEntity().getParent(), time);\n\t\t\t\toutPosition.add(relativeToEntityPosition, outPosition);\n\t\t\t\tVector3.pool.release(relativeToEntityPosition);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the orientation from a keyframe value.\n\t * @param {Quaternion} outOrientation\n\t * @param {{0: number, 1: OrientationKeyframe}} keyframe\n\t * @private\n\t */\n\t_getOrientationOfKeyframe(outOrientation, keyframe) {\n\t\tconst orientationKeyframe = keyframe[1];\n\t\tif (orientationKeyframe.relativeToEntityOrientation !== undefined) {\n\t\t\tconst time = keyframe[1].relativeToEntityOrientationTime !== undefined ? keyframe[1].relativeToEntityOrientationTime : keyframe[0];\n\t\t\tconst otherEntity = orientationKeyframe.relativeToEntityOrientation.get();\n\t\t\tif (otherEntity !== null) {\n\t\t\t\totherEntity.getOrientationAtTime(outOrientation, time);\n\t\t\t\toutOrientation.mult(outOrientation, orientationKeyframe.orientation);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutOrientation.copy(Quaternion.NaN);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\toutOrientation.copy(orientationKeyframe.orientation);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the coverage.\n\t * @private\n\t */\n\t_updateCoverage() {\n\t\tif (this._timesAreRealTime) {\n\t\t\tthis.setCoverage(Interval.Infinite);\n\t\t}\n\t\telse {\n\t\t\tconst coverage = new Interval(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\t\t\tif (this._positionKeyframes.length > 0) {\n\t\t\t\tcoverage.min = Math.min(coverage.min, this._positionKeyframes[0][0]);\n\t\t\t\tcoverage.max = Math.max(coverage.max, this._positionKeyframes[this._positionKeyframes.length - 1][0]);\n\t\t\t}\n\t\t\tif (this._orientationKeyframes.length > 0) {\n\t\t\t\tcoverage.min = Math.min(coverage.min, this._orientationKeyframes[0][0]);\n\t\t\t\tcoverage.max = Math.max(coverage.max, this._orientationKeyframes[this._orientationKeyframes.length - 1][0]);\n\t\t\t}\n\t\t\tthis.setCoverage(coverage);\n\t\t}\n\t}\n\n\t/**\n\t * Sets outP to the cubic hermite spline of the given parameters.\n\t * @param {Vector3} outP\n\t * @param {Vector3} p0\n\t * @param {Vector3} p1\n\t * @param {Vector3} t0\n\t * @param {Vector3} t1\n\t * @param {number} u\n\t */\n\t_cubicHermiteSpline(outP, p0, p1, t0, t1, u) {\n\t\tconst u2 = u * u;\n\t\tconst u3 = u * u2;\n\t\tconst c0 = 2 * u3 - 3 * u2 + 1;\n\t\tconst c1 = u3 - 2 * u2 + u;\n\t\tconst c2 = -2 * u3 + 3 * u2;\n\t\tconst c3 = u3 - u2;\n\t\toutP.x = c0 * p0.x + c1 * t0.x + c2 * p1.x + c3 * t1.x;\n\t\toutP.y = c0 * p0.y + c1 * t0.y + c2 * p1.y + c3 * t1.y;\n\t\toutP.z = c0 * p0.z + c1 * t0.z + c2 * p1.z + c3 * t1.z;\n\t}\n\n\t/**\n\t * Sets outP to the derivative of the cubic hermite spline of the given parameters.\n\t * @param {Vector3} outV\n\t * @param {Vector3} p0\n\t * @param {Vector3} p1\n\t * @param {Vector3} t0\n\t * @param {Vector3} t1\n\t * @param {number} u\n\t */\n\t_cubicHermiteSplineDerivative(outV, p0, p1, t0, t1, u) {\n\t\tconst u2 = u * u;\n\t\tconst c0 = 6 * u2 - 6 * u;\n\t\tconst c1 = 3 * u2 - 4 * u + 1;\n\t\tconst c2 = -6 * u2 + 6 * u;\n\t\tconst c3 = 3 * u2 - 2 * u;\n\t\toutV.x = c0 * p0.x + c1 * t0.x + c2 * p1.x + c3 * t1.x;\n\t\toutV.y = c0 * p0.y + c1 * t0.y + c2 * p1.y + c3 * t1.y;\n\t\toutV.z = c0 * p0.z + c1 * t0.z + c2 * p1.z + c3 * t1.z;\n\t}\n}\n\n/**\n * @typedef PositionKeyframe\n * @property {Vector3} position\n * @property {EntityRef} [relativeToEntityPosition]\n * @property {number} [relativeToEntityPositionTime]\n * @property {EntityRef} [relativeToEntityOrientation]\n * @property {number} [relativeToEntityOrientationTime]\n */\n\n/**\n * @typedef OrientationKeyframe\n * @property {Quaternion} orientation\n * @property {EntityRef} [relativeToEntityOrientation]\n * @property {number} [relativeToEntityOrientationTime]\n */\n\n/**\n * An isLess function that uses two keyframes.\n * @callback IsLessAddFunction\n * @param {{0: number, 1: PositionKeyframe | OrientationKeyframe}} a\n * @param {{0: number, 1: PositionKeyframe | OrientationKeyframe}} b\n * @returns {boolean}\n */\n\n/**\n * An isLess function that uses a keyframe and a time.\n * @callback IsLessFunction\n * @param {{0: number, 1: PositionKeyframe | OrientationKeyframe}} a\n * @param {number} b\n * @returns {boolean}\n */\n\n/**\n * An isLess function that uses a keyframe and a time.\n * @callback IsEqualFunction\n * @param {{0: number, 1: PositionKeyframe | OrientationKeyframe}} a\n * @param {number} b\n * @returns {boolean}\n */\n\n/**\n * A helper function for the keyframe sorting.\n * @type {IsLessAddFunction}\n */\nconst isLessAdd = (a, b) => (a[0] < b[0]);\n\n/**\n * A helper function for the keyframe sorting.\n * @type {IsLessFunction}\n */\nconst isLess = (a, b) => (a[0] < b);\n\n/**\n * A helper function for the keyframe sorting.\n * @type {IsEqualFunction}\n */\nconst isEqual = (a, b) => (a[0] === b);\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tCameraComponent,\n\tEntity,\n\tMathUtils,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * A camera controller that looks around the user with an optional axis.\n */\nexport class LookController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The sensitivity for dragging.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dragSensitivity = 0.01;\n\n\t\t/**\n\t\t * The smoothness of the dragging. Zero means no smoothness.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dragSmoothness = 0.8;\n\n\t\t/**\n\t\t * The current value applied every frame to the yaw axis rotation.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._yawAngleSmoothedValue = 0.0;\n\n\t\t/**\n\t\t * The current value applied every frame to the pitch axis rotation.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._pitchAngleSmoothedValue = 0.0;\n\n\t\t/**\n\t\t * The axis around which to yaw. It can be 'none', 'x-axis', 'y-axis', 'z-axis', or 'position'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._yawAxisType = 'none';\n\n\t\t/**\n\t\t * The yaw axis reference entity.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._yawAxisEntity = null;\n\n\t\t// Let the base controller know that this changes the orientation.\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Gets the drag sensitivity. Defaults to 0.01.\n\t * @returns {number}\n\t */\n\tgetDragSensitivity() {\n\t\treturn this._dragSensitivity;\n\t}\n\n\t/**\n\t * Sets the drag sensitivity.\n\t * @param {number} dragSensitivity\n\t */\n\tsetDragSensitivity(dragSensitivity) {\n\t\tthis._dragSensitivity = dragSensitivity;\n\t}\n\n\t/**\n\t * Gets the drag smoothness. Defaults to 0.8.\n\t * @returns {number}\n\t */\n\tgetDragSmoothness() {\n\t\treturn this._dragSmoothness;\n\t}\n\n\t/**\n\t * Sets the drag smoothness, between 0 and 1.\n\t * @param {number} dragSmoothness\n\t */\n\tsetDragSmoothness(dragSmoothness) {\n\t\tthis._dragSmoothness = dragSmoothness;\n\t}\n\n\t/**\n\t * Gets the axis around which to yaw.\n\t * @returns {string}\n\t */\n\tgetYawAxisType() {\n\t\treturn this._yawAxisType;\n\t}\n\n\t/**\n\t * Sets the axis around which to yaw. It can be 'none', 'x-axis', 'y-axis', 'z-axis', or 'position'.\n\t * @param {string} yawAxisType\n\t */\n\tsetYawAxisType(yawAxisType) {\n\t\tif (this._yawAxisType === yawAxisType) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t\tthis._yawAxisType = yawAxisType;\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the yaw axis reference entity. Defaults to this entity's parent.\n\t * @returns {Entity}\n\t */\n\tgetYawAxisEntity() {\n\t\treturn this._yawAxisEntity;\n\t}\n\n\t/**\n\t * Sets the yaw axis reference entity.\n\t * @param {Entity} yawAxisEntity\n\t */\n\tsetYawAxisEntity(yawAxisEntity) {\n\t\tif (this._yawAxisEntity === yawAxisEntity) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t\tthis._yawAxisEntity = yawAxisEntity;\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the entity's position and orientation.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// If the yaw axis entity is null, set it to the parent.\n\t\tif (this._yawAxisEntity === null) {\n\t\t\tthis._yawAxisEntity = this.getEntity().getParent();\n\t\t\tif (this._yawAxisEntity !== null) {\n\t\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t\t}\n\t\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set the position and orientation if they have never been set before.\n\t\tif (this.getEntity().getOrientation().isNaN()) {\n\t\t\tthis.getEntity().setOrientation(Quaternion.Identity);\n\t\t}\n\n\t\t// Get the look multiplier for if 'x' is pressed.\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\t\tlet lookMultiplier = 1;\n\t\tif (input.isKeyPressed('x')) {\n\t\t\tlookMultiplier = 0.05;\n\t\t}\n\n\t\t// Factor in the field of view of the camera.\n\t\tconst camera = /** @type {CameraComponent} */(this.getEntity().getComponentByType('camera'));\n\t\tif (camera !== null) {\n\t\t\tlookMultiplier *= Math.min(1, camera.getFieldOfView());\n\t\t}\n\n\t\t// Get the yaw and pitch from input.\n\t\tlet yawAngle = 0;\n\t\tlet pitchAngle = 0;\n\t\tconst viewport = input.getActiveViewport();\n\t\tif (viewport !== null) {\n\t\t\tconst camera = viewport.getCamera();\n\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\t// Add mouse movement.\n\t\t\t\tconst draggedOffset = input.getDraggedOffset();\n\t\t\t\tyawAngle = -draggedOffset.x * this._dragSensitivity * lookMultiplier;\n\t\t\t\tpitchAngle = -draggedOffset.y * this._dragSensitivity * lookMultiplier;\n\t\t\t}\n\t\t}\n\n\t\t// Apply smoothing.\n\t\tthis._yawAngleSmoothedValue = MathUtils.lerp(yawAngle, this._yawAngleSmoothedValue, this._dragSmoothness);\n\t\tthis._pitchAngleSmoothedValue = MathUtils.lerp(pitchAngle, this._pitchAngleSmoothedValue, this._dragSmoothness);\n\t\tif (Math.abs(this._yawAngleSmoothedValue) < 0.0001 * lookMultiplier) {\n\t\t\tthis._yawAngleSmoothedValue = 0;\n\t\t}\n\t\tif (Math.abs(this._pitchAngleSmoothedValue) < 0.0001 * lookMultiplier) {\n\t\t\tthis._pitchAngleSmoothedValue = 0;\n\t\t}\n\n\t\t// Get the yaw axis.\n\t\tconst yawAxis = Vector3.pool.get();\n\t\tif (this._yawAxisType === 'x-axis' && this._yawAxisEntity !== null) { // Use the x-axis of the reference entity.\n\t\t\tthis._yawAxisEntity.getOrientation().getAxis(yawAxis, 0);\n\t\t}\n\t\telse if (this._yawAxisType === 'y-axis' && this._yawAxisEntity !== null) { // Use the y-axis of the reference entity.\n\t\t\tthis._yawAxisEntity.getOrientation().getAxis(yawAxis, 1);\n\t\t}\n\t\telse if (this._yawAxisType === 'z-axis' && this._yawAxisEntity !== null) { // Use the z-axis of the reference entity.\n\t\t\tthis._yawAxisEntity.getOrientation().getAxis(yawAxis, 2);\n\t\t}\n\t\telse if (this._yawAxisType === 'position' && this._yawAxisEntity !== null) { // Use the position of the reference entity.\n\t\t\tyawAxis.normalize(this._yawAxisEntity.getPosition());\n\t\t}\n\t\telse {\n\t\t\tthis.getEntity().getOrientation().getAxis(yawAxis, 2); // Use the entity's z-axis.\n\t\t}\n\n\t\t// If the yaw axis isn't ready, just work as if the yaw axis type is 'none'.\n\t\tif (yawAxis.isNaN()) {\n\t\t\tthis.getEntity().getOrientation().getAxis(yawAxis, 2);\n\t\t}\n\n\t\t// Get the current orientation.\n\t\tconst orientation = Quaternion.pool.get();\n\t\torientation.copy(this.getEntity().getOrientation());\n\n\t\t// Rotate the orientation so that its z-axis is upright.\n\t\tconst rotation = Quaternion.pool.get();\n\t\tconst zAxis = Vector3.pool.get();\n\t\tconst yAxis = Vector3.pool.get();\n\t\tthis.getEntity().getOrientation().getAxis(yAxis, 1);\n\t\tthis.getEntity().getOrientation().getAxis(zAxis, 2);\n\t\tconst angle = zAxis.angleAroundAxis(yawAxis, yAxis);\n\t\trotation.setFromAxisAngle(yAxis, angle);\n\t\trotation.normalize(rotation);\n\t\torientation.mult(rotation, orientation);\n\t\tVector3.pool.release(zAxis);\n\t\tVector3.pool.release(yAxis);\n\n\t\t// Get the pitch axis.\n\t\tconst pitchAxis = Vector3.pool.get();\n\t\torientation.getAxis(pitchAxis, 0);\n\n\t\t// Rotate the target orientation by the pitch axis.\n\t\trotation.setFromAxisAngle(pitchAxis, this._pitchAngleSmoothedValue);\n\t\torientation.mult(rotation, orientation);\n\t\tVector3.pool.release(pitchAxis);\n\n\t\t// Rotate the target orientation by the yaw axis.\n\t\trotation.setFromAxisAngle(yawAxis, this._yawAngleSmoothedValue);\n\t\torientation.mult(rotation, orientation);\n\t\tVector3.pool.release(yawAxis);\n\t\tQuaternion.pool.release(rotation);\n\n\t\t// Set the current position.\n\t\tthis.getEntity().setOrientation(orientation);\n\t\tQuaternion.pool.release(orientation);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tInterval,\n\tMathUtils,\n\tModelComponent,\n\tTHREE\n} from '../../internal';\n\n/**\n * A controller animates using the model's keyframed animations.\n */\nexport class ModelAnimateController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The animations.\n\t\t * @type {Animation[]}\n\t\t * @private\n\t\t */\n\t\tthis._animations = [];\n\t}\n\n\t/**\n\t * Sets the animation to be at the joint on the specified model.\n\t * @param {ModelComponent} model - the model of the joint\n\t * @param {string} jointName - the joint on which the animation will be played\n\t * @param {string} animationName - the name of the animation\n\t * @param {Interval} interval - the interval over which the animation will be played\n\t */\n\tsetAnimation(model, jointName, animationName, interval) {\n\t\tif (model === null) {\n\t\t\tthrow new Error('Null model specified.');\n\t\t}\n\t\tthis._animations.push({\n\t\t\tmodel,\n\t\t\tjointName,\n\t\t\tanimationName,\n\t\t\tinterval,\n\t\t\tanimationClip: null,\n\t\t\trootObject: null,\n\t\t\tjointObject: null,\n\t\t\tanimationMixer: null\n\t\t});\n\t}\n\n\t/**\n\t * Updates the position and orientation from the keyframes.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst time = this.getEntity().getScene().getEngine().getTime();\n\n\t\tfor (let i = 0, l = this._animations.length; i < l; i++) {\n\t\t\tconst animation = this._animations[i];\n\t\t\t// If the model component no longer exists, remove the animation.\n\t\t\tif (animation.model.isDestroyed()) {\n\t\t\t\tthis._animations.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// If the Three.js object doesn't yet exist, it's still loading.\n\t\t\tif (animation.model.getThreeJsObjects()[0] === null) {\n\t\t\t\tanimation.rootObject = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// If the model within the model component has been unloaded or reloaded, reset things.\n\t\t\tif (animation.rootObject !== animation.model.getThreeJsObjects()[0]) {\n\t\t\t\tanimation.rootObject = animation.model.getThreeJsObjects()[0];\n\t\t\t\tanimation.animationClip = null;\n\t\t\t\tanimation.jointObject = null;\n\t\t\t\tanimation.animationMixer = null;\n\t\t\t}\n\t\t\t// Get the animation clip if we don't yet have it.\n\t\t\tif (animation.animationClip === null) {\n\t\t\t\tanimation.animationClip = animation.model.getAnimationClip(animation.animationName);\n\t\t\t}\n\t\t\t// Get the joint object if we don't yet have it.\n\t\t\tif (animation.jointObject === null) {\n\t\t\t\tconst subObject = animation.model.getThreeJsObjectByName(animation.jointName);\n\t\t\t\tif (subObject !== null) {\n\t\t\t\t\tanimation.jointObject = subObject;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we have both the animation clip and joint object, but not the mixer, create it.\n\t\t\tif (animation.animationMixer === null && animation.animationClip !== null && animation.jointObject !== null) {\n\t\t\t\tanimation.animationMixer = new THREE.AnimationMixer(animation.jointObject);\n\t\t\t\tanimation.animationMixer.clipAction(animation.animationClip).play();\n\t\t\t}\n\n\t\t\tif (animation.animationMixer !== null) {\n\t\t\t\tconst timeWithinAnimation = MathUtils.clamp01((time - animation.interval.min) / (animation.interval.max - animation.interval.min));\n\t\t\t\tconst keyFrameTime = (animation.animationClip.duration * timeWithinAnimation) * (animation.animationClip.tracks[0].times.length - 1) / animation.animationClip.tracks[0].times.length;\n\t\t\t\tanimation.animationMixer.setTime(keyFrameTime);\n\t\t\t\tanimation.animationMixer.update(0);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef Animation\n * @property {ModelComponent} model\n * @property {string} jointName\n * @property {string} animationName\n * @property {Interval} interval\n * @property {THREE.Object3D} rootObject\n * @property {THREE.Object3D} jointObject\n * @property {THREE.AnimationClip} animationClip\n * @property {THREE.AnimationMixer } animationMixer\n */\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tCameraComponent,\n\tEntity,\n\tGeometry,\n\tInterval,\n\tLatLonAlt,\n\tMathUtils,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * An orbit camera controller orbiting around a specific axis.\n */\nexport class OrbitController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The sensitivity for dragging.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dragSensitivity = 0.01;\n\n\t\t/**\n\t\t * The smoothness of the dragging. Zero means no smoothness.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dragSmoothness = 0.8;\n\n\t\t/**\n\t\t * The current value applied every frame to the yaw axis rotation.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._yawChangeSmoothedValue = 0.0;\n\n\t\t/**\n\t\t * The current value applied every frame to the pitch axis rotation.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._pitchChangeSmoothedValue = 0.0;\n\n\t\t/**\n\t\t * The axis around which to yaw. It can be 'none', 'x-axis', 'y-axis', 'z-axis', or 'position'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._yawAxisType = 'none';\n\n\t\t/**\n\t\t * The yaw axis reference entity.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._yawAxisEntity = null;\n\n\t\t/**\n\t\t * The axis around which to pitch. It can be 'none', 'x-axis', 'y-axis', 'z-axis', or 'position'.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._pitchAxisType = 'none';\n\n\t\t/**\n\t\t * The pitch axis reference entity.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._pitchAxisEntity = null;\n\n\t\t/**\n\t\t * When true, the entity will slow as it gets closer to its parent's occlusion radius.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._slowWhenCloseToParent = false;\n\n\t\t/**\n\t\t * The limits of the yaw angle.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._yawAngleLimits = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\tthis._yawAngleLimits.freeze();\n\n\t\t/**\n\t\t * The limits of the pitch angle.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._pitchAngleLimits = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\tthis._pitchAngleLimits.freeze();\n\n\t\t// Let the base controller know that this changes the position and orientation.\n\t\tthis.addModifiedState('position');\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Gets the drag sensitivity. Defaults to 0.01.\n\t * @returns {number}\n\t */\n\tgetDragSensitivity() {\n\t\treturn this._dragSensitivity;\n\t}\n\n\t/**\n\t * Sets the drag sensitivity.\n\t * @param {number} dragSensitivity\n\t */\n\tsetDragSensitivity(dragSensitivity) {\n\t\tthis._dragSensitivity = dragSensitivity;\n\t}\n\n\t/**\n\t * Gets the drag smoothness. Defaults to 0.8.\n\t * @returns {number}\n\t */\n\tgetDragSmoothness() {\n\t\treturn this._dragSmoothness;\n\t}\n\n\t/**\n\t * Sets the drag smoothness, between 0 and 1.\n\t * @param {number} dragSmoothness\n\t */\n\tsetDragSmoothness(dragSmoothness) {\n\t\tthis._dragSmoothness = dragSmoothness;\n\t}\n\n\t/**\n\t * Gets the axis around which to yaw. It defaults to 'none'.\n\t * @returns {string}\n\t */\n\tgetYawAxisType() {\n\t\treturn this._yawAxisType;\n\t}\n\n\t/**\n\t * Sets the axis around which to yaw. It can be 'none', 'x-axis', 'y-axis', 'z-axis', or 'position'.\n\t * @param {string} yawAxisType\n\t */\n\tsetYawAxisType(yawAxisType) {\n\t\tif (this._yawAxisType === yawAxisType) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t\tthis._yawAxisType = yawAxisType;\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the axis around which to pitch. It defaults to 'none'.\n\t * @returns {string}\n\t */\n\tgetPitchAxisType() {\n\t\treturn this._pitchAxisType;\n\t}\n\n\t/**\n\t * Sets the axis around which to pitch. It can be 'none', 'x-axis', 'y-axis', 'z-axis', or 'position'.\n\t * @param {string} pitchAxisType\n\t */\n\tsetPitchAxisType(pitchAxisType) {\n\t\tif (this._pitchAxisType === pitchAxisType) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._pitchAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._pitchAxisType)) {\n\t\t\t\tthis.removeDependentState(this._pitchAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._pitchAxisType === 'position') {\n\t\t\t\tthis.removeDependentState(this._pitchAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t\tthis._pitchAxisType = pitchAxisType;\n\t\tif (this._pitchAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._pitchAxisType)) {\n\t\t\t\tthis.addDependentState(this._pitchAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._pitchAxisType === 'position') {\n\t\t\t\tthis.addDependentState(this._pitchAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the yaw axis reference entity. Defaults to this entity's parent.\n\t * @returns {Entity}\n\t */\n\tgetYawAxisEntity() {\n\t\treturn this._yawAxisEntity;\n\t}\n\n\t/**\n\t * Sets the yaw axis reference entity.\n\t * @param {Entity} yawAxisEntity\n\t */\n\tsetYawAxisEntity(yawAxisEntity) {\n\t\tif (this._yawAxisEntity === yawAxisEntity) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.removeDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t\tthis._yawAxisEntity = yawAxisEntity;\n\t\tif (this._yawAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._yawAxisType)) {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._yawAxisType === 'position') {\n\t\t\t\tthis.addDependentState(this._yawAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the pitch axis reference entity. Defaults to this entity's parent.\n\t * @returns {Entity}\n\t */\n\tgetPitchAxisEntity() {\n\t\treturn this._pitchAxisEntity;\n\t}\n\n\t/**\n\t * Sets the pitch axis reference entity.\n\t * @param {Entity} pitchAxisEntity\n\t */\n\tsetPitchAxisEntity(pitchAxisEntity) {\n\t\tif (this._pitchAxisEntity === pitchAxisEntity) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._pitchAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._pitchAxisType)) {\n\t\t\t\tthis.removeDependentState(this._pitchAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._pitchAxisType === 'position') {\n\t\t\t\tthis.removeDependentState(this._pitchAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t\tthis._pitchAxisEntity = pitchAxisEntity;\n\t\tif (this._pitchAxisEntity !== null) {\n\t\t\tif (['x-axis', 'y-axis', 'z-axis'].includes(this._pitchAxisType)) {\n\t\t\t\tthis.addDependentState(this._pitchAxisEntity.getName(), 'orientation');\n\t\t\t}\n\t\t\telse if (this._pitchAxisType === 'position') {\n\t\t\t\tthis.addDependentState(this._pitchAxisEntity.getName(), 'position');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the limits of the yaw angle.\n\t * @returns {Interval}\n\t */\n\tgetYawAngleLimits() {\n\t\treturn this._yawAngleLimits;\n\t}\n\n\t/**\n\t * Sets the limits of the yaw angle.\n\t * @param {Interval} yawAngleLimits\n\t */\n\tsetYawAngleLimits(yawAngleLimits) {\n\t\tthis._yawAngleLimits.thaw();\n\t\tthis._yawAngleLimits.copy(yawAngleLimits);\n\t\tthis._yawAngleLimits.freeze();\n\t}\n\n\t/**\n\t * Gets the limits of the pitch angle.\n\t * @returns {Interval}\n\t */\n\tgetPitchAngleLimits() {\n\t\treturn this._pitchAngleLimits;\n\t}\n\n\t/**\n\t * Sets the limits of the pitch angle.\n\t * @param {Interval} pitchAngleLimits\n\t */\n\tsetPitchAngleLimits(pitchAngleLimits) {\n\t\tthis._pitchAngleLimits.thaw();\n\t\tthis._pitchAngleLimits.copy(pitchAngleLimits);\n\t\tthis._pitchAngleLimits.freeze();\n\t}\n\n\t/**\n\t * Returns whether the entity will slow as it gets closer to its parent's occlusion radius.\n\t * @returns {boolean}\n\t */\n\tisSlowWhenCloseToParent() {\n\t\treturn this._slowWhenCloseToParent;\n\t}\n\n\t/**\n\t * Sets whether the entity will slow as it gets closer to its parent's occlusion radius.\n\t * @param {boolean} enabled\n\t */\n\tslowWhenCloseToParent(enabled) {\n\t\tthis._slowWhenCloseToParent = enabled;\n\t}\n\n\t/**\n\t * Updates the entity's position and orientation.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// There is no pivot, so don't do anything.\n\t\tif (this.getEntity().getParent() === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set the position and orientation if they have never been set before.\n\t\tif (this.getEntity().getOrientation().isNaN()) {\n\t\t\tthis.getEntity().setOrientation(Quaternion.Identity);\n\t\t}\n\t\tif (this.getEntity().getPosition().isNaN()) {\n\t\t\tthis.getEntity().setPosition(new Vector3(0, -1, 0));\n\t\t}\n\n\t\t// Get the orbit multiplier for if 'x' or 'shift' is pressed.\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\t\tlet orbitMultiplier = 1;\n\t\tif (input.isKeyPressed('x')) {\n\t\t\torbitMultiplier = 0.05;\n\t\t}\n\t\tif (input.isShiftPressed()) {\n\t\t\torbitMultiplier = 5;\n\t\t}\n\t\t// Factor in the field of view of the camera.\n\t\tconst camera = /** @type {CameraComponent} */(this.getEntity().getComponentByType('camera'));\n\t\tif (camera !== null) {\n\t\t\torbitMultiplier *= Math.min(1, camera.getFieldOfView());\n\t\t}\n\n\t\t// Get the azimuth and elevation change from the input.\n\t\tlet yawChange = 0;\n\t\tlet pitchChange = 0;\n\t\tconst viewport = input.getActiveViewport();\n\t\tif (viewport !== null) {\n\t\t\tconst camera = viewport.getCamera();\n\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\t// Add mouse/touch movement.\n\t\t\t\tconst draggedOffset = input.getDraggedOffset();\n\t\t\t\tyawChange = -draggedOffset.x * this._dragSensitivity * orbitMultiplier;\n\t\t\t\tpitchChange = draggedOffset.y * this._dragSensitivity * orbitMultiplier;\n\n\t\t\t\t// Add key movement.\n\t\t\t\tif (input.isKeyPressed('d')) {\n\t\t\t\t\tyawChange += this._dragSensitivity * orbitMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('a')) {\n\t\t\t\t\tyawChange -= this._dragSensitivity * orbitMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('e')) {\n\t\t\t\t\tpitchChange -= this._dragSensitivity * orbitMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('q')) {\n\t\t\t\t\tpitchChange += this._dragSensitivity * orbitMultiplier;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Apply smoothing.\n\t\tthis._yawChangeSmoothedValue = MathUtils.lerp(yawChange, this._yawChangeSmoothedValue, this._dragSmoothness);\n\t\tthis._pitchChangeSmoothedValue = MathUtils.lerp(pitchChange, this._pitchChangeSmoothedValue, this._dragSmoothness);\n\t\tif (Math.abs(this._yawChangeSmoothedValue) < 0.0001 * orbitMultiplier) {\n\t\t\tthis._yawChangeSmoothedValue = 0;\n\t\t}\n\t\tif (Math.abs(this._pitchChangeSmoothedValue) < 0.0001 * orbitMultiplier) {\n\t\t\tthis._pitchChangeSmoothedValue = 0;\n\t\t}\n\n\t\t// Get the yaw axis.\n\t\tconst yawAxis = Vector3.pool.get();\n\t\t// If the yaw axis entity is null, set it to the parent.\n\t\tif (this._yawAxisEntity === null) {\n\t\t\tthis._yawAxisEntity = this.getEntity().getParent();\n\t\t}\n\t\tif (this._yawAxisType === 'x-axis' && this._yawAxisEntity !== null) { // Use the x-axis of the reference entity.\n\t\t\tthis._yawAxisEntity.getOrientation().getAxis(yawAxis, 0);\n\t\t}\n\t\telse if (this._yawAxisType === 'y-axis' && this._yawAxisEntity !== null) { // Use the y-axis of the reference entity.\n\t\t\tthis._yawAxisEntity.getOrientation().getAxis(yawAxis, 1);\n\t\t}\n\t\telse if (this._yawAxisType === 'z-axis' && this._yawAxisEntity !== null) { // Use the z-axis of the reference entity.\n\t\t\tthis._yawAxisEntity.getOrientation().getAxis(yawAxis, 2);\n\t\t}\n\t\telse if (this._yawAxisType === 'position' && this._yawAxisEntity !== null) { // Use the position of the reference entity.\n\t\t\tyawAxis.normalize(this._yawAxisEntity.getPosition());\n\t\t}\n\t\telse {\n\t\t\tthis.getEntity().getOrientation().getAxis(yawAxis, 2); // Use the entity's z-axis.\n\t\t}\n\n\t\t// If the yaw axis isn't ready, just work as if the yaw axis type is 'none'.\n\t\tif (yawAxis.isNaN() || yawAxis.isZero()) {\n\t\t\tthis.getEntity().getOrientation().getAxis(yawAxis, 2);\n\t\t}\n\n\t\t// Get the pitch axis.\n\t\tconst pitchAxis = Vector3.pool.get();\n\t\t// If the pitch axis entity is null, set it to the parent.\n\t\tif (this._pitchAxisEntity === null) {\n\t\t\tthis._pitchAxisEntity = this.getEntity().getParent();\n\t\t}\n\t\tif (this._pitchAxisType === 'x-axis' && this._pitchAxisEntity !== null) { // Use the x-axis of the reference entity.\n\t\t\tthis._pitchAxisEntity.getOrientation().getAxis(pitchAxis, 0);\n\t\t}\n\t\telse if (this._pitchAxisType === 'y-axis' && this._pitchAxisEntity !== null) { // Use the y-axis of the reference entity.\n\t\t\tthis._pitchAxisEntity.getOrientation().getAxis(pitchAxis, 1);\n\t\t}\n\t\telse if (this._pitchAxisType === 'z-axis' && this._pitchAxisEntity !== null) { // Use the z-axis of the reference entity.\n\t\t\tthis._pitchAxisEntity.getOrientation().getAxis(pitchAxis, 2);\n\t\t}\n\t\telse if (this._pitchAxisType === 'position' && this._pitchAxisEntity !== null) { // Use the position of the reference entity.\n\t\t\tpitchAxis.normalize(this._pitchAxisEntity.getPosition());\n\t\t}\n\t\telse {\n\t\t\tthis.getEntity().getOrientation().getAxis(pitchAxis, 0); // Use the entity's x-axis.\n\t\t}\n\n\t\t// If the pitch axis isn't ready, just work as if the pitch axis type is 'none'.\n\t\tif (pitchAxis.isNaN() || pitchAxis.isZero()) {\n\t\t\tthis.getEntity().getOrientation().getAxis(pitchAxis, 0);\n\t\t}\n\n\t\t// Make the pitch axis orthonormal to the yaw axis.\n\t\tpitchAxis.setNormalTo(yawAxis, pitchAxis);\n\n\t\t// Get the axes as a quaternion frame.\n\t\tconst axisFrame = Quaternion.pool.get();\n\t\taxisFrame.setFromAxes(pitchAxis, undefined, yawAxis);\n\t\tVector3.pool.release(pitchAxis);\n\t\tVector3.pool.release(yawAxis);\n\n\t\t// Get the current position angles relative to the axes.\n\t\tconst position = Vector3.pool.get();\n\t\tposition.rotateInverse(axisFrame, this.getEntity().getPosition());\n\n\t\t// Calculate the slow factor.\n\t\tlet slowFactor = 1.0;\n\t\tif (this._slowWhenCloseToParent) {\n\t\t\tconst radius = this.getEntity().getParent().getOcclusionRadius();\n\t\t\tslowFactor = MathUtils.clamp((position.magnitude() - radius) / radius, 0.001, 1.0);\n\t\t}\n\n\t\t// Add in the pitch and yaw changes.\n\t\tconst lla = LatLonAlt.pool.get();\n\t\tGeometry.getLLAFromXYZOnSphere(lla, position, 0);\n\t\tlla.lat += this._pitchChangeSmoothedValue * slowFactor;\n\t\tlla.lon += this._yawChangeSmoothedValue * slowFactor;\n\n\t\t// Set upper limits for pitch so that it doesn't go beyond the yaw axis.\n\t\tif (lla.lat < 0.0001 - MathUtils.halfPi) {\n\t\t\tlla.lat = 0.0001 - MathUtils.halfPi;\n\t\t}\n\t\tif (lla.lat > MathUtils.halfPi - 0.0001) {\n\t\t\tlla.lat = MathUtils.halfPi - 0.0001;\n\t\t}\n\n\t\t// Apply pitch and yaw limits.\n\t\tif (lla.lat < this._pitchAngleLimits.min) {\n\t\t\tlla.lat = this._pitchAngleLimits.min;\n\t\t}\n\t\tif (lla.lat > this._pitchAngleLimits.max) {\n\t\t\tlla.lat = this._pitchAngleLimits.max;\n\t\t}\n\t\tif (lla.lon < this._yawAngleLimits.min) {\n\t\t\tlla.lon = this._yawAngleLimits.min;\n\t\t}\n\t\tif (lla.lon > this._yawAngleLimits.max) {\n\t\t\tlla.lon = this._yawAngleLimits.max;\n\t\t}\n\n\t\t// Set the position from the new LLA and clean up.\n\t\tGeometry.getXYZFromLLAOnSphere(position, lla, 0);\n\t\tLatLonAlt.pool.release(lla);\n\t\tposition.rotate(axisFrame, position);\n\t\tQuaternion.pool.release(axisFrame);\n\t\tthis.getEntity().setPosition(position);\n\t\tVector3.pool.release(position);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tEntityRef,\n\tMathUtils,\n\tQuaternion,\n\tScene,\n\tSort,\n\tVector3\n} from '../../internal';\n\nexport class OrbitKeyframeController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The positions that this entity will be in.\n\t\t * @type {PositionKeyframe[]}\n\t\t * @private\n\t\t */\n\t\tthis._positionKeyframes = [];\n\n\t\t/**\n\t\t * The entities that will be focused on by the camera.\n\t\t * @type {FocusKeyframe[]}\n\t\t * @private\n\t\t */\n\t\tthis._focusKeyframes = [];\n\n\t\t/**\n\t\t * The up directions that this entity will orient to.\n\t\t * @type {UpKeyframe[]}\n\t\t * @private\n\t\t */\n\t\tthis._upKeyframes = [];\n\n\t\t/**\n\t\t * The time of the first update.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._timeOfFirstUpdate = NaN;\n\n\t\t/**\n\t\t * The direction of the first update.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._directionOfFirstUpdate = new Vector3();\n\n\t\t/**\n\t\t * The resolve function that will be called when the keyframes complete.\n\t\t * @type {function():void}\n\t\t * @private\n\t\t */\n\t\tthis._resolvePromise = null;\n\n\t\t/**\n\t\t * The reject function that will be called if the keyframes fail to complete.\n\t\t * @type {function():void}\n\t\t * @private\n\t\t */\n\t\tthis._rejectPromise = null;\n\n\t\t/**\n\t\t * The promise that resolves or rejects at the end of the keyframes.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._endPromise = new Promise((resolve, reject) => {\n\t\t\tthis._resolvePromise = resolve;\n\t\t\tthis._rejectPromise = reject;\n\t\t});\n\n\t\tthis.addModifiedState('position');\n\t\tthis.addModifiedState('velocity');\n\t\tthis.addModifiedState('orientation');\n\t\tthis.addModifiedState('angularVelocity');\n\t}\n\n\t/**\n\t * Sets a position keyframe. Use undefined to remove the keyframe.\n\t * @param {number} time\n\t * @param {Vector3 | undefined} position\n\t * @param {string} relativeToEntity\n\t */\n\tsetPositionKeyframe(time, position, relativeToEntity) {\n\t\tif (position !== undefined) {\n\t\t\tconst keyframe = new PositionKeyframe(this.getEntity().getScene());\n\t\t\tkeyframe.time = time;\n\t\t\tkeyframe.position.copy(position);\n\t\t\tkeyframe.relativeTo.setName(relativeToEntity);\n\t\t\tSort.add(keyframe, this._positionKeyframes, isLess);\n\t\t}\n\t\telse {\n\t\t\tconst index = Sort.getIndex(time, this._positionKeyframes, isLessThanTime);\n\t\t\tif (index < this._positionKeyframes.length && time === this._positionKeyframes[index].time) {\n\t\t\t\tthis._positionKeyframes.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets a focus keyframe. Use undefined to remove the keyframe.\n\t * @param {number} time\n\t * @param {string | undefined} focus\n\t */\n\tsetFocusKeyframe(time, focus) {\n\t\tif (focus !== undefined) {\n\t\t\tconst keyframe = new FocusKeyframe(this.getEntity().getScene());\n\t\t\tkeyframe.time = time;\n\t\t\tkeyframe.focus.setName(focus);\n\t\t\tSort.add(keyframe, this._focusKeyframes, isLess);\n\t\t}\n\t\telse {\n\t\t\tconst index = Sort.getIndex(time, this._focusKeyframes, isLessThanTime);\n\t\t\tif (index < this._focusKeyframes.length && time === this._focusKeyframes[index].time) {\n\t\t\t\tthis._focusKeyframes.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets a position keyframe. Use undefined to remove the keyframe.\n\t * @param {number} time\n\t * @param {Vector3 | undefined} up\n\t */\n\tsetUpKeyframe(time, up) {\n\t\tif (up !== undefined) {\n\t\t\tconst keyframe = new UpKeyframe();\n\t\t\tkeyframe.time = time;\n\t\t\tkeyframe.up.copy(up);\n\t\t\tSort.add(keyframe, this._upKeyframes, isLess);\n\t\t}\n\t\telse {\n\t\t\tconst index = Sort.getIndex(time, this._upKeyframes, isLessThanTime);\n\t\t\tif (index < this._upKeyframes.length && time === this._upKeyframes[index].time) {\n\t\t\t\tthis._upKeyframes.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the promise that resolves at the end of the keyframes.\n\t * @returns {Promise<void>}\n\t */\n\tgetEndPromise() {\n\t\treturn this._endPromise;\n\t}\n\n\t/**\n\t * Destroys the controller.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tsuper.__destroy();\n\n\t\tif (this._rejectPromise !== null) {\n\t\t\tthis._rejectPromise();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Get the entity, since it is used a lot.\n\t\tconst entity = this.getEntity();\n\n\t\t// Get the time since the start.\n\t\tlet time = 0;\n\t\tif (isNaN(this._timeOfFirstUpdate)) {\n\t\t\t// Get the parent.\n\t\t\tconst parent = entity.getParent();\n\t\t\tif (parent === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the time and direction of the first update to now the y-axis of the entity, respectively.\n\t\t\tthis._timeOfFirstUpdate = Date.now() / 1000;\n\t\t\tentity.getOrientation().getAxis(this._directionOfFirstUpdate, 1);\n\n\t\t\t// Add an initial position keyframe.\n\t\t\tconst positionKeyframe = new PositionKeyframe(entity.getScene());\n\t\t\tpositionKeyframe.time = 0;\n\t\t\tpositionKeyframe.position.copy(entity.getPosition());\n\t\t\tpositionKeyframe.relativeTo.setName(parent.getName());\n\t\t\tSort.add(positionKeyframe, this._positionKeyframes, isLess);\n\n\t\t\t// Add an initial focus keyframe. The '' focus means use the first frame's direction (set above).\n\t\t\tconst keyframe = new FocusKeyframe(entity.getScene());\n\t\t\tkeyframe.time = 0;\n\t\t\tkeyframe.focus.setName('');\n\t\t\tSort.add(keyframe, this._focusKeyframes, isLess);\n\n\t\t\t// Add an initial up keyframe.\n\t\t\tconst upKeyframe = new UpKeyframe();\n\t\t\tupKeyframe.time = 0;\n\t\t\tentity.getOrientation().getAxis(upKeyframe.up, 2);\n\t\t\tSort.add(upKeyframe, this._upKeyframes, isLess);\n\t\t}\n\t\telse {\n\t\t\ttime = Date.now() / 1000 - this._timeOfFirstUpdate;\n\t\t}\n\n\t\t// Apply the position keyframes.\n\t\tlet doneWithPositionKeyframes = false;\n\t\tconst positionKeyframeIndex = Sort.getIndex(time, this._positionKeyframes, isLessThanTime);\n\t\tif (positionKeyframeIndex > 0 && positionKeyframeIndex < this._positionKeyframes.length) {\n\t\t\t// Get the keyframes.\n\t\t\tconst keyframe0 = this._positionKeyframes[positionKeyframeIndex - 1];\n\t\t\tconst keyframe1 = this._positionKeyframes[positionKeyframeIndex];\n\n\t\t\t// Get the relative-to entities for the corresponding names.\n\t\t\tconst relativeToEntity0 = keyframe0.relativeTo.get();\n\t\t\tconst relativeToEntity1 = keyframe1.relativeTo.get();\n\t\t\tif (relativeToEntity0 !== null && relativeToEntity1 !== null) {\n\t\t\t\t// Get the lerp value.\n\t\t\t\tlet u = (time - keyframe0.time) / (keyframe1.time - keyframe0.time);\n\n\t\t\t\t// Update the parent entity depending on if we're in the first or second half.\n\t\t\t\tlet parentEntity = relativeToEntity0;\n\t\t\t\tif (u >= 0.5) {\n\t\t\t\t\tparentEntity = relativeToEntity1;\n\t\t\t\t}\n\t\t\t\tif (entity.getParent() !== parentEntity) {\n\t\t\t\t\tentity.setParent(parentEntity);\n\t\t\t\t}\n\n\t\t\t\t// Get the positions relative to the appropriate entity.\n\t\t\t\tconst position0 = Vector3.pool.get();\n\t\t\t\tconst position1 = Vector3.pool.get();\n\t\t\t\trelativeToEntity0.getPositionRelativeToEntity(position0, keyframe0.position, relativeToEntity1);\n\t\t\t\trelativeToEntity1.getPositionRelativeToEntity(position1, keyframe1.position, relativeToEntity0);\n\n\t\t\t\t// Get the u lerp value scaled so that is exponential, relating to the radius of the current parent.\n\t\t\t\tlet dist00 = Math.max(0, keyframe0.position.magnitude() - relativeToEntity0.getOcclusionRadius());\n\t\t\t\tlet dist10 = Math.max(0, position1.magnitude() - relativeToEntity0.getOcclusionRadius());\n\t\t\t\tlet dist01 = Math.max(0, position0.magnitude() - relativeToEntity1.getOcclusionRadius());\n\t\t\t\tlet dist11 = Math.max(0, keyframe1.position.magnitude() - relativeToEntity1.getOcclusionRadius());\n\t\t\t\tdist00 = Math.max(dist00, dist10 / 10000); // Make sure they aren't too far different.\n\t\t\t\tdist10 = Math.max(dist10, dist00 / 10000); // Otherwise the smaller distance starts out\n\t\t\t\tdist01 = Math.max(dist01, dist11 / 10000); //   way to slow.\n\t\t\t\tdist11 = Math.max(dist11, dist10 / 10000);\n\t\t\t\tif (dist00 !== dist10 && dist01 !== dist11) {\n\t\t\t\t\tconst u0 = (Math.pow(dist10, u) * Math.pow(dist00, 1 - u) - dist00) / (dist10 - dist00);\n\t\t\t\t\tconst u1 = (Math.pow(dist11, u) * Math.pow(dist01, 1 - u) - dist01) / (dist11 - dist01);\n\t\t\t\t\tu = MathUtils.lerp(u0, u1, u);\n\t\t\t\t}\n\n\t\t\t\t// Adjust the lerp value to ease-in-out.\n\t\t\t\tconst sq = u * u;\n\t\t\t\tu = sq / (2 * (sq - u) + 1);\n\n\t\t\t\t// Get the positions relative to the current parent.\n\t\t\t\trelativeToEntity0.getPositionRelativeToEntity(position0, keyframe0.position, parentEntity);\n\t\t\t\trelativeToEntity1.getPositionRelativeToEntity(position1, keyframe1.position, parentEntity);\n\n\t\t\t\t// Set the position.\n\t\t\t\tconst newPosition = Vector3.pool.get();\n\t\t\t\tif (relativeToEntity0 === relativeToEntity1) {\n\t\t\t\t\tnewPosition.slerp(position0, position1, u);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewPosition.lerp(position0, position1, u);\n\t\t\t\t}\n\t\t\t\tentity.setPosition(newPosition);\n\t\t\t\tVector3.pool.release(newPosition);\n\t\t\t\tVector3.pool.release(position0);\n\t\t\t\tVector3.pool.release(position1);\n\t\t\t}\n\t\t}\n\t\t// Flag that we're done with position keyframes.\n\t\telse if (positionKeyframeIndex === this._positionKeyframes.length) {\n\t\t\t// Get the last keyframe.\n\t\t\tconst keyframe = this._positionKeyframes[this._positionKeyframes.length - 1];\n\n\t\t\t// Get the focus entity.\n\t\t\tconst relativeToEntity = keyframe.relativeTo.get();\n\n\t\t\t// Update the parent entity depending on if we're in the first or second half.\n\t\t\tif (entity.getParent() !== relativeToEntity) {\n\t\t\t\tentity.setParent(relativeToEntity);\n\t\t\t}\n\n\t\t\t// Set the position.\n\t\t\tentity.setPosition(keyframe.position);\n\n\t\t\t// Flag that we're done with position keyframes.\n\t\t\tdoneWithPositionKeyframes = true;\n\t\t}\n\n\t\t// Set the forward vector by default to the current parent.\n\t\tconst forward = Vector3.pool.get();\n\t\tforward.setMagnitude(entity.getPosition(), -1);\n\n\t\t// Set the up vector by default to the current up.\n\t\tconst up = Vector3.pool.get();\n\t\tentity.getOrientation().getAxis(up, 2);\n\n\t\t// Apply the focus keyframes. Apply the result to the forward vector if valid.\n\t\tlet doneWithFocusKeyframes = false;\n\t\tconst focusKeyframeIndex = Sort.getIndex(time, this._focusKeyframes, isLessThanTime);\n\t\tif (focusKeyframeIndex > 0 && focusKeyframeIndex < this._focusKeyframes.length) {\n\t\t\t// Get the keyframes.\n\t\t\tconst keyframe0 = this._focusKeyframes[focusKeyframeIndex - 1];\n\t\t\tconst keyframe1 = this._focusKeyframes[focusKeyframeIndex];\n\n\t\t\t// Get the focus entities for the corresponding names.\n\t\t\tconst focusEntity0 = keyframe0.focus.get();\n\t\t\tconst focusEntity1 = keyframe1.focus.get();\n\t\t\tconst parentEntity = entity.getParent();\n\n\t\t\tif ((keyframe0.focus.getName() === '' || focusEntity0 !== null)\n\t\t\t\t&& (keyframe1.focus.getName() === '' || focusEntity1 !== null)\n\t\t\t\t&& parentEntity !== null) {\n\t\t\t\t// Get the u lerp value.\n\t\t\t\tlet u = (time - keyframe0.time) / (keyframe1.time - keyframe0.time);\n\n\t\t\t\t// Adjust the lerp value to ease-in-out.\n\t\t\t\tconst sq = u * u;\n\t\t\t\tu = sq / (2 * (sq - u) + 1);\n\n\t\t\t\t// Get the two focus directions.\n\t\t\t\tconst direction0 = Vector3.pool.get();\n\t\t\t\tconst direction1 = Vector3.pool.get();\n\t\t\t\tif (keyframe0.focus.getName() !== '') {\n\t\t\t\t\tparentEntity.getPositionRelativeToEntity(direction0, entity.getPosition(), focusEntity0);\n\t\t\t\t\tdirection0.setMagnitude(direction0, -1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdirection0.copy(this._directionOfFirstUpdate);\n\t\t\t\t}\n\t\t\t\tif (keyframe1.focus.getName() !== '') {\n\t\t\t\t\tparentEntity.getPositionRelativeToEntity(direction1, entity.getPosition(), focusEntity1);\n\t\t\t\t\tdirection1.setMagnitude(direction1, -1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdirection1.copy(this._directionOfFirstUpdate);\n\t\t\t\t}\n\t\t\t\tforward.slerp(direction0, direction1, u);\n\t\t\t\tVector3.pool.release(direction0);\n\t\t\t\tVector3.pool.release(direction1);\n\t\t\t}\n\t\t}\n\t\telse if (focusKeyframeIndex === this._focusKeyframes.length) {\n\t\t\t// Get the last keyframe.\n\t\t\tconst keyframe = this._focusKeyframes[this._focusKeyframes.length - 1];\n\n\t\t\t// Get the focus entity.\n\t\t\tconst focusEntity = keyframe.focus.get();\n\t\t\tconst parentEntity = entity.getParent();\n\n\t\t\t// Set the forward vector.\n\t\t\tif ((keyframe.focus.getName() === '' || focusEntity !== null) && parentEntity !== null) {\n\t\t\t\tparentEntity.getPositionRelativeToEntity(forward, entity.getPosition(), focusEntity);\n\t\t\t\tforward.setMagnitude(forward, -1);\n\t\t\t}\n\n\t\t\t// Flag that we're done with focus keyframes.\n\t\t\tdoneWithFocusKeyframes = true;\n\t\t}\n\t\telse {\n\t\t\t// Get te first keyframe.\n\t\t\tconst keyframe = this._focusKeyframes[0];\n\n\t\t\t// Get the focus entity.\n\t\t\tconst focusEntity = keyframe.focus.get();\n\t\t\tconst parentEntity = entity.getParent();\n\n\t\t\t// Set the forward vector.\n\t\t\tif ((keyframe.focus.getName() === '' || focusEntity !== null) && parentEntity !== null) {\n\t\t\t\tif (keyframe.focus.getName() !== '') {\n\t\t\t\t\tparentEntity.getPositionRelativeToEntity(forward, entity.getPosition(), focusEntity);\n\t\t\t\t\tforward.setMagnitude(forward, -1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tforward.copy(this._directionOfFirstUpdate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Apply the focus keyframes. Apply the result to the forward vector if valid.\n\t\tlet doneWithUpKeyframes = false;\n\t\tconst upKeyframeIndex = Sort.getIndex(time, this._upKeyframes, isLessThanTime);\n\t\tif (upKeyframeIndex > 0 && upKeyframeIndex < this._upKeyframes.length) {\n\t\t\t// Get the keyframes.\n\t\t\tconst keyframe0 = this._upKeyframes[upKeyframeIndex - 1];\n\t\t\tconst keyframe1 = this._upKeyframes[upKeyframeIndex];\n\n\t\t\t// Get the u lerp value.\n\t\t\tlet u = (time - keyframe0.time) / (keyframe1.time - keyframe0.time);\n\n\t\t\t// Adjust the lerp value to ease-in-out.\n\t\t\tconst sq = u * u;\n\t\t\tu = sq / (2 * (sq - u) + 1);\n\n\t\t\t// Get the two up directions.\n\t\t\tup.slerp(keyframe0.up, keyframe1.up, u);\n\t\t}\n\t\telse if (upKeyframeIndex === this._upKeyframes.length) {\n\t\t\t// Get the last keyframe.\n\t\t\tconst keyframe = this._upKeyframes[this._upKeyframes.length - 1];\n\n\t\t\t// Set the up vector.\n\t\t\tup.copy(keyframe.up);\n\n\t\t\t// Flag that we're done with up keyframes.\n\t\t\tdoneWithUpKeyframes = true;\n\t\t}\n\n\t\t// Set the orientation from the forward and up vectors.\n\t\tconst newOrientation = Quaternion.pool.get();\n\t\tup.setNormalTo(forward, up);\n\t\tnewOrientation.setFromAxes(undefined, forward, up);\n\t\tentity.setOrientation(newOrientation);\n\t\tQuaternion.pool.release(newOrientation);\n\t\tVector3.pool.release(forward);\n\n\t\t// If done with all of the keyframes, call the end promise.\n\t\tif (doneWithPositionKeyframes && doneWithFocusKeyframes && doneWithUpKeyframes) {\n\t\t\tthis._rejectPromise = null;\n\t\t\tthis._resolvePromise();\n\t\t}\n\t}\n}\n\nclass Keyframe {\n\tconstructor() {\n\t\t/**\n\t\t * The time for the keyframe.\n\t\t * @type {number}\n\t\t */\n\t\tthis.time = NaN;\n\t}\n}\n\n/**\n * A position keyframe.\n */\nclass PositionKeyframe extends Keyframe {\n\t/** @param {Scene} scene */\n\tconstructor(scene) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The position for the keyframe.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position = new Vector3();\n\n\t\t/**\n\t\t * The reference to the relative-to entity.\n\t\t * @type {EntityRef}\n\t\t */\n\t\tthis.relativeTo = new EntityRef(scene);\n\t}\n}\n\n/**\n * A focus keyframe.\n */\nclass FocusKeyframe extends Keyframe {\n\t/** @param {Scene} scene */\n\tconstructor(scene) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The reference to the focus entity.\n\t\t * @type {EntityRef}\n\t\t */\n\t\tthis.focus = new EntityRef(scene);\n\t}\n}\n\n/**\n * An up keyframe.\n */\nclass UpKeyframe extends Keyframe {\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * The up for the keyframe.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.up = new Vector3();\n\t}\n}\n\n/**\n * A helper function for the keyframe sorting.\n * @param {Keyframe} a\n * @param {Keyframe} b\n */\nfunction isLess(a, b) {\n\treturn a.time < b.time;\n}\n\n/**\n * A helper function for the keyframe sorting.\n * @param {Keyframe} a\n * @param {number} time\n */\nfunction isLessThanTime(a, time) {\n\treturn a.time < time;\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tInterval,\n\tMathUtils,\n\tOrbitalElements,\n\tSort,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller animates the position and orientation of an entity via orbital elements.\n */\nexport class OrbitalElementsController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The position keyframes.\n\t\t * @type {OrbitalElementsKeyFrame[]}\n\t\t * @private\n\t\t */\n\t\tthis._orbitalElementsKeyFrames = [];\n\n\t\t// Set the coverage to nothing, since there are no orbital elements.\n\t\tthis.setCoverage(new Interval(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY));\n\n\t\t// Modifies the position.\n\t\tthis.addModifiedState('position');\n\t\tthis.addModifiedState('velocity');\n\t}\n\n\t/**\n\t * Gets the number of orbital elements.\n\t * @returns {number}\n\t */\n\tgetNumOrbitalElements() {\n\t\treturn this._orbitalElementsKeyFrames.length;\n\t}\n\n\t/**\n\t * Gets an orbital element at the index.\n\t * @param {number} index\n\t * @returns {OrbitalElementsKeyFrame}\n\t */\n\tgetOrbitalElements(index) {\n\t\treturn this._orbitalElementsKeyFrames[index];\n\t}\n\n\t/**\n\t * Adds an orbital element.\n\t * @param {number} time\n\t * @param {OrbitalElements} orbitalElements\n\t */\n\taddOrbitalElements(time, orbitalElements) {\n\t\tSort.add({ time: time, oe: orbitalElements }, this._orbitalElementsKeyFrames, isLessAdd, isEqualAdd);\n\t\tthis._updateCoverage();\n\t}\n\n\t/**\n\t * Removes an orbital element at the index.\n\t * @param {number} index\n\t */\n\tremoveOrbitalElements(index) {\n\t\tif (index < 0 || this._orbitalElementsKeyFrames.length <= index) {\n\t\t\tthrow new Error(`Invalid index for ${this}.removeOrbitalElements`);\n\t\t}\n\t\tthis._orbitalElementsKeyFrames.splice(index, 1);\n\t\tthis._updateCoverage();\n\t}\n\n\t/**\n\t * Sets the position to the keyframed position at the given time.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tthis._getPositionAtTime(position, time);\n\t}\n\n\t/**\n\t * Sets the velocity to the keyframed velocity at the given time.\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, time) {\n\t\tthis._getVelocityAtTime(velocity, time);\n\t}\n\n\t/**\n\t * Updates the position and orientation from the keyframes.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst engine = this.getEntity().getScene().getEngine();\n\t\tconst time = engine.getTime();\n\t\tif (this._getPositionAtTime(_tempPosition, time)) {\n\t\t\tthis.getEntity().setPosition(_tempPosition);\n\t\t}\n\t\tif (this._getVelocityAtTime(_tempVelocity, time)) {\n\t\t\tthis.getEntity().setVelocity(_tempVelocity);\n\t\t}\n\t}\n\n\t/**\n\t * Sets outPosition to the position at the given time. Returns true if they were set.\n\t * @param {Vector3} outPosition\n\t * @param {number} time\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_getPositionAtTime(outPosition, time) {\n\t\tconst index = Sort.getIndex(time, this._orbitalElementsKeyFrames, isLess);\n\t\tconst keyFrame0 = this._orbitalElementsKeyFrames[Math.max(index - 1, 0)];\n\t\tconst keyFrame1 = this._orbitalElementsKeyFrames[Math.min(index, this._orbitalElementsKeyFrames.length - 1)];\n\t\tconst position0 = Vector3.pool.get();\n\t\tconst position1 = Vector3.pool.get();\n\t\tkeyFrame0.oe.project(position0, _tempVelocity, time);\n\t\tkeyFrame1.oe.project(position1, _tempVelocity, time);\n\t\tconst u = MathUtils.clamp01(keyFrame1.time !== keyFrame0.time ? ((time - keyFrame0.time) / (keyFrame1.time - keyFrame0.time)) : 0);\n\t\toutPosition.slerp(position0, position1, u);\n\t\tVector3.pool.release(position0);\n\t\tVector3.pool.release(position1);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Sets outVelocity to the velocity at the given time. Returns true if they were set.\n\t * @param {Vector3} outVelocity\n\t * @param {number} time\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_getVelocityAtTime(outVelocity, time) {\n\t\tconst index = Sort.getIndex(time, this._orbitalElementsKeyFrames, isLess);\n\t\tconst keyFrame0 = this._orbitalElementsKeyFrames[Math.max(index - 1, 0)];\n\t\tconst keyFrame1 = this._orbitalElementsKeyFrames[Math.min(index, this._orbitalElementsKeyFrames.length - 1)];\n\t\tconst velocity0 = Vector3.pool.get();\n\t\tconst velocity1 = Vector3.pool.get();\n\t\tkeyFrame0.oe.project(_tempPosition, velocity0, time);\n\t\tkeyFrame1.oe.project(_tempPosition, velocity1, time);\n\t\tconst u = MathUtils.clamp01(keyFrame1.time !== keyFrame0.time ? ((time - keyFrame0.time) / (keyFrame1.time - keyFrame0.time)) : 0);\n\t\toutVelocity.slerp(velocity0, velocity1, u);\n\t\tVector3.pool.release(velocity0);\n\t\tVector3.pool.release(velocity1);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Updates the coverage.\n\t * @private\n\t */\n\t_updateCoverage() {\n\t\tconst coverage = new Interval(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\t\tif (this._orbitalElementsKeyFrames.length > 1) {\n\t\t\tcoverage.min = Math.min(coverage.min, this._orbitalElementsKeyFrames[0].time);\n\t\t\tcoverage.max = Math.max(coverage.max, this._orbitalElementsKeyFrames[this._orbitalElementsKeyFrames.length - 1].time);\n\t\t}\n\t\tthis.setCoverage(coverage);\n\t}\n}\n\n/**\n * Orbital elements key frame as a time-orbital elements pair.\n */\nexport class OrbitalElementsKeyFrame {\n\tconstructor() {\n\t\t/**\n\t\t * The time for the key frame.\n\t\t * @type {number}\n\t\t */\n\t\tthis.time = 0;\n\n\t\t/**\n\t\t * The orbital elements.\n\t\t * @type {OrbitalElements}\n\t\t */\n\t\tthis.oe = new OrbitalElements();\n\t}\n};\n\n/**\n * @callback CompareAdd\n * @param {OrbitalElementsKeyFrame} a\n * @param {OrbitalElementsKeyFrame} b\n * @returns {boolean}\n */\n\n/**\n * @callback Compare\n * @param {OrbitalElementsKeyFrame} a\n * @param {number} b\n * @returns {boolean}\n */\n\n/**\n * A helper function for sorting.\n * @type {CompareAdd}\n */\nconst isLessAdd = (a, b) => (a.time < b.time);\n\n/**\n * A helper function for sorting.\n * @type {Compare}\n */\nconst isLess = (a, time) => (a.time < time);\n\n/**\n * A helper function for sorting.\n * @type {CompareAdd}\n */\nconst isEqualAdd = (a, b) => (a.time === b.time);\n\n/**\n * Helper vector for calculations.\n * @type {Vector3}\n */\nconst _tempPosition = new Vector3();\n\n/**\n * Helper vector for calculations.\n * @type {Vector3}\n */\nconst _tempVelocity = new Vector3();\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tGeometry,\n\tInterval,\n\tSpheroidComponent,\n\tVector3\n} from '../../internal';\n\n/**\n * A pick controller. It lets the user pick a location on a given entity.\n */\nexport class PickController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The entity to be picked.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._pickedEntity = null;\n\n\t\t/**\n\t\t * The callback to be called when the user picks a location on the entity.\n\t\t * @type {(position: Vector3) => void}\n\t\t * @private\n\t\t */\n\t\tthis._callback = null;\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._triggerOnHover = false;\n\n\t\t/**\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._pickedPosition = new Vector3();\n\t\tthis._pickedPosition.freeze();\n\t}\n\n\t/**\n\t * Gets the entity to be picked.\n\t * @returns {Entity}\n\t */\n\tgetPickedEntity() {\n\t\treturn this._pickedEntity;\n\t}\n\n\t/**\n\t * Sets the entity to be picked.\n\t * @param {Entity} entity\n\t */\n\tsetPickedEntity(entity) {\n\t\tthis._pickedEntity = entity;\n\t}\n\n\t/**\n\t * Returns the callback to be called when the user picks a position on the entity. The position is in the entity-frame of the picked entity.\n\t * @returns {(position: Vector3) => void}\n\t */\n\tgetCallback() {\n\t\treturn this._callback;\n\t}\n\n\t/**\n\t * Sets the callback to be called when the user picks a position on the entity. The position is in the entity-frame of the picked entity.\n\t * @param {(position: Vector3) => void} callback\n\t */\n\tsetCallback(callback) {\n\t\tthis._callback = callback;\n\t}\n\n\t/**\n\t * Gets whether the callback is triggered when hovering or just selecting.\n\t * @returns {boolean}\n\t */\n\tgetTriggerOnHover() {\n\t\treturn this._triggerOnHover;\n\t}\n\n\t/**\n\t * Sets whether the callback is triggered when hovering or just selecting.\n\t * @param {boolean} triggerOnHover\n\t */\n\tsetTriggerOnHover(triggerOnHover) {\n\t\tthis._triggerOnHover = triggerOnHover;\n\t}\n\n\t/**\n\t * Gets the last picked position. The position is in the entity-frame of the picked entity.\n\t * @returns {Vector3}\n\t */\n\tgetPickedPosition() {\n\t\treturn this._pickedPosition;\n\t}\n\n\t/**\n\t * Takes input and calls the callback if there is any selection.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\n\t\tif ((input.isSelected() || this._triggerOnHover) && this._callback !== null && this._pickedEntity !== null) {\n\t\t\tconst viewport = input.getActiveViewport();\n\t\t\tif (viewport !== null) {\n\t\t\t\tconst camera = viewport.getCamera();\n\t\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\t\tconst pickedPosition = Vector3.pool.get();\n\t\t\t\t\t// Get the picked position in normal space.\n\t\t\t\t\tviewport.getNormalSpacePositionFromPixelSpacePosition(pickedPosition, input.getCursorPosition());\n\n\t\t\t\t\t// Get the picked position in camera space.\n\t\t\t\t\tcamera.getCameraSpacePositionFromNormalSpacePosition(pickedPosition, pickedPosition);\n\n\t\t\t\t\t// Turn it into a ray of length 1, going from the camera.\n\t\t\t\t\tpickedPosition.normalize(pickedPosition);\n\n\t\t\t\t\t// If there is a spheroid, we want to intersect with that. If not, we'll just use a sphere.\n\t\t\t\t\tconst interval = Interval.pool.get();\n\t\t\t\t\tconst spheroid = /** @type {SpheroidComponent} */(this.getEntity().getParent().getComponentByType('spheroid'));\n\t\t\t\t\tif (spheroid !== null) {\n\t\t\t\t\t\t// We scale up the ray and entity position and rotate them into the picked entity's orientation frame.\n\t\t\t\t\t\tconst ratio = spheroid.getEquatorialRadius() / spheroid.getPolarRadius();\n\t\t\t\t\t\tpickedPosition.rotateInverse(this._pickedEntity.getOrientation(), pickedPosition);\n\t\t\t\t\t\tpickedPosition.z *= ratio;\n\t\t\t\t\t\tconst entityPosition = Vector3.pool.get();\n\t\t\t\t\t\tentityPosition.copy(this._pickedEntity.getCameraSpacePosition(camera));\n\t\t\t\t\t\tentityPosition.rotateInverse(this._pickedEntity.getOrientation(), entityPosition);\n\t\t\t\t\t\tentityPosition.z *= ratio;\n\t\t\t\t\t\tGeometry.getLineSphereIntersectionWithLineStartAtOrigin(interval, pickedPosition, entityPosition, spheroid.getEquatorialRadius());\n\t\t\t\t\t\tpickedPosition.z /= ratio;\n\t\t\t\t\t\tpickedPosition.rotate(this._pickedEntity.getOrientation(), pickedPosition);\n\t\t\t\t\t\tVector3.pool.release(entityPosition);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst entityPosition = this._pickedEntity.getCameraSpacePosition(camera);\n\t\t\t\t\t\tGeometry.getLineSphereIntersectionWithLineStartAtOrigin(interval, pickedPosition, entityPosition, this._pickedEntity.getOcclusionRadius());\n\t\t\t\t\t}\n\t\t\t\t\tif (!Number.isNaN(interval.min)) {\n\t\t\t\t\t\t// Convert the picked position from camera space to entity space.\n\t\t\t\t\t\tthis._pickedPosition.thaw();\n\t\t\t\t\t\tthis._pickedPosition.mult(pickedPosition, interval.min);\n\t\t\t\t\t\tcamera.getEntity().getPositionRelativeToEntity(this._pickedPosition, this._pickedPosition, this._pickedEntity);\n\t\t\t\t\t\tthis._pickedPosition.freeze();\n\n\t\t\t\t\t\t// Call the callback.\n\t\t\t\t\t\tthis.getEntity().getScene().getEngine().addCallback(this._callback.bind(undefined, this._pickedPosition), false);\n\t\t\t\t\t}\n\t\t\t\t\tInterval.pool.release(interval);\n\t\t\t\t\tVector3.pool.release(pickedPosition);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tMathUtils,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * A roll camera controller.\n */\nexport class RollController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The sensitivity for rolling.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._rollSensitivity = 0.01;\n\n\t\t/**\n\t\t * The smoothness of the rolling. Zero means no smoothness.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._rollSmoothness = 0.8;\n\n\t\t/**\n\t\t * The current value applied every frame to the roll axis rotation.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._rollAngleSmoothedValue = 0.0;\n\n\t\t// Let the base controller know that this changes the orientation.\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Gets the roll sensitivity. Defaults to 0.01.\n\t * @returns {number}\n\t */\n\tgetRollSensitivity() {\n\t\treturn this._rollSensitivity;\n\t}\n\n\t/**\n\t * Sets the roll sensitivity.\n\t * @param {number} rollSensitivity\n\t */\n\tsetRollSensitivity(rollSensitivity) {\n\t\tthis._rollSensitivity = rollSensitivity;\n\t}\n\n\t/**\n\t * Gets the roll smoothness. Defaults to 0.8.\n\t * @returns {number}\n\t */\n\tgetRollSmoothness() {\n\t\treturn this._rollSmoothness;\n\t}\n\n\t/**\n\t * Sets the roll smoothness, between 0 and 1.\n\t * @param {number} rollSmoothness\n\t */\n\tsetRollSmoothness(rollSmoothness) {\n\t\tthis._rollSmoothness = rollSmoothness;\n\t}\n\n\t/**\n\t * Updates the entity's position and orientation.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Set the position and orientation if they have never been set before.\n\t\tif (this.getEntity().getOrientation().isNaN()) {\n\t\t\tthis.getEntity().setOrientation(Quaternion.Identity);\n\t\t}\n\n\t\t// Get the azimuth, elevation, and roll from input.\n\t\tlet rollAngle = 0;\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\t\tconst viewport = input.getActiveViewport();\n\t\tif (viewport !== null) {\n\t\t\tconst camera = viewport.getCamera();\n\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\tlet rollMultiplier = 1;\n\t\t\t\tif (input.isKeyPressed('x')) {\n\t\t\t\t\trollMultiplier = 0.05;\n\t\t\t\t}\n\t\t\t\tif (input.isShiftPressed()) {\n\t\t\t\t\trollMultiplier = 5;\n\t\t\t\t}\n\n\t\t\t\t// Do touch rotate movement.\n\t\t\t\tconst rotatedOffset = input.getRotatedOffset();\n\t\t\t\tif (rotatedOffset !== 0) {\n\t\t\t\t\trollAngle += MathUtils.clamp(rotatedOffset * this._rollSensitivity * rollMultiplier, -0.1, +0.1);\n\t\t\t\t}\n\n\t\t\t\t// Add key movement.\n\t\t\t\tif (input.isKeyPressed('c')) {\n\t\t\t\t\trollAngle += this._rollSensitivity * rollMultiplier;\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('z')) {\n\t\t\t\t\trollAngle -= this._rollSensitivity * rollMultiplier;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Apply smoothing.\n\t\tthis._rollAngleSmoothedValue = MathUtils.lerp(rollAngle, this._rollAngleSmoothedValue, this._rollSmoothness);\n\t\tif (Math.abs(this._rollAngleSmoothedValue) < 0.0001) {\n\t\t\tthis._rollAngleSmoothedValue = 0;\n\t\t}\n\n\t\t// Apply the roll.\n\t\tif (this._rollAngleSmoothedValue !== 0) {\n\t\t\t// Rotate the orientation by the forward (y) axis.\n\t\t\tconst newOrientation = Quaternion.pool.get();\n\t\t\tconst rotation = Quaternion.pool.get();\n\t\t\trotation.setFromAxisAngle(Vector3.YAxis, this._rollAngleSmoothedValue);\n\t\t\tnewOrientation.mult(this.getEntity().getOrientation(), rotation);\n\t\t\tthis.getEntity().setOrientation(newOrientation);\n\t\t\tQuaternion.pool.release(newOrientation);\n\t\t\tQuaternion.pool.release(rotation);\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tEntityRef,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/** A controller that rotates the position and orientation by the parent's orientation.\n *  Great for objects that are connected to their parents or landers.\n *  It needs to added as the last controller to work. */\nexport class RotateByEntityOrientationController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The entity whose orientation will be used.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._entityRef = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * A flag that determines whether the controller is rotating the position of the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._rotatingPosition = true;\n\n\t\t/**\n\t\t * A flag that determines whether the controller is rotating the orientation of the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._rotatingOrientation = true;\n\n\t\t// Let the base controller know that this changes the position and orientation.\n\t\tthis.addModifiedState('position');\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Sets the entity whose orientation will be used. If the name is '', the current parent will be used.\n\t * @param {string} name\n\t */\n\tsetEntityForOrientation(name) {\n\t\t// Remove the dependency on the previous entity's orientation.\n\t\tif (this._entityRef.getName() !== '') {\n\t\t\tthis.addDependentState(this._entityRef.getName(), 'orientation');\n\t\t}\n\n\t\t// Set the entity reference.\n\t\tthis._entityRef.setName(name);\n\n\t\t// Add the dependency on the new entity's orientation.\n\t\tthis.addDependentState(name, 'orientation');\n\t}\n\n\t/**\n\t * Returns whether the controller is rotating the position of the entity. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRotatingPosition() {\n\t\treturn this._rotatingPosition;\n\t}\n\n\t/**\n\t * Sets whether the controller is rotating the position of the entity.\n\t * @param {boolean} rotatingPosition\n\t */\n\tsetRotatingPosition(rotatingPosition) {\n\t\tthis._rotatingPosition = rotatingPosition;\n\t\tif (rotatingPosition) {\n\t\t\tthis.addModifiedState('position');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('position');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the controller is rotating the orientation of the entity. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRotatingOrientation() {\n\t\treturn this._rotatingOrientation;\n\t}\n\n\t/**\n\t * Sets whether the controller is rotating the orientation of the entity.\n\t * @param {boolean} rotatingOrientation\n\t */\n\tsetRotatingOrientation(rotatingOrientation) {\n\t\tthis._rotatingOrientation = rotatingOrientation;\n\t\tif (rotatingOrientation) {\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('orientation');\n\t\t}\n\t}\n\n\t/**\n\t * Updates the position to be rotated by the parent orientation.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tif (this._rotatingPosition) {\n\t\t\tconst entity = this._entityRef.getName() !== '' ? this._entityRef.get() : this.getEntity().getScene().getEntity(this.getEntity().getParentAtTime(time));\n\t\t\tif (entity !== null) {\n\t\t\t\tconst entityOrientation = Quaternion.pool.get();\n\t\t\t\tentity.getOrientationAtTime(entityOrientation, time);\n\t\t\t\tposition.rotate(entityOrientation, position);\n\t\t\t\tQuaternion.pool.release(entityOrientation);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the velocity to be rotated by the parent orientation.\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, time) {\n\t\tif (this._rotatingPosition) {\n\t\t\tconst entity = this._entityRef.getName() !== '' ? this._entityRef.get() : this.getEntity().getScene().getEntity(this.getEntity().getParentAtTime(time));\n\t\t\tif (entity !== null) {\n\t\t\t\tconst entityOrientation = Quaternion.pool.get();\n\t\t\t\tentity.getOrientationAtTime(entityOrientation, time);\n\t\t\t\tvelocity.rotate(entityOrientation, velocity);\n\t\t\t\tQuaternion.pool.release(entityOrientation);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * If the orientation is fixed, updates the orientation to the fixed orientation.\n\t * @param {Quaternion} orientation\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tif (this._rotatingOrientation) {\n\t\t\tconst entity = this._entityRef.getName() !== '' ? this._entityRef.get() : this.getEntity().getScene().getEntity(this.getEntity().getParentAtTime(time));\n\t\t\tif (entity !== null) {\n\t\t\t\tconst entityOrientation = Quaternion.pool.get();\n\t\t\t\tentity.getOrientationAtTime(entityOrientation, time);\n\t\t\t\torientation.mult(entityOrientation, orientation);\n\t\t\t\tQuaternion.pool.release(entityOrientation);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst entity = this._entityRef.getName() !== '' ? this._entityRef.get() : this.getEntity().getParent();\n\t\tif (entity !== null) {\n\t\t\tif (this._rotatingPosition) {\n\t\t\t\tconst position = Vector3.pool.get();\n\t\t\t\tposition.rotate(entity.getOrientation(), this.getEntity().getPosition());\n\t\t\t\tthis.getEntity().setPosition(position);\n\t\t\t\tVector3.pool.release(position);\n\t\t\t}\n\t\t\tif (this._rotatingOrientation) {\n\t\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\t\torientation.mult(entity.getOrientation(), this.getEntity().getOrientation());\n\t\t\t\tthis.getEntity().setOrientation(orientation);\n\t\t\t\tQuaternion.pool.release(orientation);\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller that rotates an entity's position and/or orientation by a rotation quaternion.\n */\nexport class RotateController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The rotation.\n\t\t * @type {Quaternion}\n\t\t * @private\n\t\t */\n\t\tthis._rotation = new Quaternion();\n\t\tthis._rotation.freeze();\n\n\t\t/**\n\t\t * A flag that determines whether the controller is rotating the position of the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._rotatingPosition = true;\n\n\t\t/**\n\t\t * A flag that determines whether the controller is rotating the orientation of the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._rotatingOrientation = true;\n\n\t\t// Let the base controller know that this changes the position and orientation.\n\t\tthis.addModifiedState('position');\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Gets the rotation. Defaults to Quaterion(1, 0, 0, 0).\n\t * @returns {Quaternion}\n\t */\n\tgetRotation() {\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Sets the rotation.\n\t * @param {Quaternion} rotation\n\t */\n\tsetRotation(rotation) {\n\t\tthis._rotation.thaw();\n\t\tthis._rotation.copy(rotation);\n\t\tthis._rotation.freeze();\n\t}\n\n\t/**\n\t * Returns whether the controller is rotating the position of the entity. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRotatingPosition() {\n\t\treturn this._rotatingPosition;\n\t}\n\n\t/**\n\t * Sets whether the controller is rotating the position of the entity.\n\t * @param {boolean} rotatingPosition\n\t */\n\tsetRotatingPosition(rotatingPosition) {\n\t\tthis._rotatingPosition = rotatingPosition;\n\t\tif (rotatingPosition) {\n\t\t\tthis.addModifiedState('position');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('position');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the controller is rotating the orientation of the entity. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisRotatingOrientation() {\n\t\treturn this._rotatingOrientation;\n\t}\n\n\t/**\n\t * Sets whether the controller is rotating the orientation of the entity.\n\t * @param {boolean} rotatingOrientation\n\t */\n\tsetRotatingOrientation(rotatingOrientation) {\n\t\tthis._rotatingOrientation = rotatingOrientation;\n\t\tif (rotatingOrientation) {\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('orientation');\n\t\t}\n\t}\n\n\t/**\n\t * Updates a position for the given time.\n\t * @param {Vector3} position\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, _time) {\n\t\tif (this._rotatingPosition) {\n\t\t\tposition.rotate(this._rotation, position);\n\t\t}\n\t}\n\n\t/**\n\t * Updates a velocity for the given time.\n\t * @param {Vector3} velocity\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, _time) {\n\t\tif (this._rotatingPosition) {\n\t\t\tvelocity.rotate(this._rotation, velocity);\n\t\t}\n\t}\n\n\t/**\n\t * Updates given orientation for the given time.\n\t * @param {Quaternion} orientation - The orientation to update.\n\t * @param {number} _time - The time to check.\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, _time) {\n\t\tif (this._rotatingOrientation) {\n\t\t\torientation.mult(this._rotation, orientation);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tif (this._rotatingPosition) {\n\t\t\tconst newPosition = Vector3.pool.get();\n\t\t\tnewPosition.rotate(this._rotation, this.getEntity().getPosition());\n\t\t\tthis.getEntity().setPosition(newPosition);\n\t\t\tVector3.pool.release(newPosition);\n\t\t}\n\t\tif (this._rotatingOrientation) {\n\t\t\tconst newOrientation = Quaternion.pool.get();\n\t\t\tnewOrientation.mult(this._rotation, this.getEntity().getOrientation());\n\t\t\tthis.getEntity().setOrientation(newOrientation);\n\t\t\tQuaternion.pool.release(newOrientation);\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller that scales the position of the entity.\n */\nexport class ScaleController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t// The amount to scale the position.\n\t\tthis._scale = 1.0;\n\n\t\t// Let the base controller know that this changes the position.\n\t\tthis.addModifiedState('position');\n\t}\n\n\t/**\n\t * Gets the scale factor. Defaults to 1.\n\t * @return {number}\n\t */\n\tgetScale() {\n\t\treturn this._scale;\n\t}\n\n\t/**\n\t * Sets the scale factor.\n\t * @param {number} scale\n\t */\n\tsetScale(scale) {\n\t\tthis._scale = scale;\n\t}\n\n\t/**\n\t * Updates the position based on time.\n\t * @param {Vector3} position\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, _time) {\n\t\tposition.mult(position, this._scale);\n\t}\n\n\t/**\n\t * Updates the velocity based on time.\n\t * @param {Vector3} velocity\n\t * @param {number} _time\n\t * @override\n\t * @internal\n\t */\n\t__updateVelocityAtTime(velocity, _time) {\n\t\tvelocity.mult(velocity, this._scale);\n\t}\n\n\t/**\n\t * Takes input and updates the target distance. Then updates the entity's position.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst newPosition = Vector3.pool.get();\n\t\tnewPosition.mult(this.getEntity().getPosition(), this._scale);\n\t\tthis.getEntity().setPosition(newPosition);\n\t\tVector3.pool.release(newPosition);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tLabelComponent,\n\tVector2,\n\tVector3\n} from '../../internal';\n\n/** A selection controller. */\nexport class SelectController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * @type {(entity: Entity) => any}\n\t\t * @private\n\t\t */\n\t\tthis._callback = null;\n\t}\n\n\t/**\n\t * Returns the callback to be called when the user selects an entity.\n\t * @returns {(entity: Entity) => any}\n\t */\n\tgetCallback() {\n\t\treturn this._callback;\n\t}\n\n\t/**\n\t * Sets the callback to be called when the user selects an entity. If the user selects but does not select an entity, the param passed is null.\n\t * @param {(entity: Entity) => any} callback\n\t */\n\tsetCallback(callback) {\n\t\tthis._callback = callback;\n\t}\n\n\t/**\n\t * Takes input and calls the callback if there is any selection.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\n\t\tif (input.isSelected() && this._callback !== null) {\n\t\t\tconst viewport = input.getActiveViewport();\n\t\t\tif (viewport !== null) {\n\t\t\t\tconst camera = viewport.getCamera();\n\t\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\t\t// Get the selected position in normal space.\n\t\t\t\t\tconst entityPosition = Vector3.pool.get();\n\t\t\t\t\tviewport.getNormalSpacePositionFromPixelSpacePosition(entityPosition, input.getSelectedPosition());\n\n\t\t\t\t\t// Search every entity for label that contains the normal-space position. Choose the nearest one.\n\t\t\t\t\tlet intersectedEntity = null;\n\t\t\t\t\tlet intersectedEntityDistance = 0;\n\t\t\t\t\tconst entityPosition2D = Vector2.pool.get();\n\t\t\t\t\tentityPosition2D.set(entityPosition.x, entityPosition.y);\n\t\t\t\t\tconst numEntities = this.getEntity().getScene().getNumEntities();\n\t\t\t\t\tfor (let entityI = 0; entityI < numEntities; entityI++) {\n\t\t\t\t\t\tconst entity = this.getEntity().getScene().getEntity(entityI);\n\t\t\t\t\t\tif (entity.isEnabled()) {\n\t\t\t\t\t\t\tconst label = /** @type {LabelComponent} */(entity.getComponentByType('label'));\n\t\t\t\t\t\t\tif (label !== null && label.getLoadState() === 'loaded') {\n\t\t\t\t\t\t\t\tconst labelBounds = label.getNormalSpaceBounds(camera);\n\t\t\t\t\t\t\t\tif (labelBounds !== undefined && labelBounds.contains(entityPosition2D)) {\n\t\t\t\t\t\t\t\t\tconst entityDistance = entity.getCameraSpacePosition(camera).magnitude();\n\t\t\t\t\t\t\t\t\tif (intersectedEntity === null || intersectedEntityDistance > entityDistance) {\n\t\t\t\t\t\t\t\t\t\tintersectedEntity = entity;\n\t\t\t\t\t\t\t\t\t\tintersectedEntityDistance = entityDistance;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tVector2.pool.release(entityPosition2D);\n\n\t\t\t\t\t// If it didn't find a label selection, check the entities themselves.\n\t\t\t\t\tif (intersectedEntity === null) {\n\t\t\t\t\t\tcamera.getCameraSpacePositionFromNormalSpacePosition(entityPosition, entityPosition);\n\t\t\t\t\t\tentityPosition.mult(entityPosition, 1 / entityPosition.magnitude());\n\n\t\t\t\t\t\t// Get a ray in camera coordinates to search for intersecting entities.\n\t\t\t\t\t\tintersectedEntity = camera.getNearestIntersectingEntity(entityPosition);\n\t\t\t\t\t}\n\t\t\t\t\tVector3.pool.release(entityPosition);\n\n\t\t\t\t\t// Call the callback whether something was selected or not.\n\t\t\t\t\tthis.getEntity().getScene().getEngine().addCallback(this._callback.bind(null, intersectedEntity), false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tEntityRef\n} from '../../internal';\n\n/**\n * A controller that sets the parent every frame. Not normally needed except when another controller sets the parent,\n * such as the transition controller.\n */\nexport class SetParentController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The parent to transition to.\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._parent = new EntityRef(this.getEntity().getScene());\n\t}\n\n\t/**\n\t * Gets the parent to set.\n\t * @returns {string}\n\t */\n\tgetParent() {\n\t\treturn this._parent.getName();\n\t}\n\n\t/**\n\t * Sets the parent to set.\n\t * @param {string} parent\n\t */\n\tsetParent(parent) {\n\t\tif (this._parent.getName() !== '') {\n\t\t\tthis.removeDependentState(this._parent.getName(), 'position');\n\t\t}\n\t\tthis._parent.setName(parent);\n\t\tif (this._parent.getName() !== '') {\n\t\t\tthis.addDependentState(this._parent.getName(), 'position');\n\t\t}\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst parent = this._parent.get();\n\t\tthis.getEntity().setParent(parent);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tMathUtils,\n\tModelComponent,\n\tQuaternion,\n\tTHREE,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller that rotates an entity by an axis at a certain rate.\n */\nexport class SpinController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The axis around which to rotate the entity.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._axis = new Vector3(0, 0, 1);\n\t\tthis._axis.freeze();\n\n\t\t/**\n\t\t * The flag that determines whether the axis is relative to the entity's orientation.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._axisRelativeToEntity = true;\n\n\t\t/**\n\t\t * The rate in radians per second to rotate the entity.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._rate = 0;\n\n\t\t/**\n\t\t * The reference angle in radians, the phase, of the entity at the reference time.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._referenceAngle = 0;\n\n\t\t/**\n\t\t * The reference time when the entity is at the reference phase angle.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._referenceTime = undefined;\n\n\t\t/**\n\t\t * A flag that determines whether to clamp the rate at the real-time rate.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._clampedToRealTime = false;\n\n\t\t/**\n\t\t * A flag that says whether real-time or Pioneer time is used.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._usingRealTime = false;\n\n\t\t/**\n\t\t * A flag that says whether the position is also rotating.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._rotatingPosition = false;\n\n\t\t/**\n\t\t * The joint for the model to spin. If empty, the entity itself is used.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._joint = '';\n\n\t\t/**\n\t\t * The joint's ThreeJs object.\n\t\t * @type {THREE.Object3D}\n\t\t * @private\n\t\t */\n\t\tthis._jointObject = null;\n\n\t\t/**\n\t\t * The model for the joint.\n\t\t * @type {ModelComponent}\n\t\t * @private\n\t\t */\n\t\tthis._model = null;\n\n\t\t/**\n\t\t * A recording of the last time of Pioneer.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lastTime = entity.getScene().getEngine().getTime();\n\n\t\t// Let the base controller know that this changes the orientation.\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Gets the axis around which to rotate the entity. It defaults to the z-axis.\n\t * @returns {Vector3}\n\t */\n\tgetAxis() {\n\t\treturn this._axis;\n\t}\n\n\t/**\n\t * Gets the flag that determines whether the axis is relative to the entity's orientation. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tisAxisRelativeToEntity() {\n\t\treturn this._axisRelativeToEntity;\n\t}\n\n\t/**\n\t * Sets the axis around which to rotate the entity.\n\t * @param {Vector3} axis - The axis.\n\t * @param {boolean} relativeToEntity - If true, the axis is relative to the entity's orientation.\n\t */\n\tsetAxis(axis, relativeToEntity) {\n\t\tthis._axis.thaw();\n\t\tthis._axis.copy(axis);\n\t\tthis._axis.freeze();\n\t\tthis._axisRelativeToEntity = relativeToEntity;\n\t}\n\n\t/**\n\t * Gets the rate in radians per second to rotate the entity. Defaults to 0.\n\t * @returns {number}\n\t */\n\tgetRate() {\n\t\treturn this._rate;\n\t}\n\n\t/**\n\t * Sets the rate in radians per second to rotate the entity.\n\t * @param {number} rate\n\t */\n\tsetRate(rate) {\n\t\tthis._rate = rate;\n\t}\n\n\t/**\n\t * Gets the reference angle in radians, the phase, of the entity at the reference time. Defaults to 0.\n\t * @returns {number}\n\t */\n\tgetReferenceAngle() {\n\t\treturn this._referenceAngle;\n\t}\n\n\t/**\n\t * Sets the reference angle in radians, the phase, of the entity at the reference time.\n\t * @param {number} referenceAngle\n\t */\n\tsetReferenceAngle(referenceAngle) {\n\t\tthis._referenceAngle = referenceAngle;\n\t}\n\n\t/**\n\t * Gets the reference time when the entity is at the reference phase angle. If this is undefined, the previous frame's time is used. Defaults to undefined.\n\t * @returns {number}\n\t */\n\tgetReferenceTime() {\n\t\treturn this._referenceTime;\n\t}\n\n\t/**\n\t * Sets the reference time when the entity is at the reference phase angle.\n\t * @param {number} referenceTime\n\t */\n\tsetReferenceTime(referenceTime) {\n\t\tthis._referenceTime = referenceTime;\n\t}\n\n\t/**\n\t * Gets whether to clamp the rate at the real-time rate. Defaults to false. Ignored when there is a reference time.\n\t * @returns {boolean}\n\t */\n\tisClampedToRealTime() {\n\t\treturn this._clampedToRealTime;\n\t}\n\n\t/**\n\t * Sets whether to clamp the rate at the real-time rate.\n\t * @param {boolean} clampedToRealTime\n\t*/\n\tsetClampedToRealTime(clampedToRealTime) {\n\t\tthis._clampedToRealTime = clampedToRealTime;\n\t}\n\n\t/**\n\t * Gets the flag that says whether real-time or Pioneer time is used.\n\t * @returns {boolean}\n\t */\n\tisUsingRealTime() {\n\t\treturn this._usingRealTime;\n\t}\n\n\t/**\n\t * Sets the flag that says whether real-time or Pioneer time is used.\n\t * @param {boolean} usingRealTime\n\t*/\n\tsetUsingRealTime(usingRealTime) {\n\t\tthis._usingRealTime = usingRealTime;\n\t}\n\n\t/**\n\t * Gets the flag that says whether the position is also rotating.\n\t * @returns {boolean}\n\t */\n\tisRotatingPosition() {\n\t\treturn this._rotatingPosition;\n\t}\n\n\t/**\n\t * Sets the flag that says whether the position is also rotating.\n\t * @param {boolean} rotatingPosition\n\t*/\n\tsetRotatingPosition(rotatingPosition) {\n\t\tthis._rotatingPosition = rotatingPosition;\n\t\tif (rotatingPosition) {\n\t\t\tthis.addModifiedState('position');\n\t\t}\n\t\telse {\n\t\t\tthis.removeModifiedState('position');\n\t\t}\n\t}\n\n\t/**\n\t * Sets the spin to be at the joint on the specified model. If no model is given, the first model in the entity is used.\n\t * @param {string} joint\n\t * @param {ModelComponent} [model]\n\t */\n\tsetJoint(joint, model) {\n\t\tthis._joint = joint;\n\t\tif (!model) {\n\t\t\tconst modelFromEntity = /** @type {ModelComponent} */(this.getEntity().get('model'));\n\t\t\tif (modelFromEntity !== null) {\n\t\t\t\tthis._model = modelFromEntity;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._model = model;\n\t\t}\n\t\tif (this._joint !== '') {\n\t\t\tthis.removeModifiedState('orientation');\n\t\t}\n\t\telse {\n\t\t\tthis.addModifiedState('orientation');\n\t\t}\n\t}\n\n\t/**\n\t * If the position is fixed, updates the position to the fixed position.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tif (this._rotatingPosition) {\n\t\t\t// Get the deltaTime, the time since the last update, possibly clamped.\n\t\t\tlet deltaTime = 0;\n\t\t\tif (!this._usingRealTime) { // Using real time.\n\t\t\t\tif (this._referenceTime !== undefined) {\n\t\t\t\t\tdeltaTime = time - this._referenceTime;\n\t\t\t\t\tdeltaTime -= this._referenceAngle / this._rate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Calculate the rotation quaternion from the deltaTime.\n\t\t\tconst rotation = Quaternion.pool.get();\n\t\t\trotation.setFromAxisAngle(this._axis, this._rate * deltaTime);\n\n\t\t\t// If the joint object is valid,\n\t\t\tif (this._jointObject === null) {\n\t\t\t\t// Apply the rotation to the new orientation.\n\t\t\t\tif (this._axisRelativeToEntity) {\n\t\t\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\t\t\tthis.getEntity().getOrientationAtTime(orientation, time);\n\t\t\t\t\trotation.mult(orientation, rotation);\n\t\t\t\t\trotation.multInverseR(rotation, orientation);\n\t\t\t\t\tQuaternion.pool.release(orientation);\n\t\t\t\t}\n\n\t\t\t\t// Set the position if flagged.\n\t\t\t\tposition.rotate(rotation, position);\n\t\t\t}\n\t\t\tQuaternion.pool.release(rotation);\n\t\t}\n\t}\n\n\t/**\n\t * If the orientation is fixed, updates the orientation to the fixed orientation.\n\t * @param {Quaternion} orientation\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\t// Make sure there is a valid orientation to start.\n\t\tif (orientation.isNaN()) {\n\t\t\torientation.copy(Quaternion.Identity);\n\t\t}\n\n\t\t// Get the deltaTime, the time since the last update, possibly clamped.\n\t\tlet deltaTime = 0;\n\t\tif (!this._usingRealTime) { // Using real time.\n\t\t\tif (this._referenceTime !== undefined) {\n\t\t\t\tdeltaTime = time - this._referenceTime;\n\t\t\t\tdeltaTime -= this._referenceAngle / this._rate;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate the rotation quaternion from the deltaTime.\n\t\tconst rotation = Quaternion.pool.get();\n\t\trotation.setFromAxisAngle(this._axis, this._rate * deltaTime);\n\n\t\t// If the joint object is valid,\n\t\tif (this._jointObject === null) {\n\t\t\t// Apply the rotation to the new orientation.\n\t\t\tif (this._axisRelativeToEntity) {\n\t\t\t\trotation.mult(orientation, rotation);\n\t\t\t\trotation.multInverseR(rotation, orientation);\n\t\t\t}\n\t\t\torientation.mult(rotation, orientation);\n\t\t\torientation.normalize(orientation);\n\t\t}\n\t\tQuaternion.pool.release(rotation);\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Make sure there is a valid orientation to start.\n\t\tif (this.getEntity().getOrientation().isNaN()) {\n\t\t\tthis.getEntity().setOrientation(Quaternion.Identity);\n\t\t}\n\n\t\t// Get the deltaTime, the time since the last update, possibly clamped.\n\t\tconst engine = this.getEntity().getScene().getEngine();\n\t\tlet deltaTime = 0;\n\t\tif (this._usingRealTime) { // Using real time.\n\t\t\tdeltaTime = engine.getDeltaTime();\n\t\t}\n\t\telse { // Using Pioneer time.\n\t\t\tif (this._referenceTime !== undefined) {\n\t\t\t\tdeltaTime = engine.getTime() - this._referenceTime;\n\t\t\t\tdeltaTime -= this._referenceAngle / this._rate;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdeltaTime = engine.getTime() - this._lastTime;\n\t\t\t\tif (this._clampedToRealTime) {\n\t\t\t\t\tconst deltaRealTime = engine.getDeltaTime();\n\t\t\t\t\tdeltaTime = MathUtils.clamp(deltaTime, -deltaRealTime, deltaRealTime);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Calculate the rotation quaternion from the deltaTime.\n\t\tconst rotation = Quaternion.pool.get();\n\t\trotation.setFromAxisAngle(this._axis, this._rate * deltaTime);\n\n\t\t// If a joint is specified, setup the joint's ThreeJs object.\n\t\tif (this._jointObject !== null && this._model.getThreeJsObjects()[0] !== null) {\n\t\t\tthis._jointObject = null;\n\t\t}\n\t\tif (this._joint !== '' && (this._jointObject === null || this._jointObject.name !== this._joint) && this._model !== null) {\n\t\t\tconst subObject = this._model.getThreeJsObjectByName(this._joint);\n\t\t\tif (subObject !== null) {\n\t\t\t\tthis._jointObject = subObject;\n\t\t\t}\n\t\t}\n\t\t// If the joint object is valid,\n\t\tconst entityOrientation = this.getEntity().getOrientation();\n\t\tif (this._jointObject !== null) {\n\t\t\tif (!this._axisRelativeToEntity) {\n\t\t\t\trotation.multInverseL(entityOrientation, rotation);\n\t\t\t\trotation.mult(rotation, entityOrientation);\n\t\t\t}\n\t\t\t_tempThreeJsQuaternion.set(rotation.x, rotation.y, rotation.z, rotation.w);\n\t\t\tthis._jointObject.quaternion.multiplyQuaternions(_tempThreeJsQuaternion, this._jointObject.quaternion);\n\t\t\tif (this._rotatingPosition) {\n\t\t\t\tthis._jointObject.position.applyQuaternion(_tempThreeJsQuaternion);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Apply the rotation to the new orientation.\n\t\t\tconst newOrientation = Quaternion.pool.get();\n\t\t\tif (this._axisRelativeToEntity) {\n\t\t\t\trotation.mult(entityOrientation, rotation);\n\t\t\t\trotation.multInverseR(rotation, entityOrientation);\n\t\t\t}\n\t\t\tnewOrientation.mult(rotation, entityOrientation);\n\t\t\tnewOrientation.normalize(newOrientation);\n\n\t\t\t// Set the orientation and angular velocity.\n\t\t\tconst newAngularVelocity = Vector3.pool.get();\n\t\t\tnewAngularVelocity.mult(this._axis, this._rate);\n\t\t\tif (this._axisRelativeToEntity) {\n\t\t\t\tnewAngularVelocity.rotate(newOrientation, newAngularVelocity);\n\t\t\t}\n\t\t\tthis.getEntity().setOrientation(newOrientation);\n\t\t\tthis.getEntity().setAngularVelocity(newAngularVelocity);\n\t\t\tVector3.pool.release(newAngularVelocity);\n\t\t\tQuaternion.pool.release(newOrientation);\n\n\t\t\t// Set the position if flagged.\n\t\t\tif (this._rotatingPosition) {\n\t\t\t\tconst newPosition = Vector3.pool.get();\n\t\t\t\tnewPosition.rotate(rotation, this.getEntity().getPosition());\n\t\t\t\tthis.getEntity().setPosition(newPosition);\n\t\t\t\tVector3.pool.release(newPosition);\n\t\t\t}\n\t\t}\n\t\tQuaternion.pool.release(rotation);\n\n\t\tthis._lastTime = engine.getTime();\n\t}\n}\n\n/**\n * A temporary ThreeJs Quaternion.\n * @type {THREE.Quaternion}\n */\nconst _tempThreeJsQuaternion = new THREE.Quaternion();\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity\n} from '../../internal';\n\n/**\n * An tap controller calls a callback when the user taps the view.\n */\nexport class TapController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The callback to call when the user taps.\n\t\t * @type {() => any}\n\t\t * @private\n\t\t */\n\t\tthis._tapCallback = null;\n\t}\n\n\t/**\n\t * Gets the callback to call when the user taps.\n\t * @returns {() => any}\n\t */\n\tgetTapCallback() {\n\t\treturn this._tapCallback;\n\t}\n\n\t/**\n\t * Sets a callback to call when the user taps.\n\t * @param {() => any} callback\n\t */\n\tsetTapCallback(callback) {\n\t\tthis._tapCallback = callback;\n\t}\n\n\t/**\n\t * Updates the entity's position and orientation.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Get the input system.\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\t\t// If the user clicked/tapped and didn't drag.\n\t\tif (input.isSelected() || !input.getDraggedOffset().isZero()) {\n\t\t\t// Call the callback.\n\t\t\tif (this._tapCallback !== null) {\n\t\t\t\tthis._tapCallback();\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tEntityRef,\n\tMathUtils,\n\tQuaternion,\n\tSetParentController,\n\tVector3\n} from '../../internal';\n\n/**\n * @callback TransitionFunction\n * @param {Entity} entity\n * @param {Vector3} initialPosition\n * @param {Vector3} finalPosition\n * @param {Quaternion} initialOrientation\n * @param {Quaternion} finalOrientation\n * @param {number} u\n */\n\n/**\n * A transition controller.\n */\nexport class TransitionController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._initialPosition = new Vector3();\n\t\tthis._initialPosition.copy(entity.getPosition());\n\n\t\t/**\n\t\t * @type {Quaternion}\n\t\t * @private\n\t\t */\n\t\tthis._initialOrientation = new Quaternion();\n\t\tthis._initialOrientation.copy(entity.getOrientation());\n\n\t\t/**\n\t\t * @type {EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._initialParent = new EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._transitionStart = Number.NaN;\n\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._transitionTime = 1;\n\n\t\t/**\n\t\t * @type {TransitionFunction}\n\t\t * @private\n\t\t */\n\t\tthis._transitionFunction = this._lerpTransitionFunction;\n\n\t\t/**\n\t\t * The resolve function that will be called when the transition completes.\n\t\t * @type {function():void}\n\t\t * @private\n\t\t */\n\t\tthis._resolvePromise = null;\n\n\t\t/**\n\t\t * The reject function that will be called if the endPromise rejects.\n\t\t * @type {function(string):void}\n\t\t * @private\n\t\t */\n\t\tthis._rejectPromise = null;\n\n\t\t/**\n\t\t * The promise that resolves at the end of the transition.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._endPromise = new Promise((resolve, reject) => {\n\t\t\tthis._resolvePromise = resolve;\n\t\t\tthis._rejectPromise = reject;\n\t\t});\n\n\t\t// Set the initial parent to the current parent.\n\t\tconst parent = this.getEntity().getParent();\n\t\tif (parent !== null) {\n\t\t\tthis._initialParent.setName(parent.getName());\n\t\t}\n\n\t\t// If there is another transition controller already, destroy it.\n\t\tconst existingController = this.getEntity().getControllerByType('transition');\n\t\tif (existingController !== null) {\n\t\t\tthis.getEntity().removeController(existingController);\n\t\t}\n\n\t\t// Add a beginning setParent controller, since the controllers before this one expect to be in the destination parent frame.\n\t\tconst setParentController = /** @type {SetParentController} */(this.getEntity().addController('setParent', 'transitionSetParent', this.getEntity().getController(0)));\n\t\tif (parent !== null) {\n\t\t\tsetParentController.setParent(parent.getName());\n\t\t}\n\t}\n\n\t/**\n\t * Gets the transition time in seconds.\n\t * @returns {number}\n\t */\n\tgetTransitionTime() {\n\t\treturn this._transitionTime;\n\t}\n\n\t/**\n\t * Sets the transition time in seconds.\n\t * @param {number} transitionTime\n\t */\n\tsetTransitionTime(transitionTime) {\n\t\tthis._transitionTime = transitionTime;\n\t}\n\n\t/**\n\t * Sets the transition function.\n\t * @param {TransitionFunction} transitionFunction\n\t */\n\tsetTransitionFunction(transitionFunction) {\n\t\tthis._transitionFunction = transitionFunction;\n\t}\n\n\t/**\n\t * Gets the parent to transition to.\n\t * @returns {string}\n\t */\n\tgetParent() {\n\t\tconst setParentController = /** @type {SetParentController} */(this.getEntity().getController('transitionSetParent'));\n\t\tif (setParentController !== null) {\n\t\t\treturn setParentController.getName();\n\t\t}\n\t\telse {\n\t\t\tconst parent = this.getEntity().getParent();\n\t\t\tif (parent !== null) {\n\t\t\t\treturn parent.getName();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the parent to transition to.\n\t * @param {string} parent\n\t */\n\tsetParent(parent) {\n\t\tconst setParentController = /** @type {SetParentController} */(this.getEntity().getController('transitionSetParent'));\n\t\tif (setParentController !== null) {\n\t\t\tsetParentController.setParent(parent);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the promise that resolves at the end of the transition.\n\t * On a failure, the reject function takes a string describing what went wrong.\n\t * @returns {Promise<void>}\n\t */\n\tgetEndPromise() {\n\t\treturn this._endPromise;\n\t}\n\n\t/**\n\t * Destroys the controller resources.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tsuper.__destroy();\n\n\t\t// Remove the setParent controller.\n\t\tconst setParentController = this.getEntity().getController('transitionSetParent');\n\t\tif (setParentController !== null) {\n\t\t\tthis.getEntity().removeController(setParentController);\n\t\t}\n\n\t\t// Reject if the transition controller completed early.\n\t\tif (this._transitionTime !== 0) {\n\t\t\tthis._rejectPromise('Transition controller was destroyed before completing.');\n\t\t}\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// When this update runs, the previous controllers in the entity controller list have updated themselves,\n\t\t// including the first setParent controller created by this. Now we just interpolate between the\n\t\t// initialPosition/Orientation variables and the entity's updated position and orientation.\n\n\t\t// Get the initial parent and final parent.\n\t\tconst initialParent = this._initialParent.get();\n\t\tconst finalParent = this.getEntity().getParent();\n\n\t\t// There's no final parent any more, so we error.\n\t\tif (finalParent === null) {\n\t\t\tthis._transitionTime = 0;\n\t\t\tthis.getEntity().removeController(this);\n\t\t\tthis._rejectPromise('The final parent was destroyed or disabled before the transition could complete.');\n\t\t}\n\n\t\t// Set the start time for the transition on the first update.\n\t\tif (Number.isNaN(this._transitionStart)) {\n\t\t\tthis._transitionStart = Date.now() / 1000.0;\n\t\t}\n\n\t\t// If we're before the half-way point or just went over it this frame.\n\t\tconst setParentController = /** @type {SetParentController} */(this.getEntity().getController('transitionSetParent'));\n\t\tif (setParentController !== null) {\n\t\t\t// If there's no initial parent,\n\t\t\tif (initialParent === null) {\n\t\t\t\tthis.getEntity().getScene().getEngine().addCallback(() => {\n\t\t\t\t\tthis._transitionTime = 0;\n\t\t\t\t\tthis.getEntity().removeController(this);\n\t\t\t\t\tif (this._initialParent.getName() !== '') { // There's supposed to be an initial parent, but no more.\n\t\t\t\t\t\tthis._rejectPromise(`The initial parent \"${this._initialParent.getName()}\" was destroyed or disabled before the first half of the transition could complete.`);\n\t\t\t\t\t}\n\t\t\t\t\telse { // Never was an initial parent, so just finish the transition.\n\t\t\t\t\t\tthis._resolvePromise();\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If we're over the half-way point, remove the setParent controller and adjust the frame of the initial position.\n\t\t\tif (Date.now() / 1000.0 - this._transitionStart >= this._transitionTime / 2.0 || initialParent === finalParent) {\n\t\t\t\t// Remove the setParent controller.\n\t\t\t\tthis.getEntity().removeController(setParentController);\n\t\t\t\t// Change the initial position to be in the frame of the final parent.\n\t\t\t\tif (initialParent !== finalParent && initialParent !== null && finalParent !== null) {\n\t\t\t\t\tinitialParent.getPositionRelativeToEntity(this._initialPosition, this._initialPosition, finalParent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We're before the half-way point and at a different parent, so switch to the initial parent.\n\t\t\telse {\n\t\t\t\tthis.getEntity().setParent(initialParent);\n\t\t\t}\n\t\t}\n\n\t\t// Get the final position and orientation.\n\t\tconst finalPosition = this.getEntity().getPosition();\n\t\tconst finalOrientation = this.getEntity().getOrientation();\n\n\t\t// Do the transition.\n\t\tlet u = MathUtils.clamp01((Date.now() / 1000.0 - this._transitionStart) / this._transitionTime);\n\t\tif (Number.isNaN(u)) {\n\t\t\tu = 1.0;\n\t\t}\n\t\tthis._transitionFunction(this.getEntity(), this._initialPosition, finalPosition, this._initialOrientation, finalOrientation, u);\n\n\t\t// If we've passed the transition time, clean it all up.\n\t\tif (Date.now() / 1000.0 - this._transitionStart >= this._transitionTime) {\n\t\t\tthis.getEntity().getScene().getEngine().addCallback(() => {\n\t\t\t\tthis._transitionTime = 0;\n\t\t\t\tthis.getEntity().removeController(this);\n\t\t\t\tthis._resolvePromise();\n\t\t\t}, false);\n\t\t}\n\t}\n\n\t/**\n\t * A default function that lerps between positions and slerps between orientations.\n\t * @param {Entity} entity\n\t * @param {Vector3} initialPosition\n\t * @param {Vector3} finalPosition\n\t * @param {Quaternion} initialOrientation\n\t * @param {Quaternion} finalOrientation\n\t * @param {number} u\n\t */\n\t_lerpTransitionFunction(entity, initialPosition, finalPosition, initialOrientation, finalOrientation, u) {\n\t\tconst position = Vector3.pool.get();\n\t\tconst orientation = Quaternion.pool.get();\n\t\tposition.lerp(initialPosition, finalPosition, u);\n\t\torientation.slerp(initialOrientation, finalOrientation, u);\n\n\t\t// Set the new position and orientation.\n\t\tentity.setPosition(position);\n\t\tentity.setOrientation(orientation);\n\t\tVector3.pool.release(position);\n\t\tQuaternion.pool.release(orientation);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tQuaternion,\n\tVector3\n} from '../../internal';\n\n/**\n * A controller that translates the position of the entity.\n */\nexport class TranslateController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The translation.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._translation = new Vector3(0, 0, 0);\n\t\tthis._translation.freeze();\n\n\t\t/**\n\t\t * Whether the translation is relative to the orientation.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeToOrientation = false;\n\n\t\t// Let the base controller know that this changes the position.\n\t\tthis.addModifiedState('position');\n\t}\n\n\t/**\n\t * Gets the translation. Defaults to Vector3(0, 0, 0).\n\t * @returns {Vector3}\n\t */\n\tgetTranslation() {\n\t\treturn this._translation;\n\t}\n\n\t/**\n\t * Sets the translation.\n\t * @param {Vector3} translation\n\t */\n\tsetTranslation(translation) {\n\t\tthis._translation.thaw();\n\t\tthis._translation.copy(translation);\n\t\tthis._translation.freeze();\n\t}\n\n\t/**\n\t * Sets whether the translation is relative to the orientation.\n\t * @param {boolean} relativeToOrientation\n\t */\n\tsetRelativeToOrientation(relativeToOrientation) {\n\t\tthis._relativeToOrientation = relativeToOrientation;\n\t}\n\n\t/**\n\t * Updates a position for the given time.\n\t * @param {Vector3} position\n\t * @param {number} time\n\t * @override\n\t * @internal\n\t */\n\t__updatePositionAtTime(position, time) {\n\t\tconst newPosition = Vector3.pool.get();\n\t\tif (this._relativeToOrientation) {\n\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\tthis.getEntity().getOrientationAtTime(orientation, time);\n\t\t\tnewPosition.rotate(orientation, this._translation);\n\t\t\tQuaternion.pool.release(orientation);\n\t\t}\n\t\telse {\n\t\t\tnewPosition.copy(this._translation);\n\t\t}\n\t\tposition.add(newPosition, position);\n\t\tVector3.pool.release(newPosition);\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst newPosition = Vector3.pool.get();\n\t\tif (this._relativeToOrientation) {\n\t\t\tnewPosition.rotate(this.getEntity().getOrientation(), this._translation);\n\t\t}\n\t\telse {\n\t\t\tnewPosition.copy(this._translation);\n\t\t}\n\t\tnewPosition.add(newPosition, this.getEntity().getPosition());\n\t\tthis.getEntity().setPosition(newPosition);\n\t\tVector3.pool.release(newPosition);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseController,\n\tEntity,\n\tInterval,\n\tLatLonAlt,\n\tMathUtils,\n\tSpheroidComponent,\n\tVector3\n} from '../../internal';\n\n/** A zoom camera controller.\n */\nexport class ZoomController extends BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t// The sensitivity for zooming.\n\t\tthis._zoomSensitivity = 0.05;\n\n\t\t/**\n\t\t * The smoothness of the zooming. Zero means no smoothness.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._zoomSmoothness = 0.8;\n\n\t\t/**\n\t\t * The current value applied every frame to the movement.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._zoomSmoothedValue = 1.0;\n\n\t\t/**\n\t\t * The distance that it will be clamped to.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._distanceClamp = new Interval(0.001, Number.POSITIVE_INFINITY);\n\t\tthis._distanceClamp.freeze();\n\n\t\t/**\n\t\t * If true, it will use the distance to the radius of the spheroid instead of the entity position distance.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._useSpheroidRadiusForDistance = false;\n\n\t\t// Let the base controller know that this changes the position.\n\t\tthis.addModifiedState('position');\n\t}\n\n\t/**\n\t * Gets the zoom sensitivity. Defaults to 0.01.\n\t * @returns {number}\n\t */\n\tgetZoomSensitivity() {\n\t\treturn this._zoomSensitivity;\n\t}\n\n\t/**\n\t * Sets the zoom sensitivity.\n\t * @param {number} zoomSensitivity\n\t */\n\tsetZoomSensitivity(zoomSensitivity) {\n\t\tthis._zoomSensitivity = zoomSensitivity;\n\t}\n\n\t/**\n\t * Gets the zoom smoothness. Defaults to 0.8.\n\t * @returns {number}\n\t */\n\tgetZoomSmoothness() {\n\t\treturn this._zoomSmoothness;\n\t}\n\n\t/**\n\t * Sets the zoom smoothness, between 0 and 1.\n\t * @param {number} zoomSmoothness\n\t */\n\tsetZoomSmoothness(zoomSmoothness) {\n\t\tthis._zoomSmoothness = zoomSmoothness;\n\t}\n\n\t/**\n\t * Gets the interval to which it will be clamped (frozen).\n\t * @returns {Interval}\n\t */\n\tgetDistanceClamp() {\n\t\treturn this._distanceClamp;\n\t}\n\n\t/**\n\t * Sets the distance that it will be clamped to.\n\t * @param {Interval} distanceClamp - the value to set\n\t */\n\tsetDistanceClamp(distanceClamp) {\n\t\tthis._distanceClamp.thaw();\n\t\tthis._distanceClamp.copy(distanceClamp);\n\t\tthis._distanceClamp.freeze();\n\t}\n\n\t/**\n\t * Returns true if it will use the distance to the radius of the spheroid instead of the entity position distance.\n\t * @returns {boolean}\n\t */\n\tgetUseSpheroidRadiusForDistance() {\n\t\treturn this._useSpheroidRadiusForDistance;\n\t}\n\n\t/**\n\t * Sets if it will use the distance to the radius of the spheroid instead of the entity position distance.\n\t * @param {boolean} enabled\n\t */\n\tsetUseSpheroidRadiusForDistance(enabled) {\n\t\tthis._useSpheroidRadiusForDistance = enabled;\n\t}\n\n\t/**\n\t * Takes input and updates the target distance. Then updates the entity's position.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\tconst input = this.getEntity().getScene().getEngine().getInput();\n\n\t\t// Update the target distance.\n\t\tlet zoomChange = 1.0;\n\t\tconst viewport = input.getActiveViewport();\n\t\tif (viewport !== null) {\n\t\t\tconst camera = viewport.getCamera();\n\t\t\tif (camera !== null && camera.getEntity() === this.getEntity()) {\n\t\t\t\tlet zoomMultiplier = 1;\n\t\t\t\tif (input.isKeyPressed('x')) {\n\t\t\t\t\tzoomMultiplier = 0.05;\n\t\t\t\t}\n\t\t\t\tif (input.isShiftPressed()) {\n\t\t\t\t\tzoomMultiplier = 5;\n\t\t\t\t}\n\n\t\t\t\t// Do zoom/scroll movement.\n\t\t\t\tconst zoomOffset = input.getZoomedOffset();\n\t\t\t\tif (zoomOffset !== 0) {\n\t\t\t\t\tzoomChange *= Math.pow(2, zoomOffset * this._zoomSensitivity * zoomMultiplier);\n\t\t\t\t}\n\n\t\t\t\t// Do key movement.\n\t\t\t\tif (input.isKeyPressed('w')) {\n\t\t\t\t\tzoomChange /= Math.pow(2, this._zoomSensitivity * zoomMultiplier);\n\t\t\t\t}\n\t\t\t\tif (input.isKeyPressed('s')) {\n\t\t\t\t\tzoomChange *= Math.pow(2, this._zoomSensitivity * zoomMultiplier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Apply smoothing.\n\t\tthis._zoomSmoothedValue = MathUtils.clamp(MathUtils.lerp(zoomChange, this._zoomSmoothedValue, this._zoomSmoothness), 0.8, 1.25);\n\t\tif (Math.abs(1.0 - this._zoomSmoothedValue) < 0.0000001) {\n\t\t\tthis._zoomSmoothedValue = 1.0;\n\t\t}\n\n\t\t// Get the current distance from the position.\n\t\tlet currentDistance = 1;\n\t\tconst lla = LatLonAlt.pool.get();\n\t\tif (this._useSpheroidRadiusForDistance && this.getEntity().getParent() !== null) {\n\t\t\tconst spheroid = /** @type {SpheroidComponent} */(this.getEntity().getParent().getComponentByType('spheroid'));\n\t\t\tif (spheroid !== null) {\n\t\t\t\tconst positionOriented = Vector3.pool.get();\n\t\t\t\tpositionOriented.rotateInverse(this.getEntity().getParent().getOrientation(), this.getEntity().getPosition());\n\t\t\t\tspheroid.llaFromXYZ(lla, positionOriented);\n\t\t\t\tcurrentDistance = lla.alt;\n\t\t\t\tVector3.pool.release(positionOriented);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrentDistance = this.getEntity().getPosition().magnitude() - this.getEntity().getParent().getOcclusionRadius();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcurrentDistance = this.getEntity().getPosition().magnitude();\n\t\t}\n\t\tif (Number.isNaN(currentDistance)) {\n\t\t\tcurrentDistance = 1;\n\t\t}\n\n\t\t// Update the current distance and apply clamping.\n\t\tcurrentDistance *= this._zoomSmoothedValue;\n\t\tif (currentDistance < this._distanceClamp.min) {\n\t\t\tcurrentDistance = this._distanceClamp.min;\n\t\t\tthis._zoomSmoothedValue = 1.0;\n\t\t}\n\t\tif (currentDistance > this._distanceClamp.max) {\n\t\t\tcurrentDistance = this._distanceClamp.max;\n\t\t\tthis._zoomSmoothedValue = 1.0;\n\t\t}\n\n\t\t// Set the position from the current distance.\n\t\tconst newPosition = Vector3.pool.get();\n\t\tlet newMagnitude = currentDistance;\n\t\tif (this._useSpheroidRadiusForDistance && this.getEntity().getParent() !== null) {\n\t\t\tconst spheroid = /** @type {SpheroidComponent} */(this.getEntity().getParent().getComponentByType('spheroid'));\n\t\t\tif (spheroid !== null) {\n\t\t\t\tlla.alt = currentDistance;\n\t\t\t\tspheroid.xyzFromLLA(newPosition, lla);\n\t\t\t\tnewMagnitude = newPosition.magnitude();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewMagnitude = currentDistance + this.getEntity().getParent().getOcclusionRadius();\n\t\t\t}\n\t\t}\n\t\tnewPosition.normalize(this.getEntity().getPosition());\n\t\tnewPosition.mult(newPosition, newMagnitude);\n\t\tthis.getEntity().setPosition(newPosition);\n\t\tVector3.pool.release(newPosition);\n\t\tLatLonAlt.pool.release(lla);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tBaseController,\n\tCameraComponent,\n\tCollection,\n\tCollectionItem,\n\tFastMap,\n\tGeometry,\n\tInterval,\n\tQuaternion,\n\tScene,\n\tSort,\n\tTypes,\n\tVector2,\n\tVector3\n} from '../internal';\n\n/**\n * The main class that defines an object in space. It has position, orientation, components, controllers, and size.\n * @extends {CollectionItem<Scene>}\n */\nexport class Entity extends CollectionItem {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the entity (always 'entity');\n\t * @param {string} name - the name of the entity\n\t * @param {Scene} scene - the scene\n\t */\n\tconstructor(type, name, scene) {\n\t\tsuper(type, name, scene);\n\n\t\t/**\n\t\t * Flag that the user can use to enable or disable the entity (and its children).\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._enabled = true;\n\n\t\t/**\n\t\t * The flag that says whether any ancestor is disabled, making this disabled.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._disabledByAncestor = false;\n\n\t\t/**\n\t\t * Flag that indicates whether the entity has been destroyed.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._destroyed = false;\n\n\t\t/**\n\t\t * The parent of the entity.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._parent = null;\n\n\t\t/**\n\t\t * The parent of the entity at the beginning of the last frame.\n\t\t * @type {Entity}\n\t\t * @private\n\t\t */\n\t\tthis._lastParent = null;\n\n\t\t/**\n\t\t * The children of the entity.\n\t\t * @type {Entity[]}\n\t\t * @private\n\t\t */\n\t\tthis._children = [];\n\n\t\t/**\n\t\t * The time starts for parents as `[start time, parent name]`, sorted by start times.\n\t\t * @type {[number, string][]}\n\t\t * @private\n\t\t */\n\t\tthis._parentingTable = [];\n\n\t\t/**\n\t\t * A list of callbacks to call when the parent changes.\n\t\t * @type {((entity: Entity, oldParent: Entity, newParent: Entity) => void)[]}\n\t\t * @private\n\t\t */\n\t\tthis._parentChangedCallbacks = [];\n\n\t\t/**\n\t\t * A list of callbacks to call when the child changes.\n\t\t * @type {((entity: Entity, child: Entity, added: boolean) => void)[]}\n\t\t * @private\n\t\t */\n\t\tthis._childChangedCallbacks = [];\n\n\t\t/**\n\t\t * The entity state.\n\t\t * @type {EntityState}\n\t\t * @private\n\t\t */\n\t\tthis._state = new EntityState();\n\n\t\t/**\n\t\t * The entity state from the previous frame.\n\t\t * @type {EntityState}\n\t\t * @private\n\t\t */\n\t\tthis._lastState = new EntityState();\n\n\t\t/**\n\t\t * The position of the entity relative to the camera's position.\n\t\t * @type {FastMap<CameraComponent, Vector3>}\n\t\t * @private\n\t\t */\n\t\tthis._cameraSpacePosition = new FastMap();\n\n\t\t/**\n\t\t * The position of the entity in normal-space.\n\t\t * @type {FastMap<CameraComponent, Vector3>}\n\t\t * @private\n\t\t */\n\t\tthis._normalSpacePosition = new FastMap();\n\n\t\t/**\n\t\t * The position of the entity in pixel-space.\n\t\t * @type {FastMap<CameraComponent, Vector2>}\n\t\t * @private\n\t\t */\n\t\tthis._pixelSpacePosition = new FastMap();\n\n\t\t/**\n\t\t * The normal-space extents radius of the entity.\n\t\t * @type {FastMap<CameraComponent, number>}\n\t\t * @private\n\t\t */\n\t\tthis._normalSpaceExtentsRadius = new FastMap();\n\n\t\t/**\n\t\t * The pixel-space extents radius of the entity.\n\t\t * @type {FastMap<CameraComponent, number>}\n\t\t * @private\n\t\t */\n\t\tthis._pixelSpaceExtentsRadius = new FastMap();\n\n\t\t/**\n\t\t * The greatest pixel-space extents radius of the entity in any camera.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._greatestPixelSpaceExtentsRadius = 0.0;\n\n\t\t/**\n\t\t * The collection of components.\n\t\t * @type {Collection<BaseComponent, Entity>}\n\t\t * @private\n\t\t*/\n\t\tthis._components = new Collection(this, Types.Components);\n\n\t\t/**\n\t\t * The collection of controllers.\n\t\t * @type {Collection<BaseController, Entity>}\n\t\t * @private\n\t\t*/\n\t\tthis._controllers = new Collection(this, Types.Controllers);\n\n\t\t/**\n\t\t * The radius of the entity.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._occlusionRadius = 0;\n\n\t\t/**\n\t\t * The radius of the entity.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._extentsRadius = 0;\n\n\t\t/**\n\t\t * A user-set flag that determines whether things like labels get hidden behind the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._canOcclude = true;\n\n\t\t/**\n\t\t * The position coverage of the controllers.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._positionCoverage = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\tthis._positionCoverage.freeze();\n\n\t\t/**\n\t\t * The orientation coverage of the controllers.\n\t\t * @type {Interval}\n\t\t * @private\n\t\t */\n\t\tthis._orientationCoverage = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\tthis._orientationCoverage.freeze();\n\n\t\t/**\n\t\t * A flag that is true if the entity's position coverage contains the current time.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isInPositionCoverage = false;\n\n\t\t/**\n\t\t * A flag that is true if the entity's orientation coverage contains the current time.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._isInOrientationCoverage = false;\n\t}\n\n\t// NAME, SCENE, ENABLED, VISIBILITY\n\n\t/**\n\t * Returns the scene.\n\t * @returns {Scene}\n\t */\n\tgetScene() {\n\t\treturn this.__getCollectionParent();\n\t}\n\n\t/**\n\t * Returns true if the entity is enabled.\n\t * @returns {boolean}\n\t */\n\tisEnabled() {\n\t\treturn this._enabled && !this._disabledByAncestor;\n\t}\n\n\t/**\n\t * Gets the flag that says whether any ancestor is disabled, making this disabled.\n\t * @returns {boolean}\n\t */\n\tisDisabledByAncestor() {\n\t\treturn this._disabledByAncestor;\n\t}\n\n\t/**\n\t * Sets whether the entity is enabled or not. Affects visibility and updating\n\t * of all components and controllers. Does not include children.\n\t * @param {boolean} enabled\n\t */\n\tsetEnabled(enabled) {\n\t\t// If the flag has changed.\n\t\tif (this._enabled !== enabled) {\n\t\t\t// Update the flag.\n\t\t\tthis._enabled = enabled;\n\t\t\t// Update the components and children's disabledByAncestor flags.\n\t\t\tthis._updateEnabled();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the enabled flag after its been set.\n\t * @private\n\t */\n\t_updateEnabled() {\n\t\t// Update the component load states, which depends on the entity's enabled flag.\n\t\tfor (let i = 0; i < this._components.size; i++) {\n\t\t\tthis._components.get(i).__updateLoadState();\n\t\t}\n\t\t// Update the children.\n\t\tfor (let i = 0, l = this._children.length; i < l; i++) {\n\t\t\tthis._children[i]._updateDisabledByAncestor();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the disabledByAncestor flag.\n\t * @private\n\t */\n\t_updateDisabledByAncestor() {\n\t\t// Check if any ancestor is disabled.\n\t\tlet newDisabledByAncestor = false;\n\t\tlet ancestor = this._parent;\n\t\twhile (ancestor !== null) {\n\t\t\tif (!ancestor._enabled || ancestor._disabledByAncestor) {\n\t\t\t\tnewDisabledByAncestor = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tancestor = ancestor._parent;\n\t\t}\n\t\t// If the disabledByAncestor flag has changed, update it and its children.\n\t\tif (this._disabledByAncestor !== newDisabledByAncestor) {\n\t\t\t// Update the flag.\n\t\t\tthis._disabledByAncestor = newDisabledByAncestor;\n\t\t\t// Update the components and children's disabledByAncestor flags.\n\t\t\tthis._updateEnabled();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the entity item has been destroyed.\n\t * @returns {boolean}\n\t */\n\tisDestroyed() {\n\t\treturn this._destroyed;\n\t}\n\n\t// POSITION, ORIENTATION, ETC\n\n\t/**\n\t * Gets the position (frozen).\n\t * @returns {Vector3}\n\t */\n\tgetPosition() {\n\t\treturn this._state.position;\n\t}\n\n\t/**\n\t * Sets the position. Called by controllers when they set the position of the entity.\n\t * @param {Vector3} position - the value to set\n\t */\n\tsetPosition(position) {\n\t\tthis._state.position.thaw();\n\t\tthis._state.position.copy(position);\n\t\tthis._state.position.freeze();\n\t}\n\n\t/**\n\t * Gets the velocity (frozen).\n\t * @returns {Vector3}\n\t */\n\tgetVelocity() {\n\t\treturn this._state.velocity;\n\t}\n\n\t/**\n\t * Sets the velocity. Called by controllers when they set the velocity of the entity.\n\t * @param {Vector3} velocity - the value to set\n\t */\n\tsetVelocity(velocity) {\n\t\tthis._state.velocity.thaw();\n\t\tthis._state.velocity.copy(velocity);\n\t\tthis._state.velocity.freeze();\n\t}\n\n\t/**\n\t * Gets the orientation (frozen).\n\t * @returns {Quaternion}\n\t */\n\tgetOrientation() {\n\t\treturn this._state.orientation;\n\t}\n\n\t/**\n\t * Sets the orientation. Called by controllers when they set the orientation of the entity.\n\t * @param {Quaternion} orientation - the value to set\n\t */\n\tsetOrientation(orientation) {\n\t\tthis._state.orientation.thaw();\n\t\tthis._state.orientation.copy(orientation);\n\t\tthis._state.orientation.freeze();\n\t}\n\n\t/**\n\t * Gets the rotational velocity (frozen).\n\t * @returns {Vector3}\n\t */\n\tgetAngularVelocity() {\n\t\treturn this._state.angularVelocity;\n\t}\n\n\t/**\n\t * Sets the rotational velocity. Called by controllers when they set the rotational velocity of the entity.\n\t * @param {Vector3} angularVelocity - the value to set\n\t */\n\tsetAngularVelocity(angularVelocity) {\n\t\tthis._state.angularVelocity.thaw();\n\t\tthis._state.angularVelocity.copy(angularVelocity);\n\t\tthis._state.angularVelocity.freeze();\n\t}\n\n\t/**\n\t * Gets the position on the previous frame.\n\t * @returns {Vector3}\n\t */\n\tgetLastPosition() {\n\t\treturn this._lastState.position;\n\t}\n\n\t/**\n\t * Gets the velocity on the previous frame.\n\t * @returns {Vector3}\n\t */\n\tgetLastVelocity() {\n\t\treturn this._lastState.velocity;\n\t}\n\n\t/**\n\t * Gets the orientation on the previous frame.\n\t * @returns {Quaternion}\n\t */\n\tgetLastOrientation() {\n\t\treturn this._lastState.orientation;\n\t}\n\n\t/**\n\t * Gets the angular velocity on the previous frame.\n\t * @returns {Vector3}\n\t */\n\tgetLastAngularVelocity() {\n\t\treturn this._lastState.angularVelocity;\n\t}\n\n\t/**\n\t * Gets the position given in this frame relative to the given entity.\n\t * @param {Vector3} outPosition - the result\n\t * @param {Vector3} positionInThisFrame - the position in this frame\n\t * @param {Entity} entity - the entity. If null, defaults to the root.\n\t * @param {number} [time] - an optional time to use.\n\t */\n\tgetPositionRelativeToEntity(outPosition, positionInThisFrame, entity, time) {\n\t\t/**\n\t\t * @type {Entity}\n\t\t */\n\t\tlet e = this;\n\t\toutPosition.copy(positionInThisFrame);\n\t\tif (time === undefined) {\n\t\t\tconst lca = this.getLowestCommonAncestor(entity);\n\t\t\tif (lca === null) {\n\t\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toutPosition.add(outPosition, e.getPosition());\n\t\t\twhile (e !== lca) {\n\t\t\t\te = e.getParent();\n\t\t\t\toutPosition.add(outPosition, e.getPosition());\n\t\t\t}\n\t\t\tif (entity !== null) {\n\t\t\t\te = entity;\n\t\t\t\toutPosition.sub(outPosition, e.getPosition());\n\t\t\t\twhile (e !== lca) {\n\t\t\t\t\te = e.getParent();\n\t\t\t\t\toutPosition.sub(outPosition, e.getPosition());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse { // A specific time was requested.\n\t\t\tconst scene = this.getScene();\n\t\t\tconst ePosition = Vector3.pool.get();\n\t\t\tconst lca = this.getLowestCommonAncestorAtTime(entity, time);\n\t\t\tif (lca !== null) {\n\t\t\t\te.getPositionAtTime(ePosition, time);\n\t\t\t\toutPosition.add(outPosition, ePosition);\n\t\t\t\twhile (e !== lca) {\n\t\t\t\t\tconst eName = e.getParentAtTime(time);\n\t\t\t\t\te = scene.getEntity(eName);\n\t\t\t\t\tif (e === null) {\n\t\t\t\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\te.getPositionAtTime(ePosition, time);\n\t\t\t\t\toutPosition.add(outPosition, ePosition);\n\t\t\t\t}\n\t\t\t\tif (entity !== null) {\n\t\t\t\t\te = entity;\n\t\t\t\t\te.getPositionAtTime(ePosition, time);\n\t\t\t\t\toutPosition.sub(outPosition, ePosition);\n\t\t\t\t\twhile (e !== lca) {\n\t\t\t\t\t\tconst eName = e.getParentAtTime(time);\n\t\t\t\t\t\te = scene.getEntity(eName);\n\t\t\t\t\t\tif (e === null) {\n\t\t\t\t\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.getPositionAtTime(ePosition, time);\n\t\t\t\t\t\toutPosition.sub(outPosition, ePosition);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutPosition.copy(Vector3.NaN);\n\t\t\t}\n\t\t\tVector3.pool.release(ePosition);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the velocity given in this frame relative to the given entity.\n\t * @param {Vector3} outVelocity - the result\n\t * @param {Vector3} velocityInThisFrame - the velocity in this frame\n\t * @param {Entity} entity - the entity. If null, defaults to the root.\n\t * @param {number} [time] - an optional time to use.\n\t */\n\tgetVelocityRelativeToEntity(outVelocity, velocityInThisFrame, entity, time) {\n\t\t/**\n\t\t * @type {Entity}\n\t\t */\n\t\tlet e = this;\n\t\toutVelocity.copy(velocityInThisFrame);\n\t\tif (time === undefined) {\n\t\t\tconst lca = this.getLowestCommonAncestor(entity);\n\t\t\tif (lca === null) {\n\t\t\t\toutVelocity.copy(Vector3.NaN);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toutVelocity.add(outVelocity, e.getVelocity());\n\t\t\twhile (e !== lca) {\n\t\t\t\te = e.getParent();\n\t\t\t\toutVelocity.add(outVelocity, e.getVelocity());\n\t\t\t}\n\t\t\tif (entity !== null) {\n\t\t\t\te = entity;\n\t\t\t\toutVelocity.sub(outVelocity, e.getVelocity());\n\t\t\t\twhile (e !== lca) {\n\t\t\t\t\te = e.getParent();\n\t\t\t\t\toutVelocity.sub(outVelocity, e.getVelocity());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse { // A specific time was requested.\n\t\t\tconst scene = this.getScene();\n\t\t\tconst eVelocity = Vector3.pool.get();\n\t\t\tconst lca = this.getLowestCommonAncestorAtTime(entity, time);\n\t\t\tif (lca !== null) {\n\t\t\t\te.getVelocityAtTime(eVelocity, time);\n\t\t\t\toutVelocity.add(outVelocity, eVelocity);\n\t\t\t\twhile (e !== lca) {\n\t\t\t\t\tconst eName = e.getParentAtTime(time);\n\t\t\t\t\te = scene.getEntity(eName);\n\t\t\t\t\tif (e === null) {\n\t\t\t\t\t\toutVelocity.copy(Vector3.NaN);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\te.getVelocityAtTime(eVelocity, time);\n\t\t\t\t\toutVelocity.add(outVelocity, eVelocity);\n\t\t\t\t}\n\t\t\t\tif (entity !== null) {\n\t\t\t\t\te = entity;\n\t\t\t\t\te.getVelocityAtTime(eVelocity, time);\n\t\t\t\t\toutVelocity.sub(outVelocity, eVelocity);\n\t\t\t\t\twhile (e !== lca) {\n\t\t\t\t\t\tconst eName = e.getParentAtTime(time);\n\t\t\t\t\t\te = scene.getEntity(eName);\n\t\t\t\t\t\tif (e === null) {\n\t\t\t\t\t\t\toutVelocity.copy(Vector3.NaN);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.getVelocityAtTime(eVelocity, time);\n\t\t\t\t\t\toutVelocity.sub(outVelocity, eVelocity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutVelocity.copy(Vector3.NaN);\n\t\t\t}\n\t\t\tVector3.pool.release(eVelocity);\n\t\t}\n\t}\n\n\t/**\n\t * Sets outPosition to the entity position at the given time. If the time is omitted, the current time is used.\n\t * @param {Vector3} outPosition\n\t * @param {number} [time]\n\t */\n\tgetPositionAtTime(outPosition, time) {\n\t\tif (!this.isEnabled()) {\n\t\t\toutPosition.set(Number.NaN, Number.NaN, Number.NaN);\n\t\t}\n\t\telse {\n\t\t\tif (time === undefined || this._controllers.size === 0) {\n\t\t\t\toutPosition.copy(this._state.position);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutPosition.set(Number.NaN, Number.NaN, Number.NaN);\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._controllers.size; i++) {\n\t\t\t\tconst controller = this._controllers.get(i);\n\t\t\t\tif (controller.hasModifiedState('position') && controller.getCoverage().contains(time) && controller.isEnabled()) {\n\t\t\t\t\tcontroller.__updatePositionAtTime(outPosition, time);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets outVelocity to the entity velocity at the given time. If the time is omitted, the current time is used.\n\t * @param {Vector3} outVelocity\n\t * @param {number} [time]\n\t */\n\tgetVelocityAtTime(outVelocity, time) {\n\t\tif (!this.isEnabled()) {\n\t\t\toutVelocity.set(Number.NaN, Number.NaN, Number.NaN);\n\t\t}\n\t\telse {\n\t\t\tif (time === undefined || this._controllers.size === 0) {\n\t\t\t\toutVelocity.copy(this._state.velocity);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutVelocity.set(Number.NaN, Number.NaN, Number.NaN);\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._controllers.size; i++) {\n\t\t\t\tconst controller = this._controllers.get(i);\n\t\t\t\tif (controller.hasModifiedState('velocity') && controller.getCoverage().contains(time) && controller.isEnabled()) {\n\t\t\t\t\tcontroller.__updateVelocityAtTime(outVelocity, time);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets outOrientation to the entity orientation at the given time. If the time is omitted, the current time is used.\n\t * @param {Quaternion} outOrientation - the orientation to be set\n\t * @param {number} [time] - the time to check\n\t */\n\tgetOrientationAtTime(outOrientation, time) {\n\t\tif (!this.isEnabled()) {\n\t\t\toutOrientation.set(Number.NaN, Number.NaN, Number.NaN, Number.NaN);\n\t\t}\n\t\telse {\n\t\t\tif (time === undefined || this._controllers.size === 0) {\n\t\t\t\toutOrientation.copy(this._state.orientation);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutOrientation.set(Number.NaN, Number.NaN, Number.NaN, Number.NaN);\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._controllers.size; i++) {\n\t\t\t\tconst controller = this._controllers.get(i);\n\t\t\t\tif (controller.hasModifiedState('orientation') && controller.getCoverage().contains(time) && controller.isEnabled()) {\n\t\t\t\t\tcontroller.__updateOrientationAtTime(outOrientation, time);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// RADII\n\n\t/**\n\t * Gets the occlusion radius of the entity. For non-spherical entities, this is a rough approximation of the bulk of the entity.\n\t * @returns {number}\n\t */\n\tgetOcclusionRadius() {\n\t\treturn this._occlusionRadius;\n\t}\n\n\t/**\n\t * Gets the extents radius of the entity. For non-spherical entities, this is how far any part of the entity extends.\n\t * @returns {number}\n\t */\n\tgetExtentsRadius() {\n\t\treturn this._extentsRadius;\n\t}\n\n\t/**\n\t * Sets the radius of the entity. For non-spherical entities, this is a rough approximation of the bulk of the entity.\n\t * @param {number} radius - the value to set\n\t */\n\tsetOcclusionRadius(radius) {\n\t\tthis._occlusionRadius = radius;\n\t}\n\n\t/**\n\t * Sets the radius of the entity. For non-spherical entities, this is how far any part of the entity extends.\n\t * @param {number} radius - the value to set\n\t */\n\tsetExtentsRadius(radius) {\n\t\tthis._extentsRadius = radius;\n\t}\n\n\t// COVERAGE\n\n\t/**\n\t * Gets the position coverage of the entity's controllers. If there are no position coverages, it returns an infinite coverage.\n\t * @returns {Interval}\n\t */\n\tgetPositionCoverage() {\n\t\treturn this._positionCoverage;\n\t}\n\n\t/**\n\t * Gets the orientation coverage of the entity's controllers. If there are no orientation coverages, it returns an infinite coverage.\n\t * @returns {Interval}\n\t */\n\tgetOrientationCoverage() {\n\t\treturn this._orientationCoverage;\n\t}\n\n\t/**\n\t * Gets the flag that is true if the entity's position coverage contains the current time.\n\t * @returns {boolean}\n\t */\n\tisInPositionCoverage() {\n\t\treturn this._isInPositionCoverage;\n\t}\n\n\t/**\n\t * Gets flag that is true if the entity's orientation coverage contains the current time.\n\t * @returns {boolean}\n\t */\n\tisInOrientationCoverage() {\n\t\treturn this._isInOrientationCoverage;\n\t}\n\n\t/**\n\t * Copies the current state to the last state.\n\t * @internal\n\t */\n\t__updateLastState() {\n\t\tthis._lastState.position.thaw();\n\t\tthis._lastState.position.copy(this._state.position);\n\t\tthis._lastState.position.freeze();\n\n\t\tthis._lastState.velocity.thaw();\n\t\tthis._lastState.velocity.copy(this._state.velocity);\n\t\tthis._lastState.velocity.freeze();\n\n\t\tthis._lastState.orientation.thaw();\n\t\tthis._lastState.orientation.copy(this._state.orientation);\n\t\tthis._lastState.orientation.freeze();\n\n\t\tthis._lastState.angularVelocity.thaw();\n\t\tthis._lastState.angularVelocity.copy(this._state.angularVelocity);\n\t\tthis._lastState.angularVelocity.freeze();\n\t}\n\n\t/**\n\t * Updates the position and orientation coverage of the entity from the controllers.\n\t * @internal\n\t */\n\t__updateCoverage() {\n\n\t\t// Thaw the coverages.\n\t\tthis._positionCoverage.thaw();\n\t\tthis._orientationCoverage.thaw();\n\n\t\t// Initially set them to be no coverage.\n\t\tthis._positionCoverage.set(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\t\tthis._orientationCoverage.set(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\n\t\t// Go through each controller and union the coverages for position and orientation.\n\t\tlet numPositionControllers = 0;\n\t\tlet numOrientationControllers = 0;\n\t\tfor (let i = 0; i < this._controllers.size; i++) {\n\t\t\tconst controller = this._controllers.get(i);\n\t\t\tif (controller.isEnabled()) {\n\t\t\t\tif (controller.hasModifiedState('position')) {\n\t\t\t\t\tthis._positionCoverage.union(this._positionCoverage, controller.getCoverage());\n\t\t\t\t\tnumPositionControllers++;\n\t\t\t\t}\n\t\t\t\tif (controller.hasModifiedState('orientation')) {\n\t\t\t\t\tthis._orientationCoverage.union(this._orientationCoverage, controller.getCoverage());\n\t\t\t\t\tnumOrientationControllers++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If there are no coverages, set them to infinity.\n\t\tif (numPositionControllers === 0) {\n\t\t\tthis._positionCoverage.set(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\t}\n\t\tif (numOrientationControllers === 0) {\n\t\t\tthis._orientationCoverage.set(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\t}\n\n\t\t// Also limit to the position coverage parenting table coverages.\n\t\tif (this._parentingTable.length > 0) {\n\t\t\tconst firstEntry = this._parentingTable[0];\n\t\t\tconst lastEntry = this._parentingTable[this._parentingTable.length - 1];\n\t\t\tthis._positionCoverage.min = Math.max(this._positionCoverage.min, firstEntry[1] !== '' ? firstEntry[0] : Number.POSITIVE_INFINITY);\n\t\t\tthis._positionCoverage.max = Math.min(this._positionCoverage.max, lastEntry[1] !== '' ? Number.POSITIVE_INFINITY : lastEntry[0]);\n\t\t}\n\n\t\t// Refreeze the coverages.\n\t\tthis._positionCoverage.freeze();\n\t\tthis._orientationCoverage.freeze();\n\t}\n\n\t// OCCLUSION\n\n\t/**\n\t * Returns whether the entity can occlude objects in the occlusion system. Returns true by default.\n\t * @returns {boolean}\n\t */\n\tcanOcclude() {\n\t\treturn this._canOcclude;\n\t}\n\n\t/**\n\t * Sets whether the entity can occlude objects in the occlusion system.\n\t * @param {boolean} canOcclude\n\t */\n\tsetCanOcclude(canOcclude) {\n\t\tthis._canOcclude = canOcclude;\n\t}\n\n\t/**\n\t * Returns true if the entity is occluding the camera-space position.\n\t * @param {CameraComponent} camera\n\t * @param {Vector3} cameraSpacePosition\n\t * @returns {boolean}\n\t */\n\tisOccludingPosition(camera, cameraSpacePosition) {\n\t\tif (!this._canOcclude || !this.isInPositionCoverage()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst occludingRadius = Math.min(this._occlusionRadius, this.getCameraSpacePosition(camera).magnitude());\n\t\tconst interval = Interval.pool.get();\n\t\tGeometry.getLineSphereIntersectionWithLineStartAtOrigin(interval, cameraSpacePosition, this.getCameraSpacePosition(camera), occludingRadius);\n\t\tconst occluding = interval.min < interval.max && (0 <= interval.min + interval.max) && (interval.min + interval.max < 2);\n\t\tInterval.pool.release(interval);\n\t\treturn occluding;\n\t}\n\n\t// PARENTING\n\n\t/**\n\t * Gets the parent of the entity.\n\t * If the parent has been set but is not yet in the scene, it returns null.\n\t * @returns {Entity}\n\t */\n\tgetParent() {\n\t\treturn this._parent;\n\t}\n\n\t/**\n\t * Gets the parent name of the entity at the given time.\n\t * @param {number} time\n\t * @returns {string}\n\t */\n\tgetParentAtTime(time) {\n\t\tconst index = Sort.getIndex(time, this._parentingTable, isStartTimeLessThanTime);\n\t\tif (index < this._parentingTable.length && time === this._parentingTable[index][0]) {\n\t\t\treturn this._parentingTable[index][1];\n\t\t}\n\t\telse if (index > 0) {\n\t\t\treturn this._parentingTable[index - 1][1];\n\t\t}\n\t\telse {\n\t\t\tif (this._parentingTable.length > 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\telse { // There's no parenting table, so just choose the current parent, or '' if there's none.\n\t\t\t\treturn this._parent !== null ? this._parent.getName() : '';\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the parent of the entity.\n\t * @param {Entity} parent - the new parent or its name\n\t */\n\tsetParent(parent) {\n\t\t// If it already set, just return.\n\t\tif (parent === this._parent) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the position stays the same relative to the new parent.\n\t\tconst position = Vector3.pool.get();\n\t\tthis.getPositionRelativeToEntity(position, Vector3.Zero, parent);\n\t\tif (!position.isNaN()) {\n\t\t\tthis.setPosition(position);\n\t\t}\n\t\tVector3.pool.release(position);\n\n\t\t// Remove the old parent's child link.\n\t\tif (this._parent !== null) {\n\t\t\tfor (let i = 0; i < this._parent._children.length; i++) {\n\t\t\t\tconst child = this._parent._children[i];\n\t\t\t\tif (child === this) {\n\t\t\t\t\tthis._parent._children.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Change to the new parent, saving the old parent for the callbacks.\n\t\tconst oldParent = this._parent;\n\t\tthis._parent = parent;\n\n\t\t// Add the new parent's child link.\n\t\tif (this._parent !== null) {\n\t\t\tthis._parent._children.push(this);\n\t\t}\n\n\t\t// Clear the camera references of the entity and all of its descendants components,\n\t\t// since with a new parent, it might have a new set of connected cameras.\n\t\t// The prepareForRender and setCameraDependentVariables functions will enable them again in any connected camera.\n\t\tthis._clearCameraReferences();\n\n\t\t// Update the disabledByAncestors flag.\n\t\tthis._updateDisabledByAncestor();\n\n\t\t// Call any parent changed callbacks.\n\t\tfor (let i = 0, l = this._parentChangedCallbacks.length; i < l; i++) {\n\t\t\tthis._parentChangedCallbacks[i](this, oldParent, this._parent);\n\t\t}\n\n\t\t// Call any child changed callbacks for the old and new parents.\n\t\tif (oldParent !== null) {\n\t\t\tfor (let i = 0, l = oldParent._childChangedCallbacks.length; i < l; i++) {\n\t\t\t\toldParent._childChangedCallbacks[i](oldParent, this, false);\n\t\t\t}\n\t\t}\n\t\tif (this._parent !== null) {\n\t\t\tfor (let i = 0, l = this._parent._childChangedCallbacks.length; i < l; i++) {\n\t\t\t\tthis._parent._childChangedCallbacks[i](this._parent, this, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clears the camera references for when an entity changes its parent and may be visible in a new camera or no camera.\n\t * The variables will repopulate with any camera that calls the prepareForRender and updateCameraVariables functions.\n\t * @private\n\t */\n\t_clearCameraReferences() {\n\t\t// Clear all of the camera dependent variables to be repopulated again.\n\t\tthis._cameraSpacePosition.clear();\n\t\tthis._normalSpacePosition.clear();\n\t\tthis._pixelSpacePosition.clear();\n\t\tthis._normalSpaceExtentsRadius.clear();\n\t\tthis._pixelSpaceExtentsRadius.clear();\n\n\t\t// Do the same for components, and also make them invisible until a camera tries to render them again in prepareForRender.\n\t\tfor (let i = 0, l = this._components.size; i < l; i++) {\n\t\t\tconst component = this._components.get(i);\n\t\t\tcomponent.__clearCameraDependentsBase();\n\t\t}\n\n\t\t// Do this for all of the descendants as well.\n\t\tfor (let i = 0, l = this._children.length; i < l; i++) {\n\t\t\tthis._children[i]._clearCameraReferences();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the number of child entities. Good for iterating over child entities.\n\t * @return {number}\n\t */\n\tgetNumChildren() {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Gets the child entity at index i. Good for iterating over child entities.\n\t * @param {number} i - the index\n\t * @returns {Entity}\n\t */\n\tgetChild(i) {\n\t\treturn this._children[i];\n\t}\n\n\t/**\n\t * Gets the lowest common ancestor between this and another entity.\n\t * @param {Entity} entity\n\t * @returns {Entity}\n\t */\n\tgetLowestCommonAncestor(entity) {\n\t\tif (entity === null) {\n\t\t\treturn null;\n\t\t}\n\t\tlet entityThis = /** @type {Entity} */(this);\n\t\tlet entityOther = entity;\n\t\tlet levelThis = 0;\n\t\tlet levelOther = 0;\n\t\t// Get the levels of the two entities relative to the root.\n\t\twhile (entityThis.getParent() !== null) {\n\t\t\tlevelThis += 1;\n\t\t\tentityThis = entityThis.getParent();\n\t\t}\n\t\twhile (entityOther.getParent() !== null) {\n\t\t\tlevelOther += 1;\n\t\t\tentityOther = entityOther.getParent();\n\t\t}\n\t\t// Whichever has the greatest level depth, move up to have the same level as the least level depth.\n\t\tentityThis = this;\n\t\tentityOther = entity;\n\t\twhile (levelThis > levelOther) {\n\t\t\tlevelThis -= 1;\n\t\t\tentityThis = entityThis.getParent();\n\t\t}\n\t\twhile (levelOther > levelThis) {\n\t\t\tlevelOther -= 1;\n\t\t\tentityOther = entityOther.getParent();\n\t\t}\n\t\t// Move up the ancestors for both until a common ancestor is found.\n\t\twhile (entityThis !== entityOther && entityThis !== null) {\n\t\t\tentityThis = entityThis.getParent();\n\t\t\tentityOther = entityOther.getParent();\n\t\t}\n\t\treturn entityThis; // If they didn't have a common ancestor, this will correctly be null.\n\t}\n\n\t/**\n\t * Gets the lowest common ancestor between this and another entity at a given time.\n\t * @param {Entity} entity\n\t * @param {number} time\n\t * @returns {Entity}\n\t */\n\tgetLowestCommonAncestorAtTime(entity, time) {\n\t\tif (entity === null) {\n\t\t\treturn null;\n\t\t}\n\t\tlet entityThis = /** @type {Entity} */(this);\n\t\tlet entityOther = entity;\n\t\tlet levelThis = 0;\n\t\tlet levelOther = 0;\n\t\tconst scene = this.getScene();\n\t\t// Get the levels of the two entities relative to the root.\n\t\twhile (true) {\n\t\t\tconst parentName = entityThis.getParentAtTime(time);\n\t\t\tif (parentName === '') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst parent = scene.getEntity(parentName);\n\t\t\tif (parent === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlevelThis += 1;\n\t\t\tentityThis = parent;\n\t\t}\n\t\twhile (true) {\n\t\t\tconst parentName = entityOther.getParentAtTime(time);\n\t\t\tif (parentName === '') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst parent = scene.getEntity(parentName);\n\t\t\tif (parent === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlevelOther += 1;\n\t\t\tentityOther = parent;\n\t\t}\n\t\t// Whichever has the greatest level depth, move up to have the same level as the least level depth.\n\t\tentityThis = this;\n\t\tentityOther = entity;\n\t\twhile (levelThis > levelOther) {\n\t\t\tlevelThis -= 1;\n\t\t\tconst parentName = entityThis.getParentAtTime(time);\n\t\t\tconst parent = scene.getEntity(parentName);\n\t\t\tif (parent === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tentityThis = parent;\n\t\t}\n\t\twhile (levelOther > levelThis) {\n\t\t\tlevelOther -= 1;\n\t\t\tconst parentName = entityOther.getParentAtTime(time);\n\t\t\tconst parent = scene.getEntity(parentName);\n\t\t\tif (parent === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tentityOther = parent;\n\t\t}\n\t\t// Move up the ancestors for both until a common ancestor is found.\n\t\twhile (entityThis !== entityOther && entityThis !== null) {\n\t\t\tconst parentThisName = entityThis.getParentAtTime(time);\n\t\t\tconst parentThis = scene.getEntity(parentThisName);\n\t\t\tif (parentThis === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tentityThis = parentThis;\n\t\t\tconst parentOtherName = entityOther.getParentAtTime(time);\n\t\t\tconst parentOther = scene.getEntity(parentOtherName);\n\t\t\tif (parentOther === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tentityOther = parentOther;\n\t\t}\n\t\treturn entityThis; // If they didn't have a common ancestor, this will correctly be null.\n\t}\n\n\t/**\n\t * Gets the number of parenting table entries. Can be used for a `for` loop.\n\t * @returns {number}\n\t */\n\tgetNumParentingTableEntries() {\n\t\treturn this._parentingTable.length;\n\t}\n\n\t/**\n\t * Gets a parenting table entry.\n\t * @param {number} index\n\t * @returns {readonly [number, string]}\n\t */\n\tgetParentingTableEntry(index) {\n\t\treturn this._parentingTable[index];\n\t}\n\n\t/**\n\t * Adds an entry to the parenting table.\n\t * @param {number} startTime - The starting time of the interval. The next entry will denote the ending time.\n\t * @param {string} parentName - The name of the parent for the interval.\n\t */\n\taddParentingTableEntry(startTime, parentName) {\n\t\tSort.add([startTime, parentName], this._parentingTable, isStartTimeLess, isStartTimeEqual);\n\t\tthis.__updateCoverage();\n\t}\n\n\t/**\n\t * Removes an entry from the parenting table.\n\t * @param {number} index\n\t */\n\tremoveParentingTableEntry(index) {\n\t\tthis._parentingTable.splice(index);\n\t\tthis.__updateCoverage();\n\t}\n\n\t/**\n\t* Clears all entries from the parenting table.\n\t*/\n\tclearParentingTableEntries() {\n\t\tthis._parentingTable = [];\n\t\tthis.__updateCoverage();\n\t}\n\n\t/**\n\t * Adds a parent changed callback.\n\t * @param {(entity: Entity, oldParent: Entity, newParent: Entity) => void} callback\n\t */\n\taddParentChangedCallback(callback) {\n\t\tthis._parentChangedCallbacks.push(callback);\n\t}\n\n\t/**\n\t * Removes a parent changed callback.\n\t * @param {(entity: Entity, oldParent: Entity, newParent: Entity) => void} callback\n\t */\n\tremoveParentChangedCallback(callback) {\n\t\tconst index = this._parentChangedCallbacks.indexOf(callback);\n\t\tif (index !== -1) {\n\t\t\tthis._parentChangedCallbacks.splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a child changed callback.\n\t * @param {(entity: Entity, child: Entity, added: boolean) => void} callback\n\t */\n\taddChildChangedCallback(callback) {\n\t\tthis._childChangedCallbacks.push(callback);\n\t}\n\n\t/**\n\t * Removes a child changed callback.\n\t * @param {(entity: Entity, child: Entity, added: boolean) => void} callback\n\t */\n\tremoveChildChangedCallback(callback) {\n\t\tconst index = this._childChangedCallbacks.indexOf(callback);\n\t\tif (index !== -1) {\n\t\t\tthis._childChangedCallbacks.splice(index, 1);\n\t\t}\n\t}\n\n\t// COMPONENTS\n\n\t/**\n\t * Gets the number of components.\n\t * @returns {number}\n\t */\n\tgetNumComponents() {\n\t\treturn this._components.size;\n\t}\n\n\t/**\n\t * Gets the component from either the name or the index. It returns null if the component is not found.\n\t * @param {string|number} nameOrIndex\n\t * @returns {BaseComponent | null}\n\t */\n\tgetComponent(nameOrIndex) {\n\t\treturn this._components.get(nameOrIndex);\n\t}\n\n\t/**\n\t * Gets the index'th component of the given type. The index is base 0. Returns null if none is found.\n\t * @param {string} type\n\t * @param {number} [index=0]\n\t * @returns {BaseComponent | null}\n\t */\n\tgetComponentByType(type, index = 0) {\n\t\treturn this._components.getByType(type, index);\n\t}\n\n\t/**\n\t * Gets the index'th component of the given type. The index is base 0. Returns null if none is found.\n \t * @template {BaseComponent} Class\n\t * @param {import('../utils/collection').TypeConstructor<Class, Entity>} ComponentClass\n\t * @param {number} [index=0]\n\t * @returns {Class | null}\n\t */\n\tgetComponentByClass(ComponentClass, index = 0) {\n\t\treturn this._components.getByClass(ComponentClass, index);\n\t}\n\n\t/**\n\t * Adds a component.\n\t * @param {string} type - type of the component\n\t * @param {string} [name=''] - name of the component (optional)\n\t * @param {BaseComponent} [beforeComponent=undefined] - insert before this component (optional)\n\t * @returns {BaseComponent}\n\t */\n\taddComponent(type, name, beforeComponent) {\n\t\treturn this._components.add(type, name, beforeComponent);\n\t}\n\n\t/**\n\t * Create an item using with the given name and return it.\n\t * @template {BaseComponent} Class\n\t * @param {import('../utils/collection').TypeConstructor<Class, Entity>} ClassConstructor\n\t * @param {string} [name=''] - the name of the item to be created\n\t * @param {BaseComponent} [beforeComponent] - insert the item before this item\n\t * @returns {Class}\n\t */\n\taddComponentByClass(ClassConstructor, name, beforeComponent) {\n\t\treturn this._components.addByClass(ClassConstructor, name, beforeComponent);\n\t}\n\n\t/**\n\t * Removes a component.\n\t * @param {BaseComponent|string|number} componentOrNameOrIndex - the component, name, or index to remove.\n\t */\n\tremoveComponent(componentOrNameOrIndex) {\n\t\tthis._components.remove(componentOrNameOrIndex);\n\t}\n\n\t/**\n\t * Removes all components.\n\t */\n\tclearComponents() {\n\t\tthis._components.clear();\n\t}\n\n\t// CONTROLLERS\n\n\t/**\n\t * Gets the number of controllers.\n\t * @returns {number}\n\t */\n\tgetNumControllers() {\n\t\treturn this._controllers.size;\n\t}\n\n\t/**\n\t * Gets the controller from either the name or the index. It returns null if the controller is not found.\n\t * @param {string|number} nameOrIndex\n\t * @returns {BaseController | null}\n\t */\n\tgetController(nameOrIndex) {\n\t\treturn this._controllers.get(nameOrIndex);\n\t}\n\n\t/**\n\t * Gets the index'th controller of the given type. The index is base 0. Returns null if none is found.\n\t * @param {string} type\n\t * @param {number} [index=0]\n\t * @returns {BaseController | null}\n\t */\n\tgetControllerByType(type, index = 0) {\n\t\treturn this._controllers.getByType(type, index);\n\t}\n\n\t/**\n\t * Gets the index'th controller of the given type. The index is base 0. Returns null if none is found.\n \t * @template {BaseController} Class\n\t * @param {import('../utils/collection').TypeConstructor<Class, Entity>} ControllerClass\n\t * @param {number} [index=0]\n\t * @returns {Class | null}\n\t */\n\tgetControllerByClass(ControllerClass, index = 0) {\n\t\treturn this._controllers.getByClass(ControllerClass, index);\n\t}\n\n\t/**\n\t * Adds a controller.\n\t * @param {string} type - type of the controller\n\t * @param {string} [name=''] - name of the controller (optional)\n\t * @param {BaseController} [beforeController=undefined] - insert before this controller (optional)\n\t * @returns {BaseController}\n\t */\n\taddController(type, name, beforeController) {\n\t\tconst controller = this._controllers.add(type, name, beforeController);\n\t\tthis.__updateCoverage();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Create an item using with the given name and return it.\n\t * @template {BaseController} Class\n\t * @param {import('../utils/collection').TypeConstructor<Class, Entity>} ClassConstructor\n\t * @param {string} [name=''] - the name of the item to be created\n\t * @param {BaseController} [beforeController] - insert the item before this item\n\t * @returns {Class}\n\t */\n\taddControllerByClass(ClassConstructor, name, beforeController) {\n\t\treturn this._controllers.addByClass(ClassConstructor, name, beforeController);\n\t}\n\n\t/**\n\t * Removes a controller.\n\t * @param {BaseController|string|number} controllerOrNameOrIndex - the controller, name, or index to remove.\n\t */\n\tremoveController(controllerOrNameOrIndex) {\n\t\tthis._controllers.remove(controllerOrNameOrIndex);\n\t\tthis.__updateCoverage();\n\t}\n\n\t/**\n\t * Removes all controllers.\n\t */\n\tclearControllers() {\n\t\tthis._controllers.clear();\n\t\tthis.__updateCoverage();\n\t}\n\n\t// CAMERA DEPENDENT POSITION AND RADII\n\n\t/**\n\t * Gets the camera-space position relative to the camera (frozen). Returns Vector.NaN if there is no position for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {Vector3}\n\t */\n\tgetCameraSpacePosition(camera) {\n\t\tconst pos = this._cameraSpacePosition.get(camera);\n\t\tif (pos !== undefined) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn Vector3.NaN;\n\t}\n\n\t/**\n\t * Gets the normal-space position relative to the camera (frozen). Returns Vector.NaN if there is no position for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {Vector3}\n\t */\n\tgetNormalSpacePosition(camera) {\n\t\tconst pos = this._normalSpacePosition.get(camera);\n\t\tif (pos !== undefined) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn Vector3.NaN;\n\t}\n\n\t/**\n\t * Gets the pixel-space position (frozen). Returns Vector.NaN if there is no position for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {Vector2}\n\t */\n\tgetPixelSpacePosition(camera) {\n\t\tconst pos = this._pixelSpacePosition.get(camera);\n\t\tif (pos !== undefined) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn Vector2.NaN;\n\t}\n\n\t/**\n\t * Gets the normal-space occlusion radius. Returns Number.NaN if there is no occlusion radius for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {number}\n\t */\n\tgetNormalSpaceOcclusionRadius(camera) {\n\t\tif (this._extentsRadius !== 0) {\n\t\t\t// Since normal-space radii are proportional to entity-space radii,\n\t\t\t// we can just use the normal-space extents radius and multiply the factor.\n\t\t\treturn this.getNormalSpaceExtentsRadius(camera) * this._occlusionRadius / this._extentsRadius;\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the normal-space extents radius. Returns Number.NaN if there is no extents radius for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {number}\n\t */\n\tgetNormalSpaceExtentsRadius(camera) {\n\t\tconst radius = this._normalSpaceExtentsRadius.get(camera);\n\t\tif (radius !== undefined) {\n\t\t\treturn radius;\n\t\t}\n\t\telse {\n\t\t\treturn Number.NaN;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the pixel-space occlusion radius. Returns Number.NaN if there is no occlusion radius for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {number}\n\t */\n\tgetPixelSpaceOcclusionRadius(camera) {\n\t\tif (this._extentsRadius !== 0) {\n\t\t\t// Since pixel-space radii are proportional to entity-space radii,\n\t\t\t// we can just use the pixel-space extents radius and multiply the factor.\n\t\t\treturn this.getPixelSpaceExtentsRadius(camera) * this._occlusionRadius / this._extentsRadius;\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the pixel-space extents radius. Returns Number.NaN if there is no extents radius for that camera.\n\t * @param {CameraComponent} camera\n\t * @returns {number}\n\t */\n\tgetPixelSpaceExtentsRadius(camera) {\n\t\tconst radius = this._pixelSpaceExtentsRadius.get(camera);\n\t\tif (radius !== undefined) {\n\t\t\treturn radius;\n\t\t}\n\t\telse {\n\t\t\treturn Number.NaN;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the greatest pixel-space occlusion radius in all cameras.\n\t * @returns {number}\n\t */\n\tgetGreatestPixelSpaceOcclusionRadius() {\n\t\tif (this._extentsRadius !== 0) {\n\t\t\t// Since pixel-space radii are proportional to entity-space radii,\n\t\t\t// we can just use the pixel-space extents radius and multiply the factor.\n\t\t\treturn this.getGreatestPixelSpaceExtentsRadius() * this._occlusionRadius / this._extentsRadius;\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the greatest pixel-space extents radius in all cameras.\n\t * @returns {number}\n\t */\n\tgetGreatestPixelSpaceExtentsRadius() {\n\t\treturn this._greatestPixelSpaceExtentsRadius;\n\t}\n\n\t/**\n\t * Sets the camera dependent variables.\n\t * @param {CameraComponent} camera\n\t * @param {Vector3} newCameraSpacePosition\n\t * @internal\n\t */\n\t__setCameraDependentVariables(camera, newCameraSpacePosition) {\n\t\t// Get the viewport using the camera, and if none, do nothing.\n\t\tconst viewport = camera.getViewport();\n\t\tif (viewport === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do the camera-space position.\n\t\tlet cameraSpacePosition = this._cameraSpacePosition.get(camera);\n\t\tif (cameraSpacePosition === undefined) {\n\t\t\tcameraSpacePosition = new Vector3();\n\t\t\tthis._cameraSpacePosition.set(camera, cameraSpacePosition);\n\t\t}\n\t\telse {\n\t\t\tcameraSpacePosition.thaw();\n\t\t}\n\t\tcameraSpacePosition.copy(newCameraSpacePosition);\n\t\tcameraSpacePosition.freeze();\n\n\t\t// Do the normal-space position.\n\t\tlet normalSpacePosition = this._normalSpacePosition.get(camera);\n\t\tif (normalSpacePosition === undefined) {\n\t\t\tnormalSpacePosition = new Vector3();\n\t\t\tthis._normalSpacePosition.set(camera, normalSpacePosition);\n\t\t}\n\t\telse {\n\t\t\tnormalSpacePosition.thaw();\n\t\t}\n\t\tcamera.getNormalSpacePositionFromCameraSpacePosition(normalSpacePosition, cameraSpacePosition);\n\t\tnormalSpacePosition.freeze();\n\n\t\t// Do the pixel-space position.\n\t\tlet pixelSpacePosition = this._pixelSpacePosition.get(camera);\n\t\tif (pixelSpacePosition === undefined) {\n\t\t\tpixelSpacePosition = new Vector2();\n\t\t\tthis._pixelSpacePosition.set(camera, pixelSpacePosition);\n\t\t}\n\t\telse {\n\t\t\tpixelSpacePosition.thaw();\n\t\t}\n\t\tviewport.getPixelSpacePositionFromNormalSpacePosition(pixelSpacePosition, normalSpacePosition);\n\t\tpixelSpacePosition.freeze();\n\n\t\t// Do the normal-space extents radius.\n\t\tconst normalSpaceExtentsRadius = camera.getNormalSpaceRadiusFromRadius(this._extentsRadius, cameraSpacePosition.magnitude());\n\t\tthis._normalSpaceExtentsRadius.set(camera, normalSpaceExtentsRadius);\n\n\t\t// Do the pixel-space extents radius.\n\t\tconst pixelSpaceExtentsRadius = viewport.getPixelSpaceRadiusFromNormalSpaceRadius(normalSpaceExtentsRadius);\n\t\tthis._pixelSpaceExtentsRadius.set(camera, pixelSpaceExtentsRadius);\n\t}\n\n\t/**\n\t * Removes the camera from any camera-dependent variables. Called during camera clean up.\n\t * @param {CameraComponent} camera\n\t * @internal\t*/\n\t__removeCameraDependents(camera) {\n\t\tthis._cameraSpacePosition.delete(camera);\n\t\tthis._normalSpacePosition.delete(camera);\n\t\tthis._pixelSpacePosition.delete(camera);\n\t\tthis._normalSpaceExtentsRadius.delete(camera);\n\t\tthis._pixelSpaceExtentsRadius.delete(camera);\n\t\tfor (let i = 0; i < this._components.size; i++) {\n\t\t\tthis._components.get(i).__removeCameraDependentsBase(camera);\n\t\t}\n\t}\n\n\t// GET\n\n\t/**\n\t * Gets the component or controller described in the parameters. It is a shortcut function to make things easier on the user. It returns undefined if it is not found.\n\t * @param {string} componentOrControllerType - the type of the component or controller [optional]\n\t * @param {number} [componentOrControllerTypeIndex=0] - the index of the type, in case there are more than one of the same type [optional]\n\t * @returns {BaseComponent|BaseController}\n\t */\n\tget(componentOrControllerType, componentOrControllerTypeIndex = 0) {\n\t\tconst component = this._components.getByType(componentOrControllerType, componentOrControllerTypeIndex);\n\t\tif (component !== null) {\n\t\t\treturn component;\n\t\t}\n\t\telse {\n\t\t\treturn this._controllers.getByType(componentOrControllerType, componentOrControllerTypeIndex);\n\t\t}\n\t}\n\n\t// LOADING\n\n\t/**\n\t * Returns a new promise that resolves when every component is loaded.\n\t * @returns {Promise<void>}\n\t */\n\tgetLoadedPromise() {\n\t\tconst promises = [];\n\t\tif (this.isEnabled()) {\n\t\t\tfor (let i = 0; i < this._controllers.size; i++) {\n\t\t\t\tpromises.push(this._controllers.get(i).getLoadedPromise());\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._components.size; i++) {\n\t\t\t\tpromises.push(this._components.get(i).getLoadedPromise());\n\t\t\t}\n\t\t}\n\t\treturn Promise.all(promises).then();\n\t}\n\n\t/**\n\t * Converts the entity to a nice string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn this.getName();\n\t}\n\n\t// CLEANUP\n\n\t/**\n\t * Destroys the entity resources.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\t// Set the destroyed flag to true.\n\t\tthis._destroyed = true;\n\n\t\t// Call super.\n\t\tsuper.__destroy();\n\n\t\t// Disconnect all of the children from this.\n\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\tthis._children[i].setParent(null);\n\t\t}\n\t\t// Disconnect this from its parent.\n\t\tif (this._parent !== null) {\n\t\t\tthis.setParent(null);\n\t\t}\n\t\t// Destroy the controllers.\n\t\tthis._controllers.__destroy();\n\t\t// Destroy the components.\n\t\tthis._components.__destroy();\n\t}\n\n\t// MAIN LOOP FUNCTIONS\n\n\t/**\n\t * Updates the parents of the entity via the controllers.\n\t * @param {number} currentTime\n\t * @internal\n\t */\n\t__updateParent(currentTime) {\n\t\tconst parentName = this.getParentAtTime(currentTime);\n\t\tif (parentName !== '') {\n\t\t\tconst parent = this.getScene().getEntity(parentName);\n\t\t\tif (parent !== this._parent) {\n\t\t\t\tthis.setParent(parent);\n\t\t\t}\n\t\t}\n\t\telse if (this._parent !== null) {\n\t\t\tthis.setParent(null);\n\t\t}\n\n\t\tif (this._parent !== this._lastParent) {\n\t\t\t// Notify the controller dependency graph that it needs resorting.\n\t\t\tthis.getScene().getControllerDependencyGraph().needsSorting();\n\t\t\tthis._lastParent = this._parent;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the flags that are true if the entity's coverages contain the current time.\n\t * @param {number} currentTime\n\t * @internal\n\t */\n\t__updateIsInCoverages(currentTime) {\n\t\tthis._isInPositionCoverage = this._positionCoverage.contains(currentTime);\n\t\tthis._isInOrientationCoverage = this._orientationCoverage.contains(currentTime);\n\n\t\t// Update the component load states, which depends on the position and orientation coverage.\n\t\tfor (let i = 0; i < this._components.size; i++) {\n\t\t\tthis._components.get(i).__updateLoadState();\n\t\t}\n\t}\n\n\t/**\n\t * Updates the greatest pixel-space radii and the camera-non-specific parts of the components.\n\t * @internal\n\t */\n\t__updateVisuals() {\n\t\t// Update the greatest pixel extents radius for use by components and controllers.\n\t\tthis._greatestPixelSpaceExtentsRadius = 0.0;\n\t\tfor (let i = 0, l = this._pixelSpaceExtentsRadius.size; i < l; i++) {\n\t\t\tconst pixelSpaceExtentsRadius = this._pixelSpaceExtentsRadius.getAt(i).value;\n\t\t\tif (this._greatestPixelSpaceExtentsRadius < pixelSpaceExtentsRadius) {\n\t\t\t\tthis._greatestPixelSpaceExtentsRadius = pixelSpaceExtentsRadius;\n\t\t\t}\n\t\t}\n\n\t\t// Updates the camera-independent parts of the components.\n\t\tfor (let i = 0, l = this._components.size; i < l; i++) {\n\t\t\tconst component = this._components.get(i);\n\t\t\tif (component.isEnabled()) {\n\t\t\t\tcomponent.__updateBase();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * It traverses the scene graph, starting with the camera, setting the camera-space positions, and updating the occlusion.\n\t * @param {CameraComponent} camera - the camera we're rendering\n\t * @param {Entity} comingFrom - the entity we just came from\n\t * @param {boolean} comingFromChild - true if comingFrom is a child of this\n\t * @internal\n\t */\n\t__updateCameraVariables(camera, comingFrom, comingFromChild) {\n\t\tif (this.isEnabled()) {\n\t\t\t// Update this camera-space position relative to the child that we're coming from.\n\t\t\tconst cameraSpacePosition = Vector3.pool.get();\n\t\t\tif (this === camera.getEntity()) {\n\t\t\t\t// We're the camera, so we're always at the camera-space origin.\n\t\t\t\tcameraSpacePosition.set(0, 0, 0);\n\t\t\t}\n\t\t\telse if (comingFromChild) {\n\t\t\t\t// We're moving up the scene graph toward the root, so we get the child's world position and add the negative position.\n\t\t\t\tcameraSpacePosition.sub(comingFrom.getCameraSpacePosition(camera), comingFrom.getPosition());\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// We're moving down the scene graph, so we just add on the local to the parent world position.\n\t\t\t\tcameraSpacePosition.add(comingFrom.getCameraSpacePosition(camera), this._state.position);\n\t\t\t}\n\t\t\tthis.__setCameraDependentVariables(camera, cameraSpacePosition);\n\n\t\t\t// Add the entity to the occluding entities if its radius is large enough.\n\t\t\tif (this._canOcclude && this.getPixelSpaceOcclusionRadius(camera) >= 1) {\n\t\t\t\tcamera.__addToOccludingEntities(this);\n\t\t\t}\n\t\t\tVector3.pool.release(cameraSpacePosition);\n\n\t\t\t// Updates the camera-dependent parts of the components.\n\t\t\tfor (let i = 0, l = this._components.size; i < l; i++) {\n\t\t\t\tconst component = this._components.get(i);\n\t\t\t\tif (component !== camera && component.isEnabled()) {\n\t\t\t\t\tcomponent.__updateCameraVariablesBase(camera);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update the parent if we're still going up. Update the parent position.\n\t\tif (this._parent !== null && (comingFromChild || this === camera.getEntity())) {\n\t\t\tthis._parent.__updateCameraVariables(camera, this, true);\n\t\t}\n\n\t\t// Update the children.\n\t\tfor (let i = 0, l = this._children.length; i < l; i++) {\n\t\t\tconst child = this._children[i];\n\t\t\tif (child === comingFrom) {\n\t\t\t\tcontinue; // don't go back down a child that we've already updated.\n\t\t\t}\n\t\t\tchild.__updateCameraVariables(camera, this, false);\n\t\t}\n\t}\n\n\t/**\n\t * Prepares all of its components for rendering.\n\t * @param {CameraComponent} camera - the camera we're rendering\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// Prepare the components for render.\n\t\tfor (let i = 0, l = this._components.size; i < l; i++) {\n\t\t\tconst component = this._components.get(i);\n\t\t\tif (!('__render' in component)) {\n\t\t\t\tcomponent.__prepareForRenderBase(camera);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass EntityState {\n\tconstructor() {\n\t\t/**\n\t\t * The position of the entity relative to its parent's position.\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position = new Vector3(Number.NaN, Number.NaN, Number.NaN);\n\t\tthis.position.freeze();\n\n\t\t/**\n\t\t* The velocity of the entity.\n\t\t* @type {Vector3}\n\t\t*/\n\t\tthis.velocity = new Vector3(Number.NaN, Number.NaN, Number.NaN);\n\t\tthis.velocity.freeze();\n\n\t\t/**\n\t\t* The orientation of the entity. Not relative to parent.\n\t\t* @type {Quaternion}\n\t\t*/\n\t\tthis.orientation = new Quaternion(Number.NaN, Number.NaN, Number.NaN, Number.NaN);\n\t\tthis.orientation.freeze();\n\n\t\t/**\n\t\t* The rotational velocity of the entity. Not relative to parent.\n\t\t* @type {Vector3}\n\t\t*/\n\t\tthis.angularVelocity = new Vector3(Number.NaN, Number.NaN, Number.NaN);\n\t\tthis.angularVelocity.freeze();\n\t}\n}\n\n// Functions for the start time to parent list sorting.\n\n/**\n * Returns true if a < b.\n * @param {[number, string]} a\n * @param {[number, string]} b\n */\nfunction isStartTimeLess(a, b) {\n\treturn a[0] < b[0];\n}\n\n/**\n * Returns true if a === b.\n * @param {[number, string]} a\n * @param {[number, string]} b\n */\nfunction isStartTimeEqual(a, b) {\n\treturn a[0] === b[0];\n}\n\n/**\n * Returns true if a < b.\n * @param {[number, string]} a\n * @param {number} b\n */\nfunction isStartTimeLessThanTime(a, b) {\n\treturn a[0] < b;\n}\n","/** @module pioneer */\nimport {\n\tCollectionItem,\n\tEntity\n} from '../internal';\n\n/**\n * The base class for all components and controllers.\n * @extends {CollectionItem<Entity>}\n */\nexport class EntityItem extends CollectionItem {\n\t/**\n\t * Constructor.\n\t * @param {string} type - The type of the entity item.\n\t * @param {string} name - The name of the entity item.\n\t * @param {Entity} entity - The containing entity.\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * Flag that indicates whether the entity item is enabled or disabled.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t*/\n\t\tthis._enabled = true;\n\n\t\t/**\n\t\t * Flag that indicates whether the item has been destroyed.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._destroyed = false;\n\t}\n\n\t/**\n\t * Returns the entity that contains the entity item.\n\t * @returns {Entity}\n\t */\n\tgetEntity() {\n\t\treturn this.__getCollectionParent();\n\t}\n\n\t/**\n\t * Checks if the entity item has been destroyed.\n\t * @returns {boolean}\n\t */\n\tisDestroyed() {\n\t\treturn this._destroyed;\n\t}\n\n\t/**\n\t * Destroys the entity item's resources.\n\t * @override\n\t * @abstract\n\t */\n\t__destroy() {\n\t\tthis._destroyed = true;\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Returns true if the entity item is enabled.\n\t * @returns {boolean}\n\t */\n\tisEnabled() {\n\t\treturn this._enabled;\n\t}\n\n\t/**\n\t * Sets whether the entity item is enabled.\n\t * @param {boolean} enabled\n\t */\n\tsetEnabled(enabled) {\n\t\tthis._enabled = enabled;\n\t}\n\n\t/**\n\t * Returns a new promise that resolves when the component is loaded.\n\t * @returns {Promise<void>}\n\t */\n\tgetLoadedPromise() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Updates the entity item.\n\t * @abstract\n\t */\n\t__update() {\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tBaseController,\n\tCameraComponent,\n\tCollection,\n\tCollectionItem,\n\tColor,\n\tComponentRef,\n\tDependencyGraph,\n\tEngine,\n\tEntity,\n\tLightSourceComponent,\n\tTHREE\n} from '../internal';\n\n/**\n * The scene which contains all entities.\n * @extends {CollectionItem<Engine>}\n */\nexport class Scene extends CollectionItem {\n\t/**\n\t * Constructs the scene.\n\t * @param {string} type - the type of the scene (always 'scene');\n\t * @param {string} name - the name of the scene\n\t * @param {Engine} engine - the Pioneer engine\n\t */\n\tconstructor(type, name, engine) {\n\t\tsuper(type, name, engine);\n\n\t\t/**\n\t\t * The collection of entities.\n\t\t * @type {Collection<Entity, Scene>}\n\t\t * @private\n\t\t*/\n\t\tthis._entities = new Collection(this, new Map([['entity', Entity]]));\n\n\t\t/**\n\t\t * The controller dependency graph.\n\t\t * @type {DependencyGraph<BaseController>}\n\t\t * @private\n\t\t */\n\t\tthis._controllerDependencyGraph = new DependencyGraph();\n\n\t\t/**\n\t\t * The ambient light color. The amount of light when there are no light sources.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._ambientLightColor = new Color(0.02, 0.02, 0.02);\n\t\tthis._ambientLightColor.freeze();\n\n\t\t/**\n\t\t * The list of light sources.\n\t\t * @type {Array<ComponentRef<LightSourceComponent>>}\n\t\t * @private\n\t\t */\n\t\tthis._lightSources = [];\n\n\t\t/**\n\t\t * The ThreeJS scene.\n\t\t * @type {THREE.Scene}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsScene = null;\n\n\t\t// Initialize Three.JS\n\t\tthis._threeJsScene = new THREE.Scene();\n\n\t\t// Setup the controller dependency graph functions.\n\t\tthis._controllerDependencyGraph.setUpdateItemCallback((controller) => {\n\t\t\tif (controller.getEntity().isEnabled() && controller.getCoverage().contains(controller.getEntity().getScene().getEngine().getTime()) && controller.isEnabled()) {\n\t\t\t\tcontroller.__update();\n\t\t\t}\n\t\t});\n\t\tthis._controllerDependencyGraph.setCompareItemCallback((a, b) => {\n\t\t\tif (a === b) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!a.getEntity().isEnabled() || !b.getEntity().isEnabled() || !a.isEnabled() || !b.isEnabled()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst time = a.getEntity().getScene().getEngine().getTime();\n\t\t\tif (!a.getCoverage().contains(time) || !b.getCoverage().contains(time)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Ensure that later controllers in an entity are dependent on earlier controllers.\n\t\t\tif (a.getEntity() === b.getEntity()) {\n\t\t\t\tconst entity = a.getEntity();\n\t\t\t\tfor (let i = 0, l = entity.getNumControllers(); i < l; i++) {\n\t\t\t\t\tconst controller = entity.getController(i);\n\t\t\t\t\tif (b === controller) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (a === controller) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Children's controllers are dependent on parent's controllers for position and velocity.\n\t\t\tif (a.getEntity().getParent() === b.getEntity()) {\n\t\t\t\tif ((a.hasModifiedState('position') && b.hasModifiedState('position')) || (a.hasModifiedState('velocity') && b.hasModifiedState('velocity'))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t// A special case for 'parent' as a shortcut to whatever the parent is, since it happens so often.\n\t\t\t\tfor (const modifiedState of b.__modifiedStates) {\n\t\t\t\t\tif (a.hasDependentState('parent', modifiedState)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if a's dependent states are in b's modified states.\n\t\t\tfor (const modifiedState of b.__modifiedStates) {\n\t\t\t\tif (a.hasDependentState(b.getEntity().getName(), modifiedState)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t/**\n\t * Returns the engine.\n\t * @returns {Engine}\n\t */\n\tgetEngine() {\n\t\treturn this.__getCollectionParent();\n\t}\n\n\t/**\n\t * Gets an entity by name.\n\t * @param {string|number} nameOrIndex - the name or index of the entity\n\t * @returns {Entity}\n\t */\n\tgetEntity(nameOrIndex) {\n\t\treturn this._entities.get(nameOrIndex);\n\t}\n\n\t/**\n\t * Gets the number of entities.\n\t * @returns {number}\n\t*/\n\tgetNumEntities() {\n\t\treturn this._entities.size;\n\t}\n\n\t/**\n\t * Adds an entity.\n\t * @param {string} name - the name of the entity to be added\n\t * @returns {Entity}\n\t */\n\taddEntity(name) {\n\t\treturn this._entities.add('entity', name);\n\t}\n\n\t/**\n\t * Removes an entity.\n\t * @param {Entity|string|number} entityOrNameOrIndex - the entity, name, or index to be removed\n\t */\n\tremoveEntity(entityOrNameOrIndex) {\n\t\tthis._entities.remove(entityOrNameOrIndex);\n\t}\n\n\t/**\n\t * Moves an entity to another scene.\n\t * @param {Entity|string|number} entityOrNameOrIndex - the entity, name, or index to be moved\n\t * @param {Scene} scene - the other scene to which the entity will be moved\n\t */\n\tmoveEntity(entityOrNameOrIndex, scene) {\n\t\tconst entity = this._entities.get(entityOrNameOrIndex);\n\t\tthis._entities.move(entityOrNameOrIndex, scene._entities);\n\t\t// Update the controller dependency graph for both.\n\t\tfor (let i = 0, l = entity.getNumControllers(); i < l; i++) {\n\t\t\tthis._controllerDependencyGraph.removeItem(entity.getController(i));\n\t\t\tscene._controllerDependencyGraph.addItem(entity.getController(i));\n\t\t}\n\t\t// Update any light sources.\n\t\tfor (let i = 0, l = entity.getNumComponents(); i < l; i++) {\n\t\t\tconst component = entity.getComponent(i);\n\t\t\tif (component.getType() === 'lightSource' && component.getLoadState() === 'loaded') {\n\t\t\t\tfor (let j = 0, k = this._lightSources.length; j < k; j++) {\n\t\t\t\t\tif (this._lightSources[j].getEntityName() === entity.getName()\n\t\t\t\t\t\t&& this._lightSources[j].getComponentTypeIndex() === component.getTypeIndex()) {\n\t\t\t\t\t\tthis.__removeLightSource(entity.getName(), component.getTypeIndex());\n\t\t\t\t\t\tthis.__addLightSource(entity.getName(), component.getTypeIndex());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the entity, component, or controller described in the parameters. If the component/controller type is omitted, it will return the entity. It is a shortcut function to make things easier on the user. It returns undefined if it is not found.\n\t * @param {string} entityNameOrIndex - the name or index of the entity\n\t * @param {string?} componentOrControllerType - the type of the component or controller [optional]\n\t * @param {number?} componentOrControllerTypeIndex - the index of the type, in case there are more than one of the same type [optional]\n\t * @returns {Entity|BaseComponent|BaseController}\n\t */\n\tget(entityNameOrIndex, componentOrControllerType = undefined, componentOrControllerTypeIndex = 0) {\n\t\tconst entity = this._entities.get(entityNameOrIndex);\n\t\tif (componentOrControllerType === undefined || entity === null) {\n\t\t\treturn entity;\n\t\t}\n\t\treturn entity.get(componentOrControllerType, componentOrControllerTypeIndex);\n\t}\n\n\t/**\n\t * Gets the controller dependency graph.\n\t * @returns {DependencyGraph<BaseController>}\n\t */\n\tgetControllerDependencyGraph() {\n\t\treturn this._controllerDependencyGraph;\n\t}\n\n\t/**\n\t * Gets the ambient light color. Defaults to RGB(0.02, 0.02, 0.02).\n\t * @returns {Color}\n\t */\n\tgetAmbientLightColor() {\n\t\treturn this._ambientLightColor;\n\t}\n\n\t/**\n\t * Sets the ambient light color.\n\t * @param {Color} color\n\t */\n\tsetAmbientLightColor(color) {\n\t\tthis._ambientLightColor.thaw();\n\t\tthis._ambientLightColor.copy(color);\n\t\tthis._ambientLightColor.freeze();\n\t}\n\n\t/**\n\t * Adds a light source. Does nothing if it already is added. It should only be called by the LightSourceComponent.\n\t * @param {string} entityName - The name of the entity that has the light source.\n\t * @param {number} typeIndex - If there is more than one light source component on an entity, this specifies which one.\n\t * @internal\n\t */\n\t__addLightSource(entityName, typeIndex = 0) {\n\t\t// If there is already a light source of the given entity name and type index, do nothing.\n\t\tfor (let i = 0, l = this._lightSources.length; i < l; i++) {\n\t\t\tconst otherLightSource = this._lightSources[i];\n\t\t\tif (otherLightSource.getEntityName() === entityName\n\t\t\t\t&& otherLightSource.getComponentTypeIndex() === typeIndex) {\n\t\t\t\tthrow new Error(`Light source on ${entityName} with type index ${typeIndex} already added.`);\n\t\t\t}\n\t\t}\n\t\t// Add the new light source.\n\t\tconst lightSource = /** @type {ComponentRef<LightSourceComponent>} */(new ComponentRef(this));\n\t\tlightSource.setByType(entityName, 'lightSource', typeIndex);\n\t\tthis._lightSources.push(lightSource);\n\t}\n\n\t/**\n\t * Removes a light source. Does nothing if it already is removed. It should only be called by the LightSourceComponent.\n\t * @param {string} entityName - The name of the entity that has the light source.\n\t * @param {number} typeIndex - If there is more than one light source component on an entity, this specifies which one.\n\t * @internal\n\t */\n\t__removeLightSource(entityName, typeIndex = 0) {\n\t\tfor (let i = 0, l = this._lightSources.length; i < l; i++) {\n\t\t\tconst otherLightSource = this._lightSources[i];\n\t\t\tif (otherLightSource.getEntityName() === entityName\n\t\t\t\t&& otherLightSource.getComponentTypeIndex() === typeIndex) {\n\t\t\t\t// Remove the light source.\n\t\t\t\tthis._lightSources.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(`Light source on ${entityName} with type index ${typeIndex} not found.`);\n\t}\n\n\t/**\n\t * Gets the light source at index i.\n\t * @param {number} i\n\t * @returns {LightSourceComponent}\n\t */\n\tgetLightSource(i) {\n\t\tif (0 <= i && i < this._lightSources.length) {\n\t\t\treturn this._lightSources[i].get();\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the number of light sources.\n\t * @returns {number}\n\t */\n\tgetNumLightSources() {\n\t\treturn this._lightSources.length;\n\t}\n\n\t/**\n\t * Returns a new promise that resolves when every entity is loaded.\n\t * @returns {Promise<void>}\n\t */\n\tgetLoadedPromise() {\n\t\tconst promises = [];\n\t\tfor (let i = 0, l = this._entities.size; i < l; i++) {\n\t\t\tpromises.push(this._entities.get(i).getLoadedPromise());\n\t\t}\n\t\treturn Promise.all(promises).then();\n\t}\n\n\t/**\n\t * Cleans up the scene.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tsuper.__destroy();\n\n\t\tthis._entities.__destroy();\n\t}\n\n\t/**\n\t * Returns the ThreeJS scene so that components can use it.\n\t * @returns {THREE.Scene}\n\t */\n\tgetThreeJsScene() {\n\t\treturn this._threeJsScene;\n\t}\n\n\t/**\n\t * Updates the scene. Updates parents, is-in-coverages, and calls update on all entities' controllers using the dependency graph.\n\t * @internal\n\t */\n\t__update() {\n\t\tconst currentTime = this.getEngine().getTime();\n\t\tfor (let i = this._entities.size - 1; i >= 0; i--) {\n\t\t\tconst entity = this._entities.get(i);\n\t\t\tentity.__updateLastState();\n\t\t\tentity.__updateParent(currentTime);\n\t\t\tentity.__updateIsInCoverages(currentTime);\n\t\t}\n\n\t\tthis._controllerDependencyGraph.update();\n\t}\n\n\t/**\n\t * Updates the camera-non-specific visual parts of the entities.\n\t * @internal\n\t */\n\t__updateVisuals() {\n\t\tfor (let i = this._entities.size - 1; i >= 0; i--) {\n\t\t\tconst entity = this._entities.get(i);\n\t\t\tif (entity.isInPositionCoverage() && entity.isEnabled()) {\n\t\t\t\tthis._entities.get(i).__updateVisuals();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the camera from any camera-dependent variables. Called by camera on clean up.\n\t * @param {CameraComponent} camera\n\t * @internal\t*/\n\t__removeCameraDependents(camera) {\n\t\tfor (let i = this._entities.size - 1; i >= 0; i--) {\n\t\t\tthis._entities.get(i).__removeCameraDependents(camera);\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport * as Pioneer from '../internal';\n\n/**\n * The class that holds the different mappings from component and controller names to their corresponding constructors.\n */\nclass Types {\n}\n\n/**\n * @typedef {typeof Pioneer.BaseComponent} BaseComponentType\n */\n\n/**\n * The mapping of component type names to component constructors.\n * @type {Map<string, BaseComponentType>}\n * @internal\n */\nTypes.Components = new Map();\nTypes.Components.set('atmosphere', Pioneer.AtmosphereComponent);\nTypes.Components.set('camera', Pioneer.CameraComponent);\nTypes.Components.set('cmts', Pioneer.CMTSComponent);\nTypes.Components.set('cometTail', Pioneer.CometTailComponent);\nTypes.Components.set('connectedSprite', Pioneer.ConnectedSpriteComponent);\nTypes.Components.set('div', Pioneer.DivComponent);\nTypes.Components.set('dynEnvMap', Pioneer.DynamicEnvironmentMapComponent);\nTypes.Components.set('gizmo', Pioneer.GizmoComponent);\nTypes.Components.set('label', Pioneer.LabelComponent);\nTypes.Components.set('lightSource', Pioneer.LightSourceComponent);\nTypes.Components.set('model', Pioneer.ModelComponent);\nTypes.Components.set('orbitalParticles', Pioneer.OrbitalParticlesComponent);\nTypes.Components.set('particleSpray', Pioneer.ParticleSprayComponent);\nTypes.Components.set('rings', Pioneer.RingsComponent);\nTypes.Components.set('skybox', Pioneer.SkyboxComponent);\nTypes.Components.set('spheroid', Pioneer.SpheroidComponent);\nTypes.Components.set('spheroidLOD', Pioneer.SpheroidLODComponent);\nTypes.Components.set('spout', Pioneer.SpoutComponent);\nTypes.Components.set('sprite', Pioneer.SpriteComponent);\nTypes.Components.set('starfield', Pioneer.StarfieldComponent);\nTypes.Components.set('trail', Pioneer.TrailComponent);\n\n/**\n * @typedef {typeof Pioneer.BaseController} BaseControllerType\n */\n\n/**\n * The mapping of controller type names to controller constructors.\n * @type {Map<string, BaseControllerType>}\n * @internal\n */\nTypes.Controllers = new Map();\nTypes.Controllers.set('align', Pioneer.AlignController);\nTypes.Controllers.set('animdata', Pioneer.AnimdataController);\nTypes.Controllers.set('coverage', Pioneer.CoverageController);\nTypes.Controllers.set('dynamo', Pioneer.DynamoController);\nTypes.Controllers.set('fixed', Pioneer.FixedController);\nTypes.Controllers.set('fixedToParent', Pioneer.FixedToParentController);\nTypes.Controllers.set('freeFly', Pioneer.FreeFlyController);\nTypes.Controllers.set('groundClamp', Pioneer.GroundClampController);\nTypes.Controllers.set('keyframe', Pioneer.KeyframeController);\nTypes.Controllers.set('look', Pioneer.LookController);\nTypes.Controllers.set('modelAnimate', Pioneer.ModelAnimateController);\nTypes.Controllers.set('orbit', Pioneer.OrbitController);\nTypes.Controllers.set('orbitKeyframe', Pioneer.OrbitKeyframeController);\nTypes.Controllers.set('orbitalElements', Pioneer.OrbitalElementsController);\nTypes.Controllers.set('pick', Pioneer.PickController);\nTypes.Controllers.set('roll', Pioneer.RollController);\nTypes.Controllers.set('rotate', Pioneer.RotateController);\nTypes.Controllers.set('rotateByEntityOrientation', Pioneer.RotateByEntityOrientationController);\nTypes.Controllers.set('scale', Pioneer.ScaleController);\nTypes.Controllers.set('select', Pioneer.SelectController);\nTypes.Controllers.set('setParent', Pioneer.SetParentController);\nTypes.Controllers.set('spin', Pioneer.SpinController);\nTypes.Controllers.set('tap', Pioneer.TapController);\nTypes.Controllers.set('transition', Pioneer.TransitionController);\nTypes.Controllers.set('translate', Pioneer.TranslateController);\nTypes.Controllers.set('zoom', Pioneer.ZoomController);\n\nexport { Types };\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const BasicShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\tcolor: 'vec4',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\tattribute vec3 position;\n\t\tuniform mat4 modelViewMatrix;\n\t\tuniform mat4 projectionMatrix;\n\n\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\tvoid main() {\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform vec4 color;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const BasicAlphaShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\tcolor: 'vec4',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tside: 'double',\n\t\tblending: 'normal'\n\t},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tattribute vec3 position;\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform vec4 color;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\t\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const ConnectedSpriteShader = {\n\tuniforms: {\n\t\tprojectionMatrix: 'highp mat4',\n\t\tvAxis: 'vec3',\n\t\tcolor: 'vec4',\n\t\tcolorTexture: 'sampler2D',\n\t\twidth1: 'float',\n\t\twidth2: 'float',\n\t\ttextureYOffset: 'float',\n\t\trepeatAmount: 'float',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\tside: 'double',\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tblending: 'normal'\n\t},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tattribute vec2 position;\n\n\t\t\tuniform mat4 modelMatrix;\n\t\t\tuniform mat4 viewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\tuniform vec3 vAxis;\n\t\t\tuniform float width1;\n\t\t\tuniform float width2;\n\n\t\t\tvarying vec2 vPosition;\n\t\t\tvarying float vU;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvoid main() {\n\n\t\t\t\t// Get the horizontal axis.\n\t\t\t\tfloat width = mix(width1, width2, position.y);\n\t\t\t\tvec3 viewVAxis = (viewMatrix * vec4(vAxis, 0)).xyz;\n\t\t\t\tvec2 viewHAxisXZ = normalize(cross(vec3(0, 1, 0), viewVAxis)).xz;\n\t\t\t\tvec4 viewHAxis = vec4(viewHAxisXZ.x, 0, viewHAxisXZ.y, 0);\n\n\t\t\t\t// Get the view position.\n\t\t\t\tvec4 modelPosition = modelMatrix * vec4(0, 0, 0, 1) + vec4(vAxis, 0) * position.y;\n\t\t\t\tvec4 viewPosition = viewMatrix * modelPosition;\n\n\t\t\t\t// Set the final projected position.\n\t\t\t\tgl_Position = projectionMatrix * viewPosition + projectionMatrix * viewHAxis * width * position.x;\n\n\t\t\t\t// Setup a vPosition and vU for use in the fragment shader.\n\t\t\t\tvPosition = vec2(0.5 * (position.x + 1.0), position.y);\n\t\t\t\t#ifdef PIXEL_BASED\n\t\t\t\t\tvPosition.y *= abs(gl_Position.w);\n\t\t\t\t#endif\n\t\t\t\tvU = position.y;\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform vec4 color;\n\t\t\tuniform sampler2D colorTexture;\n\t\t\tuniform float width1;\n\t\t\tuniform float width2;\n\t\t\tuniform float textureYOffset;\n\t\t\tuniform float repeatAmount;\n\n\t\t\tvarying vec2 vPosition;\n\t\t\tvarying float vU;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\tvoid main() {\n\n\t\t\t\t// If we're using pixel-based, we need to undo the perspective divide that happened.\n\t\t\t\t#ifdef PIXEL_BASED\n\t\t\t\t\tvec2 uv = vec2(vPosition.x, vPosition.y * gl_FragCoord.w);\n\t\t\t\t#else\n\t\t\t\t\tvec2 uv = vPosition;\n\t\t\t\t#endif\n\n\t\t\t\t// Get a correct use that uses the repeat amount and y offset.\n\t\t\t\t// There's a complicated formula, because the widths may be different and the shape of the sprite may be a trapezoid.\n\t\t\t\tfloat f = width2 * vU / (width1 * (1.0 - vU) + width2 * vU);\n\t\t\t\tfloat uFactor = step(vU, uv.x);\n\t\t\t\tuv.x = (1.0 - uFactor) * uv.x * f / vU + uFactor * (1.0 + (uv.x - 1.0) * (1.0 - f) / (1.0 - vU));\n\t\t\t\tuv.y = uv.y * repeatAmount + textureYOffset;\n\n\t\t\t\t// Apply the texture and color.\n\t\t\t\tgl_FragColor = color * texture2D(colorTexture, uv);\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}`\n\t}\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const LineShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\tpixelSize: 'vec2',\n\t\talphaMultiplier: 'float',\n\t\tdashLength: 'float',\n\t\tdashGapLength: 'float',\n\t\tglowWidth: 'float',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tside: 'double',\n\t\tblending: 'additive'\n\t},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec3 positionPrev;\n\t\t\tattribute vec3 positionNext;\n\t\t\tattribute vec4 color;\n\t\t\tattribute float width;\n\t\t\tattribute float dashOffset;\n\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\t\t\tuniform vec2 pixelSize;\n\t\t\tuniform float glowWidth;\n\n\t\t\tvarying vec4 fColor;\n\t\t\tvarying float fDashOffset;\n\t\t\tvarying float fWidth;\n\t\t\tvarying float fOffsetScalar;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvoid main() {\n\t\t\t\t// Get the line vertices into pixel space.\n\t\t\t\tvec4 view_center = modelViewMatrix * vec4(position, 1.0);\n\t\t\t\tvec4 view_prev = modelViewMatrix * vec4(positionPrev, 1.0);\n\t\t\t\tvec4 view_next = modelViewMatrix * vec4(positionNext, 1.0);\n\t\t\t\tvec4 projected_center = projectionMatrix * view_center;\n\t\t\t\tvec4 projected_prev = projectionMatrix * view_prev;\n\t\t\t\tvec4 projected_next = projectionMatrix * view_next;\n\t\t\t\tvec2 ndc_center = projected_center.xy / view_center.y;\n\t\t\t\tvec2 ndc_prev = projected_prev.xy / view_prev.y;\n\t\t\t\tvec2 ndc_next = projected_next.xy / view_next.y;\n\t\t\t\tvec2 pixel_center = (ndc_center.xy + 1.0) / 2.0 * pixelSize;\n\t\t\t\tvec2 pixel_prev = (ndc_prev.xy + 1.0) / 2.0 * pixelSize;\n\t\t\t\tvec2 pixel_next = (ndc_next.xy + 1.0) / 2.0 * pixelSize;\n\n\t\t\t\t// Get the offset of the part perpendicular to the lines.\n\t\t\t\tvec2 l0 = normalize(pixel_center - pixel_prev);\n\t\t\t\tvec2 l1 = normalize(pixel_next - pixel_center);\n\t\t\t\tfloat offsetScalar = sign(width) * (abs(width) / 2.0 + glowWidth);\n\t\t\t\tvec2 offset = vec2(offsetScalar, offsetScalar);\n\t\t\t\tif (pixel_center == pixel_prev) {\n\t\t\t\t\tif (pixel_center == pixel_next) {\n\t\t\t\t\t\toffset = vec2(0.0, 0.0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\toffset *= vec2(-l1.y, l1.x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pixel_center == pixel_next) {\n\t\t\t\t\toffset *= vec2(-l0.y, l0.x);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toffset *= normalize(vec2(-l0.y - l1.y, l0.x + l1.x));\n\t\t\t\t\toffset /= max(0.25, sqrt((1.0 + dot(l0, l1)) / 2.0));\n\t\t\t\t}\n\n\t\t\t\t// Re-add the perpendicular part to the center as the final vertex.\n\t\t\t\tndc_center = (pixel_center + offset) / pixelSize * 2.0 - 1.0;\n\t\t\t\tgl_Position = vec4(ndc_center * view_center.y, projected_center.z, projected_center.w);\n\n\t\t\t\t// Set the varyings.\n\t\t\t\tfColor = color;\n\t\t\t\tfDashOffset = dashOffset;\n\t\t\t\tfWidth = width;\n\t\t\t\tfOffsetScalar = offsetScalar;\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform float alphaMultiplier;\n\t\t\tuniform float dashLength;\n\t\t\tuniform float dashGapLength;\n\t\t\tuniform float glowWidth;\n\n\t\t\tvarying vec4 fColor;\n\t\t\tvarying float fDashOffset;\n\t\t\tvarying float fWidth;\n\t\t\tvarying float fOffsetScalar;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\tfloat line_dash_func() {\n\t\t\t\tfloat u = mod(fDashOffset, dashLength + dashGapLength);\n\t\t\t\treturn float(u < dashLength);\n\t\t\t}\n\n\t\t\tfloat edgeGlow() {\n\t\t\t\tif (glowWidth > 0.0) {\n\t\t\t\t\tfloat value = clamp((fWidth / 2.0 + glowWidth - abs(fOffsetScalar)) / glowWidth, 0.0, 1.0);\n\t\t\t\t\tif (value < 1.0) {\n\t\t\t\t\t\tvalue *= 0.75;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\treturn 1.0;\n\t\t\t}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = fColor;\n\t\t\t\tgl_FragColor.a *= alphaMultiplier * edgeGlow() * line_dash_func();\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","import * as THREE from 'three';\n\nexport class ShaderChunkLogDepth {\n\t/** Uniforms for the built-in shaders. */\n\tstatic Uniforms = {\n\t\tinvertDepth: 'float',\n\t\tnearDistance: 'float',\n\t\tmidDistance: 'float'\n\t};\n\n\t/** Code for the header of the vertex shader. */\n\tstatic VertexHead = `\n\t\t#ifdef L_EXT_frag_depth\n\t\t\tvarying float depth;\n\t\t#else\n\t\t\tuniform float nearDistance;\n\t\t\tuniform float midDistance;\n\t\t#endif\n\t`;\n\n\t/** Code for the end of the vertex shader main() function. */\n\tstatic Vertex = `\n\t\t#ifdef L_EXT_frag_depth\n\t\t\tdepth = gl_Position.w;\n\t\t#else\n\t\t\tfloat z = gl_Position.w;\n\t\t\tif (z < midDistance) {\n\t\t\t\tgl_Position.z = nearDistance * (z - midDistance) / (midDistance - nearDistance);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfloat logFactor = 0.01254291648; // 1 / log2(1e24 - midDistance + 1.0)\n\t\t\t\tgl_Position.z = log2(z - midDistance + 1.0) * logFactor;\n\t\t\t\tgl_Position.z *= gl_Position.w;\n\t\t\t}\n\t\t#endif\n\t`;\n\n\t/** Code for the header of the fragment shader. */\n\tstatic FragmentHead = `\n\t\t#ifdef L_EXT_frag_depth\n\t\t\tuniform float invertDepth;\n\t\t\tuniform float nearDistance;\n\t\t\tuniform float midDistance;\n\t\t\tvarying float depth;\n\t\t#endif\n\t`;\n\n\t/** Code for the end of the fragment shader main() function. */\n\tstatic Fragment = `\n\t\t#ifdef L_EXT_frag_depth\n\t\t\tfloat logFactor = 0.01254291648; // 1 / log2(1 + 1e24)\n\t\t\tfloat nearFactor = 0.5 * (depth - nearDistance) / (midDistance - nearDistance);\n\t\t\tfloat farFactor = 0.5 * (1.0 + log2(1.0 + depth - midDistance) * logFactor);\n\t\t\tgl_FragDepthEXT = (1.0 - 2.0 * invertDepth) * (depth >= midDistance ? farFactor : nearFactor) + invertDepth;\n\t\t#endif\n\t`;\n\n\t/** Three.js uniform variables for custom materials.\n\t *  Eventually I'd like to remove the need for this by having every material be in the shaders folder. */\n\tstatic ThreeUniforms = {\n\t\tinvertDepth: new THREE.Uniform(0),\n\t\tnearDistance: new THREE.Uniform(0),\n\t\tmidDistance: new THREE.Uniform(0)\n\t};\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const PlumesShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\tcolorTexture: 'sampler2D',\n\t\tcolorMultiplier: 'vec4',\n\t\tspeed: 'float',\n\t\ttime: 'float',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tside: 'double',\n\t\tblending: 'normal'\n\t},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec2 uv;\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvarying vec2 vUV;\n\n\t\t\tvoid main() {\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t\t\t\tvUV = uv;\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform sampler2D colorTexture;\n\t\t\tuniform vec4 colorMultiplier;\n\t\t\tuniform float speed;\n\t\t\tuniform float time;\n\t\t\tvarying vec2 vUV;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\tvec2 v2_construct_func(float x, float y) {\n\t\t\t\treturn vec2(x, y);\n\t\t\t}\n\t\t\tfloat s_mult_func(float s1, float s2) {\n\t\t\t\treturn s1 * s2;\n\t\t\t}\n\t\t\tfloat s_mod_func(float s1, float s2) {\n\t\t\t\treturn mod(s1, s2);\n\t\t\t}\n\t\t\tvec2 v2s_mult_func(vec2 v, float s) {\n\t\t\t\treturn v * s;\n\t\t\t}\n\t\t\tvec2 v2_add_func(vec2 v1, vec2 v2) {\n\t\t\t\treturn v1 + v2;\n\t\t\t}\n\t\t\tvec4 texture_func(sampler2D tex, vec2 uv) {\n\t\t\t\treturn texture2D(tex, uv);\n\t\t\t}\n\t\t\tvec4 v4v4_mult_func(vec4 v1, vec4 v2) {\n\t\t\t\treturn v1 * v2;\n\t\t\t}\n\t\t\tfloat s_sub_func(float s1, float s2) {\n\t\t\t\treturn s1 - s2;\n\t\t\t}\n\t\t\tvec4 alpha_mult_func(vec4 color, float alpha) {\n\t\t\t\treturn vec4(color.rgb, color.a * alpha);\n\t\t\t}\n\t\t\tvoid main() {\n\t\t\t\tvec2 yAxis = v2_construct_func(0.0, 1.0);\n\t\t\t\tfloat yMultiplier = s_mult_func(time, speed);\n\t\t\t\tfloat yMultiplierMod = s_mod_func(yMultiplier, 1.0);\n\t\t\t\tvec2 uvOffset = v2s_mult_func(yAxis, yMultiplierMod);\n\t\t\t\tvec2 finalUV = v2_add_func(vUV, uvOffset);\n\t\t\t\tvec4 textureOffset = texture_func(colorTexture, finalUV);\n\t\t\t\tvec4 color = v4v4_mult_func(textureOffset, colorMultiplier);\n\t\t\t\tfloat fade = s_sub_func(1.0, vUV.y);\n\t\t\t\tvec4 color_with_fade = alpha_mult_func(color, fade);\n\t\t\t\tgl_FragColor = color_with_fade;\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const SpriteShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\tpixelBased: 'float',\n\t\tcolor: 'vec4',\n\t\tcolorTexture: 'sampler2D',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tside: 'double',\n\t\tblending: 'normal'\n\t},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec2 uv;\n\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\t\t\tuniform float pixelBased;\n\n\t\t\tvarying vec2 vUV;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t\t\t\tif (pixelBased != 0.0) {\n\t\t\t\t\tgl_Position /= abs(gl_Position.w);\n\t\t\t\t}\n\t\t\t\tvUV = uv;\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform vec4 color;\n\t\t\tuniform sampler2D colorTexture;\n\n\t\t\tvarying vec2 vUV;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = texture2D(colorTexture, vUV) * color;\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const SpriteParticlesShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tside: 'double',\n\t\tblending: 'additive'\n\t},\n\tvertex: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tattribute vec3 position;\n\t\t\tattribute vec4 color;\n\t\t\tattribute vec3 offset;\n\t\t\tattribute float scale;\n\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\tvarying vec4 fColor;\n\t\t\tvarying vec2 fPosition;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvoid main() {\n\t\t\t\tvec4 viewPosition = modelViewMatrix * vec4(offset, 1.0) + vec4(position, 0.0) * scale;\n\t\t\t\tgl_Position = projectionMatrix * viewPosition;\n\t\t\t\tfColor = color;\n\t\t\t\tfPosition = position.xz;\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: [\n\t\t\t'EXT_frag_depth'\n\t\t],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tvarying vec4 fColor;\n\t\t\tvarying vec2 fPosition;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = fColor * (1.0 - length(fPosition));\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","import { ShaderChunkLogDepth } from './log_depth';\n\nexport const TrailShader = {\n\tuniforms: {\n\t\tmodelViewMatrix: 'mat4',\n\t\tprojectionMatrix: 'highp mat4',\n\n\t\tpixelSize: 'vec2',\n\t\talphaMultiplier: 'float',\n\t\tdashLength: 'float',\n\t\tdashGapLength: 'float',\n\t\tglowWidth: 'float',\n\t\tindexStart: 'float',\n\t\tindexCount: 'float',\n\t\tindexLength: 'float',\n\t\tcolor: 'vec4',\n\t\talphaFade: 'float',\n\t\twidthMin: 'float',\n\t\twidthMax: 'float',\n\n\t\t...ShaderChunkLogDepth.Uniforms\n\t},\n\tproperties: {\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t\tside: 'double',\n\t\tblending: 'additive'\n\t},\n\tvertex: {\n\t\textensions: ['EXT_frag_depth'],\n\t\tcode: `\n\t\t\tattribute vec3 positionCurr;\n\t\t\tattribute vec3 positionPrev;\n\t\t\tattribute vec3 positionNext;\n\t\t\tattribute float side;\n\t\t\tattribute float index;\n\t\t\tattribute float dashOffset;\n\n\t\t\tuniform mat4 modelViewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\tuniform vec2 pixelSize;\n\t\t\tuniform float glowWidth;\n\t\t\tuniform float indexStart;\n\t\t\tuniform float indexCount;\n\t\t\tuniform float indexLength;\n\t\t\tuniform float widthMin;\n\t\t\tuniform float widthMax;\n\n\t\t\tvarying vec4 fColor;\n\t\t\tvarying float fDashOffset;\n\t\t\tvarying float fWidth;\n\t\t\tvarying float fOffsetScalar;\n\t\t\tvarying float fIndexU;\n\n\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\tvoid main() {\n\t\t\t\t// Get the width depending on the length.\n\t\t\t\tfloat indexU = mod(index - indexStart + indexLength, indexLength) / (indexCount - 1.0);\n\t\t\t\tfloat width = mix(widthMin, widthMax, indexU);\n\n\t\t\t\t// Get the line vertices into pixel space.\n\t\t\t\tvec4 viewCenter = modelViewMatrix * vec4(positionCurr, 1.0);\n\t\t\t\tvec4 viewPrev = modelViewMatrix * vec4(positionPrev, 1.0);\n\t\t\t\tvec4 viewNext = modelViewMatrix * vec4(positionNext, 1.0);\n\t\t\t\tvec4 projectedCenter = projectionMatrix * viewCenter;\n\t\t\t\tvec4 projected_prev = projectionMatrix * viewPrev;\n\t\t\t\tvec4 projected_next = projectionMatrix * viewNext;\n\t\t\t\tvec2 ndcCenter = projectedCenter.xy / viewCenter.y;\n\t\t\t\tvec2 ndcPrev = projected_prev.xy / viewPrev.y;\n\t\t\t\tvec2 ndcNext = projected_next.xy / viewNext.y;\n\t\t\t\tvec2 pixelCenter = (ndcCenter.xy + 1.0) / 2.0 * pixelSize;\n\t\t\t\tvec2 pixelPrev = (ndcPrev.xy + 1.0) / 2.0 * pixelSize;\n\t\t\t\tvec2 pixelNext = (ndcNext.xy + 1.0) / 2.0 * pixelSize;\n\n\t\t\t\t// Get the offset of the part perpendicular to the lines.\n\t\t\t\tvec2 l0 = normalize(pixelCenter - pixelPrev);\n\t\t\t\tvec2 l1 = normalize(pixelNext - pixelCenter);\n\t\t\t\tfloat offsetScalar = side * (width / 2.0 + glowWidth);\n\t\t\t\tvec2 offset = vec2(offsetScalar, offsetScalar);\n\t\t\t\tif (pixelCenter == pixelPrev) {\n\t\t\t\t\tif (pixelCenter == pixelNext) {\n\t\t\t\t\t\toffset = vec2(0.0, 0.0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\toffset *= vec2(-l1.y, l1.x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pixelCenter == pixelNext) {\n\t\t\t\t\toffset *= vec2(-l0.y, l0.x);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toffset *= normalize(vec2(-l0.y - l1.y, l0.x + l1.x));\n\t\t\t\t\toffset /= sqrt((1.0 + max(0.0, dot(l0, l1))) / 2.0);\n\t\t\t\t}\n\n\t\t\t\t// Re-add the perpendicular part to the center as the final vertex.\n\t\t\t\tndcCenter = (pixelCenter + offset) / pixelSize * 2.0 - 1.0;\n\t\t\t\tgl_Position = vec4(ndcCenter * viewCenter.y, projectedCenter.z, projectedCenter.w);\n\n\t\t\t\t// Set the varyings.\n\t\t\t\tfIndexU = indexU;\n\t\t\t\tfDashOffset = dashOffset;\n\t\t\t\tfWidth = width;\n\t\t\t\tfOffsetScalar = offsetScalar;\n\n\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t}\n\t\t\t`\n\t},\n\tfragment: {\n\t\textensions: ['EXT_frag_depth'],\n\t\tcode: `\n\t\t\tprecision highp float;\n\n\t\t\tuniform vec4 color;\n\t\t\tuniform float alphaMultiplier;\n\t\t\tuniform float alphaFade;\n\t\t\tuniform float dashLength;\n\t\t\tuniform float dashGapLength;\n\t\t\tuniform float glowWidth;\n\n\t\t\tvarying float fIndexU;\n\t\t\tvarying float fDashOffset;\n\t\t\tvarying float fWidth;\n\t\t\tvarying float fOffsetScalar;\n\n\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\t\n\t\t\tfloat lineDash() {\n\t\t\t\tfloat u = mod(fDashOffset, dashLength + dashGapLength);\n\t\t\t\treturn float(u < dashLength);\n\t\t\t}\n\n\t\t\tfloat edgeGlow() {\n\t\t\t\tif (glowWidth > 0.0) {\n\t\t\t\t\tfloat value = clamp((fWidth / 2.0 + glowWidth - abs(fOffsetScalar)) / glowWidth, 0.0, 1.0);\n\t\t\t\t\tif (value < 1.0) {\n\t\t\t\t\t\tvalue *= 0.75;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\treturn 1.0;\n\t\t\t}\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = color;\n\t\t\t\tgl_FragColor.a *= alphaMultiplier * edgeGlow() * lineDash() * mix(alphaFade, 1.0, fIndexU);\n\n\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t}\n\t\t\t`\n\t}\n};\n","/** @module pioneer */\nimport {\n\tColor,\n\tDownloader,\n\tTHREE\n} from './internal';\n\n/**\n * The texture loader. Responsible for loading all textures.\n * If `useCompression` is used for any of the functions, the appropriate extension is retrieved from Capabilities,\n * and it plus the '.ktx' extension replace the extension of the original url. See {@link Capabilities} for more detail.\n */\nexport class TextureLoader extends THREE.Loader {\n\t/**\n\t * Constructor.\n\t * @param {Downloader} downloader - The download manager.\n\t * @param {THREE.WebGLRenderer} renderer\n\t */\n\tconstructor(downloader, renderer) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The downloader.\n\t\t * @type {Downloader}\n\t\t * @protected\n\t\t */\n\t\tthis._downloader = downloader;\n\n\t\t/**\n\t\t * The threejs renderer.\n\t\t * @type {THREE.WebGLRenderer}\n\t\t * @protected\n\t\t */\n\t\tthis._renderer = renderer;\n\n\t\t/**\n\t\t * The cross origin attribute value use in loads.\n\t\t * @type {string}\n\t\t * @protected\n\t\t */\n\t\tthis._crossOrigin = 'anonymous';\n\n\t\t/**\n\t\t * The path value used in loads.\n\t\t * @type {string}\n\t\t * @protected\n\t\t */\n\t\tthis._path = undefined;\n\n\t\t/**\n\t\t * A pre-loaded 1x1 white texture.\n\t\t * @type {THREE.Texture}\n\t\t * @protected\n\t\t */\n\t\tthis._white = null;\n\n\t\t/**\n\t\t * A pre-loaded 1x1 black texture.\n\t\t * @type {THREE.Texture}\n\t\t * @protected\n\t\t */\n\t\tthis._black = null;\n\n\t\t/**\n\t\t * A pre-loaded 1x1 clear texture.\n\t\t * @type {THREE.Texture}\n\t\t * @protected\n\t\t */\n\t\tthis._clear = null;\n\n\t\t/**\n\t\t * A pre-loaded 1x1 pink texture.\n\t\t * @type {THREE.Texture}\n\t\t * @protected\n\t\t */\n\t\tthis._pink = null;\n\n\t\t/**\n\t\t * A pre-loaded 1x1 gray texture.\n\t\t * @type {THREE.Texture}\n\t\t * @protected\n\t\t */\n\t\tthis._gray = null;\n\n\t\t/**\n\t\t * A ThreeJs texture loader for use by the load function.\n\t\t * @type {THREE.TextureLoader}\n\t\t * @protected\n\t\t */\n\t\tthis._threeJsTextureLoader = new THREE.TextureLoader();\n\n\t\t// Configure the loaders.\n\t\tthis._threeJsTextureLoader.setCrossOrigin(this._crossOrigin);\n\t\tthis._threeJsTextureLoader.setPath(this._path);\n\n\t\t// Setup the static pre-loaded textures.\n\t\tthis._white = TextureLoader._newTexture(new Color(1, 1, 1, 1));\n\t\tthis._black = TextureLoader._newTexture(new Color(0, 0, 0, 1));\n\t\tthis._clear = TextureLoader._newTexture(new Color(0, 0, 0, 0));\n\t\tthis._pink = TextureLoader._newTexture(new Color(1, 105 / 255, 180 / 255, 1));\n\t\tthis._gray = TextureLoader._newTexture(new Color(0.4, 0.4, 0.4, 1));\n\n\t\t// Add this texture loader to the ThreeJs url handler. Complex loaders like GLTFLoader will use this.\n\t\tTHREE.DefaultLoadingManager.addHandler(/.$/i, this);\n\t}\n\n\t/**\n\t * Returns a promise that resolves when the texture is loaded into the uniform and rejects if there is an error.\n\t * @param {THREE.IUniform} uniform - The uniform into which to load the texture.\n\t * @param {string} url - The url of the texture to load.\n\t * @param {boolean} useMipMaps - Whether or not to use mipmap textures. If true, only power-of-two textures are allowed.\n\t * @returns {Promise<void>}\n\t */\n\tasync loadIntoUniform(uniform, url, useMipMaps) {\n\t\treturn this.loadTexture(url, useMipMaps).then((texture) => {\n\t\t\tif (uniform.value !== null) {\n\t\t\t\tuniform.value.dispose();\n\t\t\t}\n\t\t\tuniform.value = texture;\n\t\t});\n\t}\n\n\t/**\n\t * Returns a promise that resolves when the cube texture is loaded and rejects if there is an error.\n\t * @param {string} url - The url of the texture to load. Every instance of $FACE is replaced by one of ['posx', 'negx', 'posy', 'negy', 'posz', 'negz'].\n\t * @param {boolean} useMipMaps - Whether or not to use mipmap textures. If true, only power-of-two textures are allowed.\n\t * @returns {Promise<THREE.CubeTexture>}\n\t */\n\tasync loadCubeTexture(url, useMipMaps) {\n\t\tconst cubeTexture = new THREE.CubeTexture();\n\t\tconst promises = [];\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tconst newUrl = url.replace('$FACE', _cubeFaceNames[i]);\n\t\t\tpromises.push(new Promise((resolve) => {\n\t\t\t\tthis.loadTexture(newUrl, useMipMaps).then((texture) => {\n\t\t\t\t\tcubeTexture.images[i] = texture.image;\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\t\treturn Promise.all(promises).then(() => {\n\t\t\tcubeTexture.needsUpdate = true;\n\t\t\treturn cubeTexture;\n\t\t});\n\t}\n\n\t/**\n\t * Returns a promise that resolves with a texture and rejects with an error.\n\t * @param {string} url - The url of the texture to load.\n\t * @param {boolean} useMipMaps - Whether or not to use mipmap textures. If true, only power-of-two textures are allowed.\n\t * @returns {Promise<THREE.Texture>}\n\t */\n\tasync loadTexture(url, useMipMaps) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.load(url, (texture) => {\n\t\t\t\tresolve(texture);\n\t\t\t}, undefined, (message) => {\n\t\t\t\treject(new Error(`Failed to load ${url}: ${message}`));\n\t\t\t}, useMipMaps);\n\t\t});\n\t}\n\n\t/**\n\t * Generates an environment map with proper cube UV.\n\t * @param {THREE.Texture|THREE.CubeTexture} texture\n\t * @returns {THREE.Texture}\n\t */\n\tgenerateEnvMap(texture) {\n\t\tlet cubemap = texture;\n\t\t// Transforms equirectangular texture to cubemap texture if it is not already a cubemap\n\t\tif (!(texture instanceof THREE.CubeTexture)) {\n\t\t\tconst options = {\n\t\t\t\tdepthBuffer: false,\n\t\t\t\tstencilBuffer: false,\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\tminFilter: THREE.LinearMipMapLinearFilter,\n\t\t\t\tmagFilter: THREE.LinearFilter\n\t\t\t};\n\t\t\tcubemap = new THREE.WebGLCubeRenderTarget(512, options).fromEquirectangularTexture(this._renderer, texture).texture;\n\t\t}\n\n\t\tconst pmremGenerator = new THREE.PMREMGenerator(this._renderer);\n\t\tpmremGenerator.compileEquirectangularShader();\n\t\tconst envMap = pmremGenerator.fromEquirectangular(cubemap).texture;\n\n\t\treturn envMap;\n\t}\n\n\t/**\n\t * Loads a texture and calls the callbacks when it is done. The signature is to be compatible with THREE.TextureLoader.\n\t * @param {string} url - The url of the texture to load.\n\t * @param {(texture: THREE.Texture) => any} onLoad - The callback that is called when the texture is loaded.\n\t * @param {(event: ProgressEvent<EventTarget>, request: XMLHttpRequest) => any} _onProgress - The callback that is called when there is progress loading the texture. It is currently unused.\n\t * @param {(message: string) => any} onError - The callback that is called when there is an error loading the texture.\n\t * @param {boolean} [useMipMaps] - Whether or not to use mipmap textures. If true, only power-of-two textures are allowed.\n\t * @returns {THREE.Texture}\n\t */\n\tload(url, onLoad, _onProgress, onError, useMipMaps) {\n\t\t// Process the URL\n\t\turl = this._downloader.processUrl(url);\n\n\t\t// Handle preloaded cases\n\t\tlet texture = /** @type {THREE.Texture} */(null);\n\t\tif (url === 'white') {\n\t\t\ttexture = this._white;\n\t\t}\n\t\telse if (url === 'black') {\n\t\t\ttexture = this._black;\n\t\t}\n\t\telse if (url === 'clear') {\n\t\t\ttexture = this._clear;\n\t\t}\n\t\telse if (url === 'pink') {\n\t\t\ttexture = this._pink;\n\t\t}\n\t\telse if (url === 'gray') {\n\t\t\ttexture = this._gray;\n\t\t}\n\t\tif (texture !== null) {\n\t\t\tonLoad(texture);\n\t\t}\n\t\telse {\n\t\t\t// Detect video types from url\n\t\t\tif (url.includes('.mp4')) {\n\t\t\t\t// Controls through videoTexture.image\n\t\t\t\tconst videoElement = document.createElement('video');\n\t\t\t\tvideoElement.src = url;\n\t\t\t\tvideoElement.muted = true;\n\t\t\t\tvideoElement.playsInline = true;\n\t\t\t\tvideoElement.loop = false;\n\t\t\t\tvideoElement.crossOrigin = 'anonymous';\n\n\t\t\t\ttexture = new THREE.VideoTexture(videoElement);\n\t\t\t\ttexture.format = THREE.RGBAFormat;\n\t\t\t\ttexture.flipY = false;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tthis._downloader.download(url, true).then((download) => {\n\t\t\t\t\tvideoElement.src = URL.createObjectURL(new Blob([download.content], { type: 'video/mp4' }));\n\t\t\t\t\tvideoElement.onerror = (event) => {\n\t\t\t\t\t\tonError(event.toString());\n\t\t\t\t\t};\n\t\t\t\t\tvideoElement.oncanplaythrough = () => {\n\t\t\t\t\t\tonLoad(texture);\n\t\t\t\t\t};\n\t\t\t\t\tvideoElement.load();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Load the texture.\n\t\t\t\tthis._threeJsTextureLoader.load(url, (texture) => {\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tif (useMipMaps === false) {\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\t}\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}, undefined, (event) => {\n\t\t\t\t\tonError(event.message);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn texture;\n\t}\n\n\t/**\n\t * Gets the cross origin attribute value used in loads. Present to be compatible with THREE.TextureLoader.\n\t * @returns {string}\n\t * @internal\n\t */\n\t// @ts-ignore\n\tget crossOrigin() {\n\t\treturn this._crossOrigin;\n\t}\n\n\t/**\n\t * Sets the cross origin attribute value used in loads. Present to be compatible with THREE.TextureLoader.\n\t * @param {string} crossOrigin - The cross origin attribute value.\n\t * @override\n\t * @internal\n\t */\n\tset crossOrigin(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._threeJsTextureLoader) {\n\t\t\tthis._threeJsTextureLoader.setCrossOrigin(this._crossOrigin);\n\t\t}\n\t}\n\n\t/**\n\t * Set method for the cross origin attribute. Present to be compatible with THREE.TextureLoader.\n\t * @param {string} crossOrigin - The cross origin attribute value.\n\t * @returns {this}\n\t * @override\n\t * @internal\n\t */\n\tsetCrossOrigin(crossOrigin) {\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the path value used in loads. Present to be compatible with THREE.TextureLoader.\n\t * @returns {string}\n\t * @internal\n\t */\n\t// @ts-ignore\n\tget path() {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * Sets the path value used in loads. Present to be compatible with THREE.TextureLoader.\n\t * @param {string} path - The path value.\n\t * @override\n\t * @internal\n\t */\n\tset path(path) {\n\t\tthis._path = path;\n\t\tif (this._threeJsTextureLoader) {\n\t\t\tthis._threeJsTextureLoader.setPath(this._path);\n\t\t}\n\t}\n\n\t/**\n\t * Set method for the path value. Present to be compatible with THREE.TextureLoader.\n\t * @param {string} path - The path value.\n\t * @returns {this}\n\t * @override\n\t * @internal\n\t */\n\tsetPath(path) {\n\t\tthis.path = path;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new 1x1 pixel THREE.Texture from the color.\n\t * @param {Color} color - The color of the single pixel.\n\t * @returns {THREE.Texture}\n\t * @protected\n\t */\n\tstatic _newTexture(color) {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = 1;\n\t\tcanvas.height = 1;\n\t\tconst context = canvas.getContext('2d');\n\t\tcontext.fillStyle = 'rgba(' + (color.r * 255) + ',' + (color.g * 255) + ',' + (color.b * 255) + ',' + (color.a * 255) + ')';\n\t\tcontext.fillRect(0, 0, 1, 1);\n\t\treturn new THREE.CanvasTexture(canvas);\n\t}\n}\n\n/**\n * The cube face names for cube map texture loading.\n * @type {string[]}\n */\nconst _cubeFaceNames = [\n\t'posx',\n\t'negx',\n\t'posy',\n\t'negy',\n\t'posz',\n\t'negz'];\n","/** @module pioneer */\nimport {\n\tCapabilities,\n\tConfig,\n\tDownloader,\n\tThreeJsKTXLoader,\n\tTextureLoader,\n\tTHREE\n} from './internal';\n\n/**\n * The texture loader. Responsible for loading all textures.\n * If `useCompression` is used for any of the functions, the appropriate extension is retrieved from Capabilities,\n * and it plus the '.ktx' extension replace the extension of the original url. See {@link Capabilities} for more detail.\n */\nexport class TextureLoaderCompressed extends TextureLoader {\n\t/**\n\t * Constructor.\n\t * @param {Downloader} downloader - The download manager.\n\t * @param {Config} config - The config manager.\n\t * @param {THREE.WebGLRenderer} renderer\n\t */\n\tconstructor(downloader, config, renderer) {\n\t\tsuper(downloader, renderer);\n\n\t\t/**\n\t\t * The config.\n\t\t * @type {Config}\n\t\t * @private\n\t\t */\n\t\tthis._config = config;\n\n\t\t/**\n\t\t * A ThreeJs texture loader for use by the load function.\n\t\t * @type {ThreeJsKTXLoader}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsKTXLoader = new ThreeJsKTXLoader();\n\n\t\t// Configure the loaders.\n\t\tthis._threeJsKTXLoader.setCrossOrigin(this._crossOrigin);\n\t\tthis._threeJsKTXLoader.setPath(this._path);\n\t}\n\n\t/**\n\t * Loads a texture and calls the callbacks when it is done. The signature is to be compatible with THREE.TextureLoader.\n\t * @param {string} url - The url of the texture to load.\n\t * @param {(texture: THREE.Texture) => any} onLoad - The callback that is called when the texture is loaded.\n\t * @param {(event: ProgressEvent<EventTarget>, request: XMLHttpRequest) => any} onProgress - The callback that is called when there is progress loading the texture.\n\t * @param {(message: string) => any} onError - The callback that is called when there is an error loading the texture.\n\t * @param {boolean} [useMipMaps] - Whether or not to use mipmap textures. If true, only power-of-two textures are allowed.\n\t * @returns {THREE.Texture}\n\t * @override\n\t */\n\tload(url, onLoad, onProgress, onError, useMipMaps) {\n\t\t// If it's a normal, just do regular texture.\n\t\tif (url.match(/_n\\.[^.]+$/) !== null) {\n\t\t\treturn super.load(url, onLoad, onProgress, onError, useMipMaps);\n\t\t}\n\n\t\t// Process the URL\n\t\turl = this._downloader.processUrl(url);\n\n\t\t// Handle preloaded cases\n\t\tlet texture = null;\n\t\tif (url === 'white') {\n\t\t\ttexture = this._white;\n\t\t}\n\t\telse if (url === 'black') {\n\t\t\ttexture = this._black;\n\t\t}\n\t\telse if (url === 'clear') {\n\t\t\ttexture = this._clear;\n\t\t}\n\t\telse if (url === 'pink') {\n\t\t\ttexture = this._pink;\n\t\t}\n\t\tif (texture !== null) {\n\t\t\tonLoad(texture);\n\t\t}\n\t\telse {\n\t\t\t// Replace the url with the .ktx version.\n\t\t\turl = url.replace(/\\.(\\w+)$/, '-' + Capabilities.__getCompressedTextureExtension() + '.ktx');\n\t\t\t// Load the texture.\n\t\t\tthis._threeJsKTXLoader.load(url, (texture) => {\n\t\t\t\ttexture.flipY = false;\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (useMipMaps === false) { // If undefined or true, it'll use mipmaps.\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t}\n\t\t\t\t// @ts-ignore\n\t\t\t\ttexture.ktxFormat = texture.format; // This is needed because GLTFLoader forces the texture format to RGB/A. See https://github.com/mrdoob/three.js/issues/15763\n\t\t\t\tonLoad(texture);\n\t\t\t}, undefined, (event) => {\n\t\t\t\tonError(event.message);\n\t\t\t});\n\t\t}\n\n\t\treturn texture;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tMathUtils,\n\tPool,\n\tVector3\n} from '../internal';\n\n/** An azimuth, elevation, and range. */\nexport class AER extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<AER>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * Constructor.\n\t * @param {number} azimuth\n\t * @param {number} elevation\n\t * @param {number} range\n\t */\n\tconstructor(azimuth = 0, elevation = 0, range = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * azimuth\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._azimuth = azimuth;\n\t\t/**\n\t\t * elevation\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._elevation = elevation;\n\t\t/**\n\t\t * range\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._range = range;\n\t}\n\n\t/**\n\t * Gets the azimuth.\n\t * @returns {number}\n\t */\n\tget azimuth() {\n\t\treturn this._azimuth;\n\t}\n\n\t/**\n\t * Sets the azimuth.\n\t * @param {number} azimuth\n\t */\n\tset azimuth(azimuth) {\n\t\tthis.throwIfFrozen();\n\t\tthis._azimuth = azimuth;\n\t}\n\n\t/**\n\t * Gets the elevation.\n\t * @returns {number}\n\t */\n\tget elevation() {\n\t\treturn this._elevation;\n\t}\n\n\t/**\n\t * Sets the elevation.\n\t * @param {number} elevation\n\t */\n\tset elevation(elevation) {\n\t\tthis.throwIfFrozen();\n\t\tthis._elevation = elevation;\n\t}\n\n\t/**\n\t * Gets the range.\n\t * @returns {number}\n\t */\n\tget range() {\n\t\treturn this._range;\n\t}\n\n\t/**\n\t * Sets the range.\n\t * @param {number} range\n\t */\n\tset range(range) {\n\t\tthis.throwIfFrozen();\n\t\tthis._range = range;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @param {boolean} deg - whether or not to print in degrees or radians.\n\t * @returns {string}\n\t * @override\n\t */\n\ttoString(deg = false) {\n\t\tif (deg) {\n\t\t\treturn '[' + MathUtils.radToDeg(this._azimuth) + ', ' + MathUtils.radToDeg(this._elevation) + ', ' + this._range + ']';\n\t\t}\n\t\telse {\n\t\t\treturn '[' + this._azimuth + ', ' + this._elevation + ', ' + this._range + ']';\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {AER} a\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._azimuth = a._azimuth;\n\t\tthis._elevation = a._elevation;\n\t\tthis._range = a._range;\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t * @param {number} azimuth\n\t * @param {number} elevation\n\t * @param {number} range\n\t */\n\tset(azimuth, elevation, range) {\n\t\tthis.throwIfFrozen();\n\t\tthis._azimuth = azimuth;\n\t\tthis._elevation = elevation;\n\t\tthis._range = range;\n\t}\n\n\t/**\n\t * Sets this from the xyz equivalent of azimuth (rotation about z-axis starting from x-axis), elevation (from x-y plane), and range.\n\t * @param {Vector3} xyz\n\t */\n\tsetFromVector(xyz) {\n\t\tthis.throwIfFrozen();\n\t\tthis._range = xyz.magnitude();\n\t\tthis._elevation = Math.asin(xyz.z / this._range);\n\t\tthis._azimuth = Math.atan2(xyz.y, xyz.x);\n\t}\n}\n\n/** @type {Pool<AER>} */\nconst _pool = new Pool(AER);\n","/** @module pioneer */\nimport {\n\tScene\n} from '../internal';\n\n/**\n * @typedef RefAble\n * @property {function(): boolean} isEnabled\n * @property {function(): boolean} isDestroyed\n */\n\n/**\n * A reference to an object.\n * @template {RefAble} Type\n */\nexport class BaseRef {\n\t/**\n\t * Constructor.\n\t * @param {Scene} scene\n\t */\n\tconstructor(scene) {\n\t\t/**\n\t\t * The scene where this reference will search.\n\t\t * @type {Scene}\n\t\t * @protected\n\t\t */\n\t\tthis._scene = scene;\n\n\t\t/**\n\t\t * The entity.\n\t\t * @type {Type | null}\n\t\t * @protected\n\t\t */\n\t\tthis._ref = null;\n\n\t\t/**\n\t\t * The callback to be called when the reference changes.\n\t\t * @type {((oldRef: Type | null, newRef: Type | null) => any) | null}\n\t\t * @private\n\t\t */\n\t\tthis._refChangedCallback = null;\n\t}\n\n\t/**\n\t * Gets the reference.\n\t * @returns {Type | null}\n\t */\n\tget() {\n\t\tthis.update();\n\t\treturn this._ref;\n\t}\n\n\t/**\n\t * Sets a callback to be called when the reference changes.\n\t * @param {((oldRef: Type | null, newRef: Type | null) => any) | null} refChangedCallback\n\t */\n\tsetRefChangedCallback(refChangedCallback) {\n\t\tthis._refChangedCallback = refChangedCallback;\n\t}\n\n\t/**\n\t * Updates the reference.\n\t * @abstract\n\t */\n\tupdate() {\n\t}\n\n\t/**\n\t * Updates the ref, calling the callback if necessary.\n\t * @param {Type | null} newRef\n\t * @protected\n\t */\n\t_setRef(newRef) {\n\t\t// Make sure the new ref is enabled, otherwise discard it.\n\t\tif (newRef !== null && !newRef.isEnabled()) {\n\t\t\tnewRef = null;\n\t\t}\n\t\t// If they are different,\n\t\tif (this._ref !== newRef) {\n\t\t\tconst oldRef = this._ref;\n\t\t\t// Set the ref.\n\t\t\tthis._ref = newRef;\n\t\t\t// Call the callback.\n\t\t\tif (this._refChangedCallback !== null) {\n\t\t\t\tthis._refChangedCallback(oldRef, this._ref);\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFastIterable,\n\tFastMap\n} from '../internal';\n\n/**\n * A generic cache.\n * @template Type\n * @extends {FastIterable<Type>}\n */\nexport class Cache extends FastIterable {\n\t/**\n\t * Constructor.\n\t * @param {(key: string) => Type} itemConstructor\n\t * @param {(item: Type) => any} itemDestructor\n\t */\n\tconstructor(itemConstructor = null, itemDestructor = null) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The keys to entries.\n\t\t * @type {FastMap<string, { item: Type, count: number }>}\n\t\t * @private\n\t\t */\n\t\tthis._keysToEntries = new FastMap();\n\n\t\t/**\n\t\t * The items to keys.\n\t\t * @type {Map<Type, string>}\n\t\t * @private\n\t\t */\n\t\tthis._itemToKeys = new Map();\n\n\t\t/**\n\t\t * The item constructor.\n\t\t * @type {(key: string) => Type}\n\t\t * @private\n\t\t */\n\t\tthis._itemConstructor = itemConstructor;\n\n\t\t/**\n\t\t * The item destructor.\n\t\t * @type {(item: Type) => any}\n\t\t * @private\n\t\t */\n\t\tthis._itemDestructor = itemDestructor;\n\t}\n\n\t/**\n\t * Gets the item with the key. If it doesn't yet exist, it creates it.\n\t * @param {string} key\n\t * @returns {Type}\n\t */\n\tget(key) {\n\t\tconst entry = this._keysToEntries.get(key);\n\t\tif (entry === undefined) {\n\t\t\tconst newEntry = {\n\t\t\t\titem: this._itemConstructor(key),\n\t\t\t\tcount: 1\n\t\t\t};\n\t\t\tthis._keysToEntries.set(key, newEntry);\n\t\t\tthis._itemToKeys.set(newEntry.item, key);\n\t\t\treturn newEntry.item;\n\t\t}\n\t\telse {\n\t\t\tentry.count += 1;\n\t\t\treturn entry.item;\n\t\t}\n\t}\n\n\t/**\n\t * Releases the item after a call to get.\n\t * @param {Type} item\n\t */\n\trelease(item) {\n\t\tconst key = this._itemToKeys.get(item);\n\t\tif (key !== undefined) {\n\t\t\tconst entry = this._keysToEntries.get(key);\n\t\t\tentry.count -= 1;\n\t\t\tif (entry.count === 0) {\n\t\t\t\tthis._itemDestructor(entry.item);\n\t\t\t\tthis._keysToEntries.delete(key);\n\t\t\t\tthis._itemToKeys.delete(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the item of the given index.\n\t * @param {number} index\n\t * @returns {Type}\n\t * @override\n\t */\n\tgetAt(index) {\n\t\treturn this._keysToEntries.getAt(index).value.item;\n\t}\n\n\t/**\n\t * Gets the number of key-value pairs.\n\t * @returns {number}\n\t * @override\n\t */\n\tget size() {\n\t\treturn this._keysToEntries.size;\n\t}\n}\n","/** @module pioneer */\n\n/**\n * A item within the Collection. This is meant to be subclassed.\n * @template CollectionParentType\n * @abstract\n */\nexport class CollectionItem {\n\t/**\n\t * Constructs an item.\n\t * @constructor\n\t * @param {string} type - the type of the item\n\t * @param {string} name - the name of the item\n\t * @param {CollectionParentType} collectionParent - the object that contains the collection\n\t */\n\tconstructor(type, name, collectionParent) {\n\t\t/**\n\t\t * The type of the item.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._type = type;\n\n\t\t/**\n\t\t * The index of the item.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._index = 0;\n\n\t\t/**\n\t\t * The type index of the item.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._typeIndex = 0;\n\n\t\t/**\n\t\t * The name of the item.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._name = name;\n\n\t\t/**\n\t\t * The object that contains the collection.\n\t\t * @type {CollectionParentType}\n\t\t * @private\n\t\t */\n\t\tthis._collectionParent = collectionParent;\n\t}\n\n\t/**\n\t * Gets the type.\n\t * @returns {string}\n\t */\n\tgetType() {\n\t\treturn this._type;\n\t}\n\n\t/**\n\t * Gets the index.\n\t * @returns {number}\n\t */\n\tgetIndex() {\n\t\treturn this._index;\n\t}\n\n\t/**\n\t * Sets the index. Only to be used internally by Collection.\n\t * @param {number} index\n\t * @internal\n\t */\n\t__setIndex(index) {\n\t\tthis._index = index;\n\t}\n\n\t/**\n\t * Gets the type index.\n\t * @returns {number}\n\t */\n\tgetTypeIndex() {\n\t\treturn this._typeIndex;\n\t}\n\n\t/**\n\t * Sets the type index. Only to be used internally by Collection.\n\t * @param {number} typeIndex\n\t * @internal\n\t */\n\t__setTypeIndex(typeIndex) {\n\t\tthis._typeIndex = typeIndex;\n\t}\n\n\t/**\n\t * Gets the name.\n\t * @returns {string}\n\t */\n\tgetName() {\n\t\treturn this._name;\n\t}\n\n\t/**\n\t * Gets the object that contains the collection. Only to be used internally by the class that contains this.\n\t * @returns {CollectionParentType}\n\t */\n\t__getCollectionParent() {\n\t\treturn this._collectionParent;\n\t}\n\n\t/**\n\t * Sets the object that contains the collection. Only to be used internally by the class that contains this.\n\t * @param {CollectionParentType} collectionParent\n\t */\n\t__setCollectionParent(collectionParent) {\n\t\tthis._collectionParent = collectionParent;\n\t}\n\n\t/**\n\t * Does whatever is necessary to clean up the resources used by the item.\n\t * @abstract\n\t */\n\t__destroy() {\n\t}\n}\n\n/**\n * The type constructor that takes a type, name, and its parent.\n * @template {CollectionItem<CollectionParentType>} ItemType\n * @template CollectionParentType\n * @typedef {new (type: string, name: string, parent: CollectionParentType) => ItemType} TypeConstructor\n */\n\n/**\n * An ordered and named list of items. Every item constructor must be of the form Type(name, parent).\n * @template {CollectionItem<CollectionParentType>} ItemType\n * @template CollectionParentType\n */\nexport class Collection {\n\t/**\n\t * Constructs the collection.\n\t * @constructor\n\t * @param {CollectionParentType} parent - the object that contains this collection\n\t * @param {Map<string, TypeConstructor<ItemType, CollectionParentType>>} types - the mapping from type names to type constructors\n\t */\n\tconstructor(parent, types) {\n\t\t/**\n\t\t * The parent of this collection that the items can refer to.\n\t\t * @type {CollectionParentType}\n\t\t * @private\n\t\t */\n\t\tthis._parent = parent;\n\n\t\t/**\n\t\t * The mapping from type names to type constructors.\n\t\t * @type {Map<string, TypeConstructor<ItemType, CollectionParentType>>}\n\t\t * @private\n\t\t */\n\t\tthis._types = types;\n\n\t\t/**\n\t\t * The array of items to manage.\n\t\t * @type {ItemType[]}\n\t\t * @private\n\t\t */\n\t\tthis._items = [];\n\n\t\t/**\n\t\t * The mapping from names to items.\n\t\t * @type {Map<string, ItemType>}\n\t\t * @private\n\t\t */\n\t\tthis._itemsByName = new Map();\n\n\t\t/**\n\t\t * The mapping from type constructors to items in arrays.\n\t\t * @type {Map<TypeConstructor<ItemType, CollectionParentType>, ItemType[]>}\n\t\t * @private\n\t\t */\n\t\tthis._itemsByType = new Map();\n\t}\n\n\t/**\n\t * Gets the item from either the item, name, or an index. It returns null if the item is not found.\n\t * @param {ItemType|string|number} itemOrNameOrIndex - the item, its name, or its index to get\n\t * @returns {ItemType | null}\n\t */\n\tget(itemOrNameOrIndex) {\n\t\tconst index = this._getByItemOrNameOrIndex(itemOrNameOrIndex);\n\t\treturn index !== undefined ? this._items[index] : null;\n\t}\n\n\t/**\n\t * Gets the index'th item of the given type. The index is base 0. Returns null if none is found.\n\t * @param {string} typeName\n\t * @param {number} [index=0]\n\t * @returns {ItemType | null}\n\t */\n\tgetByType(typeName, index = 0) {\n\t\tconst type = this._types.get(typeName);\n\t\tif (type === undefined) {\n\t\t\treturn null;\n\t\t}\n\t\tconst itemsOfType = this._itemsByType.get(type);\n\t\tif (itemsOfType === undefined) {\n\t\t\treturn null;\n\t\t}\n\t\tif (index < 0 || index >= itemsOfType.length) {\n\t\t\treturn null;\n\t\t}\n\t\treturn itemsOfType[index];\n\t}\n\n\t/**\n\t * Gets the index'th item of the given type. The index is base 0. Returns null if none is found.\n\t * @template {ItemType} Class\n\t * @param {TypeConstructor<Class, CollectionParentType>} ClassConstructor\n\t * @param {number} [index=0]\n\t * @returns {Class | null}\n\t */\n\tgetByClass(ClassConstructor, index = 0) {\n\t\tconst typesList = this._itemsByType.get(ClassConstructor);\n\t\tif (typesList !== undefined && index >= 0 && index < typesList.length) {\n\t\t\treturn /** @type {Class | null} */(typesList[index]);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Create an item using with the given name and return it.\n\t * @param {string} type - the type of the item to be created\n\t * @param {string} [name=''] - the name of the item to be created\n\t * @param {ItemType} [beforeItem] - insert the item before this item\n\t * @returns {ItemType}\n\t */\n\tadd(type, name = '', beforeItem) {\n\t\t// Check if the name already exists in the scene.\n\t\tif (name !== '' && this._itemsByName.has(name)) {\n\t\t\tthrow new Error(`Already added \"${name}\".`);\n\t\t}\n\t\tconst TypeConstructor = this._types.get(type);\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(`Type \"${type}\" not found.`);\n\t\t}\n\t\tlet item;\n\t\ttry {\n\t\t\titem = new TypeConstructor(type, name, this._parent);\n\t\t}\n\t\tcatch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.message = `While adding \"${name}\" of type \"${type}\": ${error.message}`;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t\t// Add the item to the lists.\n\t\tthis._addToLists(name, item, beforeItem);\n\t\t// Return the newly created item.\n\t\treturn item;\n\t}\n\n\t/**\n\t * Create an item using with the given name and return it.\n\t * @template {ItemType} Class\n\t * @param {TypeConstructor<Class, CollectionParentType>} ClassConstructor\n\t * @param {string} [name=''] - the name of the item to be created\n\t * @param {ItemType} [beforeItem] - insert the item before this item\n\t * @returns {Class}\n\t */\n\taddByClass(ClassConstructor, name = '', beforeItem) {\n\t\t// Check if the name already exists in the scene.\n\t\tif (name !== '' && this._itemsByName.has(name)) {\n\t\t\tthrow new Error(`Already added \"${name}\".`);\n\t\t}\n\t\ttry {\n\t\t\t// Get the string type associated with the class, if there is one.\n\t\t\tlet type = '';\n\t\t\tfor (const entry of this._types.entries()) {\n\t\t\t\tif (entry[1] === ClassConstructor) {\n\t\t\t\t\ttype = entry[0];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Create the new item.\n\t\t\tconst item = new ClassConstructor(type, name, this._parent);\n\t\t\t// Add the item to the lists.\n\t\t\tthis._addToLists(name, item, beforeItem);\n\t\t\t// Return the newly created item.\n\t\t\treturn item;\n\t\t}\n\t\tcatch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.message = `While adding \"${name}\": ${error.message}`;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Moves an item to another collection of the same type.\n\t * @param {ItemType|string|number} itemOrNameOrIndex - the item, its name, or its index to be moved\n\t * @param {Collection<ItemType, CollectionParentType>} newCollection\n\t * @param {ItemType} [beforeItem] - insert the item before this item in the new scene.\n\t */\n\tmove(itemOrNameOrIndex, newCollection, beforeItem) {\n\t\t// Get the index of the item.\n\t\tconst index = this._getByItemOrNameOrIndex(itemOrNameOrIndex);\n\t\t// If the item isn't found, do nothing.\n\t\tif (index === undefined) {\n\t\t\tthrow new Error('While moving item, the item is not found.');\n\t\t}\n\t\t// Get the item and name.\n\t\tconst item = this._items[index];\n\t\tconst name = item.getName();\n\t\t// Check if the name already exists in the new scene.\n\t\tif (name !== '' && newCollection._itemsByName.has(name)) {\n\t\t\tthrow new Error(`Already added \"${name}\".`);\n\t\t}\n\t\t// Remove the item from this list.\n\t\tthis._removeFromLists(index, name, item);\n\t\t// Add the item to the new list.\n\t\tnewCollection._addToLists(name, item, beforeItem);\n\t\t// Update the parent.\n\t\titem.__setCollectionParent(newCollection._parent);\n\t}\n\n\t/**\n\t * Remove and destroy an item.\n\t * @param {ItemType|string|number} itemOrNameOrIndex - the item, its name, or its index to be removed\n\t */\n\tremove(itemOrNameOrIndex) {\n\t\t// Get the index of the item.\n\t\tconst index = this._getByItemOrNameOrIndex(itemOrNameOrIndex);\n\t\t// If the item isn't found, do nothing.\n\t\tif (index === undefined) {\n\t\t\treturn;\n\t\t}\n\t\t// Get the item and name.\n\t\tconst item = this._items[index];\n\t\tconst name = item.getName();\n\t\t// Remove the item from the lists.\n\t\tthis._removeFromLists(index, name, item);\n\t\t// Call the destroy function.\n\t\titem.__destroy();\n\t}\n\n\t/**\n\t * Removes and destroys all of the items.\n\t */\n\tclear() {\n\t\tfor (let i = this._items.length - 1; i >= 0; i--) {\n\t\t\tthis._items[i].__destroy();\n\t\t}\n\t\tthis._items = [];\n\t\tthis._itemsByName.clear();\n\t\tthis._itemsByType.clear();\n\t}\n\n\t/**\n\t * Gets the number of items.\n\t * @returns {number}\n\t */\n\tget size() {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * Adds an item to the lists.\n\t * @param {string} name\n\t * @param {ItemType} item\n\t * @param {ItemType | undefined} beforeItem\n\t * @private\n\t */\n\t_addToLists(name, item, beforeItem) {\n\t\t// Add the item to the lists.\n\t\tconst index = beforeItem !== undefined ? beforeItem.getIndex() : this._items.length;\n\t\tthis._items.splice(index, 0, item);\n\t\tif (name !== '') {\n\t\t\tthis._itemsByName.set(name, item);\n\t\t}\n\t\tthis._updateIndices(index, item);\n\t}\n\n\t/**\n\t * Removes an item from the lists.\n\t * @param {number} index\n\t * @param {string} name\n\t * @param {ItemType} item\n\t * @private\n\t */\n\t_removeFromLists(index, name, item) {\n\t\t// Remove the item from the lists.\n\t\tthis._items.splice(index, 1);\n\t\tif (name !== '') {\n\t\t\tthis._itemsByName.delete(name);\n\t\t}\n\t\tthis._updateIndices(index, item);\n\t}\n\n\t/**\n\t * Update indices and type indices.\n\t * @param {number} startingIndex\n\t * @param {ItemType} item\n\t * @private\n\t */\n\t_updateIndices(startingIndex, item) {\n\t\t// Update the indices.\n\t\tfor (let i = startingIndex; i < this._items.length; i++) {\n\t\t\tthis._items[i].__setIndex(i);\n\t\t}\n\t\t// Update the type indices for this type.\n\t\tconst type = /** @type {TypeConstructor<ItemType, CollectionParentType>} */(item.constructor);\n\t\tconst typesList = this._itemsByType.set(type, []).get(type);\n\t\tlet typeIndex = item.getTypeIndex();\n\t\tfor (let i = 0; i < this._items.length; i++) {\n\t\t\tif (this._items[i].constructor === type) {\n\t\t\t\tthis._items[i].__setTypeIndex(typeIndex);\n\t\t\t\ttypesList.push(this._items[i]);\n\t\t\t\ttypeIndex += 1;\n\t\t\t}\n\t\t}\n\t\tif (typesList.length === 0) {\n\t\t\tthis._itemsByType.delete(type);\n\t\t}\n\t}\n\n\t__destroy() {\n\t\tfor (let i = this._items.length - 1; i >= 0; i--) {\n\t\t\tthis._items[i].__destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the index of an item by item, name, or index.\n\t * @param {ItemType|string|number} itemOrNameOrIndex\n\t * @returns {number | undefined}\n\t * @private\n\t */\n\t_getByItemOrNameOrIndex(itemOrNameOrIndex) {\n\t\tif (typeof itemOrNameOrIndex === 'number') {\n\t\t\tif (itemOrNameOrIndex >= 0 && itemOrNameOrIndex < this._items.length) {\n\t\t\t\treturn itemOrNameOrIndex;\n\t\t\t}\n\t\t}\n\t\telse { // item or name\n\t\t\tlet item;\n\t\t\tif (typeof itemOrNameOrIndex === 'string') {\n\t\t\t\titem = this._itemsByName.get(itemOrNameOrIndex);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titem = itemOrNameOrIndex;\n\t\t\t}\n\t\t\tfor (let i = this._items.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._items[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tMathUtils,\n\tPool\n} from '../internal';\n\n/** An RGBA color. All values are from 0 to 1. */\nexport class Color extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<Color>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * Black vector\n\t * @returns {Color}\n\t */\n\tstatic get Black() {\n\t\treturn _black;\n\t}\n\n\t/**\n\t * Clear vector\n\t * @returns {Color}\n\t */\n\tstatic get Clear() {\n\t\treturn _clear;\n\t}\n\n\t/**\n\t * Constructor. Defaults to white. Can use just RGB.\n\t * @param {number} r - red component [0 to 1]\n\t * @param {number} g - green component [0 to 1]\n\t * @param {number} b - blue component [0 to 1]\n\t * @param {number} a - alpha component [0 to 1]\n\t */\n\tconstructor(r = 1, g = 1, b = 1, a = 1) {\n\t\tsuper();\n\n\t\t/**\n\t\t * red\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._r = r;\n\n\t\t/**\n\t\t * green\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._g = g;\n\n\t\t/**\n\t\t * blue\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._b = b;\n\n\t\t/**\n\t\t * alpha\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._a = a;\n\t}\n\n\t/**\n\t * Gets the red component.\n\t * @returns {number}\n\t */\n\tget r() {\n\t\treturn this._r;\n\t}\n\n\t/**\n\t * Sets the red component.\n\t * @param {number} r\n\t */\n\tset r(r) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = r;\n\t}\n\n\t/**\n\t * Gets the green component.\n\t * @returns {number}\n\t */\n\tget g() {\n\t\treturn this._g;\n\t}\n\n\t/**\n\t * Sets the green component.\n\t * @param {number} g\n\t */\n\tset g(g) {\n\t\tthis.throwIfFrozen();\n\t\tthis._g = g;\n\t}\n\n\t/**\n\t * Gets the blue component.\n\t * @returns {number}\n\t */\n\tget b() {\n\t\treturn this._b;\n\t}\n\n\t/**\n\t * Sets the blue component.\n\t * @param {number} b\n\t */\n\tset b(b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._b = b;\n\t}\n\n\t/**\n\t * Gets the alpha component.\n\t * @returns {number}\n\t */\n\tget a() {\n\t\treturn this._a;\n\t}\n\n\t/**\n\t * Sets the alpha component.\n\t * @param {number} a\n\t */\n\tset a(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._a = a;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn '[' + this._r + ', ' + this._g + ', ' + this._b + ', ' + this._a + ']';\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {Color} a - the source color\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r;\n\t\tthis._g = a._g;\n\t\tthis._b = a._b;\n\t\tthis._a = a._a;\n\t}\n\n\t/**\n\t * Sets this to the parameters. Can use just RGB.\n\t * @param {number} r - red component [0 to 1]\n\t * @param {number} g - green component [0 to 1]\n\t * @param {number} b - blue component [0 to 1]\n\t * @param {number} a - alpha component [0 to 1]\n\t */\n\tset(r, g, b, a = 1) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = r;\n\t\tthis._g = g;\n\t\tthis._b = b;\n\t\tthis._a = a;\n\t}\n\n\t/**\n\t * Sets this to a + b.\n\t * @param {Color} a\n\t * @param {Color} b\n\t */\n\tadd(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r + b._r;\n\t\tthis._g = a._g + b._g;\n\t\tthis._b = a._b + b._b;\n\t\tthis._a = a._a + b._a;\n\t}\n\n\t/**\n\t * Sets this to a - b.\n\t * @param {Color} a\n\t * @param {Color} b\n\t */\n\tsub(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r - b._r;\n\t\tthis._g = a._g - b._g;\n\t\tthis._b = a._b - b._b;\n\t\tthis._a = a._a - b._a;\n\t}\n\n\t/**\n\t * Sets this to a * b, where b is a number.\n\t * @param {Color} a\n\t * @param {number} b\n\t */\n\tmult(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r * b;\n\t\tthis._g = a._g * b;\n\t\tthis._b = a._b * b;\n\t\tthis._a = a._a * b;\n\t}\n\n\t/**\n\t * Sets this to a + b * c, where c is a number.\n\t * @param {Color} a\n\t * @param {Color} b\n\t * @param {number} c\n\t */\n\taddMult(a, b, c) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r + b._r * c;\n\t\tthis._g = a._g + b._g * c;\n\t\tthis._b = a._b + b._b * c;\n\t\tthis._a = a._a + b._a * c;\n\t}\n\n\t/**\n\t * Sets this to a / b, where b is a number.\n\t * @param {Color} a\n\t * @param {number} b\n\t */\n\tdiv(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r / b;\n\t\tthis._g = a._g / b;\n\t\tthis._b = a._b / b;\n\t\tthis._a = a._a / b;\n\t}\n\n\t/**\n\t * Sets this to a * b, component-wise multiplication.\n\t * @param {Color} a\n\t * @param {Color} b\n\t */\n\tscale(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = a._r * b._r;\n\t\tthis._g = a._g * b._g;\n\t\tthis._b = a._b * b._b;\n\t\tthis._a = a._a * b._a;\n\t}\n\n\t/**\n\t * Returns the value (average of r, g, b components).\n\t * @returns {number}\n\t */\n\tvalue() {\n\t\treturn (this._r + this._g + this._b) / 3.0;\n\t}\n\n\t/**\n\t * Returns the value of the least component (only r, g, b).\n\t * @returns {number}\n\t */\n\tmin() {\n\t\treturn Math.min(this._r, this._g, this._b);\n\t}\n\n\t/**\n\t * Returns the value of the greatest component (only r, g, b).\n\t * @returns {number}\n\t */\n\tmax() {\n\t\treturn Math.max(this._r, this._g, this._b);\n\t}\n\n\t/**\n\t * Sets this to the lerp between a and b.\n\t * @param {Color} a - the color when u = 0\n\t * @param {Color} b - the color when u = 1\n\t * @param {number} u - the lerp parameter\n\t */\n\tlerp(a, b, u) {\n\t\tthis.throwIfFrozen();\n\t\tthis._r = MathUtils.lerp(a._r, b._r, u);\n\t\tthis._g = MathUtils.lerp(a._g, b._g, u);\n\t\tthis._b = MathUtils.lerp(a._b, b._b, u);\n\t\tthis._a = MathUtils.lerp(a._a, b._a, u);\n\t}\n}\n\n/**\n * @type {Pool<Color>}\n */\nconst _pool = new Pool(Color);\n\nconst _black = new Color(0, 0, 0, 1);\n_black.freeze();\n\nconst _clear = new Color(0, 0, 0, 1);\n_clear.freeze();\n","/** @module pioneer */\nimport {\n\t// eslint-disable-next-line no-unused-vars\n\tBaseComponent,\n\tBaseRef,\n\tScene\n} from '../internal';\n\n/**\n * A reference to a component.\n * @template {BaseComponent} Type\n * @extends BaseRef<Type>\n */\nexport class ComponentRef extends BaseRef {\n\t/**\n\t * Constructor.\n\t * @param {Scene} scene\n\t */\n\tconstructor(scene) {\n\t\tsuper(scene);\n\n\t\t/**\n\t\t * The name of the entity.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._entityName = '';\n\n\t\t/**\n\t\t * The name of the component.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._componentName = '';\n\n\t\t/**\n\t\t * The type of the component.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._componentType = '';\n\n\t\t/**\n\t\t * The index of the type of the component.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._componentTypeIndex = 0;\n\t}\n\n\t/**\n\t * Gets the entity name.\n\t * @returns {string}\n\t */\n\tgetEntityName() {\n\t\treturn this._entityName;\n\t}\n\n\t/**\n\t * Gets the component name, if used.\n\t * @returns {string}\n\t */\n\tgetComponentName() {\n\t\treturn this._componentName;\n\t}\n\n\t/**\n\t * Gets the component type, if used.\n\t * @returns {string}\n\t */\n\tgetComponentType() {\n\t\treturn this._componentType;\n\t}\n\n\t/**\n\t * Gets the component type index, if the component type is used.\n\t * @returns {number}\n\t */\n\tgetComponentTypeIndex() {\n\t\treturn this._componentTypeIndex;\n\t}\n\n\t/**\n\t * Sets the name of the reference component.\n\t * @param {string} entityName\n\t * @param {string} componentName\n\t */\n\tsetByName(entityName, componentName) {\n\t\tthis._entityName = entityName;\n\t\tthis._componentName = componentName;\n\t\tthis._componentType = '';\n\t}\n\n\t/**\n\t * Sets the type and index of the reference component.\n\t * @param {string} entityName\n\t * @param {string} componentType\n\t * @param {number} [componentTypeIndex]\n\t */\n\tsetByType(entityName, componentType, componentTypeIndex = 0) {\n\t\tthis._entityName = entityName;\n\t\tthis._componentType = componentType;\n\t\tthis._componentTypeIndex = componentTypeIndex;\n\t\tthis._componentName = '';\n\t}\n\n\t/**\n\t * Updates the reference.\n\t * @override\n\t */\n\tupdate() {\n\t\t// If there's no entity name or componentName/Type set, make sure the ref is null.\n\t\tif (this._entityName === '' || (this._componentName === '' && this._componentType === '')) {\n\t\t\tthis._setRef(null);\n\t\t}\n\t\t// If there is an entity name and a componentName set, make sure the ref is valid and correct.\n\t\telse if (this._componentName !== '') {\n\t\t\t// Make sure the entity is correct.\n\t\t\tconst entity = this._scene.getEntity(this._entityName);\n\t\t\tif (entity !== null && entity.isEnabled()) {\n\t\t\t\t// Make sure the component is correct.\n\t\t\t\tconst ref = /** @type {Type} */(entity.getComponent(this._componentName));\n\t\t\t\t// Set the ref.\n\t\t\t\tthis._setRef(ref);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setRef(null);\n\t\t\t}\n\t\t}\n\t\t// If there is an entity name and a componentType set, make sure the ref is valid and correct.\n\t\telse {\n\t\t\t// Make sure the entity is correct.\n\t\t\tconst entity = this._scene.getEntity(this._entityName);\n\t\t\tif (entity !== null && entity.isEnabled()) {\n\t\t\t\t// Make sure the component is correct.\n\t\t\t\tconst ref = /** @type {Type} */(entity.getComponentByType(this._componentType, this._componentTypeIndex));\n\t\t\t\t// Set the ref.\n\t\t\t\tthis._setRef(ref);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setRef(null);\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\t// eslint-disable-next-line no-unused-vars\n\tBaseController,\n\tBaseRef,\n\tScene\n} from '../internal';\n\n/**\n * A reference to a controller.\n * @template {BaseController} Type\n * @extends BaseRef<Type>\n */\nexport class ControllerRef extends BaseRef {\n\t/**\n\t * Constructor.\n\t * @param {Scene} scene\n\t */\n\tconstructor(scene) {\n\t\tsuper(scene);\n\n\t\t/**\n\t\t * The name of the entity.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._entityName = '';\n\n\t\t/**\n\t\t * The name of the controller.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._controllerName = '';\n\n\t\t/**\n\t\t * The type of the controller.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._controllerType = '';\n\n\t\t/**\n\t\t * The index of the type of the controller.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._controllerTypeIndex = 0;\n\t}\n\n\t/**\n\t * Gets the entity name.\n\t * @returns {string}\n\t */\n\tgetEntityName() {\n\t\treturn this._entityName;\n\t}\n\n\t/**\n\t * Gets the controller name, if used.\n\t * @returns {string}\n\t */\n\tgetControllerName() {\n\t\treturn this._controllerName;\n\t}\n\n\t/**\n\t * Gets the controller type, if used.\n\t * @returns {string}\n\t */\n\tgetControllerType() {\n\t\treturn this._controllerType;\n\t}\n\n\t/**\n\t * Gets the controller type index, if the controller type is used.\n\t * @returns {number}\n\t */\n\tgetControllerTypeIndex() {\n\t\treturn this._controllerTypeIndex;\n\t}\n\n\t/**\n\t * Sets the name of the reference controller.\n\t * @param {string} entityName\n\t * @param {string} controllerName\n\t */\n\tsetByName(entityName, controllerName) {\n\t\tthis._entityName = entityName;\n\t\tthis._controllerName = controllerName;\n\t\tthis._controllerType = '';\n\t}\n\n\t/**\n\t * Sets the type and index of the reference controller.\n\t * @param {string} entityName\n\t * @param {string} controllerType\n\t * @param {number} [controllerTypeIndex]\n\t */\n\tsetByType(entityName, controllerType, controllerTypeIndex = 0) {\n\t\tthis._entityName = entityName;\n\t\tthis._controllerType = controllerType;\n\t\tthis._controllerTypeIndex = controllerTypeIndex;\n\t\tthis._controllerName = '';\n\t}\n\n\t/**\n\t * Updates the reference.\n\t * @override\n\t */\n\tupdate() {\n\t\t// If there's no entity name or controllerName/Type set, make sure the ref is null.\n\t\tif (this._entityName === '' || (this._controllerName === '' && this._controllerType === '')) {\n\t\t\tthis._setRef(null);\n\t\t}\n\t\t// If there is an entity name and a controllerName set, make sure the ref is valid and correct.\n\t\telse if (this._controllerName !== '') {\n\t\t\t// Make sure the entity is correct.\n\t\t\tconst entity = this._scene.getEntity(this._entityName);\n\t\t\tif (entity !== null && entity.isEnabled()) {\n\t\t\t\t// Make sure the controller is correct.\n\t\t\t\tconst ref = /** @type {Type} */(entity.getController(this._controllerName));\n\t\t\t\t// Set the ref.\n\t\t\t\tthis._setRef(ref);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setRef(null);\n\t\t\t}\n\t\t}\n\t\t// If there is an entity name and a controllerType set, make sure the ref is valid and correct.\n\t\telse {\n\t\t\t// Make sure the entity is correct.\n\t\t\tconst entity = this._scene.getEntity(this._entityName);\n\t\t\tif (entity !== null && entity.isEnabled()) {\n\t\t\t\t// Make sure the controller is correct.\n\t\t\t\tconst ref = /** @type {Type} */(entity.getControllerByType(this._controllerType, this._controllerTypeIndex));\n\t\t\t\t// Set the ref.\n\t\t\t\tthis._setRef(ref);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setRef(null);\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tVector3\n} from '../internal';\n\nexport class CubeMap {\n\t/**\n\t * Converts an xyz vector to a uvFace vector. An array of cube map vectors may be passed in.\n\t * @param {Vector3} outUVFace\n\t * @param {Vector3} xyz\n\t * @param {Vector3[][]} [cubeMapFaceFrames]\n\t */\n\tstatic xyzToUVFace(outUVFace, xyz, cubeMapFaceFrames = this._defaultCubeMapFaceFrames) {\n\t\t/** @type {Vector3[]} */\n\t\tlet basis;\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tconst cubeMapFaceFrame = cubeMapFaceFrames[i];\n\t\t\tconst outVector = cubeMapFaceFrame[2];\n\t\t\tlet value0 = 0;\n\t\t\tlet value1 = 0;\n\t\t\tlet value2 = 0;\n\t\t\tlet neg = false;\n\t\t\tif (outVector === Vector3.XAxis || outVector === Vector3.XAxisNeg) {\n\t\t\t\tvalue0 = xyz.x;\n\t\t\t\tvalue1 = xyz.y;\n\t\t\t\tvalue2 = xyz.z;\n\t\t\t\tneg = (outVector === Vector3.XAxisNeg);\n\t\t\t}\n\t\t\telse if (outVector === Vector3.YAxis || outVector === Vector3.YAxisNeg) {\n\t\t\t\tvalue0 = xyz.y;\n\t\t\t\tvalue1 = xyz.z;\n\t\t\t\tvalue2 = xyz.x;\n\t\t\t\tneg = (outVector === Vector3.YAxisNeg);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue0 = xyz.z;\n\t\t\t\tvalue1 = xyz.x;\n\t\t\t\tvalue2 = xyz.y;\n\t\t\t\tneg = (outVector === Vector3.ZAxisNeg);\n\t\t\t}\n\t\t\tif (Math.abs(value0) >= Math.abs(value1) && Math.abs(value0) >= Math.abs(value2)) {\n\t\t\t\tif ((value0 >= 0.0 && !neg) || (value0 < 0.0 && neg)) {\n\t\t\t\t\tbasis = cubeMapFaceFrame;\n\t\t\t\t\toutUVFace.z = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (basis === undefined) {\n\t\t\toutUVFace.set(NaN, NaN, NaN);\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert into the uv basis from the xyz basis.\n\t\tlet z = basis[2].x * xyz.x + basis[2].y * xyz.y + basis[2].z * xyz.z;\n\t\tif (z < 0.0) {\n\t\t\tz = 1.0;\n\t\t}\n\t\toutUVFace.x = (basis[0].x * xyz.x + basis[0].y * xyz.y + basis[0].z * xyz.z) / z;\n\t\toutUVFace.y = (basis[1].x * xyz.x + basis[1].y * xyz.y + basis[1].z * xyz.z) / z;\n\n\t\t// Convert from -1 to +1, to 0 to 1.\n\t\toutUVFace.x = 0.5 * (outUVFace.x + 1.0);\n\t\toutUVFace.y = 0.5 * (outUVFace.y + 1.0);\n\t}\n}\n\n/**\n * The default vectors used for a cube map face frame orientation. The first dimension is 0-5 for each face and the second dimension are the +u, +v, and out vectors, respectively.\n * @type {Vector3[][]}\n */\nCubeMap._defaultCubeMapFaceFrames = [\n\t[Vector3.YAxis, Vector3.ZAxis, Vector3.XAxis],\n\t[Vector3.XAxisNeg, Vector3.ZAxis, Vector3.YAxis],\n\t[Vector3.YAxisNeg, Vector3.ZAxis, Vector3.XAxisNeg],\n\t[Vector3.XAxis, Vector3.ZAxis, Vector3.YAxisNeg],\n\t[Vector3.YAxis, Vector3.XAxisNeg, Vector3.ZAxis],\n\t[Vector3.YAxis, Vector3.XAxis, Vector3.ZAxisNeg]\n];\n","/** @module pioneer */\n\n/**\n * A dependency graph. The nodes are the items and the arrows are determined by the comparison function.\n * @template ItemType\n */\nexport class DependencyGraph {\n\tconstructor() {\n\t\t/**\n\t\t * The callback to be called for each item in the dependency graph.\n\t\t * @type {(item: ItemType) => any}\n\t\t * @private\n\t\t */\n\t\tthis._updateItemCallback = null;\n\n\t\t/**\n\t\t * The callback to ber called when comparing items. True means item a is dependent on item b.\n\t\t * @type {(a: ItemType, b: ItemType) => boolean}\n\t\t * @private\n\t\t */\n\t\tthis._compareItemCallback = null;\n\n\t\t/**\n\t\t * The list of items in the dependency graph.\n\t\t * @type {Map<ItemType, Node<ItemType>>}\n\t\t * @private\n\t\t */\n\t\tthis._nodes = new Map();\n\n\t\t/**\n\t\t * The sorted nodes.\n\t\t * @type {Array<Node<ItemType>>}\n\t\t * @private\n\t\t */\n\t\tthis._sortedNodes = [];\n\n\t\t/**\n\t\t * A boolean flag that determines of the dependency graph needs sorting.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._needsSorting = false;\n\t}\n\n\t/**\n\t * Sets the callback to be called for each item in the dependency graph.\n\t * @param {(item: ItemType) => any} updateItemCallback\n\t */\n\tsetUpdateItemCallback(updateItemCallback) {\n\t\tthis._updateItemCallback = updateItemCallback;\n\t}\n\n\t/**\n\t * Sets the callback to be called for each item in the dependency graph.\n\t * @param {(a: ItemType, b: ItemType) => boolean} compareItemCallback\n\t */\n\tsetCompareItemCallback(compareItemCallback) {\n\t\tthis._compareItemCallback = compareItemCallback;\n\t}\n\n\t/**\n\t * Adds an item.\n\t * @param {ItemType} item\n\t */\n\taddItem(item) {\n\t\t/** @type {Node<ItemType>} */\n\t\tconst node = new Node(item);\n\t\tthis._nodes.set(item, node);\n\t\tthis._needsSorting = true;\n\t}\n\n\t/**\n\t * Removes an item.\n\t * @param {ItemType} item\n\t */\n\tremoveItem(item) {\n\t\tif (this._nodes.delete(item)) {\n\t\t\tthis._needsSorting = true;\n\t\t}\n\t}\n\n\t/**\n\t * Signals that the graph needs sorting.\n\t */\n\tneedsSorting() {\n\t\tthis._needsSorting = true;\n\t}\n\n\t/**\n\t * Sorts the dependency graph and then iterates through through the dependency graph, calling the callback on each item.\n\t */\n\tupdate() {\n\t\t// Do the sorting if we need to do it.\n\t\tif (this._needsSorting) {\n\t\t\t// Reset all of the marks.\n\t\t\tfor (const node of this._nodes.values()) {\n\t\t\t\tnode.permanentMark = false;\n\t\t\t\tnode.temporaryMark = false;\n\t\t\t}\n\t\t\tthis._sortedNodes = [];\n\n\t\t\t// Sort the items using the depth-first algorithm.\n\t\t\tconst iterator = this._nodes.values();\n\t\t\tdo {\n\t\t\t\tconst result = iterator.next();\n\t\t\t\tif (result.done) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst keepGoing = this._visit(result.value);\n\t\t\t\tif (!keepGoing) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\n\t\t\t// It's sorted!\n\t\t\tthis._needsSorting = false;\n\t\t}\n\n\t\t// Do the update on the items.\n\t\tfor (let i = 0, l = this._sortedNodes.length; i < l; i++) {\n\t\t\tthis._updateItemCallback(this._sortedNodes[i].item);\n\t\t}\n\t}\n\n\t/**\n\t * The visit function in the depth-first sort algorithm.\n\t * @param {Node<ItemType>} node\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_visit(node) {\n\t\tif (node.permanentMark) {\n\t\t\treturn true;\n\t\t}\n\t\tif (node.temporaryMark) {\n\t\t\tthrow new Error('Dependency cycle in graph: ' + node.item);\n\t\t}\n\t\tnode.temporaryMark = true;\n\t\tfor (const aNode of this._nodes.values()) {\n\t\t\tlet nodeDependsOn = false;\n\t\t\tif (this._compareItemCallback) {\n\t\t\t\tnodeDependsOn = this._compareItemCallback(node.item, aNode.item);\n\t\t\t}\n\t\t\tif (nodeDependsOn) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._visit(aNode);\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\tif (error instanceof Error) {\n\t\t\t\t\t\terror.message = `${error.message} ← ${node.item}`;\n\t\t\t\t\t}\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnode.temporaryMark = false;\n\t\tnode.permanentMark = true;\n\t\tthis._sortedNodes.push(node);\n\t\treturn true;\n\t}\n}\n\n/**\n * The node in the graph.\n * @template ItemType\n * @private\n */\nclass Node {\n\t/**\n\t * Constructor.\n\t * @param {ItemType} item\n\t */\n\tconstructor(item) {\n\t\t/**\n\t\t * The item.\n\t\t * @type {ItemType}\n\t\t */\n\t\tthis.item = item;\n\n\t\t/**\n\t\t * A mark to help with depth-first topological sorting algorithm.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.permanentMark = false;\n\n\t\t/**\n\t\t * A mark to help with depth-first topological sorting algorithm.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.temporaryMark = false;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseRef,\n\t// eslint-disable-next-line no-unused-vars\n\tEntity,\n\tScene\n} from '../internal';\n\n/**\n * A reference to an entity.\n * @extends {BaseRef<Entity>}\n */\nexport class EntityRef extends BaseRef {\n\t/**\n\t * Constructor.\n\t * @param {Scene} scene\n\t * @param {string} [name]\n\t */\n\tconstructor(scene, name) {\n\t\tsuper(scene);\n\n\t\t/**\n\t\t * The name of the entity to reference.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._name = name !== undefined ? name : '';\n\t}\n\n\t/**\n\t * Gets the name of the reference.\n\t * @returns {string}\n\t */\n\tgetName() {\n\t\treturn this._name;\n\t}\n\n\t/**\n\t * Sets the name of the reference.\n\t * @param {string} name\n\t */\n\tsetName(name) {\n\t\tthis._name = name;\n\t}\n\n\t/**\n\t * Updates the reference.\n\t * @override\n\t */\n\tupdate() {\n\t\t// If there's no name set, make sure the ref is null.\n\t\tif (this._name === '') {\n\t\t\tif (this._ref !== null) {\n\t\t\t\tthis._setRef(null);\n\t\t\t}\n\t\t}\n\t\t// If there is a name, make sure the ref is valid and correct.\n\t\telse {\n\t\t\tif (this._ref === null || this._ref.isDestroyed() || !this._ref.isEnabled() || this._ref.getName() !== this._name) {\n\t\t\t\t// Get the new ref.\n\t\t\t\tconst ref = this._scene.getEntity(this._name);\n\t\t\t\t// Set the ref.\n\t\t\t\tthis._setRef(ref);\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @module pioneer */\n\n/**\n * A set of values, with the same functions as the standard Set object, except for iteration.\n * It has getAt(index) and size for iteration.\n * It's O(n) and garbage for removes, O(1) and no garbage for adds and iteration.\n * @template ValueType\n */\nexport class FastIterable {\n\t/**\n\t * Gets the value of the given index.\n\t * @param {number} _index\n\t * @returns {ValueType}\n\t */\n\tgetAt(_index) {\n\t\tthrow new Error();\n\t}\n\n\t/**\n\t * Gets the number of values.\n\t * @returns {number}\n\t */\n\tget size() {\n\t\tthrow new Error();\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFastIterable\n} from '../internal';\n\n/**\n * An entry in the map.\n * @template KeyType\n * @template ValueType\n */\nexport class FastMapEntry {\n\t/**\n\t * Constructor.\n\t * @param {KeyType} key\n\t * @param {ValueType} value\n\t */\n\tconstructor(key, value) {\n\t\t/**\n\t\t * The key.\n\t\t * @type {KeyType}\n\t\t */\n\t\tthis.key = key;\n\n\t\t/**\n\t\t * The value.\n\t\t * @type {ValueType}\n\t\t */\n\t\tthis.value = value;\n\t}\n}\n\n/**\n * A map of key-value pairs with the same functions as the standard Map object, except for iteration.\n * It has getAt(index) and size for iteration.\n * It's O(n) and garbage for removes, O(1) and no garbage for adds, gets, sets, and iteration.\n * @template KeyType\n * @template ValueType\n * @extends {FastIterable<FastMapEntry<KeyType, ValueType>>}\n */\nexport class FastMap extends FastIterable {\n\t/**\n\t * Constructor.\n\t * @param {Iterable<FastMapEntry<KeyType, ValueType>>} [iterable]\n\t */\n\tconstructor(iterable) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The list of key-value pairs.\n\t\t * @type {Array<FastMapEntry<KeyType, ValueType>>}\n\t\t * @private\n\t\t */\n\t\tthis._entries = [];\n\n\t\t/**\n\t\t * A mapping from keys to indices.\n\t\t * @type {Map<KeyType, number>}\n\t\t * @private\n\t\t */\n\t\tthis._keyMap = new Map();\n\n\t\t// Apply the iterable if it is supplied.\n\t\tif (iterable !== undefined) {\n\t\t\tfor (const entry of iterable) {\n\t\t\t\tthis._entries.push(new FastMapEntry(entry.key, entry.value));\n\t\t\t\tthis._keyMap.set(entry.key, this._entries.length - 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the key is in the map.\n\t * @param {KeyType} key\n\t * @returns {boolean}\n\t */\n\thas(key) {\n\t\treturn this._keyMap.has(key);\n\t}\n\n\t/**\n\t * Gets the value given a key.\n\t * @param {KeyType} key\n\t * @returns {ValueType}\n\t */\n\tget(key) {\n\t\tconst index = this._keyMap.get(key);\n\t\tif (index !== undefined) {\n\t\t\treturn this._entries[index].value;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Sets the value for the given key.\n\t * @param {KeyType} key\n\t * @param {ValueType} value\n\t */\n\tset(key, value) {\n\t\tconst index = this._keyMap.get(key);\n\t\tif (index !== undefined) {\n\t\t\tthis._entries[index].value = value;\n\t\t}\n\t\telse {\n\t\t\tthis._entries.push(new FastMapEntry(key, value));\n\t\t\tthis._keyMap.set(key, this._entries.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Deletes the value for the given key. Returns true if the key existed.\n\t * @param {KeyType} key\n\t * @returns {boolean}\n\t */\n\tdelete(key) {\n\t\tconst index = this._keyMap.get(key);\n\t\tif (index !== undefined) {\n\t\t\tthis._entries.splice(index, 1);\n\t\t\tthis._keyMap.delete(key);\n\t\t\t// Every index higher than the one deleted gets decremented by one. O(n) and generates garbage.\n\t\t\tfor (const pair of this._keyMap) {\n\t\t\t\tif (pair[1] > index) {\n\t\t\t\t\tthis._keyMap.set(pair[0], pair[1] - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Deletes all of the key-value pairs.\n\t */\n\tclear() {\n\t\tthis._entries = [];\n\t\tthis._keyMap.clear();\n\t}\n\n\t/**\n\t * Gets the key-value pair of the given index.\n\t * @param {number} index\n\t * @returns {FastMapEntry<KeyType, ValueType>}\n\t * @override\n\t */\n\tgetAt(index) {\n\t\treturn this._entries[index];\n\t}\n\n\t/**\n\t * Gets the number of key-value pairs.\n\t * @returns {number}\n\t * @override\n\t */\n\tget size() {\n\t\treturn this._entries.length;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFastIterable\n} from '../internal';\n\n/**\n * A set of values, with the same functions as the standard Set object, except for iteration.\n * It has getAt(index) and size for iteration.\n * It's O(n) and garbage for removes, O(1) and no garbage for adds and iteration.\n * @template ValueType\n * @extends {FastIterable<ValueType>}\n */\nexport class FastSet extends FastIterable {\n\t/**\n\t * Constructor.\n\t * @param {Iterable<ValueType>} [iterable]\n\t */\n\tconstructor(iterable) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The list of values.\n\t\t * @type {Array<ValueType>}\n\t\t * @private\n\t\t */\n\t\tthis._values = [];\n\n\t\t/**\n\t\t * A mapping from values to indices.\n\t\t * @type {Map<ValueType, number>}\n\t\t * @private\n\t\t */\n\t\tthis._valueMap = new Map();\n\n\t\t// Apply the iterable if it is supplied.\n\t\tif (iterable !== undefined) {\n\t\t\tfor (const key of iterable) {\n\t\t\t\tthis._values.push(key);\n\t\t\t\tthis._valueMap.set(key, this._values.length - 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the value is in the set.\n\t * @param {ValueType} value\n\t * @returns {boolean}\n\t */\n\thas(value) {\n\t\treturn this._valueMap.has(value);\n\t}\n\n\t/**\n\t * Adds the value.\n\t * @param {ValueType} value\n\t * @returns {FastSet<ValueType>}\n\t */\n\tadd(value) {\n\t\tconst index = this._valueMap.get(value);\n\t\tif (index === undefined) {\n\t\t\tthis._values.push(value);\n\t\t\tthis._valueMap.set(value, this._values.length - 1);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Deletes the value. Returns true if the value existed.\n\t * @param {ValueType} value\n\t * @returns {boolean}\n\t */\n\tdelete(value) {\n\t\tconst index = this._valueMap.get(value);\n\t\tif (index !== undefined) {\n\t\t\tthis._values.splice(index, 1);\n\t\t\tthis._valueMap.delete(value);\n\t\t\t// Every index higher than the one deleted gets decremented by one. O(n) and generates garbage.\n\t\t\tfor (const pair of this._valueMap) {\n\t\t\t\tif (pair[1] > index) {\n\t\t\t\t\tthis._valueMap.set(pair[0], pair[1] - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Deletes all of the keys.\n\t */\n\tclear() {\n\t\tthis._values = [];\n\t\tthis._valueMap.clear();\n\t}\n\n\t/**\n\t * Gets the value of the given index.\n\t * @param {number} index\n\t * @returns {ValueType}\n\t * @override\n\t */\n\tgetAt(index) {\n\t\treturn this._values[index];\n\t}\n\n\t/**\n\t * Gets the number of values.\n\t * @returns {number}\n\t * @override\n\t */\n\tget size() {\n\t\treturn this._values.length;\n\t}\n}\n","/** @module pioneer */\n\n/**\n * An FPS calculator. All you need to do is run <code>update()</code> every frame, and it will produce an FPS.\n */\nexport class FPS {\n\tconstructor() {\n\t\t/**\n\t\t * The number of samples to take when calculating the FPS.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numberOfSamples = 100;\n\n\t\t/**\n\t\t * The buffer of samples.\n\t\t * @type {Array<number>}\n\t\t * @private\n\t\t */\n\t\tthis._samples = new Array(this._numberOfSamples);\n\n\t\t/**\n\t\t * The current index in the buffer of samples.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._index = 0;\n\t}\n\n\t/**\n\t * Gets the number of samples to take when calculating the FPS.\n\t * @returns {number}\n\t */\n\tgetNumberOfSamples() {\n\t\treturn this._numberOfSamples;\n\t}\n\n\t/**\n\t * Sets the number of samples to take when calculating the FPS. This will reset the sample buffer. The default is 100.\n\t * @param {number} numberOfSamples - The number of samples in the buffer.\n\t */\n\tsetNumberOfSamples(numberOfSamples) {\n\t\tthis._numberOfSamples = numberOfSamples;\n\t\tthis._samples = new Array(this._numberOfSamples);\n\t}\n\n\t/**\n\t * Gets the FPS given the current samples.\n\t * @returns {number}\n\t */\n\tgetFPS() {\n\t\tlet samplesTotal = 0;\n\t\tfor (let i = 0; i < this._samples.length; i++) {\n\t\t\tsamplesTotal += this._samples[i];\n\t\t}\n\t\treturn this._samples.length / samplesTotal;\n\t}\n\n\t/**\n\t * Updates the samples with the latest delta time.\n\t * @param {number} deltaTime - The change in time between two frames.\n\t */\n\tupdate(deltaTime) {\n\t\tthis._samples[this._index] = deltaTime; // Used for frame-rate smoothing.\n\t\tthis._index = (this._index + 1) % this._samples.length;\n\t}\n}\n","/** @module pioneer */\n\n/**\n * This is a class that dynamically makes an object frozen or thawed.\n * When it is frozen, it cannot be modified.\n * To use this, an object must extend this and then for every method that modifies the object, call throwIfFrozen().\n */\nexport class Freezable {\n\t/**\n\t * Constructor. Starts out thawed.\n\t */\n\tconstructor() {\n\t\tthis._frozen = false;\n\t}\n\n\t/**\n\t * Throws a TypeError if it is frozen.\n\t */\n\tthrowIfFrozen() {\n\t\tif (this._frozen) {\n\t\t\tthrow new TypeError('The object is frozen.');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if it is frozen.\n\t * @returns {boolean}\n\t */\n\tisFrozen() {\n\t\treturn this._frozen;\n\t}\n\n\t/**\n\t * Freezes the object.\n\t */\n\tfreeze() {\n\t\tthis._frozen = true;\n\t}\n\n\t/**\n\t * Thaws (unfreezes) the object.\n\t */\n\tthaw() {\n\t\tthis._frozen = false;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tInterval,\n\tLatLonAlt,\n\tVector3\n} from '../internal';\n\n/** A class of geometry routines\n * @hideconstructor */\nexport class Geometry {\n\t/**\n\t * Given a line segment starting at p and going in the direction l (not unit), and a sphere of radius r at the origin, return the least lerp value such that 0 is at p and 1 is at p + l, that represents the an intersection between the line and the sphere. If there is no intersection NaN is returned.\n\t * @param {Vector3} p - The starting point of the segment (returning 0 = p).\n\t * @param {Vector3} l - The offset from the starting point (returning 1 = p + l).\n\t * @param {number} r - The radius of the sphere at the origin.\n\t * @returns {number}\n\t */\n\tstatic getLineSphereIntersectionWithSphereAtOrigin(p, l, r) {\n\t\tconst pp = p.dot(p);\n\t\tconst pl = p.dot(l);\n\t\tconst ll = l.dot(l);\n\t\tconst underSquareRoot = pl * pl + (r * r - pp) * ll;\n\t\tif (underSquareRoot < 0) {\n\t\t\treturn Number.NaN;\n\t\t}\n\t\telse {\n\t\t\treturn (-pl - Math.sqrt(underSquareRoot)) / ll;\n\t\t}\n\t}\n\n\t/**\n\t * Given a line segment starting at the origin and going toward l, and a sphere of radius r with its center at c, return the least lerp value such that 0 is at the origin and 1 is at l, that represents the an intersection between the line segment and the sphere. If there is no intersection NaN is returned.\n\t * @param {Interval} out - The interval representing the near and far points of intersection.\n\t * @param {Vector3} l - The end point of the line segment.\n\t * @param {Vector3} c - The center of the sphere.\n\t * @param {number} r - The radius of the sphere.\n\t */\n\tstatic getLineSphereIntersectionWithLineStartAtOrigin(out, l, c, r) {\n\t\tconst ll = l.dot(l);\n\t\tconst lc = l.dot(c);\n\t\tconst cc = c.dot(c);\n\t\tconst underSquareRoot = lc * lc + (r * r - cc) * ll;\n\t\tif (underSquareRoot < 0) {\n\t\t\tout.min = out.max = Number.NaN;\n\t\t}\n\t\telse {\n\t\t\tconst sqrt = Math.sqrt(underSquareRoot);\n\t\t\tout.min = (lc - sqrt) / ll;\n\t\t\tout.max = (lc + sqrt) / ll;\n\t\t}\n\t}\n\n\t/**\n\t * Takes an XYZ and sets out to the equivalent LLA on a sphere.\n\t * @param {LatLonAlt} outLLA - the LLA vector to be set\n\t * @param {Vector3} xyz - the XYZ vector to convert\n\t * @param {number} radius - the radius of the sphere\n\t */\n\tstatic getLLAFromXYZOnSphere(outLLA, xyz, radius) {\n\t\tconst xyLength = xyz.magnitudeXY();\n\t\toutLLA.lon = Math.atan2(xyz.y, xyz.x);\n\t\toutLLA.lat = Math.atan(xyz.z / xyLength);\n\t\toutLLA.alt = xyz.magnitude() - radius;\n\t}\n\n\t/**\n\t * Takes an LLA and sets out to the equivalent XYZ on a sphere.\n\t * @param {Vector3} outXYZ - the XYZ vector to be set\n\t * @param {LatLonAlt} lla - the LLA vector to convert\n\t * @param {number} radius - the radius of the sphere\n\t */\n\tstatic getXYZFromLLAOnSphere(outXYZ, lla, radius) {\n\t\toutXYZ.x = (radius + lla.alt) * Math.cos(lla.lat) * Math.cos(lla.lon);\n\t\toutXYZ.y = (radius + lla.alt) * Math.cos(lla.lat) * Math.sin(lla.lon);\n\t\toutXYZ.z = (radius + lla.alt) * Math.sin(lla.lat);\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tPool\n} from '../internal';\n\n/** An interval with a minimum and maximum. */\nexport class Interval extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<Interval>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * Infinite Interval\n\t * @returns {Interval}\n\t */\n\tstatic get Infinite() {\n\t\treturn _infinite;\n\t}\n\n\t/**\n\t * Constructor.\n\t * @param {number} min - the minimum of the interval\n\t * @param {number} max - the maximum of the interval\n\t */\n\tconstructor(min = 0, max = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * minumum\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._min = min;\n\n\t\t/**\n\t\t * maximum\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._max = max;\n\t}\n\n\t/**\n\t * Gets the minimum.\n\t * @returns {number}\n\t */\n\tget min() {\n\t\treturn this._min;\n\t}\n\n\t/**\n\t * Sets the minimum.\n\t * @param {number} min\n\t */\n\tset min(min) {\n\t\tthis.throwIfFrozen();\n\t\tthis._min = min;\n\t}\n\n\t/**\n\t * Gets the maximum.\n\t * @returns {number}\n\t */\n\tget max() {\n\t\treturn this._max;\n\t}\n\n\t/**\n\t * Sets the maximum\n\t * @param {number} max\n\t */\n\tset max(max) {\n\t\tthis.throwIfFrozen();\n\t\tthis._max = max;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @returns {string}\n\t * @override\n\t */\n\ttoString() {\n\t\treturn '[' + this._min + ', ' + this._max + ']';\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {Interval} a - the source interval\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._min = a._min;\n\t\tthis._max = a._max;\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t * @param {number} min - the minimum to set\n\t * @param {number} max - the maximum to set\n\t */\n\tset(min, max) {\n\t\tthis.throwIfFrozen();\n\t\tthis._min = min;\n\t\tthis._max = max;\n\t}\n\n\t/**\n\t * Returns the length (max - min). If this represents a integer interval, you'll need to add one.\n\t * @returns {number}\n\t */\n\tlength() {\n\t\treturn this._max - this._min;\n\t}\n\n\t/**\n\t * Returns the value clamped to within this.\n\t * @param {number} value - the value to clamp\n\t * @returns {number}\n\t */\n\tclamp(value) {\n\t\treturn Math.min(Math.max(this._min, value), this._max);\n\t}\n\n\t/**\n\t * Expands this to contain the value.\n\t * @param {number} value\n\t */\n\texpandTo(value) {\n\t\tthis.throwIfFrozen();\n\t\tthis._min = Math.min(this._min, value);\n\t\tthis._max = Math.max(this._max, value);\n\t}\n\n\t/**\n\t * Returns true if value is within this.\n\t * @param {number} value - the value to check\n\t * @returns {boolean}\n\t */\n\tcontains(value) {\n\t\treturn this._min <= value && value < this._max;\n\t}\n\n\t/**\n\t * Returns true if this intersects (not just touches) the other interval.\n\t * @param {Interval} interval - the interval to check\n\t * @returns {boolean}\n\t */\n\tintersects(interval) {\n\t\treturn this._min < interval._max && interval._min < this._max;\n\t}\n\n\t/**\n\t * Sets this to the intersection of intervals a and b.\n\t * @param {Interval} a\n\t * @param {Interval} b\n\t*/\n\tintersection(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._min = Math.max(a._min, b._min);\n\t\tthis._max = Math.min(a._max, b._max);\n\t\tif (this._max < this._min) {\n\t\t\tthis._max = this._min;\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to the union of intervals a and b.\n\t * @param {Interval} a\n\t * @param {Interval} b\n\t */\n\tunion(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._min = Math.min(a._min, b._min);\n\t\tthis._max = Math.max(a._max, b._max);\n\t}\n}\n\n/**\n * @type {Pool<Interval>}\n */\nconst _pool = new Pool(Interval);\n\n/**\n * Infinite Interval\n * @type {Interval}\n */\nconst _infinite = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n_infinite.freeze();\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tMathUtils,\n\tPool\n} from '../internal';\n\n/** A latitude, longitude, and altitude */\nexport class LatLonAlt extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<LatLonAlt>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * Constructor.\n\t * @param {number} lat - Latitude\n\t * @param {number} lon - Longitude\n\t * @param {number} alt - Altitude\n\t */\n\tconstructor(lat = 0, lon = 0, alt = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Latitude\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lat = lat;\n\n\t\t/**\n\t\t * Longitude\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lon = lon;\n\n\t\t/**\n\t\t * Altitude\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._alt = alt;\n\t}\n\n\t/**\n\t * Gets the latitude.\n\t * @returns {number}\n\t */\n\tget lat() {\n\t\treturn this._lat;\n\t}\n\n\t/**\n\t * Sets the latitude.\n\t * @param {number} lat\n\t */\n\tset lat(lat) {\n\t\tthis.throwIfFrozen();\n\t\tthis._lat = lat;\n\t}\n\n\t/**\n\t * Gets the longitude.\n\t * @returns {number}\n\t */\n\tget lon() {\n\t\treturn this._lon;\n\t}\n\n\t/**\n\t * Sets the longitude.\n\t * @param {number} lon\n\t */\n\tset lon(lon) {\n\t\tthis.throwIfFrozen();\n\t\tthis._lon = lon;\n\t}\n\n\t/**\n\t * Gets the altitude.\n\t * @returns {number}\n\t */\n\tget alt() {\n\t\treturn this._alt;\n\t}\n\n\t/**\n\t * Sets the altitude.\n\t * @param {number} alt\n\t */\n\tset alt(alt) {\n\t\tthis.throwIfFrozen();\n\t\tthis._alt = alt;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @param {boolean} deg - whether or not to print in degrees or radians.\n\t * @returns {string}\n\t * @override\n\t */\n\ttoString(deg = false) {\n\t\tif (deg) {\n\t\t\treturn '[' + MathUtils.radToDeg(this._lat) + ', ' + MathUtils.radToDeg(this._lon) + ', ' + this._alt + ']';\n\t\t}\n\t\telse {\n\t\t\treturn '[' + this._lat + ', ' + this._lon + ', ' + this._alt + ']';\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {LatLonAlt} a\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._lat = a._lat;\n\t\tthis._lon = a._lon;\n\t\tthis._alt = a._alt;\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t * @param {number} lat\n\t * @param {number} lon\n\t * @param {number} alt\n\t */\n\tset(lat, lon, alt) {\n\t\tthis.throwIfFrozen();\n\t\tthis._lat = lat;\n\t\tthis._lon = lon;\n\t\tthis._alt = alt;\n\t}\n}\n\n/**\n * @type {Pool<LatLonAlt>}\n */\nconst _pool = new Pool(LatLonAlt);\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tColor,\n\tMathUtils,\n\tQuaternion,\n\tSpoutComponent,\n\tTHREE,\n\tThreeJsHelper,\n\tVector2,\n\tVector3\n} from '../internal';\n\n/**\n * A helper class for drawing lines. It creates the objects and materials, but they are 'owned' by the component.\n */\nexport class LineMesh {\n\t/**\n\t * Constructor.\n\t * @param {BaseComponent} component\n\t */\n\tconstructor(component) {\n\t\t/**\n\t\t * The component that uses this.\n\t\t * @type {BaseComponent}\n\t\t * @private\n\t\t */\n\t\tthis._component = component;\n\n\t\t/**\n\t\t * A global multiplier for the alpha channel.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._alphaMultiplier = 1.0;\n\n\t\t/**\n\t\t * The position that the line points are relative to.\n\t\t * @type {Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._position = new Vector3();\n\n\t\t/**\n\t\t * The orientation that the line points are relative to.\n\t\t * @type {Quaternion}\n\t\t * @private\n\t\t */\n\t\tthis._orientation = new Quaternion();\n\n\t\t/**\n\t\t * The scale that all points are multiplied by.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._scale = 1;\n\n\t\t/**\n\t\t * The line dash gap length.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dashGapLength = 0;\n\n\t\t/**\n\t\t * The line dash length.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._dashLength = 1;\n\n\t\t/**\n\t\t * The width of the glow from full to clear along the edge of the lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._glowWidth = 0;\n\n\t\t/**\n\t\t * The Three.js objects. There needs to be a copy here since there may be multiple line meshes in the component.\n\t\t * @type {Array<THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial | THREE.ShaderMaterial[]>>}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsObjects = [];\n\n\t\t/**\n\t\t * The Three.js material.\n\t\t * @type {THREE.ShaderMaterial}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsMaterial = null;\n\n\t\t// Create the material.\n\t\tthis._threeJsMaterial = component.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('line');\n\t\tcomponent.getThreeJsMaterials().push(this._threeJsMaterial);\n\t\tthis._threeJsMaterial.uniforms['alphaMultiplier'].value = this._alphaMultiplier;\n\t\tthis._threeJsMaterial.uniforms['dashLength'].value = this._dashLength;\n\t\tthis._threeJsMaterial.uniforms['dashGapLength'].value = this._dashGapLength;\n\t\tthis._threeJsMaterial.uniforms['glowWidth'].value = this._glowWidth;\n\t}\n\n\t/**\n\t * Sets the positions. Each two positions is a line segment.\n\t * @param {Vector3[]} positions\n\t */\n\tsetPositions(positions) {\n\t\tif (positions.length % 2 !== 0) {\n\t\t\tthrow new Error('Number of positions in the LineMesh must be even.');\n\t\t}\n\t\t// Adjust the number of vertices. * 2 is because the line has width.\n\t\tthis._adjustVerticesInGeometries(positions.length * 2);\n\t\tconst positionPrev = Vector3.pool.get();\n\t\tconst positionNext = Vector3.pool.get();\n\t\tconst tangent = Vector3.pool.get();\n\t\tconst normal = Vector3.pool.get();\n\t\tconst segment = Vector3.pool.get();\n\t\t// Go through each geometry, setting the vertices. Each object holds up to _verticesPerGeometry vertices.\n\t\tlet dashOffset = 0;\n\t\tfor (let objectIndex = 0; objectIndex < this._threeJsObjects.length; objectIndex++) {\n\t\t\tconst attribute = /** @type {THREE.InterleavedBufferAttribute} */(this._threeJsObjects[objectIndex].geometry.getAttribute('position'));\n\t\t\tconst array = attribute.array;\n\t\t\tfor (let i = 0; i < array.length / (2 * LineMesh._floatsPerVertex); i++) {\n\t\t\t\tconst offset = i + objectIndex * (LineMesh._verticesPerGeometry / 2);\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 0] = positions[offset].x;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 1] = positions[offset].y;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 2] = positions[offset].z;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 0] = positions[offset].x;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 1] = positions[offset].y;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 2] = positions[offset].z;\n\t\t\t\t// Get the positionPrev and positionNext.\n\t\t\t\tif (offset % 2 === 0) {\n\t\t\t\t\tif (positions[offset].equals(positions[MathUtils.wrap(offset - 1, 0, positions.length)])) {\n\t\t\t\t\t\tpositionPrev.copy(positions[MathUtils.wrap(offset - 2, 0, positions.length)]);\n\t\t\t\t\t\tpositionNext.copy(positions[offset + 1]);\n\t\t\t\t\t}\n\t\t\t\t\telse { // Disconnected segments, so just use the current position as the previous position.\n\t\t\t\t\t\tpositionPrev.copy(positions[offset]);\n\t\t\t\t\t\tpositionNext.copy(positions[offset + 1]);\n\t\t\t\t\t\tdashOffset = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (offset % 2 === 1) {\n\t\t\t\t\tif (positions[offset].equals(positions[MathUtils.wrap(offset + 1, 0, positions.length)])) {\n\t\t\t\t\t\tpositionPrev.copy(positions[offset - 1]);\n\t\t\t\t\t\tpositionNext.copy(positions[MathUtils.wrap(offset + 2, 0, positions.length)]);\n\t\t\t\t\t}\n\t\t\t\t\telse { // Disconnected segments, so just use the current position as the next position.\n\t\t\t\t\t\tpositionPrev.copy(positions[offset - 1]);\n\t\t\t\t\t\tpositionNext.copy(positions[offset]);\n\t\t\t\t\t}\n\t\t\t\t\tsegment.sub(positions[offset], positions[offset - 1]);\n\t\t\t\t\tdashOffset += segment.magnitude();\n\t\t\t\t}\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 3] = positionPrev.x;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 4] = positionPrev.y;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 5] = positionPrev.z;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 3] = positionPrev.x;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 4] = positionPrev.y;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 5] = positionPrev.z;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 6] = positionNext.x;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 7] = positionNext.y;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 8] = positionNext.z;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 6] = positionNext.x;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 7] = positionNext.y;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 8] = positionNext.z;\n\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 14] = dashOffset;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 14] = dashOffset;\n\t\t\t}\n\t\t\tattribute.data.needsUpdate = true;\n\t\t}\n\t\tVector3.pool.release(tangent);\n\t\tVector3.pool.release(normal);\n\t\tVector3.pool.release(positionPrev);\n\t\tVector3.pool.release(positionNext);\n\t\tVector3.pool.release(segment);\n\t}\n\n\t/**\n\t * Sets the colors. Each two colors is a line segment.\n\t * @param {Color[]} colors\n\t */\n\tsetColors(colors) {\n\t\tif (colors.length % 2 !== 0) {\n\t\t\tthrow new Error('Number of colors in the LineMesh must be even.');\n\t\t}\n\t\t// Adjust the number of vertices. * 2 is because the line has width.\n\t\tthis._adjustVerticesInGeometries(colors.length * 2);\n\t\tfor (let objectIndex = 0; objectIndex < this._threeJsObjects.length; objectIndex++) {\n\t\t\tconst attribute = /** @type {THREE.InterleavedBufferAttribute} */(this._threeJsObjects[objectIndex].geometry.getAttribute('color'));\n\t\t\tconst array = attribute.array;\n\t\t\tfor (let i = 0; i < array.length / (2 * LineMesh._floatsPerVertex); i++) {\n\t\t\t\tconst offset = i + objectIndex * (LineMesh._verticesPerGeometry / 2);\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 9] = colors[offset].r;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 10] = colors[offset].g;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 11] = colors[offset].b;\n\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 12] = colors[offset].a;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 9] = colors[offset].r;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 10] = colors[offset].g;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 11] = colors[offset].b;\n\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 12] = colors[offset].a;\n\t\t\t}\n\t\t\tattribute.data.needsUpdate = true;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the positions. Each two positions is a line segment.\n\t * @param {number[]|number} widths\n\t */\n\tsetWidths(widths) {\n\t\tif (typeof widths === 'number') {\n\t\t\tfor (let objectIndex = 0; objectIndex < this._threeJsObjects.length; objectIndex++) {\n\t\t\t\tconst attribute = /** @type {THREE.InterleavedBufferAttribute} */(this._threeJsObjects[objectIndex].geometry.getAttribute('width'));\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tfor (let i = 0; i < array.length / (2 * LineMesh._floatsPerVertex); i++) {\n\t\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 13] = widths;\n\t\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 13] = -widths;\n\t\t\t\t}\n\t\t\t\tattribute.data.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (widths.length % 2 !== 0) {\n\t\t\t\tthrow new Error('Number of widths in the LineMesh must be even.');\n\t\t\t}\n\t\t\t// Adjust the number of vertices. * 2 is because the line has width.\n\t\t\tthis._adjustVerticesInGeometries(widths.length * 2);\n\t\t\tfor (let objectIndex = 0; objectIndex < this._threeJsObjects.length; objectIndex++) {\n\t\t\t\tconst attribute = /** @type {THREE.InterleavedBufferAttribute} */(this._threeJsObjects[objectIndex].geometry.getAttribute('width'));\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tfor (let i = 0; i < array.length / (2 * LineMesh._floatsPerVertex); i++) {\n\t\t\t\t\tconst offset = i + objectIndex * (LineMesh._verticesPerGeometry / 2);\n\t\t\t\t\tarray[i * 2 * LineMesh._floatsPerVertex + 13] = widths[offset];\n\t\t\t\t\tarray[(i * 2 + 1) * LineMesh._floatsPerVertex + 13] = -widths[offset];\n\t\t\t\t}\n\t\t\t\tattribute.data.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the line dash and gap length.\n\t * @param {number} dashLength\n\t * @param {number} dashGapLength\n\t */\n\tsetDashLength(dashLength, dashGapLength) {\n\t\tthis._dashLength = dashLength;\n\t\tthis._dashGapLength = dashGapLength;\n\t\tThreeJsHelper.setUniformNumber(this._threeJsMaterial, 'dashLength', this._dashLength);\n\t\tThreeJsHelper.setUniformNumber(this._threeJsMaterial, 'dashGapLength', this._dashGapLength);\n\t}\n\n\t/**\n\t * Set the width of the glow from full to clear along the edge of the lines.\n\t * @param {number} glowWidth\n\t */\n\tsetGlowWidth(glowWidth) {\n\t\tthis._glowWidth = glowWidth;\n\t\tThreeJsHelper.setUniformNumber(this._threeJsMaterial, 'glowWidth', this._glowWidth);\n\t}\n\n\t/**\n\t * Sets the scale.\n\t * @param {number} scale\n\t */\n\tsetScale(scale) {\n\t\tthis._scale = scale;\n\t\tThreeJsHelper.setScale(this._threeJsObjects, scale);\n\t}\n\n\t/**\n\t * Gets the alpha multiplier. This value is multiplied into all line segments as an additional alpha control.\n\t * @returns {number}\n\t */\n\tgetAlphaMultiplier() {\n\t\treturn this._alphaMultiplier;\n\t}\n\n\t/**\n\t * Sets the alpha multiplier. This value is multiplied into all line segments as an additional alpha control.\n\t * @param {number} alphaMultiplier - from 0 to 1\n\t */\n\tsetAlphaMultiplier(alphaMultiplier) {\n\t\tthis._alphaMultiplier = alphaMultiplier;\n\t\tThreeJsHelper.setUniformNumber(this._threeJsMaterial, 'alphaMultiplier', this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Prepares the line mesh for rendering. It should be called by every component that uses it.\n\t * @param {CameraComponent} camera\n\t */\n\tprepareForRender(camera) {\n\t\tconst pixelSize = Vector2.pool.get();\n\n\t\t// If the camera is a Spout camera, make the lines thicker and use Spout for the render size.\n\t\tif (camera.getType() === 'spout') {\n\t\t\tconst spoutComponent = /** @type {SpoutComponent} */(camera);\n\t\t\tpixelSize.set(spoutComponent.getRenderWidth() * 0.1, spoutComponent.getRenderWidth() * 0.5 * 0.1);\n\t\t}\n\t\t// Otherwise use the viewport size.\n\t\telse {\n\t\t\tpixelSize.copy(camera.getViewport().getBounds().size);\n\t\t}\n\n\t\t// Set the pixel render size.\n\t\tThreeJsHelper.setUniformVector2(this._threeJsMaterial, 'pixelSize', pixelSize);\n\t\tVector2.pool.release(pixelSize);\n\t}\n\n\t/**\n\t * Updates the number of Three.js objects and vertices if they have changed.\n\t * @param {number} numVertices\n\t * @private\n\t */\n\t_adjustVerticesInGeometries(numVertices) {\n\t\t// The number of objects and meshes we'll be needing.\n\t\t// Each object can hold up to _verticesPerGeometry vertices,\n\t\t//   due to WebGL 1.0 limitations on the the bit size of index buffers (max 16 bits).\n\t\tconst numThreeJsObjects = Math.ceil(numVertices / LineMesh._verticesPerGeometry);\n\t\t// Remove any excess objects that are no longer needed because there are now less vertices than before.\n\t\twhile (this._threeJsObjects.length > numThreeJsObjects) {\n\t\t\tconst objectToRemove = this._threeJsObjects[this._threeJsObjects.length - 1];\n\t\t\tThreeJsHelper.destroyObject(objectToRemove);\n\t\t\tthis._threeJsObjects.splice(this._threeJsObjects.length - 1, 1);\n\t\t\t// Remove it from the base component's list.\n\t\t\tfor (let i = 0, l = this._component.getThreeJsObjects().length; i < l; i++) {\n\t\t\t\tif (this._component.getThreeJsObjects()[i] === objectToRemove) {\n\t\t\t\t\tthis._component.getThreeJsObjects().splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Add any new objects that are needed.\n\t\tif (this._threeJsObjects.length < numThreeJsObjects) {\n\t\t\t// Update the current last geometry to have full vertices.\n\t\t\tif (this._threeJsObjects.length > 0) {\n\t\t\t\tthis._setupThreeJsGeometry(this._threeJsObjects[this._threeJsObjects.length - 1].geometry, LineMesh._verticesPerGeometry);\n\t\t\t}\n\t\t\t// Add the new objects.\n\t\t\tfor (let i = this._threeJsObjects.length; i < numThreeJsObjects; i++) {\n\t\t\t\tconst objectToAdd = ThreeJsHelper.createMeshObject(this._component, this._threeJsMaterial, [], false);\n\t\t\t\tthis._threeJsObjects.push(objectToAdd);\n\t\t\t\tthis._component.getThreeJsObjects().push(objectToAdd);\n\t\t\t\tconst numVerticesInGeometry = Math.min(numVertices - i * LineMesh._verticesPerGeometry, LineMesh._verticesPerGeometry);\n\t\t\t\tthis._setupThreeJsGeometry(objectToAdd.geometry, numVerticesInGeometry);\n\t\t\t\tThreeJsHelper.setPosition(objectToAdd, this._position);\n\t\t\t\tThreeJsHelper.setOrientation(objectToAdd, this._orientation);\n\t\t\t\tThreeJsHelper.setScale(objectToAdd, this._scale);\n\t\t\t\tobjectToAdd.frustumCulled = false;\n\t\t\t}\n\t\t}\n\t\t// There were no new objects needed, so just adjust the vertices of the last mesh.\n\t\telse if (numThreeJsObjects > 0) {\n\t\t\t// If we've got a different number of vertices, we need to update the Three.js geometry.\n\t\t\tconst geometry = this._threeJsObjects[numThreeJsObjects - 1].geometry;\n\t\t\tconst numVerticesInLastGeometry = numVertices - (numThreeJsObjects - 1) * LineMesh._verticesPerGeometry;\n\t\t\tif (geometry.getAttribute('position').array.length !== numVerticesInLastGeometry * LineMesh._floatsPerVertex) {\n\t\t\t\tthis._setupThreeJsGeometry(geometry, numVerticesInLastGeometry);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A helper function to setup the Three.js geometry when a new object is created.\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {number} numVertices - The number of vertices to create.\n\t * @private\n\t */\n\t_setupThreeJsGeometry(geometry, numVertices) {\n\t\t// Setup the interleaved vertex buffer.\n\t\tconst vertices = new Float32Array(numVertices * LineMesh._floatsPerVertex);\n\t\tconst buffer = new THREE.InterleavedBuffer(vertices, LineMesh._floatsPerVertex);\n\t\tgeometry.setAttribute('position', new THREE.InterleavedBufferAttribute(buffer, 3, 0, false));\n\t\tgeometry.setAttribute('positionPrev', new THREE.InterleavedBufferAttribute(buffer, 3, 3, false));\n\t\tgeometry.setAttribute('positionNext', new THREE.InterleavedBufferAttribute(buffer, 3, 6, false));\n\t\tgeometry.setAttribute('color', new THREE.InterleavedBufferAttribute(buffer, 4, 9, false));\n\t\tgeometry.setAttribute('width', new THREE.InterleavedBufferAttribute(buffer, 1, 13, false));\n\t\tgeometry.setAttribute('dashOffset', new THREE.InterleavedBufferAttribute(buffer, 1, 14, false));\n\n\t\t// Setup the index buffer.\n\t\tconst meshIndices = new Uint16Array(numVertices * 6 / 4);\n\t\tfor (let j = 0; j < numVertices / 4; j++) {\n\t\t\tmeshIndices[j * 6 + 0] = j * 4;\n\t\t\tmeshIndices[j * 6 + 1] = j * 4 + 2;\n\t\t\tmeshIndices[j * 6 + 2] = j * 4 + 3;\n\t\t\tmeshIndices[j * 6 + 3] = j * 4;\n\t\t\tmeshIndices[j * 6 + 4] = j * 4 + 3;\n\t\t\tmeshIndices[j * 6 + 5] = j * 4 + 1;\n\t\t}\n\t\tgeometry.setIndex(new THREE.BufferAttribute(meshIndices, 1));\n\t}\n}\n\nLineMesh._floatsPerVertex = 3 + 3 + 3 + 4 + 1 + 1;\nLineMesh._verticesPerGeometry = 65536;\n","/** @module pioneer */\nimport {\n\tAtmosphereComponent,\n\tCameraComponent,\n\tColor,\n\tEntity,\n\tEntityRef,\n\tMaterialUtilsPhong,\n\tMaterialUtilsStandard,\n\tMathUtils,\n\tRingsComponent,\n\tTHREE,\n\tVector3\n} from '../internal';\n\n/** Material utilities. */\nexport class MaterialUtils {\n\t/**\n\t * Sets the light source uniforms. lightPosition is in camera-space.\n\t * @param {THREE.ShaderMaterial[]} materials\n\t * @param {Entity} entity\n\t * @param {CameraComponent} camera\n\t */\n\tstatic setLightSourceUniforms(materials, entity, camera) {\n\t\tconst scene = entity.getScene();\n\t\tconst lightSourceColor = Color.pool.get();\n\t\tlet lightSourceCount = 0;\n\t\tfor (let i = 0, l = scene.getNumLightSources(); i < Math.min(l, 5); i++) {\n\t\t\t// Set the lightPosition and lightColor uniform.\n\t\t\tconst lightSource = scene.getLightSource(i);\n\t\t\tif (lightSource !== null && lightSource !== entity.getComponentByType('lightSource')) {\n\t\t\t\t// Position\n\t\t\t\tconst lightSourcePosition = lightSource.getEntity().getCameraSpacePosition(camera);\n\t\t\t\t// Flux\n\t\t\t\t// const lightSourcePositionRelEntity = Vector3.pool.get();\n\t\t\t\t// lightSource.getEntity().getPositionRelativeToEntity(lightSourcePositionRelEntity, Vector3.Zero, entity);\n\t\t\t\t// const flux = 4.0 * Math.pow(2.51188643151, 46.4205043102 - lightSource.getAbsoluteMagnitude()) / lightSourcePositionRelEntity.magnitudeSqr();\n\t\t\t\t// Vector3.pool.release(lightSourcePositionRelEntity);\n\t\t\t\tconst flux = 1.0; // Note: The above accurately calculates the flux, but farther planets are too dark. Just setting it to one for now.\n\t\t\t\t// Color\n\t\t\t\tlightSourceColor.mult(lightSource.getColor(), flux);\n\t\t\t\t// Radius. Make the radius for the camera light infinite so that it doesn't cast any shadows.\n\t\t\t\tconst lightRadius = lightSource.getEntity().getComponentByType('camera') === null\n\t\t\t\t\t? lightSource.getEntity().getOcclusionRadius()\n\t\t\t\t\t: -1.0;\n\t\t\t\tfor (let j = 0, m = materials.length; j < m; j++) {\n\t\t\t\t\tif (materials[j].uniforms['lightPositions'] !== undefined) {\n\t\t\t\t\t\tmaterials[j].uniforms['lightPositions'].value[lightSourceCount].set(lightSourcePosition.x, lightSourcePosition.y, lightSourcePosition.z);\n\t\t\t\t\t\tmaterials[j].uniforms['lightColors'].value[lightSourceCount].set(lightSourceColor.r, lightSourceColor.g, lightSourceColor.b);\n\t\t\t\t\t\tmaterials[j].uniforms['lightRadii'].value[lightSourceCount] = lightRadius;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlightSourceCount += 1;\n\t\t\t}\n\t\t}\n\t\tfor (let j = 0, m = materials.length; j < m; j++) {\n\t\t\tif (materials[j].uniforms['numLights'] !== undefined) {\n\t\t\t\tmaterials[j].uniforms['numLights'].value = lightSourceCount;\n\t\t\t}\n\t\t}\n\t\tColor.pool.release(lightSourceColor);\n\t}\n\n\t/**\n\t * Sets the materials' uniforms from the camera, entity, and light source.\n\t * @param {THREE.ShaderMaterial[]} materials\n\t * @param {CameraComponent} camera\n\t * @param {Entity} entity\n\t * @param {EntityRef[]} shadowEntities\n\t * @param {AtmosphereComponent} atmosphere\n\t * @param {boolean} isSpheroid\n\t */\n\tstatic setUniforms(materials, camera, entity, shadowEntities, atmosphere, isSpheroid) {\n\t\t// Get the time.\n\t\tconst time = entity.getScene().getEngine().getTime();\n\n\t\t// Get the ambient color.\n\t\tconst ambientLightColor = entity.getScene().getAmbientLightColor();\n\n\t\t// Set the lightPosition and lightColor uniform.\n\t\tMaterialUtils.setLightSourceUniforms(materials, entity, camera);\n\n\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\t/** @type {THREE.ShaderMaterial} */\n\t\t\tconst material = materials[i];\n\t\t\tconst uniforms = material.uniforms;\n\n\t\t\tif (material instanceof THREE.RawShaderMaterial) {\n\t\t\t\tif (uniforms['time'] !== undefined) {\n\t\t\t\t\t// Wrap it to the nearest hour, since the full time can't fit into a GLSL float variable.\n\t\t\t\t\tuniforms['time'].value = MathUtils.wrap(time, 0.0, 3600.0);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // Regular ShaderMaterial from the MaterialUtils.\n\t\t\t\t// Set the entity position uniform.\n\t\t\t\tconst position = entity.getCameraSpacePosition(camera);\n\t\t\t\tuniforms['entityPos'].value.set(position.x, position.y, position.z);\n\n\t\t\t\t// Set the uniforms that don't depend on a light source.\n\t\t\t\tuniforms['ambientLightColor'].value.setRGB(ambientLightColor.r, ambientLightColor.g, ambientLightColor.b);\n\n\t\t\t\t// For each shadow entity, apply the params.\n\t\t\t\tif (shadowEntities !== undefined && shadowEntities.length > 0) {\n\t\t\t\t\tlet validShadowEntities = 0;\n\t\t\t\t\tfor (let j = 0; j < shadowEntities.length; j++) {\n\t\t\t\t\t\tconst shadowEntity = shadowEntities[j].get();\n\t\t\t\t\t\tif (shadowEntity !== null) {\n\t\t\t\t\t\t\tconst position = shadowEntity.getCameraSpacePosition(camera);\n\t\t\t\t\t\t\tuniforms['shadowEntityPositions'].value[validShadowEntities].set(position.x, position.y, position.z);\n\t\t\t\t\t\t\tuniforms['shadowEntityRadii'].value[validShadowEntities] = shadowEntity.getOcclusionRadius();\n\n\t\t\t\t\t\t\tconst atmosphereComponent = /** @type {AtmosphereComponent} */(shadowEntity.get('atmosphere'));\n\t\t\t\t\t\t\tif (atmosphereComponent !== null) {\n\t\t\t\t\t\t\t\tconst sunsetColor = atmosphereComponent.getSunsetColor();\n\t\t\t\t\t\t\t\tuniforms['shadowEntitySunsetColors'].value[validShadowEntities].set(sunsetColor.r, sunsetColor.g, sunsetColor.b);\n\t\t\t\t\t\t\t\tuniforms['shadowEntitySunsetIntensity'].value[validShadowEntities] = atmosphereComponent.getSunsetIntensity();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tuniforms['shadowEntitySunsetIntensity'].value[validShadowEntities] = 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalidShadowEntities += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tuniforms['shadowEntityRadii'].value[validShadowEntities] = 0;\n\t\t\t\t\t\t\tuniforms['shadowEntitySunsetIntensity'].value[validShadowEntities] = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms['numShadowEntities'].value = validShadowEntities;\n\t\t\t\t}\n\n\t\t\t\tif (materials[i].defines['shadowRings']) {\n\t\t\t\t\tconst ringsComponent = /** @type {RingsComponent} */(entity.get('rings'));\n\t\t\t\t\tif (ringsComponent !== null) {\n\t\t\t\t\t\tconst normal = Vector3.pool.get();\n\t\t\t\t\t\tentity.getOrientation().getAxis(normal, 2);\n\t\t\t\t\t\tuniforms['shadowRingsInnerRadius'].value = ringsComponent.getInnerRadius();\n\t\t\t\t\t\tuniforms['shadowRingsOuterRadius'].value = ringsComponent.getOuterRadius();\n\t\t\t\t\t\tuniforms['shadowRingsTexture'].value = ringsComponent.getTopTexture();\n\t\t\t\t\t\tuniforms['shadowRingsNormal'].value.set(normal.x, normal.y, normal.z);\n\t\t\t\t\t\tVector3.pool.release(normal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Atmospheres\n\t\t\tif (atmosphere !== null && atmosphere.getLoadState() === 'loaded' && !atmosphere.isExcludedFromCamera(camera) && uniforms['atmospherePosition'] !== undefined) {\n\t\t\t\tconst spheroid = atmosphere.getSpheroid();\n\t\t\t\tconst atmospherePosition = atmosphere.getEntity().getCameraSpacePosition(camera);\n\t\t\t\tconst atmosphereOrientation = atmosphere.getEntity().getOrientation();\n\t\t\t\tconst atmosphereColor = atmosphere.getColor();\n\t\t\t\tconst atmosphereSunsetColor = atmosphere.getSunsetColor();\n\t\t\t\tuniforms['atmospherePosition'].value.set(atmospherePosition.x, atmospherePosition.y, atmospherePosition.z);\n\t\t\t\tuniforms['atmosphereOrientation'].value.set(atmosphereOrientation.x, atmosphereOrientation.y, atmosphereOrientation.z, atmosphereOrientation.w);\n\t\t\t\tif (spheroid !== null) {\n\t\t\t\t\tuniforms['atmosphereEquatorialRadius'].value = spheroid.getEquatorialRadius();\n\t\t\t\t\tuniforms['atmospherePolarRadius'].value = spheroid.getPolarRadius();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuniforms['atmosphereEquatorialRadius'].value = 0;\n\t\t\t\t\tuniforms['atmospherePolarRadius'].value = 0;\n\t\t\t\t}\n\t\t\t\tuniforms['atmosphereDensity'].value = atmosphere.getDensity();\n\t\t\t\tuniforms['atmosphereScaleHeight'].value = atmosphere.getScaleHeight();\n\t\t\t\tuniforms['atmosphereEmissivity'].value = atmosphere.getEmissivity();\n\t\t\t\tuniforms['atmosphereColor'].value.set(atmosphereColor.r, atmosphereColor.g, atmosphereColor.b);\n\t\t\t\tuniforms['atmosphereSunsetColor'].value.set(atmosphereSunsetColor.r, atmosphereSunsetColor.g, atmosphereSunsetColor.b);\n\t\t\t\tuniforms['atmosphereSunsetIntensity'].value = atmosphere.getSunsetIntensity();\n\t\t\t\tuniforms['atmosphereGroundIsSpheroid'].value = isSpheroid ? 1 : 0;\n\t\t\t\tif (material.defines['atmosphere'] === undefined) {\n\t\t\t\t\tmaterial.defines['atmosphere'] = true;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (material.defines['atmosphere'] === true) {\n\t\t\t\tdelete material.defines['atmosphere'];\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Returns a specular/phong material.\n * @returns {THREE.ShaderMaterial}\n */\nMaterialUtils.get = MaterialUtilsPhong.get;\n\n/**\n * Returns a PBR material.\n * @returns {THREE.ShaderMaterial}\n */\nMaterialUtils.getPBR = MaterialUtilsStandard.get;\n","/** @module pioneer */\nimport {\n\tShaderChunkLogDepth,\n\tTHREE,\n\tThreeJsHelper\n} from '../internal';\n\n/** Material utilities. */\nexport class MaterialUtilsPhong {\n\t/** Gets a Phong ShaderMaterial.\n\t * @returns {THREE.ShaderMaterial}\n\t */\n\tstatic get() {\n\t\tif (MaterialUtilsPhong._material === null) {\n\t\t\tMaterialUtilsPhong._material = new THREE.ShaderMaterial({\n\t\t\t\tuniforms: {\n\t\t\t\t\t// External lighting and camera.\n\t\t\t\t\tentityPos: new THREE.Uniform(new THREE.Vector3()),\n\n\t\t\t\t\t// Lights\n\t\t\t\t\tambientLightColor: new THREE.Uniform(new THREE.Color()),\n\t\t\t\t\tlightPositions: new THREE.Uniform([new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0)]),\n\t\t\t\t\tlightColors: new THREE.Uniform([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0)]),\n\t\t\t\t\tlightRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\t\tnumLights: new THREE.Uniform(0),\n\n\t\t\t\t\t// Shading.\n\t\t\t\t\tcolor: new THREE.Uniform(new THREE.Color(1, 1, 1)),\n\t\t\t\t\tspecularColor: new THREE.Uniform(new THREE.Color(1, 1, 1)),\n\t\t\t\t\tspecularIntensity: new THREE.Uniform(0),\n\t\t\t\t\tspecularHardness: new THREE.Uniform(50.0),\n\n\t\t\t\t\t// Textures.\n\t\t\t\t\tcolorTexture: new THREE.Uniform(null),\n\t\t\t\t\tnormalTexture: new THREE.Uniform(null),\n\t\t\t\t\tspecularTexture: new THREE.Uniform(null),\n\t\t\t\t\tnightTexture: new THREE.Uniform(null),\n\t\t\t\t\tdecalTexture: new THREE.Uniform(null),\n\n\t\t\t\t\tnormalScale: new THREE.Uniform(new THREE.Vector2()),\n\n\t\t\t\t\t// Shadow Entities\n\t\t\t\t\tnumShadowEntities: new THREE.Uniform(0),\n\t\t\t\t\tshadowEntityPositions: new THREE.Uniform([new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),\n\t\t\t\t\tshadowEntityRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\t\tshadowEntitySunsetIntensity: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\t\tshadowEntitySunsetColors: new THREE.Uniform([new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),\n\n\t\t\t\t\t// Shadow Rings\n\t\t\t\t\tshadowRingsInnerRadius: new THREE.Uniform(0),\n\t\t\t\t\tshadowRingsOuterRadius: new THREE.Uniform(0),\n\t\t\t\t\tshadowRingsTexture: new THREE.Uniform(null),\n\t\t\t\t\tshadowRingsNormal: new THREE.Uniform(new THREE.Vector3()),\n\n\t\t\t\t\t// Atmosphere\n\t\t\t\t\tatmospherePosition: new THREE.Uniform(new THREE.Vector3(0, 0, 0)),\n\t\t\t\t\tatmosphereOrientation: new THREE.Uniform(new THREE.Vector4(1, 0, 0, 0)),\n\t\t\t\t\tatmosphereEquatorialRadius: new THREE.Uniform(1),\n\t\t\t\t\tatmospherePolarRadius: new THREE.Uniform(1),\n\t\t\t\t\tatmosphereDensity: new THREE.Uniform(0),\n\t\t\t\t\tatmosphereScaleHeight: new THREE.Uniform(1),\n\t\t\t\t\tatmosphereEmissivity: new THREE.Uniform(0),\n\t\t\t\t\tatmosphereColor: new THREE.Uniform(new THREE.Vector3(0, 0, 0)),\n\t\t\t\t\tatmosphereSunBrightness: new THREE.Uniform(1),\n\t\t\t\t\tatmosphereSunsetColor: new THREE.Uniform(new THREE.Vector3(0, 0, 0)),\n\t\t\t\t\tatmosphereSunsetIntensity: new THREE.Uniform(0),\n\t\t\t\t\tatmosphereGroundIsSpheroid: new THREE.Uniform(0),\n\n\t\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t\t},\n\t\t\t\tvertexShader: `\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tattribute vec4 tangent;\n\t\t\t\t\t\tvarying vec4 viewTangent;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef normalUVs\n\t\t\t\t\t\tattribute vec2 normalUV;\n\t\t\t\t\t\tvarying vec2 vNormalUV;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef specularUVs\n\t\t\t\t\t\tattribute vec2 specularUV;\n\t\t\t\t\t\tvarying vec2 vSpecularUV;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef nightUVs\n\t\t\t\t\t\tattribute vec2 nightUV;\n\t\t\t\t\t\tvarying vec2 vNightUV;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef decalUVs\n\t\t\t\t\t\tattribute vec2 decalUV;\n\t\t\t\t\t\tvarying vec2 vDecalUV;\n\t\t\t\t\t#endif\n\t\t\t\t\tvarying vec2 vColorUV;\n\t\t\t\t\tvarying vec3 cameraSpacePosition;\n\t\t\t\t\tvarying vec3 cameraSpaceNormal;\n\n\t\t\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\t\t\tvoid main() {\n\t\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\t\tviewTangent = vec4((modelMatrix * vec4(tangent.xyz, 0.0)).xyz, tangent.w);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tvColorUV = uv;\n\t\t\t\t\t\t#ifdef normalUVs\n\t\t\t\t\t\t\tvNormalUV = normalUV;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef specularUVs\n\t\t\t\t\t\t\tvSpecularUV = specularUV;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef nightUVs\n\t\t\t\t\t\t\tvNightUV = nightUV;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef decalUVs\n\t\t\t\t\t\t\tvDecalUV = decalUV;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tcameraSpacePosition = (modelMatrix * vec4(position, 1.)).xyz;\n\t\t\t\t\t\tcameraSpaceNormal = (modelMatrix * vec4(normal, 0.)).xyz;\n\t\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t\t\t}`,\n\t\t\t\tfragmentShader: `\n\t\t\t\t\tprecision highp float;\n\n\t\t\t\t\t#ifndef saturate\n\t\t\t\t\t\t#define saturate(a) clamp(a, 0.0, 1.0)\n\t\t\t\t\t#endif\n\t\t\t\t\tuniform mat3 normalMatrix;\n\n\t\t\t\t\t// External lighting and camera.\n\t\t\t\t\tuniform vec3 entityPos;\n\n\t\t\t\t\t// Lights\n\t\t\t\t\tuniform vec3 ambientLightColor;\n\t\t\t\t\tuniform vec3 lightPositions[5];\n\t\t\t\t\tuniform vec3 lightColors[5];\n\t\t\t\t\tuniform float lightRadii[5];\n\t\t\t\t\tuniform int numLights;\n\n\t\t\t\t\t// Shading.\n\t\t\t\t\tuniform vec3 color;\n\t\t\t\t\tuniform vec3 specularColor;\n\t\t\t\t\tuniform float specularIntensity;\n\t\t\t\t\tuniform float specularHardness;\n\n\t\t\t\t\t// Shadow Entities.\n\t\t\t\t\t#ifdef shadowEntities\n\t\t\t\t\t\tuniform int numShadowEntities;\n\t\t\t\t\t\tuniform vec3 shadowEntityPositions[5];\n\t\t\t\t\t\tuniform float shadowEntityRadii[5];\n\t\t\t\t\t\tuniform float shadowEntitySunsetIntensity[5];\n\t\t\t\t\t\tuniform vec3 shadowEntitySunsetColors[5];\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef shadowRings\n\t\t\t\t\t\tuniform float shadowRingsInnerRadius;\n\t\t\t\t\t\tuniform float shadowRingsOuterRadius;\n\t\t\t\t\t\tuniform sampler2D shadowRingsTexture;\n\t\t\t\t\t\tuniform vec3 shadowRingsNormal;\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// Textures.\n\t\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tuniform sampler2D normalTexture;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef specularMap\n\t\t\t\t\t\tuniform sampler2D specularTexture;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef nightMap\n\t\t\t\t\t\tuniform sampler2D nightTexture;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef decalMap\n\t\t\t\t\t\tuniform sampler2D decalTexture;\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// Modifications on the textures.\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tuniform vec2 normalScale;\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// The varying attributes.\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tvarying vec4 viewTangent;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef normalUVs\n\t\t\t\t\t\tvarying vec2 vNormalUV;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef specularUVs\n\t\t\t\t\t\tvarying vec2 vSpecularUV;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef nightUVs\n\t\t\t\t\t\tvarying vec2 vNightUV;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef decalUVs\n\t\t\t\t\t\tvarying vec2 vDecalUV;\n\t\t\t\t\t#endif\n\t\t\t\t\tvarying vec2 vColorUV;\n\t\t\t\t\tvarying vec3 cameraSpacePosition;\n\t\t\t\t\tvarying vec3 cameraSpaceNormal;\n\n\t\t\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tvec3 getNormalFromMap() {\n\t\t\t\t\t\t\tvec3 normal = normalize(cameraSpaceNormal);\n\t\t\t\t\t\t\tvec3 tangent = normalize(viewTangent.xyz);\n\t\t\t\t\t\t\tvec3 bitangent = normalize(cross(normal, tangent));\n\t\t\t\t\t\t\tif (viewTangent.w < 0.0) {\n\t\t\t\t\t\t\t\tbitangent *= -1.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmat3 transform = mat3(tangent, bitangent, normal);\n\t\t\t\t\t\t\t#ifdef normalUVs\n\t\t\t\t\t\t\t\tvec2 uv = vNormalUV;\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tvec2 uv = vColorUV;\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tvec3 normalFromMap = texture2D(normalTexture, uv).rgb * 2.0 - 1.0;\n\t\t\t\t\t\t\tnormalFromMap.xy *= vec2(1, -1);\n\t\t\t\t\t\t\tnormalFromMap.xy *= normalScale;\n\t\t\t\t\t\t\treturn normalize(transform * normalFromMap);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef colorTextureEnvironment\n\t\t\t\t\t\tvec4 getColorFromEnvironmentMap(sampler2D environmentTexture, vec3 positionDir, vec3 normal) {\n\t\t\t\t\t\t\tvec3 r = reflect(positionDir, normal);\n\t\t\t\t\t\t\tfloat m = 2. * sqrt(r.x * r.x + r.y * r.y + (r.z + 1.) * (r.z + 1.));\n\t\t\t\t\t\t\tvec2 uv = r.xy / m + .5;\n\t\t\t\t\t\t\treturn vec4(texture2D(environmentTexture, uv).rgb, 1.);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef shadowEntities\n\t\t\t\t\t\tvec3 applyRayleighScattering(vec3 color, float amount) {\n\t\t\t\t\t\t\tfloat value = (color.r + color.g + color.b);\n\t\t\t\t\t\t\tif (value > 0.0) {\n\t\t\t\t\t\t\t\tfloat rFactor = 1.0; // 6.3^-4 / 6.3^-4\n\t\t\t\t\t\t\t\tfloat gFactor = 1.602; // 5.6^-4 / 6.3^-4\n\t\t\t\t\t\t\t\tfloat bFactor = 3.228; // 4.7^-4 / 6.3^-4\n\t\t\t\t\t\t\t\tcolor.r *= pow(rFactor, -amount);\n\t\t\t\t\t\t\t\tcolor.g *= pow(gFactor, -amount);\n\t\t\t\t\t\t\t\tcolor.b *= pow(bFactor, -amount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn color;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvec3 getLightColorFromShadowEntities(vec3 lightColor, vec3 lightDir, vec3 lightPosition, float lightRadius, vec3 normal) {\n\t\t\t\t\t\t\tvec3 color = lightColor;\n\t\t\t\t\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\t\t\t\t\tif (i >= numShadowEntities || lightRadius < 0.0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvec3 origin = cameraSpacePosition - shadowEntityPositions[i];\n\t\t\t\t\t\t\t\tvec3 axis = normalize(shadowEntityPositions[i] - lightPosition);\n\t\t\t\t\t\t\t\tfloat sd = dot(origin, axis);\n\t\t\t\t\t\t\t\tif (sd > 0.0) {\n\t\t\t\t\t\t\t\t\tfloat e = length(origin - sd * axis);\n\t\t\t\t\t\t\t\t\tfloat ld = dot(cameraSpacePosition - lightPosition, axis);\n\t\t\t\t\t\t\t\t\tfloat lr = lightRadius;\n\t\t\t\t\t\t\t\t\tfloat sr = shadowEntityRadii[i];\n\t\t\t\t\t\t\t\t\tfloat e0 = (ld * sr - sd * lr) / (ld - sd);\n\t\t\t\t\t\t\t\t\tfloat e1 = (ld * sr + sd * lr) / (ld - sd);\n\t\t\t\t\t\t\t\t\tfloat lightLevel = 0.0;\n\t\t\t\t\t\t\t\t\tif (e1 < 0.0 || sd < 0.0) { // light in front of shadow entity\n\t\t\t\t\t\t\t\t\t\tlightLevel = 1.0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (e0 < e1) {\n\t\t\t\t\t\t\t\t\t\te0 /= max(1.0, shadowEntitySunsetIntensity[i] * 2.0);\n\t\t\t\t\t\t\t\t\t\tlightLevel = (e - e0) / (e1 - e0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tlightLevel = e < e0 ? 0.0 : 1.0; // 0 radius light.\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcolor = saturate(lightLevel) * applyRayleighScattering(color, saturate(1.5 - lightLevel) * saturate(shadowEntitySunsetIntensity[i]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn color;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef shadowRings\n\t\t\t\t\t\tvec3 getLightColorFromShadowRings(vec3 lightColor, vec3 lightDir) {\n\t\t\t\t\t\t\tvec3 position = cameraSpacePosition - entityPos;\n\t\t\t\t\t\t\tfloat d = dot(position, shadowRingsNormal) / dot(lightDir, shadowRingsNormal);\n\t\t\t\t\t\t\thighp vec3 pointOnDisc = -d * lightDir + position;\n\t\t\t\t\t\t\tfloat lengthOnDisc = length(pointOnDisc - dot(pointOnDisc, shadowRingsNormal) * shadowRingsNormal);\n\t\t\t\t\t\t\tfloat u = (lengthOnDisc - shadowRingsInnerRadius) / (shadowRingsOuterRadius - shadowRingsInnerRadius);\n\t\t\t\t\t\t\tfloat shadow = 1.0 - texture2D(shadowRingsTexture, vec2(u, 0.0), 0.0).a;\n\t\t\t\t\t\t\tif (shadowRingsInnerRadius <= lengthOnDisc && lengthOnDisc <= shadowRingsOuterRadius && d > 0.0) {\n\t\t\t\t\t\t\t\treturn lightColor * saturate(shadow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn lightColor;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// ATMOSPHERE\n\n\t\t\t\t\t#ifdef atmosphere\n\t\t\t\t\t\tuniform vec3 atmospherePosition;\n\t\t\t\t\t\tuniform vec4 atmosphereOrientation;\n\t\t\t\t\t\tuniform float atmosphereEquatorialRadius;\n\t\t\t\t\t\tuniform float atmospherePolarRadius;\n\t\t\t\t\t\tuniform float atmosphereDensity;\n\t\t\t\t\t\tuniform float atmosphereScaleHeight;\n\t\t\t\t\t\tuniform vec3 atmosphereColor;\n\t\t\t\t\t\tuniform float atmosphereEmissivity;\n\t\t\t\t\t\tuniform float atmosphereSunBrightness;\n\t\t\t\t\t\tuniform vec3 atmosphereSunsetColor;\n\t\t\t\t\t\tuniform float atmosphereSunsetIntensity;\n\t\t\t\t\t\tuniform float atmosphereGroundIsSpheroid;\n\n\t\t\t\t\t\tconst int atmosphereNumIterations = 5;\n\n\t\t\t\t\t\t// Inverse rotate a vector by a quaternion.\n\t\t\t\t\t\tvec3 quatRotInv(vec4 q, vec3 v) {\n\t\t\t\t\t\t\tfloat tx = q.w * v.x - q.y * v.z + q.z * v.y;\n\t\t\t\t\t\t\tfloat ty = q.w * v.y - q.z * v.x + q.x * v.z;\n\t\t\t\t\t\t\tfloat tz = q.w * v.z - q.x * v.y + q.y * v.x;\n\t\t\t\t\t\t\tfloat tw = q.x * v.x + q.y * v.y + q.z * v.z;\n\t\t\t\t\t\t\tfloat x = tx * q.w + tw * q.x + ty * q.z - tz * q.y;\n\t\t\t\t\t\t\tfloat y = ty * q.w + tw * q.y + tz * q.x - tx * q.z;\n\t\t\t\t\t\t\tfloat z = tz * q.w + tw * q.z + tx * q.y - ty * q.x;\n\t\t\t\t\t\t\treturn vec3(x, y, z);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Given an origin and direction, computes the sampling start and end as distance from the origin in the direction.\n\t\t\t\t\t\tvoid getStartEndSamples(out float start, out float end, vec3 origin, vec3 direction, float maxDistance, float groundRadius, float atmosphereScaleHeight) {\n\t\t\t\t\t\t\t// Get the along the ray perpendicular to the sphere.\n\t\t\t\t\t\t\tfloat perpD = -dot(origin, direction);\n\t\t\t\t\t\t\tvec3 perp = origin + direction * perpD;\n\n\t\t\t\t\t\t\t// Figure out the sample distance.\n\t\t\t\t\t\t\tfloat atmosphereRadius = groundRadius + atmosphereScaleHeight * 6.0;\n\t\t\t\t\t\t\tfloat chordHalfLength = sqrt(max(0.0, atmosphereRadius * atmosphereRadius - dot(perp, perp)));\n\n\t\t\t\t\t\t\t// Figure out starting and ending sample points.\n\t\t\t\t\t\t\tstart = max(0.0, perpD - chordHalfLength);\n\t\t\t\t\t\t\tend = min(maxDistance, perpD + chordHalfLength);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Gets the density of the atmosphere at a given position.\n\t\t\t\t\t\tfloat getDensity(vec3 position, float radius, float density, float atmosphereScaleHeight) {\n\t\t\t\t\t\t\treturn density * exp((radius - length(position)) / atmosphereScaleHeight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Returns 0 if the ray does not intersect and 1.0 if the ray very intersects (with a gradient inbetween).\n\t\t\t\t\t\tfloat getDayLevel(vec3 origin, vec3 direction, float radius, float scaleHeight) {\n\t\t\t\t\t\t\tfloat blendHeight = scaleHeight * radius / 200.0;\n\t\t\t\t\t\t\tfloat perpD = -dot(origin, direction);\n\t\t\t\t\t\t\tfloat depth = radius - sqrt(dot(origin, origin) - sign(perpD) * perpD * perpD);\n\t\t\t\t\t\t\tif (depth < 0.0) { // day\n\t\t\t\t\t\t\t\treturn 1.0 - max(0.0, 0.25 * depth / blendHeight + 0.25);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse { // night\n\t\t\t\t\t\t\t\treturn 1.0 - min(1.0, 0.75 * depth / blendHeight + 0.25);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Adjusts the color if one of the RGB values is greater than 1.0.\n\t\t\t\t\t\tvec3 adjustOverbrightness(vec3 color) {\n\t\t\t\t\t\t\tfloat maxColor = max(color.r, max(color.g, color.b));\n\t\t\t\t\t\t\tif (maxColor > 1.0) {\n\t\t\t\t\t\t\t\tfloat f = (maxColor - 1.0) / maxColor;\n\t\t\t\t\t\t\t\tcolor.r = min(1.0, pow(color.r / maxColor, 1.0 / maxColor));\n\t\t\t\t\t\t\t\tcolor.g = min(1.0, pow(color.g / maxColor, 1.0 / maxColor));\n\t\t\t\t\t\t\t\tcolor.b = min(1.0, pow(color.b / maxColor, 1.0 / maxColor));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn color;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfloat easeInOut(float x, float sharpness) {\n\t\t\t\t\t\t\tfloat b = sharpness;\n\t\t\t\t\t\t\tif (x < 0.5) {\n\t\t\t\t\t\t\t\treturn max(0.0, (pow(b, 2.0 * x) - 1.0) / (2.0 * (b - 1.0)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn min(1.0, 1.0 - (pow(b, 2.0 * (1.0 - x)) - 1.0) / (2.0 * (b - 1.0)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Calculates a glow around the light direction.\n\t\t\t\t\t\tfloat glow(float spread, float amount, float lightDotCamera) {\n\t\t\t\t\t\t\treturn amount * spread / (1.0 + spread - lightDotCamera);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstruct AtmosphereInfo {\n\t\t\t\t\t\t\tfloat spheroidRatio;\n\t\t\t\t\t\t\thighp vec3 position;\n\t\t\t\t\t\t\thighp vec3 cameraPosition;\n\t\t\t\t\t\t\thighp vec3 cameraToPosition;\n\t\t\t\t\t\t\tfloat cameraToPositionDist;\n\t\t\t\t\t\t\thighp vec3 cameraToPositionUnit;\n\t\t\t\t\t\t\tfloat start;\n\t\t\t\t\t\t\tfloat end;\n\t\t\t\t\t\t\tfloat totalDensity;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Get atmosphere info that is independent of any light.\n\t\t\t\t\t\tAtmosphereInfo getAtmosphereInfo() {\n\n\t\t\t\t\t\t\tAtmosphereInfo atmosphereInfo;\n\n\t\t\t\t\t\t\t// Get position and camera in the atmosphere frame.\n\t\t\t\t\t\t\tatmosphereInfo.position = quatRotInv(atmosphereOrientation, cameraSpacePosition - atmospherePosition);\n\t\t\t\t\t\t\tatmosphereInfo.cameraPosition = quatRotInv(atmosphereOrientation, -atmospherePosition);\n\n\t\t\t\t\t\t\t// Convert everything into a sphere frame.\n\t\t\t\t\t\t\tatmosphereInfo.spheroidRatio = atmosphereEquatorialRadius / atmospherePolarRadius;\n\t\t\t\t\t\t\tatmosphereInfo.position.z *= atmosphereInfo.spheroidRatio;\n\t\t\t\t\t\t\tatmosphereInfo.cameraPosition.z *= atmosphereInfo.spheroidRatio;\n\n\t\t\t\t\t\t\t// Make sure the position is right on the ground.\n\t\t\t\t\t\t\tatmosphereInfo.position = normalize(atmosphereInfo.position / 1.0e8) * atmosphereEquatorialRadius;\n\n\t\t\t\t\t\t\t// Get some shortcut vectors.\n\t\t\t\t\t\t\tatmosphereInfo.cameraToPosition = atmosphereInfo.position - atmosphereInfo.cameraPosition;\n\t\t\t\t\t\t\tatmosphereInfo.cameraToPositionDist = length(atmosphereInfo.cameraToPosition / 1.0e8) * 1.0e8;\n\t\t\t\t\t\t\tatmosphereInfo.cameraToPositionUnit = atmosphereInfo.cameraToPosition / atmosphereInfo.cameraToPositionDist;\n\n\t\t\t\t\t\t\t// Get the start and end of the sampling from the camera to the position.\n\t\t\t\t\t\t\tgetStartEndSamples(atmosphereInfo.start, atmosphereInfo.end, atmosphereInfo.cameraPosition, atmosphereInfo.cameraToPositionUnit, atmosphereInfo.cameraToPositionDist, atmosphereEquatorialRadius, atmosphereScaleHeight);\n\t\t\t\t\t\t\tfloat step = 1.0 / float(atmosphereNumIterations - 1);\n\t\t\t\t\t\t\tfloat stepDist = step * (atmosphereInfo.end - atmosphereInfo.start);\n\n\t\t\t\t\t\t\t// Do the sampling.\n\t\t\t\t\t\t\tatmosphereInfo.totalDensity = 0.0;\n\t\t\t\t\t\t\tfloat segmentStart = atmosphereInfo.start;\n\t\t\t\t\t\t\tfor (int j = 0; j < atmosphereNumIterations; j++) {\n\t\t\t\t\t\t\t\t// Get the distance that this segment covers.\n\t\t\t\t\t\t\t\tfloat segDist = stepDist;\n\t\t\t\t\t\t\t\tif (j == 0 || j == atmosphereNumIterations - 1) {\n\t\t\t\t\t\t\t\t\tsegDist *= 0.5;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Get the segment start that we're looking at.\n\t\t\t\t\t\t\t\tvec3 p = atmosphereInfo.cameraPosition + segmentStart * atmosphereInfo.cameraToPositionUnit;\n\n\t\t\t\t\t\t\t\t// Get the density at that segment start. It'll be the density for the whole segment.\n\t\t\t\t\t\t\t\tfloat densityAtP = getDensity(p, atmosphereEquatorialRadius, atmosphereDensity, atmosphereScaleHeight);\n\n\t\t\t\t\t\t\t\t// Add it to the total density.\n\t\t\t\t\t\t\t\tatmosphereInfo.totalDensity += densityAtP * segDist;\n\n\t\t\t\t\t\t\t\t// Next step.\n\t\t\t\t\t\t\t\tsegmentStart += stepDist;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn atmosphereInfo;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvec4 getAtmosphereEmissiveColor(AtmosphereInfo atmosphereInfo, vec3 color, float emissivity) {\n\n\t\t\t\t\t\t\t// Scale the total density with the emissivity.\n\t\t\t\t\t\t\tatmosphereInfo.totalDensity *= emissivity;\n\n\t\t\t\t\t\t\t// Apply the total density to the transparency of the atmosphere.\n\t\t\t\t\t\t\tvec4 outColor = vec4(0.0);\n\t\t\t\t\t\t\toutColor.a = clamp(pow(3.0 * atmosphereInfo.totalDensity, 0.3), 0.0, 1.0);\n\n\t\t\t\t\t\t\t// Multiply it all together with the source light color.\n\t\t\t\t\t\t\toutColor.rgb = emissivity * color * clamp(pow(15.0 * atmosphereInfo.totalDensity / (atmosphereDensity * atmosphereEquatorialRadius), 0.2), 0.75, 1.0);\n\n\t\t\t\t\t\t\t// Make it more opaque when lower down.\n\t\t\t\t\t\t\toutColor.a *= 1.0 + 0.5 * getDensity(atmosphereInfo.cameraPosition, atmosphereEquatorialRadius, 1.0, atmosphereScaleHeight);\n\n\t\t\t\t\t\t\t// Clamp it to make it clean.\n\t\t\t\t\t\t\toutColor.a = clamp(outColor.a, 0.0, 1.0);\n\n\t\t\t\t\t\t\t// Return the color.\n\t\t\t\t\t\t\treturn outColor;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Adjust the incoming light for the atmosphere.\n\t\t\t\t\t\tvec4 getAtmosphereColor(AtmosphereInfo atmosphereInfo, vec3 incomingLight, vec3 lightPosition) {\n\n\t\t\t\t\t\t\t// The color starts out in full brightness (as if emissivity was 1.0).\n\t\t\t\t\t\t\tvec4 outColor = getAtmosphereEmissiveColor(atmosphereInfo, incomingLight * atmosphereColor, 1.0);\n\n\t\t\t\t\t\t\t// Get the light position in the sphere entity-space.\n\t\t\t\t\t\t\tlightPosition = quatRotInv(atmosphereOrientation, lightPosition);\n\t\t\t\t\t\t\tlightPosition.z *= atmosphereInfo.spheroidRatio;\n\t\t\t\t\t\t\thighp vec3 lightToPosition = atmosphereInfo.position - lightPosition;\n\t\t\t\t\t\t\thighp vec3 lightToPositionUnit = normalize(lightToPosition / 1.0e8);\n\n\t\t\t\t\t\t\t// Get the day level, from 0 to 1, and apply it to the alpha.\n\t\t\t\t\t\t\tfloat ambientLightIntensity = min(1.0, length(ambientLightColor));\n\t\t\t\t\t\t\tvec3 dayRefUp = normalize(atmosphereInfo.cameraPosition + atmosphereInfo.end * atmosphereInfo.cameraToPositionUnit);\n\t\t\t\t\t\t\tfloat dayLevel = -dot(lightToPositionUnit, dayRefUp);\n\t\t\t\t\t\t\tfloat lightIntensity = mix(dayLevel, 0.0, ambientLightIntensity);\n\t\t\t\t\t\t\toutColor.a *= easeInOut(0.25 * 700.0 * atmosphereDensity + 1.0 * lightIntensity, 2.0);\n\n\t\t\t\t\t\t\t// Add broader sun glare.\n\t\t\t\t\t\t\tfloat lightDotCamera = max(0.0, -dot(lightToPositionUnit, atmosphereInfo.cameraToPositionUnit));\n\t\t\t\t\t\t\toutColor.rgb *= incomingLight * (1.0 + atmosphereSunBrightness * outColor.a * glow(0.04, 0.125, lightDotCamera));\n\n\t\t\t\t\t\t\t// Apply the sunset.\n\t\t\t\t\t\t\tfloat sunsetAmount = mix(atmosphereSunsetIntensity * easeInOut(0.5 * (1.0 - abs(dayLevel)), 4.0), 0.0, ambientLightIntensity);\n\t\t\t\t\t\t\toutColor.rgb *= mix(vec3(1.0), atmosphereSunsetColor, clamp(sunsetAmount, 0.0, 1.0));\n\n\t\t\t\t\t\t\t// Adjust for values that are greater than one.\n\t\t\t\t\t\t\toutColor.rgb = adjustOverbrightness(outColor.rgb);\n\n\t\t\t\t\t\t\treturn outColor;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvoid main(void) {\n\t\t\t\t\t\t// Get the camera direction to the position.\n\t\t\t\t\t\tvec3 positionDir = normalize(cameraSpacePosition);\n\n\t\t\t\t\t\t// Calculate the normal.\n\t\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\t\tvec3 normal = getNormalFromMap();\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tvec3 normal = normalize(cameraSpaceNormal);\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// The diffuse light.\n\t\t\t\t\t\tvec3 diffuseLight = ambientLightColor;\n\t\t\t\t\t\tvec3 specularLight = vec3(0, 0, 0);\n\n\t\t\t\t\t\t// Atmosphere emissive shading.\n\t\t\t\t\t\t#ifdef atmosphere\n\t\t\t\t\t\t\tAtmosphereInfo atmosphereInfo = getAtmosphereInfo();\n\t\t\t\t\t\t\tvec4 atmosphereColor = getAtmosphereEmissiveColor(atmosphereInfo, atmosphereColor, atmosphereEmissivity);\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// For each light,\n\t\t\t\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\t\t\t\tif (i >= numLights) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Get lighting angles.\n\t\t\t\t\t\t\tvec3 lightDir = normalize(cameraSpacePosition - lightPositions[i]);\n\t\t\t\t\t\t\tfloat lightCosAngle = -dot(lightDir, normal);\n\n\t\t\t\t\t\t\t// Make the shadows a bit sharper, depending on atmospheres.\n\t\t\t\t\t\t\tfloat sharpness = 3.0;\n\t\t\t\t\t\t\t#ifdef atmosphere\n\t\t\t\t\t\t\t\tsharpness /= 1.0 + 700.0 * atmosphereDensity;\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tlightCosAngle = 2.0 * (1.0 + exp(-sharpness)) / (1.0 + exp(-sharpness * lightCosAngle)) - 1.0;\n\n\t\t\t\t\t\t\t// Get the incoming light after shadows.\n\t\t\t\t\t\t\tvec3 incomingLight = lightColors[i];\n\t\t\t\t\t\t\t#if !defined(colorMapEmmissive) | !defined(nightMapEmmissive) | !defined(decalMapEmmissive)\n\t\t\t\t\t\t\t\t#ifdef shadowEntities\n\t\t\t\t\t\t\t\t\tincomingLight = getLightColorFromShadowEntities(incomingLight, lightDir, lightPositions[i], lightRadii[i], normal);\n\t\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t\t#ifdef shadowRings\n\t\t\t\t\t\t\t\t\tincomingLight = getLightColorFromShadowRings(incomingLight, lightDir);\n\t\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t\t// Diffuse shading.\n\t\t\t\t\t\t\tdiffuseLight += incomingLight * saturate(lightCosAngle);\n\n\t\t\t\t\t\t\t// Specular shading.\n\t\t\t\t\t\t\tvec3 reflectedLightDir = reflect(lightDir, normal);\n\t\t\t\t\t\t\tvec3 halfVector = normalize(-lightDir - positionDir);\n\t\t\t\t\t\t\tfloat phongHighlight = 0.25 * pow(saturate(-dot(reflectedLightDir, positionDir)), specularHardness / 2.0);\n\t\t\t\t\t\t\tfloat blinnHighlight = 4.0 * pow(saturate(dot(halfVector, normal)), specularHardness);\n\t\t\t\t\t\t\tfloat specularAngle = phongHighlight + pow(1.0 - saturate(-dot(positionDir, normal)), specularHardness / 12.0) * blinnHighlight;\n\t\t\t\t\t\t\tspecularLight += saturate(lightCosAngle * 20.0) * specularAngle * incomingLight;\n\n\t\t\t\t\t\t\t// Atmosphere shading.\n\t\t\t\t\t\t\t#ifdef atmosphere\n\t\t\t\t\t\t\t\tif (length(lightPositions[i]) > 0.0) { // don't use a camera light\n\t\t\t\t\t\t\t\t\tatmosphereColor += getAtmosphereColor(atmosphereInfo, incomingLight, lightPositions[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdiffuseLight = saturate(diffuseLight);\n\n\t\t\t\t\t\t// If there's ambience, remove the direct light components.\n\t\t\t\t\t\tspecularLight *= vec3(1, 1, 1) - ambientLightColor;\n\n\t\t\t\t\t\t// Main Color map.\n\t\t\t\t\t\tvec4 colorPixel = vec4(1, 0, 1, 1);\n\t\t\t\t\t\t#ifdef colorTextureEnvironment\n\t\t\t\t\t\t\tcolorPixel = getColorFromEnvironmentMap(colorTexture, positionDir, normal);\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tcolorPixel = texture2D(colorTexture, vColorUV) * vec4(color, 1);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#ifdef baseColor\n\t\t\t\t\t\t\tcolorPixel = vec4(color, 1);\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Apply diffuse shading.\n\t\t\t\t\t\t#ifndef colorMapEmmissive\n\t\t\t\t\t\t\tcolorPixel *= vec4(diffuseLight, 1.0);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tgl_FragColor = colorPixel;\n\n\t\t\t\t\t\t// Specular Map\n\t\t\t\t\t\tvec3 specularPixel = specularColor * specularIntensity;\n\t\t\t\t\t\t#ifdef specularMap\n\t\t\t\t\t\t\t#ifdef specularUVs\n\t\t\t\t\t\t\t\tvec2 specularUV = vSpecularUV;\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tvec2 specularUV = vColorUV;\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tspecularPixel = specularColor * texture2D(specularTexture, specularUV).r;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Apply specular Shading\n\t\t\t\t\t\tgl_FragColor.rgb += specularLight * specularPixel;\n\n\t\t\t\t\t\t// Night-Side Map\n\t\t\t\t\t\t#ifdef nightMap\n\t\t\t\t\t\t\tfloat ambientLightIntensity = min(1.0, length(ambientLightColor));\n\t\t\t\t\t\t\t#ifdef nightUVs\n\t\t\t\t\t\t\t\tvec2 nightUV = vNightUV;\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tvec2 nightUV = vColorUV;\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tvec4 nightPixel = texture2D(nightTexture, nightUV);\n\t\t\t\t\t\t\t#ifndef nightMapEmmissive\n\t\t\t\t\t\t\t\tnightPixel *= vec4(diffuseLight, 1.0);\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tgl_FragColor = mix(gl_FragColor, nightPixel, 1.0 - min(1.0, length(ambientLightColor + diffuseLight)));//(1.0 - ambientLightIntensity) * saturate(0.5 - length(diffuseLight)));\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Decal Map\n\t\t\t\t\t\t#ifdef decalMap\n\t\t\t\t\t\t\t#ifdef decalUVs\n\t\t\t\t\t\t\t\tvec2 decalUV = vDecalUV;\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tvec2 decalUV = vColorUV;\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tvec4 decalPixel = texture2D(decalTexture, decalUV);\n\t\t\t\t\t\t\t#ifndef decalMapEmmissive\n\t\t\t\t\t\t\t\tdecalPixel *= vec4(diffuseLight, 1.0);\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\tgl_FragColor.rgb = mix(gl_FragColor.rgb, decalPixel.rgb, decalPixel.a);\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Atmosphere\n\t\t\t\t\t\t#ifdef atmosphere\n\t\t\t\t\t\t\tgl_FragColor.rgb = mix(gl_FragColor.rgb, atmosphereColor.rgb, clamp(atmosphereColor.a, 0.0, 1.0));\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t\t\t}`\n\t\t\t});\n\t\t}\n\t\tconst newMaterial = MaterialUtilsPhong._material.clone();\n\t\tfor (let i = 0; i < newMaterial.uniforms['shadowEntityPositions'].value.length; i++) {\n\t\t\tnewMaterial.uniforms['shadowEntityPositions'].value[i] = MaterialUtilsPhong._material.uniforms['shadowEntityPositions'].value[i].clone();\n\t\t}\n\t\tfor (let i = 0; i < newMaterial.uniforms['shadowEntitySunsetColors'].value.length; i++) {\n\t\t\tnewMaterial.uniforms['shadowEntitySunsetColors'].value[i] = MaterialUtilsPhong._material.uniforms['shadowEntitySunsetColors'].value[i].clone();\n\t\t}\n\t\tThreeJsHelper.setupLogDepthBuffering(newMaterial);\n\t\tnewMaterial.extensions.derivatives = true;\n\t\tnewMaterial.needsUpdate = true;\n\t\treturn newMaterial;\n\t}\n}\n\n/**\n * @type {THREE.ShaderMaterial}\n*/\nMaterialUtilsPhong._material = null;\n","/** @module pioneer */\nimport {\n\tCapabilities,\n\tShaderChunkLogDepth,\n\tTHREE,\n\tThreeJsHelper\n} from '../internal';\n\nexport class MaterialUtilsStandard {\n\t/** Gets a PBR ShaderMaterial.\n\t * @returns {THREE.ShaderMaterial}\n\t */\n\tstatic get() {\n\t\tif (MaterialUtilsStandard._material === null) {\n\t\t\tMaterialUtilsStandard._material = new THREE.ShaderMaterial({\n\t\t\t\tuniforms: {\n\t\t\t\t\t// Lights\n\t\t\t\t\tambientLightColor: new THREE.Uniform(new THREE.Color()),\n\t\t\t\t\tlightPositions: new THREE.Uniform([new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0), new THREE.Vector3(1, 0, 0)]),\n\t\t\t\t\tlightColors: new THREE.Uniform([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 0)]),\n\t\t\t\t\tlightRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\t\tnumLights: new THREE.Uniform(0),\n\t\t\t\t\tenvironmentIntensity: new THREE.Uniform(1.0),\n\t\t\t\t\tgammaCorrectionFactor: new THREE.Uniform(1.0),\n\n\t\t\t\t\t// External lighting and camera.\n\t\t\t\t\tentityPos: new THREE.Uniform(new THREE.Vector3()),\n\n\t\t\t\t\t// Shading.\n\t\t\t\t\tcolor: new THREE.Uniform(new THREE.Color(1, 1, 1)),\n\t\t\t\t\tmetalness: new THREE.Uniform(0.0),\n\t\t\t\t\troughness: new THREE.Uniform(0.0),\n\t\t\t\t\temissiveColor: new THREE.Uniform(new THREE.Color(0, 0, 0)),\n\t\t\t\t\talphaMultiplier: new THREE.Uniform(1.0),\n\n\t\t\t\t\t// Textures\n\t\t\t\t\tcolorTexture: new THREE.Uniform(null),\n\t\t\t\t\troughnessTexture: new THREE.Uniform(null),\n\t\t\t\t\tmetalnessTexture: new THREE.Uniform(null),\n\t\t\t\t\tnormalTexture: new THREE.Uniform(null),\n\t\t\t\t\temissiveTexture: new THREE.Uniform(null),\n\n\t\t\t\t\t// Shadow Entities\n\t\t\t\t\tnumShadowEntities: new THREE.Uniform(0),\n\t\t\t\t\tshadowEntityPositions: new THREE.Uniform([new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),\n\t\t\t\t\tshadowEntityRadii: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\t\tshadowEntitySunsetIntensity: new THREE.Uniform([0, 0, 0, 0, 0]),\n\t\t\t\t\tshadowEntitySunsetColors: new THREE.Uniform([new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()]),\n\n\t\t\t\t\t// Environmental cubemap\n\t\t\t\t\tenvTexture: new THREE.Uniform(null),\n\t\t\t\t\tmaxMipLevel: new THREE.Uniform(0),\n\n\t\t\t\t\t// Dynamic environment map\n\t\t\t\t\tdynEnvTexture: new THREE.Uniform(null),\n\t\t\t\t\tdynEnvFaceSize: new THREE.Uniform(0),\n\n\t\t\t\t\tnormalScale: new THREE.Uniform(new THREE.Vector2()),\n\n\t\t\t\t\t...ShaderChunkLogDepth.ThreeUniforms\n\t\t\t\t},\n\t\t\t\tvertexShader: `\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tattribute vec4 tangent;\n\t\t\t\t\t\tvarying vec4 localTangent;\n\t\t\t\t\t\tvarying vec3 localNormal;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 modelNormal;\n\t\t\t\t\t#endif\n\t\t\t\t\t#if defined(normalMap) || defined(colorMap) || defined(roughnessMap) || defined(metalnessMap) || defined(emissiveMap)\n\t\t\t\t\t\tvarying vec2 localUV;\n\t\t\t\t\t#endif\n\t\t\t\t\tvarying vec3 cameraSpacePosition;\n\n\t\t\t\t\t${ShaderChunkLogDepth.VertexHead}\n\n\t\t\t\t\tvoid main() {\n\t\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\t\tlocalTangent = tangent;\n\t\t\t\t\t\t\tlocalNormal = normal;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tmodelNormal = normalize((modelMatrix * vec4(normal, 0.)).xyz);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t#if defined(normalMap) || defined(colorMap) || defined(roughnessMap) || defined(metalnessMap) || defined(emissiveMap)\n\t\t\t\t\t\t\tlocalUV = uv;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tcameraSpacePosition = (modelMatrix * vec4(position, 1.)).xyz;\n\t\t\t\t\t\tvec4 viewPosition = modelViewMatrix * vec4(position, 1.);\n\t\t\t\t\t\tgl_Position = projectionMatrix * viewPosition;\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Vertex}\n\t\t\t\t\t}`,\n\t\t\t\tfragmentShader: `\n\t\t\t\t\tprecision highp float;\n\n\t\t\t\t\t#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\t\t\t\t\t#define EPSILON 1e-6\n\t\t\t\t\t#define PI 3.14159265359\n\t\t\t\t\t#define RECIPROCAL_PI 0.31830988618\n\t\t\t\t\t#define RECIPROCAL_PI2 0.15915494\n\t\t\t\t\t#ifndef saturate\n\t\t\t\t\t\t#define saturate(a) clamp( a, 0.0, 1.0 )\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat pow2( float x ) { return x*x; }\n\n\t\t\t\t\tuniform mat4 modelMatrix;\n\n\t\t\t\t\t// Lights\n\t\t\t\t\tuniform vec3 ambientLightColor;\n\t\t\t\t\tuniform vec3 lightPositions[5];\n\t\t\t\t\tuniform vec3 lightColors[5];\n\t\t\t\t\tuniform float lightRadii[5];\n\t\t\t\t\tuniform int numLights;\n\t\t\t\t\tuniform float environmentIntensity;\n\t\t\t\t\tuniform float gammaCorrectionFactor;\n\n\t\t\t\t\t// External lighting and camera.\n\t\t\t\t\tuniform vec3 entityPos;\n\n\t\t\t\t\t// Textures.\n\t\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\t\tuniform sampler2D roughnessTexture;\n\t\t\t\t\tuniform sampler2D metalnessTexture;\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tuniform sampler2D normalTexture;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef emissiveMap\n\t\t\t\t\t\tuniform sampler2D emissiveTexture;\n\t\t\t\t\t#endif\n\t\t\t\t\t#ifdef dynEnvMap\n\t\t\t\t\t\tuniform sampler2D dynEnvTexture;\n\t\t\t\t\t\tuniform float dynEnvFaceSize;\n\t\t\t\t\t#elif defined( envMap )\n\t\t\t\t\t\t#ifdef envIsCube\n\t\t\t\t\t\t\tuniform samplerCube envTexture;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tuniform sampler2D envTexture;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tuniform vec2 normalScale;\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// Shadow Entities.\n\t\t\t\t\t#ifdef shadowEntities\n\t\t\t\t\t\tuniform int numShadowEntities;\n\t\t\t\t\t\tuniform vec3 shadowEntityPositions[5];\n\t\t\t\t\t\tuniform float shadowEntityRadii[5];\n\t\t\t\t\t\tuniform float shadowEntitySunsetIntensity[5];\n\t\t\t\t\t\tuniform vec3 shadowEntitySunsetColors[5];\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// Scalars\n\t\t\t\t\tuniform vec3 color;\n\t\t\t\t\tuniform float roughness;\n\t\t\t\t\tuniform float metalness;\n\t\t\t\t\tuniform vec3 emissiveColor;\n\t\t\t\t\tuniform float alphaMultiplier;\n\n\t\t\t\t\t// The varying attributes.\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tvarying vec4 localTangent;\n\t\t\t\t\t\tvarying vec3 localNormal;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 modelNormal;\n\t\t\t\t\t#endif\n\t\t\t\t\t#if defined(normalMap) || defined(colorMap) || defined(roughnessMap) || defined(metalnessMap) || defined(emissiveMap)\n\t\t\t\t\t\tvarying vec2 localUV;\n\t\t\t\t\t#endif\n\t\t\t\t\tvarying vec3 cameraSpacePosition;\n\n\t\t\t\t\t${ShaderChunkLogDepth.FragmentHead}\n\n\t\t\t\t\tstruct PhysicalMaterial {\n\t\t\t\t\t\tvec3 diffuseColor;\n\t\t\t\t\t\tvec3 specularColor;\n\t\t\t\t\t\tfloat specularRoughness;\n\t\t\t\t\t};\n\t\t\t\t\tstruct IncidentLight {\n\t\t\t\t\t\tvec3 color;\n\t\t\t\t\t\tvec3 direction;\n\t\t\t\t\t};\n\n\t\t\t\t\tstruct ReflectedLight {\n\t\t\t\t\t\tvec3 directDiffuse;\n\t\t\t\t\t\tvec3 directSpecular;\n\t\t\t\t\t\tvec3 indirectDiffuse;\n\t\t\t\t\t\tvec3 indirectSpecular;\n\t\t\t\t\t};\n\n\t\t\t\t\tstruct GeometricContext {\n\t\t\t\t\t\tvec3 normal;\n\t\t\t\t\t\tvec3 viewDir;\n\t\t\t\t\t};\n\n\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\tvec3 getNormalFromMap() {\n\t\t\t\t\t\t\tvec3 normal = normalize(localNormal);\n\t\t\t\t\t\t\tvec3 tangent = normalize(localTangent.xyz);\n\t\t\t\t\t\t\tvec3 bitangent = normalize(cross(normal, tangent));\n\t\t\t\t\t\t\tif (localTangent.w < 0.0) {\n\t\t\t\t\t\t\t\tbitangent *= -1.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmat3 transform = mat3(tangent, bitangent, normal);\n\t\t\t\t\t\t\tvec3 normalFromMap = texture2D(normalTexture, localUV).rgb * 2.0 - 1.0;\n\t\t\t\t\t\t\tnormalFromMap.xy *= vec2(1, -1);\n\t\t\t\t\t\t\tnormalFromMap.xy *= normalScale;\n\t\t\t\t\t\t\treturn normalize(transform * normalFromMap);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef shadowEntities\n\t\t\t\t\t\tvec3 applyRayleighScattering(vec3 color, float amount) {\n\t\t\t\t\t\t\tfloat value = (color.r + color.g + color.b);\n\t\t\t\t\t\t\tif (value > 0.0) {\n\t\t\t\t\t\t\t\tfloat rFactor = 1.0; // 6.3^-4 / 6.3^-4\n\t\t\t\t\t\t\t\tfloat gFactor = 1.602; // 5.6^-4 / 6.3^-4\n\t\t\t\t\t\t\t\tfloat bFactor = 3.228; // 4.7^-4 / 6.3^-4\n\t\t\t\t\t\t\t\tcolor.r *= pow(rFactor, -amount);\n\t\t\t\t\t\t\t\tcolor.g *= pow(gFactor, -amount);\n\t\t\t\t\t\t\t\tcolor.b *= pow(bFactor, -amount);\n\t\t\t\t\t\t\t\tcolor = value * color / (color.r + color.g + color.b);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn color;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvec3 getLightColorFromShadowEntities(vec3 lightColor, vec3 lightDir, vec3 lightPosition, float lightRadius, vec3 normal) {\n\t\t\t\t\t\t\tvec3 color = lightColor;\n\t\t\t\t\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\t\t\t\t\tif (i >= numShadowEntities || lightRadius < 0.0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvec3 origin = cameraSpacePosition - shadowEntityPositions[i];\n\t\t\t\t\t\t\t\tvec3 axis = normalize(shadowEntityPositions[i] - lightPosition);\n\t\t\t\t\t\t\t\tfloat sd = dot(origin, axis);\n\t\t\t\t\t\t\t\tif (sd > 0.0) {\n\t\t\t\t\t\t\t\t\tfloat e = length(origin - sd * axis);\n\t\t\t\t\t\t\t\t\tfloat ld = dot(cameraSpacePosition - lightPosition, axis);\n\t\t\t\t\t\t\t\t\tfloat lr = lightRadius;\n\t\t\t\t\t\t\t\t\tfloat sr = shadowEntityRadii[i];\n\t\t\t\t\t\t\t\t\tfloat e0 = (ld * sr - sd * lr) / (ld - sd);\n\t\t\t\t\t\t\t\t\tfloat e1 = (ld * sr + sd * lr) / (ld - sd);\n\t\t\t\t\t\t\t\t\tfloat lightLevel = 0.0;\n\t\t\t\t\t\t\t\t\tif (e1 < 0.0 || sd < 0.0) { // light in front of shadow entity\n\t\t\t\t\t\t\t\t\t\tlightLevel = 1.0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (e0 < e1) {\n\t\t\t\t\t\t\t\t\t\te0 -= (e1 - e0) * saturate(shadowEntitySunsetIntensity[i] / 3.0);\n\t\t\t\t\t\t\t\t\t\tlightLevel = pow(saturate((e - e0) / (e1 - e0)), 0.5); // soft light\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tlightLevel = e < e0 ? 0.0 : 1.0; // 0 radius light.\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcolor = lightLevel * mix(color, shadowEntitySunsetColors[i], (1.0 - lightLevel) * saturate(shadowEntitySunsetIntensity[i]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn color;\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\t\t\t\t\t\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\t\t\t\t\t}\n\n\t\t\t\t\t// These use optimizations found in https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf.\n\n\t\t\t\t\t// The Smith-method geometry function. Calculates the ratio of incident light that is blocked by the microfacets to never reach the viewer.\n\t\t\t\t\t// alpha is the roughness^2\n\t\t\t\t\t// dotNL is the normal · the light vector.\n\t\t\t\t\t// dotNV is the normal · the view vector.\n\t\t\t\t\tfloat G_GGX_SmithCorrelated( float alpha, float dotNL, float dotNV ) {\n\t\t\t\t\t\tfloat a2 = pow2( alpha );\n\t\t\t\t\t\t// Get the light direction part of the geometry function.\n\t\t\t\t\t\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\t\t\t\t\t\t// Get the view direction part of the geometry function.\n\t\t\t\t\t\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\t\t\t\t\t\t// It would normally be be gv * gl, but this is using an optimization by Heitz (2014),\n\t\t\t\t\t\t// including the BRDF denominator, simplifying the results.\n\t\t\t\t\t\treturn 0.5 / max( gv + gl, EPSILON );\n\t\t\t\t\t}\n\n\t\t\t\t\t// The Trowbridge-Reitz normal distribution function. Calculates the relative surface area microfacets exactly aligned to the halfway vector, how \"smooth\" the surface is.\n\t\t\t\t\t// alpha is the roughness^2.\n\t\t\t\t\t// dotNH is the normal · the halfway vector.\n\t\t\t\t\tfloat D_GGX( float alpha, float dotNH ) {\n\t\t\t\t\t\tfloat a2 = pow2( alpha );\n\t\t\t\t\t\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\t\t\t\t\t\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\t\t\t\t\t}\n\n\t\t\t\t\t// The Schlick approximation for the Fresnel equation.\n\t\t\t\t\t// Since metallic and non-metallic surfaces have different equations, this function combines the two by approximation.\n\t\t\t\t\t// specularColor is the specular color at normal incidence.\n\t\t\t\t\t// dotLH is the light direction · the halfway vector.\n\t\t\t\t\tvec3 F_Schlick( vec3 specularColor, float dotLH ) {\n\t\t\t\t\t\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\t\t\t\t\t\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The specular part of the main BRDF function that describes the weighting function for the sum of every incoming light.\n\t\t\t\t\t// It uses the Cook-Torrance model.\n\t\t\t\t\tvec3 BRDF_Specular_GGX( IncidentLight incidentLight, GeometricContext geometry, vec3 specularColor, float roughness ) {\n\t\t\t\t\t\tfloat alpha = pow2( roughness );\n\t\t\t\t\t\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\t\t\t\t\t\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t\t\t\t\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\t\t\t\t\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\t\t\t\t\t\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\t\t\t\t\t\tvec3 F = F_Schlick( specularColor, dotLH );\n\t\t\t\t\t\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\t\t\t\t\tfloat D = D_GGX( alpha, dotNH );\n\t\t\t\t\t\treturn F * ( G * D );\n\t\t\t\t\t}\n\n\t\t\t\t\t// The diffuse part of the main BRDF function.\n\t\t\t\t\tvec3 BRDF_Diffuse_Lambert( vec3 diffuseColor ) {\n\t\t\t\t\t\treturn RECIPROCAL_PI * diffuseColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat BlinnExponentToGGXRoughness( float blinnExponent ) {\n\t\t\t\t\t\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat GGXRoughnessToBlinnExponent( float ggxRoughness ) {\n\t\t\t\t\t\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n\t\t\t\t\t}\n\n\t\t\t\t\tvec2 integrateSpecularBRDF( float dotNV, float roughness ) {\n\t\t\t\t\t\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\t\t\t\t\t\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\t\t\t\t\t\tvec4 r = roughness * c0 + c1;\n\t\t\t\t\t\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\t\t\t\t\t\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\t\t\t\t\t}\n\n\t\t\t\t\tvec3 BRDF_Specular_GGX_Environment( GeometricContext geometry, vec3 specularColor, float roughness ) {\n\t\t\t\t\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\t\t\t\t\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\t\t\t\t\t\treturn specularColor * brdf.x + brdf.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tvoid BRDF_Specular_Multiscattering_Environment( GeometricContext geometry, vec3 specularColor, float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\t\t\t\t\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\t\t\t\t\tvec3 F = F_Schlick( specularColor, dotNV );\n\t\t\t\t\t\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\t\t\t\t\t\tvec3 FssEss = F * brdf.x + brdf.y;\n\t\t\t\t\t\tfloat Ess = brdf.x + brdf.y;\n\t\t\t\t\t\tfloat Ems = 1.0 - Ess;\n\t\t\t\t\t\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\t\t\t\t\t\tsingleScatter += FssEss;\n\t\t\t\t\t\tmultiScatter += Fms * Ems;\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat opacity = 1.0;\n\n\t\t\t\t\tuniform float reflectivity;\n\t\t\t\t\tuniform int maxMipLevel;\n\n\t\t\t\t\t// Returns the radiance: the incoming light * the cos(light angle to the normal)\n\t\t\t\t\tvec3 getIncomingLight( IncidentLight directLight, GeometricContext geometry) {\n\t\t\t\t\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\t\t\t\t\treturn (dotNL * directLight.color);\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat getSpecularMIPLevel( float blinnShininessExponent, int maxMIPLevel ) {\n\t\t\t\t\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\t\t\t\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\t\t\t\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t\t\t\t\t}\n\n\t\t\t\t\t#ifdef envIsCubeUV\n\t\t\t\t\t\t// These defines must match with PMREMGenerator\n\t\t\t\t\t\t#define cubeUV_maxMipLevel 8.0\n\t\t\t\t\t\t#define cubeUV_minMipLevel 4.0\n\t\t\t\t\t\t#define cubeUV_maxTileSize 256.0\n\t\t\t\t\t\t#define cubeUV_minTileSize 16.0\n\t\t\t\t\t\t// These shader functions convert between the UV coordinates of a single face of\n\t\t\t\t\t\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t\t\t\t\t\t// sampling a textureCube (not generally normalized ).\n\t\t\t\t\t\tfloat getFace( vec3 direction ) {\n\t\t\t\t\t\t\tvec3 absDirection = abs( direction );\n\t\t\t\t\t\t\tfloat face = - 1.0;\n\t\t\t\t\t\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\t\t\t\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\t\t\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\t\t\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn face;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// RH coordinate system; PMREM face-indexing convention\n\t\t\t\t\t\tvec2 getUV( vec3 direction, float face ) {\n\t\t\t\t\t\t\tvec2 uv;\n\t\t\t\t\t\t\tif ( face == 0.0 ) {\n\t\t\t\t\t\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\t\t\t\t\t\t\t} else if ( face == 1.0 ) {\n\t\t\t\t\t\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\t\t\t\t\t\t\t} else if ( face == 2.0 ) {\n\t\t\t\t\t\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\t\t\t\t\t\t\t} else if ( face == 3.0 ) {\n\t\t\t\t\t\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\t\t\t\t\t\t\t} else if ( face == 4.0 ) {\n\t\t\t\t\t\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn 0.5 * ( uv + 1.0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvec3 bilinearCubeUV( sampler2D environmentMap, vec3 direction, float mipInt ) {\n\t\t\t\t\t\t\tfloat face = getFace( direction );\n\t\t\t\t\t\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\t\t\t\t\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\t\t\t\t\t\tfloat faceSize = exp2( mipInt );\n\t\t\t\t\t\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\t\t\t\t\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\t\t\t\t\t\tvec2 f = fract( uv );\n\t\t\t\t\t\t\tuv += 0.5 - f;\n\t\t\t\t\t\t\tif ( face > 2.0 ) {\n\t\t\t\t\t\t\t\tuv.y += faceSize;\n\t\t\t\t\t\t\t\tface -= 3.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuv.x += face * faceSize;\n\t\t\t\t\t\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\t\t\t\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\t\t\t\t\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\t\t\t\t\t\tuv *= texelSize;\n\t\t\t\t\t\t\tvec3 tl = texture2D( environmentMap, uv ).rgb;\n\t\t\t\t\t\t\tuv.x += texelSize;\n\t\t\t\t\t\t\tvec3 tr = texture2D( environmentMap, uv ).rgb;\n\t\t\t\t\t\t\tuv.y += texelSize;\n\t\t\t\t\t\t\tvec3 br = texture2D( environmentMap, uv ).rgb;\n\t\t\t\t\t\t\tuv.x -= texelSize;\n\t\t\t\t\t\t\tvec3 bl = texture2D( environmentMap, uv ).rgb;\n\t\t\t\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\t\t\t\treturn mix( tm, bm, f.y );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t#define r0 1.0\n\t\t\t\t\t\t#define v0 0.339\n\t\t\t\t\t\t#define m0 - 2.0\n\t\t\t\t\t\t#define r1 0.8\n\t\t\t\t\t\t#define v1 0.276\n\t\t\t\t\t\t#define m1 - 1.0\n\t\t\t\t\t\t#define r4 0.4\n\t\t\t\t\t\t#define v4 0.046\n\t\t\t\t\t\t#define m4 2.0\n\t\t\t\t\t\t#define r5 0.305\n\t\t\t\t\t\t#define v5 0.016\n\t\t\t\t\t\t#define m5 3.0\n\t\t\t\t\t\t#define r6 0.21\n\t\t\t\t\t\t#define v6 0.0038\n\t\t\t\t\t\t#define m6 4.0\n\t\t\t\t\t\tfloat roughnessToMip( float roughness ) {\n\t\t\t\t\t\t\tfloat mip = 0.0;\n\t\t\t\t\t\t\tif ( roughness >= r1 ) {\n\t\t\t\t\t\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t\t\t\t\t\t} else if ( roughness >= r4 ) {\n\t\t\t\t\t\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t\t\t\t\t\t} else if ( roughness >= r5 ) {\n\t\t\t\t\t\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t\t\t\t\t\t} else if ( roughness >= r6 ) {\n\t\t\t\t\t\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mip;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvec4 textureCubeUV( sampler2D environmentMap, vec3 sampleDir, float roughness ) {\n\t\t\t\t\t\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\t\t\t\t\t\tfloat mipF = fract( mip );\n\t\t\t\t\t\t\tfloat mipInt = floor( mip );\n\t\t\t\t\t\t\tvec3 color0 = bilinearCubeUV( environmentMap, sampleDir, mipInt );\n\t\t\t\t\t\t\tif ( mipF == 0.0 ) {\n\t\t\t\t\t\t\t\treturn vec4( color0, 1.0 );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvec3 color1 = bilinearCubeUV( environmentMap, sampleDir, mipInt + 1.0 );\n\t\t\t\t\t\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef dynEnvMap\n\t\t\t\t\t\t// Converts an XY in cylindrical space to a face (z) with coordinates within that face (xy).\n\t\t\t\t\t\tvec3 xyzToUvFace(vec3 xyz, float pixelSize) {\n\t\t\t\t\t\t\t// Figure out which basis we're using.\n\t\t\t\t\t\t\tvec3 basis[3];\n\t\t\t\t\t\t\tfloat face;\n\t\t\t\t\t\t\tif (xyz.x * xyz.x >= xyz.y * xyz.y && xyz.x * xyz.x >= xyz.z * xyz.z) {\n\t\t\t\t\t\t\t\tif (xyz.x >= 0.0) {\n\t\t\t\t\t\t\t\t\tbasis[0] = vec3(0, 1, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(1, 0, 0);\n\t\t\t\t\t\t\t\t\tface = 0.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbasis[0] = vec3(0, -1, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(-1, 0, 0);\n\t\t\t\t\t\t\t\t\tface = 2.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (xyz.y * xyz.y >= xyz.x * xyz.x && xyz.y * xyz.y >= xyz.z * xyz.z) {\n\t\t\t\t\t\t\t\tif (xyz.y >= 0.0) {\n\t\t\t\t\t\t\t\t\tbasis[0] = vec3(-1, 0, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(0, 1, 0);\n\t\t\t\t\t\t\t\t\tface = 1.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbasis[0] = vec3(1, 0, 0); basis[1] = vec3(0, 0, 1); basis[2] = vec3(0, -1, 0);\n\t\t\t\t\t\t\t\t\tface = 3.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (xyz.z >= 0.0) {\n\t\t\t\t\t\t\t\t\tbasis[0] = vec3(0, 1, 0); basis[1] = vec3(-1, 0, 0); basis[2] = vec3(0, 0, 1);\n\t\t\t\t\t\t\t\t\tface = 4.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbasis[0] = vec3(0, 1, 0); basis[1] = vec3(1, 0, 0); basis[2] = vec3(0, 0, -1);\n\t\t\t\t\t\t\t\t\tface = 5.0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Convert into the uv basis from the xyz basis.\n\t\t\t\t\t\t\tfloat z = basis[2].x * xyz.x + basis[2].y * xyz.y + basis[2].z * xyz.z;\n\t\t\t\t\t\t\tif (z < 0.0) {\n\t\t\t\t\t\t\t\tz = 1.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvec2 uv = vec2(\n\t\t\t\t\t\t\t\t(basis[0].x * xyz.x + basis[0].y * xyz.y + basis[0].z * xyz.z) / z,\n\t\t\t\t\t\t\t\t(basis[1].x * xyz.x + basis[1].y * xyz.y + basis[1].z * xyz.z) / z);\n\n\t\t\t\t\t\t\t// Convert from -1 to +1, to 0 to 1.\n\t\t\t\t\t\t\tuv = 0.5 * (uv + vec2(1.0));\n\n\t\t\t\t\t\t\t// Convert to pixel-space.\n\t\t\t\t\t\t\tuv *= pixelSize;\n\n\t\t\t\t\t\t\t// Shrink to ignore 1 pixel borders.\n\t\t\t\t\t\t\tuv.x = (pixelSize - 2.0) / pixelSize * uv.x + 1.0;\n\t\t\t\t\t\t\tuv.y = (pixelSize - 2.0) / pixelSize * uv.y + 1.0;\n\n\t\t\t\t\t\t\t// Convert back to unit-space.\n\t\t\t\t\t\t\tuv /= pixelSize;\n\n\t\t\t\t\t\t\treturn vec3(uv, face);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Gets the dynamic environmental lighting given the outward direction.\n\t\t\t\t\t\tvec3 getEnvLight(vec3 direction, float roughness) {\n\t\t\t\t\t\t\t// Get the mip levels.\n\t\t\t\t\t\t\tfloat mipLevel = pow(roughness, 0.25) * (log2(dynEnvFaceSize) - 2.0);\n\t\t\t\t\t\t\tfloat mipLevel0 = floor(mipLevel);\n\t\t\t\t\t\t\tfloat mipLevel1 = floor(mipLevel) + 1.0;\n\t\t\t\t\t\t\tfloat mipLevelU = mipLevel - mipLevel0;\n\t\t\t\t\t\t\tfloat mipSizeX0 = pow(2.0, -mipLevel0);\n\t\t\t\t\t\t\tfloat mipOffsetY0 = 1.0 - pow(2.0, -mipLevel0);\n\t\t\t\t\t\t\tfloat mipSizeX1 = pow(2.0, -mipLevel1);\n\t\t\t\t\t\t\tfloat mipOffsetY1 = 1.0 - pow(2.0, -mipLevel1);\n\t\t\t\t\t\t\t// Get UV within a mip of cube faces.\n\t\t\t\t\t\t\tvec3 uvFace0 = xyzToUvFace(direction, dynEnvFaceSize * mipSizeX0);\n\t\t\t\t\t\t\tvec3 uvFace1 = xyzToUvFace(direction, dynEnvFaceSize * mipSizeX1);\n\t\t\t\t\t\t\tvec2 faceOffset = vec2(mod(uvFace0.z, 3.0) / 3.0, floor(uvFace0.z / 3.0) / 2.0);\n\t\t\t\t\t\t\tvec2 uvInMip0 = vec2(faceOffset.x + uvFace0.x / 3.0, faceOffset.y + uvFace0.y / 2.0);\n\t\t\t\t\t\t\tvec2 uvInMip1 = vec2(faceOffset.x + uvFace1.x / 3.0, faceOffset.y + uvFace1.y / 2.0);\n\t\t\t\t\t\t\t// Get the UVs within the textures.\n\t\t\t\t\t\t\tvec2 uv0 = vec2(uvInMip0.x * mipSizeX0 * 0.75, 0.5 * uvInMip0.y * mipSizeX0 + mipOffsetY0);\n\t\t\t\t\t\t\tvec2 uv1 = vec2(uvInMip1.x * mipSizeX1 * 0.75, 0.5 * uvInMip1.y * mipSizeX1 + mipOffsetY1);\n\t\t\t\t\t\t\tvec3 color0 = texture2D(dynEnvTexture, uv0).rgb;\n\t\t\t\t\t\t\tvec3 color1 = texture2D(dynEnvTexture, uv1).rgb;\n\t\t\t\t\t\t\treturn mix(color0, color1, mipLevelU) * environmentIntensity * ((PI - 1.0) * roughness + 1.0);\n\t\t\t\t\t\t}\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec3 getLightProbeIndirectRadiance( GeometricContext geometry, float blinnShininessExponent, int maxMIPLevel ) {\n\t\t\t\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t\t\t\t\t#if defined( envMap )\n\t\t\t\t\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\t\t\t\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t\t\t\t\t\tvec3 queryReflectVec = vec3( reflectVec.x, reflectVec.yz );\n\t\t\t\t\t\t\t#ifdef envIsCube\n\t\t\t\t\t\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\t\t\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envTexture, queryReflectVec, specularMIPLevel );\n\t\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\t\tvec4 envMapColor = textureCube( envTexture, queryReflectVec, specularMIPLevel );\n\t\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t#elif defined( envIsCubeUV )\n\t\t\t\t\t\t\t\tvec4 envMapColor = textureCubeUV( envTexture, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tvec2 sampleUV;\n\t\t\t\t\t\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\t\t\t\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t\t\t\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\t\t\t\t\t\tvec4 envMapColor = texture2DLodEXT( envTexture, sampleUV, specularMIPLevel );\n\t\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\t\tvec4 envMapColor = texture2D( envTexture, sampleUV, specularMIPLevel );\n\t\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\treturn envMapColor.rgb * environmentIntensity;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\treturn vec3(0, 0, 0);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t}\n\n\t\t\t\t\t// Given the directLight, accumulates onto the reflectedLight the irradiance as the BRDF function.\n\t\t\t\t\tvoid RE_Direct_Physical( IncidentLight directLight, GeometricContext geometry, PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\t\t\t\t\tvec3 irradiance = getIncomingLight( directLight, geometry );\n\t\t\t\t\t\tirradiance *= PI;\n\t\t\t\t\t\tfloat clearCoatDHR = 0.0;\n\t\t\t\t\t\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\t\t\t\t\t\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t\t\t\t\t}\n\n\t\t\t\t\tvoid RE_IndirectDiffuse_Physical( vec3 irradiance, GeometricContext geometry, PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\t\t\t\t\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t\t\t\t\t}\n\n\t\t\t\t\tvoid RE_IndirectSpecular_Physical( vec3 radiance, vec3 irradiance, vec3 clearCoatRadiance, GeometricContext geometry, PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t\t\t\t\t\tfloat clearCoatDHR = 0.0;\n\t\t\t\t\t\tfloat clearCoatInv = 1.0 - clearCoatDHR;\n\t\t\t\t\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t\t\t\t\t}\n\n\t\t\t\t\t#define RE_Direct RE_Direct_Physical\n\t\t\t\t\t#define Material_BlinnShininessExponent( material ) GGXRoughnessToBlinnExponent( material.specularRoughness )\n\t\t\t\t\t#define RE_IndirectDiffuse RE_IndirectDiffuse_Physical\n\t\t\t\t\t#define RE_IndirectSpecular RE_IndirectSpecular_Physical\n\n\t\t\t\t\tvoid main(void) {\n\t\t\t\t\t\tvec4 diffuseColor = vec4( color, 1.0 );\n\t\t\t\t\t\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t\t\t\t\t\t#ifdef colorMap\n\t\t\t\t\t\t\tvec4 texelColor = texture2D(colorTexture, localUV);\n\t\t\t\t\t\t\tdiffuseColor *= texelColor;\n\t\t\t\t\t\t\topacity = texelColor.a;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// PBR variables\n\t\t\t\t\t\tfloat roughnessFactor;\n\t\t\t\t\t\tfloat metalnessFactor;\n\n\t\t\t\t\t\troughnessFactor = roughness;\n\t\t\t\t\t\t#ifdef roughnessMap\n\t\t\t\t\t\t\troughnessFactor *= texture2D( roughnessTexture, localUV ).g;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\tmetalnessFactor = metalness;\n\t\t\t\t\t\t#ifdef metalnessMap\n\t\t\t\t\t\t\tmetalnessFactor *= texture2D( metalnessTexture, localUV ).b;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\tPhysicalMaterial material;\n\t\t\t\t\t\tmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\t\t\t\t\t\tmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n\t\t\t\t\t\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n\t\t\t\t\t\tGeometricContext geometry;\n\t\t\t\t\t\tgeometry.viewDir = -normalize(cameraSpacePosition);\n\t\t\t\t\t\t#ifdef normalMap\n\t\t\t\t\t\t\tgeometry.normal = normalize((modelMatrix * vec4(getNormalFromMap(), 0.)).xyz);\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tgeometry.normal = modelNormal;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Env Light\n\t\t\t\t\t\tvec3 irradiance = ambientLightColor;\n\t\t\t\t\t\t#ifdef dynEnvMap\n\t\t\t\t\t\t\tirradiance += getEnvLight(geometry.normal, 1.0);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tvec3 radiance = ambientLightColor / 2.0;\n\t\t\t\t\t\t#ifdef dynEnvMap\n\t\t\t\t\t\t\tradiance += getEnvLight(reflect(-geometry.viewDir, geometry.normal), material.specularRoughness);\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Add emissivity.\n\t\t\t\t\t\tvec3 totalEmissiveRadiance = emissiveColor;\n\t\t\t\t\t\t#ifdef emissiveMap\n\t\t\t\t\t\t\ttotalEmissiveRadiance *= texture2D(emissiveTexture, localUV).rgb;\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// Add direct radiance.\n\t\t\t\t\t\tvec3 totalDirectIrradiance = ambientLightColor / 2.0;\n\t\t\t\t\t\t#ifdef dynEnvMap\n\t\t\t\t\t\t\ttotalDirectIrradiance += getEnvLight(reflect(-geometry.viewDir, geometry.normal), material.specularRoughness);\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// For each light,\n\t\t\t\t\t\tfor (int i = 0; i < 5; i++) {\n\t\t\t\t\t\t\tif (i >= numLights) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tIncidentLight directLight;\n\t\t\t\t\t\t\tdirectLight.color = lightColors[i];\n\t\t\t\t\t\t\tdirectLight.direction = -normalize(cameraSpacePosition - lightPositions[i]);\n\t\t\t\t\t\t\t#ifdef shadowEntities\n\t\t\t\t\t\t\t\tdirectLight.color = getLightColorFromShadowEntities(directLight.color, directLight.direction, lightPositions[i], lightRadii[i], geometry.normal);\n\t\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t\tRE_Direct(directLight, geometry, material, reflectedLight);\n\n\t\t\t\t\t\t\tradiance += getLightProbeIndirectRadiance(geometry, Material_BlinnShininessExponent(material), maxMipLevel);\n\t\t\t\t\t\t\tRE_IndirectDiffuse(irradiance, geometry, material, reflectedLight);\n\t\t\t\t\t\t\tRE_IndirectSpecular(radiance, irradiance, vec3(0.0), geometry, material, reflectedLight);\n\n\t\t\t\t\t\t\t// Modify env light by total incoming light.\n\t\t\t\t\t\t\ttotalDirectIrradiance += getIncomingLight(directLight, geometry);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multiply in the direct irradiance.\n\t\t\t\t\t\treflectedLight.indirectSpecular *= totalDirectIrradiance;\n\n\t\t\t\t\t\t// If there's ambience, remove the direct light components.\n\t\t\t\t\t\treflectedLight.directDiffuse *= vec3(1, 1, 1) - ambientLightColor;\n\t\t\t\t\t\treflectedLight.directSpecular *= vec3(1, 1, 1) - ambientLightColor;\n\n\t\t\t\t\t\t// Add the reflected light to the outgoing light.\n\t\t\t\t\t\tvec3 outgoingLight = totalEmissiveRadiance + reflectedLight.directDiffuse + reflectedLight.directSpecular + reflectedLight.indirectDiffuse + reflectedLight.indirectSpecular;\n\n\t\t\t\t\t\t// Set the frag color based on the total outgoing light.\n\t\t\t\t\t\tgl_FragColor = vec4( outgoingLight, opacity );\n\n\t\t\t\t\t\t// Gamma correction\n\t\t\t\t\t\tgl_FragColor = vec4( pow( abs(gl_FragColor.rgb), vec3( 1.0 / gammaCorrectionFactor ) ), gl_FragColor.a );\n\n\t\t\t\t\t\t// Convert to sRGB.\n\t\t\t\t\t\tgl_FragColor = LinearTosRGB(gl_FragColor);\n\n\t\t\t\t\t\t// Multiply the alphaMultiplier.\n\t\t\t\t\t\tgl_FragColor.a *= alphaMultiplier;\n\n\t\t\t\t\t\t${ShaderChunkLogDepth.Fragment}\n\t\t\t\t\t}`\n\t\t\t});\n\t\t}\n\t\tconst newMaterial = MaterialUtilsStandard._material.clone();\n\t\tfor (let i = 0; i < newMaterial.uniforms['shadowEntityPositions'].value.length; i++) {\n\t\t\tnewMaterial.uniforms['shadowEntityPositions'].value[i] = MaterialUtilsStandard._material.uniforms['shadowEntityPositions'].value[i].clone();\n\t\t}\n\t\tfor (let i = 0; i < newMaterial.uniforms['shadowEntitySunsetColors'].value.length; i++) {\n\t\t\tnewMaterial.uniforms['shadowEntitySunsetColors'].value[i] = MaterialUtilsStandard._material.uniforms['shadowEntitySunsetColors'].value[i].clone();\n\t\t}\n\t\tThreeJsHelper.setupLogDepthBuffering(newMaterial);\n\t\tif (Capabilities.hasGLExtension('EXT_shader_texture_lod')) {\n\t\t\tnewMaterial.extensions.shaderTextureLOD = true;\n\t\t}\n\t\tnewMaterial.extensions.derivatives = true;\n\t\tnewMaterial.needsUpdate = true;\n\t\treturn newMaterial;\n\t}\n}\n\n/** @type {THREE.ShaderMaterial} */\nMaterialUtilsStandard._material = null;\n","/** @module pioneer */\n\n/**\n * A class of math routines to augment the built-in Math class.\n * @hideconstructor\n */\nexport class MathUtils {\n\t/**\n\t * Returns PI.\n\t * @returns {number}\n\t */\n\tstatic get pi() {\n\t\treturn 3.141592653589793;\n\t}\n\n\t/**\n\t * Returns PI * 2.\n\t * @returns {number}\n\t */\n\tstatic get twoPi() {\n\t\treturn 6.283185307179586;\n\t}\n\n\t/**\n\t * Returns PI / 2.\n\t * @returns {number}\n\t */\n\tstatic get halfPi() {\n\t\treturn 1.5707963267948966;\n\t}\n\n\t/**\n\t * Returns the nearest angle between a0 and a1.\n\t * @param {number} a0\n\t * @param {number} a1\n\t * @returns {number}\n\t */\n\tstatic angle(a0, a1) {\n\t\ta0 = this.wrap(a0, 0, 2 * Math.PI);\n\t\ta1 = this.wrap(a1, 0, 2 * Math.PI);\n\t\tif (a1 - a0 > Math.PI) {\n\t\t\treturn a0 - a1 + 2 * Math.PI;\n\t\t}\n\t\tif (a0 - a1 > Math.PI) {\n\t\t\treturn a1 - a0 + 2 * Math.PI;\n\t\t}\n\t\treturn Math.abs(a1 - a0);\n\t}\n\n\t/**\n\t * Clamps a between a0 and a1.\n\t * @param {number} a - the value to clamp\n\t * @param {number} a0 - the minimum\n\t * @param {number} a1 - the maximum\n\t * @returns {number}\n\t */\n\tstatic clamp(a, a0, a1) {\n\t\treturn Math.min(Math.max(a0, a), a1);\n\t}\n\n\t/**\n\t * Clamps a between 0 and 1.\n\t * @param {number} a - the value to clamp\n\t * @returns {number}\n\t */\n\tstatic clamp01(a) {\n\t\treturn Math.min(Math.max(0, a), 1);\n\t}\n\n\t/**\n\t * Returns the point a between a0 and a1 as if they were a cycle.\n\t * @param {number} a - the value to wrap\n\t * @param {number} a0 - the start of the cycle\n\t * @param {number} a1 - the end of the cycle\n\t * @returns {number}\n\t */\n\tstatic wrap(a, a0, a1) {\n\t\tlet phase = (a - a0) % (a1 - a0) + a0;\n\t\tif (phase < a0) {\n\t\t\tphase += a1 - a0;\n\t\t}\n\t\treturn phase;\n\t}\n\n\t/**\n\t * Linearly interpolates between a0 and a1.\n\t * @param {number} a0 - the value when u = 0\n\t * @param {number} a1 - the value when u = 1\n\t * @param {number} u - the lerp factor\n\t * @returns {number}\n\t */\n\tstatic lerp(a0, a1, u) {\n\t\treturn (1.0 - u) * a0 + u * a1;\n\t}\n\n\t/**\n\t * Linearly interpolates between two angles in radians a0 and a1.\n\t * @param {number} a0 - the value when u = 0\n\t * @param {number} a1 - the value when u = 1\n\t * @param {number} u - the lerp factor\n\t * @returns {number}\n\t */\n\tstatic lerpAngle(a0, a1, u) {\n\t\ta0 = this.wrap(a0, -Math.PI, +Math.PI);\n\t\ta1 = this.wrap(a1, -Math.PI, +Math.PI);\n\t\tif (a1 - a0 > Math.PI) {\n\t\t\ta0 += 2 * Math.PI;\n\t\t}\n\t\tif (a0 - a1 > Math.PI) {\n\t\t\ta1 += 2 * Math.PI;\n\t\t}\n\t\treturn this.wrap(this.lerp(a0, a1, u), -Math.PI, +Math.PI);\n\t}\n\n\t/**\n\t * Converts radians to degrees.\n\t * @param {number} a - the value in radians\n\t * @returns {number}\n\t */\n\tstatic radToDeg(a) {\n\t\treturn a * 57.29577951308232;\n\t}\n\n\t/**\n\t * Converts degrees to radians.\n\t * @param {number} a - the value in degrees\n\t * @returns {number}\n\t */\n\tstatic degToRad(a) {\n\t\treturn a * 0.01745329251994329;\n\t}\n\n\t/**\n\t * Returns the next higher power of two, or a if it is a power of 2.\n\t * @param {number} a - the value to use\n\t * @returns {number}\n\t */\n\tstatic ceilPow2(a) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(a) / Math.log(2)));\n\t}\n}\n","/** @module pioneer */\nimport {\n\tMathUtils,\n\tQuaternion,\n\tVector3\n} from '../internal';\n\nexport class OrbitalElements {\n\tconstructor() {\n\t\t/**\n\t\t * The epoch.\n\t\t * @type {number}\n\t\t */\n\t\tthis.epoch = 0;\n\n\t\t/**\n\t\t * The eccentricity.\n\t\t * @type {number}\n\t\t */\n\t\tthis.eccentricity = 0;\n\n\t\t/**\n\t\t * The semi-major axis.\n\t\t * @type {number}\n\t\t */\n\t\tthis.semiMajorAxis = 0;\n\n\t\t/**\n\t\t * The mean angular motion.\n\t\t * @type {number}\n\t\t */\n\t\tthis.meanAngularMotion = 0;\n\n\t\t/**\n\t\t * The mean anomaly at the epoch.\n\t\t * @type {number}\n\t\t */\n\t\tthis.meanAnomalyAtEpoch = 0;\n\n\t\t/**\n\t\t * The orbit's oriention.\n\t\t * The x-axis is along the eccentricity vector (periapsis) and the z-axis is along the angular momentum vector.\n\t\t * @type {Quaternion}\n\t\t */\n\t\tthis.orbitOrientation = new Quaternion();\n\t}\n\n\t/**\n\t * Copies an other orbital elements to this.\n\t * @param {OrbitalElements} other\n\t */\n\tcopy(other) {\n\t\tthis.epoch = other.epoch;\n\t\tthis.eccentricity = other.eccentricity;\n\t\tthis.semiMajorAxis = other.semiMajorAxis;\n\t\tthis.meanAnomalyAtEpoch = other.meanAnomalyAtEpoch;\n\t\tthis.meanAngularMotion = other.meanAngularMotion;\n\t\tthis.orbitOrientation.copy(other.orbitOrientation);\n\t}\n\n\t/**\n\t * Projects a position and velocity based on the orbital elements.\n\t * @param {Vector3} outPosition\n\t * @param {Vector3} outVelocity\n\t * @param {number} meanAnomaly\n\t */\n\tprojectFromMeanAnomaly(outPosition, outVelocity, meanAnomaly) {\n\t\tif (this.eccentricity < 1.0) {\n\t\t\t// Get the eccentric anomaly.\n\t\t\tconst eccentricAnomaly = this.getEccentricAnomalyFromMeanAnomaly(meanAnomaly);\n\n\t\t\t// Set the position and rotate it by the orbit orientation.\n\t\t\tconst radius = this.semiMajorAxis * (1.0 - this.eccentricity * Math.cos(eccentricAnomaly));\n\t\t\tconst velocityFactor = this.meanAngularMotion * this.semiMajorAxis * this.semiMajorAxis / radius;\n\t\t\toutPosition.x = this.semiMajorAxis * (Math.cos(eccentricAnomaly) - this.eccentricity);\n\t\t\toutPosition.y = this.semiMajorAxis * Math.sqrt(1.0 - this.eccentricity * this.eccentricity) * Math.sin(eccentricAnomaly);\n\t\t\toutVelocity.x = -velocityFactor * Math.sin(eccentricAnomaly);\n\t\t\toutVelocity.y = velocityFactor * Math.sqrt(1.0 - this.eccentricity * this.eccentricity) * Math.cos(eccentricAnomaly);\n\t\t}\n\t\telse {\n\t\t\t// Get the hyperbolic anomaly.\n\t\t\tconst hyperbolicAnomaly = this.getEccentricAnomalyFromMeanAnomaly(meanAnomaly);\n\n\t\t\t// Set the position and rotate it by the orbit orientation.\n\t\t\tconst radius = -this.semiMajorAxis * (1.0 - this.eccentricity * Math.cosh(hyperbolicAnomaly));\n\t\t\tconst velocityFactor = this.meanAngularMotion * this.semiMajorAxis * this.semiMajorAxis / radius;\n\t\t\toutPosition.x = this.semiMajorAxis * (this.eccentricity - Math.cosh(hyperbolicAnomaly));\n\t\t\toutPosition.y = this.semiMajorAxis * Math.sqrt(this.eccentricity * this.eccentricity - 1.0) * Math.sinh(hyperbolicAnomaly);\n\t\t\toutVelocity.x = -velocityFactor * Math.sinh(hyperbolicAnomaly);\n\t\t\toutVelocity.y = velocityFactor * Math.sqrt(this.eccentricity * this.eccentricity - 1.0) * Math.cosh(hyperbolicAnomaly);\n\t\t}\n\t\toutPosition.z = 0.0;\n\t\toutVelocity.z = 0.0;\n\n\t\t// Rotate the vectors by the orbit orientation.\n\t\toutPosition.rotate(this.orbitOrientation, outPosition);\n\t\toutVelocity.rotate(this.orbitOrientation, outVelocity);\n\t}\n\n\t/**\n\t * Projects a position and velocity based on the orbital elements.\n\t * @param {Vector3} outPosition\n\t * @param {Vector3} outVelocity\n\t * @param {number} time\n\t */\n\tproject(outPosition, outVelocity, time) {\n\t\t// Get the mean anomaly for the time.\n\t\tlet meanAnomaly = this.meanAnomalyAtEpoch + this.meanAngularMotion * (time - this.epoch);\n\t\tif (this.eccentricity < 1.0) {\n\t\t\tmeanAnomaly = MathUtils.wrap(meanAnomaly, -MathUtils.pi, +MathUtils.pi);\n\t\t}\n\t\tthis.projectFromMeanAnomaly(outPosition, outVelocity, meanAnomaly);\n\t}\n\n\t/**\n\t * Gets the true anomaly given a position.\n\t * @param {Vector3} position\n\t * @returns {number}\n\t */\n\tgetTrueAnomalyFromPosition(position) {\n\t\tconst positionInPlane = Vector3.pool.get();\n\t\tpositionInPlane.rotateInverse(this.orbitOrientation, position);\n\t\tconst trueAnomaly = Math.atan2(positionInPlane.y, positionInPlane.x);\n\t\tVector3.pool.release(positionInPlane);\n\t\treturn trueAnomaly;\n\t}\n\n\t/**\n\t * Gets the mean anomaly from the true anomaly.\n\t * @param {number} trueAnomaly\n\t * @returns {number}\n\t */\n\tgetMeanAnomalyFromTrueAnomaly(trueAnomaly) {\n\t\t// The eccentric anomaly, mean anomaly, and mean angular motion from the true anomaly, for either ellipses or hyperbolas.\n\t\tlet eccentricAnomaly = 0.0;\n\t\tlet meanAnomaly = 0.0;\n\t\tif (this.eccentricity < 1.0) {\n\t\t\teccentricAnomaly = 2.0 * Math.atan(Math.tan(trueAnomaly / 2.0) * Math.sqrt((1 - this.eccentricity) / (1 + this.eccentricity)));\n\t\t\tmeanAnomaly = eccentricAnomaly - this.eccentricity * Math.sin(eccentricAnomaly);\n\t\t}\n\t\telse {\n\t\t\teccentricAnomaly = 2.0 * Math.atanh(Math.tan(trueAnomaly / 2.0) * Math.sqrt((this.eccentricity - 1) / (1 + this.eccentricity)));\n\t\t\tmeanAnomaly = this.eccentricity * Math.sinh(eccentricAnomaly) - eccentricAnomaly;\n\t\t}\n\t\treturn meanAnomaly;\n\t}\n\n\t/**\n\t * Gets the eccentric/hyperbolic anomaly from the mean anomaly.\n\t * @param {number} meanAnomaly\n\t * @returns {number}\n\t */\n\tgetEccentricAnomalyFromMeanAnomaly(meanAnomaly) {\n\t\tif (this.eccentricity < 1.0) {\n\t\t\t// Use Newton's method to find the eccentric anomaly.\n\t\t\tlet eccentricAnomaly = meanAnomaly;\n\t\t\tif (this.eccentricity >= 0.8) {\n\t\t\t\teccentricAnomaly = Math.sign(meanAnomaly) * MathUtils.pi; // use a more optimal start point for near parabolic orbits\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; i++) {\n\t\t\t\tconst difference = (eccentricAnomaly - this.eccentricity * Math.sin(eccentricAnomaly) - meanAnomaly) / (this.eccentricity * Math.cos(eccentricAnomaly) - 1.0);\n\t\t\t\teccentricAnomaly += difference;\n\t\t\t\tif (Math.abs(difference) < 0.00174532925) { // .1 degrees\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn eccentricAnomaly;\n\t\t}\n\t\telse {\n\t\t\t// Use Newton's method to find the hyperbolic anomaly.\n\t\t\tlet hyperbolicAnomaly = Math.log(2.0 * Math.abs(meanAnomaly) / Math.E + 1.8);\n\t\t\tif (this.eccentricity <= 1.2) {\n\t\t\t\thyperbolicAnomaly = Math.log(2.0 * Math.abs(meanAnomaly) / Math.E + 1.8); // use a more optimal start point for near parabolic orbits\n\t\t\t}\n\t\t\tif (meanAnomaly < 0.0) {\n\t\t\t\thyperbolicAnomaly *= -1;\n\t\t\t}\n\t\t\tfor (let i = 0; i < 20; i++) {\n\t\t\t\tconst difference = (hyperbolicAnomaly - this.eccentricity * Math.sinh(hyperbolicAnomaly) + meanAnomaly) / (this.eccentricity * Math.cosh(hyperbolicAnomaly) - 1.0);\n\t\t\t\thyperbolicAnomaly += difference;\n\t\t\t\tif (Math.abs(difference) < 0.00174532925) { // .1 degrees\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hyperbolicAnomaly;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the mean anomaly from the eccentric or hyperbolic anomaly.\n\t * @param {number} eccentricAnomaly\n\t * @returns {number}\n\t */\n\tgetMeanAnomalyFromEccentricAnomaly(eccentricAnomaly) {\n\t\tif (this.eccentricity < 1.0) {\n\t\t\tconst meanAnomaly = eccentricAnomaly - this.eccentricity * Math.sin(eccentricAnomaly);\n\t\t\treturn MathUtils.wrap(meanAnomaly, -Math.PI, +Math.PI);\n\t\t}\n\t\telse {\n\t\t\treturn this.eccentricity * Math.sinh(eccentricAnomaly) - eccentricAnomaly;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the true anomaly from the eccentric or hyperbolic anomaly.\n\t * @param {number} eccentricAnomaly\n\t * @returns {number}\n\t */\n\tgetTrueAnomalyFromEccentricAnomaly(eccentricAnomaly) {\n\t\tif (this.eccentricity < 1.0) {\n\t\t\treturn 2.0 * Math.atan(Math.sqrt((1 + this.eccentricity) / (1 - this.eccentricity)) * Math.tan(eccentricAnomaly / 2.0));\n\t\t}\n\t\telse {\n\t\t\treturn 2.0 * Math.atan(Math.sqrt((1 + this.eccentricity) / (this.eccentricity - 1)) * Math.tanh(eccentricAnomaly / 2.0));\n\t\t}\n\t}\n\n\t/**\n\t * Gets the eccentric/hyperbolic anomaly from the true anomaly.\n\t * @param {number} trueAnomaly\n\t * @returns {number}\n\t */\n\tgetEccentricAnomalyFromTrueAnomaly(trueAnomaly) {\n\t\t// The eccentric anomaly, mean anomaly, and mean angular motion from the true anomaly, for either ellipses or hyperbolas.\n\t\tif (this.eccentricity < 1.0) {\n\t\t\tconst eccentricAnomaly = 2.0 * Math.atan2(Math.tan(trueAnomaly / 2.0), Math.sqrt((1 + this.eccentricity) / (1 - this.eccentricity)));\n\t\t\treturn MathUtils.wrap(eccentricAnomaly, -Math.PI, +Math.PI);\n\t\t}\n\t\telse {\n\t\t\treturn 2.0 * Math.atanh(Math.sqrt((this.eccentricity - 1.0) / (this.eccentricity + 1.0)) * Math.tan(trueAnomaly / 2.0));\n\t\t}\n\t}\n\n\t/**\n\t * Gets the inclination in radians.\n\t * @returns {number}\n\t */\n\tgetInclination() {\n\t\tconst h = Vector3.pool.get();\n\t\t// Get the angular momentum.\n\t\tthis.orbitOrientation.getAxis(h, 2);\n\t\t// Get the inclination as angle between angular momentum and z-axis.\n\t\tconst inclination = h.angle(Vector3.ZAxis);\n\t\tVector3.pool.release(h);\n\t\treturn inclination;\n\t}\n\n\t/**\n\t * Gets the longitude of the ascending node in radians.\n\t * @returns {number}\n\t */\n\tgetLongitudeOfAscendingNode() {\n\t\tconst h = Vector3.pool.get();\n\t\t// Get the angular momentum.\n\t\tthis.orbitOrientation.getAxis(h, 2);\n\t\t// Get the longitude of ascending node as perpendicular to the angular momentum projected onto the x-y plane.\n\t\tconst longitudeOfAscendingNode = Math.atan2(h.x, -h.y);\n\t\tVector3.pool.release(h);\n\t\treturn MathUtils.wrap(longitudeOfAscendingNode, 0, MathUtils.twoPi);\n\t}\n\n\t/**\n\t * Gets the argument of the periapsis in radians.\n\t * @returns {number}\n\t */\n\tgetArgumentOfPeriapsis() {\n\t\tconst h = Vector3.pool.get();\n\t\tconst e = Vector3.pool.get();\n\t\t// Get the angular momentum.\n\t\tthis.orbitOrientation.getAxis(h, 2);\n\t\t// Get the ascending node.\n\t\th.set(-h.y, h.x, 0);\n\t\t// Get the eccentricity vector.\n\t\tthis.orbitOrientation.getAxis(e, 0);\n\t\tconst argumentOfPeriapsis = h.angle(e);\n\t\tVector3.pool.release(e);\n\t\tVector3.pool.release(h);\n\t\treturn MathUtils.wrap(argumentOfPeriapsis, 0, MathUtils.twoPi);\n\t}\n\n\t/**\n\t * Gets the period in seconds.\n\t * @returns {number}\n\t */\n\tgetPeriod() {\n\t\treturn MathUtils.twoPi / this.meanAngularMotion;\n\t}\n\n\t/**\n\t * Gets the periapsis.\n\t * @returns {number}\n\t */\n\tgetPeriapsis() {\n\t\treturn this.semiMajorAxis * (1 - this.eccentricity);\n\t}\n\n\t/**\n\t * Gets the apoapsis.\n\t * @returns {number}\n\t */\n\tgetApoapsis() {\n\t\treturn this.semiMajorAxis * (1 + this.eccentricity);\n\t}\n\n\t/**\n\t * Given an inclination, longitude of ascending node, and argument of periapsis, all in radians,\n\t *   get the orbit orientation as a quaternion.\n\t * @param {number} inclination\n\t * @param {number} longitudeOfAscendingNode\n\t * @param {number} argumentOfPeriapsis\n\t */\n\tsetOrbitOrientationFromElements(inclination, longitudeOfAscendingNode, argumentOfPeriapsis) {\n\t\tconst n = Vector3.pool.get();\n\t\tconst h = Vector3.pool.get();\n\t\tconst periapsisRotation = Quaternion.pool.get();\n\t\tn.set(Math.cos(longitudeOfAscendingNode), Math.sin(longitudeOfAscendingNode), 0);\n\t\th.set(Math.sin(longitudeOfAscendingNode) * Math.sin(inclination), -Math.cos(longitudeOfAscendingNode) * Math.sin(inclination), Math.cos(inclination));\n\t\tthis.orbitOrientation.setFromAxes(n, undefined, h);\n\t\tperiapsisRotation.setFromAxisAngle(h, argumentOfPeriapsis);\n\t\tthis.orbitOrientation.mult(periapsisRotation, this.orbitOrientation);\n\t\tQuaternion.pool.release(periapsisRotation);\n\t\tVector3.pool.release(h);\n\t\tVector3.pool.release(n);\n\t}\n\n\t/**\n\t * Sets orbital elements from a position, velocity, time, and a gravitational constant GM.\n\t * @param {Vector3} position\n\t * @param {Vector3} velocity\n\t * @param {number} time\n\t * @param {number} gm\n\t */\n\tsetFromPositionAndVelocity(position, velocity, time, gm) {\n\t\tconst gmInv = 1 / gm;\n\n\t\t// Set the epoch.\n\t\tthis.epoch = time;\n\n\t\t// Get the specific angular momentum.\n\t\tconst specificAngularMomentum = Vector3.pool.get();\n\t\tspecificAngularMomentum.cross(position, velocity);\n\n\t\t// Get the eccentricity vector and eccentricity.\n\t\tconst eccentricityVec = Vector3.pool.get();\n\t\tconst positionNormalized = Vector3.pool.get();\n\t\tpositionNormalized.normalize(position);\n\t\teccentricityVec.cross(velocity, specificAngularMomentum);\n\t\teccentricityVec.mult(eccentricityVec, gmInv);\n\t\teccentricityVec.sub(eccentricityVec, positionNormalized);\n\t\tthis.eccentricity = eccentricityVec.magnitude();\n\n\t\t// The semi-major axis.\n\t\tconst semiLatusRectum = specificAngularMomentum.dot(specificAngularMomentum) * gmInv;\n\t\tthis.semiMajorAxis = semiLatusRectum / (1 - this.eccentricity * this.eccentricity);\n\t\tif (this.eccentricity > 1) {\n\t\t\tthis.semiMajorAxis *= -1;\n\t\t}\n\n\t\t// The true anomaly.\n\t\tlet trueAnomaly = Math.acos(MathUtils.clamp(eccentricityVec.dot(positionNormalized) / this.eccentricity, -1, 1));\n\t\tif (position.dot(velocity) < 0) {\n\t\t\ttrueAnomaly *= -1;\n\t\t}\n\t\tif (trueAnomaly < -Math.PI) {\n\t\t\ttrueAnomaly += MathUtils.twoPi;\n\t\t}\n\t\tif (trueAnomaly >= Math.PI) {\n\t\t\ttrueAnomaly -= MathUtils.twoPi;\n\t\t}\n\n\t\t// The orbit orientation quaternion.\n\t\teccentricityVec.normalize(eccentricityVec);\n\t\tspecificAngularMomentum.normalize(specificAngularMomentum);\n\t\tthis.orbitOrientation.setFromAxes(eccentricityVec, undefined, specificAngularMomentum);\n\t\tVector3.pool.release(positionNormalized);\n\t\tVector3.pool.release(specificAngularMomentum);\n\t\tVector3.pool.release(eccentricityVec);\n\n\t\t// The eccentric anomaly, mean anomaly, and mean angular motion from the true anomaly, for either ellipses or hyperbolas.\n\t\tconst eccentricAnomaly = this.getEccentricAnomalyFromTrueAnomaly(trueAnomaly);\n\t\tthis.meanAnomalyAtEpoch = this.getMeanAnomalyFromEccentricAnomaly(eccentricAnomaly);\n\t\tthis.meanAngularMotion = Math.sqrt(gm / (this.semiMajorAxis * this.semiMajorAxis * this.semiMajorAxis));\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFastIterable\n} from '../internal';\n\n/**\n * A pool for generic objects. Great for minimizing garbage collection. For every get call you must call release.\n * @template Type\n * @extends FastIterable<Type>\n */\nexport class Pool extends FastIterable {\n\t/**\n\t * @typedef PoolData\n\t * @property {number} _poolIndex - The index in the pool.\n\t * @property {boolean} _poolUsed - If true, the item is in the pool.\n\t */\n\n\t/**\n\t * @typedef {PoolData & Type} PoolItem\n\t */\n\n\t/**\n\t * The constructor.\n\t * @param {new () => Type} type - The class that will be instantiated when a new object needs to be allocated. It must be default constructable.\n\t */\n\tconstructor(type) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The class type for when new objects are needed.\n\t\t * @type {new () => Type}\n\t\t * @private\n\t\t */\n\t\tthis._type = type;\n\n\t\t/**\n\t\t * List of objects, free and used.\n\t\t * @type {Array<PoolItem>}\n\t\t * @private\n\t\t */\n\t\tthis._objects = [];\n\n\t\t/**\n\t\t * List of which objects are free in the objects list. It acts like a stack of indices into the objects list.\n\t\t * @type {number[]}\n\t\t * @private\n\t\t */\n\t\tthis._free = [];\n\n\t\t/**\n\t\t * Since the free list only grows, this says how long the array is.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._freeLength = 0;\n\n\t\t/**\n\t\t * A constructor function that is called when a new object needs to be created.\n\t\t * @type {function():Type}\n\t\t * @private\n\t\t */\n\t\tthis._constructorFunction = () => {\n\t\t\treturn new this._type();\n\t\t};\n\n\t\t/**\n\t\t * A destructor function that is called when an object needs to be destroyed.\n\t\t * @type {() => void}\n\t\t * @private\n\t\t */\n\t\tthis._destructorFunction = () => {\n\t\t};\n\t}\n\n\t/**\n\t * Sets a constructor function that is called when a new object needs to be created.\n\t * @param {() => Type} constructorFunction\n\t */\n\tsetConstructorFunction(constructorFunction) {\n\t\tthis._constructorFunction = constructorFunction;\n\t}\n\n\t/**\n\t * Sets a destructor function that is called when an object needs to be destroyed.\n\t * @param {() => void} destructorFunction\n\t */\n\tsetDestructorFunction(destructorFunction) {\n\t\tthis._destructorFunction = destructorFunction;\n\t}\n\n\t/**\n\t * Gets an object from the pool.\n\t * @returns {Type}\n\t */\n\tget() {\n\t\t/** @type {PoolItem} */\n\t\tlet objectToGet = null;\n\t\tif (this._freeLength > 0) {\n\t\t\tobjectToGet = this._objects[this._free[this._freeLength - 1]];\n\t\t\tthis._freeLength -= 1;\n\t\t}\n\t\telse {\n\t\t\t// @ts-ignore - Ignoring conversion from Type to PoolItem.\n\t\t\tconst poolIndex = this._objects.push(this._constructorFunction()) - 1;\n\t\t\tthis._objects[poolIndex]._poolIndex = poolIndex;\n\t\t\tobjectToGet = this._objects[poolIndex];\n\t\t}\n\t\tobjectToGet._poolUsed = true;\n\t\t// @ts-ignore - Ignoring conversion from PoolItem to Type.\n\t\treturn objectToGet;\n\t}\n\n\t/**\n\t * Releases an object back into the pool.\n\t * @param {Type} o - The object to release.\n\t */\n\trelease(o) {\n\t\t/** @type {PoolItem} */\n\t\t// @ts-ignore - Ignoring conversion from Type to PoolItem.\n\t\tconst poolItem = o;\n\t\tif (poolItem._poolIndex !== undefined) {\n\t\t\tif (this._freeLength >= this._free.length) {\n\t\t\t\tthis._free.push(poolItem._poolIndex);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._free[this._freeLength] = poolItem._poolIndex;\n\t\t\t}\n\t\t\tthis._freeLength += 1;\n\t\t\tpoolItem._poolUsed = false;\n\t\t}\n\t}\n\n\t/**\n\t * Cleans up memory, removing all unused objects. If the threshold is a number and is greater or equal than the number of used / total,\n\t * it will be cleaned.\n\t * @param {number} [threshold]\n\t */\n\tclean(threshold) {\n\t\tif (threshold === undefined || threshold >= (this._objects.length - this._freeLength) / this._objects.length) {\n\t\t\tfor (let freeI = 0; freeI < this._freeLength; freeI++) {\n\t\t\t\tconst indexToRemove = this._free[freeI];\n\t\t\t\t// @ts-ignore - Ignoring conversion from PoolItem to Type.\n\t\t\t\tthis._destructorFunction(this._objects[indexToRemove]);\n\t\t\t\tthis._objects.splice(indexToRemove, 1);\n\t\t\t\tfor (let i = indexToRemove, l = this._objects.length; i < l; i++) {\n\t\t\t\t\tthis._objects[i]._poolIndex -= 1;\n\t\t\t\t}\n\t\t\t\tfor (let i = freeI + 1, l = this._freeLength; i < l; i++) {\n\t\t\t\t\tif (this._free[i] > indexToRemove) {\n\t\t\t\t\t\tthis._free[i] -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._free = [];\n\t\t\tthis._freeLength = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the whole pool as an array.\n\t * @returns {Type[]}\n\t */\n\tgetAsArray() {\n\t\t// @ts-ignore - Ignoring conversion from PoolItem to Type.\n\t\treturn this._objects;\n\t}\n\n\t/**\n\t * Returns true if the object is in the pool and used.\n\t * @param {any} o\n\t * @returns {boolean}\n\t */\n\tisUsed(o) {\n\t\treturn o._poolUsed;\n\t}\n\n\t/**\n\t * Returns true if there are any objects used. This is good for debugging to see if there are any get calls without release calls.\n\t * @returns {boolean}\n\t */\n\tareAnyUsed() {\n\t\treturn this._freeLength < this._objects.length;\n\t}\n\n\t/**\n\t * Gets the value of the given index.\n\t * @param {number} index\n\t * @returns {Type}\n\t * @override\n\t */\n\tgetAt(index) {\n\t\treturn this._objects[index];\n\t}\n\n\t/**\n\t * Gets the number of values.\n\t * @returns {number}\n\t * @override\n\t */\n\tget size() {\n\t\treturn this._objects.length;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tPool,\n\tTHREE,\n\tVector3\n} from '../internal';\n\n/** A mathematical quaternion */\nexport class Quaternion extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<Quaternion>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * NaN quaternion\n\t * @returns {Quaternion}\n\t */\n\tstatic get NaN() {\n\t\treturn _nan;\n\t}\n\n\t/**\n\t * Returns the identity quaternion.\n\t * @returns {Quaternion}\n\t */\n\tstatic get Identity() {\n\t\treturn _identity;\n\t}\n\n\t/**\n\t * Returns a quaternion from the angle-axis rotation.\n\t * @param {Vector3} axis - must be normalized\n\t * @param {number} angle - in radians\n\t * @returns {Quaternion}\n\t */\n\tstatic fromAxisAngle(axis, angle) {\n\t\tconst q = new Quaternion();\n\t\tq.setFromAxisAngle(axis, angle);\n\t\treturn q;\n\t}\n\n\t/**\n\t * Returns a quaternion representing a rotate frame from the given at least two axes, the other being undefined. The given axes must be orthonormal.\n\t * @param {Vector3|undefined} xAxis\n\t * @param {Vector3|undefined} yAxis\n\t * @param {Vector3|undefined} zAxis\n\t * @returns {Quaternion}\n\t */\n\tstatic fromAxes(xAxis, yAxis, zAxis) {\n\t\tconst q = new Quaternion();\n\t\tq.setFromAxes(xAxis, yAxis, zAxis);\n\t\treturn q;\n\t}\n\n\t/**\n\t * Returns a quaternion from Euler angles.\n\t * @param {number} pitch - the angle around the +x axis to rotate\n\t * @param {number} roll - the angle around the +y axis to rotate\n\t * @param {number} yaw - the angle around the +z axis to rotate\n\t * @returns {Quaternion}\n\t */\n\tstatic fromEuler(pitch, roll, yaw) {\n\t\tconst q = new Quaternion();\n\t\tq.setFromEuler(pitch, roll, yaw);\n\t\treturn q;\n\t}\n\n\t/**\n\t * Returns a quaternion rotation that would rotate the fromVector to the toVector. The two vectors must be normalized.\n\t * @param {Vector3} fromVector\n\t * @param {Vector3} toVector\n\t * @returns {Quaternion}\n\t */\n\tstatic fromVectorFromTo(fromVector, toVector) {\n\t\tconst q = new Quaternion();\n\t\tq.setFromVectorFromTo(fromVector, toVector);\n\t\treturn q;\n\t}\n\n\t/**\n\t * Returns a quaternion rotation with the given z axis, and arbitrary x and y axes.\n\t * @param {Vector3} axis - the axis to set\n\t * @param {number} which - the index of the axis in the quaternion: 0 for x, 1 for y, 2 for z\n\t * @returns {Quaternion}\n\t */\n\tstatic fromFromAxis(axis, which) {\n\t\tconst q = new Quaternion();\n\t\tq.setFromAxis(axis, which);\n\t\treturn q;\n\t}\n\n\t/**\n\t * Constructor. Defaults to identity.\n\t * @param {number} w\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} z\n\t */\n\tconstructor(w = 1, x = 0, y = 0, z = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._w = w;\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._x = x;\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._y = y;\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Gets the w component.\n\t * @returns {number}\n\t */\n\tget w() {\n\t\treturn this._w;\n\t}\n\n\t/**\n\t * Sets the w component.\n\t * @param {number} w\n\t */\n\tset w(w) {\n\t\tthis.throwIfFrozen();\n\t\tthis._w = w;\n\t}\n\n\t/**\n\t * Gets the x component.\n\t * @returns {number}\n\t */\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * Sets the x component.\n\t * @param {number} x\n\t */\n\tset x(x) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = x;\n\t}\n\n\t/**\n\t * Gets the y component.\n\t * @returns {number}\n\t */\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\t/**\n\t * Sets the y component.\n\t * @param {number} y\n\t */\n\tset y(y) {\n\t\tthis.throwIfFrozen();\n\t\tthis._y = y;\n\t}\n\n\t/**\n\t * Gets the z component.\n\t * @returns {number}\n\t */\n\tget z() {\n\t\treturn this._z;\n\t}\n\n\t/**\n\t * Sets the z component.\n\t * @param {number} z\n\t */\n\tset z(z) {\n\t\tthis.throwIfFrozen();\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Gets the rotation angle.\n\t * @returns {number}\n\t */\n\tgetAngle() {\n\t\treturn Math.acos(this._w) * 2.0;\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {Quaternion} a - the source quaternion\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._w = a._w;\n\t\tthis._x = a._x;\n\t\tthis._y = a._y;\n\t\tthis._z = a._z;\n\t}\n\n\t/**\n\t * Sets this to a as a ThreeJs quaternion.\n\t * @param {THREE.Quaternion} a\n\t */\n\tcopyFromThreeJs(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._w = a.w;\n\t\tthis._x = a.x;\n\t\tthis._y = a.y;\n\t\tthis._z = a.z;\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t * @param {number} w\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} z\n\t */\n\tset(w, x, y, z) {\n\t\tthis.throwIfFrozen();\n\t\tthis._w = w;\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Sets this to the angle-axis rotation.\n\t * @param {Vector3} axis - must be normalized\n\t * @param {number} angle - in radians\n\t */\n\tsetFromAxisAngle(axis, angle) {\n\t\tthis.throwIfFrozen();\n\t\tconst sinHalfAngle = Math.sin(angle / 2.0);\n\t\tthis._w = Math.cos(angle / 2.0);\n\t\tthis._x = sinHalfAngle * axis.x;\n\t\tthis._y = sinHalfAngle * axis.y;\n\t\tthis._z = sinHalfAngle * axis.z;\n\t}\n\n\t/**\n\t * Sets this to a quaternion representing a rotate frame from the given at least two axes, the other being undefined. The given axes must be orthonormal.\n\t * @param {Vector3|undefined} xAxis\n\t * @param {Vector3|undefined} yAxis\n\t * @param {Vector3|undefined} zAxis\n\t */\n\tsetFromAxes(xAxis, yAxis, zAxis) {\n\t\tthis.throwIfFrozen();\n\t\tlet missingAxis;\n\t\tif (xAxis === undefined) {\n\t\t\txAxis = Vector3.pool.get();\n\t\t\tmissingAxis = xAxis;\n\t\t\txAxis.cross(yAxis, zAxis);\n\t\t}\n\t\telse if (yAxis === undefined) {\n\t\t\tyAxis = Vector3.pool.get();\n\t\t\tmissingAxis = yAxis;\n\t\t\tyAxis.cross(zAxis, xAxis);\n\t\t}\n\t\telse if (zAxis === undefined) {\n\t\t\tzAxis = Vector3.pool.get();\n\t\t\tmissingAxis = zAxis;\n\t\t\tzAxis.cross(xAxis, yAxis);\n\t\t}\n\t\tconst tr = xAxis.x + yAxis.y + zAxis.z;\n\t\tif (tr > 0) {\n\t\t\tconst S = Math.sqrt(tr + 1.0) * 2; // S = 4 * this._w\n\t\t\tthis._w = 0.25 * S;\n\t\t\tthis._x = (yAxis.z - zAxis.y) / S;\n\t\t\tthis._y = (zAxis.x - xAxis.z) / S;\n\t\t\tthis._z = (xAxis.y - yAxis.x) / S;\n\t\t}\n\t\telse if ((xAxis.x > yAxis.y) && (xAxis.x > zAxis.z)) {\n\t\t\tconst S = Math.sqrt(1.0 + xAxis.x - yAxis.y - zAxis.z) * 2; // S = 4 * this._x\n\t\t\tthis._w = (yAxis.z - zAxis.y) / S;\n\t\t\tthis._x = 0.25 * S;\n\t\t\tthis._y = (yAxis.x + xAxis.y) / S;\n\t\t\tthis._z = (zAxis.x + xAxis.z) / S;\n\t\t}\n\t\telse if (yAxis.y > zAxis.z) {\n\t\t\tconst S = Math.sqrt(1.0 + yAxis.y - zAxis.z - xAxis.x) * 2; // S = 4 * this._y\n\t\t\tthis._w = (zAxis.x - xAxis.z) / S;\n\t\t\tthis._x = (yAxis.x + xAxis.y) / S;\n\t\t\tthis._y = 0.25 * S;\n\t\t\tthis._z = (zAxis.y + yAxis.z) / S;\n\t\t}\n\t\telse {\n\t\t\tconst S = Math.sqrt(1.0 + zAxis.z - xAxis.x - yAxis.y) * 2; // S = 4 * this._z\n\t\t\tthis._w = (xAxis.y - yAxis.x) / S;\n\t\t\tthis._x = (zAxis.x + xAxis.z) / S;\n\t\t\tthis._y = (zAxis.y + yAxis.z) / S;\n\t\t\tthis._z = 0.25 * S;\n\t\t}\n\t\tVector3.pool.release(missingAxis);\n\t}\n\n\t/**\n\t * Sets this to the euler angles. Use right-hand rule for rotation directions.\n\t * @param {number} pitch - the angle around the +x axis to rotate\n\t * @param {number} roll - the angle around the +y axis to rotate\n\t * @param {number} yaw - the angle around the +z axis to rotate\n\t */\n\tsetFromEuler(pitch, roll, yaw) {\n\t\tthis.throwIfFrozen();\n\t\tconst halfX = pitch * 0.5;\n\t\tconst halfY = roll * 0.5;\n\t\tconst halfZ = yaw * 0.5;\n\t\tconst cosHalfX = Math.cos(halfX);\n\t\tconst sinHalfX = Math.sin(halfX);\n\t\tconst cosHalfY = Math.cos(halfY);\n\t\tconst sinHalfY = Math.sin(halfY);\n\t\tconst cosHalfZ = Math.cos(halfZ);\n\t\tconst sinHalfZ = Math.sin(halfZ);\n\t\tthis._w = cosHalfX * cosHalfY * cosHalfZ + sinHalfX * sinHalfY * sinHalfZ;\n\t\tthis._x = sinHalfX * cosHalfY * cosHalfZ - cosHalfX * sinHalfY * sinHalfZ;\n\t\tthis._y = cosHalfX * sinHalfY * cosHalfZ + sinHalfX * cosHalfY * sinHalfZ;\n\t\tthis._z = cosHalfX * cosHalfY * sinHalfZ - sinHalfX * sinHalfY * cosHalfZ;\n\t}\n\n\t/**\n\t * Sets this to the quaternion rotation that would rotate the fromVector to the toVector. The two vectors must be normalized.\n\t * @param {Vector3} fromVector\n\t * @param {Vector3} toVector\n\t */\n\tsetFromVectorFromTo(fromVector, toVector) {\n\t\tconst axis = Vector3.pool.get();\n\t\tconst dot = fromVector.dot(toVector);\n\t\tif (dot >= 1.0) {\n\t\t\tthis.set(1, 0, 0, 0);\n\t\t}\n\t\telse if (dot <= -1.0) {\n\t\t\tthis.set(0, 1, 0, 0);\n\t\t}\n\t\telse {\n\t\t\taxis.cross(fromVector, toVector);\n\t\t\taxis.normalize(axis);\n\t\t\tconst angle = Math.acos(dot);\n\t\t\tthis.setFromAxisAngle(axis, angle);\n\t\t}\n\t\tVector3.pool.release(axis);\n\t}\n\n\t/**\n\t * Sets this to a quaternion rotation with the given z axis, and arbitrary x and y axes.\n\t * @param {Vector3} axis - the axis to set\n\t * @param {number} which - the index of the axis in the quaternion: 0 for x, 1 for y, 2 for z\n\t */\n\tsetFromAxis(axis, which) {\n\t\tconst axis0 = Vector3.pool.get();\n\t\tconst axis1 = Vector3.pool.get();\n\t\taxis0.normalize(axis);\n\t\taxis1.cross(axis0, Vector3.XAxis);\n\t\tif (axis1.isZero()) {\n\t\t\taxis1.cross(axis0, Vector3.YAxis);\n\t\t}\n\t\taxis1.normalize(axis1);\n\t\tif (which === 0) {\n\t\t\tthis.setFromAxes(axis0, axis1, undefined);\n\t\t}\n\t\telse if (which === 1) {\n\t\t\tthis.setFromAxes(undefined, axis0, axis1);\n\t\t}\n\t\telse if (which === 2) {\n\t\t\tthis.setFromAxes(axis1, undefined, axis0);\n\t\t}\n\t\tVector3.pool.release(axis0);\n\t\tVector3.pool.release(axis1);\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn '[' + this._w + ', ' + this._x + ', ' + this._y + ', ' + this._z + ']';\n\t}\n\n\t/**\n\t * Returns true if the quaternion is NaN (just checks w component).\n\t * @returns {boolean}\n\t */\n\tisNaN() {\n\t\treturn (!(this._w <= 0) && !(this._w > 0));\n\t}\n\n\t/**\n\t * Returns the magnitude of the quaternion. It should be 1 if you're using it right.\n\t * @returns {number}\n\t */\n\tmagnitude() {\n\t\treturn Math.sqrt(this._w * this._w + this._x * this._x + this._y * this._y + this._z * this._z);\n\t}\n\n\t/**\n\t * Sets this to a with a magnitude of 1.0.\n\t * @param {Quaternion} a\n\t */\n\tnormalize(a) {\n\t\tthis.throwIfFrozen();\n\t\tconst magnitude = a.magnitude();\n\t\tif (magnitude > 0) {\n\t\t\tthis._w = a._w / magnitude;\n\t\t\tthis._x = a._x / magnitude;\n\t\t\tthis._y = a._y / magnitude;\n\t\t\tthis._z = a._z / magnitude;\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to the inverse of quaternion a.\n\t * @param {Quaternion} a\n\t */\n\tinverse(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._w = a._w;\n\t\tthis._x = -a._x;\n\t\tthis._y = -a._y;\n\t\tthis._z = -a._z;\n\t}\n\n\t/**\n\t * Sets this to quaternion a * quaternion b.\n\t * @param {Quaternion} a\n\t * @param {Quaternion} b\n\t */\n\tmult(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst r = Quaternion.pool.get();\n\t\tr._w = a._w * b._w - a._x * b._x - a._y * b._y - a._z * b._z;\n\t\tr._x = a._w * b._x + a._x * b._w + a._y * b._z - a._z * b._y;\n\t\tr._y = a._w * b._y - a._x * b._z + a._y * b._w + a._z * b._x;\n\t\tr._z = a._w * b._z + a._x * b._y - a._y * b._x + a._z * b._w;\n\t\tthis.copy(r);\n\t\tQuaternion.pool.release(r);\n\t}\n\n\t/**\n\t * Sets this to (the inverse of quaternion a) * quaternion b.\n\t * @param {Quaternion} a\n\t * @param {Quaternion} b\n\t */\n\tmultInverseL(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst r = Quaternion.pool.get();\n\t\tr._w = a._w * b._w + a._x * b._x + a._y * b._y + a._z * b._z;\n\t\tr._x = a._w * b._x - a._x * b._w - a._y * b._z + a._z * b._y;\n\t\tr._y = a._w * b._y + a._x * b._z - a._y * b._w - a._z * b._x;\n\t\tr._z = a._w * b._z - a._x * b._y + a._y * b._x - a._z * b._w;\n\t\tthis.copy(r);\n\t\tQuaternion.pool.release(r);\n\t}\n\n\t/**\n\t * Sets this to quaternion a * (the inverse of quaternion b).\n\t * @param {Quaternion} a\n\t * @param {Quaternion} b\n\t */\n\tmultInverseR(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst r = Quaternion.pool.get();\n\t\tr._w = +a._w * b._w + a._x * b._x + a._y * b._y + a._z * b._z;\n\t\tr._x = -a._w * b._x + a._x * b._w - a._y * b._z + a._z * b._y;\n\t\tr._y = -a._w * b._y + a._x * b._z + a._y * b._w - a._z * b._x;\n\t\tr._z = -a._w * b._z - a._x * b._y + a._y * b._x + a._z * b._w;\n\t\tthis.copy(r);\n\t\tQuaternion.pool.release(r);\n\t}\n\n\t/**\n\t * Sets this to quaternion a, with its rotation angle multiplied by b.\n\t * @param {Quaternion} a\n\t * @param {number} b\n\t */\n\tscaleAngle(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst halfAngle = Math.acos(a._w);\n\t\tconst sinHalfAngle = Math.sin(halfAngle);\n\t\tif (sinHalfAngle === 0) {\n\t\t\tthis.copy(a);\n\t\t\treturn;\n\t\t}\n\t\tconst sinHalfAngleB = Math.sin(halfAngle * b);\n\t\tthis._w = Math.cos(halfAngle * b);\n\t\tthis._x = a._x / sinHalfAngle * sinHalfAngleB;\n\t\tthis._y = a._y / sinHalfAngle * sinHalfAngleB;\n\t\tthis._z = a._z / sinHalfAngle * sinHalfAngleB;\n\t}\n\n\t/**\n\t * Returns the angle in radians between this and quaternion a.\n\t * @param {Quaternion} a\n\t * @returns {number}\n\t */\n\tangle(a) {\n\t\treturn Math.acos(this._w * a._w + this._x * a._x + this._y * a._y + this._z * a._z) * 2.0;\n\t}\n\n\t/**\n\t * Sets this to be spherically interpolated between a and b by the factor u. The parameter u is not clamped.\n\t * @param {Quaternion} a - the quaternion when u = 0\n\t * @param {Quaternion} b - the quaternion when u = 1\n\t * @param {number} u - the lerp parameter\n\t */\n\tslerp(a, b, u) {\n\t\tthis.throwIfFrozen();\n\t\tlet dot = a._w * b._w + a._x * b._x + a._y * b._y + a._z * b._z;\n\t\tlet f = 1;\n\t\tif (dot < 0.0) {\n\t\t\tf = -1;\n\t\t\tdot = -dot;\n\t\t}\n\t\tif (dot <= 0.9995) {\n\t\t\tconst angle = Math.acos(dot);\n\t\t\tconst A = f * Math.sin((1.0 - u) * angle) / Math.sin(angle);\n\t\t\tconst B = Math.sin(u * angle) / Math.sin(angle);\n\t\t\tthis._w = A * a._w + B * b._w;\n\t\t\tthis._x = A * a._x + B * b._x;\n\t\t\tthis._y = A * a._y + B * b._y;\n\t\t\tthis._z = A * a._z + B * b._z;\n\t\t}\n\t\telse { // too small, so lerp\n\t\t\tconst A = f * (1.0 - u);\n\t\t\tconst B = u;\n\t\t\tthis._w = A * a._w + B * b._w;\n\t\t\tthis._x = A * a._x + B * b._x;\n\t\t\tthis._y = A * a._y + B * b._y;\n\t\t\tthis._z = A * a._z + B * b._z;\n\t\t\tthis.normalize(this);\n\t\t}\n\t}\n\n\t/**\n\t * Sets Vector3 outAxis to an axis (x = 0, y = 1, z = 2) of the quaternion. If the axis is undefined, it returns the axis of rotation.\n\t * @param {Vector3} outAxis\n\t * @param {number} axis\n\t */\n\tgetAxis(outAxis, axis) {\n\t\tif (axis === undefined) {\n\t\t\toutAxis.set(this._x, this._y, this._z);\n\t\t\toutAxis.normalize(outAxis);\n\t\t}\n\t\telse if (axis === 0) {\n\t\t\toutAxis.x = this._w * this._w + this._x * this._x - this._y * this._y - this._z * this._z;\n\t\t\toutAxis.y = 2.0 * this._w * this._z + 2.0 * this._x * this._y;\n\t\t\toutAxis.z = 2.0 * this._x * this._z - 2.0 * this._w * this._y;\n\t\t}\n\t\telse if (axis === 1) {\n\t\t\toutAxis.x = 2.0 * this._y * this._x - 2.0 * this._w * this._z;\n\t\t\toutAxis.y = this._w * this._w - this._x * this._x + this._y * this._y - this._z * this._z;\n\t\t\toutAxis.z = 2.0 * this._x * this._w + 2.0 * this._y * this._z;\n\t\t}\n\t\telse if (axis === 2) {\n\t\t\toutAxis.x = 2.0 * this._y * this._w + 2.0 * this._z * this._x;\n\t\t\toutAxis.y = 2.0 * this._z * this._y - 2.0 * this._w * this._x;\n\t\t\toutAxis.z = this._w * this._w - this._x * this._x - this._y * this._y + this._z * this._z;\n\t\t}\n\t}\n}\n\n/**\n * @type {Pool<Quaternion>}\n */\nconst _pool = new Pool(Quaternion);\n\nconst _identity = new Quaternion();\n_identity.freeze();\n\nconst _nan = new Quaternion(Number.NaN, Number.NaN, Number.NaN, Number.NaN);\n_nan.freeze();\n","/** @module pioneer */\n\n/**\n * A binary data reader.\n */\nexport class Reader {\n\t/**\n\t * Constructor.\n\t * @param {ArrayBuffer | SharedArrayBuffer} data\n\t */\n\tconstructor(data) {\n\t\tthis._dataView = new DataView(data);\n\t\tthis._offset = 0;\n\t}\n\n\t/**\n\t * Returns true if the offset is at the end of the data.\n\t * @returns {boolean}\n\t */\n\tisAtEnd() {\n\t\treturn this._offset >= this._dataView.byteLength;\n\t}\n\n\t/**\n\t * Reads an 8-bit unsigned integer.\n\t * @returns {number}\n\t */\n\treadByte() {\n\t\tconst result = this._dataView.getUint8(this._offset);\n\t\tthis._offset += 1;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Reads a 32-bit floating-point number.\n\t * @returns {number}\n\t */\n\treadFloat32() {\n\t\tconst result = this._dataView.getFloat32(this._offset, true);\n\t\tthis._offset += 4;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Reads a 64-bit floating-point number.\n\t * @returns {number}\n\t */\n\treadFloat64() {\n\t\tconst result = this._dataView.getFloat64(this._offset, true);\n\t\tthis._offset += 8;\n\t\treturn result;\n\t}\n\n\t/**\n\t* Reads a 8-bit unsigned integer.\n\t* @returns {number}\n\t*/\n\treadUInt8() {\n\t\tconst result = this._dataView.getUint8(this._offset);\n\t\tthis._offset += 1;\n\t\treturn result;\n\t}\n\n\t/**\n\t* Reads a 16-bit unsigned integer.\n\t* @returns {number}\n\t*/\n\treadUInt16() {\n\t\tconst result = this._dataView.getUint16(this._offset, true);\n\t\tthis._offset += 2;\n\t\treturn result;\n\t}\n\n\t/**\n\t* Reads a 32-bit unsigned integer.\n\t* @returns {number}\n\t*/\n\treadUInt32() {\n\t\tconst result = this._dataView.getUint32(this._offset, true);\n\t\tthis._offset += 4;\n\t\treturn result;\n\t}\n\n\t/**\n\t* Reads a 64-bit unsigned integer.\n\t* @returns {number}\n\t*/\n\treadUInt64() {\n\t\tconst result = Number(this._dataView.getBigUint64(this._offset, true));\n\t\tthis._offset += 8;\n\t\treturn Number.isSafeInteger(result) ? result : NaN;\n\t}\n\n\t/**\n\t* Reads a 8-bit integer.\n\t* @returns {number}\n\t*/\n\treadInt8() {\n\t\tconst result = this._dataView.getInt8(this._offset);\n\t\tthis._offset += 1;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Reads a 16-bit integer.\n\t * @returns {number}\n\t */\n\treadInt16() {\n\t\tconst result = this._dataView.getInt16(this._offset, true);\n\t\tthis._offset += 2;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Reads a 32-bit integer.\n\t * @returns {number}\n\t */\n\treadInt32() {\n\t\tconst result = this._dataView.getInt32(this._offset, true);\n\t\tthis._offset += 4;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Reads a 64-bit integer.\n\t * @returns {number}\n\t */\n\treadInt64() {\n\t\tconst result = Number(this._dataView.getBigInt64(this._offset, true));\n\t\tthis._offset += 8;\n\t\treturn Number.isSafeInteger(result) ? result : NaN;\n\t}\n\n\t/**\n\t * Reads a single line of text, ending with '\\n'.\n\t * @returns {string}\n\t */\n\treadLine() {\n\t\tconst byteArray = [];\n\t\twhile (true) {\n\t\t\tconst byte = this.readByte();\n\t\t\tconst byteAsString = String.fromCharCode(byte);\n\t\t\tif (byteAsString === '\\r') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (byteAsString === '\\n') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbyteArray.push(byte);\n\t\t}\n\t\tif (typeof TextEncoder !== 'undefined') {\n\t\t\tconst utf8Decoder = new TextDecoder();\n\t\t\tconst array = new Uint8Array(byteArray);\n\t\t\treturn utf8Decoder.decode(array);\n\t\t}\n\t\telse {\n\t\t\treturn this._utf8ArrayToStr(byteArray);\n\t\t}\n\t}\n\n\t/**\n\t * Reads a null terminated UTF-8 string or a given number of bytes as a string.\n\t * @param {number} [numBytes]\n\t * @returns {string}\n\t */\n\treadString(numBytes) {\n\t\tconst byteArray = [];\n\t\twhile (true) {\n\t\t\tconst byte = this.readByte();\n\t\t\tif (numBytes === undefined && byte === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbyteArray.push(byte);\n\t\t\tif (numBytes !== undefined && byteArray.length === numBytes) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (typeof TextEncoder !== 'undefined') {\n\t\t\tconst utf8Decoder = new TextDecoder();\n\t\t\tconst array = new Uint8Array(byteArray);\n\t\t\treturn utf8Decoder.decode(array);\n\t\t}\n\t\telse {\n\t\t\treturn this._utf8ArrayToStr(byteArray);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a UTF-8 array to a string. Taken, verified, and formatted from https://stackoverflow.com/a/59339612.\n\t * @param {number[]} byteArray\n\t * @returns {string}\n\t */\n\t_utf8ArrayToStr(byteArray) {\n\t\tlet c0 = 0;\n\t\tlet c1 = 0;\n\t\tlet c2 = 0;\n\t\tlet c3 = 0;\n\t\tlet out = '';\n\t\tlet i = 0;\n\t\tconst len = byteArray.length;\n\t\twhile (i < len) {\n\t\t\tc0 = byteArray[i];\n\t\t\ti += 1;\n\t\t\tswitch (c0 >> 4) {\n\t\t\t\tcase 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n\t\t\t\t\t// 0xxxxxxx\n\t\t\t\t\tout += String.fromCharCode(c0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12: case 13:\n\t\t\t\t\t// 110xxxxx 10xxxxxx\n\t\t\t\t\tc1 = byteArray[i] | 0;\n\t\t\t\t\ti += 1;\n\t\t\t\t\tout += String.fromCharCode(((c0 & 0x1F) << 6) | (c1 & 0x3F));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 14:\n\t\t\t\t\t// 1110xxxx 10xxxxxx 10xxxxxx\n\t\t\t\t\tc1 = byteArray[i] | 0;\n\t\t\t\t\ti += 1;\n\t\t\t\t\tc2 = byteArray[i] | 0;\n\t\t\t\t\ti += 1;\n\t\t\t\t\tout += String.fromCharCode(((c0 & 0x0F) << 12)\n\t\t\t\t\t\t| ((c1 & 0x3F) << 6)\n\t\t\t\t\t\t| ((c2 & 0x3F) << 0));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 15:\n\t\t\t\t\t// 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\t\t\t\t\tc1 = byteArray[i] | 0;\n\t\t\t\t\ti += 1;\n\t\t\t\t\tc2 = byteArray[i] | 0;\n\t\t\t\t\ti += 1;\n\t\t\t\t\tc3 = byteArray[i] | 0;\n\t\t\t\t\ti += 1;\n\t\t\t\t\tout += String.fromCharCode(((c0 & 0x07) << 18)\n\t\t\t\t\t\t| ((c1 & 0x3F) << 12)\n\t\t\t\t\t\t| ((c2 & 0x3F) << 6)\n\t\t\t\t\t\t| ((c3 & 0x3F) << 0));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n}\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tPool,\n\tVector2\n} from '../internal';\n\n/** A class for handling an axis-aligned rectangle. */\nexport class Rect extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<Rect>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * Constructor.\n\t * @param {number} x - origin x\n\t * @param {number} y - origin y\n\t * @param {number} w - size x\n\t * @param {number} h - size y\n\t */\n\tconstructor(x = 0, y = 0, w = 0, h = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * origin\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._origin = new Vector2(x, y);\n\n\t\t/**\n\t\t * size\n\t\t * @type {Vector2}\n\t\t * @private\n\t\t */\n\t\tthis._size = new Vector2(w, h);\n\t}\n\n\t/**\n\t * Freezes the object.\n\t * @override\n\t */\n\tfreeze() {\n\t\tthis._origin.freeze();\n\t\tthis._size.freeze();\n\t}\n\n\t/**\n\t * Thaws (unfreezes) the object.\n\t * @override\n\t */\n\tthaw() {\n\t\tthis._origin.thaw();\n\t\tthis._size.thaw();\n\t}\n\n\t/**\n\t * Gets the origin.\n\t * @returns {Vector2}\n\t */\n\tget origin() {\n\t\treturn this._origin;\n\t}\n\n\t/**\n\t * Gets the size.\n\t * @returns {Vector2}\n\t */\n\tget size() {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn '[Origin: (' + this._origin.x + ', ' + this._origin.y + '), Size: (' + this._size.x + ', ' + this._size.y + ')]';\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {Rect} a\n\t */\n\tcopy(a) {\n\t\tthis._origin.copy(a._origin);\n\t\tthis._size.copy(a._size);\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t* @param {number} x - origin x\n\t* @param {number} y - origin y\n\t* @param {number} w - size x\n\t* @param {number} h - size y */\n\tset(x, y, w, h) {\n\t\tthis._origin.set(x, y);\n\t\tthis._size.set(w, h);\n\t}\n\n\t/**\n\t * Returns true if the position is within this.\n\t * @param {Vector2} position\n\t * @returns {boolean}\n\t */\n\tcontains(position) {\n\t\treturn this._origin.x <= position.x && position.x < this._origin.x + this._size.x && this._origin.y <= position.y && position.y < this._origin.y + this._size.y;\n\t}\n\n\t/**\n\t * Returns true if the rect intersects with this.\n\t * @param {Rect} rect\n\t * @returns {boolean}\n\t */\n\tintersects(rect) {\n\t\treturn this._origin.x + this._size.x > rect._origin.x && rect._origin.x + rect._size.x > this._origin.x\n\t\t\t&& this._origin.y + this._size.y > rect._origin.y && rect._origin.y + rect._size.y > this._origin.y;\n\t}\n}\n\n/**\n * @type {Pool<Rect>}\n */\nconst _pool = new Pool(Rect);\n","/** @module pioneer */\nimport * as THREE from 'three';\nimport {\n\tCapabilities\n} from '../internal';\n\nexport class ShaderFix {\n\t/**\n\t * Fixes up shader code.\n\t * Also converts shader code from GLSL 1 to 3, if WebGL is being used.\n\t * @param {THREE.RawShaderMaterial} rawShaderMaterial\n\t * */\n\tstatic fix(rawShaderMaterial) {\n\t\tconst webGL2 = Capabilities.isWebGL2();\n\t\tconst fragDepth = Capabilities.hasFragDepth();\n\t\tlet prependVertex = '';\n\t\tlet prependFragment = '';\n\t\tif (webGL2) {\n\t\t\tprependVertex += `\n\t\t\t\t#define attribute in\n\t\t\t\t#define varying out\n\t\t\t\t#define texture2D texture\n\t\t\t\tprecision highp float;\n\t\t\t\tprecision highp int;\n\t\t\t\t#define L_EXT_frag_depth true\n\t\t\t\t`;\n\t\t\tprependFragment += `\n\t\t\t\t#define varying in\n\t\t\t\tout highp vec4 pc_fragColor;\n\t\t\t\t#define gl_FragColor pc_fragColor\n\t\t\t\t#define gl_FragDepthEXT gl_FragDepth\n\t\t\t\t#define texture2D texture\n\t\t\t\t#define textureCube texture\n\t\t\t\t#define texture2DProj textureProj\n\t\t\t\t#define texture2DLodEXT textureLod\n\t\t\t\t#define texture2DProjLodEXT textureProjLod\n\t\t\t\t#define textureCubeLodEXT textureLod\n\t\t\t\t#define texture2DGradEXT textureGrad\n\t\t\t\t#define texture2DProjGradEXT textureProjGrad\n\t\t\t\t#define textureCubeGradEXT textureGrad\n\t\t\t\t#define L_EXT_frag_depth true\n\t\t\t\tprecision highp float;\n\t\t\t\tprecision highp int;\n\t\t\t\t`;\n\t\t\trawShaderMaterial.glslVersion = THREE.GLSL3;\n\t\t}\n\t\telse {\n\t\t\tif (fragDepth) {\n\t\t\t\tprependVertex += `\n\t\t\t\t\t#extension GL_EXT_frag_depth : enable\n\t\t\t\t\t#define L_EXT_frag_depth true\n\t\t\t\t\t`;\n\t\t\t\tprependFragment += `\n\t\t\t\t\t#extension GL_EXT_frag_depth : enable\n\t\t\t\t\t#define L_EXT_frag_depth true\n\t\t\t\t\t`;\n\t\t\t}\n\t\t\tprependVertex += `\n\t\t\t\tprecision highp float;\n\t\t\t\tprecision highp int;\n\t\t\t\t`;\n\t\t\tprependFragment += `\n\t\t\t\tprecision highp float;\n\t\t\t\tprecision highp int;\n\t\t\t\t`;\n\t\t\trawShaderMaterial.glslVersion = THREE.GLSL1;\n\t\t}\n\t\trawShaderMaterial.vertexShader = prependVertex + rawShaderMaterial.vertexShader;\n\t\trawShaderMaterial.fragmentShader = prependFragment + rawShaderMaterial.fragmentShader;\n\t}\n}\n","/** @module pioneer */\n\nexport class Sort {\n\t/**\n\t * Gets the least index whose value is greater than or equal to the value.\n\t * 1.5 on [0, 1, 2, 3] will return 2, 5.5 will return 4, and -4 will return 0.\n\t * O(log n).\n\t * @template ArrayType\n\t * @template ValueType\n\t * @param {ValueType} value\n\t * @param {ArrayType[]} array\n\t * @param {CompareFunction<ArrayType, ValueType>} [isLess]\n\t * @returns {number}\n\t */\n\tstatic getIndex(value, array, isLess) {\n\t\tlet low = 0;\n\t\tlet high = array.length;\n\t\tif (isLess === undefined) {\n\t\t\twhile (low < high) {\n\t\t\t\tconst mid = (low + high) >>> 1;\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (array[mid] < value) {\n\t\t\t\t\tlow = mid + 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thigh = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\twhile (low < high) {\n\t\t\t\tconst mid = (low + high) >>> 1;\n\t\t\t\tif (isLess(array[mid], value)) {\n\t\t\t\t\tlow = mid + 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thigh = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn low;\n\t}\n\n\t/**\n\t * Adds the value into a sorted array.\n\t * @template ArrayType\n\t * @param {ArrayType} value\n\t * @param {ArrayType[]} array\n\t * @param {CompareFunction<ArrayType, ArrayType>} [isLess]\n\t * @param {CompareFunction<ArrayType, ArrayType>} [isEqual]\n\t */\n\tstatic add(value, array, isLess, isEqual) {\n\t\tlet index = this.getIndex(value, array, isLess);\n\t\tif (isEqual === undefined) {\n\t\t\twhile (index < array.length && array[index] === value) {\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\twhile (index < array.length && isEqual(array[index], value)) {\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t}\n\t\tarray.splice(index, 0, value);\n\t}\n\n\t/**\n\t * Removes the value from a sorted array. Returns true if the value was found.\n\t * @template ArrayType\n\t * @template ValueType\n\t * @param {ValueType} value\n\t * @param {ArrayType[]} array\n\t * @param {CompareFunction<ArrayType, ValueType>} [isLess]\n\t * @param {CompareFunction<ArrayType, ValueType>} [isEqual]\n\t */\n\tstatic remove(value, array, isLess, isEqual) {\n\t\tconst index = this.getIndex(value, array, isLess);\n\t\tlet isFound = false;\n\t\tif (index < array.length) {\n\t\t\t// @ts-ignore\n\t\t\tif (isEqual === undefined && array[index] === value) {\n\t\t\t\tisFound = true;\n\t\t\t}\n\t\t\telse if (isEqual !== undefined && isEqual(array[index], value)) {\n\t\t\t\tisFound = true;\n\t\t\t}\n\t\t}\n\t\tif (isFound) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t\treturn isFound;\n\t}\n}\n\n/**\n * An compare function that uses two types.\n * @template LHSType\n * @template RHSType\n * @callback CompareFunction\n * @param {LHSType} a\n * @param {RHSType} b\n * @returns {boolean}\n */\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tTHREE,\n\tThreeJsHelper\n} from '../internal';\n\n/**\n * A basic sprite particle system with position, color, and scale attributes.\n */\nexport class SpriteParticles {\n\t/**\n\t * The constructor.\n\t * @param {BaseComponent} component\n\t */\n\tconstructor(component) {\n\t\t/**\n\t\t * The component that contains this.\n\t\t * @type {BaseComponent}\n\t\t * @private\n\t\t */\n\t\tthis._component = component;\n\n\t\t/**\n\t\t * Whether or not the particles are relative to the orientation of the entity.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._relativeToEntityOrientation = true;\n\n\t\t/**\n\t\t * The positions of the particles.\n\t\t * @type {Float32Array}\n\t\t * @private\n\t\t */\n\t\tthis._offsetArray = new Float32Array(0);\n\n\t\t/**\n\t\t * The colors of the particles.\n\t\t * @type {Float32Array}\n\t\t * @private\n\t\t */\n\t\tthis._colorArray = new Float32Array(0);\n\n\t\t/**\n\t\t * The scales of the particles.\n\t\t * @type {Float32Array}\n\t\t * @private\n\t\t */\n\t\tthis._scaleArray = new Float32Array(0);\n\n\t\t/**\n\t\t * The ThreeJs instanced geometry.\n\t\t * @type {THREE.InstancedBufferGeometry}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsGeometry = null;\n\n\t\t/**\n\t\t * The ThreeJs material.\n\t\t * @type {THREE.RawShaderMaterial}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsMaterial = null;\n\n\t\t/**\n\t\t * The ThreeJs object.\n\t\t * @type {THREE.Mesh<THREE.InstancedBufferGeometry, THREE.ShaderMaterial>}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsObject = null;\n\n\t\t// Setup the Three.js geometry.\n\t\tthis._threeJsGeometry = new THREE.InstancedBufferGeometry();\n\t\tthis._threeJsGeometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array([-1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1]), 3));\n\t\tthis._threeJsGeometry.setIndex(new THREE.BufferAttribute(new Uint16Array([0, 1, 2, 2, 3, 0]), 1));\n\t\tthis._threeJsGeometry.setAttribute('offset', new THREE.InstancedBufferAttribute(this._offsetArray, 3));\n\t\tthis._threeJsGeometry.setAttribute('color', new THREE.InstancedBufferAttribute(this._colorArray, 4));\n\t\tthis._threeJsGeometry.setAttribute('scale', new THREE.InstancedBufferAttribute(this._scaleArray, 1));\n\n\t\t// Setup the Three.js material.\n\t\tthis._threeJsMaterial = this._component.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('sprite_particles');\n\n\t\t// Setup the Three.js object.\n\t\tthis._threeJsObject = /** @type {THREE.Mesh<THREE.InstancedBufferGeometry, THREE.ShaderMaterial>} */ (ThreeJsHelper.createMeshObjectGivenGeometry(component, this._threeJsMaterial, this._threeJsGeometry));\n\t}\n\n\t/**\n\t * Gets the Three.js object.\n\t * @returns {THREE.Mesh<THREE.InstancedBufferGeometry, THREE.ShaderMaterial>}\n\t */\n\tgetThreeJsObject() {\n\t\treturn this._threeJsObject;\n\t}\n\n\t/**\n\t * Gets the Three.js object.\n\t * @returns {THREE.ShaderMaterial}\n\t */\n\tgetThreeJsMaterial() {\n\t\treturn this._threeJsMaterial;\n\t}\n\n\t/**\n\t * Sets the positions of the particles.\n\t * @param {Float32Array} particleOffsets\n\t */\n\tsetParticleOffsets(particleOffsets) {\n\t\tthis._setAttribute('offset', particleOffsets, 3);\n\t}\n\n\t/**\n\t * Sets the colors of the particles.\n\t * @param {Float32Array} particleColors\n\t */\n\tsetParticleColors(particleColors) {\n\t\tthis._setAttribute('color', particleColors, 4);\n\t}\n\n\t/**\n\t * Sets the scales of the particles.\n\t * @param {Float32Array} particleScales\n\t */\n\tsetParticleScales(particleScales) {\n\t\tthis._setAttribute('scale', particleScales, 1);\n\t}\n\n\t/**\n\t * Gets whether or not the particles are relative to the orientation of the entity. Defaults to true.\n\t * @returns {boolean}\n\t */\n\tgetRelativeToEntityOrientation() {\n\t\treturn this._relativeToEntityOrientation;\n\t}\n\n\t/**\n\t * Sets whether or not the particles are relative to the orientation of the entity.\n\t * @param {boolean} relativeToEntityOrientation\n\t */\n\tsetRelativeToEntityOrientation(relativeToEntityOrientation) {\n\t\tthis._relativeToEntityOrientation = relativeToEntityOrientation;\n\t}\n\n\t/**\n\t * Prepares the sprite particles for rendering.\n\t * @param {CameraComponent} camera\n\t */\n\tprepareForRender(camera) {\n\t\t// Set the position of the ThreeJs object.\n\t\tThreeJsHelper.setPositionToEntity(this._threeJsObject, this._component.getEntity(), camera);\n\n\t\t// Set the orientation of the ThreeJs object if it is relative to the entity orientation.\n\t\tif (this._relativeToEntityOrientation) {\n\t\t\tThreeJsHelper.setOrientationToEntity(this._threeJsObject, this._component.getEntity());\n\t\t}\n\t}\n\n\t/**\n\t * Sets the values of an attribute, and adjusts the number of particles if needed.\n\t * @param {string} name\n\t * @param {Float32Array} array\n\t * @param {number} itemSize\n\t * @private\n\t */\n\t_setAttribute(name, array, itemSize) {\n\t\tlet attribute = this._threeJsGeometry.getAttribute(name);\n\t\tif (attribute instanceof THREE.InstancedBufferAttribute) {\n\t\t\tif (attribute.count !== array.length / itemSize) {\n\t\t\t\tthis._offsetArray = new Float32Array(array.length / itemSize * 3);\n\t\t\t\tthis._colorArray = new Float32Array(array.length / itemSize * 4);\n\t\t\t\tthis._scaleArray = new Float32Array(array.length / itemSize * 1);\n\t\t\t\tthis._threeJsGeometry.instanceCount = array.length / itemSize;\n\t\t\t\tthis._threeJsGeometry.setAttribute('offset', new THREE.InstancedBufferAttribute(this._offsetArray, 3));\n\t\t\t\tthis._threeJsGeometry.setAttribute('color', new THREE.InstancedBufferAttribute(this._colorArray, 4));\n\t\t\t\tthis._threeJsGeometry.setAttribute('scale', new THREE.InstancedBufferAttribute(this._scaleArray, 1));\n\t\t\t}\n\t\t}\n\t\tattribute = this._threeJsGeometry.getAttribute(name);\n\t\tif (attribute instanceof THREE.InstancedBufferAttribute) {\n\t\t\tattribute.copyArray(array);\n\t\t\tattribute.needsUpdate = true;\n\t\t}\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tEngine,\n\tTHREE\n} from '../internal';\n\n/**\n * A texture that downloads different resolution textures depending on the level of detail requested.\n * Each texture URL is can use the $SIZE and $FACE replacement strings to specify the different images loaded depending on the LOD and face.\n */\nexport class TextureLOD {\n\t/**\n\t * Constructor.\n\t * @param {BaseComponent} component - the component container\n\t */\n\tconstructor(component) {\n\t\t/**\n\t\t * The Pioneer engine.\n\t\t * @type {Engine}\n\t\t * @private\n\t\t */\n\t\tthis._engine = component.getEntity().getScene().getEngine();\n\n\t\t/**\n\t\t * The component container.\n\t\t * @type {BaseComponent}\n\t\t * @private\n\t\t */\n\t\tthis._component = component;\n\n\t\t/**\n\t\t * The uniform to be set to the texture.\n\t\t * @type {THREE.IUniform}\n\t\t * @private\n\t\t */\n\t\tthis._uniform = null;\n\n\t\t/**\n\t\t * The url to be used.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._url = '';\n\n\t\t/**\n\t\t * The array of sizes of textures.\n\t\t * @type {number[]}\n\t\t * @private\n\t\t */\n\t\tthis._sizes = [];\n\n\t\t/**\n\t\t * The current size of the texture.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._currentSize = 0;\n\n\t\t/**\n\t\t * If not undefined, forces the texture to be this size.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._forcedSize = undefined;\n\n\t\t/**\n\t\t * The flag that if true, uses compressed textures.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._useCompressed = false;\n\n\t\t/**\n\t\t * A promise that resolves when the texture is loaded. Every new texture load creates a new promise.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._loadedPromise = Promise.resolve();\n\n\t\t/**\n\t\t * A flag that tells whether this is currently loading a texture.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._loading = false;\n\t}\n\n\t/**\n\t * Gets the url currently being used.\n\t * @returns {string}\n\t */\n\tgetUrl() {\n\t\treturn this._url;\n\t}\n\n\t/**\n\t * Sets the url to be used. If can have a $SIZE in the URL to act as replacements for different sizes.\n\t * @param {string} url\n\t */\n\tsetUrl(url) {\n\t\tthis._url = url;\n\t\tthis._currentSize = 0;\n\t}\n\n\t/**\n\t * Gets the uniform to be used.\n\t * @returns {THREE.IUniform}\n\t */\n\tgetUniform() {\n\t\treturn this._uniform;\n\t}\n\n\t/**\n\t * Sets the uniform to be used, or null for no uniform.\n\t * @param {THREE.IUniform} uniform\n\t */\n\tsetUniform(uniform) {\n\t\tthis._uniform = uniform;\n\t\tthis._currentSize = 0;\n\t}\n\n\t/**\n\t * Gets the sizes to be loaded.\n\t * @returns {number[]}\n\t */\n\tgetSizes() {\n\t\treturn this._sizes.slice();\n\t}\n\n\t/**\n\t * Sets the sizes of the textures to be loaded.\n\t * @param {number[]} sizes\n\t */\n\tsetSizes(sizes) {\n\t\tthis._sizes = sizes.slice();\n\t\tthis._currentSize = 0;\n\t}\n\n\t/**\n\t * Gets the size of the current texture.\n\t * @returns {number}\n\t */\n\tgetCurrentSize() {\n\t\treturn this._currentSize;\n\t}\n\n\t/**\n\t * Gets the forced texture size, if defined.\n\t * @returns {number}\n\t */\n\tgetForcedSize() {\n\t\treturn this._forcedSize;\n\t}\n\n\t/**\n\t * Sets the forced texture size, if defined.\n\t * @param {number} size\n\t */\n\tsetForcedSize(size) {\n\t\tthis._forcedSize = size;\n\t}\n\n\t/**\n\t * Gets the flag that if true, uses compressed textures.\n\t * @returns {boolean}\n\t */\n\tgetUseCompression() {\n\t\treturn this._useCompression;\n\t}\n\n\t/**\n\t * Sets the flag that if true, uses compressed textures.\n\t * @param {boolean} useCompression\n\t */\n\tsetUseCompression(useCompression) {\n\t\tthis._useCompression = useCompression;\n\t\tthis._currentSize = 0;\n\t}\n\n\t/**\n\t * Returns a promise that resolves when the texture for the current target size is loaded.\n\t * @returns {Promise<void>}\n\t */\n\tgetLoadedPromise() {\n\t\treturn this._loadedPromise;\n\t}\n\n\t/**\n\t * Starts the downloading of a texture at the current target level.\n\t */\n\tupdate() {\n\t\t// Still loading a texture.\n\t\tif (this._loading || this._uniform === null) {\n\t\t\treturn;\n\t\t}\n\t\t// No textures to check or load.\n\t\tif (this._url === '' || this._sizes.length === 0 || (this._component.getLoadState() === 'unloaded' && this._forcedSize === undefined)) {\n\t\t\t// Unload any existing texture.\n\t\t\tif (this._uniform.value !== null) {\n\t\t\t\tthis._uniform.value.dispose();\n\t\t\t\tthis._uniform.value = null;\n\t\t\t\tthis._currentSize = 0;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Figure out which texture should be loaded.\n\t\tlet targetSize = this._sizes[0];\n\t\tif (this._forcedSize !== undefined) {\n\t\t\ttargetSize = this._forcedSize;\n\t\t}\n\t\telse {\n\t\t\ttargetSize = this._component.getEntity().getGreatestPixelSpaceExtentsRadius();\n\t\t}\n\t\t// Get the index of the least size greater than or equal to the target size.\n\t\tlet sizeIndex = 0;\n\t\tfor (let i = 0, l = this._sizes.length; i < l; i++) {\n\t\t\tconst size = this._sizes[i];\n\t\t\tif (i === l - 1) { // End of list, so choose the highest one.\n\t\t\t\tsizeIndex = i;\n\t\t\t}\n\t\t\tconst maxTextureSize = this._engine.getConfig().getValue('maxTextureSize');\n\t\t\tif (size >= targetSize // If we've past the target or the maxTextureSize config (without a forced size), choose the this one.\n\t\t\t\t|| (typeof maxTextureSize === 'number' && size >= maxTextureSize && this._forcedSize === undefined)) {\n\t\t\t\tsizeIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// If the current size is different than the requested size, load up the new size.\n\t\tif (this._currentSize !== this._sizes[sizeIndex]) {\n\t\t\tthis._currentSize = this._sizes[sizeIndex];\n\t\t\tthis._loadTexture(this._currentSize);\n\t\t}\n\t}\n\n\t/**\n\t * Loads the texture at the given size.\n\t * This is separate from the update function to avoid garbage generation from the this-bound anonymous function after the download.\n\t * @param {number} size - The size of the texture to load.\n\t * @private\n\t */\n\t_loadTexture(size) {\n\t\tconst url = this._url.replace('$SIZE', size.toString());\n\t\tthis._loading = true;\n\t\tconst textureLoader = this._useCompression ? this._engine.getTextureLoaderCompressed() : this._engine.getTextureLoader();\n\t\tthis._loadedPromise = textureLoader.loadIntoUniform(this._uniform, url, true).then(() => {\n\t\t\tthis._loading = false;\n\t\t}).catch((error) => {\n\t\t\tthrow Error(error);\n\t\t});\n\t}\n}\n","/** @module pioneer */\nimport {\n\tBaseComponent,\n\tCameraComponent,\n\tCapabilities,\n\tColor,\n\tEntity,\n\tQuaternion,\n\tTHREE,\n\tVector2,\n\tVector3\n} from '../internal';\n\n/**\n * A set of helper functions for Three.js objects and materials.\n * `attributes` takes an array of {name: string, dimensions: number} objects.\n */\nexport class ThreeJsHelper {\n\t// CREATE & DESTROY\n\n\t/**\n\t * Creates a Three.js Mesh object with BufferGeometry (with given attributes) and a default pink ShaderMaterial, and adds it to the scene.\n\t * @param {Object[]} attributes\n\t * @param {string} attributes[].name\n\t * @param {number} attributes[].dimensions\n\t * @param {boolean} interleavedAttributes\n\t * @returns {THREE.BufferGeometry}\n\t */\n\tstatic createGeometry(attributes, interleavedAttributes) {\n\t\t// Create the Three.js goemetry.\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t// Setup the attributes.\n\t\tif (interleavedAttributes) {\n\t\t\t// Get stride.\n\t\t\tlet stride = 0;\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tstride += attributes[i].dimensions;\n\t\t\t}\n\t\t\t// Create the buffers.\n\t\t\tconst interleavedBuffer = new THREE.InterleavedBuffer(new Float32Array(0), stride);\n\t\t\tlet offset = 0;\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tgeometry.setAttribute(attributes[i].name, new THREE.InterleavedBufferAttribute(interleavedBuffer, attributes[i].dimensions, offset));\n\t\t\t\toffset += attributes[i].dimensions;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tgeometry.setAttribute(attributes[i].name, new THREE.BufferAttribute(new Float32Array(0), attributes[i].dimensions));\n\t\t\t}\n\t\t}\n\t\tgeometry.setIndex(new THREE.BufferAttribute(new Uint16Array(0), 1));\n\n\t\t// Return the geometry.\n\t\treturn geometry;\n\t}\n\n\t/**\n\t * Sets up the Three.js objec, assuming it's the root of its hierarchy.\n\t * @param {BaseComponent} component\n\t * @param {THREE.Object3D} object\n\t */\n\tstatic setupObject(component, object) {\n\t\t// Set the name of the object.\n\t\tobject.name = component + '.' + Math.floor(Math.random() * 10000);\n\n\t\t// This turns off recalculating the world matrix every single frame.\n\t\tobject.matrixAutoUpdate = false;\n\n\t\t// Set the object to never be culled by Three.js.\n\t\tobject.frustumCulled = false;\n\n\t\t// Set the object to be initially invisible.\n\t\tobject.visible = false;\n\n\t\t// Add it to the scene.\n\t\tcomponent.getEntity().getScene().getThreeJsScene().add(object);\n\t}\n\n\t/**\n\t * Creates a Three.js Mesh object with BufferGeometry (with given attributes) and a default pink ShaderMaterial, and adds it to the scene.\n\t * @param {BaseComponent} component\n\t * @param {THREE.ShaderMaterial | THREE.ShaderMaterial[]} material\n\t * @param {THREE.BufferGeometry} geometry\n\t * @returns {THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial | THREE.ShaderMaterial[]>}\n\t */\n\tstatic createMeshObjectGivenGeometry(component, material, geometry) {\n\t\t// Create the Three.js object.\n\t\tconst object = new THREE.Mesh(geometry, material);\n\n\t\t// Setup the mesh.\n\t\tthis.setupObject(component, object);\n\n\t\t// Return the mesh.\n\t\treturn object;\n\t}\n\n\t/**\n\t * Creates a Three.js Mesh object with BufferGeometry (with given attributes) and a default pink ShaderMaterial, and adds it to the scene.\n\t * @param {BaseComponent} component\n\t * @param {THREE.ShaderMaterial | THREE.ShaderMaterial[]} material\n\t * @param {{ name: string, dimensions: number }[]} attributes\n\t * @param {boolean} interleavedAttributes\n\t * @returns {THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial | THREE.ShaderMaterial[]>}\n\t */\n\tstatic createMeshObject(component, material, attributes, interleavedAttributes) {\n\t\t// Create the Three.js goemetry.\n\t\tconst geometry = this.createGeometry(attributes, interleavedAttributes);\n\n\t\t// Create the object with no material.\n\t\tconst object = this.createMeshObjectGivenGeometry(component, material, geometry);\n\n\t\t// Return the mesh.\n\t\treturn object;\n\t}\n\n\t/**\n\t * Destroys a Three.js geometry.\n\t * @param {THREE.BufferGeometry} geometry\n\t */\n\tstatic destroyGeometry(geometry) {\n\t\tgeometry.dispose();\n\t}\n\n\t/**\n\t * Disposes of geometry and removes the object from the Three.js scene. Also applies to children. Does not affect materials.\n\t * @param {THREE.Object3D} object\n\t */\n\tstatic destroyObject(object) {\n\t\twhile (object.children.length > 0) {\n\t\t\tthis.destroyObject(object.children[object.children.length - 1]);\n\t\t}\n\t\tif (object.parent !== null) {\n\t\t\tobject.parent.remove(object);\n\t\t}\n\t\tif (object instanceof THREE.Mesh) {\n\t\t\tthis.destroyGeometry(object.geometry);\n\t\t}\n\t}\n\n\t/**\n\t * Destroys a Three.js material. Disposes of it and any textures.\n\t * @param {THREE.ShaderMaterial} material\n\t */\n\tstatic destroyMaterial(material) {\n\t\tconst uniforms = material.uniforms;\n\t\tfor (const uniform in uniforms) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(uniforms, uniform) && uniforms[uniform].value !== null && uniforms[uniform].value.dispose !== undefined) {\n\t\t\t\tuniforms[uniform].value.dispose();\n\t\t\t}\n\t\t}\n\t\tmaterial.dispose();\n\t}\n\n\t/**\n\t * Destroys all Three.js objects, geometries, materials, and textures in the component.\n\t * @param {BaseComponent} component\n\t */\n\tstatic destroyAllObjectsAndMaterials(component) {\n\t\tconst objects = component.getThreeJsObjects();\n\t\tconst materials = component.getThreeJsMaterials();\n\t\tfor (let i = 0; i < objects.length; i++) {\n\t\t\tthis.destroyObject(objects[i]);\n\t\t}\n\t\tfor (let i = 0; i < materials.length; i++) {\n\t\t\tthis.destroyMaterial(materials[i]);\n\t\t}\n\t}\n\n\t// POSITION & ORIENTATION\n\n\t/**\n\t * Sets the object's position.\n\t * @param {THREE.Object3D | THREE.Object3D[]} objects\n\t * @param {Vector3} position\n\t */\n\tstatic setPosition(objects, position) {\n\t\tif (!objects) {\n\t\t\treturn;\n\t\t}\n\t\tif (Array.isArray(objects)) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tobjects[i].position.set(position.x, position.y, position.z);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobjects.position.set(position.x, position.y, position.z);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the object's position to be the entity's camera-space position, along with an optional offset.\n\t * @param {THREE.Object3D | THREE.Object3D[]} objects\n\t * @param {Entity} entity\n\t * @param {CameraComponent} camera\n\t * @param {Vector3} [offset]\n\t * @param {boolean} [offsetIsInEntityFrame]\n\t */\n\tstatic setPositionToEntity(objects, entity, camera, offset, offsetIsInEntityFrame) {\n\t\tif (!objects) {\n\t\t\treturn;\n\t\t}\n\t\tconst cameraSpacePosition = entity.getCameraSpacePosition(camera);\n\t\tthis._tempThreeJsVector3.set(cameraSpacePosition.x, cameraSpacePosition.y, cameraSpacePosition.z);\n\t\tif (offset) {\n\t\t\tconst newOffset = Vector3.pool.get();\n\t\t\tif (offsetIsInEntityFrame) {\n\t\t\t\tnewOffset.rotate(entity.getOrientation(), offset);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnewOffset.copy(offset);\n\t\t\t}\n\t\t\tthis._tempThreeJsVector3.x += newOffset.x;\n\t\t\tthis._tempThreeJsVector3.y += newOffset.y;\n\t\t\tthis._tempThreeJsVector3.z += newOffset.z;\n\t\t\tVector3.pool.release(newOffset);\n\t\t}\n\t\tif (Array.isArray(objects)) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tobjects[i].position.copy(this._tempThreeJsVector3);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobjects.position.copy(this._tempThreeJsVector3);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the object's scale.\n\t * @param {THREE.Object3D | THREE.Object3D[]} objects\n\t * @param {number|Vector3} scale\n\t */\n\tstatic setScale(objects, scale) {\n\t\tif (!objects) {\n\t\t\treturn;\n\t\t}\n\t\tif (Array.isArray(objects)) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tif (typeof scale === 'number') {\n\t\t\t\t\tobjects[i].scale.set(scale, scale, scale);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tobjects[i].scale.set(scale.x, scale.y, scale.z);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (typeof scale === 'number') {\n\t\t\t\tobjects.scale.set(scale, scale, scale);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobjects.scale.set(scale.x, scale.y, scale.z);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the object's orientation.\n\t * @param {THREE.Object3D | THREE.Object3D[]} objects\n\t * @param {Quaternion} orientation\n\t */\n\tstatic setOrientation(objects, orientation) {\n\t\tif (!objects) {\n\t\t\treturn;\n\t\t}\n\t\tBaseComponent._tempThreeJsQuaternion.set(orientation.x, orientation.y, orientation.z, orientation.w);\n\t\tif (Array.isArray(objects)) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tobjects[i].setRotationFromQuaternion(BaseComponent._tempThreeJsQuaternion);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobjects.setRotationFromQuaternion(BaseComponent._tempThreeJsQuaternion);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the object to have its axes so that its z-axis faces the camera, and x-axis is aligned with the camera's right.\n\t * @param {THREE.Object3D | THREE.Object3D[]} objects\n\t * @param {Entity} entity\n\t * @param {CameraComponent} camera\n\t */\n\tstatic setOrientationToBillboard(objects, entity, camera) {\n\t\tif (!objects) {\n\t\t\treturn;\n\t\t}\n\t\tconst orientation = Quaternion.pool.get();\n\t\tconst forward = Vector3.pool.get();\n\t\tconst right = Vector3.pool.get();\n\t\tforward.normalize(entity.getCameraSpacePosition(camera));\n\t\tcamera.getEntity().getOrientation().getAxis(right, 0);\n\t\tright.setNormalTo(forward, right);\n\t\torientation.setFromAxes(right, undefined, forward);\n\t\tBaseComponent._tempThreeJsQuaternion.set(orientation.x, orientation.y, orientation.z, orientation.w);\n\t\tif (Array.isArray(objects)) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tobjects[i].setRotationFromQuaternion(BaseComponent._tempThreeJsQuaternion);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobjects.setRotationFromQuaternion(BaseComponent._tempThreeJsQuaternion);\n\t\t}\n\t\tQuaternion.pool.release(orientation);\n\t\tVector3.pool.release(forward);\n\t\tVector3.pool.release(right);\n\t}\n\n\t/**\n\t * Sets the object's orientation to be the same as the entity, with optional addition rotation applied first.\n\t * @param {THREE.Object3D | THREE.Object3D[]} objects\n\t * @param {Entity} entity\n\t * @param {Quaternion} [rotation]\n\t */\n\tstatic setOrientationToEntity(objects, entity, rotation) {\n\t\tif (!objects) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityOrientation = entity.getOrientation();\n\t\tif (rotation === undefined) {\n\t\t\tBaseComponent._tempThreeJsQuaternion.set(entityOrientation.x, entityOrientation.y, entityOrientation.z, entityOrientation.w);\n\t\t}\n\t\telse {\n\t\t\tconst orientation = Quaternion.pool.get();\n\t\t\torientation.mult(entityOrientation, rotation);\n\t\t\tBaseComponent._tempThreeJsQuaternion.set(orientation.x, orientation.y, orientation.z, orientation.w);\n\t\t\tQuaternion.pool.release(orientation);\n\t\t}\n\t\tif (Array.isArray(objects)) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tobjects[i].setRotationFromQuaternion(BaseComponent._tempThreeJsQuaternion);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobjects.setRotationFromQuaternion(BaseComponent._tempThreeJsQuaternion);\n\t\t}\n\t}\n\n\t// OTHER OBJECT PROPERTIES\n\n\t/**\n\t * Sets whether or not to use the component in the dynamic environment map. Defaults to false if it isn't used.\n\t * @param {THREE.Object3D} object\n\t * @param {boolean} enable\n\t */\n\tstatic useInDynEnvMap(object, enable) {\n\t\tif (enable) {\n\t\t\tobject.layers.enable(1);\n\t\t}\n\t\telse {\n\t\t\tobject.layers.disable(1);\n\t\t}\n\t}\n\n\t// GEOMETRY\n\n\t/**\n\t * Sets the vertices of the given attribute.\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {string} name\n\t * @param {Float32Array} vertices\n\t */\n\tstatic setVertices(geometry, name, vertices) {\n\t\tconst attribute = geometry.getAttribute(name);\n\t\tif (attribute instanceof THREE.BufferAttribute) {\n\t\t\tif (attribute.array.length === vertices.length) {\n\t\t\t\tattribute.copyArray(vertices);\n\t\t\t\tattribute.needsUpdate = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tgeometry.setAttribute(name, new THREE.BufferAttribute(vertices, geometry.getAttribute(name).itemSize));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the vertices of the given attribute.\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Uint16Array} indices\n\t */\n\tstatic setIndices(geometry, indices) {\n\t\tconst attribute = geometry.getIndex();\n\t\tif (attribute.array.length === indices.length) {\n\t\t\tattribute.copyArray(indices);\n\t\t\tattribute.needsUpdate = true;\n\t\t}\n\t\telse {\n\t\t\tgeometry.setIndex(new THREE.BufferAttribute(indices, 1));\n\t\t}\n\t}\n\n\t/**\n\t * Sets the tangent attribute computed from the normal and uv attributes.\n\t * @param {THREE.BufferGeometry} geometry\n\t */\n\tstatic computeTangents(geometry) {\n\t\tgeometry.computeTangents();\n\t}\n\n\t/**\n\t * Sets the render order of the objects.\n\t * @param {THREE.Object3D} object\n\t * @param {number} renderOrder\n\t */\n\tstatic setRenderOrder(object, renderOrder) {\n\t\tif (!object) {\n\t\t\treturn;\n\t\t}\n\t\tobject.renderOrder = renderOrder;\n\t}\n\n\t// MATERIALS & TEXTURES\n\n\t/**\n\t * Sets up log-depth buffering for the material.\n\t * They should already have the proper defines in their vertex and fragment code.\n\t * @param {THREE.ShaderMaterial} material\n\t */\n\tstatic setupLogDepthBuffering(material) {\n\t\tif (Capabilities.hasFragDepth()) {\n\t\t\tmaterial.defines['L_EXT_frag_depth'] = true;\n\t\t\tmaterial.extensions.fragDepth = true;\n\t\t}\n\t\telse {\n\t\t\tdelete material.defines['L_EXT_frag_depth'];\n\t\t}\n\t\tmaterial.needsUpdate = true;\n\t}\n\n\t/**\n\t * Loads a texture.\n\t * @param {BaseComponent} component\n\t * @param {string} url\n\t * @param {boolean} useMipMaps\n\t * @param {boolean} useCompression\n\t * @returns {Promise<THREE.Texture>}\n\t */\n\tstatic loadTexture(component, url, useMipMaps, useCompression) {\n\t\tconst engine = component.getEntity().getScene().getEngine();\n\t\tconst textureLoader = useCompression ? engine.getTextureLoaderCompressed() : engine.getTextureLoader();\n\t\treturn textureLoader.loadTexture(url, useMipMaps);\n\t}\n\n\t/**\n\t * Loads a texture from a canvas element. The canvas needs to be power of 2.\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {THREE.Texture}\n\t */\n\tstatic loadTextureFromCanvas(canvas) {\n\t\tconst texture = new THREE.CanvasTexture(canvas);\n\t\ttexture.magFilter = THREE.NearestFilter;\n\t\ttexture.minFilter = THREE.NearestFilter;\n\t\ttexture.flipY = false;\n\t\ttexture.needsUpdate = true;\n\t\treturn texture;\n\t}\n\n\t/**\n\t * Loads a texture.\n\t * @param {BaseComponent} component\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} uniformName\n\t * @param {string} url\n\t * @param {boolean} useMipMaps\n\t * @param {boolean} useCompression\n\t * @returns {Promise<void>}\n\t */\n\tstatic async loadTextureIntoUniform(component, material, uniformName, url, useMipMaps, useCompression) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tconst engine = component.getEntity().getScene().getEngine();\n\t\tconst textureLoader = useCompression ? engine.getTextureLoaderCompressed() : engine.getTextureLoader();\n\t\tconst texture = await textureLoader.loadTexture(url, useMipMaps);\n\t\tconst materials = component.getThreeJsMaterials();\n\t\tif (materials.includes(material)) { // Check if the material is still loaded.\n\t\t\tconst uniform = material.uniforms[uniformName];\n\t\t\tif (uniform === undefined) {\n\t\t\t\tthrow new Error(`Material in ${component} doesn't have uniform name '${uniformName}'.`);\n\t\t\t}\n\t\t\tif (uniform.value !== null) {\n\t\t\t\tuniform.value.dispose();\n\t\t\t}\n\t\t\tuniform.value = texture;\n\t\t}\n\t\telse {\n\t\t\ttexture.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Sets whether or not the material is an overlay. If true, it will be rendered on top of the scene with no scene occlusion.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {boolean} overlay\n\t */\n\tstatic setOverlay(material, overlay) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.depthFunc = (overlay ? THREE.AlwaysDepth : THREE.LessEqualDepth);\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {boolean} enabled\n\t */\n\tstatic setTransparent(material, enabled) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.transparent = enabled;\n\t\tmaterial.depthWrite = !enabled;\n\t}\n\n\t/**\n\t * Sets blending mode. Defaults to 'normal'.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} blending - one of 'normal', 'additive', 'subtractive', 'multliply', 'custom', or 'none'\n\t */\n\tstatic setBlending(material, blending) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (blending) {\n\t\t\tcase 'normal':\n\t\t\t\tmaterial.blending = THREE.NormalBlending;\n\t\t\t\tbreak;\n\t\t\tcase 'additive':\n\t\t\t\tmaterial.blending = THREE.AdditiveBlending;\n\t\t\t\tbreak;\n\t\t\tcase 'subtractive':\n\t\t\t\tmaterial.blending = THREE.SubtractiveBlending;\n\t\t\t\tbreak;\n\t\t\tcase 'multiply':\n\t\t\t\tmaterial.blending = THREE.MultiplyBlending;\n\t\t\t\tbreak;\n\t\t\tcase 'custom':\n\t\t\t\tmaterial.blending = THREE.CustomBlending;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmaterial.blending = THREE.NoBlending;\n\t\t\t\tbreak;\n\t\t}\n\t\tmaterial.needsUpdate = true;\n\t}\n\n\t/**\n\t * Sets the define on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {boolean} enabled\n\t */\n\tstatic setDefine(material, name, enabled) {\n\t\tif (enabled && !material.defines[name]) {\n\t\t\tmaterial.defines[name] = true;\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t\telse if (!enabled && material.defines[name] === true) {\n\t\t\tdelete material.defines[name];\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t}\n\n\t// UNIFORMS\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {number} value\n\t */\n\tstatic setUniformNumber(material, name, value) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.uniforms[name].value = value;\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {Vector2} value\n\t */\n\tstatic setUniformVector2(material, name, value) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.uniforms[name].value.set(value.x, value.y);\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {Vector3} value\n\t */\n\tstatic setUniformVector3(material, name, value) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.uniforms[name].value.set(value.x, value.y, value.z);\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {Color} value\n\t */\n\tstatic setUniformColorRGB(material, name, value) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.uniforms[name].value.set(value.r, value.g, value.b);\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * The alphaMultipier is multiplied onto the alpha component (defaults to 1).\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {Color} value\n\t * @param {number} [alphaMultiplier=1]\n\t */\n\tstatic setUniformColorRGBA(material, name, value, alphaMultiplier = 1) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.uniforms[name].value.set(value.r, value.g, value.b, value.a * alphaMultiplier);\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} name\n\t * @param {Quaternion} value\n\t */\n\tstatic setUniformQuaternion(material, name, value) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tmaterial.uniforms[name].value.set(value.x, value.y, value.z, value.w);\n\t}\n\n\t/**\n\t * Sets the uniform on the material.\n\t * @param {THREE.ShaderMaterial} material\n\t * @param {string} uniformName\n\t * @param {THREE.Texture} value\n\t */\n\tstatic setUniformTexture(material, uniformName, value) {\n\t\tif (!material) {\n\t\t\treturn;\n\t\t}\n\t\tif (material.uniforms[uniformName].value !== null) {\n\t\t\tmaterial.uniforms[uniformName].value.dispose();\n\t\t}\n\t\tmaterial.uniforms[uniformName].value = value;\n\t}\n}\n\n/**\n * A temporary Three.js Vector3.\n * @type {THREE.Vector3}\n */\nThreeJsHelper._tempThreeJsVector3 = new THREE.Vector3();\n","/** @module pioneer */\n\n/**\n * A generic multi-level tile class that supports loading, unloading, activating, and deactivating of tiles of a subclass.\n * @template {Tile<TileType>} TileType\n * @private\n */\nexport class Tile {\n\t/**\n\t * Constructor.\n\t * @param {TileType | null} parent\n\t */\n\tconstructor(parent) {\n\t\t/**\n\t\t * The parent tile.\n\t\t * @type {TileType | null}\n\t\t * @private\n\t\t */\n\t\tthis._parent = parent;\n\n\t\t/**\n\t\t * The child tiles.\n\t\t * @type {TileType[]}\n\t\t * @private\n\t\t */\n\t\tthis._children = [];\n\n\t\t/**\n\t\t * True if the tile has been activated.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._active = false;\n\n\t\t/**\n\t\t * True if the tile has been loaded.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._loaded = false;\n\n\t\t/**\n\t\t * True if the tile has been destroyed.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._destroyed = false;\n\n\t\t/**\n\t\t * True if this is in a transition (loading, splitting, joining, etc).\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._transitioning = false;\n\t}\n\n\t/**\n\t * Gets the parent tile.\n\t * @returns {TileType | null}\n\t */\n\tgetParent() {\n\t\treturn this._parent;\n\t}\n\n\t/**\n\t * Forces a tile to load. Useful for the root node that needs to start the process.\n\t * @returns {Promise<void>}\n\t */\n\tasync forceLoad() {\n\t\tthis._transitioning = true;\n\t\tif (!this._destroyed) {\n\t\t\tawait this.load();\n\t\t}\n\t\tthis._loaded = true;\n\t\tif (!this._destroyed) {\n\t\t\tawait this.activate();\n\t\t}\n\t\tthis._active = true;\n\t\tthis._transitioning = false;\n\t}\n\n\t/**\n\t * Checks the tile to see if needs to be split or join. Returns true if it is transitioning.\n\t * @returns {boolean}\n\t */\n\tcheck() {\n\t\tif (!this._destroyed && !this._transitioning) {\n\t\t\tif (this._children.length === 0 && this.checkSplit()) {\n\t\t\t\tthis._split();\n\t\t\t}\n\t\t\telse if (this._children.length > 0 && this.checkJoin()) {\n\t\t\t\tthis._join();\n\t\t\t}\n\t\t}\n\n\t\treturn this._transitioning;\n\t}\n\n\t/**\n\t * Gets the children.\n\t * @returns {TileType[]}\n\t */\n\tget children() {\n\t\treturn this._children;\n\t}\n\n\t/**\n\t * Returns a new Tile or null if the tile could not be created.\n\t * @param {TileType} _parent\n\t * @param {number} _row - 0 or 1\n\t * @param {number} _col - 0 or 1\n\t * @returns {TileType}\n\t */\n\tcreateNewTile(_parent, _row, _col) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns true if this tile should be split.\n\t * @abstract\n\t * @returns {boolean}\n\t */\n\tcheckSplit() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if this tile should join its children.\n\t * @abstract\n\t * @returns {boolean}\n\t */\n\tcheckJoin() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Asynchronously loads the tile so that it may be used.\n\t * @abstract\n\t * @returns {Promise<void | void[]>}\n\t */\n\tasync load() {\n\t}\n\n\t/**\n\t * Asynchronously unloads the tile.\n\t * @abstract\n\t * @returns {Promise<void>}\n\t */\n\tasync unload() {\n\t}\n\n\t/**\n\t * Asynchronously activates the tile.\n\t * @abstract\n\t * @returns {Promise<void>}\n\t */\n\tasync activate() {\n\t}\n\n\t/**\n\t * Asynchronously deactivates the tile.\n\t * @abstract\n\t * @returns {Promise<void>}\n\t */\n\tasync deactivate() {\n\t}\n\n\t/**\n\t * Destroys the tile and all of its children.\n\t */\n\tdestroy() {\n\t\tthis._destroyed = true;\n\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\tthis._children[i].destroy();\n\t\t}\n\t\tif (!this._transitioning) {\n\t\t\tif (this._active) {\n\t\t\t\tthis.deactivate().then(() => {\n\t\t\t\t\tthis.unload();\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (this._loaded) {\n\t\t\t\tthis.unload();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Splits a tile all the way down and only loads the leaf tiles.\n\t * @private\n\t */\n\t_split() {\n\t\t/** @type {Array<Promise<void>>} */\n\t\tconst loadedPromises = [];\n\t\t/** @type {TileType[]} */\n\t\tconst newTiles = [];\n\n\t\t// Create and load all of the tiles.\n\t\tthis._splitAndLoad(loadedPromises, newTiles);\n\n\t\t// Wait till all of the tiles are loaded, then activate them.\n\t\tPromise.all(loadedPromises).then(() => {\n\t\t\t/** @type {Array<Promise<void>>} */\n\t\t\tconst activatedPromises = [];\n\t\t\tfor (let i = 0; i < newTiles.length; i++) {\n\t\t\t\tif (newTiles[i]._loaded && !newTiles[i]._destroyed) {\n\t\t\t\t\tactivatedPromises.push(newTiles[i].activate().then(async () => {\n\t\t\t\t\t\tif (this._destroyed) {\n\t\t\t\t\t\t\treturn this.deactivate().then(() => {\n\t\t\t\t\t\t\t\tthis.unload();\n\t\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewTiles[i]._active = true;\n\t\t\t\t\t\tnewTiles[i]._transitioning = false;\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewTiles[i]._transitioning = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._active) {\n\t\t\t\tactivatedPromises.push(this.deactivate().then(() => {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn activatedPromises;\n\t\t// Wait till all of the tiles are activated and this is deactivated, then unload this.\n\t\t}).then(() => {\n\t\t\tif (this._loaded) {\n\t\t\t\tthis.unload().then(() => {\n\t\t\t\t\tthis._loaded = false;\n\t\t\t\t\tthis._transitioning = false;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._transitioning = false;\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Joins a tile, deactivating, unloading, and removing all children.\n\t * @private\n\t */\n\t_join() {\n\t\t// First mark all of the descendant tiles as transitioning,\n\t\t// and if any were already transitioning, we don't do the join.\n\t\tif (this._checkIfDescendantsAreTransitioning()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make this and all descendant tiles transitioning.\n\t\t/** @type {TileType[]} */\n\t\tconst tilesToUnload = [];\n\t\tthis._transitioning = true;\n\t\tthis._markDescendantsAsTransitioning(tilesToUnload);\n\n\t\tthis.load().then(async () => {\n\t\t\tif (this._destroyed) {\n\t\t\t\treturn this.unload();\n\t\t\t}\n\t\t\tthis._loaded = true;\n\t\t}).then(() => {\n\t\t\tconst promises = [];\n\t\t\tfor (let i = 0; i < tilesToUnload.length; i++) {\n\t\t\t\tpromises.push(tilesToUnload[i].deactivate().then(() => {\n\t\t\t\t\ttilesToUnload[i]._active = false;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}));\n\t\t\t}\n\t\t\tif (!this._destroyed) {\n\t\t\t\tpromises.push(this.activate().then(async () => {\n\t\t\t\t\tif (this._destroyed) {\n\t\t\t\t\t\treturn this.deactivate().then(() => {\n\t\t\t\t\t\t\tthis.unload();\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = true;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn Promise.all(promises);\n\t\t}).then(() => {\n\t\t\tconst promises = [];\n\t\t\tfor (let i = 0; i < tilesToUnload.length; i++) {\n\t\t\t\tpromises.push(tilesToUnload[i].unload().then(() => {\n\t\t\t\t\ttilesToUnload[i]._loaded = false;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}));\n\t\t\t}\n\t\t\treturn Promise.all(promises);\n\t\t}).then(() => {\n\t\t\tthis._children = [];\n\t\t\tthis._transitioning = false;\n\t\t}).catch((error) => {\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Creates and loads all of the required tiles.\n\t * @param {Array<Promise<void>>} loadedPromises - the list of tiles that were loaded\n\t * @param {TileType[]} newTiles - the list of tiles that were created (and possibly loaded)\n\t * @private\n\t */\n\t_splitAndLoad(loadedPromises, newTiles) {\n\t\t// Create and load all of the tiles.\n\t\tthis._transitioning = true;\n\t\tfor (let row = 0; row < 2; row++) {\n\t\t\tfor (let col = 0; col < 2; col++) {\n\t\t\t\t// Construct the tile.\n\t\t\t\t// @ts-ignore - because it can't convert 'this' to 'TileType'.\n\t\t\t\tconst tile = this.createNewTile(this, row, col);\n\t\t\t\tif (tile !== null) {\n\t\t\t\t\tthis._children.push(tile);\n\t\t\t\t\t// Check to see if this tile needs to be split as well.\n\t\t\t\t\tif (tile.checkSplit()) {\n\t\t\t\t\t\ttile._splitAndLoad(loadedPromises, newTiles);\n\t\t\t\t\t}\n\t\t\t\t\t// Otherwise, load the tile.\n\t\t\t\t\telse {\n\t\t\t\t\t\ttile._transitioning = true;\n\t\t\t\t\t\tloadedPromises.push(tile.load().then(async () => {\n\t\t\t\t\t\t\tif (tile._destroyed) {\n\t\t\t\t\t\t\t\treturn tile.unload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttile._loaded = true;\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tnewTiles.push(tile);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if any descendant tiles are transitioning. Used by join to ensure that all joined tiles are not already transitioning.\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_checkIfDescendantsAreTransitioning() {\n\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\tconst tile = this._children[i];\n\t\t\tif (tile._transitioning) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (tile._checkIfDescendantsAreTransitioning()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Marks all descendant tiles as transitioning. Assumes the _checkIfDescendantsAreTransitioning function has already been called.\n\t * Used by join to ensure that nothing happens to the descendants during the join process.\n\t * Also stores the active tiles for later deactivating and unloading.\n\t * @param {TileType[]} tilesToUnload\n\t * @private\n\t */\n\t_markDescendantsAsTransitioning(tilesToUnload) {\n\t\tfor (let i = 0; i < this._children.length; i++) {\n\t\t\tconst tile = this._children[i];\n\t\t\ttile._transitioning = true;\n\t\t\tif (tile._active) {\n\t\t\t\ttilesToUnload.push(tile);\n\t\t\t}\n\t\t\ttile._markDescendantsAsTransitioning(tilesToUnload);\n\t\t}\n\t}\n}\n","/** @module pioneer */\n\n/**\n * A class of time routines.\n * @hideconstructor\n */\nexport class TimeUtils {\n\t/**\n\t * Returns the ET time right now.\n\t * @returns {number}\n\t */\n\tstatic now() {\n\t\treturn TimeUtils.unixToEt(Date.now() / 1000.0);\n\t}\n\n\t/**\n\t * Converts an ET time to a Unix time.\n\t * @param {number} et - the ET time to convert\n\t * @returns {number}\n\t */\n\tstatic etToUnix(et) {\n\t\tlet leapSecondsOffset = 0;\n\t\tfor (let i = 0; i < _leapSeconds.length; i++) {\n\t\t\tif (et + 946727957.816 + leapSecondsOffset >= _leapSeconds[i] + 1) {\n\t\t\t\tleapSecondsOffset -= 1;\n\t\t\t}\n\t\t}\n\t\treturn et + 946727957.816 + leapSecondsOffset;\n\t}\n\n\t/**\n\t * Converts a Unix time to an ET time.\n\t * @param {number} unix - the Unix time to convert\n\t * @returns {number}\n\t */\n\tstatic unixToEt(unix) {\n\t\tlet leapSecondsOffset = 0;\n\t\tfor (let i = 0; i < _leapSeconds.length; i++) {\n\t\t\tif (unix >= _leapSeconds[i] + 1) {\n\t\t\t\tleapSecondsOffset += 1;\n\t\t\t}\n\t\t}\n\t\treturn unix - 946727957.816 + leapSecondsOffset;\n\t}\n\n\t/**\n\t * Returns the leap seconds array, which is the list of Unix times in seconds right before the leap second.\n\t * @returns {number[]}\n\t */\n\tstatic get leapSeconds() {\n\t\treturn _leapSeconds;\n\t}\n}\n\n/**\n * The array of leap seconds, which is the list of Unix times in seconds right before the leap second.\n * @type {number[]}\n */\nconst _leapSeconds = [\n\tDate.UTC(1972, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1972, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1973, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1974, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1975, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1976, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1977, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1978, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1979, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1981, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1982, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1983, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1985, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1987, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1989, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1990, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1992, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1993, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1994, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1995, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(1997, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(1998, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(2005, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(2008, 12 - 1, 31, 23, 59, 59) / 1000.0,\n\tDate.UTC(2012, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(2015, 6 - 1, 30, 23, 59, 59) / 1000.0,\n\tDate.UTC(2016, 12 - 1, 31, 23, 59, 59) / 1000.0\n];\n","/** @module pioneer */\nimport {\n\tFreezable,\n\tMathUtils,\n\tPool,\n\tTHREE\n} from '../internal';\n\n/** A 2-dimensional vector */\nexport class Vector2 extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<Vector2>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * NaN vector\n\t * @returns {Vector2}\n\t */\n\tstatic get NaN() {\n\t\treturn _nan;\n\t}\n\n\t/**\n\t * Zero vector\n\t * @returns {Vector2}\n\t */\n\tstatic get Zero() {\n\t\treturn _zero;\n\t}\n\n\t/**\n\t * Unit x-axis vector\n\t * @returns {Vector2}\n\t */\n\tstatic get XAxis() {\n\t\treturn _xAxis;\n\t}\n\n\t/**\n\t * Unit y-axis vector\n\t * @returns {Vector2}\n\t */\n\tstatic get YAxis() {\n\t\treturn _yAxis;\n\t}\n\n\t/**\n\t * Constructor.\n\t * @param {number} x\n\t * @param {number} y\n\t */\n\tconstructor(x = 0, y = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._x = x;\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._y = y;\n\t}\n\n\t/**\n\t * Gets the x component.\n\t * @returns {number}\n\t */\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * Sets the x component.\n\t * @param {number} x\n\t */\n\tset x(x) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = x;\n\t}\n\n\t/**\n\t * Gets the y component.\n\t * @returns {number}\n\t */\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\t/**\n\t * Sets the y component.\n\t * @param {number} y\n\t */\n\tset y(y) {\n\t\tthis.throwIfFrozen();\n\t\tthis._y = y;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn '[' + this._x + ', ' + this._y + ']';\n\t}\n\n\t/**\n\t * Returns true if this equals a.\n\t * @param {Vector2} a\n\t * @returns {boolean}\n\t */\n\tequals(a) {\n\t\treturn this._x === a._x && this._y === a._y;\n\t}\n\n\t/**\n\t * Returns true if all components are zero.\n\t * @returns {boolean}\n\t */\n\tisZero() {\n\t\treturn this._x === 0 && this._y === 0;\n\t}\n\n\t/**\n\t * Returns true if any component of the vector is NaN.\n\t * @returns {boolean}\n\t */\n\tisNaN() {\n\t\treturn (!(this._x <= 0) && !(this._x > 0)) || (!(this._y <= 0) && !(this._y > 0));\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {Vector2} a\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x;\n\t\tthis._y = a._y;\n\t}\n\n\t/**\n\t * Sets this to a as a ThreeJs vector.\n\t * @param {THREE.Vector2} a\n\t */\n\tcopyFromThreeJs(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a.x;\n\t\tthis._y = a.y;\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t * @param {number} x\n\t * @param {number} y\n\t */\n\tset(x, y) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t}\n\n\t/**\n\t * Sets this to the negative of a.\n\t * @param {Vector2} a\n\t */\n\tneg(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = -a._x;\n\t\tthis._y = -a._y;\n\t}\n\n\t/**\n\t * Sets this to a + b.\n\t * @param {Vector2} a\n\t * @param {Vector2} b\n\t */\n\tadd(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x + b._x;\n\t\tthis._y = a._y + b._y;\n\t}\n\n\t/**\n\t * Sets this to a - b.\n\t * @param {Vector2} a\n\t * @param {Vector2} b\n\t */\n\tsub(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x - b._x;\n\t\tthis._y = a._y - b._y;\n\t}\n\n\t/**\n\t * Sets this to a * b, where b is a number.\n\t * @param {Vector2} a\n\t * @param {number} b\n\t */\n\tmult(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x * b;\n\t\tthis._y = a._y * b;\n\t}\n\n\t/**\n\t * Sets this to a + b * c, where c is a number.\n\t * @param {Vector2} a\n\t * @param {Vector2} b\n\t * @param {number} c\n\t */\n\taddMult(a, b, c) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x + b._x * c;\n\t\tthis._y = a._y + b._y * c;\n\t}\n\n\t/**\n\t * Sets this to a / b, where b is a number.\n\t * @param {Vector2} a\n\t * @param {number} b\n\t */\n\tdiv(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x / b;\n\t\tthis._y = a._y / b;\n\t}\n\n\t/**\n\t * Sets this to a * b, component-wise multiplication.\n\t * @param {Vector2} a\n\t * @param {Vector2} b\n\t */\n\tscale(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x * b._x;\n\t\tthis._y = a._y * b._y;\n\t}\n\n\t/**\n\t * Sets this to a / b, component-wise division.\n\t * @param {Vector2} a\n\t * @param {Vector2} b\n\t */\n\tscaleInv(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x / b._x;\n\t\tthis._y = a._y / b._y;\n\t}\n\n\t/**\n\t * Returns the dot product of this and a.\n\t * @param {Vector2} a\n\t * @returns {number}\n\t */\n\tdot(a) {\n\t\treturn this._x * a._x + this._y * a._y;\n\t}\n\n\t/**\n\t * Returns a 2D cross product, which can be used for signed angles between vectors.\n\t * @param {Vector2} a\n\t */\n\tcross(a) {\n\t\treturn this._x * a._y - this._y * a._x;\n\t}\n\n\t/**\n\t * Returns the squared length of this vector.\n\t * @returns {number}\n\t */\n\tmagnitudeSqr() {\n\t\treturn this._x * this._x + this._y * this._y;\n\t}\n\n\t/**\n\t * Returns the length of this vector.\n\t * @returns {number}\n\t */\n\tmagnitude() {\n\t\treturn Math.sqrt(this.magnitudeSqr());\n\t}\n\n\t/**\n\t * Sets this to a with a magnitude of 1.0.\n\t * @param {Vector2} a\n\t */\n\tnormalize(a) {\n\t\tthis.throwIfFrozen();\n\t\tconst magnitude = a.magnitude();\n\t\tif (magnitude > 0) {\n\t\t\tthis._x = a._x / magnitude;\n\t\t\tthis._y = a._y / magnitude;\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to a with a given magnitude.\n\t * @param {Vector2} a\n\t * @param {number} magnitude\n\t */\n\tsetMagnitude(a, magnitude) {\n\t\tthis.throwIfFrozen();\n\t\tthis.normalize(a);\n\t\tthis._x *= magnitude;\n\t\tthis._y *= magnitude;\n\t}\n\n\t/**\n\t * Returns the distance between this and a.\n\t * @param {Vector2} a\n\t * @returns {number}\n\t */\n\tdistance(a) {\n\t\tconst x = this._x - a._x;\n\t\tconst y = this._y - a._y;\n\t\treturn Math.sqrt(x * x + y * y);\n\t}\n\n\t/**\n\t * Returns the angle in radians between this and a. If this or a are zero, returns NaN.\n\t * @param {Vector2} a\n\t * @returns {number}\n\t */\n\tangle(a) {\n\t\tconst magnitudes = this.magnitude() * a.magnitude();\n\t\tif (magnitudes > 0) {\n\t\t\treturn Math.acos(MathUtils.clamp(this.dot(a) / magnitudes, -1.0, 1.0));\n\t\t}\n\t\telse {\n\t\t\treturn Number.NaN;\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to a, clamped between min and max, component-wise.\n\t * @param {Vector2} a\n\t * @param {Vector2} min\n\t * @param {Vector2} max\n\t */\n\tclamp(a, min, max) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = MathUtils.clamp(a._x, min._x, max._x);\n\t\tthis._y = MathUtils.clamp(a._y, min._y, max._y);\n\t}\n\n\t/**\n\t * Sets this to the lerp between a and b, where u is the lerp parameter, and it may be clamped between a and b.\n\t * @param {Vector2} a - the value when u = 0\n\t * @param {Vector2} b - the value when u = 1\n\t * @param {number} u - the lerp factor\n\t */\n\tlerp(a, b, u) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = MathUtils.lerp(a._x, b._x, u);\n\t\tthis._y = MathUtils.lerp(a._y, b._y, u);\n\t}\n}\n\n/**\n * @type {Pool<Vector2>}\n */\nconst _pool = new Pool(Vector2);\n\nconst _zero = new Vector2();\n_zero.freeze();\n\nconst _xAxis = new Vector2(1, 0);\n_xAxis.freeze();\n\nconst _yAxis = new Vector2(0, 1);\n_yAxis.freeze();\n\nconst _nan = new Vector2(Number.NaN, Number.NaN);\n_nan.freeze();\n","/** @module pioneer */\nimport {\n\tAER,\n\tFreezable,\n\tMathUtils,\n\tPool,\n\tQuaternion,\n\tTHREE\n} from '../internal';\n\n/** A 3-dimensional vector */\nexport class Vector3 extends Freezable {\n\t/**\n\t * Pool for temporary variables.\n\t * @returns {Pool<Vector3>}\n\t */\n\tstatic get pool() {\n\t\treturn _pool;\n\t}\n\n\t/**\n\t * NaN vector\n\t * @returns {Vector3}\n\t */\n\tstatic get NaN() {\n\t\treturn _nan;\n\t}\n\n\t/**\n\t * Zero vector\n\t * @returns {Vector3}\n\t */\n\tstatic get Zero() {\n\t\treturn _zero;\n\t}\n\n\t/**\n\t * Unit x-axis vector\n\t * @returns {Vector3}\n\t */\n\tstatic get XAxis() {\n\t\treturn _xAxis;\n\t}\n\n\t/**\n\t * Unit y-axis vector\n\t * @returns {Vector3}\n\t */\n\tstatic get YAxis() {\n\t\treturn _yAxis;\n\t}\n\n\t/**\n\t * Unit z-axis vector\n\t * @returns {Vector3}\n\t */\n\tstatic get ZAxis() {\n\t\treturn _zAxis;\n\t}\n\n\t/**\n\t * Unit negative x-axis vector\n\t * @returns {Vector3}\n\t */\n\tstatic get XAxisNeg() {\n\t\treturn _xAxisNeg;\n\t}\n\n\t/**\n\t * Unit negative y-axis vector\n\t * @returns {Vector3}\n\t */\n\tstatic get YAxisNeg() {\n\t\treturn _yAxisNeg;\n\t}\n\n\t/**\n\t * Unit negative z-axis vector\n\t * @returns {Vector3}\n\t */\n\tstatic get ZAxisNeg() {\n\t\treturn _zAxisNeg;\n\t}\n\n\t/**\n\t * Returns the xyz equivalent of azimuth (rotation from x-axis about z-axis), elevation (from x-y plane), and range.\n\t * @param {AER} aer\n\t * @returns {Vector3}\n\t */\n\tstatic fromAER(aer) {\n\t\tconst v = new Vector3();\n\t\tv.setFromAER(aer);\n\t\treturn v;\n\t}\n\n\t/**\n\t * Constructor.\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} z\n\t */\n\tconstructor(x = 0, y = 0, z = 0) {\n\t\tsuper();\n\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._x = x;\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._y = y;\n\t\t/**\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Gets the x component.\n\t * @returns {number}\n\t */\n\tget x() {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * Sets the x component.\n\t * @param {number} x\n\t */\n\tset x(x) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = x;\n\t}\n\n\t/**\n\t * Gets the y component.\n\t * @returns {number}\n\t */\n\tget y() {\n\t\treturn this._y;\n\t}\n\n\t/**\n\t * Sets the y component.\n\t * @param {number} y\n\t */\n\tset y(y) {\n\t\tthis.throwIfFrozen();\n\t\tthis._y = y;\n\t}\n\n\t/**\n\t * Gets the z component.\n\t * @returns {number}\n\t */\n\tget z() {\n\t\treturn this._z;\n\t}\n\n\t/**\n\t * Sets the z component.\n\t * @param {number} z\n\t */\n\tset z(z) {\n\t\tthis.throwIfFrozen();\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Returns a nicely formed string.\n\t * @override\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn '[' + this._x + ', ' + this._y + ', ' + this._z + ']';\n\t}\n\n\t/**\n\t * Returns true if this equals a.\n\t * @param {Vector3} a\n\t * @returns {boolean}\n\t */\n\tequals(a) {\n\t\treturn this._x === a._x && this._y === a._y && this._z === a._z;\n\t}\n\n\t/**\n\t * Returns true if all components are zero.\n\t * @returns {boolean}\n\t */\n\tisZero() {\n\t\treturn this._x === 0 && this._y === 0 && this._z === 0;\n\t}\n\n\t/**\n\t * Returns true if any component in the vector is NaN.\n\t * @returns {boolean}\n\t */\n\tisNaN() {\n\t\treturn (!(this._x <= 0) && !(this._x > 0)) || (!(this._y <= 0) && !(this._y > 0)) || (!(this._z <= 0) && !(this._z > 0));\n\t}\n\n\t/**\n\t * Sets this to a.\n\t * @param {Vector3} a\n\t */\n\tcopy(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x;\n\t\tthis._y = a._y;\n\t\tthis._z = a._z;\n\t}\n\n\t/**\n\t * Sets this to a as a ThreeJs vector.\n\t * @param {THREE.Vector3} a\n\t */\n\tcopyFromThreeJs(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a.x;\n\t\tthis._y = a.y;\n\t\tthis._z = a.z;\n\t}\n\n\t/**\n\t * Sets this to the parameters.\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} z\n\t */\n\tset(x, y, z) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Sets this to the xyz equivalent of azimuth (rotation from x-axis about z-axis), elevation (from x-y plane), and range.\n\t * @param {AER} aer\n\t */\n\tsetFromAER(aer) {\n\t\tthis.throwIfFrozen();\n\t\tconst cosElevation = Math.cos(aer.elevation);\n\t\tthis._x = aer.range * cosElevation * Math.cos(aer.azimuth);\n\t\tthis._y = aer.range * cosElevation * Math.sin(aer.azimuth);\n\t\tthis._z = aer.range * Math.sin(aer.elevation);\n\t}\n\n\t/**\n\t * Sets this to the negative of a.\n\t * @param {Vector3} a\n\t */\n\tneg(a) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = -a._x;\n\t\tthis._y = -a._y;\n\t\tthis._z = -a._z;\n\t}\n\n\t/**\n\t * Sets this to a + b.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t */\n\tadd(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x + b._x;\n\t\tthis._y = a._y + b._y;\n\t\tthis._z = a._z + b._z;\n\t}\n\n\t/**\n\t * Sets this to a - b.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t */\n\tsub(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x - b._x;\n\t\tthis._y = a._y - b._y;\n\t\tthis._z = a._z - b._z;\n\t}\n\n\t/**\n\t * Sets this to a * b, where b is a number.\n\t * @param {Vector3} a\n\t * @param {number} b\n\t */\n\tmult(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x * b;\n\t\tthis._y = a._y * b;\n\t\tthis._z = a._z * b;\n\t}\n\n\t/**\n\t * Sets this to a + b * c, where c is a number.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t * @param {number} c\n\t */\n\taddMult(a, b, c) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x + b._x * c;\n\t\tthis._y = a._y + b._y * c;\n\t\tthis._z = a._z + b._z * c;\n\t}\n\n\t/**\n\t * Sets this to a / b, where b is a number.\n\t * @param {Vector3} a\n\t * @param {number} b\n\t */\n\tdiv(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x / b;\n\t\tthis._y = a._y / b;\n\t\tthis._z = a._z / b;\n\t}\n\n\t/**\n\t * Sets this to a * b, component-wise multiplication.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t */\n\tscale(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x * b._x;\n\t\tthis._y = a._y * b._y;\n\t\tthis._z = a._z * b._z;\n\t}\n\n\t/**\n\t * Sets this to a / b, component-wise division.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t */\n\tscaleInv(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = a._x / b._x;\n\t\tthis._y = a._y / b._y;\n\t\tthis._z = a._z / b._z;\n\t}\n\n\t/**\n\t * Returns the dot product of this and a.\n\t * @param {Vector3} a\n\t * @returns {number}\n\t */\n\tdot(a) {\n\t\treturn this._x * a._x + this._y * a._y + this._z * a._z;\n\t}\n\n\t/**\n\t * Sets this to the cross product of a and b.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t */\n\tcross(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst x = a._y * b._z - a._z * b._y;\n\t\tconst y = a._z * b._x - a._x * b._z;\n\t\tconst z = a._x * b._y - a._y * b._x;\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t}\n\n\t/**\n\t * Returns the squared length of this vector.\n\t * @returns {number}\n\t */\n\tmagnitudeSqr() {\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z;\n\t}\n\n\t/**\n\t * Returns the length of this vector.\n\t * @returns {number}\n\t */\n\tmagnitude() {\n\t\treturn Math.sqrt(this.magnitudeSqr());\n\t}\n\n\t/**\n\t * Returns the length of just the x and y components. Useful in calculations involving spheres.\n\t * @returns {number}\n\t */\n\tmagnitudeXY() {\n\t\treturn Math.sqrt(this._x * this._x + this._y * this._y);\n\t}\n\n\t/**\n\t * Sets this to a with a magnitude of 1.0.\n\t * @param {Vector3} a\n\t */\n\tnormalize(a) {\n\t\tthis.throwIfFrozen();\n\t\tconst magnitude = a.magnitude();\n\t\tif (magnitude > 0) {\n\t\t\tthis._x = a._x / magnitude;\n\t\t\tthis._y = a._y / magnitude;\n\t\t\tthis._z = a._z / magnitude;\n\t\t}\n\t\telse {\n\t\t\tthis.copy(a);\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to a with a given magnitude.\n\t * @param {Vector3} a\n\t * @param {number} magnitude\n\t */\n\tsetMagnitude(a, magnitude) {\n\t\tthis.throwIfFrozen();\n\t\tthis.normalize(a);\n\t\tthis._x *= magnitude;\n\t\tthis._y *= magnitude;\n\t\tthis._z *= magnitude;\n\t}\n\n\t/**\n\t * Returns the distance between this and a.\n\t * @param {Vector3} a\n\t * @returns {number}\n\t */\n\tdistance(a) {\n\t\tconst x = this._x - a._x;\n\t\tconst y = this._y - a._y;\n\t\tconst z = this._z - a._z;\n\t\treturn Math.sqrt(x * x + y * y + z * z);\n\t}\n\n\t/**\n\t * Returns the angle in radians between this and a. If this or a are zero, returns NaN.\n\t * @param {Vector3} a\n\t * @returns {number}\n\t */\n\tangle(a) {\n\t\tconst magnitudes = this.magnitude() * a.magnitude();\n\t\tif (magnitudes > 0) {\n\t\t\treturn Math.acos(MathUtils.clamp(this.dot(a) / magnitudes, -1.0, 1.0));\n\t\t}\n\t\telse {\n\t\t\treturn Number.NaN;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the angle in radians from this to a if they were projected on the plane formed by axis. It can be plus or minus, based on the right-hand rule rotation around axis.\n\t * @param {Vector3} a\n\t * @param {Vector3} axis\n\t * @returns {number}\n\t */\n\tangleAroundAxis(a, axis) {\n\t\tconst thisP = Vector3.pool.get();\n\t\tconst aP = Vector3.pool.get();\n\n\t\t// Project the vectors.\n\t\tthisP.addMult(this, axis, -this.dot(axis));\n\t\taP.addMult(a, axis, -a.dot(axis));\n\n\t\t// Get the angle.\n\t\tlet angle = thisP.angle(aP);\n\n\t\t// Determine the sign of the angle.\n\t\tthisP.cross(thisP, aP);\n\t\tif (thisP.dot(axis) < 0) {\n\t\t\tangle *= -1;\n\t\t}\n\n\t\tVector3.pool.release(thisP);\n\t\tVector3.pool.release(aP);\n\t\treturn angle;\n\t}\n\n\t/**\n\t * Sets this to a, clamped between min and max, component-wise.\n\t * @param {Vector3} a\n\t * @param {Vector3} min\n\t * @param {Vector3} max\n\t */\n\tclamp(a, min, max) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = MathUtils.clamp(a._x, min._x, max._x);\n\t\tthis._y = MathUtils.clamp(a._y, min._y, max._y);\n\t\tthis._z = MathUtils.clamp(a._z, min._z, max._z);\n\t}\n\n\t/**\n\t * Sets this to the lerp between a and b, where u is the lerp parameter, and it may be clamped between a and b.\n\t * @param {Vector3} a - the value when u = 0\n\t * @param {Vector3} b - the value when u = 1\n\t * @param {number} u - the lerp factor\n\t */\n\tlerp(a, b, u) {\n\t\tthis.throwIfFrozen();\n\t\tthis._x = MathUtils.lerp(a._x, b._x, u);\n\t\tthis._y = MathUtils.lerp(a._y, b._y, u);\n\t\tthis._z = MathUtils.lerp(a._z, b._z, u);\n\t}\n\n\t/**\n\t * Sets this to the slerp between a and b, where u is the lerp parameter, and it may be clamped between a and b.\n\t * @param {Vector3} a - the value when u = 0\n\t * @param {Vector3} b - the value when u = 1\n\t * @param {number} u - the lerp factor\n\t */\n\tslerp(a, b, u) {\n\t\tthis.throwIfFrozen();\n\t\tconst aMag = a.magnitude();\n\t\tconst bMag = b.magnitude();\n\t\tif (aMag > 0.0 && bMag > 0.0) {\n\t\t\tconst angle = Math.acos(MathUtils.clamp(a.dot(b) / (aMag * bMag), -1, +1));\n\t\t\tif (Math.abs(angle) > 0.01745327777) { // If less than one degree, just lerp\n\t\t\t\tconst sinAngleInv = 1 / Math.sin(angle);\n\t\t\t\tconst aFactor = Math.sin((1 - u) * angle) * sinAngleInv;\n\t\t\t\tconst bFactor = Math.sin(u * angle) * sinAngleInv;\n\t\t\t\tthis.set(a.x * aFactor / aMag + b.x * bFactor / bMag, a.y * aFactor / aMag + b.y * bFactor / bMag, a.z * aFactor / aMag + b.z * bFactor / bMag);\n\t\t\t\tthis.mult(this, (1 - u) * aMag + u * bMag);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.lerp(a, b, u);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.lerp(a, b, u);\n\t\t}\n\t}\n\n\t/**\n\t * Sets this to the result of the vector b rotated by the quaternion a.\n\t * @param {Quaternion} a\n\t * @param {Vector3} b\n\t */\n\trotate(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst tx = a.w * b._x + a.y * b._z - a.z * b._y;\n\t\tconst ty = a.w * b._y + a.z * b._x - a.x * b._z;\n\t\tconst tz = a.w * b._z + a.x * b._y - a.y * b._x;\n\t\tconst tw = -a.x * b._x - a.y * b._y - a.z * b._z;\n\t\tthis._x = tx * a.w - tw * a.x - ty * a.z + tz * a.y;\n\t\tthis._y = ty * a.w - tw * a.y - tz * a.x + tx * a.z;\n\t\tthis._z = tz * a.w - tw * a.z - tx * a.y + ty * a.x;\n\t}\n\n\t/**\n\t * Sets this to the result of the vector b rotated by the inverse of quaternion a.\n\t * @param {Quaternion} a\n\t * @param {Vector3} b\n\t */\n\trotateInverse(a, b) {\n\t\tthis.throwIfFrozen();\n\t\tconst tx = a.w * b._x - a.y * b._z + a.z * b._y;\n\t\tconst ty = a.w * b._y - a.z * b._x + a.x * b._z;\n\t\tconst tz = a.w * b._z - a.x * b._y + a.y * b._x;\n\t\tconst tw = a.x * b._x + a.y * b._y + a.z * b._z;\n\t\tthis._x = tx * a.w + tw * a.x + ty * a.z - tz * a.y;\n\t\tthis._y = ty * a.w + tw * a.y + tz * a.x - tx * a.z;\n\t\tthis._z = tz * a.w + tw * a.z + tx * a.y - ty * a.x;\n\t}\n\n\t/**\n\t * Sets this to a vector normal to a, in the plane of 'a cross b', such that 'this dot b' is positive.\n\t * @param {Vector3} a\n\t * @param {Vector3} b\n\t */\n\tsetNormalTo(a, b) {\n\t\tconst x = b._x * (a._y * a._y + a._z * a._z) - a._x * (a._y * b._y + a._z * b._z);\n\t\tconst y = b._y * (a._z * a._z + a._x * a._x) - a._y * (a._z * b._z + a._x * b._x);\n\t\tconst z = b._z * (a._x * a._x + a._y * a._y) - a._z * (a._x * b._x + a._y * b._y);\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis.normalize(this);\n\t}\n}\n\n/**\n * @type {Pool<Vector3>}\n */\nconst _pool = new Pool(Vector3);\n\nconst _zero = new Vector3();\n_zero.freeze();\n\nconst _xAxis = new Vector3(1, 0, 0);\n_xAxis.freeze();\n\nconst _yAxis = new Vector3(0, 1, 0);\n_yAxis.freeze();\n\nconst _zAxis = new Vector3(0, 0, 1);\n_zAxis.freeze();\n\nconst _xAxisNeg = new Vector3(-1, 0, 0);\n_xAxis.freeze();\n\nconst _yAxisNeg = new Vector3(0, -1, 0);\n_yAxis.freeze();\n\nconst _zAxisNeg = new Vector3(0, 0, -1);\n_zAxis.freeze();\n\nconst _nan = new Vector3(Number.NaN, Number.NaN, Number.NaN);\n_nan.freeze();\n","/** @module pioneer */\n\n/**\n * Waits until the testFunc returns true.\n * @param {() => boolean} testFunc - The testing function. Returning true stops the wait.\n * @param {number} testInterval - The interval in seconds to wait between tests.\n * @param {number} timeout - The time at which point the promise rejects.\n */\nexport async function waitUntil(testFunc, testInterval, timeout) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet timeSoFar = 0;\n\t\tconst intervalCheck = setInterval(() => {\n\t\t\t// Do the test.\n\t\t\tif (testFunc()) {\n\t\t\t\tclearInterval(intervalCheck);\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\t// Increase the time we've waited.\n\t\t\ttimeSoFar += testInterval;\n\t\t\t// If we've hit the timeout, reject.\n\t\t\tif (timeSoFar >= timeout) {\n\t\t\t\tclearInterval(intervalCheck);\n\t\t\t\treject(new Error());\n\t\t\t}\n\t\t}, testInterval * 1000.0);\n\t});\n}\n","export const Version = '51.0.1';\n","/** @module pioneer */\nimport {\n\tCameraComponent,\n\tCollectionItem,\n\tColor,\n\tEngine,\n\tRect,\n\tTHREE,\n\tVector2,\n\tVector3\n} from './internal';\n\n/**\n * A viewport is where a scene will be rendered through a camera.\n * When it is created, it creates a div element that can be styled, and which is contained in the viewports div.\n * @extends {CollectionItem<Engine>}\n */\nexport class Viewport extends CollectionItem {\n\t/**\n\t * Constructs the viewport. Only called by the engine.\n\t * @param {string} type - The type of the viewport (always 'viewport').\n\t * @param {string} name - The name of the viewport.\n\t * @param {Engine} engine - The engine.\n\t */\n\tconstructor(type, name, engine) {\n\t\tsuper(type, name, engine);\n\n\t\t/**\n\t\t * Flag whether the viewport is enabled or not.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._enabled = true;\n\n\t\t/**\n\t\t * The camera being used to render.\n\t\t * @type {CameraComponent}\n\t\t * @private\n\t\t */\n\t\tthis._camera = null;\n\n\t\t/**\n\t\t * The div that this viewport uses for its bounds.\n\t\t * @type {HTMLDivElement}\n\t\t * @private\n\t\t */\n\t\tthis._div = document.createElement('div');\n\n\t\t/**\n\t\t * The bounds of the viewport. Calculated from the div.\n\t\t * @type {Rect}\n\t\t * @private\n\t\t */\n\t\tthis._bounds = new Rect(0, 0, 0, 0);\n\t\tthis._bounds.freeze();\n\n\t\t/**\n\t\t * The color of the viewport background.\n\t\t * @type {Color}\n\t\t * @private\n\t\t */\n\t\tthis._backgroundColor = new Color(0, 0, 0, 1);\n\t\tthis._backgroundColor.freeze();\n\n\t\t/**\n\t\t * A THREE.Color helper so that a new THREE.Color doesn't need to be generated every frame.\n\t\t * @type {THREE.Color}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsBackgroundColor = new THREE.Color();\n\n\t\t// Configure and add the div.\n\t\tthis._div.style.position = 'absolute';\n\t\tthis._div.style.overflow = 'hidden';\n\t\tthis._div.id = name ?? '';\n\t\tthis._div.classList.add('viewport');\n\t\tif (!this._enabled) {\n\t\t\tthis._div.style.display = 'none';\n\t\t}\n\t\tthis.getEngine().getViewportDiv().appendChild(this._div);\n\n\t\t// Make sure the pixel bounds are valid on startup.\n\t\tconst rootDiv = this.getEngine().getRootDiv();\n\t\tthis._bounds.thaw();\n\t\tthis._bounds.set(this._div.offsetLeft - rootDiv.offsetLeft, this._div.offsetTop - rootDiv.offsetTop, this._div.offsetWidth, this._div.offsetHeight);\n\t\tthis._bounds.freeze();\n\n\t\t// Make this the active viewport if there is none yet.\n\t\tconst input = this.getEngine().getInput();\n\t\tif (input.getActiveViewport() === null) {\n\t\t\tinput.__setActiveViewport(this);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the engine.\n\t * @returns {Engine}\n\t */\n\tgetEngine() {\n\t\treturn this.__getCollectionParent();\n\t}\n\n\t/**\n\t * Gets the div. This can be used to style the viewport.\n\t * @returns {HTMLDivElement}\n\t */\n\tgetDiv() {\n\t\treturn this._div;\n\t}\n\n\t/**\n\t * Gets the pixel bounds within which this viewport renders, relative to the root div.\n\t * @returns {Rect}\n\t */\n\tgetBounds() {\n\t\treturn this._bounds;\n\t}\n\n\t/**\n\t * Gets the background color.\n\t * @returns {Color}\n\t */\n\tgetBackgroundColor() {\n\t\treturn this._backgroundColor;\n\t}\n\n\t/**\n\t * Sets the background color.\n\t * @param {Color} backgroundColor - The color for the background.\n\t */\n\tsetBackgroundColor(backgroundColor) {\n\t\tthis._backgroundColor.thaw();\n\t\tthis._backgroundColor = backgroundColor;\n\t\tthis._backgroundColor.freeze();\n\t\tthis._threeJsBackgroundColor.setRGB(this._backgroundColor.r, this._backgroundColor.g, this._backgroundColor.b);\n\t}\n\n\t/**\n\t * Returns the camera that will be used by this viewport.\n\t * @returns {CameraComponent}\n\t */\n\tgetCamera() {\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Sets the camera that will be used by this viewport.\n\t * @param {CameraComponent} camera\n\t */\n\tsetCamera(camera) {\n\t\tthis._camera = camera;\n\t\tif (this._camera !== null) {\n\t\t\tthis._camera.__setViewport(this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the viewport is enabled.\n\t * @returns {boolean}\n\t */\n\tisEnabled() {\n\t\treturn this._enabled;\n\t}\n\n\t/**\n\t * Sets whether the viewport is enabled or not.\n\t * @param {boolean} enabled\n\t */\n\tsetEnabled(enabled) {\n\t\tthis._enabled = enabled;\n\t\tif (!this._enabled) {\n\t\t\tthis._div.style.display = 'none';\n\t\t}\n\t\telse {\n\t\t\tthis._div.style.display = 'block';\n\t\t}\n\t}\n\n\t/**\n\t * Gets a normal-space position from a pixel-space position. Sets the z coordinate to +1, which is equivalent to the near point of the camera.\n\t * @param {Vector3} outNormalSpacePosition\n\t * @param {Vector2} pixelSpacePosition\n\t */\n\tgetNormalSpacePositionFromPixelSpacePosition(outNormalSpacePosition, pixelSpacePosition) {\n\t\toutNormalSpacePosition.x = 2.0 * (pixelSpacePosition.x - this._bounds.origin.x) / this._bounds.size.x - 1.0;\n\t\toutNormalSpacePosition.y = 1.0 - 2.0 * (pixelSpacePosition.y - this._bounds.origin.y) / this._bounds.size.y;\n\t\toutNormalSpacePosition.z = +1;\n\t}\n\n\t/**\n\t * Gets a pixel-space position from a normal-space position. Ignores the z coordinate.\n\t * @param {Vector2} outPixelSpacePosition\n\t * @param {Vector3} normalSpacePosition\n\t */\n\tgetPixelSpacePositionFromNormalSpacePosition(outPixelSpacePosition, normalSpacePosition) {\n\t\tif (-1.0 < normalSpacePosition.z && normalSpacePosition.z < 1.0) {\n\t\t\toutPixelSpacePosition.x = this._bounds.size.x * (normalSpacePosition.x + 1.0) / 2.0 + this._bounds.origin.x;\n\t\t\toutPixelSpacePosition.y = this._bounds.size.y * (1.0 - normalSpacePosition.y) / 2.0 + this._bounds.origin.y;\n\t\t}\n\t\telse {\n\t\t\toutPixelSpacePosition.copy(Vector2.NaN);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the pixel-space radius from a normal-space radius.\n\t * @param {number} normalSpaceRadius\n\t * @returns {number}\n\t */\n\tgetPixelSpaceRadiusFromNormalSpaceRadius(normalSpaceRadius) {\n\t\treturn normalSpaceRadius * Math.max(this._bounds.size.x, this._bounds.size.y);\n\t}\n\n\t/**\n\t * Gets the normal-space radius from a pixel-space radius.\n\t * @param {number} pixelSpaceRadius\n\t * @returns {number}\n\t */\n\tgetNormalSpaceRadiusFromPixelSpaceRadius(pixelSpaceRadius) {\n\t\treturn pixelSpaceRadius / Math.max(this._bounds.size.x, this._bounds.size.y);\n\t}\n\n\t/**\n\t * Gets the direction in camera-space of the cursor position, or NaN if the cursor is not over the viewport.\n\t * @param {Vector3} outDirection\n\t */\n\tgetDirectionOfCursor(outDirection) {\n\t\tconst camera = this.getCamera();\n\t\tif (camera === null) {\n\t\t\toutDirection.copy(Vector3.NaN);\n\t\t\treturn;\n\t\t}\n\t\t// Get the picked position in normal space.\n\t\tconst input = this.getEngine().getInput();\n\t\tthis.getNormalSpacePositionFromPixelSpacePosition(outDirection, input.getCursorPosition());\n\t\tif (outDirection.x < -1 || outDirection.x > +1\n\t\t\t|| outDirection.y < -1 || outDirection.y > +1\n\t\t\t|| outDirection.z < -1 || outDirection.z > +1) {\n\t\t\toutDirection.copy(Vector3.NaN);\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the picked position in camera space.\n\t\tcamera.getCameraSpacePositionFromNormalSpacePosition(outDirection, outDirection);\n\n\t\t// Turn it into a ray of length 1, going from the camera.\n\t\toutDirection.normalize(outDirection);\n\t}\n\n\t/**\n\t * Removes the div from the viewports div.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\tsuper.__destroy();\n\n\t\t// Clean up the div.\n\t\tthis._div.parentNode.removeChild(this._div);\n\t}\n\n\t/**\n\t * Prepares the camera-dependent variables and those of its connected entities.\n\t * @internal\n\t */\n\t__updateViewportVariables() {\n\t\tif (this._enabled) {\n\t\t\t// Update the bounds.\n\t\t\tthis._bounds.thaw();\n\t\t\tthis._bounds.set(this._div.offsetLeft, this._div.offsetTop, this._div.offsetWidth, this._div.offsetHeight);\n\t\t\tthis._bounds.freeze();\n\n\t\t\t// Update the camera variables for the camera.\n\t\t\tif (this._camera !== null) {\n\t\t\t\tthis._camera.__updateCameraVariablesForConnectedScene();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders the camera in the viewport. Called by Engine.\n\t * @internal\n\t */\n\t__render() {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst renderer = this.getEngine().__getThreeJsRenderer();\n\n\t\tconst positionFromBottomLeft = this.getEngine().getRootDiv().offsetHeight - this._div.offsetTop - this._div.offsetHeight;\n\t\trenderer.setViewport(this._bounds.origin.x, positionFromBottomLeft, this._bounds.size.x, this._bounds.size.y);\n\t\trenderer.setScissor(this._bounds.origin.x, positionFromBottomLeft, this._bounds.size.x, this._bounds.size.y);\n\n\t\tthis._threeJsBackgroundColor.setRGB(this._backgroundColor.r, this._backgroundColor.g, this._backgroundColor.b);\n\t\trenderer.setClearColor(this._threeJsBackgroundColor, this._backgroundColor.a);\n\n\t\t// Render the camera (which renders its scene).\n\t\tif (this._camera !== null) {\n\t\t\tthis._camera.__prepareForRender();\n\n\t\t\tthis._camera.__render();\n\t\t}\n\t\telse {\n\t\t\tthis.getEngine().__getThreeJsRenderer().clear();\n\t\t}\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * Helpful utilities for scenes.\n * @hideconstructor\n */\nexport class Animation {\n\n\t/**\n\t * Makes an animation that makes visible and invisible a subobjects at different times.\n\t * Each keyframe is a [time, visible] pair.\n\t * @param {Pioneer.ModelComponent} model\n\t * @param {string} subobject\n\t * @param {boolean} visibilityAtNegInf\n\t * @param {[number, boolean][]} keyframes\n\t * @returns {Pioneer.CoverageController}\n\t */\n\tstatic makeSubobjectVisibleAnimation(model, subobject, visibilityAtNegInf, keyframes) {\n\t\t// Sort the keyframes by time, just in case they aren't.\n\t\tkeyframes.sort((a, b) => a[0] - b[0]);\n\n\t\t// Get the coverage controller or create one if it doesn't already exist.\n\t\tconst entity = model.getEntity();\n\t\tconst coverageController = entity.addControllerByClass(Pioneer.CoverageController);\n\t\tcoverageController.setCoverage(new Pioneer.Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY));\n\t\tcoverageController.setUpdateFunction((entity) => {\n\t\t\tconst time = entity.getScene().getEngine().getTime();\n\t\t\tconst index = Pioneer.Sort.getIndex(time, keyframes, (a, time) => a[0] < time);\n\t\t\tif (index === 0) { // At first keyframe time or before.\n\t\t\t\tmodel.setHiddenObject(subobject, !visibilityAtNegInf);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmodel.setHiddenObject(subobject, !keyframes[index - 1][1]);\n\t\t\t}\n\t\t});\n\n\t\treturn coverageController;\n\t}\n\n\t/**\n\t * Makes an animation that rotates an entity's joints at different times.\n\t * Each keyframe is a [time, rotation] pair.\n\t * @param {Pioneer.ModelComponent} model\n\t * @param {string} joint\n\t * @param {'x' | 'y' | 'z'} axis\n\t * @param {[number, number][]} keyframes\n\t */\n\tstatic makeJointRotationAnimation(model, joint, axis, keyframes) {\n\t\t// Sort the keyframes by time, just in case they aren't.\n\t\tkeyframes.sort((a, b) => a[0] - b[0]);\n\n\t\t// Get the coverage controller or create one if it doesn't already exist.\n\t\tconst entity = model.getEntity();\n\t\tconst coverageController = entity.addControllerByClass(Pioneer.CoverageController);\n\t\tcoverageController.setCoverage(new Pioneer.Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY));\n\t\tcoverageController.setUpdateFunction((entity) => {\n\t\t\tconst obj = model.getThreeJsObjectByName(joint);\n\t\t\tif (obj !== null) {\n\t\t\t\tconst time = entity.getScene().getEngine().getTime();\n\t\t\t\tconst index = Pioneer.Sort.getIndex(time, keyframes, (a, time) => a[0] < time);\n\t\t\t\tif (index === 0) { // At first keyframe time or before.\n\t\t\t\t\tobj.rotation[axis] = keyframes[0][1];\n\t\t\t\t}\n\t\t\t\telse if (index === keyframes.length) { // After last keyframe time.\n\t\t\t\t\tobj.rotation[axis] = keyframes[keyframes.length - 1][1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst prevKeyframe = keyframes[index - 1];\n\t\t\t\t\tconst nextKeyframe = keyframes[index];\n\t\t\t\t\tconst u = (time - prevKeyframe[0]) / (nextKeyframe[0] - prevKeyframe[0]);\n\t\t\t\t\tobj.rotation[axis] = Pioneer.MathUtils.lerp(prevKeyframe[1], nextKeyframe[1], u);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn coverageController;\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * @callback TransitionFunction\n * @param {Pioneer.Entity} entity\n * @param {Pioneer.Vector3} initialPosition\n * @param {Pioneer.Vector3} finalPosition\n * @param {Pioneer.Quaternion} initialOrientation\n * @param {Pioneer.Quaternion} finalOrientation\n * @param {number} u\n */\n\n/**\n * Helpful functions for viewports and cameras.\n * @hideconstructor\n */\nexport class Cameras {\n\t/**\n\t * Creates a full size (100% width and height) viewport and a camera.\n\t * @param {Pioneer.Scene} scene - the scene in which to create the camera\n\t * @param {string} [viewportName = 'main'] - the name of the viewport\n\t * @param {string} [cameraEntityName = 'camera'] - the name of the camera entity\n\t */\n\tstatic createFullSizeViewportAndCamera(scene, viewportName = 'main', cameraEntityName = 'camera') {\n\t\tconst viewport = scene.getEngine().addViewport(viewportName);\n\t\tviewport.getDiv().style.width = '100%';\n\t\tviewport.getDiv().style.height = '100%';\n\t\tconst cameraEntity = scene.addEntity(cameraEntityName);\n\t\tconst camera = cameraEntity.addComponentByClass(Pioneer.CameraComponent);\n\t\tviewport.setCamera(camera);\n\t}\n\n\t/** Makes the camera align to the focus entity.\n\t * @param {Pioneer.Entity} cameraEntity - the camera entity\n\t * @param {Pioneer.Entity} focusEntity - the entity around which the camera entity will orbit\n\t * @param {Object} options - the options used to setup the camera\n\t * @param {boolean} [options.up = true] - If true, the camera's up will be aligned with the entity.\n\t * @param {boolean} [options.orbiter = false] - If true, the camera's up will be the away from the focus entity's parent, and if false, it will be the z-axis (usually the north pole).\n\t */\n\tstatic focusOnEntity(cameraEntity, focusEntity, { up = true, orbiter = false }) {\n\t\tconst alignController = cameraEntity.addControllerByClass(Pioneer.AlignController);\n\t\talignController.setPrimaryAlignType('point');\n\t\talignController.setPrimaryAxis(Pioneer.Vector3.YAxis);\n\t\talignController.setPrimaryTargetEntity(focusEntity.getName());\n\t\tif (up) {\n\t\t\tif (orbiter) {\n\t\t\t\talignController.setSecondaryAlignType('position');\n\t\t\t\talignController.setSecondaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\talignController.setSecondaryTargetEntity(focusEntity.getName());\n\t\t\t}\n\t\t\telse {\n\t\t\t\talignController.setSecondaryAlignType('align');\n\t\t\t\talignController.setSecondaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\talignController.setSecondaryTargetEntity(focusEntity.getName());\n\t\t\t\talignController.setSecondaryTargetAxis(Pioneer.Vector3.ZAxis);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes the camera look at an entity.\n\t * @param {Pioneer.Entity} cameraEntity - the camera entity\n\t * @param {Pioneer.Entity} focusEntity - the entity that the camera entity will look at\n\t * @param {Object} options - the options used to setup the camera\n\t * @param {number} [options.duration = 0.5] - seconds to do the transition\n\t * @param {Pioneer.Vector3} [options.finalUp] - the final up vector, defaults to undefined, which means no up alignment\n\t * @param {Pioneer.Entity} [options.finalUpRelativeEntity] - the final up vector is relative to this entity, defaults to the focus entity\n\t * @param {boolean} [options.finalUpPosition] - true if the final up vector is the position of the finalUpRelativeEntity relative to its parent\n\t */\n\tstatic async lookAtEntity(cameraEntity, focusEntity, { duration = 0.5, finalUp = undefined, finalUpRelativeEntity = undefined, finalUpPosition = false }) {\n\t\t// If the camera isn't yet anywhere, there's nowhere to look.\n\t\tif (cameraEntity.getPosition().isNaN()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the final forward vector.\n\t\tconst forward = new Pioneer.Vector3();\n\t\tfocusEntity.getPositionRelativeToEntity(forward, Pioneer.Vector3.Zero, cameraEntity);\n\t\tforward.normalize(forward);\n\n\t\t// Remove any other orientation modifying controllers.\n\t\tfor (let i = 0; i < cameraEntity.getNumControllers(); i++) {\n\t\t\tif (cameraEntity.getController(i).hasModifiedState('orientation')) {\n\t\t\t\tcameraEntity.removeController(i);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// Add and setup the align controller.\n\t\tconst alignController = cameraEntity.addControllerByClass(Pioneer.AlignController);\n\t\talignController.setPrimaryAlignType('point');\n\t\talignController.setPrimaryAxis(Pioneer.Vector3.YAxis);\n\t\talignController.setPrimaryTargetEntity(focusEntity.getName());\n\t\tif (finalUp !== undefined) {\n\t\t\tif (finalUpRelativeEntity === undefined) {\n\t\t\t\tfinalUpRelativeEntity = focusEntity;\n\t\t\t}\n\t\t\tif (finalUpPosition) {\n\t\t\t\talignController.setSecondaryAlignType('position');\n\t\t\t\talignController.setSecondaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\talignController.setSecondaryTargetEntity(finalUpRelativeEntity.getName());\n\t\t\t}\n\t\t\telse {\n\t\t\t\talignController.setSecondaryAlignType('align');\n\t\t\t\talignController.setSecondaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\talignController.setSecondaryTargetEntity(finalUpRelativeEntity.getName());\n\t\t\t\talignController.setSecondaryTargetAxis(finalUp);\n\t\t\t}\n\t\t}\n\n\t\t// Add and setup the transition controller.\n\t\tconst transitionController = cameraEntity.addControllerByClass(Pioneer.TransitionController);\n\t\ttransitionController.setTransitionTime(duration);\n\t\tawait transitionController.getEndPromise();\n\t}\n\n\t/**\n\t * Makes the camera go to an object.\n\t * @param {Pioneer.Entity} cameraEntity - the camera entity\n\t * @param {Pioneer.Entity} focusEntity - the entity that the camera will orbit around, starting on the sunny side\n\t * @param {Object} options - the options used to setup the camera\n\t * @param {boolean} [options.up = true] - align the entity to either the north pole of the entity or if it is an orbiter, the position of the orbiter.\n\t * @param {boolean} [options.orbiter = false] - if true, the camera's up will be the away from the focus entity's parent.\n\t * @param {boolean} [options.fixedToParent = false] - if true, the camera will be fixed to the parent and will not drift if the parent rotates.\n\t * @param {number} [options.duration = 0.5] - seconds to do the transition\n\t * @param {number} [options.distance] - how far away from the focus entity the camera should be (default is 5 times focusEntity's radius)\n\t * @param {boolean} [options.zoom = true] - if true, sets a zoom controller\n\t * @param {Pioneer.Vector3} [options.destination] - the location relative to the focus entity to transition to; if undefined it goes to the nearest spot from the camera's current position; this overrides distance\n\t * @param {Pioneer.Vector3} [options.destinationUp] - the up direction that the camera will transition to; if undefined it will use the current up of the camera projected into the forward plane\n\t * @param {boolean} [options.destinationInFocusFrame = false] - if true, the destination and destinationUp are in the orientation frame of the focus entity\n\t * @param {TransitionFunction} [options.transitionFunction] - a manual transition function to use\n\t * @returns {Promise<void>}\n\t */\n\tstatic async goToEntity(cameraEntity, focusEntity, { up = true, orbiter = false, fixedToParent = false, duration = 1.0, distance = undefined, zoom = true, destination = undefined, destinationUp = undefined, destinationInFocusFrame = false, transitionFunction = undefined }) {\n\t\tif (!distance) {\n\t\t\tdistance = focusEntity.getExtentsRadius() * 5.0;\n\t\t}\n\n\t\t// If the camera isn't yet anywhere, set it to a nice location.\n\t\tif (cameraEntity.getPosition().isNaN() || cameraEntity.getOrientation().isNaN()) {\n\t\t\tcameraEntity.setParent(focusEntity);\n\t\t\tif (destination === undefined) {\n\t\t\t\tcameraEntity.setPosition(new Pioneer.Vector3(0, -distance, 0));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcameraEntity.setPosition(destination);\n\t\t\t}\n\t\t\tcameraEntity.setOrientation(Pioneer.Quaternion.Identity);\n\t\t\tduration = 0;\n\t\t}\n\n\t\t// Get the destination position for the end of the transition if there was none set.\n\t\tif (destination === undefined) {\n\t\t\tdestination = new Pioneer.Vector3();\n\t\t\tcameraEntity.getPositionRelativeToEntity(destination, Pioneer.Vector3.Zero, focusEntity);\n\t\t\tdestination.normalize(destination);\n\t\t\tdestination.mult(destination, distance);\n\t\t\tif (destination.isNaN()) {\n\t\t\t\tdestination.set(0, -distance, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set the destination position for the end of the transition.\n\t\tcameraEntity.clearControllers();\n\t\tconst fixedController = cameraEntity.addControllerByClass(Pioneer.FixedController);\n\t\tfixedController.setPosition(destination);\n\n\t\t// Set the destination orientation for the end of the transition.\n\t\tif (destinationUp !== undefined) {\n\t\t\tconst destinationForward = new Pioneer.Vector3();\n\t\t\tconst destUp = new Pioneer.Vector3();\n\t\t\tdestinationForward.neg(destination);\n\t\t\tdestinationForward.normalize(destinationForward);\n\t\t\tdestUp.setNormalTo(destinationForward, destinationUp);\n\t\t\tconst orientation = new Pioneer.Quaternion();\n\t\t\torientation.setFromAxes(undefined, destinationForward, destUp);\n\t\t\tfixedController.setOrientation(orientation);\n\t\t}\n\n\t\tif (destinationInFocusFrame) {\n\t\t\tconst rotateByEntityOrientationController = cameraEntity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\tif (destinationUp === undefined) {\n\t\t\t\trotateByEntityOrientationController.setRotatingOrientation(false);\n\t\t\t}\n\t\t}\n\n\t\tthis.focusOnEntity(cameraEntity, focusEntity, { up, orbiter });\n\n\t\t// Setup the transition.\n\t\tconst transitionController = cameraEntity.addControllerByClass(Pioneer.TransitionController);\n\t\ttransitionController.setTransitionTime(duration);\n\t\ttransitionController.setParent(focusEntity.getName());\n\t\tif (transitionFunction) {\n\t\t\ttransitionController.setTransitionFunction(transitionFunction);\n\t\t}\n\t\tawait transitionController.getEndPromise();\n\n\t\tcameraEntity.clearControllers();\n\t\tconst orbitController = cameraEntity.addControllerByClass(Pioneer.OrbitController);\n\t\tif (up) {\n\t\t\tif (orbiter) {\n\t\t\t\torbitController.setYawAxisType('position');\n\t\t\t}\n\t\t\telse {\n\t\t\t\torbitController.setYawAxisType('z-axis');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcameraEntity.addController('roll');\n\t\t}\n\n\t\tif (fixedToParent) {\n\t\t\tcameraEntity.addController('fixedToParent');\n\t\t}\n\n\t\tif (zoom) {\n\t\t\tcameraEntity.addController('zoom');\n\t\t}\n\n\t\tthis.focusOnEntity(cameraEntity, focusEntity, { up, orbiter });\n\t}\n\n\t/**\n\t * Adds pick controller that calls the callback with the XYZ (ECEF) and the LatLonAlt of the location picked on the entity.\n\t * @param {Pioneer.Entity} cameraEntity\n\t * @param {Pioneer.Entity} pickedEntity\n\t * @param {(xyz: Pioneer.Vector3, lla: Pioneer.LatLonAlt) => void} callback\n\t */\n\tstatic pickOnEntity(cameraEntity, pickedEntity, callback) {\n\t\tconst pickController = cameraEntity.addControllerByClass(Pioneer.PickController);\n\t\tpickController.setPickedEntity(pickedEntity);\n\t\tpickController.setCallback((position) => {\n\t\t\tconst spheroidComponent = pickedEntity.getComponentByClass(Pioneer.SpheroidComponent);\n\t\t\tif (spheroidComponent !== null) {\n\t\t\t\tconst positionInSpheroidFrame = Pioneer.Vector3.pool.get();\n\t\t\t\tpositionInSpheroidFrame.rotateInverse(pickedEntity.getOrientation(), position);\n\t\t\t\tconst lla = Pioneer.LatLonAlt.pool.get();\n\t\t\t\tspheroidComponent.llaFromXYZ(lla, positionInSpheroidFrame);\n\t\t\t\tcallback(positionInSpheroidFrame, lla);\n\t\t\t\tPioneer.LatLonAlt.pool.release(lla);\n\t\t\t\tPioneer.Vector3.pool.release(positionInSpheroidFrame);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Gets the distance that the camera entity should be so that all of the entities are in view.\n\t * @param {Pioneer.Entity} cameraEntity - the camera entity\n\t * @param {Pioneer.Quaternion} cameraOrientation - the orientation that the camera will have, assuming it will be centered on the focus entity\n\t * @param {Pioneer.Entity} focusEntity - the entity that the child will be a child of and pointed at\n\t * @param {Pioneer.Entity[]} entities - the list of entities to keep in view\n\t * @returns {number}\n\t */\n\tstatic getDistanceToFitEntities(cameraEntity, cameraOrientation, focusEntity, entities) {\n\t\tconst cameraComponent = cameraEntity.getComponentByClass(Pioneer.CameraComponent);\n\t\tif (cameraComponent === null) {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tlet distance = 0;\n\t\tconst positionOfEntity = Pioneer.Vector3.pool.get();\n\t\tconst sinHalfHorizontalFov = Math.sin(cameraComponent.getHorizontalFieldOfView() / 2.0);\n\t\tconst sinHalfVerticalFov = Math.sin(cameraComponent.getVerticalFieldOfView() / 2.0);\n\t\tconst tanHalfHorizontalFov = Math.tan(cameraComponent.getHorizontalFieldOfView() / 2.0);\n\t\tconst tanHalfVerticalFov = Math.tan(cameraComponent.getVerticalFieldOfView() / 2.0);\n\n\t\tfor (let i = 0; i < entities.length; i++) {\n\t\t\tconst entity = entities[i];\n\t\t\tlet ringsRadius = 0;\n\t\t\tconst ringsComponent = entity.getComponentByClass(Pioneer.RingsComponent);\n\t\t\tif (ringsComponent !== null) {\n\t\t\t\tringsRadius = ringsComponent.getOuterRadius();\n\t\t\t}\n\n\t\t\t// Get the position of the entity in the camera's rotated frame.\n\t\t\tentity.getPositionRelativeToEntity(positionOfEntity, Pioneer.Vector3.Zero, focusEntity);\n\t\t\tpositionOfEntity.rotateInverse(cameraOrientation, positionOfEntity);\n\n\t\t\t// Get the distances for the horizontal and vertical fovs.\n\t\t\tdistance = Math.max(distance, Math.abs(positionOfEntity.x) / tanHalfHorizontalFov + Math.max(entity.getExtentsRadius(), ringsRadius) / sinHalfHorizontalFov - positionOfEntity.y);\n\t\t\tdistance = Math.max(distance, Math.abs(positionOfEntity.z) / tanHalfVerticalFov + Math.max(entity.getExtentsRadius(), ringsRadius) / sinHalfVerticalFov - positionOfEntity.y);\n\t\t}\n\t\tPioneer.Vector3.pool.release(positionOfEntity);\n\t\treturn distance;\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * A component that renders a colored disc in the x-y plane with an inner and outer radius.\n */\nexport class AnnulusComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The inner-radius of the circular-shaped plane.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._sizeInner = 1;\n\n\t\t/**\n\t\t * The outer-radius of the circular-shaped plane.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._sizeOuter = 1;\n\n\t\t/**\n\t\t * A flag the determines whether or not the plane ignores the distance when determining visibility.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._ignoreDistance = false;\n\n\t\t/**\n\t\t * The calculated transition slope at which the plane will fade out. This is calculated based on the value provided to setMinDistance.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._minDistanceM = 0.0;\n\n\t\t/**\n\t\t * The calculated transition offset at which the plane will fade out. This is calculated based on the value provided to setMinDistance.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._minDistanceB = 0.0;\n\n\t\t/**\n\t\t * The calculated transition slope at which the plane will fade out. This is calculated based on the value provided to setMaxDistance.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxDistanceM = 0.0;\n\n\t\t/**\n\t\t * The calculated transition offset at which the plane will fade out. This is calculated based on the value provided to setMaxDistance.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxDistanceB = 0.0;\n\n\t\t/**\n\t\t * The color of the annulus.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The alpha multiplier determined by fading.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._alphaMultiplier = 1.0;\n\n\t\t/**\n\t\t * The number of points on the circle.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numPointsOnCircle = 200;\n\n\t\t/**\n\t\t * True if the mesh needs to be updated.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._meshDirty = true;\n\n\t\tthis.__setRadius(this._sizeOuter);\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the size of the inner radius. Defaults to 1.\n\t * @returns {number}\n\t */\n\tgetInnerRadius() {\n\t\treturn this._sizeInner;\n\t}\n\n\t/**\n\t * Sets the size of the inner radius.\n\t * @param {number} size\n\t */\n\tsetInnerRadius(size) {\n\t\tthis._sizeInner = size;\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Gets the size of the outer radius.\n\t * @returns {number}\n\t */\n\tgetOuterRadius() {\n\t\treturn this._sizeOuter;\n\t}\n\n\t/**\n\t * Sets the size of the outer radius\n\t * @param {number} size\n\t */\n\tsetOuterRadius(size) {\n\t\tthis._sizeOuter = size;\n\t\tthis._meshDirty = true;\n\t\tthis.__setRadius(size);\n\t}\n\n\t/**\n\t * Sets the component to either consider the distance (false) or ignore the distance (true).\n\t * @param {boolean} ignoreDistance\n\t */\n\tsetIgnoreDistance(ignoreDistance) {\n\t\tthis._ignoreDistance = ignoreDistance;\n\t\tthis._alphaMultiplier = 1.0;\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Sets the minimum distance at which the component should be fully visible.\n\t * @param {number} distance\n\t */\n\tsetMinDistance(distance) {\n\t\tthis._minDistanceM = 1.0 / (distance - distance / 1.1);\n\t\tthis._minDistanceB = -1.0 * this._minDistanceM * distance / 1.1;\n\t}\n\n\t/**\n\t * Sets the maximum distance at which the component should be fully visible.\n\t * @param {number} distance\n\t */\n\tsetMaxDistance(distance) {\n\t\tthis._maxDistanceM = -1.0 / (distance * 1.1 - distance);\n\t\tthis._maxDistanceB = -1.0 * this._maxDistanceM * distance * 1.1;\n\t}\n\n\t/**\n\t * Gets the color of the annulus. Defaults to white.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the annulus. The alpha value should be provided at the component's maximum visibility.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the orientation to the entity's orientation.\n\t\tPioneer.ThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\n\t\tif (this._meshDirty) {\n\t\t\tthis._updateMesh();\n\t\t}\n\n\t\tif (!this._ignoreDistance) {\n\t\t\tconst cameraSpacePosition = this.getEntity().getCameraSpacePosition(camera);\n\t\t\tconst distanceToObject = cameraSpacePosition.magnitude();\n\t\t\tconst minimumDistanceTransition = this._minDistanceM * distanceToObject + this._minDistanceB;\n\t\t\tconst maximumDistanceTransition = this._maxDistanceM * distanceToObject + this._maxDistanceB;\n\t\t\tthis._alphaMultiplier = Pioneer.MathUtils.clamp01(Math.min(minimumDistanceTransition, maximumDistanceTransition));\n\t\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t\t}\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\t// Create the material.\n\t\tconst material = this.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('basic_alpha');\n\t\tthis.getThreeJsMaterials().push(material);\n\t\t// Set the properties.\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(material, 'color', this._color, this._alphaMultiplier);\n\t\t// Create the mesh object.\n\t\tconst object = Pioneer.ThreeJsHelper.createMeshObject(this, material, [{ name: 'position', dimensions: 3 }], false);\n\t\tthis.getThreeJsObjects().push(object);\n\t\t// Return it as loaded.\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tPioneer.ThreeJsHelper.destroyObject(this.getThreeJsObjects()[0]);\n\t\tPioneer.ThreeJsHelper.destroyMaterial(this.getThreeJsMaterials()[0]);\n\t}\n\n\t/**\n\t * Updates the mesh.\n\t * @private\n\t */\n\t_updateMesh() {\n\t\tconst positions = new Float32Array(this._numPointsOnCircle * 4 * 3);\n\t\tconst indices = new Uint16Array(this._numPointsOnCircle * 6);\n\n\t\t// Make the concentric circles.\n\t\tlet positionsIndex = 0;\n\t\tlet indicesIndex = 0;\n\t\tconst position0 = new Pioneer.Vector3();\n\t\tconst position1 = new Pioneer.Vector3();\n\n\t\tconst circleSize = this._sizeOuter;\n\t\tconst circleInnerRatio = this._sizeInner / this._sizeOuter;\n\n\t\tfor (let j = 0; j < this._numPointsOnCircle; j++) {\n\t\t\tconst angle1 = j / this._numPointsOnCircle * Pioneer.MathUtils.twoPi;\n\t\t\tconst angle2 = ((j + 1) % this._numPointsOnCircle) / this._numPointsOnCircle * Pioneer.MathUtils.twoPi;\n\n\t\t\tposition0.set(circleSize * Math.cos(angle1), circleSize * Math.sin(angle1), 0);\n\t\t\tposition1.set(circleSize * Math.cos(angle2), circleSize * Math.sin(angle2), 0);\n\n\t\t\tpositions[positionsIndex + 0] = position0.x * circleInnerRatio;\t// XYZ set for origin (inner)\n\t\t\tpositions[positionsIndex + 1] = position0.y * circleInnerRatio;\n\t\t\tpositions[positionsIndex + 2] = position0.z * circleInnerRatio;\n\n\t\t\tpositions[positionsIndex + 3] = position0.x;\n\t\t\tpositions[positionsIndex + 4] = position0.y;\n\t\t\tpositions[positionsIndex + 5] = position0.z; // CW Edge (left)\n\n\t\t\tpositions[positionsIndex + 6] = position1.x;\n\t\t\tpositions[positionsIndex + 7] = position1.y;\n\t\t\tpositions[positionsIndex + 8] = position1.z; // CCW Edge (right)\n\n\t\t\tpositions[positionsIndex + 9] = position1.x * circleInnerRatio;\n\t\t\tpositions[positionsIndex + 10] = position1.y * circleInnerRatio;\n\t\t\tpositions[positionsIndex + 11] = position1.z * circleInnerRatio; // CCW Edge (Inner)\n\n\t\t\tindices[indicesIndex + 0] = positionsIndex / 3 + 0;\n\t\t\tindices[indicesIndex + 1] = positionsIndex / 3 + 1;\n\t\t\tindices[indicesIndex + 2] = positionsIndex / 3 + 2;\n\t\t\tindices[indicesIndex + 3] = positionsIndex / 3 + 2;\n\t\t\tindices[indicesIndex + 4] = positionsIndex / 3 + 3;\n\t\t\tindices[indicesIndex + 5] = positionsIndex / 3 + 0;\n\n\t\t\tpositionsIndex += 12;\n\t\t\tindicesIndex += 6;\n\t\t}\n\t\tconst geometry = /** @type {Pioneer.THREE.Mesh} */(this.getThreeJsObjects()[0]).geometry;\n\t\tPioneer.ThreeJsHelper.setVertices(geometry, 'position', positions);\n\t\tPioneer.ThreeJsHelper.setIndices(geometry, indices);\n\t\tthis._meshDirty = false;\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * The Celestial Grid component.\n * */\nexport class CelestialGridComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The number of degrees per line.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._degreesPerLine = 10;\n\n\t\t/**\n\t\t * The color of the grid.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The LineMesh object used to do the drawing.\n\t\t * @type {Pioneer.LineMesh}\n\t\t * @private\n\t\t */\n\t\tthis._lineMesh = null;\n\n\t\t/**\n\t\t * True if the mesh needs to be updated.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Sets the radius of the grid.\n\t * @param {number} radius\n\t */\n\tsetRadius(radius) {\n\t\tthis.__setRadius(radius);\n\t\tPioneer.ThreeJsHelper.setScale(this.getThreeJsObjects(), this.getRadius());\n\t}\n\n\t/**\n\t * Gets the color of the grid. Defaults to white.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the grid.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Gets the number of degrees per line. Defaults to 10.\n\t * @returns {number}\n\t */\n\tgetDegreesPerLine() {\n\t\treturn this._degreesPerLine;\n\t}\n\n\t/**\n\t * Sets the number of degrees per line.\n\t * @param {number} degreesPerLine\n\t */\n\tsetDegreesPerLine(degreesPerLine) {\n\t\tthis._degreesPerLine = degreesPerLine;\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\tif (this._meshDirty) {\n\t\t\tthis._updateMesh();\n\t\t}\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects(), this.getEntity(), camera);\n\n\t\t// Call the line mesh prepare for render.\n\t\tthis._lineMesh.prepareForRender(camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tthis._lineMesh = new Pioneer.LineMesh(this);\n\t\tthis._updateMesh();\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n\n\t/**\n\t * Updates the mesh positions and colors.\n\t * @private\n\t */\n\t_updateMesh() {\n\t\tconst positions = [];\n\t\tfor (let lon0 = 0; lon0 < 360; lon0 += this._degreesPerLine) {\n\t\t\tconst lon1 = Math.min(lon0 + this._degreesPerLine, 360);\n\t\t\tconst lon0Rad = Pioneer.MathUtils.degToRad(lon0);\n\t\t\tconst lon1Rad = Pioneer.MathUtils.degToRad(lon1);\n\t\t\tfor (let lat0 = -90; lat0 < 90; lat0 += this._degreesPerLine) {\n\t\t\t\tconst lat1 = Math.min(lat0 + this._degreesPerLine, 90);\n\t\t\t\tconst lat0Rad = Pioneer.MathUtils.degToRad(lat0);\n\t\t\t\tconst lat1Rad = Pioneer.MathUtils.degToRad(lat1);\n\t\t\t\t// Make a horizontal line.\n\t\t\t\tif (-90 < lat0 && lat0 < 90) {\n\t\t\t\t\tpositions.push(new Pioneer.Vector3(Math.sin(lon0Rad) * Math.cos(lat0Rad), Math.cos(lon0Rad) * Math.cos(lat0Rad), Math.sin(lat0Rad)));\n\t\t\t\t\tpositions.push(new Pioneer.Vector3(Math.sin(lon1Rad) * Math.cos(lat0Rad), Math.cos(lon1Rad) * Math.cos(lat0Rad), Math.sin(lat0Rad)));\n\t\t\t\t}\n\t\t\t\t// Make a vertical line.\n\t\t\t\tpositions.push(new Pioneer.Vector3(Math.sin(lon0Rad) * Math.cos(lat0Rad), Math.cos(lon0Rad) * Math.cos(lat0Rad), Math.sin(lat0Rad)));\n\t\t\t\tpositions.push(new Pioneer.Vector3(Math.sin(lon0Rad) * Math.cos(lat1Rad), Math.cos(lon0Rad) * Math.cos(lat1Rad), Math.sin(lat1Rad)));\n\t\t\t}\n\t\t}\n\t\tconst colors = [];\n\t\tfor (let i = 0, l = positions.length; i < l; i++) {\n\t\t\tcolors.push(this._color);\n\t\t}\n\t\tconst widths = [];\n\t\tfor (let i = 0, l = positions.length; i < l; i++) {\n\t\t\twidths.push(2);\n\t\t}\n\t\tthis._lineMesh.setPositions(positions);\n\t\tthis._lineMesh.setColors(colors);\n\t\tthis._lineMesh.setWidths(widths);\n\n\t\t// Set the Three.js object orientation to the identity.\n\t\tPioneer.ThreeJsHelper.setOrientation(this.getThreeJsObjects(), Pioneer.Quaternion.Identity);\n\n\t\t// Set the Three.js object scale to be the radius of the component.\n\t\tPioneer.ThreeJsHelper.setScale(this.getThreeJsObjects(), this.getRadius());\n\n\t\tthis._meshDirty = false;\n\t}\n}\n","/** @module pioneer-scripts */\nimport { SceneHelpers } from '../scene_helpers';\nimport * as Pioneer from 'pioneer';\n\n/**\n * Constellations.\n */\nexport class ConstellationsComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The url used for the database.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._url = '';\n\n\t\t/**\n\t\t * The database. They match the ordering of the labelEntities.\n\t\t * @type {DatabaseEntry[]}\n\t\t */\n\t\tthis._database = [];\n\n\t\t/**\n\t\t * The number of vertices in each line mesh.\n\t\t * @type {number[]}\n\t\t * @private\n\t\t */\n\t\tthis._numVertices = [];\n\n\t\t/**\n\t\t * The label entities.\n\t\t * @type {Pioneer.Entity[]}\n\t\t * @private\n\t\t */\n\t\tthis._labelEntities = [];\n\n\t\t/**\n\t\t * The color of the lines.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color();\n\n\t\t/**\n\t\t * The width of the lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lineWidth = 2;\n\n\t\t/**\n\t\t * The glow width for the lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._glowWidth = 0;\n\n\t\t/**\n\t\t * The index of the constellation to be highlighted.\n\t\t * @type {number | undefined}\n\t\t * @private\n\t\t */\n\t\tthis._highlightedIndex = undefined;\n\n\t\t/**\n\t\t * The color of the highlight.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._highlightColor = new Pioneer.Color();\n\n\t\t/**\n\t\t * The width of of the highlight lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._highlightWidth = 0;\n\n\t\t/**\n\t\t * The line meshes.\n\t\t * @type {Pioneer.LineMesh[]}\n\t\t * @private\n\t\t */\n\t\tthis._lineMeshes = [];\n\n\t\t// Set the radius to infinite, since it extends to all of the stars in the constellations.\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Sets the color of the lines.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.copy(color);\n\n\t\t// Set the color for every line mesh.\n\t\tfor (let i = 0; i < this._lineMeshes.length; i++) {\n\t\t\tconst colors = [];\n\t\t\tfor (let j = 0; j < this._numVertices[i]; j++) {\n\t\t\t\tcolors.push(this._color);\n\t\t\t}\n\t\t\tthis._lineMeshes[i].setColors(colors);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the width of the lines.\n\t * @param {number} lineWidth\n\t */\n\tsetLineWidth(lineWidth) {\n\t\tthis._lineWidth = lineWidth;\n\n\t\t// Set the width of the line meshes.\n\t\tfor (let i = 0; i < this._lineMeshes.length; i++) {\n\t\t\tthis._lineMeshes[i].setWidths(lineWidth);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the glow for the lines.\n\t * @param {number} glowWidth\n\t */\n\tsetGlowWidth(glowWidth) {\n\t\tthis._glowWidth = glowWidth;\n\t\tfor (let i = 0, l = this._lineMeshes.length; i < l; i++) {\n\t\t\tthis._lineMeshes[i].setGlowWidth(this._glowWidth);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the database.\n\t * @param {string} url\n\t */\n\tsetUrl(url) {\n\t\tthis._url = url;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Generates and returns a list of the constellation names. Each label entity is named \"constellation_label_<name>\".\n\t * @returns {string[]}\n\t */\n\tgetNames() {\n\t\tconst names = [];\n\t\tfor (let i = 0, l = this._database.length; i < l; i++) {\n\t\t\tnames.push(this._database[i].name);\n\t\t}\n\t\treturn names;\n\t}\n\n\t/**\n\t * Sets the contellation at the index to be highlighted. Use undefined for the index to clear the highlighting.\n\t * @param {number | undefined} hightlightedIndex\n\t * @param {Pioneer.Color} highlightColor\n\t * @param {number} highlightWidth\n\t */\n\tsetHighlight(hightlightedIndex, highlightColor, highlightWidth) {\n\t\t// Unhighlight the previous lineMesh.\n\t\tif (this._lineMeshes.length > 0 && this._highlightedIndex !== undefined) {\n\t\t\tconst colors = [];\n\t\t\tfor (let i = 0, l = this._numVertices[this._highlightedIndex]; i < l; i++) {\n\t\t\t\tcolors.push(this._color);\n\t\t\t}\n\t\t\tthis._lineMeshes[this._highlightedIndex].setColors(colors);\n\t\t\tthis._lineMeshes[this._highlightedIndex].setWidths(this._lineWidth);\n\t\t}\n\n\t\t// Set the highlight vars.\n\t\tthis._highlightedIndex = hightlightedIndex;\n\t\tthis._highlightColor.copy(highlightColor);\n\t\tthis._highlightWidth = highlightWidth;\n\n\t\t// Highlight the new lineMesh.\n\t\tif (this._lineMeshes.length > 0 && this._highlightedIndex !== undefined) {\n\t\t\tconst colors = [];\n\t\t\tfor (let i = 0, l = this._numVertices[this._highlightedIndex]; i < l; i++) {\n\t\t\t\tcolors.push(this._highlightColor);\n\t\t\t}\n\t\t\tthis._lineMeshes[this._highlightedIndex].setColors(colors);\n\t\t\tthis._lineMeshes[this._highlightedIndex].setWidths(this._highlightWidth);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the index of the constellation nearest to the pixel-space position. If there is none, returns undefined\n\t * @param {Pioneer.Vector2} pixelSpacePosition\n\t * @param {Pioneer.CameraComponent} camera\n\t */\n\tgetNearestConstellationIndex(pixelSpacePosition, camera) {\n\t\t/** @type {number | undefined} */\n\t\tlet nearestIndex;\n\t\tlet nearestDistance = Number.POSITIVE_INFINITY;\n\t\tfor (let i = 0, l = this._labelEntities.length; i < l; i++) {\n\t\t\tconst dist = pixelSpacePosition.distance(this._labelEntities[i].getPixelSpacePosition(camera));\n\t\t\tif (dist < nearestDistance) {\n\t\t\t\tnearestDistance = dist;\n\t\t\t\tnearestIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn nearestIndex;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects(), this.getEntity(), camera);\n\n\t\t// Call the line meshes prepare for render.\n\t\tfor (let i = 0; i < this._lineMeshes.length; i++) {\n\t\t\tthis._lineMeshes[i].prepareForRender(camera);\n\t\t}\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\tthis._labelEntities = [];\n\t\tthis._lineMeshes = [];\n\t\tthis._numVertices = [];\n\n\t\tconst result = await this.getEntity().getScene().getEngine().getDownloader().download(this._url, true);\n\t\tif (result.status === 'completed' && result.content instanceof ArrayBuffer) {\n\t\t\tconst reader = new Pioneer.Reader(result.content);\n\n\t\t\twhile (!reader.isAtEnd()) {\n\t\t\t\tconst entry = /** @type {DatabaseEntry} */({\n\t\t\t\t\tname: '',\n\t\t\t\t\tstars: [],\n\t\t\t\t\tsegments: [],\n\t\t\t\t\tcolor: []\n\t\t\t\t});\n\n\t\t\t\tentry.name = reader.readString(reader.readByte());\n\n\t\t\t\tentry.color = [\n\t\t\t\t\treader.readByte(),\n\t\t\t\t\treader.readByte(),\n\t\t\t\t\treader.readByte(),\n\t\t\t\t\treader.readByte()\n\t\t\t\t];\n\n\t\t\t\tconst starCount = reader.readByte();\n\t\t\t\tfor (let i = 0; i < starCount; i++) {\n\t\t\t\t\tentry.stars.push([\n\t\t\t\t\t\treader.readFloat32(),\n\t\t\t\t\t\treader.readFloat32(),\n\t\t\t\t\t\treader.readFloat32()\n\t\t\t\t\t]);\n\t\t\t\t}\n\n\t\t\t\tconst segmentCount = reader.readByte() * 2;\n\t\t\t\tfor (let i = 0; i < segmentCount; i++) {\n\t\t\t\t\tentry.segments.push(reader.readByte());\n\t\t\t\t}\n\n\t\t\t\tthis._database.push(entry);\n\t\t\t}\n\t\t}\n\n\t\t// Create the lines.\n\t\tfor (let i = 0; i < this._database.length; i++) {\n\t\t\tconst stars = this._database[i].stars;\n\t\t\tconst segments = this._database[i].segments;\n\t\t\tconst positions = [];\n\t\t\tconst colors = [];\n\t\t\tconst widths = [];\n\n\t\t\tfor (let j = 0; j < segments.length; j++) {\n\t\t\t\tconst starIndex = segments[j];\n\t\t\t\tpositions.push(new Pioneer.Vector3(stars[starIndex][2], -stars[starIndex][0], stars[starIndex][1]));\n\t\t\t\tcolors.push(i === this._highlightedIndex ? this._highlightColor : this._color);\n\t\t\t\twidths.push(i === this._highlightedIndex ? this._highlightWidth : this._lineWidth);\n\t\t\t}\n\t\t\tconst lineMesh = new Pioneer.LineMesh(this);\n\t\t\tlineMesh.setPositions(positions);\n\t\t\tlineMesh.setColors(colors);\n\t\t\tlineMesh.setWidths(widths);\n\t\t\tlineMesh.setGlowWidth(this._glowWidth);\n\t\t\tthis._lineMeshes.push(lineMesh);\n\t\t\tthis._numVertices.push(segments.length);\n\t\t}\n\t\tPioneer.ThreeJsHelper.setOrientation(this.getThreeJsObjects(), SceneHelpers.getEclipJ2000ToJ2000Rotation());\n\n\t\t// Create the labels as child entities with div components.\n\t\tfor (let i = 0; i < this._database.length; i++) {\n\t\t\tconst stars = this._database[i].stars;\n\t\t\t// Calculate the min and max bounds for the center.\n\t\t\tconst minBounds = new Pioneer.Vector3(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n\t\t\tconst maxBounds = new Pioneer.Vector3(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\t\t\tconst distance = Math.sqrt(stars[0][0] * stars[0][0] + stars[0][1] * stars[0][1] + stars[0][2] * stars[0][2]);\n\t\t\tfor (let j = 0; j < stars.length; j++) {\n\t\t\t\tconst star = stars[j];\n\t\t\t\tconst position = new Pioneer.Vector3();\n\t\t\t\tposition.set(star[2], -star[0], star[1]);\n\t\t\t\tposition.rotate(SceneHelpers.getEclipJ2000ToJ2000Rotation(), position);\n\t\t\t\tposition.normalize(position);\n\t\t\t\tposition.mult(position, distance);\n\t\t\t\tif (minBounds.x > position.x) {\n\t\t\t\t\tminBounds.x = position.x;\n\t\t\t\t}\n\t\t\t\tif (maxBounds.x < position.x) {\n\t\t\t\t\tmaxBounds.x = position.x;\n\t\t\t\t}\n\t\t\t\tif (minBounds.y > position.y) {\n\t\t\t\t\tminBounds.y = position.y;\n\t\t\t\t}\n\t\t\t\tif (maxBounds.y < position.y) {\n\t\t\t\t\tmaxBounds.y = position.y;\n\t\t\t\t}\n\t\t\t\tif (minBounds.z > position.z) {\n\t\t\t\t\tminBounds.z = position.z;\n\t\t\t\t}\n\t\t\t\tif (maxBounds.z < position.z) {\n\t\t\t\t\tmaxBounds.z = position.z;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Get the center point of the constellation.\n\t\t\tconst center = new Pioneer.Vector3();\n\t\t\tcenter.add(minBounds, maxBounds);\n\t\t\tcenter.mult(center, 0.5);\n\t\t\t// Create a new entity that's a child of this entity at the center.\n\t\t\tconst labelEntity = this.getEntity().getScene().addEntity('constellation_label_' + this._database[i].name);\n\t\t\tlabelEntity.setParent(this.getEntity());\n\t\t\tlabelEntity.setOrientation(Pioneer.Quaternion.Identity);\n\t\t\tlabelEntity.setPosition(center);\n\t\t\t// Add a div component to that entity with the name of the constellation.\n\t\t\tconst divComponent = labelEntity.addComponentByClass(Pioneer.DivComponent);\n\t\t\tdivComponent.setAlignment(new Pioneer.Vector2(0.5, 0.5));\n\t\t\tconst div = divComponent.getDiv();\n\t\t\tdiv.classList.add('pioneer-constellation-label');\n\t\t\tdiv.innerHTML = this._database[i].name;\n\t\t\t// Add it to the list of label entities.\n\t\t\tthis._labelEntities.push(labelEntity);\n\t\t}\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\t// Clean up the label entities.\n\t\tfor (let i = 0; i < this._labelEntities.length; i++) {\n\t\t\tthis.getEntity().getScene().removeEntity(this._labelEntities[i]);\n\t\t}\n\t\t// Clean up the objects and materials created by the line meshes.\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\t// Make the line meshes null.\n\t\tthis._lineMeshes = [];\n\t\t// Clear the database.\n\t\tthis._database = [];\n\t}\n}\n\n/**\n * @typedef {object} DatabaseEntry\n * @property {string} name - the name of the constellation\n * @property {number[][]} stars - the list of star positions, each entry being a 3-array XYZ in J2000Eclipse coordinates.\n * @property {number[]} segments - the list of segments, each pair being a line, and each indexing an entry in the stars list.\n * @property {number[]} color - a 3-array of RGB values from 0 to 255.\n */\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * A grid in the shape of a disc.\n */\nexport class DiscGridComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The size of the grid.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._size = 1;\n\n\t\t/**\n\t\t * The color of the grid.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The width of the lines in pixels.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lineWidth = 1;\n\n\t\t/**\n\t\t * The number of radial points to render.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numCircles = 10;\n\n\t\t/**\n\t\t * The number of circular points to render.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numSpokes = 20;\n\n\t\t/**\n\t\t * The power that each concentric circle radius is raised to.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._radialPower = 1;\n\n\t\t/**\n\t\t * A flag the determines whether or not the grid ignores the distance when determining visibility.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._ignoreDistance = false;\n\n\t\t/**\n\t\t * The LineMesh object used to do the drawing.\n\t\t * @type {Pioneer.LineMesh}\n\t\t * @private\n\t\t */\n\t\tthis._lineMesh = null;\n\n\t\t/**\n\t\t * True if the mesh needs to be updated.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._meshDirty = true;\n\n\t\t// Set the initial size.\n\t\tthis.__setRadius(this._size);\n\n\t\t// It uses the entity's orientation.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the size of the grid. Defaults to 1.\n\t * @returns {number}\n\t */\n\tgetSize() {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Sets the size of the grid.\n\t * @param {number} size\n\t */\n\tsetSize(size) {\n\t\tthis._size = size;\n\t\tthis.__setRadius(this._size);\n\t\tif (this._lineMesh !== null) {\n\t\t\tthis._lineMesh.setScale(this._size);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the color of the grid. Defaults to white.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the grid.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Gets the width of the lines in pixels.\n\t * @returns {number}\n\t */\n\tgetLineWidth() {\n\t\treturn this._lineWidth;\n\t}\n\n\t/**\n\t * Sets the width of the lines in pixels. Defaults to 1.\n\t * @param {number} lineWidth\n\t */\n\tsetLineWidth(lineWidth) {\n\t\tthis._lineWidth = lineWidth;\n\t\tif (this._lineMesh !== null) {\n\t\t\tthis._lineMesh.setWidths(this._lineWidth);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the number of concentric circles to place. Defaults to 10.\n\t * @returns {number}\n\t */\n\tgetNumCircles() {\n\t\treturn this._numCircles;\n\t}\n\n\t/**\n\t * Sets the number of concentric circles to place.\n\t * @param {number} numCircles\n\t */\n\tsetNumCircles(numCircles) {\n\t\tthis._numCircles = numCircles;\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Gets the number of spokes to place. Defaults to 50.\n\t * @returns {number}\n\t */\n\tgetNumSpokes() {\n\t\treturn this._numSpokes;\n\t}\n\n\t/**\n\t * Sets the number of spokes to place.\n\t * @param {number} numSpokes\n\t */\n\tsetNumSpokes(numSpokes) {\n\t\tthis._numSpokes = numSpokes;\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Gets the power that each concentric circle is raised to compared to the next inner circle. Defaults to 1.\n\t * @returns {number}\n\t */\n\tgetRadialPower() {\n\t\treturn this._radialPower;\n\t}\n\n\t/**\n\t * Sets the power that each concentric circle is raised to compared to the next inner circle.\n\t * @param {number} radialPower\n\t */\n\tsetRadialPower(radialPower) {\n\t\tthis._radialPower = radialPower;\n\t\tthis._meshDirty = true;\n\t}\n\n\t/**\n\t * Ignores the distance when determining whether it should show the grid or not. Defaults to false.\n\t * @param {boolean} ignoreDistance\n\t */\n\tsetIgnoreDistance(ignoreDistance) {\n\t\tthis._ignoreDistance = ignoreDistance;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\tif (this._meshDirty) {\n\t\t\tthis._updateMesh();\n\t\t}\n\n\t\tif (!this._ignoreDistance) {\n\t\t\tconst normalizedSizeOfEntity = this.getEntity().getNormalSpaceExtentsRadius(camera);\n\t\t\tconst alphaMultiplier = (0.02 - normalizedSizeOfEntity) / 0.02;\n\t\t\tthis._lineMesh.setAlphaMultiplier(alphaMultiplier);\n\t\t}\n\n\t\tthis._lineMesh.prepareForRender(camera);\n\n\t\t// Set the orientation to the entity's orientation.\n\t\tfor (let i = 0, l = this.getThreeJsObjects().length; i < l; i++) {\n\t\t\tPioneer.ThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[i], this.getEntity());\n\n\t\t\t// Set the Three.js object position the entity's camera-space position.\n\t\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[i], this.getEntity(), camera);\n\t\t}\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\t// Create the line mesh.\n\t\tthis._lineMesh = new Pioneer.LineMesh(this);\n\n\t\t// Update the vertices.\n\t\tthis._updateMesh();\n\n\t\t// Set the scale.\n\t\tthis._lineMesh.setScale(this._size);\n\n\t\t// Resolve immediately.\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n\n\t/**\n\t * Updates the mesh.\n\t * @private\n\t */\n\t_updateMesh() {\n\t\t// Make the concentric circles.\n\t\tconst positions = [];\n\t\tfor (let i = 1; i <= this._numCircles; i++) {\n\t\t\tconst circleSize = this._radialPower !== 1 ? Math.pow(this._radialPower, i - this._numCircles) : (i / this._numCircles);\n\t\t\tconst numOfPointsOnCircle = 50;\n\t\t\tfor (let j = 0; j < numOfPointsOnCircle; j++) {\n\t\t\t\tconst angle1 = j / numOfPointsOnCircle * Pioneer.MathUtils.twoPi;\n\t\t\t\tconst angle2 = ((j + 1) % numOfPointsOnCircle) / numOfPointsOnCircle * Pioneer.MathUtils.twoPi;\n\t\t\t\tpositions.push(new Pioneer.Vector3(circleSize * Math.cos(angle1), circleSize * Math.sin(angle1), 0));\n\t\t\t\tpositions.push(new Pioneer.Vector3(circleSize * Math.cos(angle2), circleSize * Math.sin(angle2), 0));\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < this._numSpokes; i++) {\n\t\t\tconst angle1 = i / this._numSpokes * Pioneer.MathUtils.twoPi;\n\t\t\tpositions.push(Pioneer.Vector3.Zero);\n\t\t\tpositions.push(new Pioneer.Vector3(Math.cos(angle1), Math.sin(angle1), 0));\n\t\t}\n\t\tconst colors = [];\n\t\tfor (let i = 0, l = positions.length; i < l; i++) {\n\t\t\tcolors.push(this._color);\n\t\t}\n\t\tthis._lineMesh.setPositions(positions);\n\t\tthis._lineMesh.setColors(colors);\n\t\tthis._lineMesh.setWidths(this._lineWidth);\n\t\tthis._meshDirty = false;\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * The Orbit Line component.\n * */\nexport class OrbitLineComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The color of the line.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The alpha fade on the far side of the orbit.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._farSideAlphaFade = 1;\n\n\t\t/**\n\t\t * The width of the line.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._lineWidth = 5;\n\n\t\t/**\n\t\t * The glow width for the lines.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._glowWidth = 0;\n\n\t\t/**\n\t\t * The LineMesh object used to do the drawing.\n\t\t * @type {Pioneer.LineMesh}\n\t\t * @private\n\t\t */\n\t\tthis._lineMesh = null;\n\n\t\t/**\n\t\t * The positions for the line mesh.\n\t\t * @type {Pioneer.Vector3[]}\n\t\t * @private\n\t\t */\n\t\tthis._positions = [];\n\n\t\t/**\n\t\t * The colors for the line mesh.\n\t\t * @type {Pioneer.Color[]}\n\t\t * @private\n\t\t */\n\t\tthis._colors = [];\n\n\t\t/**\n\t\t * The widths for the line mesh.\n\t\t * @type {number[]}\n\t\t * @private\n\t\t */\n\t\tthis._widths = [];\n\n\t\t/**\n\t\t * An array that determines the pixel-space radii at which it has 0 and 1 alpha.\n\t\t * @type {[number, number]}\n\t\t * @private\n\t\t */\n\t\tthis._pixelSpaceRadiiAlphaFade = [5, 1];\n\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Gets the color of the grid. Defaults to white.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the grid. Defaults to white.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tif (this._lineMesh !== null) {\n\t\t\tfor (let i = 0, l = this._colors.length; i < l; i++) {\n\t\t\t\tthis._colors[i].copy(this._color);\n\t\t\t}\n\t\t\tthis._lineMesh.setColors(this._colors);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the alpha fade on the far side of the orbit.\n\t * @returns {number}\n\t */\n\tgetFarSideAlphaFade() {\n\t\treturn this._farSideAlphaFade;\n\t}\n\n\t/**\n\t * Sets the alpha fade on the far side of the orbit. Defaults to 1.\n\t * @param {number} alphaFade\n\t */\n\tsetFarSideAlphaFade(alphaFade) {\n\t\tthis._farSideAlphaFade = alphaFade;\n\t}\n\n\t/**\n\t * Gets the width of the line.\n\t * @returns {number}\n\t */\n\tgetLineWidth() {\n\t\treturn this._lineWidth;\n\t}\n\n\t/**\n\t * Sets the width of the line. Defaults to 5.\n\t * @param {number} lineWidth\n\t */\n\tsetLineWidth(lineWidth) {\n\t\tthis._lineWidth = lineWidth;\n\t\tif (this._lineMesh !== null) {\n\t\t\tfor (let i = 0, l = this._widths.length; i < l; i++) {\n\t\t\t\tthis._widths[i] = this._lineWidth;\n\t\t\t}\n\t\t\tthis._lineMesh.setWidths(this._widths);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the glow for the lines.\n\t * @param {number} glowWidth\n\t */\n\tsetGlowWidth(glowWidth) {\n\t\tthis._glowWidth = glowWidth;\n\t\tPioneer.ThreeJsHelper.setUniformNumber(this.getThreeJsMaterials()[0], 'glowWidth', this._glowWidth);\n\t}\n\n\t/**\n\t * Sets values that determine the pixel-space radii at which it has 0 and 1 alpha. Defaults to 5, 1.\n\t * @param {number} radiusFor0Alpha\n\t * @param {number} radiusFor1Alpha\n\t */\n\tsetPixelSpaceRadiiAlphaFade(radiusFor0Alpha, radiusFor1Alpha) {\n\t\tthis._pixelSpaceRadiiAlphaFade[0] = radiusFor0Alpha;\n\t\tthis._pixelSpaceRadiiAlphaFade[1] = radiusFor1Alpha;\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\n\t\t// Update the mesh.\n\t\tthis._updateMesh();\n\n\t\t// Update the pixel-space radius alpha fade.\n\t\tconst pixelSpaceRadius = this.getEntity().getPixelSpaceExtentsRadius(camera);\n\t\tif (!isNaN(pixelSpaceRadius)) {\n\t\t\tconst fadeU = (pixelSpaceRadius - this._pixelSpaceRadiiAlphaFade[0]) / (this._pixelSpaceRadiiAlphaFade[1] - this._pixelSpaceRadiiAlphaFade[0]);\n\t\t\tthis._lineMesh.setAlphaMultiplier(Pioneer.MathUtils.lerp(0, 1, Pioneer.MathUtils.clamp01(fadeU)));\n\t\t}\n\t\telse {\n\t\t\tthis._lineMesh.setAlphaMultiplier(1);\n\t\t}\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects(), this.getEntity(), camera);\n\n\t\t// Call the line mesh prepare for render.\n\t\tthis._lineMesh.prepareForRender(camera);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\tthis._lineMesh = new Pioneer.LineMesh(this);\n\n\t\t// Setup the arrays for the line mesh.\n\t\tfor (let i = 0, l = 360 * 2; i < l; i++) {\n\t\t\tthis._positions.push(new Pioneer.Vector3());\n\t\t\tthis._colors.push(new Pioneer.Color());\n\t\t\tthis._colors[i].copy(this._color);\n\t\t\tthis._widths.push(this._lineWidth);\n\t\t}\n\n\t\t// Set the widths and colors for the line mesh.\n\t\tthis._lineMesh.setColors(this._colors);\n\t\tthis._lineMesh.setWidths(this._widths);\n\t\tthis._lineMesh.setGlowWidth(this._glowWidth);\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\t// Clean up the arrays for the line mesh.\n\t\tthis._positions = [];\n\t\tthis._colors = [];\n\t\tthis._widths = [];\n\n\t\t// Clean up the objects and line mesh.\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t\tthis._lineMesh = null;\n\t}\n\n\t/**\n\t * Updates the mesh positions and colors.\n\t * @private\n\t */\n\t_updateMesh() {\n\t\t// Find the GM from the last covered dynamo orb controller.\n\t\tconst entity = this.getEntity();\n\t\tconst currentTime = entity.getScene().getEngine().getTime();\n\t\tlet gm = 0;\n\t\tfor (let i = entity.getNumControllers() - 1; i >= 0; i--) {\n\t\t\tconst controller = entity.getControllerByClass(Pioneer.DynamoController, i);\n\t\t\tif (controller !== null && controller.getCoverage().contains(currentTime)) {\n\t\t\t\tif (controller.getPointType() === 'orb') {\n\t\t\t\t\tgm = controller.getHeaderValue('gravitationalParameter1') + controller.getHeaderValue('gravitationalParameter2');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get the orbital elements from the current position and velocity.\n\t\torbitalElements.setFromPositionAndVelocity(entity.getPosition(), entity.getVelocity(), currentTime, gm);\n\n\t\t// Get the true and eccentric anomaly of the current position, used for the alpha fade.\n\t\tconst entityPosition = entity.getPosition();\n\t\tconst trueAnomalyAtCurrentTime = orbitalElements.getTrueAnomalyFromPosition(entityPosition);\n\t\tconst eccentricAnomalyAtCurrentTime = orbitalElements.getEccentricAnomalyFromTrueAnomaly(trueAnomalyAtCurrentTime);\n\n\t\t// Calculate the new positions and colors.\n\t\tlet lastMeanAnomalyNaN = false;\n\t\tfor (let angle = 0; angle < 360; angle += 1) {\n\t\t\t// The indices for the vertices.\n\t\t\tconst index0 = angle * 2;\n\t\t\tconst index1 = (angle * 2 - 1 + this._positions.length) % this._positions.length;\n\n\t\t\t// Calculate the position given the angle, which is the true anomaly.\n\t\t\tlet eccentricAnomaly = orbitalElements.getEccentricAnomalyFromTrueAnomaly(Pioneer.MathUtils.degToRad(angle - 180));\n\t\t\tconst eccentricAnomalyNext = orbitalElements.getEccentricAnomalyFromTrueAnomaly(Pioneer.MathUtils.degToRad(angle + 1 - 180));\n\t\t\tif ((eccentricAnomaly < eccentricAnomalyAtCurrentTime && eccentricAnomalyAtCurrentTime < eccentricAnomalyNext)\n\t\t\t\t|| (eccentricAnomalyNext < eccentricAnomalyAtCurrentTime && eccentricAnomalyAtCurrentTime < eccentricAnomaly)) {\n\t\t\t\teccentricAnomaly = eccentricAnomalyAtCurrentTime;\n\t\t\t}\n\t\t\tconst meanAnomaly = orbitalElements.getMeanAnomalyFromEccentricAnomaly(eccentricAnomaly);\n\t\t\tconst time = orbitalElements.epoch + (meanAnomaly - orbitalElements.meanAnomalyAtEpoch) / orbitalElements.meanAngularMotion;\n\t\t\tconst position = this._positions[index0];\n\t\t\torbitalElements.project(position, velocity, time);\n\t\t\tposition.sub(position, entityPosition);\n\t\t\tthis._positions[index1].copy(position);\n\n\t\t\t// If the mean anomaly is NaN, disconnect the segments around it.\n\t\t\tif (isNaN(meanAnomaly)) {\n\t\t\t\tlastMeanAnomalyNaN = true;\n\t\t\t\tconst index2 = (index0 + 1) % this._positions.length;\n\t\t\t\tconst index3 = (index1 - 1 + this._positions.length) % this._positions.length;\n\t\t\t\tthis._positions[index0].set(0, 0, 0);\n\t\t\t\tthis._positions[index1].set(0, 0, 0);\n\t\t\t\tthis._positions[index2].set(0, 0, 0);\n\t\t\t\tthis._positions[index3].set(0, 0, 0);\n\t\t\t\tthis._colors[index0].a = 0;\n\t\t\t\tthis._colors[index1].a = 0;\n\t\t\t\tthis._colors[index2].a = 0;\n\t\t\t\tthis._colors[index3].a = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get the alpha fade based on the current true anomaly of the entity.\n\t\t\tlet alphaFadeU = 0.0;\n\t\t\talphaFadeU = Pioneer.MathUtils.angle(eccentricAnomaly, eccentricAnomalyAtCurrentTime) / Math.PI;\n\t\t\talphaFadeU = Pioneer.MathUtils.clamp01(alphaFadeU);\n\t\t\tconst alphaFade = Pioneer.MathUtils.lerp(1.0, this._farSideAlphaFade, alphaFadeU);\n\t\t\tthis._colors[index0].mult(this._color, alphaFade);\n\t\t\tif (!lastMeanAnomalyNaN) {\n\t\t\t\tthis._colors[index1].mult(this._color, alphaFade);\n\t\t\t}\n\n\t\t\t// It got here, so mark the last mean anomaly as valid.\n\t\t\tlastMeanAnomalyNaN = false;\n\t\t}\n\n\t\t// If we're at the end of the loop and the eccentricity is para/hyperbolic, disconnect the loop.\n\t\tif (orbitalElements.eccentricity >= 1) {\n\t\t\tthis._positions[this._positions.length - 2].copy(this._positions[this._positions.length - 3]);\n\t\t\tthis._positions[this._positions.length - 1].copy(this._positions[this._positions.length - 3]);\n\t\t\tthis._colors[this._colors.length - 2].a = 0;\n\t\t\tthis._colors[this._colors.length - 1].a = 0;\n\t\t}\n\n\t\t// Set the line mesh positions.\n\t\tthis._lineMesh.setPositions(this._positions);\n\t\tthis._lineMesh.setColors(this._colors);\n\t}\n}\n\nconst orbitalElements = new Pioneer.OrbitalElements();\nconst velocity = new Pioneer.Vector3();\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * The Shadow Cone component.\n * */\nexport class ShadowConeComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The color of the grid.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The other entity to use as the source of the cone.\n\t\t * @type {Pioneer.EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._sourceEntity = new Pioneer.EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The shadow type to use the umbra or penumbra.\n\t\t * @type {'umbra' | 'penumbra'}\n\t\t * @private\n\t\t */\n\t\tthis._shadowType = 'umbra';\n\n\t\t/**\n\t\t * The target entity for the shadow to extend to.\n\t\t * @type {Pioneer.EntityRef}\n\t\t * @private\n\t\t */\n\t\tthis._targetEntity = new Pioneer.EntityRef(this.getEntity().getScene());\n\n\t\t/**\n\t\t * The distance interval over which the component is visible.\n\t\t * @type {Pioneer.Interval}\n\t\t * @private\n\t\t */\n\t\tthis._visibleDistanceInterval = new Pioneer.Interval(0, Number.POSITIVE_INFINITY);\n\t\tthis._visibleDistanceInterval.freeze();\n\n\t\t/**\n\t\t * The alpha multiplier determined by fading.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._alphaMultiplier = 1.0;\n\n\t\t/**\n\t\t * The number of vertices on the circle.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._numberOfCirclePoints = 20;\n\n\t\tthis.__setRadius(Number.POSITIVE_INFINITY);\n\t}\n\n\t/**\n\t * Gets the color of the grid. Defaults to white.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the cone. Defaults to white.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Gets the other entity to use as the source of the cone.\n\t * @returns {string}\n\t */\n\tgetSourceEntity() {\n\t\treturn this._sourceEntity.getName();\n\t}\n\n\t/**\n\t * Sets the other entity to use as the source of the cone.\n\t * @param {string} name\n\t */\n\tsetSourceEntity(name) {\n\t\tthis._sourceEntity.setName(name);\n\t}\n\n\t/**\n\t * Gets the target entity for the shadow to extend to.\n\t * @returns {string}\n\t */\n\tgetTargetEntity() {\n\t\treturn this._targetEntity.getName();\n\t}\n\n\t/**\n\t * Sets the target entity for the shadow to extend to.\n\t * @param {string} name\n\t */\n\tsetTargetEntity(name) {\n\t\tthis._targetEntity.setName(name);\n\t}\n\n\t/**\n\t * Gets the shadow type to use the umbra or penumbra. Defaults to 'umbra'.\n\t * @returns {'umbra' | 'penumbra'}\n\t */\n\tgetShadowType() {\n\t\treturn this._shadowType;\n\t}\n\n\t/**\n\t * Sets the shadow type to use the umbra or penumbra. Defaults to 'umbra'.\n\t * @param {'umbra' | 'penumbra'} shadowType\n\t */\n\tsetShadowType(shadowType) {\n\t\tthis._shadowType = shadowType;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the distance interval over which the component is visible. Defaults to [0, infinity).\n\t * @returns {Pioneer.Interval}\n\t */\n\tgetVisibleDistanceInterval() {\n\t\treturn this._visibleDistanceInterval;\n\t}\n\n\t/**\n\t * Sets the distance interval over which the component is visible. Defaults to [0, infinity).\n\t * @param {Pioneer.Interval} distanceInterval\n\t */\n\tsetVisibleDistanceInterval(distanceInterval) {\n\t\tthis._visibleDistanceInterval.thaw();\n\t\tthis._visibleDistanceInterval.copy(distanceInterval);\n\t\tthis._visibleDistanceInterval.freeze();\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\n\t\t// Update the mesh to reflect the cone.\n\t\tthis._updateMesh();\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\n\t\t// Make the cone fade if the camera is outside a visible distance interval.\n\t\tconst cameraSpacePosition = this.getEntity().getCameraSpacePosition(camera);\n\t\tconst distanceToObject = cameraSpacePosition.magnitude();\n\t\tconst diffFadeDistance = (this._visibleDistanceInterval.max - this._visibleDistanceInterval.min) * 0.5;\n\t\tconst minFadeDistance = Math.min(this._visibleDistanceInterval.min * 0.5, diffFadeDistance);\n\t\tconst maxFadeDistance = Math.min(this._visibleDistanceInterval.max * 0.5, diffFadeDistance);\n\t\tif (distanceToObject < this._visibleDistanceInterval.min + minFadeDistance) {\n\t\t\tthis._alphaMultiplier = Math.max(0, (distanceToObject - this._visibleDistanceInterval.min) / minFadeDistance);\n\t\t}\n\t\telse if (distanceToObject > this._visibleDistanceInterval.max - maxFadeDistance) {\n\t\t\tthis._alphaMultiplier = Math.max(0, (this._visibleDistanceInterval.max - distanceToObject) / maxFadeDistance);\n\t\t}\n\t\telse {\n\t\t\tthis._alphaMultiplier = 1.0;\n\t\t}\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\n\t\t// Create the material.\n\t\tconst material = this.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('basic_alpha');\n\t\tthis.getThreeJsMaterials().push(material);\n\n\t\t// Set the uniforms.\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(material, 'color', this._color, this._alphaMultiplier);\n\n\t\t// Create the mesh object.\n\t\tconst object = Pioneer.ThreeJsHelper.createMeshObject(this, material, [{ name: 'position', dimensions: 3 }], false);\n\t\tthis.getThreeJsObjects().push(object);\n\n\t\t// Create the mesh geometry.\n\t\tthis._createMesh();\n\n\t\t// Return it as loaded.\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Creates the mesh.\n\t * @private\n\t */\n\t_createMesh() {\n\n\t\t// The arrays.\n\t\tconst positions = new Float32Array(this._numberOfCirclePoints * 2 * 3);\n\t\tconst indices = new Uint16Array(this._numberOfCirclePoints * 6);\n\n\t\t// Go around the circle and set the indices.\n\t\tfor (let i = 0; i < this._numberOfCirclePoints; i++) {\n\t\t\tconst iPlus1 = (i + 1) % this._numberOfCirclePoints;\n\t\t\tindices[i * 6 + 0] = i;\n\t\t\tindices[i * 6 + 1] = iPlus1;\n\t\t\tindices[i * 6 + 2] = iPlus1 + this._numberOfCirclePoints;\n\t\t\tindices[i * 6 + 3] = iPlus1 + this._numberOfCirclePoints;\n\t\t\tindices[i * 6 + 4] = i + this._numberOfCirclePoints;\n\t\t\tindices[i * 6 + 5] = i;\n\t\t}\n\n\t\t// Apply the positions and indices.\n\t\tconst geometry = /** @type {Pioneer.THREE.Mesh} */(this.getThreeJsObjects()[0]).geometry;\n\t\tPioneer.ThreeJsHelper.setVertices(geometry, 'position', positions);\n\t\tPioneer.ThreeJsHelper.setIndices(geometry, indices);\n\t}\n\n\t/**\n\t * Updates the mesh positions and colors.\n\t * @private\n\t */\n\t_updateMesh() {\n\n\t\t// Get the source entity, and do nothing if not found.\n\t\tconst sourceEntity = this._sourceEntity.get();\n\t\tif (sourceEntity === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the target entity (it may be null).\n\t\tconst targetEntity = this._targetEntity.get();\n\n\t\t// Get the source and this radius.\n\t\tconst sourceRadius = sourceEntity.getExtentsRadius();\n\t\tconst thisRadius = this.getEntity().getExtentsRadius();\n\n\t\t// Get the distance and axis from the sourceEntity to this entity.\n\t\tconst axis = Pioneer.Vector3.pool.get();\n\t\tthis.getEntity().getPositionRelativeToEntity(axis, Pioneer.Vector3.Zero, sourceEntity);\n\t\tconst distanceToSource = axis.magnitude();\n\t\taxis.normalize(axis);\n\t\tif (axis.isNaN()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the distance between this entity and the target entity.\n\t\tlet distanceToTarget = thisRadius * 10;\n\t\tif (targetEntity !== null) {\n\t\t\tconst targetAxis = Pioneer.Vector3.pool.get();\n\t\t\ttargetEntity.getPositionRelativeToEntity(targetAxis, Pioneer.Vector3.Zero, this.getEntity());\n\t\t\tdistanceToTarget = targetAxis.magnitude();\n\t\t\tPioneer.Vector3.pool.release(targetAxis);\n\t\t}\n\n\t\t// Get the attribute array to modify.\n\t\tconst attribute = /** @type {Pioneer.THREE.Mesh} */(this.getThreeJsObjects()[0]).geometry.getAttribute('position');\n\t\tconst array = attribute.array;\n\n\t\t// Calculate the different offsets and radii of the cone.\n\t\tlet radius0;\n\t\tlet radius1;\n\t\tlet offset0;\n\t\tlet offset1;\n\t\tif (this._shadowType === 'umbra') {\n\t\t\tconst cosAngleOfTangent = (sourceRadius - thisRadius) / distanceToSource;\n\t\t\tconst sinAngleOfTangent = Math.sqrt(1 - cosAngleOfTangent * cosAngleOfTangent);\n\t\t\tconst offsetFocus = thisRadius / cosAngleOfTangent;\n\t\t\tconst radiusFactor = cosAngleOfTangent / sinAngleOfTangent;\n\t\t\toffset0 = thisRadius * cosAngleOfTangent;\n\t\t\toffset1 = Math.min(distanceToTarget, offsetFocus);\n\t\t\tradius0 = radiusFactor * (offsetFocus - offset0);\n\t\t\tradius1 = radiusFactor * (offsetFocus - offset1);\n\t\t}\n\t\telse { // 'penumbra'\n\t\t\tconst cosAngleOfTangent = (sourceRadius + thisRadius) / distanceToSource;\n\t\t\tconst sinAngleOfTangent = Math.sqrt(1 - cosAngleOfTangent * cosAngleOfTangent);\n\t\t\tconst offsetFocus = -thisRadius / cosAngleOfTangent;\n\t\t\tconst radiusFactor = cosAngleOfTangent / sinAngleOfTangent;\n\t\t\toffset0 = -thisRadius * cosAngleOfTangent;\n\t\t\toffset1 = distanceToTarget;\n\t\t\tradius0 = -radiusFactor * (offsetFocus - offset0);\n\t\t\tradius1 = -radiusFactor * (offsetFocus - offset1);\n\t\t}\n\n\t\t// If this entity has a spheroid, it might cause clipping issues with the cone, so increase the radius0 by a small amount.\n\t\tif (this.getEntity().getComponentByClass(Pioneer.SpheroidComponent) !== null) {\n\t\t\tradius0 *= 1.02;\n\t\t}\n\n\t\t// Go around the circle.\n\t\tfor (let i = 0; i < this._numberOfCirclePoints; i++) {\n\t\t\tconst angleI = i / this._numberOfCirclePoints * Pioneer.MathUtils.twoPi;\n\t\t\tconst xI = Math.cos(angleI);\n\t\t\tconst yI = Math.sin(angleI);\n\n\t\t\t// Set the position.\n\t\t\tarray[i * 3 + 0] = radius0 * xI;\n\t\t\tarray[i * 3 + 1] = radius0 * yI;\n\t\t\tarray[i * 3 + 2] = offset0;\n\t\t\tarray[(i + this._numberOfCirclePoints) * 3 + 0] = radius1 * xI;\n\t\t\tarray[(i + this._numberOfCirclePoints) * 3 + 1] = radius1 * yI;\n\t\t\tarray[(i + this._numberOfCirclePoints) * 3 + 2] = offset1;\n\t\t}\n\n\t\t// Mark that the attribute changed.\n\t\tattribute.needsUpdate = true;\n\n\t\t// Set the Three.js object orientation to have the z-axis be the axis.\n\t\tconst orientation = Pioneer.Quaternion.pool.get();\n\t\tconst rotation = Pioneer.Quaternion.pool.get();\n\t\tconst forward = Pioneer.Vector3.pool.get();\n\t\torientation.copyFromThreeJs(this.getThreeJsObjects()[0].quaternion);\n\t\torientation.getAxis(forward, 2);\n\t\trotation.setFromVectorFromTo(forward, axis);\n\t\torientation.mult(rotation, orientation);\n\t\tPioneer.ThreeJsHelper.setOrientation(this.getThreeJsObjects()[0], orientation);\n\t\tPioneer.Quaternion.pool.release(orientation);\n\t\tPioneer.Vector3.pool.release(forward);\n\t\tPioneer.Quaternion.pool.release(rotation);\n\t\tPioneer.Vector3.pool.release(axis);\n\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * A component that renders a colored torus aligned in the x-y plane with an inner and outer radius.\n */\nexport class TorusComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The color.\n\t\t * @type {Pioneer.Color}\n\t\t * @private\n\t\t */\n\t\tthis._color = new Pioneer.Color(1, 1, 1, 1);\n\t\tthis._color.freeze();\n\n\t\t/**\n\t\t * The inner radius.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._innerRadius = 1;\n\n\t\t/**\n\t\t * The outer radius.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._outerRadius = 10;\n\n\t\t/**\n\t\t * The distance interval over which the component is visible.\n\t\t * @type {Pioneer.Interval}\n\t\t * @private\n\t\t */\n\t\tthis._visibleDistanceInterval = new Pioneer.Interval(0, Number.POSITIVE_INFINITY);\n\t\tthis._visibleDistanceInterval.freeze();\n\n\t\t/**\n\t\t * The alpha multiplier determined by fading.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._alphaMultiplier = 1.0;\n\n\t\tthis.__setRadius(this._outerRadius);\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Gets the color of the annulus. Defaults to white.\n\t * @returns {Pioneer.Color}\n\t */\n\tgetColor() {\n\t\treturn this._color;\n\t}\n\n\t/**\n\t * Sets the color of the annulus. The alpha value should be provided at the component's maximum visibility.\n\t * @param {Pioneer.Color} color\n\t */\n\tsetColor(color) {\n\t\tthis._color.thaw();\n\t\tthis._color.copy(color);\n\t\tthis._color.freeze();\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Gets the inner radius.\n\t * @returns {number}\n\t */\n\tgetInnerRadius() {\n\t\treturn this._innerRadius;\n\t}\n\n\t/**\n\t * Sets the inner radius. Defaults to 1.\n\t * @param {number} size\n\t */\n\tsetInnerRadius(size) {\n\t\tthis._innerRadius = size;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the outer radius.\n\t * @returns {number}\n\t */\n\tgetOuterRadius() {\n\t\treturn this._outerRadius;\n\t}\n\n\t/**\n\t * Sets the outer radius. Defaults to 10.\n\t * @param {number} radius\n\t */\n\tsetOuterRadius(radius) {\n\t\tthis._outerRadius = radius;\n\t\tthis.__setRadius(this._outerRadius);\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the distance interval over which the component is visible.\n\t * @returns {Pioneer.Interval}\n\t */\n\tgetVisibleDistanceInterval() {\n\t\treturn this._visibleDistanceInterval;\n\t}\n\n\t/**\n\t * Sets the distance interval over which the component is visible. Defaults to [0, infinity).\n\t * @param {Pioneer.Interval} distanceInterval\n\t */\n\tsetVisibleDistanceInterval(distanceInterval) {\n\t\tthis._visibleDistanceInterval.thaw();\n\t\tthis._visibleDistanceInterval.copy(distanceInterval);\n\t\tthis._visibleDistanceInterval.freeze();\n\t}\n\n\t/**\n\t * Prepare the component for rendering.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @package\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the orientation to the entity's orientation.\n\t\tPioneer.ThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects()[0], this.getEntity());\n\n\t\t// Set the Three.js object position the entity's camera-space position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects()[0], this.getEntity(), camera);\n\n\t\t// Make the torus fade if the camera is outside a visible distance interval.\n\t\tconst cameraSpacePosition = this.getEntity().getCameraSpacePosition(camera);\n\t\tconst distanceToObject = cameraSpacePosition.magnitude();\n\t\tconst diffFadeDistance = (this._visibleDistanceInterval.max - this._visibleDistanceInterval.min) * 0.5;\n\t\tconst minFadeDistance = Math.min(this._visibleDistanceInterval.min * 0.5, diffFadeDistance);\n\t\tconst maxFadeDistance = Math.min(this._visibleDistanceInterval.max * 0.5, diffFadeDistance);\n\t\tif (distanceToObject < this._visibleDistanceInterval.min + minFadeDistance) {\n\t\t\tthis._alphaMultiplier = Math.max(0, (distanceToObject - this._visibleDistanceInterval.min) / minFadeDistance);\n\t\t}\n\t\telse if (distanceToObject > this._visibleDistanceInterval.max - maxFadeDistance) {\n\t\t\tthis._alphaMultiplier = Math.max(0, (this._visibleDistanceInterval.max - distanceToObject) / maxFadeDistance);\n\t\t}\n\t\telse {\n\t\t\tthis._alphaMultiplier = 1.0;\n\t\t}\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(this.getThreeJsMaterials()[0], 'color', this._color, this._alphaMultiplier);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void>}\n\t * @override\n\t * @protected\n\t */\n\t__loadResources() {\n\t\t// Create the material.\n\t\tconst material = this.getEntity().getScene().getEngine().getMaterialManager().getPreloaded('basic_alpha');\n\t\tthis.getThreeJsMaterials().push(material);\n\n\t\t// Set the uniforms.\n\t\tPioneer.ThreeJsHelper.setUniformColorRGBA(material, 'color', this._color, this._alphaMultiplier);\n\n\t\t// Create the mesh object.\n\t\tconst object = Pioneer.ThreeJsHelper.createMeshObject(this, material, [{ name: 'position', dimensions: 3 }], false);\n\t\tthis.getThreeJsObjects().push(object);\n\n\t\t// Create the mesh geometry.\n\t\tthis._createMesh();\n\n\t\t// Return it as loaded.\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tPioneer.ThreeJsHelper.destroyAllObjectsAndMaterials(this);\n\t}\n\n\t/**\n\t * Creates the mesh.\n\t * @private\n\t */\n\t_createMesh() {\n\t\t// Constants to use for a good number of segments.\n\t\tconst numberOfCirclePoints = 100;\n\t\tconst numberOfTorusPoints = 20;\n\n\t\t// The arrays.\n\t\tconst positions = new Float32Array(numberOfCirclePoints * numberOfTorusPoints * 3);\n\t\tconst indices = new Uint16Array(numberOfCirclePoints * numberOfTorusPoints * 6);\n\n\t\t// Saved variables for quicker calculations.\n\t\tconst middleRadius = (this._outerRadius + this._innerRadius) / 2;\n\t\tconst diffRadius = (this._outerRadius - this._innerRadius) / 2;\n\n\t\t// Go around the main circle.\n\t\tfor (let i = 0; i < numberOfCirclePoints; i++) {\n\t\t\tconst angleI = i / numberOfCirclePoints * Pioneer.MathUtils.twoPi;\n\t\t\tconst xI = Math.cos(angleI);\n\t\t\tconst yI = Math.sin(angleI);\n\n\t\t\t// Go around a circle segment of the main circle.\n\t\t\tfor (let j = 0; j < numberOfTorusPoints; j++) {\n\t\t\t\tconst angleJ = j / numberOfTorusPoints * Pioneer.MathUtils.twoPi;\n\t\t\t\tconst rJ = Math.cos(angleJ);\n\t\t\t\tconst zJ = Math.sin(angleJ);\n\n\t\t\t\t// Set the position.\n\t\t\t\tconst positionsIndex = (i * numberOfTorusPoints + j) * 3;\n\t\t\t\tpositions[positionsIndex + 0] = xI * (middleRadius + diffRadius * rJ);\n\t\t\t\tpositions[positionsIndex + 1] = yI * (middleRadius + diffRadius * rJ);\n\t\t\t\tpositions[positionsIndex + 2] = diffRadius * zJ;\n\n\t\t\t\t// Set the indices of the quad.\n\t\t\t\tconst indicesIndex = (i * numberOfTorusPoints + j) * 6;\n\t\t\t\tconst iPlus1 = (i + 1) % numberOfCirclePoints;\n\t\t\t\tconst jPlus1 = (j + 1) % numberOfTorusPoints;\n\t\t\t\tindices[indicesIndex + 0] = i * numberOfTorusPoints + j;\n\t\t\t\tindices[indicesIndex + 1] = iPlus1 * numberOfTorusPoints + j;\n\t\t\t\tindices[indicesIndex + 2] = i * numberOfTorusPoints + jPlus1;\n\t\t\t\tindices[indicesIndex + 3] = iPlus1 * numberOfTorusPoints + jPlus1;\n\t\t\t\tindices[indicesIndex + 4] = i * numberOfTorusPoints + jPlus1;\n\t\t\t\tindices[indicesIndex + 5] = iPlus1 * numberOfTorusPoints + j;\n\t\t\t}\n\t\t}\n\n\t\t// Apply the positions and indices.\n\t\tconst geometry = /** @type {Pioneer.THREE.Mesh} */(this.getThreeJsObjects()[0]).geometry;\n\t\tPioneer.ThreeJsHelper.setVertices(geometry, 'position', positions);\n\t\tPioneer.ThreeJsHelper.setIndices(geometry, indices);\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\nimport proj4 from 'proj4';\n\n/**\n * The capabilities XML file.\n * @private\n */\nclass Capabilities {\n\t/**\n\t * The constructor.\n\t * @param {string} endPoint\n\t * @param {Pioneer.Engine} engine\n\t */\n\tconstructor(endPoint, engine) {\n\t\t/**\n\t\t * The end point for the WMTS protocol.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._endPoint = endPoint;\n\n\t\t/**\n\t\t * The XML content of the capabilities.\n\t\t * @type {Document}\n\t\t * @private\n\t\t */\n\t\tthis._capabilitiesXML = null;\n\n\t\t/**\n\t\t * The list of layers as a map from titles to identifiers.\n\t\t * @type {Map<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._layers = new Map();\n\n\t\t/**\n\t\t * A promise that resolves when the capabilities is ready to be used.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._readyPromise = null;\n\n\t\t// Get the capabilities.\n\t\tthis._readyPromise = engine.getDownloader().download(this._endPoint + '/1.0.0/WMTSCapabilities.xml', false).then((download) => {\n\t\t\tif (typeof download.content === 'string') {\n\t\t\t\tthis._capabilitiesXML = new DOMParser().parseFromString(download.content, 'application/xml');\n\t\t\t}\n\n\t\t\t// Populate the layers.\n\t\t\tif (this._capabilitiesXML !== null) {\n\t\t\t\tconst layerElems = this._capabilitiesXML.querySelectorAll('Contents > Layer');\n\t\t\t\tfor (const layerElem of layerElems) {\n\t\t\t\t\tconst title = layerElem.querySelector('*|Title').textContent;\n\t\t\t\t\tconst identifier = layerElem.querySelector('*|Identifier').textContent;\n\t\t\t\t\tthis._layers.set(title, identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Gets the promise that resolves when it is ready to be used.\n\t * @returns {Promise<void>}\n\t */\n\tget readyPromise() {\n\t\treturn this._readyPromise;\n\t}\n\n\t/**\n\t * Gets the end point.\n\t * @returns {string}\n\t */\n\tget endPoint() {\n\t\treturn this._endPoint;\n\t}\n\n\t/**\n\t * Gets the list of layers as a map from titles to identifiers.\n\t * @returns {Map<string, string>}\n\t */\n\tget layers() {\n\t\treturn this._layers;\n\t}\n\n\t/**\n\t * Gets a layer from its identifier. Returns null if the identifier is invalid.\n\t * @param {string} identifier\n\t * @returns {Layer}\n\t */\n\tgetLayer(identifier) {\n\t\tlet layer = null;\n\t\tif (this._capabilitiesXML !== null) {\n\t\t\tconst layerElems = this._capabilitiesXML.querySelectorAll('Contents > Layer');\n\t\t\tfor (const layerElem of layerElems) {\n\t\t\t\tconst layerIdentifier = layerElem.querySelector('*|Identifier').textContent;\n\t\t\t\tif (identifier === layerIdentifier) {\n\t\t\t\t\tlayer = new Layer(layerElem, this._endPoint + '/1.0.0');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn layer;\n\t}\n\n\t/**\n\t * Gets a tile matrix set from its identifier. Returns null if the identifier is invalid.\n\t * @param {string} identifier\n\t * @returns {TileMatrixSet}\n\t */\n\tgetTileMatrixSet(identifier) {\n\t\tlet tileMatrixSet = null;\n\t\tif (this._capabilitiesXML !== null) {\n\t\t\tconst tileMatrixSetElems = this._capabilitiesXML.querySelectorAll('Contents > TileMatrixSet');\n\t\t\tfor (const tileMatrixSetElem of tileMatrixSetElems) {\n\t\t\t\tconst tileMatrixSetIdentifier = tileMatrixSetElem.querySelector('*|Identifier').textContent;\n\t\t\t\tif (identifier === tileMatrixSetIdentifier) {\n\t\t\t\t\ttileMatrixSet = new TileMatrixSet(tileMatrixSetElem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tileMatrixSet;\n\t}\n}\n\n/**\n * A capabilities layer.\n * @internal\n */\nclass Layer {\n\t/**\n\t * Constructor.\n\t * @param {Element} elem\n\t * @param {string} baseUrl\n\t */\n\tconstructor(elem, baseUrl) {\n\t\t/**\n\t\t * The base URL\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._baseUrl = baseUrl;\n\n\t\t/**\n\t\t * The title.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._title = elem.querySelector('*|Title').textContent;\n\n\t\t/**\n\t\t * The WMTS layer identifier.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._identifier = elem.querySelector('*|Identifier').textContent;\n\n\t\t/**\n\t\t * The mapping of styles from title to identifier.\n\t\t * @type {Map<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._styles = new Map();\n\n\t\t/**\n\t\t * The style that is the default.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._defaultStyle = '';\n\n\t\t/**\n\t\t * The bounding box of the layer.\n\t\t * @type {Pioneer.Rect}\n\t\t * @private\n\t\t */\n\t\tthis._boundingBox = new Pioneer.Rect();\n\n\t\t/**\n\t\t * The possible extra dimensions of the layer, along with its default.\n\t\t * @type {Map<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._dimensions = new Map();\n\n\t\t/**\n\t\t * The tile matrix sets.\n\t\t * @type {Set<string>}\n\t\t * @private\n\t\t */\n\t\tthis._tileMatrixSets = new Set();\n\n\t\t/**\n\t\t * The WMTS layer url.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._url = '';\n\n\t\t// Get the styles.\n\t\tconst styleElems = elem.querySelectorAll('Style');\n\t\tfor (const styleElem of styleElems) {\n\t\t\tconst title = styleElem.querySelector('*|Title').textContent;\n\t\t\tconst identifier = styleElem.querySelector('*|Identifier').textContent;\n\t\t\tthis._styles.set(title, identifier);\n\n\t\t\tif (styleElem.getAttribute('isDefault') === 'true') {\n\t\t\t\tthis._defaultStyle = identifier;\n\t\t\t}\n\t\t}\n\n\t\t// Get the bounding box and crs.\n\t\tlet boundingBoxElem = elem.querySelector('*|BoundingBox');\n\t\tif (boundingBoxElem === null) {\n\t\t\tboundingBoxElem = elem.querySelector('*|WGS84BoundingBox');\n\t\t}\n\t\tif (boundingBoxElem === null) {\n\t\t\tthrow new Error('Layer \"' + this._identifier + '\" missing a BoundingBox or a WGS84BoundingBox tag.');\n\t\t}\n\t\tconst lowerCornerArray = boundingBoxElem.querySelector('*|LowerCorner').textContent.split(' ');\n\t\tconst upperCornerArray = boundingBoxElem.querySelector('*|UpperCorner').textContent.split(' ');\n\t\tthis._boundingBox.origin.set(Number.parseFloat(lowerCornerArray[0]), Number.parseFloat(lowerCornerArray[1]));\n\t\tthis._boundingBox.size.set(Number.parseFloat(upperCornerArray[0]) - this._boundingBox.origin.x, Number.parseFloat(upperCornerArray[1]) - this._boundingBox.origin.y);\n\n\t\t// Get the extra dimensions of the layer.\n\t\tconst dimensionElems = elem.querySelectorAll('Dimension');\n\t\tfor (const dimensionElem of dimensionElems) {\n\t\t\tconst identifier = dimensionElem.querySelector('*|Identifier').textContent;\n\t\t\tconst defaultValue = dimensionElem.querySelector('Default').textContent;\n\t\t\tthis._dimensions.set(identifier, defaultValue);\n\t\t}\n\n\t\t// Get the tile matrix sets.\n\t\tconst tileMatrixSetLinkElems = elem.querySelectorAll('TileMatrixSetLink');\n\t\tfor (const tileMatrixSetLinkElem of tileMatrixSetLinkElems) {\n\t\t\tconst tileMatrixSet = tileMatrixSetLinkElem.querySelector('TileMatrixSet').textContent;\n\t\t\tthis._tileMatrixSets.add(tileMatrixSet);\n\t\t}\n\n\t\t// Get the url.\n\t\tconst resourceURLElem = elem.querySelector('ResourceURL');\n\t\tthis._url = resourceURLElem.getAttribute('template');\n\t\t// If it is relative, prepend the base url.\n\t\tif (!/^(?:[a-z]+:)?\\/\\//i.test(this._url)) {\n\t\t\tthis._url = this._baseUrl + this._url;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the title.\n\t * @returns {string}\n\t */\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\t/**\n\t * Gets the identifiers.\n\t * @returns {string}\n\t */\n\tget identifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * Gets the mapping of style titles to identifiers.\n\t * @returns {Map<string, string>}\n\t */\n\tget styles() {\n\t\treturn this._styles;\n\t}\n\n\t/**\n\t * Gets the default style.\n\t * @returns {string}\n\t */\n\tget defaultStyle() {\n\t\treturn this._defaultStyle;\n\t}\n\n\t/**\n\t * Gets the bounding box.\n\t * @returns {Pioneer.Rect}\n\t */\n\tget boundingBox() {\n\t\treturn this._boundingBox;\n\t}\n\n\t/**\n\t * Gets the dimension options as a mapping of the identifier to its default.\n\t * @return {Map<string, string>}\n\t */\n\tget dimensions() {\n\t\treturn this._dimensions;\n\t}\n\n\t/**\n\t * Gets the tile matrix sets associated with this layer.\n\t * @return {Set<string>}\n\t */\n\tget tileMatrixSets() {\n\t\treturn this._tileMatrixSets;\n\t}\n\n\t/**\n\t * Gets the url template for the layer.\n\t * @returns {string}\n\t */\n\tget url() {\n\t\treturn this._url;\n\t}\n}\n\n/**\n * A tile matrix set.\n * @internal\n */\nclass TileMatrixSet {\n\t/**\n\t * Constructor.\n\t * @param {Element} elem\n\t */\n\tconstructor(elem) {\n\t\t/**\n\t\t * The WMTS layer identifier.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._identifier = elem.querySelector('*|Identifier').textContent;\n\n\t\t/**\n\t\t * The CRS of the tile matrix set.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._crs = elem.querySelector('*|SupportedCRS').textContent;\n\n\t\t/**\n\t\t * The bounding box of the tile matrix set.\n\t\t * @type {Pioneer.Rect}\n\t\t * @private\n\t\t */\n\t\tthis._boundingBox = new Pioneer.Rect();\n\n\t\t/**\n\t\t * The number of levels that the matrix has.\n\t\t * @type {Pioneer.Vector2[]}\n\t\t * @private\n\t\t */\n\t\tthis._numTiles = [];\n\n\t\t/**\n\t\t * A promise that resolves when it is ready to be used.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._readyPromise = null;\n\n\t\t// Check if it has proper power-of-two levels and set the number of tiles for each tile matrix.\n\t\tlet scalePrev;\n\t\tlet level = 0;\n\t\tfor (const node of elem.querySelectorAll('TileMatrix')) {\n\t\t\tconst scaleElem = node.querySelector('ScaleDenominator');\n\t\t\tif (!scaleElem) {\n\t\t\t\tthrow new Error('ScaleDenominator tag not found for TileMatrix ' + level + '.');\n\t\t\t}\n\t\t\tconst scale = parseFloat(scaleElem.innerHTML);\n\t\t\tif (scalePrev !== undefined && Math.abs(scale * 2 - scalePrev) / scale > 0.01) {\n\t\t\t\tthrow new Error('ScaleDenominator for TileMatrix ' + level + ' must be half of the next higher level, but is not.');\n\t\t\t}\n\t\t\tscalePrev = scale;\n\t\t\tthis._numTiles[level] = new Pioneer.Vector2(\n\t\t\t\tparseFloat(node.querySelector('MatrixWidth').innerHTML),\n\t\t\t\tparseFloat(node.querySelector('MatrixHeight').innerHTML));\n\t\t\tlevel += 1;\n\t\t}\n\n\t\t// Get the number of levels from the iteration above\n\t\tthis._numLevels = level;\n\n\t\t// Calculate the bounding box.\n\t\t// It uses the ScaleDenominator, TileWidth/Height, and MatrixWidth/Height of level 0\n\t\t// to calculate the bounding box size. Since the calculation yields a number in\n\t\t// km / matrix and we need it in CRS units, we have to get the CRS unitsPerMeter value\n\t\t// in order to get the bounding box size in CRS units.\n\t\tconst tileMatrix0Elem = elem.querySelector('TileMatrix');\n\t\tconst scaleDenominator = Number.parseFloat(tileMatrix0Elem.querySelector('ScaleDenominator').textContent);\n\t\tconst pixelsPerTile = new Pioneer.Vector2(Number.parseFloat(tileMatrix0Elem.querySelector('TileWidth').textContent), Number.parseFloat(tileMatrix0Elem.querySelector('TileHeight').textContent));\n\t\tconst kmPerPixel = scaleDenominator * 0.28e-6;\n\t\tconst kmPerTile = new Pioneer.Vector2(kmPerPixel * pixelsPerTile.x, kmPerPixel * pixelsPerTile.y);\n\t\tconst kmPerMatrix = new Pioneer.Vector2(kmPerTile.x * this._numTiles[0].x, kmPerTile.y * this._numTiles[0].y);\n\t\t// Get the bounding box origin.\n\t\tconst topLeftCornerArray = tileMatrix0Elem.querySelector('TopLeftCorner').textContent.split(' ');\n\t\tthis._boundingBox.origin.set(Number.parseFloat(topLeftCornerArray[0]), Number.parseFloat(topLeftCornerArray[1]));\n\t\t// Get the CRS to convert km/matrix to CRS units/matrix.\n\t\tthis._readyPromise = TileMatrixSet.setCRS(this._crs).then((crs) => {\n\t\t\tthis._crs = crs;\n\t\t\tlet unitsPerKm = 1e3;\n\t\t\tconst proj = proj4.defs(this._crs);\n\t\t\tif (proj.to_meter) {\n\t\t\t\tunitsPerKm = 1000 / proj.to_meter;\n\t\t\t}\n\t\t\telse if (proj.units === 'degrees') {\n\t\t\t\tunitsPerKm = 0.00898315284;\n\t\t\t}\n\t\t\telse if (proj.units === 'feet' || proj.units === 'us feet') {\n\t\t\t\tunitsPerKm = 3280.83333335;\n\t\t\t}\n\n\t\t\t// Set the size, rounding off extra digits to prevent slight overflows.\n\t\t\tthis._boundingBox.size.x = Math.round(kmPerMatrix.x * unitsPerKm * 1e6) / 1e6;\n\t\t\tthis._boundingBox.size.y = Math.round(kmPerMatrix.y * unitsPerKm * 1e6) / 1e6;\n\t\t\tthis._boundingBox.origin.y = this._boundingBox.origin.y - this._boundingBox.size.y;\n\t\t});\n\t}\n\n\t/**\n\t * Gets a promise that resolves when it is ready to be used.\n\t * @returns {Promise<void>}\n\t */\n\tget readyPromise() {\n\t\treturn this._readyPromise;\n\t}\n\n\t/**\n\t * Gets the identifier.\n\t * @returns {string}\n\t */\n\tget identifier() {\n\t\treturn this._identifier;\n\t}\n\n\t/**\n\t * Gets the bounding box in CRS coordinates.\n\t * @returns {Pioneer.Rect}\n\t */\n\tget boundingBox() {\n\t\treturn this._boundingBox;\n\t}\n\n\t/**\n\t * Gets the number of levels.\n\t * @returns {number}\n\t */\n\tget numLevels() {\n\t\treturn this._numLevels;\n\t}\n\n\t/**\n\t * Gets the number of tiles in each direction at the given level.\n\t * @param {number} level\n\t * @returns {Pioneer.Vector2}\n\t */\n\tgetNumTiles(level) {\n\t\treturn this._numTiles[level];\n\t}\n\n\t/**\n\t * Converts CRS units to an XYZ.\n\t * @param {Pioneer.Vector3} outXYZ\n\t * @param {Pioneer.Vector2} crsUnits\n\t * @param {Pioneer.SpheroidComponent} spheroid\n\t */\n\tcrsUnitsToXYZ(outXYZ, crsUnits, spheroid) {\n\t\tconst lla = Pioneer.LatLonAlt.pool.get();\n\t\t// Clamp the x and y to the bounding box so that we don't get crazy values.\n\t\tconst x = Pioneer.MathUtils.clamp(crsUnits.x, this._boundingBox.origin.x, this._boundingBox.origin.x + this._boundingBox.size.x);\n\t\tconst y = Pioneer.MathUtils.clamp(crsUnits.y, this._boundingBox.origin.y, this._boundingBox.origin.y + this._boundingBox.size.y);\n\t\t// Convert it to regular geodetic latitude and longitude.\n\t\tconst ll = proj4(this._crs, 'WGS84', [x, y]);\n\t\tlla.set(Pioneer.MathUtils.degToRad(ll[1]), Pioneer.MathUtils.degToRad(ll[0]), 0);\n\t\t// Convert it to xyz.\n\t\tspheroid.xyzFromLLA(outXYZ, lla);\n\t\tPioneer.LatLonAlt.pool.release(lla);\n\t}\n\n\t/**\n\t * Defines a projection in proj4 from the crs. Returns the string to be used on subsequent proj4 calls.\n\t * @param {string} crs\n\t * @returns {Promise<string>}\n\t */\n\tstatic async setCRS(crs) {\n\t\tif (crs.startsWith('urn:ogc:def:crs:')) {\n\t\t\tcrs = crs.substring('urn:ogc:def:crs:'.length);\n\t\t}\n\t\t// Try to get it locally first.\n\t\tlet proj4Text = crsToWKT.get(crs);\n\t\tif (proj4Text === undefined && crs.startsWith('EPSG::')) {\n\t\t\tconst url = 'https://epsg.io/' + crs.substring('EPSG::'.length) + '.proj4';\n\t\t\tconst result = await fetch(url);\n\t\t\tproj4Text = await result.text();\n\t\t}\n\t\tproj4.defs(crs, proj4Text);\n\t\treturn crs;\n\t}\n}\n\nconst crsToWKT = /** @type {Map<string, string | any>} */(new Map());\n// Some common ones to start us off.\ncrsToWKT.set('EPSG::104903', 'GEOGCS[\"GCS_Moon_2000\",DATUM[\"D_Moon_2000\",SPHEROID[\"Moon_2000_IAU_IAG\",1737400.0,0.0]],PRIMEM[\"Reference_Meridian\",0.0],UNIT[\"Degree\",0.0174532925199433]]');\ncrsToWKT.set('EPSG::104905', 'GEOGCS[\"GCS_Mars_2000\",DATUM[\"D_Mars_2000\",SPHEROID[\"Mars_2000_IAU_IAG\",3396190.0,169.8944472236118]],PRIMEM[\"Reference_Meridian\",0.0],UNIT[\"Degree\",0.0174532925199433]]');\ncrsToWKT.set('EPSG::4326', '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs');\ncrsToWKT.set('EPSG::3857', '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs');\ncrsToWKT.set('OGC:1.3:84', proj4.defs('WGS84'));\ncrsToWKT.set('OGC:1.3:CRS84', proj4.defs('WGS84'));\ncrsToWKT.set('OGC:2:84', proj4.defs('WGS84'));\n\nexport {\n\tCapabilities,\n\tLayer,\n\tTileMatrixSet\n};\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\nimport { Capabilities, TileMatrixSet, Layer } from './wmts';\n\n/**\n * @callback TransitionsCompleteCallback\n * @returns {void}\n */\n\n/**\n * The WMTS component.\n * */\nexport class WMTSComponent extends Pioneer.BaseComponent {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the component\n\t * @param {string} name - the name of the component\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The WMTS Capabilities\n\t\t * @type {Capabilities}\n\t\t * @private\n\t\t */\n\t\tthis._capabilities = null;\n\n\t\t/**\n\t\t * The WMTS end point.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._endPoint = '';\n\n\t\t/**\n\t\t * The WMTS layer identifier\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._layerIdentifier = '';\n\n\t\t/**\n\t\t * The WMTS tile matrix set identifier\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._tileMatrixSetIdentifier = '';\n\n\t\t/**\n\t\t * The style identifier.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._style = '';\n\n\t\t/**\n\t\t * Dimension values used to get the right tile.\n\t\t * @type {Map<string, string>}\n\t\t * @private\n\t\t */\n\t\tthis._dimensionValues = new Map();\n\n\t\t/**\n\t\t * The minimum level to which the tiles must split.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._minLevel = Number.NEGATIVE_INFINITY;\n\n\t\t/**\n\t\t * The maximum level to which the tiles can split.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._maxLevel = Number.POSITIVE_INFINITY;\n\n\t\t/**\n\t\t * A factor that determines when to split the tiles. Higher means more splits.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._splitJoinThresholdFactor = 512;\n\n\t\t/**\n\t\t * The layer.\n\t\t * @type {Layer}\n\t\t * @private\n\t\t */\n\t\tthis._layer = null;\n\n\t\t/**\n\t\t * The tile matrix set.\n\t\t * @type {TileMatrixSet}\n\t\t * @private\n\t\t */\n\t\tthis._tileMatrixSet = null;\n\n\t\t/**\n\t\t * The url to be used by the tiles for the images.\n\t\t * @type {string}\n\t\t * @private\n\t\t */\n\t\tthis._tileUrl = '';\n\n\t\t/**\n\t\t * The entities used for shadows. Derived from the shadow entity names.\n\t\t * @type {Pioneer.EntityRef[]}\n\t\t * @private\n\t\t */\n\t\tthis._shadowEntities = [];\n\n\t\t/**\n\t\t * The downloader for easier future access.\n\t\t * @private\n\t\t */\n\t\tthis._engine = this.getEntity().getScene().getEngine();\n\n\t\t/**\n\t\t * The positions of all active cameras.\n\t\t * @type {Pioneer.Vector3[]}\n\t\t * @private\n\t\t */\n\t\tthis._cameraPositions = [];\n\n\t\t/**\n\t\t * The root tile.\n\t\t * @type {WMTSTile}\n\t\t * @private\n\t\t */\n\t\tthis._rootTile = null;\n\n\t\t/**\n\t\t * The pixel size of each tile. Starts out as undefined and then on the first image load is set.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._tilePixelSize = undefined;\n\n\t\t/**\n\t\t * A promise that resolves when all tiles are no longer transitioning.\n\t\t * @type {Promise<void>}\n\t\t * @private\n\t\t */\n\t\tthis._tilesLoadedPromise = null;\n\n\t\t/**\n\t\t * The callback that gets called when all tiles are no longer transitioning.\n\t\t * @type {TransitionsCompleteCallback}\n\t\t * @private\n\t\t */\n\t\tthis._transitionsCompleteCallback = null;\n\n\t\t/**\n\t\t * A counter that ensures that we don't do too many splits or joins in a single frame.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._loadsThisFrame = 0;\n\n\t\t/**\n\t\t * A reference to the atmosphere component.\n\t\t * @type {Pioneer.ComponentRef<Pioneer.AtmosphereComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._atmosphereComponentRef = new Pioneer.ComponentRef(this.getEntity().getScene());\n\t\tthis._atmosphereComponentRef.setByType(this.getEntity().getName(), 'atmosphere');\n\n\t\t/**\n\t\t * A reference to the spheroid component.\n\t\t * @type {Pioneer.ComponentRef<Pioneer.SpheroidComponent>}\n\t\t * @private\n\t\t */\n\t\tthis._spheroidComponentRef = new Pioneer.ComponentRef(this.getEntity().getScene());\n\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid');\n\t\tthis._spheroidComponentRef.setRefChangedCallback(this._spheroidRefChangedCallback.bind(this));\n\n\t\t// Bind the callbacks to this.\n\t\tthis._spheroidChangedCallback = this._spheroidChangedCallback.bind(this);\n\n\t\t// Lets the base component to check for valid orientation when determining whether this is visible.\n\t\tthis.__setUsesEntityOrientation(true);\n\t}\n\n\t/**\n\t * Sets the end point for the WMTS protocol.\n\t * @param {string} endPoint\n\t */\n\tasync setEndPoint(endPoint) {\n\t\tthis._endPoint = endPoint;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets the layer identifier.\n\t * @param {string} identifier\n\t */\n\tsetLayer(identifier) {\n\t\tthis._layerIdentifier = identifier;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets the tile matrix set identifier.\n\t * @param {string} identifier\n\t */\n\tsetTileMatrixSet(identifier) {\n\t\tthis._tileMatrixSetIdentifier = identifier;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets the style of the layer.\n\t * @param {string} identifier\n\t */\n\tsetStyle(identifier) {\n\t\tthis._style = identifier;\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Sets the value of a dimension in the layer.\n\t * @param {string} dimension\n\t * @param {string} value\n\t */\n\tsetDimensionValue(dimension, value) {\n\t\tthis._dimensionValues.set(dimension, value);\n\t\tthis.resetResources();\n\t}\n\n\t/**\n\t * Gets the list of layers as a map from titles to identifiers.\n\t * @returns {Map<string, string>}\n\t */\n\tgetLayers() {\n\t\tif (this._capabilities !== null) {\n\t\t\treturn this._capabilities.layers;\n\t\t}\n\t\telse {\n\t\t\treturn new Map();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the minimum level to which the tiles must split.\n\t * @returns {number}\n\t */\n\tgetMinLevel() {\n\t\treturn this._minLevel;\n\t}\n\n\t/**\n\t * Sets the minimum level to which the tiles must split. Defaults to negative infinity.\n\t * @param {number} minLevel\n\t */\n\tsetMinLevel(minLevel) {\n\t\tthis._minLevel = minLevel;\n\t}\n\n\t/**\n\t * Gets the maximum level to which the tiles can split.\n\t * @returns {number}\n\t */\n\tgetMaxLevel() {\n\t\treturn this._maxLevel;\n\t}\n\n\t/**\n\t * Sets the maximum level to which the tiles can split. Defaults to positive infinity.\n\t * @param {number} maxLevel\n\t */\n\tsetMaxLevel(maxLevel) {\n\t\tthis._maxLevel = maxLevel;\n\t}\n\n\t/**\n\t * Returns a promise when no more tiles are loading.\n\t * @returns {Promise<void>}\n\t */\n\tgetTilesLoadedPromise() {\n\t\treturn this._tilesLoadedPromise || Promise.resolve();\n\t}\n\n\t/**\n\t * Sets the reference to use for the spheroid component, by name or the type index.\n\t * @param {string | number} nameOrTypeIndex\n\t */\n\tsetSpheroidReference(nameOrTypeIndex) {\n\t\tif (typeof nameOrTypeIndex === 'string') {\n\t\t\tthis._spheroidComponentRef.setByName(this.getEntity().getName(), nameOrTypeIndex);\n\t\t}\n\t\telse {\n\t\t\tthis._spheroidComponentRef.setByType(this.getEntity().getName(), 'spheroid', nameOrTypeIndex);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the layer.\n\t * @returns {Layer}\n\t * @internal\n\t */\n\t__getLayer() {\n\t\treturn this._layer;\n\t}\n\n\t/**\n\t * Gets the tile matrix set.\n\t * @returns {TileMatrixSet}\n\t * @internal\n\t */\n\t__getTileMatrixSet() {\n\t\treturn this._tileMatrixSet;\n\t}\n\n\t/**\n\t * Gets the url to be used by the tiles.\n\t * @returns {string}\n\t * @internal\n\t */\n\t__getTileUrl() {\n\t\treturn this._tileUrl;\n\t}\n\n\t/**\n\t * Gets the layer bounds or null if there is no layer.\n\t * @returns {Pioneer.Rect}\n\t * @internal\n\t */\n\t__getLayerBounds() {\n\t\tif (this._layer !== null) {\n\t\t\treturn this._layer.boundingBox;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the max level.\n\t * @returns {number}\n\t * @internal\n\t */\n\t__getMaxLevel() {\n\t\treturn this._maxLevel;\n\t}\n\n\t/**\n\t * Gets the min level.\n\t * @returns {number}\n\t * @internal\n\t */\n\t__getMinLevel() {\n\t\treturn this._minLevel;\n\t}\n\n\t/**\n\t * Gets the split-join factor.\n\t * @returns {number}\n\t * @internal\n\t */\n\t__getSplitJoinFactor() {\n\t\treturn this._splitJoinThresholdFactor;\n\t}\n\n\t/**\n\t * Gets the pixel size of each tile. Starts out as undefined and then on the first image load is set.\n\t * @returns {number}\n\t */\n\t__getTilePixelSize() {\n\t\treturn this._tilePixelSize;\n\t}\n\n\t/**\n\t * Sets the pixel size of each tile. Starts out as undefined and then on the first image load is set.\n\t * @param {number} tilePixelSize\n\t */\n\t__setTilePixelSize(tilePixelSize) {\n\t\tthis._tilePixelSize = tilePixelSize;\n\t}\n\n\t/**\n\t * Gets the number of loads this frame.\n\t * @returns {number}\n\t */\n\t__getLoadsThisFrame() {\n\t\treturn this._loadsThisFrame;\n\t}\n\n\t/**\n\t * Increments the number of loads this frame.\n\t * @internal\n\t */\n\t__incLoadsThisFrame() {\n\t\tthis._loadsThisFrame += 1;\n\t}\n\n\t/**\n\t * Gets the current camera positions.\n\t * @returns {Pioneer.Vector3[]}\n\t * @internal\n\t */\n\t__getCameraPositions() {\n\t\treturn this._cameraPositions;\n\t}\n\n\t/**\n\t * Gets the spheroid component this is using. Used by Tile.\n\t * @returns {Pioneer.SpheroidComponent}\n\t * @internal\n\t */\n\t__getSpheroidComponent() {\n\t\treturn this._spheroidComponentRef.get();\n\t}\n\n\t/**\n\t * Cleans up the component.\n\t * @override\n\t * @internal\n\t */\n\t__destroy() {\n\t\t// Remove the spheroid changed callback.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tspheroidComponent.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\n\t\tsuper.__destroy();\n\t}\n\n\t/**\n\t * Updates the component.\n\t * @override\n\t * @internal\n\t */\n\t__update() {\n\t\t// Update the references.\n\t\tthis._spheroidComponentRef.update();\n\n\t\t// If there's no root tile, do nothing else.\n\t\tif (this._rootTile === null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the positions of all cameras.\n\t\twhile (this._cameraPositions.length > this._engine.getNumViewports()) {\n\t\t\tthis._cameraPositions.pop();\n\t\t}\n\t\twhile (this._cameraPositions.length < this._engine.getNumViewports()) {\n\t\t\tthis._cameraPositions.push(new Pioneer.Vector3());\n\t\t}\n\t\tconst cameraPosition = Pioneer.Vector3.pool.get();\n\t\tfor (let i = 0, l = this._engine.getNumViewports(); i < l; i++) {\n\t\t\tcameraPosition.neg(this.getEntity().getCameraSpacePosition(this._engine.getViewport(i).getCamera()));\n\t\t\tthis._cameraPositions[i].rotateInverse(this.getEntity().getOrientation(), cameraPosition);\n\t\t}\n\t\tPioneer.Vector3.pool.release(cameraPosition);\n\n\t\tthis._loadsThisFrame = 0;\n\n\t\t// Do the update on all of the tiles recursively.\n\t\t// If any tile is still transitioning, set transitioning to true.\n\t\tconst transitioning = this._rootTile.update();\n\n\t\t// If there is no current promise (there were no tiles) and now there are,\n\t\t// Create the loaded promise and record its resolve callback.\n\t\tif (this._tilesLoadedPromise === null && transitioning) {\n\t\t\tthis._tilesLoadedPromise = new Promise((resolve) => {\n\t\t\t\tthis._transitionsCompleteCallback = resolve;\n\t\t\t});\n\t\t}\n\n\t\t// If the loaded promise callback exists and we're no longer transitioning,\n\t\t// Clear the loaded promise and callback and call the callback (the resolve function of the promise).\n\t\tif (this._tilesLoadedPromise !== null && !transitioning) {\n\t\t\tconst callback = this._transitionsCompleteCallback;\n\t\t\tthis._tilesLoadedPromise = null;\n\t\t\tthis._transitionsCompleteCallback = null;\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the component for render.\n\t * @param {Pioneer.CameraComponent} camera\n\t * @override\n\t * @internal\n\t */\n\t__prepareForRender(camera) {\n\t\t// Set the orientation to the entity's orientation.\n\t\tPioneer.ThreeJsHelper.setOrientationToEntity(this.getThreeJsObjects(), this.getEntity());\n\n\t\t// Set the position to the entity's camera position.\n\t\tPioneer.ThreeJsHelper.setPositionToEntity(this.getThreeJsObjects(), this.getEntity(), camera);\n\n\t\t// Get the atmosphere.\n\t\tconst atmosphere = this._atmosphereComponentRef.get();\n\n\t\t// Setup the regular uniforms.\n\t\tPioneer.MaterialUtils.setUniforms(this.getThreeJsMaterials(), camera, this.getEntity(), this._shadowEntities, atmosphere, true);\n\t}\n\n\t/**\n\t * Loads the resources needed by the component.\n\t * @returns {Promise<void | void[]>}\n\t * @override\n\t * @protected\n\t */\n\tasync __loadResources() {\n\t\tif (this._endPoint !== '') {\n\t\t\t// Load the capabilities end point XML.\n\t\t\tthis._capabilities = new Capabilities(this._endPoint, this._engine);\n\t\t\tawait this._capabilities.readyPromise;\n\n\t\t\t// If no layer is specified and there is only one choice, choose that one.\n\t\t\tlet layerIdentifier = this._layerIdentifier;\n\t\t\tif (layerIdentifier === '') {\n\t\t\t\tconst layers = this._capabilities.layers;\n\t\t\t\tif (layers.size === 1) {\n\t\t\t\t\tfor (const [, identifier] of layers) {\n\t\t\t\t\t\tlayerIdentifier = identifier;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If there's still no layer specified, nothing to do.\n\t\t\tif (layerIdentifier === '') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Load the layer.\n\t\t\tthis._layer = this._capabilities.getLayer(layerIdentifier);\n\t\t\tif (this._layer === null) {\n\t\t\t\tthrow new Error('Invalid layer: \"' + layerIdentifier + '\".');\n\t\t\t}\n\n\t\t\t// If no tile matrix set is specified and there is only one choice, choose that one.\n\t\t\tlet tileMatrixSetIdentifier = this._tileMatrixSetIdentifier;\n\t\t\tif (tileMatrixSetIdentifier === '') {\n\t\t\t\tconst tileMatrixSets = this._layer.tileMatrixSets;\n\t\t\t\tif (tileMatrixSets.size === 1) {\n\t\t\t\t\tfor (const identifier of tileMatrixSets) {\n\t\t\t\t\t\ttileMatrixSetIdentifier = identifier;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Load the tile matrix set.\n\t\t\tthis._tileMatrixSet = this._capabilities.getTileMatrixSet(tileMatrixSetIdentifier);\n\t\t\tif (this._tileMatrixSet === null) {\n\t\t\t\tthrow new Error('Invalid tile matrix set: \"' + tileMatrixSetIdentifier + '\".');\n\t\t\t}\n\t\t\tawait this._tileMatrixSet.readyPromise;\n\n\t\t\t// Get the root tile bounds.\n\t\t\tconst rootTileBounds = new Pioneer.Rect();\n\t\t\trootTileBounds.copy(this._tileMatrixSet.boundingBox);\n\t\t\t// Make sure the level -1 tile matrix can be 2x2 when split.\n\t\t\tif (this._tileMatrixSet.getNumTiles(0).x === 1) {\n\t\t\t\trootTileBounds.size.x *= 2.0;\n\t\t\t}\n\t\t\tif (this._tileMatrixSet.getNumTiles(0).y === 1) {\n\t\t\t\trootTileBounds.origin.y -= rootTileBounds.size.y;\n\t\t\t\trootTileBounds.size.y *= 2.0;\n\t\t\t}\n\n\t\t\t// If no style is specified, get the default one.\n\t\t\tlet style = this._style;\n\t\t\tif (style === '') {\n\t\t\t\tstyle = this._layer.defaultStyle;\n\t\t\t}\n\t\t\t// Add default dimension values.\n\t\t\tfor (const [identifier, defaultValue] of this._layer.dimensions) {\n\t\t\t\tif (!this._dimensionValues.has(identifier)) {\n\t\t\t\t\tthis._dimensionValues.set(identifier, defaultValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The tile url to be used by the tiles.\n\t\t\tthis._tileUrl = this._layer.url;\n\t\t\tthis._tileUrl = this._tileUrl.replace('{TileMatrixSet}', this._tileMatrixSet.identifier);\n\t\t\tthis._tileUrl = this._tileUrl.replace('{Style}', style);\n\t\t\tthis._dimensionValues.forEach((value, dimension) => {\n\t\t\t\tthis._tileUrl = this._tileUrl.replace('{' + dimension + '}', value);\n\t\t\t});\n\n\t\t\tthis._rootTile = new WMTSTile(this, null, -1, 0, 0, rootTileBounds);\n\t\t}\n\t}\n\n\t/**\n\t * Unloads any resources used by the component.\n\t * @override\n\t * @protected\n\t */\n\t__unloadResources() {\n\t\tthis._capabilities = null;\n\t\tthis._layer = null;\n\t\tthis._tileMatrixSet = null;\n\t\tthis._tileUrl = '';\n\t\tthis._rootTile.destroy();\n\t\tthis._rootTile = null;\n\t}\n\n\t/**\n\t * Callback called when the spheroid reference is found or lost.\n\t * @param {Pioneer.SpheroidComponent} oldRef\n\t * @param {Pioneer.SpheroidComponent} newRef\n\t * @private\n\t */\n\t_spheroidRefChangedCallback(oldRef, newRef) {\n\t\tif (oldRef !== null) {\n\t\t\toldRef.removeChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tif (newRef !== null) {\n\t\t\tnewRef.addChangedCallback(this._spheroidChangedCallback);\n\t\t}\n\t\tthis._spheroidChangedCallback();\n\t}\n\n\t/**\n\t * Callback to be called when the spheroid component changed.\n\t * @private\n\t */\n\t_spheroidChangedCallback() {\n\t\t// Set the radii uniforms.\n\t\tconst spheroidComponent = this._spheroidComponentRef.get();\n\t\tif (spheroidComponent !== null) {\n\t\t\tthis.__setRadius(Math.max(spheroidComponent.getEquatorialRadius(), spheroidComponent.getPolarRadius()));\n\t\t}\n\t\telse {\n\t\t\tthis.__setRadius(0);\n\t\t}\n\t\tthis.resetResources();\n\t}\n}\n\n/**\n * A single tile with mesh, material, and bounds.\n * @extends Pioneer.Tile<WMTSTile>\n * @private\n */\nclass WMTSTile extends Pioneer.Tile {\n\t/**\n\t * Constructor.\n\t * @param {WMTSComponent} component\n\t * @param {WMTSTile} parent\n\t * @param {number} level\n\t * @param {number} row\n\t * @param {number} col\n\t * @param {Pioneer.Rect} tileBounds\n\t */\n\tconstructor(component, parent, level, row, col, tileBounds) {\n\t\tsuper(parent);\n\n\t\t/**\n\t\t * The WMTS component.\n\t\t * @type {WMTSComponent}\n\t\t * @private\n\t\t */\n\t\tthis._component = component;\n\n\t\t/**\n\t\t * The TileMatrix level starting from -1.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._level = level;\n\n\t\t/**\n\t\t * The row in the TileMatrix of the tile.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._row = row;\n\n\t\t/**\n\t\t * The column in the TileMatrix of the tile.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._col = col;\n\n\t\t/**\n\t\t * The bounds of the tile in CRS coordinates.\n\t\t * @type {Pioneer.Rect}\n\t\t * @private\n\t\t */\n\t\tthis._tileBounds = new Pioneer.Rect();\n\t\tthis._tileBounds.copy(tileBounds);\n\n\t\t/**\n\t\t * The \"center\", the average between the origin and end of the tile bounds.\n\t\t * @type {Pioneer.Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._center = new Pioneer.Vector3();\n\n\t\t/**\n\t\t * The \"radius\", the distance from the center to one of the corners.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._radius = 0;\n\n\t\t/**\n\t\t * The material used by the tile, from a pool of materials.\n\t\t * @type {Pioneer.THREE.ShaderMaterial}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsMaterial = null;\n\n\t\t/**\n\t\t * The Three.js object of the tile.\n\t\t * @type {Pioneer.THREE.Mesh<Pioneer.THREE.BufferGeometry, Pioneer.THREE.ShaderMaterial | Pioneer.THREE.ShaderMaterial[]>}\n\t\t * @private\n\t\t */\n\t\tthis._threeJsObject = null;\n\n\t\t// Calculate the center and diagonal length of a box that includes\n\t\t// the start and end points and the average of the two.\n\t\tconst spheroid = component.__getSpheroidComponent();\n\t\tconst tileMatrixSet = this._component.__getTileMatrixSet();\n\t\t// Get the origin as XYZ.\n\t\tconst originXYZ = new Pioneer.Vector3();\n\t\ttileMatrixSet.crsUnitsToXYZ(originXYZ, this._tileBounds.origin, spheroid);\n\t\t// Get the end as XYZ.\n\t\tconst end = new Pioneer.Vector2();\n\t\tend.add(this._tileBounds.origin, this._tileBounds.size);\n\t\tconst endXYZ = new Pioneer.Vector3();\n\t\ttileMatrixSet.crsUnitsToXYZ(endXYZ, end, spheroid);\n\t\t// Get the average of the start and end points.\n\t\tconst tileBoundsCenter = new Pioneer.Vector2();\n\t\ttileBoundsCenter.addMult(this._tileBounds.origin, this._tileBounds.size, 0.5);\n\t\ttileMatrixSet.crsUnitsToXYZ(this._center, tileBoundsCenter, spheroid);\n\t\t// Get the min and max points.\n\t\tconst min = new Pioneer.Vector3();\n\t\tconst max = new Pioneer.Vector3();\n\t\tmin.x = Math.min(originXYZ.x, endXYZ.x, this._center.x);\n\t\tmin.y = Math.min(originXYZ.y, endXYZ.y, this._center.y);\n\t\tmin.z = Math.min(originXYZ.z, endXYZ.z, this._center.z);\n\t\tmax.x = Math.max(originXYZ.x, endXYZ.x, this._center.x);\n\t\tmax.y = Math.max(originXYZ.y, endXYZ.y, this._center.y);\n\t\tmax.z = Math.max(originXYZ.z, endXYZ.z, this._center.z);\n\t\t// Get the center of the box.\n\t\tthis._center.add(min, max);\n\t\tthis._center.mult(this._center, 0.5);\n\t\t// Get the radius.\n\t\tconst diagonal = new Pioneer.Vector3();\n\t\tdiagonal.sub(this._center, min);\n\t\tthis._radius = diagonal.magnitude();\n\t}\n\n\t/**\n\t * @param {WMTSTile} parent\n\t * @param {number} row - 0 or 1\n\t * @param {number} col - 0 or 1\n\t * @returns {WMTSTile}\n\t * @override\n\t */\n\tcreateNewTile(parent, row, col) {\n\t\t// Get new tile params.\n\t\tconst newLevel = parent._level + 1;\n\t\tconst newRow = parent._row * 2 + row;\n\t\tconst newCol = parent._col * 2 + col;\n\n\t\t// Check if it's within the tile bounds.\n\t\tconst numTiles = parent._component.__getTileMatrixSet().getNumTiles(parent._level + 1);\n\t\tif (newRow >= numTiles.y || newCol >= numTiles.x) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Calculate the new CRS tile bounds.\n\t\tconst tileBounds = new Pioneer.Rect();\n\t\ttileBounds.origin.set(parent._tileBounds.origin.x + col * 0.5 * parent._tileBounds.size.x, parent._tileBounds.origin.y + (1 - row) * 0.5 * parent._tileBounds.size.y);\n\t\ttileBounds.size.set(0.5 * parent._tileBounds.size.x, 0.5 * parent._tileBounds.size.y);\n\n\t\treturn new WMTSTile(parent._component, parent, newLevel, newRow, newCol, tileBounds);\n\t}\n\n\t/**\n\t * Returns true if this tile should be split.\n\t * @returns {boolean}\n\t * @override\n\t */\n\tcheckSplit() {\n\t\t// Don't split if there are no more tiles in the tile matrix set.\n\t\tif (this._level >= this._component.__getTileMatrixSet().numLevels - 1) {\n\t\t\treturn false;\n\t\t}\n\t\t// Don't split if the whole tile is not in the layer.\n\t\tif (!this._tileBounds.intersects(this._component.__getLayerBounds())) {\n\t\t\treturn false;\n\t\t}\n\t\t// Don't split if we're at the maximum level of detail.\n\t\tif (this._level >= this._component.__getMaxLevel()) {\n\t\t\treturn false;\n\t\t}\n\t\t// Don't split if we've already done a lot this frame.\n\t\tif (this._component.__getLoadsThisFrame() >= 1) {\n\t\t\treturn false;\n\t\t}\n\t\t// Always split if we're below the minimum level of detail.\n\t\tif (this._level < this._component.__getMinLevel()) {\n\t\t\treturn true;\n\t\t}\n\t\t// Always split if we're at the invisible root node.\n\t\tif (this._level === -1) {\n\t\t\treturn true;\n\t\t}\n\t\t// Split if the nearest camera distance is less than the threshold.\n\t\tlet tilePixelSize = this._component.__getTilePixelSize();\n\t\tif (tilePixelSize === undefined && this._threeJsMaterial !== null) {\n\t\t\ttilePixelSize = this._threeJsMaterial.uniforms['colorTexture'].value.image.width;\n\t\t\tif (tilePixelSize === 1) { // It is using a single pixel color, so don't go further.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._component.__setTilePixelSize(tilePixelSize);\n\t\t}\n\t\treturn this._getNearestDistance() < this._component.__getSplitJoinFactor() * this._radius / tilePixelSize;\n\t}\n\n\t/**\n\t * Returns true if this tile should join its children.\n\t * @returns {boolean}\n\t * @override\n\t */\n\tcheckJoin() {\n\t\t// If we're at the root node, never join.\n\t\tif (this._level === -1) {\n\t\t\treturn false;\n\t\t}\n\t\t// Don't join if we've already done a lot this frame.\n\t\tif (this._component.__getLoadsThisFrame() >= 1) {\n\t\t\treturn false;\n\t\t}\n\t\t// Always join is we're above the maximum level of detail.\n\t\tif (this._level > this._component.__getMaxLevel()) {\n\t\t\treturn true;\n\t\t}\n\t\t// Never join if we're at or below the minimum level of detail.\n\t\tif (this._level <= this._component.__getMinLevel()) {\n\t\t\treturn false;\n\t\t}\n\t\t// Check if the nearest camera distance is greater than the threshold.\n\t\tlet tilePixelSize = this._component.__getTilePixelSize();\n\t\tif (tilePixelSize === undefined && this._threeJsMaterial !== null) {\n\t\t\ttilePixelSize = this._threeJsMaterial.uniforms['colorTexture'].value.image.width;\n\t\t\tthis._component.__setTilePixelSize(tilePixelSize);\n\t\t}\n\t\treturn this._getNearestDistance() > this._component.__getSplitJoinFactor() * this._radius * 4 / tilePixelSize;\n\t}\n\n\t/**\n\t * Asynchronously loads the tile so that it may be used.\n\t * @returns {Promise<void | void[]>}\n\t * @override\n\t */\n\tasync load() {\n\t\tif (this._level === -1) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis._component.__incLoadsThisFrame();\n\n\t\tif (this._threeJsMaterial !== null) {\n\t\t\tthrow new Error('Tile already has material.');\n\t\t}\n\n\t\t// Check if it's within the layer bounds.\n\t\tif (this._tileBounds.intersects(this._component.__getLayerBounds())) {\n\t\t\t// Get a material from the component's materials cache.\n\t\t\tthis._threeJsMaterial = Pioneer.MaterialUtils.get();\n\t\t\tthis._component.getThreeJsMaterials().push(this._threeJsMaterial);\n\t\t\t// this._threeJsMaterial.wireframe = true;\n\t\t\t// this._threeJsMaterial.defines['baseColor'] = true;\n\t\t\t// this._threeJsMaterial.uniforms['color'].value.setRGB(0.25 + 0.75 * Math.random(), 0.25 + 0.75 * Math.random(), 0.25 + 0.75 * Math.random());\n\n\t\t\tlet url = this._component.__getTileUrl();\n\t\t\turl = url.replace('{TileMatrix}', '' + this._level);\n\t\t\turl = url.replace('{TileRow}', '' + this._row);\n\t\t\turl = url.replace('{TileCol}', '' + this._col);\n\t\t\ttry {\n\t\t\t\t// Download the texture.\n\t\t\t\tawait Pioneer.ThreeJsHelper.loadTextureIntoUniform(this._component, this._threeJsMaterial, 'colorTexture', url, false, false);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tawait Pioneer.ThreeJsHelper.loadTextureIntoUniform(this._component, this._threeJsMaterial, 'colorTexture', 'gray', false, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Asynchronously unloads the tile.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tasync unload() {\n\t\tif (this._level === -1) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._threeJsMaterial !== null) {\n\t\t\t// Remove up the material from the materials list.\n\t\t\tconst materials = this._component.getThreeJsMaterials();\n\t\t\tfor (let i = 0, l = materials.length; i < l; i++) {\n\t\t\t\tif (materials[i] === this._threeJsMaterial) {\n\t\t\t\t\tmaterials.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._threeJsMaterial.uniforms['colorTexture'].value) {\n\t\t\t\tthis._threeJsMaterial.uniforms['colorTexture'].value.dispose();\n\t\t\t}\n\t\t\t// Dispose of the material.\n\t\t\tthis._threeJsMaterial.dispose();\n\t\t\tthis._threeJsMaterial = null;\n\t\t}\n\t\tthis._threeJsMaterial = null;\n\t}\n\n\t/**\n\t * Asynchronously activates the tile.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tasync activate() {\n\t\tif (this._level === -1) {\n\t\t\treturn;\n\t\t}\n\t\t// Create the Three.js object.\n\t\tthis._threeJsObject = Pioneer.ThreeJsHelper.createMeshObject(this._component, this._threeJsMaterial, [\n\t\t\t{ name: 'position', dimensions: 3 },\n\t\t\t{ name: 'normal', dimensions: 3 },\n\t\t\t{ name: 'uv', dimensions: 2 }\n\t\t], false);\n\t\tthis._component.getThreeJsObjects().push(this._threeJsObject);\n\t\tPioneer.ThreeJsHelper.useInDynEnvMap(this._threeJsObject, true);\n\n\t\t// Create the vertices, normals, uvs, and indices arrays.\n\t\tconst numVVerts = 21;\n\t\tconst numUVerts = 21;\n\t\tconst numVerts = numUVerts * numVVerts;\n\t\tconst meshPositions = new Float32Array(numVerts * 3);\n\t\tconst meshNormals = new Float32Array(numVerts * 3);\n\t\tconst meshUVs = new Float32Array(numVerts * 2);\n\t\tconst meshIndices = new Uint16Array(numUVerts * (numVVerts - 1) * 6);\n\n\t\t// Get the bounding box.\n\t\tconst boundingBox = this._component.__getLayer().boundingBox;\n\n\t\t// Set the vertices, normals, uvs, and indices arrays.\n\t\tconst crsUnits = new Pioneer.Vector2();\n\t\tconst clampedCRSUnits = new Pioneer.Vector2();\n\t\tconst xyz = new Pioneer.Vector3();\n\t\tfor (let y = 0; y < numVVerts; y++) {\n\t\t\tlet yF = 1.0 - y / (numVVerts - 1);\n\t\t\tcrsUnits.y = Pioneer.MathUtils.lerp(this._tileBounds.origin.y, this._tileBounds.origin.y + this._tileBounds.size.y, yF);\n\t\t\tclampedCRSUnits.y = Pioneer.MathUtils.clamp(crsUnits.y, boundingBox.origin.y, boundingBox.origin.y + boundingBox.size.y);\n\t\t\tyF += (clampedCRSUnits.y - crsUnits.y) / this._tileBounds.size.y;\n\t\t\tfor (let x = 0; x < numUVerts; x++) {\n\t\t\t\tlet xF = x / (numUVerts - 1);\n\t\t\t\tcrsUnits.x = Pioneer.MathUtils.lerp(this._tileBounds.origin.x, this._tileBounds.origin.x + this._tileBounds.size.x, xF);\n\t\t\t\tclampedCRSUnits.x = Pioneer.MathUtils.clamp(crsUnits.x, boundingBox.origin.x, boundingBox.origin.x + boundingBox.size.x);\n\t\t\t\txF += (clampedCRSUnits.x - crsUnits.x) / this._tileBounds.size.x;\n\t\t\t\t// Set the latitude and longitude coordinate.\n\t\t\t\tthis._component.__getTileMatrixSet().crsUnitsToXYZ(xyz, clampedCRSUnits, this._component.__getSpheroidComponent());\n\n\t\t\t\tconst vertexI = y * numUVerts + x;\n\t\t\t\tmeshPositions[vertexI * 3 + 0] = xyz.x;\n\t\t\t\tmeshPositions[vertexI * 3 + 1] = xyz.y;\n\t\t\t\tmeshPositions[vertexI * 3 + 2] = xyz.z;\n\t\t\t\txyz.normalize(xyz);\n\t\t\t\tmeshNormals[vertexI * 3 + 0] = xyz.x;\n\t\t\t\tmeshNormals[vertexI * 3 + 1] = xyz.y;\n\t\t\t\tmeshNormals[vertexI * 3 + 2] = xyz.z;\n\t\t\t\tmeshUVs[vertexI * 2 + 0] = xF;\n\t\t\t\tmeshUVs[vertexI * 2 + 1] = 1.0 - yF;\n\n\t\t\t\tconst triangleI = y * numUVerts + x;\n\t\t\t\tif (x < numUVerts - 1 && y < numVVerts - 1) {\n\t\t\t\t\tmeshIndices[triangleI * 6 + 0] = numUVerts * (y + 0) + (x + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 1] = numUVerts * (y + 1) + (x + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 2] = numUVerts * (y + 1) + (x + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 3] = numUVerts * (y + 0) + (x + 0);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 4] = numUVerts * (y + 1) + (x + 1);\n\t\t\t\t\tmeshIndices[triangleI * 6 + 5] = numUVerts * (y + 0) + (x + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tPioneer.ThreeJsHelper.setVertices(this._threeJsObject.geometry, 'position', meshPositions);\n\t\tPioneer.ThreeJsHelper.setVertices(this._threeJsObject.geometry, 'normal', meshNormals);\n\t\tPioneer.ThreeJsHelper.setVertices(this._threeJsObject.geometry, 'uv', meshUVs);\n\t\tPioneer.ThreeJsHelper.setIndices(this._threeJsObject.geometry, meshIndices);\n\t}\n\n\t/**\n\t * Asynchronously deactivates the tile.\n\t * @returns {Promise<void>}\n\t * @override\n\t */\n\tasync deactivate() {\n\t\tif (this._level === -1) {\n\t\t\treturn;\n\t\t}\n\t\t// Remove the object from the objects list.\n\t\tconst objects = this._component.getThreeJsObjects();\n\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\tif (objects[i] === this._threeJsObject) {\n\t\t\t\tobjects.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Destroy the object and its geometry.\n\t\tPioneer.ThreeJsHelper.destroyObject(this._threeJsObject);\n\t\tthis._threeJsObject = null;\n\t}\n\n\t/**\n\t * Updates the tiles recursively. Returns true if the tile or any descendant is transitioning.\n\t * @returns {boolean}\n\t */\n\tupdate() {\n\t\tlet transitioning = this.check();\n\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\ttransitioning = this.children[i].update() || transitioning;\n\t\t}\n\t\treturn transitioning;\n\t}\n\n\t_getNearestDistance() {\n\t\t// Calculate the nearest distance to see if we need to split or join this node.\n\t\tlet nearestDistance = Number.POSITIVE_INFINITY;\n\t\tconst diff = Pioneer.Vector3.pool.get();\n\t\tfor (let i = 0, l = this._component.__getCameraPositions().length; i < l; i++) {\n\t\t\tconst position = this._component.__getCameraPositions()[i];\n\t\t\tdiff.sub(this._center, position);\n\t\t\tconst distance = Math.max(0, diff.magnitude() - this._radius);\n\t\t\tif (nearestDistance > distance) {\n\t\t\t\tnearestDistance = distance;\n\t\t\t}\n\t\t}\n\t\tPioneer.Vector3.pool.release(diff);\n\t\treturn nearestDistance;\n\t}\n\n\t/**\n\t * Converts the tile to a string.\n\t * @returns {string}\n\t * @override\n\t */\n\ttoString() {\n\t\treturn this._level + '-' + this._row + '-' + this._col;\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * A controller that points the entity's frame-space direction given by keyframes.\n */\nexport class KeyframePointingController extends Pioneer.BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The keyframes.\n\t\t * @type {[number, string][]}\n\t\t * @private\n\t\t */\n\t\tthis._keyframes = [];\n\n\t\t/**\n\t\t * The frame-space direction to use for the pointing.\n\t\t * @type {Pioneer.Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._direction = new Pioneer.Vector3(1, 0, 0);\n\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Sets the keyframes. Each keyframe is a [time, value]. Possible keyframe values are any entity name or 'velocity',\n\t * with an optional prefix of '-' to indicate the opposite direction.\n\t * @param {[number, string][]} keyframes\n\t */\n\tsetKeyframes(keyframes) {\n\t\t// Remove any previous dependent states.\n\t\tfor (let i = 0, l = this._keyframes.length; i < l; i++) {\n\t\t\tlet value = this._keyframes[i][1];\n\t\t\tif (value.startsWith('-')) {\n\t\t\t\tvalue = value.substring(1);\n\t\t\t}\n\t\t\tif (value === 'velocity') {\n\t\t\t\tthis.removeDependentState(this.getEntity().getName(), 'velocity');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.removeDependentState(value, 'position');\n\t\t\t}\n\t\t}\n\t\tthis._keyframes = [];\n\t\tfor (let i = 0, l = keyframes.length; i < l; i++) {\n\t\t\tthis._keyframes.push([keyframes[i][0], keyframes[i][1]]);\n\t\t\t// Add any new dependent states.\n\t\t\tlet value = this._keyframes[i][1];\n\t\t\tif (value.startsWith('-')) {\n\t\t\t\tvalue = value.substring(1);\n\t\t\t}\n\t\t\tif (value === 'velocity') {\n\t\t\t\tthis.addDependentState(this.getEntity().getName(), 'velocity');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.addDependentState(value, 'position');\n\t\t\t}\n\t\t}\n\t\tthis._keyframes.sort((a, b) => a[0] - b[0]);\n\t}\n\n\t/**\n\t * Sets the frame-space direction to use for the pointing.\n\t * @param {Pioneer.Vector3} direction\n\t */\n\tsetDirection(direction) {\n\t\tthis._direction.copy(direction);\n\t}\n\n\t/**\n\t * Updates given orientation for the given time.\n\t * @param {Pioneer.Quaternion} orientation - The orientation to update.\n\t * @param {number} time - The time to check.\n\t * @override\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tif (orientation.isNaN()) {\n\t\t\torientation.copy(Pioneer.Quaternion.Identity);\n\t\t}\n\t\tthis._getNewOrientation(orientation, time, orientation);\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t */\n\t__update() {\n\t\tif (this._keyframes.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst entity = this.getEntity();\n\t\tconst time = entity.getScene().getEngine().getTime();\n\t\tif (entity.getOrientation().isNaN()) {\n\t\t\tentity.setOrientation(Pioneer.Quaternion.Identity);\n\t\t}\n\t\tconst newOrientation = Pioneer.Quaternion.pool.get();\n\t\tthis._getNewOrientation(newOrientation, time, entity.getOrientation());\n\t\tentity.setOrientation(newOrientation);\n\t\tPioneer.Quaternion.pool.release(newOrientation);\n\t}\n\n\t/**\n\t * Gets a new orientation, given the time and an existing orientation.\n\t * @param {Pioneer.Quaternion} newOrientation\n\t * @param {number} time\n\t * @param {Pioneer.Quaternion} oldOrientation\n\t * @private\n\t */\n\t_getNewOrientation(newOrientation, time, oldOrientation) {\n\t\tconst index = Pioneer.Sort.getIndex(time, this._keyframes, (a, time) => a[0] < time);\n\t\tlet prevIndex = 0;\n\t\tlet nextIndex = 0;\n\t\tif (index === this._keyframes.length) { // After last keyframe time.\n\t\t\tprevIndex = this._keyframes.length - 1;\n\t\t\tnextIndex = this._keyframes.length - 1;\n\t\t}\n\t\telse if (index > 0) {\n\t\t\tprevIndex = index - 1;\n\t\t\tnextIndex = index;\n\t\t}\n\t\tconst prevKeyframe = this._keyframes[prevIndex];\n\t\tconst nextKeyframe = this._keyframes[nextIndex];\n\t\tconst u = (nextKeyframe[0] > prevKeyframe[0])\n\t\t\t? (time - prevKeyframe[0]) / (nextKeyframe[0] - prevKeyframe[0])\n\t\t\t: 0;\n\t\tconst prevDirection = Pioneer.Vector3.pool.get();\n\t\tconst nextDirection = Pioneer.Vector3.pool.get();\n\t\tthis._getDirection(prevDirection, time, prevKeyframe[1]);\n\t\tthis._getDirection(nextDirection, time, nextKeyframe[1]);\n\t\tnextDirection.slerp(prevDirection, nextDirection, u);\n\t\tnextDirection.normalize(nextDirection);\n\t\tprevDirection.rotate(oldOrientation, this._direction);\n\t\tconst rotation = Pioneer.Quaternion.pool.get();\n\t\trotation.setFromVectorFromTo(prevDirection, nextDirection);\n\t\tnewOrientation.mult(rotation, oldOrientation);\n\t\tPioneer.Quaternion.pool.release(rotation);\n\t\tPioneer.Vector3.pool.release(nextDirection);\n\t\tPioneer.Vector3.pool.release(prevDirection);\n\t}\n\n\t/**\n\t * Gets a dynamic direction using the type. It can be the name of another entity or 'velocity', and can be prefixed with '-'.\n\t * @param {Pioneer.Vector3} outDirection\n\t * @param {number} time\n\t * @param {string} type\n\t * @private\n\t */\n\t_getDirection(outDirection, time, type) {\n\t\tconst entity = this.getEntity();\n\t\tconst isNeg = type.startsWith('-');\n\t\tif (isNeg) {\n\t\t\ttype = type.substring(1);\n\t\t}\n\t\tif (type.startsWith('velocity')) {\n\t\t\ttype = type.substring(8);\n\t\t\tif (type.startsWith(' rel ')) {\n\t\t\t\ttype = type.substring(5);\n\t\t\t\tconst relEntity = entity.getScene().getEntity(type);\n\t\t\t\tif (relEntity !== null) {\n\t\t\t\t\tentity.getVelocityRelativeToEntity(outDirection, Pioneer.Vector3.Zero, relEntity, time);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tentity.getVelocityAtTime(outDirection, time);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst otherEntity = entity.getScene().getEntity(type);\n\t\t\tif (otherEntity !== null) {\n\t\t\t\totherEntity.getPositionRelativeToEntity(outDirection, Pioneer.Vector3.Zero, entity, time);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutDirection.copy(Pioneer.Vector3.NaN);\n\t\t\t}\n\t\t}\n\t\toutDirection.normalize(outDirection);\n\t\tif (isNeg) {\n\t\t\toutDirection.mult(outDirection, -1);\n\t\t}\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * A controller that spins an entity at keyframed rates along a given axis.\n */\nexport class KeyframeSpinController extends Pioneer.BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The keyframes. The components are [time, rate, starting angle].\n\t\t * @type {[number, number, number][]}\n\t\t * @private\n\t\t */\n\t\tthis._keyframes = [];\n\n\t\t/**\n\t\t * The frame-space axis to use for the spinning.\n\t\t * @type {Pioneer.Vector3}\n\t\t * @private\n\t\t */\n\t\tthis._axis = new Pioneer.Vector3(1, 0, 0);\n\n\t\t/**\n\t\t * The starting angle at keyframe 0.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._startingAngle = 0;\n\n\t\tthis.addModifiedState('orientation');\n\t}\n\n\t/**\n\t * Sets the keyframes. Each keyframe is a [time, rate]. The rate uses the right-hand rotation along the specified axis.\n\t * @param {[number, number][]} keyframes\n\t */\n\tsetKeyframes(keyframes) {\n\t\tthis._keyframes = [];\n\t\tlet lastAngle = 0;\n\t\tfor (let i = 0, l = keyframes.length; i < l; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\t// Get the accumulated angle over the previous duration, taking into account changing spin rates.\n\t\t\t\tlastAngle = Pioneer.MathUtils.wrap(lastAngle + (keyframes[i][0] - keyframes[i - 1][0]) * (keyframes[i - 1][1] + keyframes[i][1]) * 0.5, 0, 2 * Math.PI);\n\t\t\t}\n\t\t\tthis._keyframes.push([keyframes[i][0], keyframes[i][1], lastAngle]);\n\t\t}\n\t\tthis._keyframes.sort((a, b) => a[0] - b[0]);\n\t}\n\n\t/**\n\t * Sets the frame-space axis to use for the spinning.\n\t * @param {Pioneer.Vector3} axis\n\t */\n\tsetAxis(axis) {\n\t\tthis._axis.copy(axis);\n\t}\n\n\t/**\n\t * Sets the starting angle at keyframe 0.\n\t * @param {number} angle\n\t */\n\tsetStartingAngle(angle) {\n\t\tthis._startingAngle = angle;\n\t}\n\n\t/**\n\t * Updates given orientation for the given time.\n\t * @param {Pioneer.Quaternion} orientation - The orientation to update.\n\t * @param {number} time - The time to check.\n\t * @override\n\t */\n\t__updateOrientationAtTime(orientation, time) {\n\t\tif (orientation.isNaN()) {\n\t\t\torientation.copy(Pioneer.Quaternion.Identity);\n\t\t}\n\t\tthis._getNewOrientation(orientation, time, orientation);\n\t}\n\n\t/**\n\t * Updates the controller.\n\t * @override\n\t */\n\t__update() {\n\t\tif (this._keyframes.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst entity = this.getEntity();\n\t\tconst time = entity.getScene().getEngine().getTime();\n\t\tif (entity.getOrientation().isNaN()) {\n\t\t\tentity.setOrientation(Pioneer.Quaternion.Identity);\n\t\t}\n\t\tconst newOrientation = Pioneer.Quaternion.pool.get();\n\t\tthis._getNewOrientation(newOrientation, time, entity.getOrientation());\n\t\tentity.setOrientation(newOrientation);\n\t\tPioneer.Quaternion.pool.release(newOrientation);\n\t}\n\n\t/**\n\t * Gets a new orientation, given the time and an existing orientation.\n\t * @param {Pioneer.Quaternion} newOrientation\n\t * @param {number} time\n\t * @param {Pioneer.Quaternion} oldOrientation\n\t * @private\n\t */\n\t_getNewOrientation(newOrientation, time, oldOrientation) {\n\t\tconst index = Pioneer.Sort.getIndex(time, this._keyframes, (a, time) => a[0] < time);\n\t\tlet prevIndex = 0;\n\t\tlet nextIndex = 0;\n\t\tif (index === this._keyframes.length) { // After last keyframe time.\n\t\t\tprevIndex = this._keyframes.length - 1;\n\t\t\tnextIndex = this._keyframes.length - 1;\n\t\t}\n\t\telse if (index > 0) {\n\t\t\tprevIndex = index - 1;\n\t\t\tnextIndex = index;\n\t\t}\n\t\tconst prevKeyframe = this._keyframes[prevIndex];\n\t\tconst nextKeyframe = this._keyframes[nextIndex];\n\t\tconst u = (nextKeyframe[0] > prevKeyframe[0])\n\t\t\t? (time - prevKeyframe[0]) / (nextKeyframe[0] - prevKeyframe[0])\n\t\t\t: 0;\n\t\tconst angle = Pioneer.MathUtils.wrap(this._startingAngle + prevKeyframe[2] + (time - prevKeyframe[0]) * (prevKeyframe[1] + u * nextKeyframe[1]) / (1 + u), 0, 2 * Math.PI);\n\t\tconst axis = Pioneer.Vector3.pool.get();\n\t\taxis.rotate(oldOrientation, this._axis);\n\t\tconst rotation = Pioneer.Quaternion.pool.get();\n\t\trotation.setFromAxisAngle(axis, angle);\n\t\tnewOrientation.mult(rotation, oldOrientation);\n\t\tPioneer.Vector3.pool.release(axis);\n\t\tPioneer.Quaternion.pool.release(rotation);\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/** A controller that adds a factor of different positions. */\nexport class PositionSumController extends Pioneer.BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The list of entities and their factors.\n\t\t * @type {Pioneer.FastMap<string, {ref: Pioneer.EntityRef, mult: number, add: number}>}\n\t\t * @private\n\t\t */\n\t\tthis._entities = new Pioneer.FastMap();\n\n\t\tthis.addModifiedState('position');\n\t}\n\n\t/**\n\t * Adds an entity with mult and add factors.\n\t * @param {string} entityName - The entity whose position to use.\n\t * @param {number} mult - A multiply factor of the position.\n\t * @param {number} add - An added offset in the direction of the position.\n\t */\n\taddEntity(entityName, mult, add) {\n\t\t// Set the ref.\n\t\tconst ref = new Pioneer.EntityRef(this.getEntity().getScene());\n\t\tref.setName(entityName);\n\n\t\t// Add it to the list.\n\t\tthis._entities.set(entityName, { ref, mult, add });\n\n\t\t// Mark that this is dependent on the position of the entity.\n\t\tthis.addDependentState(entityName, 'position');\n\t}\n\n\t/**\n\t * Removes an entity.\n\t * @param {string} entityName\n\t */\n\tremoveEntity(entityName) {\n\t\t// Remove it from the list.\n\t\tthis._entities.delete(entityName);\n\n\t\t// Mark that this is no longer dependent on the position of the entity.\n\t\tthis.removeDependentState(entityName, 'position');\n\t}\n\n\t/**\n\t * Sets the params of the entity, which has already been added.\n\t * @param {string} entityName - The entity whose position to use.\n\t * @param {number | undefined} mult - A multiply factor of the position.\n\t * @param {number | undefined} add - An added offset in the direction of the position.\n\t */\n\tsetEntityParams(entityName, mult, add) {\n\n\t\t// Check if it already exists.\n\t\tif (!this._entities.has(entityName)) {\n\t\t\tthrow new Error(`The entity ${entityName} has not been previously added to the controller.`);\n\t\t}\n\n\t\t// Update the params.\n\t\tconst params = this._entities.get(entityName);\n\t\tif (mult !== undefined) {\n\t\t\tparams.mult = mult;\n\t\t}\n\t\tif (add !== undefined) {\n\t\t\tparams.add = add;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the position.\n\t * @override\n\t * @package\n\t */\n\t__update() {\n\t\tconst accumulatedPosition = Pioneer.Vector3.pool.get();\n\t\tconst position = Pioneer.Vector3.pool.get();\n\n\t\t// Go through each entity,\n\t\taccumulatedPosition.set(0, 0, 0);\n\t\tfor (let i = 0, l = this._entities.size; i < l; i++) {\n\t\t\tconst entry = this._entities.getAt(i).value;\n\n\t\t\t// Get the entity.\n\t\t\tconst entity = entry.ref.get();\n\t\t\tif (entity === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get the position of the entity relative to the current parent.\n\t\t\tentity.getPositionRelativeToEntity(position, Pioneer.Vector3.Zero, this.getEntity().getParent());\n\n\t\t\t// Accumulate the position with the factors.\n\t\t\tconst magnitude = position.magnitude();\n\t\t\taccumulatedPosition.addMult(accumulatedPosition, position, entry.mult + (magnitude > 0 ? entry.add / magnitude : 0));\n\t\t}\n\n\t\t// Set the accumulated position.\n\t\tthis.getEntity().setPosition(accumulatedPosition);\n\n\t\tPioneer.Vector3.pool.release(accumulatedPosition);\n\t\tPioneer.Vector3.pool.release(position);\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/** A controller that zooms the camera to fit a list of entities within view. */\nexport class ZoomFitController extends Pioneer.BaseController {\n\t/**\n\t * Constructor.\n\t * @param {string} type - the type of the controller\n\t * @param {string} name - the name of the controller\n\t * @param {Pioneer.Entity} entity - the parent entity\n\t */\n\tconstructor(type, name, entity) {\n\t\tsuper(type, name, entity);\n\n\t\t/**\n\t\t * The list of entities and their factors.\n\t\t * @type {Pioneer.FastMap<string, { ref: Pioneer.EntityRef }>}\n\t\t * @private\n\t\t */\n\t\tthis._entities = new Pioneer.FastMap();\n\n\t\t/**\n\t\t * The flag that determines if the fit radius will take into account the point of view of the camera for a tighter fit.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._tightFit = false;\n\n\t\t/**\n\t\t * The flag that determines if the camera will zoom out only, or both in and out.\n\t\t * @type {boolean}\n\t\t * @private\n\t\t */\n\t\tthis._zoomOutOnly = false;\n\n\t\t/**\n\t\t * The edge size as a fraction of the minimum of the viewport width and height.\n\t\t * @type {number}\n\t\t * @private\n\t\t */\n\t\tthis._edgeSize = 0;\n\n\t\tthis.addModifiedState('position');\n\t}\n\n\t/**\n\t * Adds an entity with mult and add factors.\n\t * @param {string} entityName - The entity whose position to use.\n\t */\n\taddEntity(entityName) {\n\t\t// Set the ref.\n\t\tconst ref = new Pioneer.EntityRef(this.getEntity().getScene());\n\t\tref.setName(entityName);\n\n\t\t// Add it to the list.\n\t\tthis._entities.set(entityName, { ref });\n\n\t\t// Mark that this is dependent on the position of the entity.\n\t\tthis.addDependentState(entityName, 'position');\n\t}\n\n\t/**\n\t * Removes an entity.\n\t * @param {string} entityName\n\t */\n\tremoveEntity(entityName) {\n\t\t// Remove it from the list.\n\t\tthis._entities.delete(entityName);\n\n\t\t// Mark that this is no longer dependent on the position of the entity.\n\t\tthis.removeDependentState(entityName, 'position');\n\t}\n\n\t/**\n\t * Sets the flag that determines if the fit radius will take into account the point of view of the camera for a tighter fit.\n\t * @param {boolean} tightFit\n\t */\n\tsetTightFit(tightFit) {\n\t\tthis._tightFit = tightFit;\n\t}\n\n\t/**\n\t * Sets the flag that determines if the camera will zoom out only, or both in and out.\n\t * @param {boolean} zoomOutOnly\n\t */\n\tsetZoomOutOnly(zoomOutOnly) {\n\t\tthis._zoomOutOnly = zoomOutOnly;\n\t}\n\n\t/**\n\t * Sets the edge size as a fraction of the minimum of the viewport width and height.\n\t * @param {number} edgeSize\n\t */\n\tsetEdgeSize(edgeSize) {\n\t\tthis._edgeSize = edgeSize;\n\t}\n\n\t/**\n\t * Updates the position.\n\t * @override\n\t * @package\n\t */\n\t__update() {\n\t\t// Get the sin and tan field of view variables for distance calculations.\n\t\tlet tanHalfFov = 1;\n\t\tconst camera = this.getEntity().getComponentByClass(Pioneer.CameraComponent);\n\t\tif (camera !== null) {\n\t\t\tconst fieldOfView = Math.min(camera.getHorizontalFieldOfView(), camera.getVerticalFieldOfView());\n\t\t\tif (this._tightFit) {\n\t\t\t\ttanHalfFov = Math.tan(fieldOfView / 2.0);\n\t\t\t}\n\t\t\ttanHalfFov = Math.tan(fieldOfView / 2.0);\n\t\t}\n\n\t\t// Get the direction upon which we'll be zooming.\n\t\t// It will be the unit vector of the camera's position, or the camera's backward if the position vector is 0.\n\t\tconst direction = Pioneer.Vector3.pool.get();\n\t\tdirection.normalize(this.getEntity().getPosition());\n\t\tif (direction.magnitudeSqr() === 0) {\n\t\t\tthis.getEntity().getOrientation().getAxis(direction, 1);\n\t\t\tdirection.neg(direction);\n\t\t}\n\t\tif (direction.isNaN()) {\n\t\t\tdirection.copy(Pioneer.Vector3.YAxisNeg);\n\t\t}\n\n\t\t// Get the edge factor that widens the view appropriately depending on the field of view.\n\t\tconst factor = (1 + this._edgeSize / (0.5 - this._edgeSize)) / tanHalfFov;\n\n\t\t// Get the distance the camera should be at to see everything.\n\t\tlet maxDistance = 0;\n\t\tconst position = Pioneer.Vector3.pool.get();\n\t\tfor (let i = 0, l = this._entities.size; i < l; i++) {\n\t\t\tconst entry = this._entities.getAt(i).value;\n\n\t\t\t// Get the entity.\n\t\t\tconst entity = entry.ref.get();\n\t\t\tif (entity === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get the position of the entity relative to the current parent.\n\t\t\tentity.getPositionRelativeToEntity(position, Pioneer.Vector3.Zero, this.getEntity().getParent());\n\n\t\t\t// Get the extents radius of the entity.\n\t\t\tconst radius = entity.getExtentsRadius();\n\n\t\t\t// Get the distance that we should be away from this entity.\n\t\t\tlet distance = 0;\n\t\t\tif (this._tightFit) {\n\t\t\t\t// Get the position part along the direction.\n\t\t\t\tconst distanceAlongDirection = position.dot(direction);\n\n\t\t\t\t// Get the position part along the plane normal to the direction.\n\t\t\t\tposition.addMult(position, direction, -distanceAlongDirection);\n\t\t\t\tconst distanceAlongPane = position.magnitude();\n\n\t\t\t\t// Get the distance to zoom back for this object.\n\t\t\t\tdistance = distanceAlongDirection + factor * distanceAlongPane + radius * Math.sqrt(factor * factor + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// It's not using the tight-fit flag, so we're just going to use the distances for the (dist + radius)\n\t\t\t\t//   and do the distance calculation after the loop.\n\t\t\t\tdistance = position.magnitude() + radius;\n\t\t\t}\n\n\t\t\t// Max out the distance needed to see all of the entities.\n\t\t\tmaxDistance = Math.max(maxDistance, distance);\n\t\t}\n\t\tPioneer.Vector3.pool.release(position);\n\n\t\t// If it's not a tight fit, the maxDistance is just the max (dist + radius) all entities, so apply the equation to get the distance to zoom back.\n\t\tif (!this._tightFit) {\n\t\t\tmaxDistance = maxDistance * Math.sqrt(factor * factor + 1);\n\t\t}\n\n\t\t// If we're either zooming out or we can zoom in,\n\t\tif (!this._zoomOutOnly || maxDistance > this.getEntity().getPosition().magnitude()) {\n\t\t\t// Add the distance along the backward vector to the position.\n\t\t\tdirection.mult(direction, maxDistance);\n\n\t\t\t// Set the position.\n\t\t\tthis.getEntity().setPosition(direction);\n\t\t}\n\t\tPioneer.Vector3.pool.release(direction);\n\t}\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * A simple date and time class. Month starts at 1.\n * This is needed because the Date object (and moment.js) doesn't handle leap seconds.\n * Note that month starts at 1, not 0.\n */\nexport class DateTime {\n\t/**\n\t * Constructor.\n\t * @param {number} [year=1]\n\t * @param {number} [month=1]\n\t * @param {number} [day=1]\n\t * @param {number} [hour=0]\n\t * @param {number} [minute=0]\n\t * @param {number} [second=0]\n\t * @param {number} [millisecond=0]\n\t */\n\tconstructor(year = 1, month = 1, day = 1, hour = 0, minute = 0, second = 0, millisecond = 0) {\n\t\t/**\n\t\t * Year starting at 1 A.D.\n\t\t * @type {number}\n\t\t */\n\t\tthis.year = year;\n\n\t\t/**\n\t\t * Month starting at 1.\n\t\t * @type {number}\n\t\t */\n\t\tthis.month = month;\n\n\t\t/**\n\t\t * Day starting at 1.\n\t\t * @type {number}\n\t\t */\n\t\tthis.day = day;\n\n\t\t/**\n\t\t * The 24-hour.\n\t\t * @type {number}\n\t\t */\n\t\tthis.hour = hour;\n\n\t\t/**\n\t\t * The minute.\n\t\t * @type {number}\n\t\t */\n\t\tthis.minute = minute;\n\n\t\t/**\n\t\t * The second. Can go up to 60 for leap seconds.\n\t\t * @type {number}\n\t\t */\n\t\tthis.second = second;\n\n\t\t/**\n\t\t * The millisecond. Can be fractional.\n\t\t * @type {number}\n\t\t */\n\t\tthis.millisecond = millisecond;\n\t}\n\n\t/**\n\t * Copies a dateTime to this.\n\t * @param {DateTime} dateTime\n\t */\n\tcopy(dateTime) {\n\t\tthis.year = dateTime.year;\n\t\tthis.month = dateTime.month;\n\t\tthis.day = dateTime.day;\n\t\tthis.hour = dateTime.hour;\n\t\tthis.minute = dateTime.minute;\n\t\tthis.second = dateTime.second;\n\t\tthis.millisecond = dateTime.millisecond;\n\t}\n\n\t/**\n\t * Sets this from an ET time.\n\t * @param {number} et\n\t */\n\tfromET(et) {\n\t\tconst unixTime = Pioneer.TimeUtils.etToUnix(et);\n\t\t_date.setTime(unixTime * 1000.0);\n\t\tthis.year = _date.getUTCFullYear();\n\t\tthis.month = _date.getUTCMonth() + 1;\n\t\tthis.day = _date.getUTCDate();\n\t\tthis.hour = _date.getUTCHours();\n\t\tthis.minute = _date.getUTCMinutes();\n\t\tthis.second = _date.getUTCSeconds();\n\t\tthis.millisecond = _date.getUTCMilliseconds();\n\t\tfor (let i = 0, l = Pioneer.TimeUtils.leapSeconds.length; i < l; i++) {\n\t\t\tif (Math.floor(unixTime) === Pioneer.TimeUtils.leapSeconds[i] && unixTime === Pioneer.TimeUtils.etToUnix(et - 1)) {\n\t\t\t\tthis.second += 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets an ET time from this.\n\t * @returns {number}\n\t */\n\ttoET() {\n\t\t_date.setUTCFullYear(this.year);\n\t\t_date.setUTCMonth(this.month - 1);\n\t\t_date.setUTCDate(this.day);\n\t\t_date.setUTCHours(this.hour);\n\t\t_date.setUTCMinutes(this.minute);\n\t\t_date.setUTCSeconds(this.second);\n\t\t_date.setUTCMilliseconds(this.millisecond);\n\t\tconst unixTime = _date.getTime() / 1000.0;\n\t\tlet etTime = Pioneer.TimeUtils.unixToEt(unixTime);\n\t\tif (this.second === 60) {\n\t\t\tfor (let i = 0, l = Pioneer.TimeUtils.leapSeconds.length; i < l; i++) {\n\t\t\t\tif (Math.floor(unixTime) === Pioneer.TimeUtils.leapSeconds[i] + 1) {\n\t\t\t\t\tetTime -= 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn etTime;\n\t}\n\n\t/**\n\t * Sets this from an ordinal date (day of year) and time.\n\t * @param {number} year\n\t * @param {number} doy\n\t * @param {number} [hour=0]\n\t * @param {number} [minute=0]\n\t * @param {number} [second=0]\n\t * @param {number} [millisecond=0]\n\t */\n\tfromDOY(year, doy, hour = 0, minute = 0, second = 0, millisecond = 0) {\n\t\tlet passedDays = 0;\n\t\tthis.year = year;\n\t\tthis.month = 1;\n\t\tthis.hour = hour;\n\t\tthis.minute = minute;\n\t\tthis.second = second;\n\t\tthis.millisecond = millisecond;\n\t\tlet daysInMonth = this.getDaysInMonth();\n\t\twhile (doy > passedDays + daysInMonth && this.month < 12) {\n\t\t\tpassedDays += daysInMonth;\n\t\t\tthis.month += 1;\n\t\t\tdaysInMonth = this.getDaysInMonth();\n\t\t}\n\t\tthis.day = doy - passedDays;\n\t}\n\n\t/**\n\t * Gets the day of year for this.\n\t * @returns {number}\n\t */\n\ttoDOY() {\n\t\tconst originalMonth = this.month;\n\t\tlet doy = 0;\n\t\tfor (this.month = 1; this.month < originalMonth; this.month++) {\n\t\t\tdoy += this.getDaysInMonth();\n\t\t}\n\t\tthis.month = originalMonth;\n\t\tdoy += this.day;\n\t\treturn doy;\n\t}\n\n\t/**\n\t * Returns true if this is a leap year.\n\t * @returns {boolean}\n\t */\n\tisLeapYear() {\n\t\treturn ((this.year % 4 === 0) && (this.year % 100 !== 0)) || (this.year % 400 === 0);\n\t}\n\n\t/**\n\t * Returns the number of days in the month for this.\n\t * @returns {number}\n\t */\n\tgetDaysInMonth() {\n\t\tlet daysInMonth = _daysInMonth[this.month - 1];\n\t\tif (this.month === 2 && this.isLeapYear()) {\n\t\t\tdaysInMonth += 1;\n\t\t}\n\t\treturn daysInMonth;\n\t}\n\n\t/**\n\t * Parses text in the form of YYYY-MM-DD HH:MM:SS.ssssss, with the time and milliseconds optional.\n\t * @param {string} text\n\t */\n\tparse(text) {\n\t\tthis.year = parseInt(text.substring(0, 4));\n\t\tif (text.length > 5) {\n\t\t\tthis.month = parseInt(text.substring(5, 7));\n\t\t}\n\t\telse {\n\t\t\tthis.month = 1;\n\t\t}\n\t\tif (text.length > 8) {\n\t\t\tthis.day = parseInt(text.substring(8, 10));\n\t\t}\n\t\telse {\n\t\t\tthis.day = 1;\n\t\t}\n\t\tif (text.length > 11) {\n\t\t\tthis.hour = parseInt(text.substring(11, 13));\n\t\t\tthis.minute = parseInt(text.substring(14, 16));\n\t\t}\n\t\telse {\n\t\t\tthis.hour = 0;\n\t\t\tthis.minute = 0;\n\t\t}\n\t\tif (text.length > 17) {\n\t\t\tthis.second = parseInt(text.substring(17, 19));\n\t\t}\n\t\telse {\n\t\t\tthis.second = 0;\n\t\t}\n\t\tif (text.length > 20) {\n\t\t\tthis.millisecond = parseInt(text.substring(20)) * Math.pow(10, 23 - text.length);\n\t\t}\n\t\telse {\n\t\t\tthis.millisecond = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Parses text in the form of YYYY-DDD HH:MM:SS.ssssss.\n\t * @param {string} text\n\t */\n\tparseDOY(text) {\n\t\tconst year = parseInt(text.substring(0, 4));\n\t\tlet doy = 1;\n\t\tif (text.length > 5) {\n\t\t\tdoy = parseInt(text.substring(5, 8));\n\t\t}\n\t\tthis.fromDOY(year, doy);\n\t\tif (text.length > 9) {\n\t\t\tthis.hour = parseInt(text.substring(9, 11));\n\t\t\tthis.minute = parseInt(text.substring(12, 14));\n\t\t}\n\t\telse {\n\t\t\tthis.hour = 0;\n\t\t\tthis.minute = 0;\n\t\t}\n\t\tif (text.length > 15) {\n\t\t\tthis.second = parseInt(text.substring(15, 17));\n\t\t}\n\t\telse {\n\t\t\tthis.second = 0;\n\t\t}\n\t\tif (text.length > 18) {\n\t\t\tthis.millisecond = parseInt(text.substring(18)) * Math.pow(10, 21 - text.length);\n\t\t}\n\t\telse {\n\t\t\tthis.millisecond = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Converts this to a string of the form YYYY-MM-DD HH:MM:SS.ssssss.\n\t * @returns {string}\n\t */\n\ttoString() {\n\t\treturn `${this.year.toString().padStart(4, '0')}-${this.month.toString().padStart(2, '0')}-${this.day.toString().padStart(2, '0')} ${this.hour.toString().padStart(2, '0')}:${this.minute.toString().padStart(2, '0')}:${this.second.toString().padStart(2, '0')}.${Math.floor(this.millisecond * 1e3).toString().padStart(6, '0')}`;\n\t}\n\n\t/**\n\t * Converts this to a string of the form YYYY-DDD.\n\t * @returns {string}\n\t */\n\ttoStringDOY() {\n\t\treturn `${this.year.toString().padStart(4, '0')}-${this.toDOY().toString().padStart(3, '0')}`;\n\t}\n};\n\n/**\n * The number of days in a non-leap year month.\n * @type {number[]}\n * @private\n */\nconst _daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n/**\n * Temporary date that can be reused within functions.\n * @type {Date}\n * @private\n */\nconst _date = new Date();\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport { EntityUtils } from './entity_utils';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\t'1i_oumuamua': {\n\t\tgroups: ['comets'],\n\t\tocclusionRadius: 0.030,\n\t\textentsRadius: 0.225,\n\t\tlabel: 'ʻOumuamua',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/1i_oumuamua/oumuamua.gltf'\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1i_oumuamua/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: new Pioneer.Vector3(0.57735026919, 0.57735026919, 0.57735026919),\n\t\t\tperiodInHours: 8.10\n\t\t}]\n\t},\n\t'1p_halley': {\n\t\tgroups: ['comets'],\n\t\tradius: 6.0,\n\t\tlabel: 'Halley (1P/Halley)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [6, 6, 6]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1p_halley/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\tperiodInHours: 52,\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\taxisInFrameSpace: false\n\t\t}]\n\t},\n\t'103p_hartley_2': {\n\t\tgroups: ['comets'],\n\t\tradius: 2.0,\n\t\tlabel: 'Hartley 2 (103P/Hartley)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/103p_hartley_2/hartley_2.gltf'\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '103p_hartley_2/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '103p_hartley_2/ori'\n\t\t}]\n\t},\n\t'9p_tempel_1': {\n\t\tgroups: ['comets'],\n\t\tradius: 5.0,\n\t\tlabel: 'Tempel 1 (9P/Tempel)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/9p_tempel_1/9p_tempel.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: 90 }\n\t\t\t]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '9p_tempel_1/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '9p_tempel_1/ori'\n\t\t}]\n\t},\n\t'81p_wild_2': {\n\t\tgroups: ['comets'],\n\t\tradius: 2.5,\n\t\tlabel: 'Wild 2 (81P/Wild)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun'],\n\t\t\t[-800047271, 'jupiter'],\n\t\t\t[-797029475, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tlengthCoverages: [\n\t\t\t\t[1356976800, Number.NEGATIVE_INFINITY, -611927948.817],\n\t\t\t\t[189345600, -611927948.817, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '81p_wild_2/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '81p_wild_2/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '81p_wild_2/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\t'67p_churyumov_gerasimenko': {\n\t\tgroups: ['comets'],\n\t\tradius: 4.1,\n\t\tlabel: 'Churyumov–Gerasimenko (67P/C-G)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/67p_churyumov_gerasimenko/67p_churyumov_gerasimenko.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t],\n\t\t\tscale: 0.00124\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '67p_churyumov_gerasimenko/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: new Pioneer.Vector3(0.15191127889562422, 0.404099951782066, 0.9020123016422935),\n\t\t\taxisInFrameSpace: false,\n\t\t\tperiodInHours: 12.0550932412\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '67p_churyumov_gerasimenko/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Get the orientation just right for working with Rosetta photos.\n\t\t\tentity.setOrientation(new Pioneer.Quaternion(0.26732846830704055, 0.017948528101847026, 0.22012096235022358, 0.9379552773483394));\n\n\t\t\t// Geysers\n\t\t\tEntityUtils.addGeyser(entity, 1, 1, 100, 1, 1, [1, -0.25, 1.2], [0, 0, 1]);\n\t\t\tEntityUtils.addGeyser(entity, 2, 0.5, 100, 1, 1, [-1.2, -0.25, 0.6], [0.2, -0.5, 1]);\n\t\t\tEntityUtils.addGeyser(entity, 1, 0.07, 100, 1, 10, [-1.2, 0.1, 0.6], [0.2, -0.5, 1]);\n\t\t\tEntityUtils.addGeyser(entity, 1, 1, 100, 1, 1, [-0.8, 0.75, 1.0], [0.2, 0.5, 1]);\n\t\t\tEntityUtils.addGeyser(entity, 1, 0.5, 100, 1, 1, [-0.8, 0.35, -1.0], [0.2, 0.25, -1]);\n\t\t}\n\t},\n\t'19p_borrelly': {\n\t\tgroups: ['comets'],\n\t\tradius: 2.4,\n\t\tlabel: 'Borrelly (19P/Borrelly)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/19p_borrelly/borrelly.gltf'\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '19p_borrelly/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tc_1995_o1: {\n\t\tgroups: ['comets'],\n\t\tradius: 5.0,\n\t\tlabel: 'Hale-Bopp (C/1995 O1)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [5, 5, 5]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'c_1995_o1/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\taxisInFrameSpace: false,\n\t\t\tperiodInHours: 11.766666666\n\t\t}]\n\t},\n\tc_2010_x1: {\n\t\tgroups: ['comets'],\n\t\tradius: 5.0,\n\t\tlabel: 'Elenin (C/2010 X1)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun'],\n\t\t\t[370699266.182, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [5, 5, 5]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'c_2010_x1/sun/pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tc_2012_s1: {\n\t\tgroups: ['comets'],\n\t\tradius: 3.0,\n\t\tlabel: 'ISON (C/2012 S1)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun'],\n\t\t\t[440596867.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3, 3, 3]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'c_2012_s1/sun/pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tc_2013_a1: {\n\t\tgroups: ['comets'],\n\t\tradius: 5.0,\n\t\tlabel: 'Siding Spring (C/2013 A1)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [5, 5, 5]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'c_2013_a1/sun/pos'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\taxisInFrameSpace: false,\n\t\t\tperiodInHours: 8\n\t\t}]\n\t},\n\tc_2019_y4: {\n\t\tgroups: ['comets'],\n\t\tradius: 3.0,\n\t\tlabel: 'ATLAS (C/2019 Y4)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3, 3, 3]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'c_2019_y4/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tc_2020_f3: {\n\t\tgroups: ['comets'],\n\t\tradius: 6.0,\n\t\tlabel: 'NEOWISE (C/2020 F3)',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [6, 6, 6]\n\t\t},\n\t\tcomet: {},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'c_2020_f3/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\taxisInFrameSpace: false,\n\t\t\tperiodInHours: 7.58\n\t\t}]\n\t}\n});\n\n// Default export to help with tree-shaking.\nexport {};\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\trose_bowl: {\n\t\tgroups: ['comparison'],\n\t\tradius: 0.15,\n\t\tlabel: 'Rose Bowl',\n\t\tparents: [],\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/comparison/rose_bowl/rose_bowl.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tschool_bus: {\n\t\tgroups: ['comparison'],\n\t\tradius: 0.0065,\n\t\tlabel: 'School bus',\n\t\tparents: [],\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/comparison/school_bus/school_bus.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tscientist: {\n\t\tgroups: ['comparison'],\n\t\tradius: 0.000835,\n\t\tlabel: 'Scientist',\n\t\tparents: [],\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/comparison/scientist/scientist.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\n\nEntity.register({\n\tmoon: {\n\t\tgroups: ['earth', 'moons'],\n\t\tradius: 1737.4,\n\t\tlabel: 'Moon',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.0, 0.6, 0.8, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 1737.4,\n\t\t\tpolarRadius: 1737.4,\n\t\t\tplanetographic: true\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['normalMap', 'shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'moon/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t},\n\t\t\t\tnormal: {\n\t\t\t\t\turl: 'moon/normal_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 2048]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['earth']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'moon/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'moon/ori'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport { EntityUtils } from './entity_utils';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_3d_winds: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00200,\n\t\textentsRadius: 0.00250,\n\t\tlabel: '3D-Winds',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_3d_winds'\n\t\t}]\n\t},\n\tsc_ace: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0008,\n\t\textentsRadius: 0.0023,\n\t\tlabel: 'ACE',\n\t\tparents: [\n\t\t\t[265550465.18489534, 'earth'],\n\t\t\t[694267269.1839212, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 31715490.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ace/ace.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_ace',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.0033\n\t\t}]\n\t},\n\tsc_acrimsat: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0015,\n\t\tlabel: 'ACRIMSAT',\n\t\tparents: [\n\t\t\t[-963797, 'earth'],\n\t\t\t[459950467, ''] // End of mission\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_acrimsat/acrimsat.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_acrimsat'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.00238\n\t\t}]\n\t},\n\tsc_aim: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00070,\n\t\textentsRadius: 0.0014,\n\t\tlabel: 'AIM',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5788.83\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_aim'\n\t\t}]\n\t},\n\tsc_aqua: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00400,\n\t\textentsRadius: 0.015,\n\t\tlabel: 'Aqua',\n\t\tparents: [\n\t\t\t[73781738, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_aqua/Aqua.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_aqua'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_aqua',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_ascends: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'ASCENDS',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_ascends'\n\t\t}]\n\t},\n\tsc_aura: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.003450,\n\t\textentsRadius: 0.017,\n\t\tlabel: 'Aura',\n\t\tparents: [\n\t\t\t[143161358, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_aura/Aura.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_aura'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_aura',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_c_nofs: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'C/NOFS',\n\t\tparents: [\n\t\t\t[352800006.1854904, 'earth'],\n\t\t\t[502051928.18300515, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_c_nofs'\n\t\t}]\n\t},\n\tsc_calipso: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001650,\n\t\textentsRadius: 0.005,\n\t\tlabel: 'CALIPSO',\n\t\tparents: [\n\t\t\t[199506047, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_calipso/calipso.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_calipso'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_calipso',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_chandra: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0059,\n\t\textentsRadius: 0.010,\n\t\tlabel: 'Chandra',\n\t\tparents: [\n\t\t\t[339465600, 'earth'],\n\t\t\t[709344000, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 228505.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_chandra/chandra.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_chandra/earth/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: new Pioneer.Vector3(-0.70710678118, -0.70710678118, 0)\n\t\t\t}\n\t\t}]\n\t},\n\tsc_clarreo: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'CLARREO',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_clarreo'\n\t\t}]\n\t},\n\tsc_cloudsat: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0025,\n\t\textentsRadius: 0.0025,\n\t\tlabel: 'CloudSat',\n\t\tparents: [\n\t\t\t[199491286, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cloudsat/CloudSat.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cloudsat'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cloudsat',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cluster_ii_fm5: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001450,\n\t\textentsRadius: 0.00435,\n\t\tlabel: 'Rumba',\n\t\tparents: [\n\t\t\t[19105314, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 195541.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cluster_ii/cluster_ii.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cluster_ii_fm5'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cluster_ii_fm5',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cluster_ii_fm6: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001450,\n\t\textentsRadius: 0.00435,\n\t\tlabel: 'Salsa',\n\t\tparents: [\n\t\t\t[17028089, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 195351.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cluster_ii/cluster_ii.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cluster_ii_fm6'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cluster_ii_fm6',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cluster_ii_fm7: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001450,\n\t\textentsRadius: 0.00435,\n\t\tlabel: 'Samba',\n\t\tparents: [\n\t\t\t[17028093, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 195316.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cluster_ii/cluster_ii.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cluster_ii_fm7'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cluster_ii_fm7',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cluster_ii_fm8: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001450,\n\t\textentsRadius: 0.00435,\n\t\tlabel: 'Tango',\n\t\tparents: [\n\t\t\t[19105052, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 195388.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cluster_ii/cluster_ii.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cluster_ii_fm8'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cluster_ii_fm8',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 1',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_1'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_1',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 2',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_2',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_3: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 3',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_3'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_3',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_4: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 4',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_4'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_4',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_5: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 5',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_5'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_5',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_6: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 6',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth'],\n\t\t\t[722736069, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_6'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_6',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_7: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 7',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_7'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_7',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_cygnss_8: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0008,\n\t\tlabel: 'CYGNSS 8',\n\t\tparents: [\n\t\t\t[548415404.1851876, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cygnss/CYGNSS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cygnss_8'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_cygnss_8',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_dscovr: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00090,\n\t\textentsRadius: 0.0020,\n\t\tlabel: 'DSCOVR',\n\t\tparents: [\n\t\t\t[476711467.18497694, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 60 * 60 * 24 * 365\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_dscovr/dscovr.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_dscovr/earth/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_dscovr',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_eo_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0030,\n\t\textentsRadius: 0.0010,\n\t\tlabel: 'EO-1',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[544104069.186, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_eo_1/eo-1.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: 45 }\n\t\t\t],\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_eo_1'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_eo_1',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_explorer_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0010,\n\t\textentsRadius: 0.0010,\n\t\tlabel: 'Explorer 1',\n\t\tparents: [\n\t\t\t[-1322726967, 'earth'],\n\t\t\t[-939025103, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_explorer_1_v2/explorer_1.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_explorer_1/earth'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_explorer_1',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.000022\n\t\t}]\n\t},\n\tsc_face: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'FACE',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth'],\n\t\t\t[631022168.1838934, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_face'\n\t\t}]\n\t},\n\tsc_fgrst: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00140,\n\t\textentsRadius: 0.0040,\n\t\tlabel: 'FGRST',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[661006268.1833516, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_fgrst'\n\t\t}]\n\t},\n\tsc_gacm: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'GACM',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_gacm'\n\t\t}]\n\t\t// mission is cancelled\n\t},\n\tsc_galex: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0010,\n\t\textentsRadius: 0.00140,\n\t\tlabel: 'GALEX',\n\t\tparents: [\n\t\t\t[352800006.1854904, 'earth'],\n\t\t\t[425718607.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galex'\n\t\t}]\n\t},\n\tsc_geo_cape: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'GEO-CAPE',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_geo_cape'\n\t\t}]\n\t\t// mission is cancelled\n\t},\n\tsc_geotail: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0018,\n\t\textentsRadius: 0.003,\n\t\tlabel: 'Geotail',\n\t\tparents: [\n\t\t\t[-234758765, 'earth'],\n\t\t\t[722891591, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 450372.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_geotail/geotail.gltf',\n\t\t\tshadowEntities: ['earth']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_geotail/earth/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.662, 0.749, 0, 0)\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.00083333333,\n\t\t\trelativeToTime: 0\n\t\t}]\n\t},\n\tsc_goes_12: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.003,\n\t\tlabel: 'GOES 12',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[661006268.1833516, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_goes_12'\n\t\t}]\n\t},\n\tsc_goes_13: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.003,\n\t\tlabel: 'GOES 13',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_goes_13'\n\t\t}]\n\t},\n\tsc_goes_14: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.003,\n\t\tlabel: 'GOES 14',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_goes_14'\n\t\t}]\n\t},\n\tsc_goes_15: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.003,\n\t\tlabel: 'GOES 15',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_goes_15'\n\t\t}]\n\t},\n\tsc_gpm: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0020,\n\t\textentsRadius: 0.007,\n\t\tlabel: 'GPM',\n\t\tparents: [\n\t\t\t[629484755.7856493, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5549.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_gpm/GPM.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_gpm'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_gpm',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst spin = entity.addControllerByClass(Pioneer.SpinController);\n\t\t\tspin.setJoint('GPM_antenna');\n\t\t\tspin.setRate(Pioneer.MathUtils.degToRad(192));\n\t\t\tspin.setAxis(Pioneer.Vector3.YAxisNeg, true);\n\t\t\tspin.setClampedToRealTime(true);\n\t\t}\n\t},\n\tsc_grace_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.0019,\n\t\tlabel: 'GRACE-1',\n\t\tparents: [\n\t\t\t[69656411.096817, 'earth'],\n\t\t\t[562382552.2587994, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5575.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grace/grace.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_grace_1/earth/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sc_grace_2',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst microwave = /** @type {Pioneer.ConnectedSpriteComponent} */(entity.getComponent('microwave'));\n\t\t\t\tconst engine = entity.getScene().getEngine();\n\t\t\t\tconst newOffset = Pioneer.MathUtils.wrap(microwave.getTextureYOffset() - Pioneer.MathUtils.clamp(engine.getTimeRate(), -1, +1) * engine.getDeltaTime(), 0, 1);\n\t\t\t\tmicrowave.setTextureYOffset(newOffset);\n\t\t\t\tconst other = entity.getScene().getEntity('sc_grace_2');\n\t\t\t\tconst shouldBeEnabled = other !== null && other.getPosition().distance(entity.getPosition()) <= 3929;\n\t\t\t\tif (shouldBeEnabled !== microwave.isEnabled()) {\n\t\t\t\t\tmicrowave.setEnabled(shouldBeEnabled);\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: entity => {\n\t\t\tconst microwave = entity.addComponentByClass(Pioneer.ConnectedSpriteComponent, 'microwave');\n\t\t\tmicrowave.setTextureUrl('$STATIC_ASSETS_URL/sprites/sine_wave.png');\n\t\t\tmicrowave.setEntity1('sc_grace_1');\n\t\t\tmicrowave.setEntity1Offset(new Pioneer.Vector3(0, -0.00165, 0));\n\t\t\tmicrowave.setEntity2('sc_grace_2');\n\t\t\tmicrowave.setEntity2Offset(new Pioneer.Vector3(0, -0.00165, 0));\n\t\t\tmicrowave.setWidths(0.0005, 0.0005);\n\t\t\tmicrowave.setColorMultiplier(new Pioneer.Color(0.5, 1.0, 1.0));\n\t\t\tmicrowave.setTextureRepeat(true);\n\t\t\tmicrowave.setTextureStretch(4);\n\t\t}\n\t},\n\tsc_grace_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.0019,\n\t\tlabel: 'GRACE-2',\n\t\tparents: [\n\t\t\t[69656411.096817, 'earth'],\n\t\t\t[562382552.2588, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5575.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grace/grace.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_grace_2/earth/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sc_grace_1',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_grace_fo1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.0019,\n\t\tlabel: 'GRACE-FO 1',\n\t\tparents: [\n\t\t\t[580290547.185, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5575.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grace_fo/graceFO.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_grace_fo1'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sc_grace_fo2',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst microwave = /** @type {Pioneer.ConnectedSpriteComponent} */(entity.getComponent('microwave'));\n\t\t\t\tconst engine = entity.getScene().getEngine();\n\t\t\t\tconst newOffset = Pioneer.MathUtils.wrap(microwave.getTextureYOffset() - Pioneer.MathUtils.clamp(engine.getTimeRate(), -1, +1) * engine.getDeltaTime(), 0, 1);\n\t\t\t\tmicrowave.setTextureYOffset(newOffset);\n\t\t\t\tconst other = entity.getScene().getEntity('sc_grace_fo2');\n\t\t\t\tconst shouldBeEnabled = other !== null && other.getPosition().distance(entity.getPosition()) <= 3929;\n\t\t\t\tif (shouldBeEnabled !== microwave.isEnabled()) {\n\t\t\t\t\tconst laser1 = /** @type {Pioneer.ConnectedSpriteComponent} */(entity.getComponent('laser1'));\n\t\t\t\t\tconst laser2 = /** @type {Pioneer.ConnectedSpriteComponent} */(entity.getComponent('laser2'));\n\t\t\t\t\tmicrowave.setEnabled(shouldBeEnabled);\n\t\t\t\t\tlaser1.setEnabled(shouldBeEnabled);\n\t\t\t\t\tlaser2.setEnabled(shouldBeEnabled);\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: entity => {\n\t\t\tconst microwave = entity.addComponentByClass(Pioneer.ConnectedSpriteComponent, 'microwave');\n\t\t\tmicrowave.setTextureUrl('$STATIC_ASSETS_URL/sprites/sine_wave.png');\n\t\t\tmicrowave.setEntity1('sc_grace_fo1');\n\t\t\tmicrowave.setEntity1Offset(new Pioneer.Vector3(0, 0, -0.00165));\n\t\t\tmicrowave.setEntity2('sc_grace_fo2');\n\t\t\tmicrowave.setEntity2Offset(new Pioneer.Vector3(0, 0, -0.00165));\n\t\t\tmicrowave.setWidths(0.0005, 0.0005);\n\t\t\tmicrowave.setColorMultiplier(new Pioneer.Color(0.5, 1.0, 1.0));\n\t\t\tmicrowave.setTextureRepeat(true);\n\t\t\tmicrowave.setTextureStretch(4);\n\n\t\t\tconst laser1 = entity.addComponentByClass(Pioneer.ConnectedSpriteComponent, 'laser1');\n\t\t\tlaser1.setTextureUrl('$STATIC_ASSETS_URL/sprites/line.png');\n\t\t\tlaser1.setEntity1('sc_grace_fo1');\n\t\t\tlaser1.setEntity1Offset(new Pioneer.Vector3(+0.0003, 0.00015, -0.00165));\n\t\t\tlaser1.setEntity2('sc_grace_fo2');\n\t\t\tlaser1.setEntity2Offset(new Pioneer.Vector3(-0.0003, 0.00015, -0.00165));\n\t\t\tlaser1.setWidths(0.00002, 0.00002);\n\t\t\tlaser1.setColorMultiplier(new Pioneer.Color(1, 0.24, 0.64));\n\t\t\tlaser1.setTextureRepeat(false);\n\n\t\t\tconst laser2 = entity.addComponentByClass(Pioneer.ConnectedSpriteComponent, 'laser2');\n\t\t\tlaser2.setTextureUrl('$STATIC_ASSETS_URL/sprites/line.png');\n\t\t\tlaser2.setEntity1('sc_grace_fo1');\n\t\t\tlaser2.setEntity1Offset(new Pioneer.Vector3(-0.0003, 0.00015, -0.00165));\n\t\t\tlaser2.setEntity2('sc_grace_fo2');\n\t\t\tlaser2.setEntity2Offset(new Pioneer.Vector3(+0.0003, 0.00015, -0.00165));\n\t\t\tlaser2.setWidths(0.00002, 0.00002);\n\t\t\tlaser2.setColorMultiplier(new Pioneer.Color(1, 0.24, 0.64));\n\t\t\tlaser2.setTextureRepeat(false);\n\t\t}\n\t},\n\tsc_grace_fo2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.0019,\n\t\tlabel: 'GRACE-FO 2',\n\t\tparents: [\n\t\t\t[580290547.185, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5575.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grace_fo/graceFO.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_grace_fo2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sc_grace_fo1',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_grifex: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.000150,\n\t\textentsRadius: 0.00034,\n\t\tlabel: 'GRIFEX',\n\t\tparents: [\n\t\t\t[476542806.1849232, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5706.25\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grifex/grifex.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_grifex'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_grifex',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_hubble_space_telescope: {\n\t\tgroups: ['earth', 'spacecraft', 'telescope'],\n\t\tocclusionRadius: 0.0066,\n\t\textentsRadius: 0.0066,\n\t\tlabel: 'Hubble',\n\t\tparents: [\n\t\t\t[-305719099.92837775, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5748.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_hubble/Hubble.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_hubble_space_telescope/earth/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_hubble_space_telescope',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_hyspiri: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.004,\n\t\textentsRadius: 0.012,\n\t\tlabel: 'HyspIRI',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5733.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_hyspiri/HyspIRI.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_hyspiri'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_hyspiri',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_ibex: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0005,\n\t\textentsRadius: 0.001,\n\t\tlabel: 'IBEX',\n\t\tparents: [\n\t\t\t[277718464.1823969, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 797489.16\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ibex/iBEX.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_ibex',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.00416\n\t\t}]\n\t},\n\tsc_icesat_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00198,\n\t\textentsRadius: 0.0065,\n\t\tlabel: 'ICESat-2',\n\t\tparents: [\n\t\t\t[590288589.182, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5653.2\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_icesatii/ICESat2.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_icesat_2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_icesat_2',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_image: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00113,\n\t\textentsRadius: 0.006,\n\t\tlabel: 'IMAGE',\n\t\t// Boom is 500 meters long!  Does not appear in explorer.\n\t\tparents: [\n\t\t\t[7288547.186, 'earth'],\n\t\t\t[188163587.1835355, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 55541\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_image/image.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_image'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_image',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_integral: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0025,\n\t\textentsRadius: 0.005,\n\t\tlabel: 'INTEGRAL',\n\t\tparents: [\n\t\t\t[367498866.18276465, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 229689.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_integral'\n\t\t}]\n\t},\n\tsc_ipex: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0001,\n\t\textentsRadius: 0.00015,\n\t\tlabel: 'IPEX',\n\t\tparents: [\n\t\t\t[439586087.183, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5862.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ipex/IPEX.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_ipex'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_ipex',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_isas: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001,\n\t\textentsRadius: 0.0015,\n\t\tlabel: 'ISAS',\n\t\tparents: [\n\t\t\t[-186102945.06492478, 'earth'],\n\t\t\t[-183424845.06434903, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 92680.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_isas/isas.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_isas',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_isas',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_iss: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.008,\n\t\textentsRadius: 0.072,\n\t\tlabel: 'ISS',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_iss/ISS_stationary.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_iss'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_iss',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst vectorForAlphaGimbal = new Pioneer.Vector3(0, 0.5, 0.5 * Math.sqrt(3.0));\n\t\t\tconst vectorForBetaGimbalAxis = new Pioneer.Vector3(0, 0.5 * Math.sqrt(3.0), -0.5);\n\t\t\tconst vectorForBetaGimbalPoint = new Pioneer.Vector3(0, 0.5, 0.5 * Math.sqrt(3.0));\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\tlet align = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('20_P4_Truss');\n\t\t\talign.setPrimaryAxis(Pioneer.Vector3.XAxis);\n\t\t\talign.setSecondaryAxis(vectorForAlphaGimbal);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the left solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('23_S4_Truss');\n\t\t\talign.setPrimaryAxis(Pioneer.Vector3.XAxis);\n\t\t\talign.setSecondaryAxis(vectorForAlphaGimbal);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('20_P4_Truss_01');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('20_P4_Truss_02');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('23_S4_Truss_01');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('23_S4_Truss_02');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('32_S6_Truss_01');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('32_S6_Truss_02');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('08_P6_Truss_01');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Align the right solar panel alpha gimbal to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('08_P6_Truss_02');\n\t\t\talign.setPrimaryAxis(vectorForBetaGimbalAxis);\n\t\t\talign.setSecondaryAxis(vectorForBetaGimbalPoint);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\n\t\t\t// Make RapidScat antenna spin.\n\t\t\tconst rapidScatSpin = entity.addControllerByClass(Pioneer.SpinController);\n\t\t\trapidScatSpin.setJoint('RapidScat_dish');\n\t\t\trapidScatSpin.setRate(Pioneer.MathUtils.degToRad(108));\n\t\t\trapidScatSpin.setAxis(Pioneer.Vector3.ZAxis, true);\n\t\t\trapidScatSpin.setClampedToRealTime(true);\n\t\t\trapidScatSpin.setCoverage(new Pioneer.Interval(465418867.184, 524890952.183)); // Lost power at 2016-08-19T15:01:24.\n\n\t\t\t// Show ECOSTRESS only when mounted.\n\t\t\tEntityUtils.showSubObjectDuringInterval(entity, 'Ecostress', 584127348, Number.POSITIVE_INFINITY);\n\n\t\t\t// Show EMIT only when mounted.\n\t\t\tEntityUtils.showSubObjectDuringInterval(entity, 'EMIT', 711345507, Number.POSITIVE_INFINITY);\n\n\t\t\t// Show OCO-3 only when mounted.\n\t\t\tEntityUtils.showSubObjectDuringInterval(entity, 'OCO3', 610718469, Number.POSITIVE_INFINITY);\n\n\t\t\t// Show RapidScat only when mounted.\n\t\t\tEntityUtils.showSubObjectDuringInterval(entity, '45_RapidScat', 465418867.184, 575406069.184);\n\t\t}\n\t},\n\tsc_iss_ecostress: {\n\t\tgroups: ['instrument', 'sc_iss'],\n\t\tocclusionRadius: 0.001,\n\t\textentsRadius: 0.0012,\n\t\tlabel: 'ECOSTRESS',\n\t\tparents: [\n\t\t\t[584127348, 'sc_iss']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tposition: new Pioneer.Vector3(0.0200195, -0.00202631, 0.0161099),\n\t\t\tcoverage: [584127348, Number.POSITIVE_INFINITY]\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(584127348, Number.POSITIVE_INFINITY));\n\t\t}\n\t},\n\tsc_iss_emit: {\n\t\tgroups: ['instrument', 'sc_iss'],\n\t\tocclusionRadius: 0.0008,\n\t\textentsRadius: 0.0013,\n\t\tlabel: 'EMIT',\n\t\tparents: [\n\t\t\t[711345507, 'sc_iss']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tposition: new Pioneer.Vector3(0.024, -0.00225, 0.00325),\n\t\t\tcoverage: [711345507, Number.POSITIVE_INFINITY]\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(711345507, Number.POSITIVE_INFINITY));\n\t\t}\n\t},\n\tsc_iss_oco_3: {\n\t\tgroups: ['instrument', 'sc_iss'],\n\t\tocclusionRadius: 0.0008,\n\t\textentsRadius: 0.0012,\n\t\tlabel: 'OCO-3',\n\t\tparents: [\n\t\t\t[610718469, 'sc_iss']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tposition: new Pioneer.Vector3(0.0156458, -0.00195982, 0.0200232),\n\t\t\tcoverage: [610718469, Number.POSITIVE_INFINITY]\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(610718469, Number.POSITIVE_INFINITY));\n\t\t}\n\t},\n\tsc_iss_rapidscat: {\n\t\tgroups: ['instrument', 'sc_iss'],\n\t\tocclusionRadius: 0.0008,\n\t\textentsRadius: 0.0002,\n\t\tlabel: 'RapidScat',\n\t\tparents: [\n\t\t\t[465418867.184, 'sc_iss'],\n\t\t\t[575406069.184, '']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tposition: new Pioneer.Vector3(-0.0100725, -0.00133401, 0.0162145),\n\t\t\tcoverage: [465418867.184, 575406069.184]\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(465418867.184, 575406069.184));\n\t\t}\n\t},\n\tsc_ixpe: {\n\t\tgroups: ['earth', 'spacecraft', 'telescope'],\n\t\tocclusionRadius: 0.0055,\n\t\textentsRadius: 0.0026,\n\t\tlabel: 'IXPE',\n\t\tparents: [\n\t\t\t[692324766.6007013, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5400\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ixpe/ixpe.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_ixpe'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_jason_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0014,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'Jason-1',\n\t\tparents: [\n\t\t\t[352800006.1854904, 'earth'],\n\t\t\t[458074266.1839004, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6744.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ostm/ostm.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_jason_1',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_jason_1',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_jason_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0014,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'OSTM/Jason-2',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[623851269.182, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6744.25\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ostm/ostm.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_jason_2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_jason_2',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_jason_3: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0014,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'Jason-3',\n\t\tparents: [\n\t\t\t[506497796.18443054, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6721.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ostm/ostm.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_jason_3'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_jason_3',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_jwst: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.010,\n\t\tlabel: 'James Webb Space Telescope',\n\t\tparents: [\n\t\t\t[693708549.184, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5900033.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_jwst/webb_deployed.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_jwst/earth/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 694937889.184],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_jwst/webb_stowed.gltf');\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_jwst/webb_deployed.gltf');\n\t\t\t}\n\t\t}]\n\t},\n\tsc_landsat_5: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'Landsat 5',\n\t\tparents: [\n\t\t\t[352800006.1854904, 'earth'],\n\t\t\t[473889066.18410677, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_landsat_5'\n\t\t}]\n\t},\n\tsc_landsat_7: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.004,\n\t\textentsRadius: 0.012,\n\t\tlabel: 'Landsat 7',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_landsat_7/LandSat7.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_landsat_7'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_landsat_7',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_landsat_8: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.004,\n\t\textentsRadius: 0.0095,\n\t\tlabel: 'Landsat 8',\n\t\tparents: [\n\t\t\t[413877787.185, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_landsat_8/LandSat8.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_landsat_8'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_landsat_8',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_landsat_9: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.004,\n\t\textentsRadius: 0.015,\n\t\tlabel: 'Landsat 9',\n\t\tparents: [\n\t\t\t[686043940.723348, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_landsat_9/Landsat9.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_landsat_9'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_landsat_9',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_list: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'LIST',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_list'\n\t\t}]\n\t},\n\tsc_m_cubed: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0001,\n\t\tlabel: 'M-Cubed',\n\t\tparents: [\n\t\t\t[373032066.182, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5768.333333333333\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_m_cubed/mCubed.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_m_cubed'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_m_cubed',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_mcubed_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0001,\n\t\textentsRadius: 0.0002,\n\t\tlabel: 'MCubed-2',\n\t\tparents: [\n\t\t\t[439560067.183, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5861.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mcubed_2/M-Cubed2.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mcubed_2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_mcubed_2',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_mms_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0017,\n\t\textentsRadius: 0.013,\n\t\tlabel: 'MMS 1',\n\t\tparents: [\n\t\t\t[479519767.1855569, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 85994.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mms/MMS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mms_1'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.00556\n\t\t}]\n\t},\n\tsc_mms_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0017,\n\t\textentsRadius: 0.013,\n\t\tlabel: 'MMS 2',\n\t\tparents: [\n\t\t\t[479519767.1855569, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 85962.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mms/MMS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mms_2'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.00556\n\t\t}]\n\t},\n\tsc_mms_3: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0017,\n\t\textentsRadius: 0.013,\n\t\tlabel: 'MMS 3',\n\t\tparents: [\n\t\t\t[479519767.1855569, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86347.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mms/MMS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mms_3'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.00556\n\t\t}]\n\t},\n\tsc_mms_4: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0017,\n\t\textentsRadius: 0.013,\n\t\tlabel: 'MMS 4',\n\t\tparents: [\n\t\t\t[479519767.1855569, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86024.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mms/MMS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mms_4'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.00556\n\t\t}]\n\t},\n\tsc_nisar: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.006,\n\t\textentsRadius: 0.017,\n\t\tlabel: 'NISAR',\n\t\tparents: [\n\t\t\t[757339269, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5573.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_nisar/Nisar.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'orbitalElements',\n\t\t\teccentricity: 0,\n\t\t\tsemiMajorAxis: 7118,\n\t\t\tmeanAngularMotion: 0.0011382582,\n\t\t\tmeanAnomalyAtEpoch: 0,\n\t\t\tinclination: Math.PI / 180 * 98.5,\n\t\t\tlongitudeOfAscendingNode: 0,\n\t\t\targumentOfPeriapsis: 0,\n\t\t\tcoverage: [757339269, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_nisar',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_noaa_14: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'NOAA 14',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[661006268.1833516, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_noaa_14'\n\t\t}]\n\t},\n\tsc_noaa_15: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'NOAA 15',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_noaa_15'\n\t\t}]\n\t},\n\tsc_noaa_16: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'NOAA 16',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[661006268.1833516, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_noaa_16'\n\t\t}]\n\t},\n\tsc_noaa_17: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'NOAA 17',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[661006268.1833516, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_noaa_17'\n\t\t}]\n\t},\n\tsc_noaa_18: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'NOAA 18',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_noaa_18'\n\t\t}]\n\t},\n\tsc_noaa_19: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'NOAA 19',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_noaa_19'\n\t\t}]\n\t},\n\tsc_nustar: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.006,\n\t\textentsRadius: 0.006,\n\t\tlabel: 'NuSTAR',\n\t\tparents: [\n\t\t\t[392875303.185, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5798.66\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_nustar/nustar.gltf',\n\t\t\tshadowEntities: ['earth']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_nustar'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: 'sun',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_oco_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0021,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'OCO-2',\n\t\tparents: [\n\t\t\t[457567050.184, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.333333333333\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_oco_2/oco2.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_oco_2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_path: {\n\t\t// mission cancelled\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'PATH',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_path'\n\t\t}]\n\t},\n\tsc_polar: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0012,\n\t\textentsRadius: 0.005,\n\t\tlabel: 'Polar',\n\t\tparents: [\n\t\t\t[-121608237.81469652, 'earth'],\n\t\t\t[262612565.1855274, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 66571.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_polar/polar.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_polar',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_polar',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_quikscat: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0016,\n\t\textentsRadius: 0.0018,\n\t\tlabel: 'QuikSCAT',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[591710469.182, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6061.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_quikscat/QuikSCAT.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_quikscat'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_quikscat',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_race: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.00015,\n\t\tlabel: 'RACE',\n\t\tparents: [\n\t\t\t[467726467.182, 'earth'],\n\t\t\t[467812867.182, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_race'\n\t\t}]\n\t},\n\tsc_raincube: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00035,\n\t\textentsRadius: 0.0005,\n\t\tlabel: 'RainCube',\n\t\tparents: [\n\t\t\t[608189026.1856545, 'earth'],\n\t\t\t[662040069.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5743.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_raincube/Raincube.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_raincube'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_raincube',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_rax_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.0002,\n\t\tlabel: 'RAX-2',\n\t\tparents: [\n\t\t\t[373067348.182, 'earth'],\n\t\t\t[418824067.186, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5743.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rax_2'\n\t\t}]\n\t},\n\tsc_rbsp_a: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'Van Allen Probe A',\n\t\tparents: [\n\t\t\t[399585967.183, 'earth'],\n\t\t\t[624628869.182, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 32214.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_rbsp/rbsp.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rbsp_a'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_rbsp_a',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_rbsp_b: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'Van Allen Probe B',\n\t\tparents: [\n\t\t\t[399585967.183, 'earth'],\n\t\t\t[616766469.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 32574.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_rbsp/rbsp.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rbsp_b'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_rbsp_b',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_sac_d: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.0045,\n\t\tlabel: 'Aquarius',\n\t\tparents: [\n\t\t\t[360987666.185, 'earth'],\n\t\t\t[486907267.185, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5884.25\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_sac_d/aquarius.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_sac_d'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_sac_d',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_sclp: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'SCLP',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_sclp'\n\t\t}]\n\t},\n\tsc_sdo: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0022,\n\t\textentsRadius: 0.00315,\n\t\tlabel: 'SDO',\n\t\tparents: [\n\t\t\t[505918808.18474686, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86137.66\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_sdo/sdo.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_sdo'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_sdo',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_sentinel_6: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0026,\n\t\textentsRadius: 0.0031,\n\t\tlabel: 'Sentinel-6 Michael Freilich',\n\t\tparents: [\n\t\t\t[659322339.7879795, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_sentinel_6/Sentinel6.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_sentinel_6'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_sentinel_6',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_smap: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.009,\n\t\tlabel: 'SMAP',\n\t\tparents: [\n\t\t\t[476542806.1849232, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5906.8\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_smap/SMAP.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_smap'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_smap',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst spin = entity.addControllerByClass(Pioneer.SpinController);\n\t\t\tspin.setJoint('arm_etc');\n\t\t\tspin.setRate(Pioneer.MathUtils.degToRad(87.6));\n\t\t\tspin.setAxis(Pioneer.Vector3.YAxis, true);\n\t\t\tspin.setClampedToRealTime(true);\n\t\t}\n\t},\n\tsc_soho: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00215,\n\t\textentsRadius: 0.00425,\n\t\tlabel: 'SOHO',\n\t\tparents: [\n\t\t\t[265550465.18489534, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 60 * 60 * 24 * 365\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_soho/soho.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_soho',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_soho',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_sorce: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.001,\n\t\textentsRadius: 0.0022,\n\t\tlabel: 'SORCE',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth'],\n\t\t\t[635860869.185, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5812.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_sorce/sorce.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_sorce'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_sorce',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_starling_1: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00023,\n\t\textentsRadius: 0.00076,\n\t\tlabel: 'Starling-1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_starling/starling.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_starling_1'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_starling_1',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_starling_2: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00023,\n\t\textentsRadius: 0.00076,\n\t\tlabel: 'Starling-2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_starling/starling.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_starling_2'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_starling_2',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_starling_3: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00023,\n\t\textentsRadius: 0.00076,\n\t\tlabel: 'Starling-3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_starling/starling.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_starling_3'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_starling_3',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_starling_4: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00023,\n\t\textentsRadius: 0.00076,\n\t\tlabel: 'Starling-4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_starling/starling.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_starling_4'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_starling_4',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_suomi_npp: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0022,\n\t\textentsRadius: 0.008,\n\t\tlabel: 'Suomi NPP',\n\t\tparents: [\n\t\t\t[373067348.01, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5798.66\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_npp/NPP.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_suomi_npp'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_suomi_npp',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_swift: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0028,\n\t\textentsRadius: 0.0028,\n\t\tlabel: 'Swift',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_swift'\n\t\t}]\n\t},\n\tsc_swot: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.005,\n\t\textentsRadius: 0.009,\n\t\tlabel: 'SWOT',\n\t\tparents: [\n\t\t\t[347025366.1839032, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_swot_v2/swot.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_swot'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_swot',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_3: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 3',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86137.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_3'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_5: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 5',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86137.66\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_5'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_6: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 6',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86137.66\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_6'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_7: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 7',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_7'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_8: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 8',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.2\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_8'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_9: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 9',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_9'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_10: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 10',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.2\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_10'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_11: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 11',\n\t\tparents: [\n\t\t\t[412868947.185, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_11'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_12: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 12',\n\t\tparents: [\n\t\t\t[443808067.185, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_12'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tdrs_13: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.0085,\n\t\tlabel: 'TDRS 13',\n\t\tparents: [\n\t\t\t[556338669.183, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 86151.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tdrs/tdrs.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tdrs_13'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_terra: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0034,\n\t\textentsRadius: 0.012,\n\t\tlabel: 'Terra',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933.33\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_terra/Terra.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_terra'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_terra',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_tess: {\n\t\tgroups: ['earth', 'spacecraft', 'telescope'],\n\t\tocclusionRadius: 0.002,\n\t\textentsRadius: 0.003,\n\t\tlabel: 'TESS',\n\t\tparents: [\n\t\t\t[577366932.3626, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 591840\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_tess/TESS.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_tess/earth/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_themis_a: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.000400,\n\t\textentsRadius: 0.00170,\n\t\tlabel: 'THEMIS A',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 98428.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_themis/themis.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_themis_a'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.0008333\n\t\t}]\n\t},\n\tsc_themis_d: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.000400,\n\t\textentsRadius: 0.00170,\n\t\tlabel: 'THEMIS D',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 114807.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_themis/themis.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_themis_d'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.0008333\n\t\t}]\n\t},\n\tsc_themis_e: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.000400,\n\t\textentsRadius: 0.00170,\n\t\tlabel: 'THEMIS E',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 105907.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_themis/themis.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_themis_e'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.0008333\n\t\t}]\n\t},\n\tsc_timed: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.005,\n\t\tlabel: 'TIMED',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5933\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_timed'\n\t\t}]\n\t},\n\tsc_trmm: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.002550,\n\t\textentsRadius: 0.0073,\n\t\tlabel: 'TRMM',\n\t\tparents: [\n\t\t\t[-66052736.817, 'earth'],\n\t\t\t[482328067.186, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5545.6\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_trmm/TRMM.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'orbitalElements',\n\t\t\teccentricity: 0.00111201719,\n\t\t\tsemiMajorAxis: 6744.5,\n\t\t\tmeanAngularMotion: 0.0011382582,\n\t\t\tmeanAnomalyAtEpoch: 0,\n\t\t\tinclination: Math.PI / 180 * 30,\n\t\t\tlongitudeOfAscendingNode: 0,\n\t\t\targumentOfPeriapsis: 0,\n\t\t\tcoverage: [-66052736.817, 482328067.186]\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_trmm',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_uars: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00535,\n\t\textentsRadius: 0.00535,\n\t\tlabel: 'UARS',\n\t\tparents: [\n\t\t\t[352800006.1854904, 'earth'],\n\t\t\t[370106644.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5490.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_uars',\n\t\t\tdataType: 'pos'\n\t\t}]\n\t},\n\tsc_wind: {\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.00120,\n\t\textentsRadius: 0.00750,\n\t\tlabel: 'WIND',\n\t\tparents: [\n\t\t\t[543931270, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 16485927.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_wind/wind.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_wind/earth/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_wind',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_wise: {\n\t\t// no model at all, 2D still in explorer\n\t\tgroups: ['earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0014200,\n\t\textentsRadius: 0.001420,\n\t\tlabel: 'WISE',\n\t\tparents: [\n\t\t\t[344589947.18311954, 'earth']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5715.4\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_wise'\n\t\t}]\n\t}\n});\n","import * as Pioneer from 'pioneer';\n\n/**\n * A collection of utilities for entity creation.\n */\nexport class EntityUtils {\n\t/**\n\t * Adds a geyser to an entity.\n\t * @param {Pioneer.Entity} entity\n\t * @param {number} size\n\t * @param {number} alpha\n\t * @param {number} particleNumber\n\t * @param {number} speed\n\t * @param {number} spread\n\t * @param {number[]} position\n\t * @param {number[] | undefined} direction\n\t */\n\tstatic addGeyser(entity, size, alpha, particleNumber, speed, spread, position, direction) {\n\t\tconst particleSpray = entity.addComponentByClass(Pioneer.ParticleSprayComponent);\n\t\tparticleSpray.setNumberOfParticles(particleNumber);\n\t\tparticleSpray.setSizeOfParticles(0.25 * size * spread);\n\t\tparticleSpray.setSpeedOfParticles(speed * size);\n\t\tparticleSpray.setColorOfParticles(new Pioneer.Color(1, 1, 1, 0.5 * alpha));\n\t\tparticleSpray.setSpread(1 * spread);\n\t\tparticleSpray.setParticleSpacingRandom(false);\n\t\tparticleSpray.setLength(2.5 * size);\n\t\tparticleSpray.setOriginOffset(new Pioneer.Vector3(position[0], position[1], position[2]));\n\t\tparticleSpray.setDirection(new Pioneer.Vector3(direction[0], direction[1], direction[2]));\n\t}\n\n\t/**\n\t * Shows the subobject of an entity only during the given interval.\n\t * @param {Pioneer.Entity} entity\n\t * @param {string} subObjectName\n\t * @param {number} startTime\n\t * @param {number} endTime\n\t */\n\tstatic showSubObjectDuringInterval(entity, subObjectName, startTime, endTime) {\n\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\tmodel.setHiddenObject(subObjectName, true);\n\t\tconst coverageController = entity.addControllerByClass(Pioneer.CoverageController);\n\t\tcoverageController.setCoverage(new Pioneer.Interval(startTime, endTime));\n\t\tcoverageController.setEnterFunction((entity) => {\n\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\tmodel.setHiddenObject(subObjectName, false);\n\t\t});\n\t\tcoverageController.setExitFunction((entity) => {\n\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\tmodel.setHiddenObject(subObjectName, true);\n\t\t});\n\t}\n}\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\taitne: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.5,\n\t\tlabel: 'Aitne',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'aitne/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tananke: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 14.0,\n\t\tlabel: 'Ananke',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [14, 14, 14],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ananke/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\taoede: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 2.0,\n\t\tlabel: 'Aoede',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'aoede/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tarche: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.5,\n\t\tlabel: 'Arche',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'arche/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tautonoe: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 2.0,\n\t\tlabel: 'Autonoe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'autonoe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcallirrhoe: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 4.3,\n\t\tlabel: 'Callirrhoe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [4.3, 4.3, 4.3],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'callirrhoe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcarme: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 23.0,\n\t\tlabel: 'Carme',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [23, 23, 23],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'carme/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcarpo: {\n\t\tgroups: ['jupiter', 'moons', 'irregular'],\n\t\tradius: 1.5,\n\t\tlabel: 'Carpo',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'carpo/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tchaldene: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.9,\n\t\tlabel: 'Chaldene',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.9, 1.9, 1.9],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'chaldene/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcyllene: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1.0,\n\t\tlabel: 'Cyllene',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'cyllene/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tdia: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 2,\n\t\tlabel: 'Dia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'dia/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teirene: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 2,\n\t\tlabel: 'Eirene',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'eirene/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\telara: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 43.0,\n\t\tlabel: 'Elara',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [43, 43, 43],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'elara/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\terinome: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.6,\n\t\tlabel: 'Erinome',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.6, 1.6, 1.6],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'erinome/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tersa: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 1.5,\n\t\tlabel: 'Ersa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ersa/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teuanthe: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1.5,\n\t\tlabel: 'Euanthe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'euanthe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teukelade: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 2.0,\n\t\tlabel: 'Eukelade',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'eukelade/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teupheme: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'Eupheme',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'eupheme/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teuporie: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1.0,\n\t\tlabel: 'Euporie',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'euporie/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teurydome: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1.5,\n\t\tlabel: 'Eurydome',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'eurydome/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tharpalyke: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 2.2,\n\t\tlabel: 'Harpalyke',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.2, 2.2, 2.2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'harpalyke/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thegemone: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1.5,\n\t\tlabel: 'Hegemone',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hegemone/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thelike: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 2.0,\n\t\tlabel: 'Helike',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'helike/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thermippe: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 2.0,\n\t\tlabel: 'Hermippe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hermippe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\therse: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.0,\n\t\tlabel: 'Herse',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'herse/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thimalia: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 85.0,\n\t\tlabel: 'Himalia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [85, 85, 85],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'himalia/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tiocaste: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 2.6,\n\t\tlabel: 'Iocaste',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.6, 2.6, 2.6],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'iocaste/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tisonoe: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.9,\n\t\tlabel: 'Isonoe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.9, 1.9, 1.9],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'isonoe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_li: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LI',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_li/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lii: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 0.5,\n\t\tlabel: 'Jupiter LII',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lii/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_liv: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 0.5,\n\t\tlabel: 'Jupiter LIV',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_liv/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lv: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LV',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lv/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lvi: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 0.5,\n\t\tlabel: 'Jupiter LVI',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lvi/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lix: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LIX',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lix/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxi: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXI',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxi/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxiii: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXIII',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxiii/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxiv: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXIV',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxiv/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxvi: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXVI',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxvi/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxvii: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXVII',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxvii/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxviii: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXVIII',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxviii/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxix: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'Jupiter LXIX',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxix/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxx: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1.5,\n\t\tlabel: 'Jupiter LXX',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxx/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjupiter_lxxii: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'Jupiter LXXII',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter_lxxii/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkale: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.0,\n\t\tlabel: 'Kale',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kale/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkallichore: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.0,\n\t\tlabel: 'Kallichore',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kallichore/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkalyke: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 2.6,\n\t\tlabel: 'Kalyke',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.6, 2.6, 2.6],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kalyke/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkore: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1.0,\n\t\tlabel: 'Kore',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kore/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tleda: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 10.0,\n\t\tlabel: 'Leda',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [10, 10, 10],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'leda/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tlysithea: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 18.0,\n\t\tlabel: 'Lysithea',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [18, 18, 18],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'lysithea/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tmegaclite: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 2.7,\n\t\tlabel: 'Megaclite',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.7, 2.7, 2.7],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'megaclite/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tmneme: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1.0,\n\t\tlabel: 'Mneme',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mneme/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\torthosie: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1.0,\n\t\tlabel: 'Orthosie',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'orthosie/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpandia: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 1.5,\n\t\tlabel: 'Pandia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pandia/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpasiphae: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 30.0,\n\t\tlabel: 'Pasiphae',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [30, 30, 30],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pasiphae/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpasithee: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1.0,\n\t\tlabel: 'Pasithee',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pasithee/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tphilophrosyne: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1,\n\t\tlabel: 'Philophrosyne',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'philophrosyne/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpraxidike: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 3.4,\n\t\tlabel: 'Praxidike',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [3.4, 3.4, 3.4],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'praxidike/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_2: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'S/2003 J 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_2/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_4: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1,\n\t\tlabel: 'S/2003 J 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_4/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_9: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2003 J 9',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_9/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_10: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'S/2003 J 10',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_10/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_12: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2003 J 12',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_12/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_16: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'S/2003 J 16',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_16/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_23: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1,\n\t\tlabel: 'S/2003 J 23',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_23/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2003_j_24: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'S/2003 J 24',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2003_j_24/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2011_j_3: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2011 J 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2011_j_3/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2016_j_3: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'S/2016 J 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2016_j_3/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2016_j_4: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2016 J 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2016_j_4/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2018_j_2: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'himalia'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2018 J 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2018_j_2/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2018_j_3: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2018 J 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2018_j_3/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2018_j_4: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carpo'],\n\t\tradius: 1,\n\t\tlabel: 'S/2018 J 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2018_j_4/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2021_j_1: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2021 J 1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2021_j_1/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2021_j_2: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'S/2021 J 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2021_j_2/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2021_j_3: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1,\n\t\tlabel: 'S/2021 J 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2021_j_3/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2021_j_4: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2021 J 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2021_j_4/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2021_j_5: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 1,\n\t\tlabel: 'S/2021 J 5',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2021_j_5/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2021_j_6: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2021 J 6',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2021_j_6/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2022_j_1: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2022 J 1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2022_j_1/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2022_j_2: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2022 J 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2022_j_2/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2022_j_3: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 0.5,\n\t\tlabel: 'S/2022 J 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2022_j_3/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsinope: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 19.0,\n\t\tlabel: 'Sinope',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [19, 19, 19],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sinope/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsponde: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'pasiphae'],\n\t\tradius: 1.0,\n\t\tlabel: 'Sponde',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sponde/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ttaygete: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'carme'],\n\t\tradius: 2.5,\n\t\tlabel: 'Taygete',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'taygete/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tthelxinoe: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 1.0,\n\t\tlabel: 'Thelxinoe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thelxinoe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tthemisto: {\n\t\tgroups: ['jupiter', 'moons', 'irregular'],\n\t\tradius: 4.0,\n\t\tlabel: 'Themisto',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [4, 4, 4],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'themisto/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tthyone: {\n\t\tgroups: ['jupiter', 'moons', 'irregular', 'ananke'],\n\t\tradius: 2.0,\n\t\tlabel: 'Thyone',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thyone/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tvaletudo: {\n\t\tgroups: ['jupiter', 'moons', 'irregular'],\n\t\tradius: 0.5,\n\t\tlabel: 'Valetudo',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.5,\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'valetudo/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\n\nEntity.register({\n\tadrastea: {\n\t\tgroups: ['jupiter', 'moons', 'amalthea', 'inner', 'regular'],\n\t\tradius: 8.2,\n\t\tlabel: 'Adrastea',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [8.2, 8.2, 8.2],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'adrastea/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'adrastea/ori'\n\t\t}]\n\t},\n\tamalthea: {\n\t\tgroups: ['jupiter', 'moons', 'amalthea', 'inner', 'regular'],\n\t\tradius: 83.5,\n\t\tlabel: 'Amalthea',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [83.5, 83.5, 83.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'amalthea/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'amalthea/ori'\n\t\t}]\n\t},\n\tcallisto: {\n\t\tgroups: ['jupiter', 'moons', 'main', 'galilean', 'regular'],\n\t\tradius: 2410.3,\n\t\tlabel: 'Callisto',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 2410.3,\n\t\t\tpolarRadius: 2410.3,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'callisto/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['jupiter', 'io', 'europa', 'ganymede']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'callisto/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'callisto/ori'\n\t\t}]\n\t},\n\teuropa: {\n\t\tgroups: ['jupiter', 'moons', 'main', 'galilean', 'regular'],\n\t\tradius: 1569.0,\n\t\tlabel: 'Europa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 1569.0,\n\t\t\tpolarRadius: 1569.0,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'europa/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 1024]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['jupiter', 'io', 'callisto', 'ganymede']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'europa/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'europa/ori'\n\t\t}]\n\t},\n\tganymede: {\n\t\tgroups: ['jupiter', 'moons', 'main', 'galilean', 'regular'],\n\t\tradius: 2634.1,\n\t\tlabel: 'Ganymede',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 2634.1,\n\t\t\tpolarRadius: 2634.1,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'ganymede/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['jupiter', 'io', 'europa', 'callisto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ganymede/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ganymede/ori'\n\t\t}]\n\t},\n\tio: {\n\t\tgroups: ['jupiter', 'moons', 'main', 'galilean', 'regular'],\n\t\tradius: 1821.3,\n\t\tlabel: 'Io',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 1821.3,\n\t\t\tpolarRadius: 1821.3,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'io/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 1024]\n\t\t\t\t}\n\t\t\t\t// I believe there is a heightmap version as well, but the min-to-max radius is not noticable\n\t\t\t},\n\t\t\tshadowEntities: ['jupiter', 'europa', 'ganymede', 'callisto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'io/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'io/ori'\n\t\t}]\n\t},\n\tmetis: {\n\t\tgroups: ['jupiter', 'moons', 'amalthea', 'inner', 'regular'],\n\t\tradius: 21.5,\n\t\tlabel: 'Metis',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [21.5, 21.5, 21.5],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'metis/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'metis/ori'\n\t\t}]\n\t},\n\tthebe: {\n\t\tgroups: ['jupiter', 'moons', 'amalthea', 'inner', 'regular'],\n\t\tradius: 49.0,\n\t\tlabel: 'Thebe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [49, 49, 49],\n\t\t\tshadowEntities: ['jupiter']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thebe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thebe/ori'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_apollo_15: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.004,\n\t\tlabel: 'Apollo 15',\n\t\tparents: [\n\t\t\t[-897044358.3260887, 'moon'],\n\t\t\t[-896822958.3195117, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6855.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_apollo_15',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_artemis_1: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.005,\n\t\tlabel: 'Artemis I',\n\t\tparents: [\n\t\t\t[721860361, 'earth'],\n\t\t\t[724052473, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_artemis_1/artemis_cmsm.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_artemis_1/earth/pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_artemis_1',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_capstone: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.0005,\n\t\tlabel: 'CAPSTONE',\n\t\tparents: [\n\t\t\t[710192447.9999855, 'earth'],\n\t\t\t[721583059, 'moon']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tlengthCoverages: [\n\t\t\t\t[4000000, Number.NEGATIVE_INFINITY, 721583059],\n\t\t\t\t[1210909, 721583059, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_capstone/capstone.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_capstone/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_capstone/moon/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_clementine: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.002,\n\t\tlabel: 'Clementine',\n\t\tparents: [\n\t\t\t[-187185539.81536362, 'moon'],\n\t\t\t[-178496939.81459716, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 5408.5\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_clementine/clementine.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_clementine/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_grail_a: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.001,\n\t\tlabel: 'Ebb',\n\t\tparents: [\n\t\t\t[368763000, 'moon'],\n\t\t\t[414201667.18513304, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 41115.75\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grail/grail_b.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_grail_a/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_grail_a',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_grail_b: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.001,\n\t\tlabel: 'Flow',\n\t\tparents: [\n\t\t\t[368763000, 'moon'],\n\t\t\t[414201667.18513304, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 41239.8\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_grail/grail_b.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_grail_b/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_grail_b',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_ladee: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tradius: 0.0012,\n\t\tlabel: 'LADEE',\n\t\tparents: [\n\t\t\t[431798467.18253195, 'moon'],\n\t\t\t[451355187.44558257, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 7889.57\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ladee/ladee.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_ladee/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_ladee',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_lcross: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.00130,\n\t\textentsRadius: 0.0022,\n\t\tlabel: 'LCROSS',\n\t\tparents: [\n\t\t\t[298635466.0304444, 'moon'],\n\t\t\t[308360200.75, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 3598022.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_lcross/lcross.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: -90 }\n\t\t\t],\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_lcross/moon/all',\n\t\t\tdataType: 'pos',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 308360200.750]\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_lcross',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_lcross_impact_site: {\n\t\tgroups: ['moon', 'sc_lcross', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'LCROSS Impact Site',\n\t\tparents: [\n\t\t\t[298635466.0304444, 'moon']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(-1.4782008103461848, -0.8648271467797672, 0),\n\t\t\tcoverage: [298635466.0304444, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_lunar_flashlight: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.00025,\n\t\textentsRadius: 0.0005,\n\t\tlabel: 'Lunar Flashlight',\n\t\tparents: [\n\t\t\t[724019554, 'earth'],\n\t\t\t[737164869, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 10000000\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_lunar_flashlight/lunar_flashlight.gltf',\n\t\t\tshadowEntities: ['earth']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lunar_flashlight/earth_v3'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_lunar_icecube: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.0002,\n\t\textentsRadius: 0.0012,\n\t\tlabel: 'Lunar IceCube',\n\t\tparents: [\n\t\t\t[721864426, 'earth'],\n\t\t\t[734111601, 'moon']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tlengthCoverages: [\n\t\t\t\t[3000000, Number.NEGATIVE_INFINITY, 734111601],\n\t\t\t\t[441920, 734111601, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_lunar_icecube/lunar_icecube.gltf',\n\t\t\tshadowEntities: ['earth', 'moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lunar_icecube/earth/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lunar_icecube/moon/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_lunar_prospector: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.00065300,\n\t\textentsRadius: 0.0022,\n\t\tlabel: 'Lunar Prospector',\n\t\tparents: [\n\t\t\t[-62206800, 'moon'],\n\t\t\t[-13402020, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 7260.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_lunar_prospector/lunar_prospector.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_lunar_prospector/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\tperiodInHours: 0.008333\n\t\t}]\n\t},\n\tsc_lunar_reconnaissance_orbiter: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.00272,\n\t\textentsRadius: 0.0038,\n\t\tlabel: 'Lunar Reconnaissance Orbiter',\n\t\tparents: [\n\t\t\t[298635426.1844444, 'earth'],\n\t\t\t[298929666, 'moon']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 7106.66,\n\t\t\tlengthCoverages: [\n\t\t\t\t[1000000, Number.NEGATIVE_INFINITY, 299040641],\n\t\t\t\t[7106.66, 299040641, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_lunar_reconnaissance_orbiter/LRO.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: -90 }\n\t\t\t],\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lunar_reconnaissance_orbiter/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lunar_reconnaissance_orbiter/moon/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_lunar_reconnaissance_orbiter',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'moon',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lunar_reconnaissance_orbiter/ori'\n\t\t}]\n\t},\n\tsc_smart_1: {\n\t\t// no model at all; 2D still\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.006530,\n\t\tlabel: 'SMART-1',\n\t\tparents: [\n\t\t\t[117977163.35299999, 'moon'],\n\t\t\t[210585600, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 273091.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}, {\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_smart_1/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}]\n\t},\n\tsc_themis_b: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.000400,\n\t\textentsRadius: 0.00170,\n\t\tlabel: 'ARTEMIS P1',\n\t\tparents: [\n\t\t\t[366638466.1829504, 'moon'],\n\t\t\t[694267209.1839211, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 94838.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_themis/themis.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_themis_b/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.0008333\n\t\t}]\n\t},\n\tsc_themis_c: {\n\t\tgroups: ['moon', 'spacecraft'],\n\t\tocclusionRadius: 0.000400,\n\t\textentsRadius: 0.00170,\n\t\tlabel: 'ARTEMIS P2',\n\t\tparents: [\n\t\t\t[366638466.1829504, 'moon'],\n\t\t\t[694267209.1839211, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 204186.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_themis/themis.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_themis_c/moon/all',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\tperiodInHours: 0.0008333\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\n\nEntity.register({\n\tphobos: {\n\t\tgroups: ['mars', 'moons'],\n\t\tradius: 14.0,\n\t\tlabel: 'Phobos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.89, 0.51, 0.35, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/phobos/phobos.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\trotate: [\n\t\t\t\t{ z: 90 },\n\t\t\t\t{ y: 90 }\n\t\t\t],\n\t\t\tshadowEntities: ['mars']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'phobos/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'phobos/ori'\n\t\t}]\n\t},\n\tdeimos: {\n\t\tgroups: ['mars', 'moons'],\n\t\tradius: 8.70951,\n\t\tlabel: 'Deimos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.89, 0.51, 0.35, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/deimos/deimos.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\trotate: [\n\t\t\t\t{ y: -180 }\n\t\t\t],\n\t\t\tshadowEntities: ['mars']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'deimos/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'deimos/ori'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_mars_2020: {\n\t\tgroups: ['mars', 'spacecraft', 'landers'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.003,\n\t\tlabel: 'Mars 2020',\n\t\tparents: [\n\t\t\t[649385564, 'earth'],\n\t\t\t[649595376, 'sun'],\n\t\t\t[666932224, 'mars'],\n\t\t\t[666952859, 'sc_mars_2020_landing_site']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 10000000.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, 649385564, 666932224],\n\t\t\t\t[3000, 666932224, 666953098.003000],\n\t\t\t\t[9676800, 666953098.003000 + 9676800, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_2020/cruise_whole/msl_cruise_stage.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 }\n\t\t\t],\n\t\t\tshadowEntities: ['mars']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_2020/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_2020/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_2020/mars/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_2020/surface/lin'\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => { // This is needed because M2020_LANDING_SITE is slightly off of M2020_DIMU_A.\n\t\t\t\tconst controller = entity.addControllerByClass(Pioneer.TranslateController);\n\t\t\t\tcontroller.setTranslation(new Pioneer.Vector3(-0.125148, 0.026867, -0.023641));\n\t\t\t\treturn controller;\n\t\t\t},\n\t\t\tcoverage: [666952859, 666953098.003000]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_2020/quat'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_2020/surface/quat_v2'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 0.00833333333,\n\t\t\trelativeToTime: 649385564,\n\t\t\tcoverage: [649385564, 666952859]\n\t\t}, {\n\t\t\ttype: 'rotateByEntityOrientation', // Rotate the position for IAU_MARS dynamo.\n\t\t\tentityForOrientation: 'mars',\n\t\t\tcoverage: [666952859, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst groundClamp = entity.addControllerByClass(Pioneer.GroundClampController);\n\t\t\t\tgroundClamp.setDistanceFromGround(0.001);\n\t\t\t\tgroundClamp.setGroundComponentRef('mars', 'cmts');\n\t\t\t\tgroundClamp.setUp(Pioneer.Vector3.ZAxisNeg);\n\t\t\t\tgroundClamp.setCoverage(new Pioneer.Interval(666953086.614, Number.POSITIVE_INFINITY));\n\t\t\t\treturn groundClamp;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Make it change to Perseverance when it lands.\n\t\t\tcoverage: [666953086.614, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst div = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tdiv.getDiv().innerHTML.replace('Mars 2020', 'Perseverance');\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst div = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tdiv.getDiv().innerHTML.replace('Perseverance', 'Mars 2020');\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Make the first part of the rover surface trail start at landing.\n\t\t\tcoverage: [666953098.003000, 666953098.003000 + 9676800],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setStartTime(666953098.003000);\n\t\t\t\t\ttrail.setRelativeStartTime(false);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeStartTime(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Coverage for making trail relative to entity.\n\t\t\tcoverage: [666932224, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Change the model to the rover at the right time.\n\t\t\tcoverage: [666953086.614, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_2020/rover/perseverance.gltf');\n\t\t\t\tmodel.setRotation(new Pioneer.Quaternion(0.5, -0.5, 0.5, -0.5));\n\t\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, 0.001));\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_2020/cruise_whole/msl_cruise_stage.gltf');\n\t\t\t\tmodel.setRotation(new Pioneer.Quaternion(0.7071067811865478, -0.7071067811865472, 0, 0));\n\t\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, 0));\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Make the trail not fade when on the ground.\n\t\t\tcoverage: [666953098.003000, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setIgnoreDistance(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setIgnoreDistance(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, { // Remove the cruise pieces when starting the EDL.\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [666952458, 666953086.614],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setHiddenObject('solar_panels', true);\n\t\t\t\t\tmodel.setHiddenObject('frame_etc', true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setHiddenObject('solar_panels', false);\n\t\t\t\t\tmodel.setHiddenObject('frame_etc', false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\t// Since the ground clamp controller and the CMTS map the trail will need to be repopulated.\n\t\t\t// Right now the only method is to add an update every few seconds:\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [666953086.614, Number.POSITIVE_INFINITY],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.resetPoints();\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdateInterval: 10\n\t\t}]\n\t},\n\tsc_mars_2020_landing_site: {\n\t\tgroups: ['mars', 'sc_mars_2020', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Mars 2020 Landing Site',\n\t\tparents: [\n\t\t\t[649385563.6433017, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(0.32191947313922714, 1.351772964399859, -2.2364351843552868),\n\t\t\tcoverage: [649385563.6433017, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_mars_science_laboratory: {\n\t\tgroups: ['mars', 'spacecraft', 'landers'],\n\t\tocclusionRadius: 0.001515,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'Mars Science Laboratory',\n\t\tparents: [\n\t\t\t[375594733, 'earth'],\n\t\t\t[376039259, 'sun'],\n\t\t\t[397477501, 'mars'],\n\t\t\t[397502386.832, 'sc_mars_science_laboratory_landing_site']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 10000000,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, 375594733, 397501373],\n\t\t\t\t[3000, 397501373, 397502386.832 + 9676800],\n\t\t\t\t[9676800, 397502386.832 + 9676800, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_science_laboratory/cruise/msl_cruisestage.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 }\n\t\t\t],\n\t\t\tshadowEntities: ['mars']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/edl/pos'\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => { // This is needed because MSL_LANDING_SITE is slightly off of MSL_SITE_1.\n\t\t\t\tconst controller = entity.addControllerByClass(Pioneer.TranslateController);\n\t\t\t\tcontroller.setTranslation(new Pioneer.Vector3(0.002583, 0.002995, 0.001937));\n\t\t\t\treturn controller;\n\t\t\t},\n\t\t\tcoverage: [397501373, 397502386.832]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/surface/lin_v2'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/quat'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_science_laboratory/surface/quat_v2'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 0.00833333333,\n\t\t\trelativeToTime: 375594733,\n\t\t\tcoverage: [375594733, 397501866]\n\t\t}, {\n\t\t\ttype: 'rotateByEntityOrientation', // Rotate the position for IAU_MARS dynamo.\n\t\t\tentityForOrientation: 'mars',\n\t\t\trotatingOrientation: false,\n\t\t\tcoverage: [397501373, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'rotateByEntityOrientation', // Rotate the orientation for IAU_MARS dynamo.\n\t\t\tentityForOrientation: 'mars',\n\t\t\trotatingPosition: false,\n\t\t\tcoverage: [397502386.832, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Add a ground clamp when the rover is on the ground. The dymamo gets pretty close, but this is closer.\n\t\t\t\tconst groundClamp = entity.addControllerByClass(Pioneer.GroundClampController);\n\t\t\t\tgroundClamp.setDistanceFromGround(0.00098);\n\t\t\t\tgroundClamp.setGroundComponentRef('mars', 'cmts');\n\t\t\t\tgroundClamp.setUp(Pioneer.Vector3.ZAxisNeg);\n\t\t\t\tgroundClamp.setCoverage(new Pioneer.Interval(397502386.832, Number.POSITIVE_INFINITY));\n\t\t\t\treturn groundClamp;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Make it change to Curiosity when it lands.\n\t\t\tcoverage: [397502386.832, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst div = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tdiv.getDiv().innerHTML.replace('Mars Science Laboratory', 'Curiosity');\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst div = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tdiv.getDiv().innerHTML.replace('Curiosity', 'Mars Science Laboratory');\n\t\t\t}\n\t\t}, { // Coverage for making trail relative to entity.\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [397501373, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, { // Change the model to the rover at the right time.\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [397502324, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_science_laboratory/rover/curiosity_static.gltf');\n\t\t\t\t\tmodel.setRotation(new Pioneer.Quaternion(0.5, -0.5, 0.5, -0.5));\n\t\t\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, 0.001));\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_science_laboratory/cruise/msl_cruisestage.gltf');\n\t\t\t\t\tmodel.setRotation(new Pioneer.Quaternion(0.7071067811865478, -0.7071067811865472, 0, 0));\n\t\t\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, 0));\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage', // Make the trail not fade when on the ground.\n\t\t\tcoverage: [397502386.832, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setIgnoreDistance(true);\n\t\t\t\t}\n\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setIgnoreDistance(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, { // Remove the cruise pieces when starting the EDL.\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [397501758, 397502386.832],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setHiddenObject('solar_panels', true);\n\t\t\t\t\tmodel.setHiddenObject('frame_etc', true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setHiddenObject('solar_panels', false);\n\t\t\t\t\tmodel.setHiddenObject('frame_etc', false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\t// Since the ground clamp controller and the CMTS map the trail will need to be repopulated.\n\t\t\t// Right now the only method is to add an update every few seconds:\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [397502386.832, Number.POSITIVE_INFINITY],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.resetPoints();\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdateInterval: 10\n\t\t}]\n\t},\n\tsc_mars_science_laboratory_landing_site: {\n\t\tgroups: ['mars', 'sc_mars_science_laboratory', 'sites'],\n\t\tocclusionRadius: 0.001515,\n\t\textentsRadius: 0.004,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Curiosity Landing Site',\n\t\tparents: [\n\t\t\t[375594732.3829685, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(-4.589466996319 / 180 * Math.PI, 137.441632996891 / 180 * Math.PI, -4.927711819685555),\n\t\t\tcoverage: [375594732.3829685, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_mars_exploration_rover_1: {\n\t\tgroups: ['mars', 'spacecraft', 'landers'],\n\t\tocclusionRadius: 0.0013,\n\t\textentsRadius: 0.0026,\n\t\tlabel: 'Opportunity',\n\t\tparents: [\n\t\t\t[110911022.184, 'earth'],\n\t\t\t[111234172, 'sun'],\n\t\t\t[128262836, 'mars'],\n\t\t\t[128278419, 'sc_mars_exploration_rover_1_landing_site'],\n\t\t\t[581920316.8566707, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6720.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 128262836],\n\t\t\t\t[6720.0, 128262836, 128278419],\n\t\t\t\t[0, 128278523.336, 581920316.856]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_exploration_rover/cruise/mpf_mera_merb_cruise.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_1/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_1/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_1/mars/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_1/edl/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_1/surface/pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_mars_exploration_rover_1',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 128278523.336]\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tcoverage: [128278523.336, 581920316.856]\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [128278419, 581920316.856],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [128278523.336, 581920316.856],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_exploration_rover/rover/mer_static.gltf');\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_exploration_rover/cruise/mpf_mera_merb_cruise.gltf');\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 128262836],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst align = entity.getControllerByClass(Pioneer.AlignController);\n\t\t\t\tif (align !== null) {\n\t\t\t\t\talign.setPrimaryAlignType('point');\n\t\t\t\t\talign.setPrimaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\t\talign.setPrimaryTargetEntity('sun');\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst align = entity.getControllerByClass(Pioneer.AlignController);\n\t\t\t\tif (align !== null) {\n\t\t\t\t\talign.setPrimaryAlignType('velocity');\n\t\t\t\t\talign.setPrimaryAxis(Pioneer.Vector3.ZAxisNeg);\n\t\t\t\t\talign.setPrimaryTargetEntity('sc_mars_exploration_rover_1');\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Get it into the MER-1_TOPO frame.\n\t\t\tconst rotate = entity.addControllerByClass(Pioneer.RotateController);\n\t\t\tconst rot90 = new Pioneer.Quaternion();\n\t\t\trot90.setFromAxes(Pioneer.Vector3.YAxis, Pioneer.Vector3.XAxisNeg, undefined);\n\t\t\trotate.setRotation(rot90);\n\t\t\trotate.setRotatingOrientation(false);\n\t\t\trotate.setCoverage(new Pioneer.Interval(128278419, 581920316.856));\n\n\t\t\t// Get it into the J2000 frame.\n\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController, 'landingRotateByEntity', entity.getControllerByClass(Pioneer.AlignController));\n\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(128278419, 581920316.856));\n\t\t}\n\t},\n\tsc_mars_exploration_rover_1_landing_site: {\n\t\tgroups: ['mars', 'sc_mars_exploration_rover_1', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Opportunity Landing Site',\n\t\tparents: [\n\t\t\t[110911022.184, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(-0.034003934569818886, -0.09644392740547784, -2.018490164449304),\n\t\t\tcoverage: [110911022.184, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_mars_exploration_rover_2: {\n\t\tgroups: ['mars', 'spacecraft', 'landers'],\n\t\tocclusionRadius: 0.0013,\n\t\textentsRadius: 0.0026,\n\t\tlabel: 'Spirit',\n\t\tparents: [\n\t\t\t[108541883.184, 'earth'],\n\t\t\t[108887371, 'sun'],\n\t\t\t[126444477, 'mars'],\n\t\t\t[126462105, 'sc_mars_exploration_rover_2_landing_site'],\n\t\t\t[322567479.3896215, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6720.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 126444477],\n\t\t\t\t[6720.0, 126444477, 126462105],\n\t\t\t\t[0, 126462396.105800, 322567479.389620]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_exploration_rover/cruise/mpf_mera_merb_cruise.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_2/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_2/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_2/mars/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_2/edl/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_exploration_rover_2/surface/pos'\n\t\t}, {\n\t\t\ttype: 'rotateByEntityOrientation', // Get surface dynamo into J2000 frame.\n\t\t\tcoverage: [126462105, 322567479.389620]\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_mars_exploration_rover_2',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 126462105]\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tcoverage: [126462105, 322567479.389620]\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [126462105, 322567479.389620],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [126462396.105800, 322567479.389620],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_exploration_rover/rover/mer_static.gltf');\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_mars_exploration_rover/cruise/mpf_mera_merb_cruise.gltf');\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 126444477],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst align = entity.getControllerByClass(Pioneer.AlignController);\n\t\t\t\tif (align !== null) {\n\t\t\t\t\talign.setPrimaryAlignType('point');\n\t\t\t\t\talign.setPrimaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\t\talign.setPrimaryTargetEntity('sun');\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst align = entity.getControllerByClass(Pioneer.AlignController);\n\t\t\t\tif (align !== null) {\n\t\t\t\t\talign.setPrimaryAlignType('velocity');\n\t\t\t\t\talign.setPrimaryAxis(Pioneer.Vector3.ZAxisNeg);\n\t\t\t\t\talign.setPrimaryTargetEntity('sc_mars_exploration_rover_2');\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Get it into the MER-2_TOPO frame.\n\t\t\tconst rotate = entity.addControllerByClass(Pioneer.RotateController);\n\t\t\tconst rot90 = new Pioneer.Quaternion();\n\t\t\trot90.setFromAxes(Pioneer.Vector3.YAxis, Pioneer.Vector3.XAxisNeg, undefined);\n\t\t\trotate.setRotation(rot90);\n\t\t\trotate.setRotatingOrientation(false);\n\t\t\trotate.setCoverage(new Pioneer.Interval(126462105, 322567479.389620));\n\t\t}\n\t},\n\tsc_mars_exploration_rover_2_landing_site: {\n\t\tgroups: ['mars', 'sc_mars_exploration_rover_2', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Spirit Landing Site',\n\t\tparents: [\n\t\t\t[108541883.184, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(-0.25432749290990797, 3.062677242395019, -2.614394925059969),\n\t\t\tcoverage: [108541883.184, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_insight: {\n\t\tgroups: ['mars', 'spacecraft', 'landers'],\n\t\tradius: 0.00306,\n\t\tlabel: 'InSight',\n\t\tparents: [\n\t\t\t[578795968.9654216, 'earth'],\n\t\t\t[579182469.185, 'sun'],\n\t\t\t[596376069.183, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 32137022.16,\n\t\t\tlengthCoverages: [\n\t\t\t\t[32137022.16, Number.NEGATIVE_INFINITY, 596376069.183],\n\t\t\t\t[14400, 596376069.183, 596533471.284 - 3600],\n\t\t\t\t[3600, 596533471.284 - 3600, 596533602],\n\t\t\t\t[0, 596533602, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_insight/lander/insight.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_insight/earth/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_insight/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_insight/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_insight_edl/mars/pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tcoverage: [578795968.9654216, 596533602]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_insight/ori'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_insight_edl/ori'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(0.07881611091588075, 2.3734709256393973, -2.996371903616364),\n\t\t\tllaOnSpheroidEntity: 'mars',\n\t\t\tcoverage: [596533602, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [596533471.284 - 3600, 596533602],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [578795968.9654216, 596533602],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_insight/cruise/model.gltf');\n\t\t\t\t\tmodel.setRotation(new Pioneer.Quaternion(Math.sqrt(0.5), 0, Math.sqrt(0.5), 0));\n\t\t\t\t\tmodel.setTranslation(Pioneer.Vector3.Zero);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [596533602, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (model !== null) {\n\t\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_insight/lander/insight.gltf');\n\t\t\t\t\tmodel.setRotation(new Pioneer.Quaternion(Math.sqrt(0.5), Math.sqrt(0.5), 0, 0));\n\t\t\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, 0.00085));\n\t\t\t\t}\n\t\t\t}\n\t\t}]\n\t},\n\tsc_insight_landing_site: {\n\t\tgroups: ['mars', 'sc_insight', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'InSight Landing Site',\n\t\tparents: [\n\t\t\t[578795968.9654216, 'mars'],\n\t\t\t[596533602, '']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(0.07881611091588075, 2.3734709256393973, -2.996371903616364),\n\t\t\tcoverage: [578795968.9654216, 596533602]\n\t\t}]\n\t},\n\tsc_marco_a: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.00044375,\n\t\tlabel: 'MarCO A',\n\t\tparents: [\n\t\t\t[578796051, 'earth'],\n\t\t\t[579182469.185, 'sun'],\n\t\t\t[596376069.183, 'mars'],\n\t\t\t[596552080, 'sun'],\n\t\t\t[631152000, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6720.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 579182469.185],\n\t\t\t\t[6720.0, 579182469.185, 596552080],\n\t\t\t\t[10000000, 596552080, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_marco/model.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_a/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_a/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_a/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_a/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_marco_b: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.00044375,\n\t\tlabel: 'MarCO B',\n\t\tparents: [\n\t\t\t[578796051, 'earth'],\n\t\t\t[579182469.185, 'sun'],\n\t\t\t[596376069.183, 'mars'],\n\t\t\t[596552080, 'sun'],\n\t\t\t[631152000, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6720.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 579182469.185],\n\t\t\t\t[6720.0, 579182469.185, 596552080],\n\t\t\t\t[10000000, 596552080, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_marco/model.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_b/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_b/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_b/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_marco_b/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_mars_odyssey: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tocclusionRadius: 0.0013,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'Mars Odyssey',\n\t\tparents: [\n\t\t\t[39932700, 'earth'],\n\t\t\t[40233664, 'sun'],\n\t\t\t[57128464, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6727.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 57128464],\n\t\t\t\t[6727.0, 57128464, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_odyssey/mars_odyssey.gltf',\n\t\t\tenvironmentMap: {\n\t\t\t\tcubemap: '$STATIC_ASSETS_URL/env_maps/park_gray/$FACE.jpg'\n\t\t\t},\n\t\t\tshadowEntities: ['mars', 'deimos', 'phobos']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_odyssey/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_odyssey/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_odyssey/mars/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: new Pioneer.Vector3(-0.95630475596, 0.29237170472, 0)\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_mars_odyssey',\n\t\t\t\taxis: new Pioneer.Vector3(0.29237170472, 0.95630475596, 0)\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_odyssey/ori'\n\t\t}]\n\t},\n\tsc_mars_reconnaissance_orbiter: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0068,\n\t\tlabel: 'Mars Reconnaissance Orbiter',\n\t\tparents: [\n\t\t\t[177122516, 'earth'],\n\t\t\t[177429664, 'sun'],\n\t\t\t[195285665, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6720.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 195285665],\n\t\t\t\t[6720.0, 195285665, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_reconnaissance_orbiter/MRO.gltf',\n\t\t\tenvironmentMap: {\n\t\t\t\tcubemap: '$STATIC_ASSETS_URL/env_maps/park_gray/$FACE.jpg'\n\t\t\t},\n\t\t\tshadowEntities: ['mars', 'deimos', 'phobos']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_reconnaissance_orbiter/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_reconnaissance_orbiter/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_reconnaissance_orbiter/mars/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_mars_reconnaissance_orbiter',\n\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_reconnaissance_orbiter/ori'\n\t\t}]\n\t},\n\tsc_maven: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0057,\n\t\tlabel: 'MAVEN',\n\t\tparents: [\n\t\t\t[438074509.3428109, 'earth'],\n\t\t\t[438296467, 'sun'],\n\t\t\t[464590867, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 16139.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_maven/Maven.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: 90 }\n\t\t\t],\n\t\t\tenvironmentMap: {\n\t\t\t\tcubemap: '$STATIC_ASSETS_URL/env_maps/park_gray/$FACE.jpg'\n\t\t\t},\n\t\t\tshadowEntities: ['mars', 'deimos', 'phobos']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_maven/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_maven/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_maven/mars/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_maven/ori'\n\t\t}]\n\t},\n\tsc_mars_express: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.006,\n\t\tlabel: 'Mars Express',\n\t\tparents: [\n\t\t\t[107853140.59600002, 'earth'],\n\t\t\t[108232264, 'sun'],\n\t\t\t[125539264, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 25000.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 126749131],\n\t\t\t\t[12720.0, 126749131, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_express/mars_express.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: -180 }\n\t\t\t],\n\t\t\tenvironmentMap: {\n\t\t\t\tcubemap: '$STATIC_ASSETS_URL/env_maps/park_gray/$FACE.jpg'\n\t\t\t},\n\t\t\tshadowEntities: ['mars', 'deimos', 'phobos']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_express/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_express/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_express/mars/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_mars_express/ori'\n\t\t}]\n\t},\n\tsc_phoenix: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0027,\n\t\tlabel: 'Phoenix',\n\t\tparents: [\n\t\t\t[239496427, 'earth'],\n\t\t\t[239618121, 'sun'],\n\t\t\t[265008306, 'mars'],\n\t\t\t[265030318, 'sc_phoenix_landing_site'],\n\t\t\t[278942465, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 45411186.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[45411186, Number.NEGATIVE_INFINITY, 265008306],\n\t\t\t\t[50000, 265008306, 265030318],\n\t\t\t\t[500, 265030318, 265030769],\n\t\t\t\t[0, 265030769, 278942465]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_phoenix/cruise/phoenix_cruise.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_phoenix/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_phoenix/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_phoenix/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_phoenix/phx_topo/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_phoenix/ori'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(0.027059368126568832, 0.013878235928918032, -0.04367634407940447),\n\t\t\tcoverage: [265030769, 278942465]\n\t\t}, {\n\t\t\ttype: 'rotateByEntityOrientation',\n\t\t\trotatingOrientation: false,\n\t\t\tcoverage: [265030769, 278942465]\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [265030324 - 7 * 60, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_phoenix/edl/phoenix_edl.gltf');\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/sc_phoenix/cruise/phoenix_cruise.gltf');\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tentity.addParentChangedCallback((entity, _, newParent) => {\n\t\t\t\tif (newParent !== null) {\n\t\t\t\t\tconst parentName = newParent.getName();\n\t\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\t\tif (parentName === 'sc_phoenix_landing_site') {\n\t\t\t\t\t\ttrail.setRelativeToEntity('mars');\n\t\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttrail.setRelativeToEntity('');\n\t\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tsc_phoenix_landing_site: {\n\t\tgroups: ['mars', 'sc_phoenix', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Phoenix Landing Site',\n\t\tparents: [\n\t\t\t[239496427, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(1.1906355815662266, -2.1947740491302206, -2.5912352775421823),\n\t\t\tcoverage: [239496427, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_trace_gas_orbiter: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.00875915,\n\t\tlabel: 'Trace Gas Orbiter',\n\t\tparents: [\n\t\t\t[511257268, 'earth'],\n\t\t\t[511941668, 'sun'],\n\t\t\t[530107268, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 6720.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 530160041],\n\t\t\t\t[6720.0, 530160041, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_trace_gas_orbiter/TGO.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 },\n\t\t\t\t{ y: -90 }\n\t\t\t],\n\t\t\tenvironmentMap: {\n\t\t\t\tcubemap: '$STATIC_ASSETS_URL/env_maps/park_gray/$FACE.jpg'\n\t\t\t},\n\t\t\tshadowEntities: ['mars', 'deimos', 'phobos']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_trace_gas_orbiter/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_trace_gas_orbiter/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_trace_gas_orbiter/mars/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_trace_gas_orbiter/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Align the right solar panel to the sun.\n\t\t\tlet align = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('right_array_1');\n\t\t\talign.setPrimaryAxis(Pioneer.Vector3.XAxis);\n\t\t\talign.setSecondaryAxis(Pioneer.Vector3.YAxis);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\t\t\t// Align the left solar panel to the sun.\n\t\t\talign = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\talign.setJoint('left_array_1');\n\t\t\talign.setPrimaryAxis(Pioneer.Vector3.XAxis);\n\t\t\talign.setSecondaryAxis(Pioneer.Vector3.YAxis);\n\t\t\talign.setSecondaryAlignType('point');\n\t\t\talign.setSecondaryTargetEntity('sun');\n\t\t}\n\t},\n\tsc_mars_orbiter_mission: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.00275,\n\t\tlabel: 'Mars Orbiter Mission',\n\t\tparents: [\n\t\t\t[623211069.1823474, 'mars']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 234146.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_mars_orbiter_mission/mars',\n\t\t\tdataType: 'pos'\n\t\t}]\n\t},\n\tsc_mars_global_surveyor: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.005,\n\t\tlabel: 'Mars Global Surveyor',\n\t\tparents: [\n\t\t\t[-72699545, 'mars'],\n\t\t\t[215697664.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 7068.67\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_mars_global_surveyor/mars_global_surveyor.gltf',\n\t\t\tshadowEntities: ['mars']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_mars_global_surveyor_mission',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mars',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_mars_climate_orbiter: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0011,\n\t\tlabel: 'Mars Climate Orbiter',\n\t\tparents: [\n\t\t\t[-33318000, 'sun'],\n\t\t\t[-8650375.816, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 24587405.0 * 3.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_mars_climate_orbiter',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_mars_pathfinder: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.00033,\n\t\tlabel: 'Mars Pathfinder',\n\t\tparents: [\n\t\t\t[-91704541, 'sun'],\n\t\t\t[-78692880, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 12874372.0 * 4.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_mars_pathfinder',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_mars_pathfinder_landing_site: {\n\t\tgroups: ['mars', 'sc_mars_pathfinder', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Mars Pathfinder Landing Site',\n\t\tparents: [\n\t\t\t[-97045250.817, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(19.13 * Math.PI / 180, -33.22 * Math.PI / 180, 0),\n\t\t\tcoverage: [-97045250.817, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_mars_polar_lander: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0018,\n\t\tlabel: 'Mars Polar Lander',\n\t\tparents: [\n\t\t\t[-31298400, 'sun'],\n\t\t\t[-2476735.816, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 41109006.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_mars_polar_lander',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_viking_1_orbiter: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0047,\n\t\tlabel: 'Viking 1 Orbiter',\n\t\tparents: [\n\t\t\t[-742490410, 'mars'],\n\t\t\t[-663249600, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 88649.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_viking_1_orbiter',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_viking_1_lander_landing_site: {\n\t\tgroups: ['mars', 'sc_viking_1_lander', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Viking 1 Lander Landing Site',\n\t\tparents: [\n\t\t\t[-768926233.817, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(22.27 * Math.PI / 180, 312.05 * Math.PI / 180, 0),\n\t\t\tcoverage: [-768926233.817, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_viking_2_orbiter: {\n\t\tgroups: ['mars', 'spacecraft'],\n\t\tradius: 0.0047,\n\t\tlabel: 'Viking 2 Orbiter',\n\t\tparents: [\n\t\t\t[-738460186, 'mars'],\n\t\t\t[-676517400, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 98694.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_viking_2_orbiter',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsc_viking_2_lander_landing_site: {\n\t\tgroups: ['mars', 'sc_viking_2_lander', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Viking 2 Lander Landing Site',\n\t\tparents: [\n\t\t\t[-767208013.818, 'mars']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(47.64 * Math.PI / 180, -225.71 * Math.PI / 180, 0),\n\t\t\tcoverage: [-767208013.818, Number.POSITIVE_INFINITY]\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_messenger: {\n\t\tgroups: ['mercury', 'spacecraft'],\n\t\tocclusionRadius: 0.00133,\n\t\textentsRadius: 0.0035,\n\t\tlabel: 'MESSENGER',\n\t\tparents: [\n\t\t\t[144789279.39320505, 'earth'],\n\t\t\t[145066469, 'sun'],\n\t\t\t[175801890, 'earth'],\n\t\t\t[176659095, 'sun'],\n\t\t\t[214828942, 'venus'],\n\t\t\t[215033751, 'sun'],\n\t\t\t[234289415, 'venus'],\n\t\t\t[234436749, 'sun'],\n\t\t\t[253547108, 'mercury'],\n\t\t\t[253671753, 'sun'],\n\t\t\t[276485360, 'mercury'],\n\t\t\t[276627276, 'sun'],\n\t\t\t[307423681, 'mercury'],\n\t\t\t[307651285, 'sun'],\n\t\t\t[353474040, 'mercury'],\n\t\t\t[483694028.351, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_messenger/Messenger.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: -90 },\n\t\t\t\t{ y: 90 }\n\t\t\t],\n\t\t\tshadowEntities: ['mercury']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/earth/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/venus/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/venus/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/4/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/mercury/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/5/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/mercury/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/6/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/mercury/flyby3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/sun/7/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/mercury/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mercury',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_messenger',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_messenger/ori'\n\t\t}]\n\t},\n\tsc_messenger_impact_site: {\n\t\tgroups: ['mercury', 'sc_messenger', 'sites'],\n\t\tradius: 0.001,\n\t\tlabel: 'MESSENGER Impact Site',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'mercury']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(0.9501527254431932, -2.615904550043192, -0.910251923861324),\n\t\t\tcoverage: [483694028.351, Number.POSITIVE_INFINITY]\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\n// NEOs are near-earth objects\n// PHAs are potentially hazardous asteroids\n// TNOs are trans-neptunian objects\n\nEntity.register({\n\t'1_ceres': {\n\t\tgroups: ['dwarf planets'],\n\t\tradius: 473.0,\n\t\tlabel: 'Ceres',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 482.6,\n\t\t\tpolarRadius: 445.6,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: '1_ceres/color_$SIZE_$FACE.jpg',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1_ceres/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'101955_bennu': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.246,\n\t\tlabel: 'Bennu',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/101955_bennu/Bennu.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 83 },\n\t\t\t\t{ z: -168 }\n\t\t\t],\n\t\t\tscale: 0.0009956\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '101955_bennu/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '101955_bennu/ori'\n\t\t}]\n\t},\n\t'11351_leucus': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 17.0775,\n\t\tlabel: 'Leucus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 17.0775\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '11351_leucus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 445.732\n\t\t}]\n\t},\n\t'12923_zephyr': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 1.03,\n\t\tlabel: 'Zephyr',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.03, 1.03, 1.03]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '12923_zephyr/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.891\n\t\t}]\n\t},\n\t'134340_pluto': {\n\t\tgroups: ['dwarf planets', 'moons', '134340_pluto_barycenter'],\n\t\tradius: 1187.0,\n\t\tlabel: 'Pluto',\n\t\tlabelFadeEntity: 'sun',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '134340_pluto_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 1187.0,\n\t\t\tpolarRadius: 1187.0,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: '134340_pluto/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 4096]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '134340_pluto/134340_pluto_barycenter/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: 'charon'\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttarget: 'charon'\n\t\t\t}\n\t\t}]\n\t},\n\t'134340_pluto_barycenter': {\n\t\tgroups: ['134340_pluto', 'barycenters'],\n\t\tocclusionRadius: 0.001,\n\t\textentsRadius: 28000,\n\t\tsystemRadius: 130153,\n\t\tlabel: 'Barycenter',\n\t\tlabelFadeEntity: '134340_pluto',\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '134340_pluto_barycenter/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst divComponent = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\tdivComponent.setFadeWhenCloseToCamera(false);\n\t\t\tentity.setCanOcclude(false);\n\t\t}\n\t},\n\t'136108_haumea': {\n\t\tgroups: ['dwarf planets', 'TNOs'],\n\t\tradius: 816.0,\n\t\tlabel: 'Haumea',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/136108_haumea/haumea.gltf',\n\t\t\tscale: [1, 1, 1]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '136108_haumea/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\t'136199_eris': {\n\t\tgroups: ['dwarf planets', 'TNOs'],\n\t\tradius: 1163.0,\n\t\tlabel: 'Eris',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 1163.0,\n\t\t\tpolarRadius: 1163.0,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: '136199_eris/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '136199_eris/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\t'136472_makemake': {\n\t\tgroups: ['dwarf planets', 'TNOs'],\n\t\tradius: 715.0,\n\t\tlabel: 'Makemake',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 717.0,\n\t\t\tpolarRadius: 710.0,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: '136472_makemake/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '136472_makemake/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\t'14827_hypnos': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.4535,\n\t\tlabel: 'Hypnos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.4535, 0.4535, 0.4535]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '14827_hypnos/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'15094_polymele': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 10.5375,\n\t\tlabel: 'Polymele',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 10.5375\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '15094_polymele/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 5.8607\n\t\t}]\n\t},\n\t'1566_icarus': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.805,\n\t\tlabel: 'Icarus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.805, 0.800, 0.585]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1566_icarus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.2726\n\t\t}]\n\t},\n\t'16_psyche': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 125.0,\n\t\tlabel: '16 Psyche',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/16_psyche/psycheAsteroid.gltf',\n\t\t\tscale: [100, 100, 100],\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '16_psyche/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\t'1620_geographos': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 2.5,\n\t\tlabel: 'Geographos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.5, 1.0, 1.05]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1620_geographos/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 5.224\n\t\t}]\n\t},\n\t'162173_ryugu': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.45,\n\t\tlabel: 'Ryugu',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/162173_ryugu/ryugu.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ssd/162173_ryugu/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '162173_ryugu/ori'\n\t\t}]\n\t},\n\t'1862_apollo': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.75,\n\t\tlabel: 'Apollo',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.75, 0.75, 0.75]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1862_apollo/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.065\n\t\t}]\n\t},\n\t'1981_midas': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.975,\n\t\tlabel: 'Midas',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.975, 0.975, 0.975]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1981_midas/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 5.22\n\t\t}]\n\t},\n\t'1991_vg': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.00425,\n\t\tlabel: '1991 VG',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.00425, 0.00425, 0.00425]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1991_vg/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'1993_hd': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 0.005,\n\t\tlabel: '1993 HD',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1993_hd/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'1994_cc_a': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.325,\n\t\tlabel: '1994 CC',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.325, 0.325, 0.325]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1994_cc_a/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.38860\n\t\t}]\n\t},\n\t// Needs spice\n\t// '1994_cc_b': {\n\t// \tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t// \tradius: 0.025,\n\t// \tlabel: '1994 CC B',\n\t// \tparents: [\n\t// \t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t// \t],\n\t// \ttrail: {\n\t// \t\tlength: undefined\n\t// \t},\n\t// \tmodel: {\n\t// \t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t// \t\tscale: [0.025, 0.025, 0.025]\n\t// \t},\n\t// \tdynamo: [{\n\t// \t\turl: '1994_cc_b/1994_cc_a/orb',\n\t// \t\tparent: '1994_cc_a'\n\t// \t}, {\n\t// \t\turl: '1994_cc_b/ori'\n\t// \t}]\n\t// },\n\t// Needs spice\n\t// '1994_cc_c': {\n\t// \tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t// \tradius: 0.00417,\n\t// \tlabel: '1994 CC C',\n\t// \tparents: [\n\t// \t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t// \t],\n\t// \ttrail: {\n\t// \t\tlength: undefined\n\t// \t},\n\t// \tmodel: {\n\t// \t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t// \t\tscale: [0.00417, 0.00417, 0.00417]\n\t// \t},\n\t// \tdynamo: [{\n\t// \t\turl: '1994_cc_c/1994_cc_a/orb',\n\t// \t\tparent: '1994_cc_a'\n\t// \t}, {\n\t// \t\turl: '1994_cc_c/ori'\n\t// \t}]\n\t// },\n\t'1996_xb27': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.042,\n\t\tlabel: '1996 XB<sub>27</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.042, 0.042, 0.042]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1996_xb27/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 1.195\n\t\t}]\n\t},\n\t'1998_ky26': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.015,\n\t\tlabel: '1998 KY<sub>26</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.015, 0.015, 0.015]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1998_ky26/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 0.1784\n\t\t}]\n\t},\n\t'1998_ml14': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.5,\n\t\tlabel: '1998 ML<sub>14</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.5, 0.5, 0.5]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1998_ml14/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 14.28\n\t\t}]\n\t},\n\t'1998_qe2': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 1.375,\n\t\tlabel: '1998 QE<sub>2</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.375, 1.375, 1.375]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1998_qe2/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 4.749\n\t\t}]\n\t},\n\t'1999_ao10': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.025,\n\t\tlabel: '1999 AO<sub>10</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.025, 0.025, 0.025]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1999_ao10/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'1999_cg9': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '1999 CG<sub>9</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1999_cg9/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'1999_vx25': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '1999 VX<sub>25</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '1999_vx25/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2_pallas': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 291,\n\t\tlabel: 'Pallas',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [291, 278, 250]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2_pallas/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 7.8132\n\t\t}]\n\t},\n\t'2000_ae205': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2000 AE<sub>205</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2000_ae205/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2000_lg6': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2000 LG<sub>6</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2000_lg6/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2000_sg344': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.0185,\n\t\tlabel: '2000 SG<sub>344</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.0185, 0.0185, 0.0185]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2000_sg344/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2001_bb16': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2001 BB<sub>16</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2001_bb16/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2001_fr85': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2001 FR<sub>85</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2001_fr85/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2001_gp2': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2001 GP<sub>2</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2001_gp2/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2001_qj142': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2001 QJ<sub>142</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2001_qj142/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2001_sn263_a': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 1.45,\n\t\tlabel: '(153591) 2001 SN<sub>263</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.4, 1.35, 1.45]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2001_sn263_a/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.423\n\t\t}]\n\t},\n\t// Needs spice\n\t// '2001_sn263_b': {\n\t// \tgroups: ['asteroids', 'NEOs'],\n\t// \tradius: 0.215,\n\t// \tlabel: '2001 SN263 B',\n\t// \tparents: [\n\t// \t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t// \t],\n\t// \ttrail: {\n\t// \t\tlength: 537840\n\t// \t},\n\t// \tmodel: {\n\t// \t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t// \t\tscale: [0.215, 0.215, 0.215]\n\t// \t},\n\t// \tdynamo: [{\n\t// \t\turl: '2001_sn263_b/2001_sn263_a/orb',\n\t// \t\tparent: '2001_sn263_a'\n\t// \t}, {\n\t// \t\turl: '2001_sn263_b/ori'\n\t// \t}]\n\t// },\n\t// Needs spice\n\t// '2001_sn263_c': {\n\t// \tgroups: ['asteroids', 'NEOs'],\n\t// \tradius: 0.385,\n\t// \tlabel: '2001 SN263 C',\n\t// \tparents: [\n\t// \t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t// \t],\n\t// \ttrail: {\n\t// \t\tlength: 59270\n\t// \t},\n\t// \tmodel: {\n\t// \t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t// \t\tscale: [0.385, 0.385, 0.385]\n\t// \t},\n\t// \tdynamo: [{\n\t// \t\turl: '2001_sn263_c/2001_sn263_a/orb',\n\t// \t\tparent: '2001_sn263_a'\n\t// \t}, {\n\t// \t\turl: '2001_sn263_c/ori'\n\t// \t}]\n\t// },\n\t'2003_sm84': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2003 SM<sub>84</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2003_sm84/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2003_uv11': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.13,\n\t\tlabel: '(503941) 2003 UV<sub>11</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.13, 0.13, 0.13]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2003_uv11/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 18.25\n\t\t}]\n\t},\n\t'2003_yn107': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.01,\n\t\tlabel: '2003 YN<sub>107</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.01, 0.01, 0.01]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2003_yn107/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2005_er95': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2003 ER<sub>95</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2005_er95/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2005_lc': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2005 LC',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2005_lc/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2005_qp87': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2005 QP<sub>87</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2005_qp87/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2005_yu55': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.18,\n\t\tlabel: '2005 YU<sub>55</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.18, 0.18, 0.18]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2005_yu55/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 18\n\t\t}]\n\t},\n\t'2006_bz147': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2006 BZ<sub>147</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2006_bz147/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2006_jy26': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.00475,\n\t\tlabel: '2006 JY<sub>26</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.00475, 0.00475, 0.00475]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2006_jy26/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2006_qq56': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2006 QQ<sub>56</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2006_qq56/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2006_rh120': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.00125,\n\t\tlabel: '2006 RH<sub>120</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.00125, 0.00125, 0.00125]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2006_rh120/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 0.04583\n\t\t}]\n\t},\n\t'2006_ub17': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2006 UB<sub>17</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2006_ub17/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2007_tf15': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2007 TF<sub>15</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2007_tf15/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2007_un12': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2007 UN<sub>12</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2007_un12/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2007_vu6': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2007 VU<sub>6</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2007_vu6/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_bt2': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 BT<sub>2</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_bt2/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_cx118': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 CX<sub>118</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_cx118/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_ea9': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 EA<sub>9</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_ea9/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_el': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 EL',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_el/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_hu4': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 HU<sub>4</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_hu4/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_jl24': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 JL<sub>24</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_jl24/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 0.05385\n\t\t}]\n\t},\n\t'2008_kt': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 KT',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_kt/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_tc3': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.00205,\n\t\tlabel: '2008 TC<sub>3</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.00205, 0.00205, 0.00205]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_tc3/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 0.0269409\n\t\t}]\n\t},\n\t'2008_ts10': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2008 TS<sub>10</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_ts10/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2008_ua202': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.025,\n\t\tlabel: '2008 UA<sub>202</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.025, 0.025, 0.025]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2008_ua202/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2009_bd': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.0055,\n\t\tlabel: '2009 BD',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.0055, 0.0055, 0.0055]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2009_bd/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2009_os5': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2009 OS<sub>5</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2009_os5/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2009_rt1': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2009 RT<sub>1</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2009_rt1/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2009_yf': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2009 YF',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2009_yf/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2010_an61': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2010 AN<sub>61</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2010_an61/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2010_dj': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2010 DJ',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2010_dj/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2010_jw34': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2010 JW<sub>34</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2010_jw34/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2010_tg19': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2010 TG<sub>19</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2010_tg19/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2010_tn167': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2010 TN<sub>167</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2010_tn167/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2010_ub': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.005,\n\t\tlabel: '2010 UB',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.005, 0.005, 0.005]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2010_ub/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2063_bacchus': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.555,\n\t\tlabel: 'Bacchus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.555, 0.265, 0.25]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2063_bacchus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 14.904\n\t\t}]\n\t},\n\t'21_lutetia': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 60.5,\n\t\tlabel: 'Lutetia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [60.5, 50.5, 37.5]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '21_lutetia/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 8.1655\n\t\t}]\n\t},\n\t'2101_adonis': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.2615,\n\t\tlabel: 'Adonis',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.2615, 0.2615, 0.2615]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2101_adonis/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'2102_tantalus': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.8245,\n\t\tlabel: 'Tantalus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.8245, 0.8245, 0.8245]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2102_tantalus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.384\n\t\t}]\n\t},\n\t'2135_aristaeus': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.5,\n\t\tlabel: 'Aristaeus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.5, 0.5, 0.5]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2135_aristaeus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'216_kleopatra': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 138,\n\t\tlabel: 'Kleopatra',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [138, 47, 39]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '216_kleopatra/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 5.385\n\t\t}]\n\t},\n\t'21900_orus': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 25.405,\n\t\tlabel: 'Orus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: 25.405\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '21900_orus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 13.45\n\t\t}]\n\t},\n\t'225088_2007_or10': {\n\t\tgroups: ['dwarf planets', 'TNOs'],\n\t\tradius: 615,\n\t\tlabel: '2007 OR<sub>10</sub>',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [615, 615, 596.55]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '225088_2007_or10/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 22.40\n\t\t}]\n\t},\n\t'2340_hathor': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.105,\n\t\tlabel: 'Hathor',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.105, 0.105, 0.105]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2340_hathor/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.350\n\t\t}]\n\t},\n\t'243_ida': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 29.9,\n\t\tlabel: 'Ida',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [18.6 * 1.3, 25.4 * 1.3, 59.8 * 1.3],\n\t\t\trotate: [\n\t\t\t\t{ y: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '243_ida/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 4.634\n\t\t}]\n\t},\n\t'25143_itokawa': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.165,\n\t\tlabel: 'Itokawa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/25143_itokawa/itokawa.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '25143_itokawa/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12.132\n\t\t}]\n\t},\n\t'253_mathilde': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 33,\n\t\tlabel: 'Mathilde',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [33, 24, 23]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '253_mathilde/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 417.7\n\t\t}]\n\t},\n\t'2867_steins': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 3.415,\n\t\tlabel: 'Šteins',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3.415, 2.85, 2.21]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '2867_steins/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 6.049\n\t\t}]\n\t},\n\t'3_juno': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 160,\n\t\tlabel: 'Juno',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [160, 133.5, 100]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '3_juno/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 7.210\n\t\t}]\n\t},\n\t'3122_florence': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 2.2,\n\t\tlabel: 'Florence',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.2, 2.2, 2.2]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '3122_florence/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.3581\n\t\t}]\n\t},\n\t'3200_phaethon': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 2.9,\n\t\tlabel: 'Phaethon',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.9, 2.9, 2.9]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '3200_phaethon/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.604\n\t\t}]\n\t},\n\t'3362_khufu': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.35,\n\t\tlabel: 'Khufu',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.35, 0.35, 0.35]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '3362_khufu/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'3548_eurybates': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 31.9425,\n\t\tlabel: 'Eurybates',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 31.9425\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '3548_eurybates/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 8.711\n\t\t}]\n\t},\n\t'367943_duende': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 0.020,\n\t\tlabel: 'Duende',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.01, 0.01, 0.02]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '367943_duende/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 9.485\n\t\t}]\n\t},\n\t'37655_illapa': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.75,\n\t\tlabel: 'Illapa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.75, 0.75, 0.75]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '37655_illapa/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.6556\n\t\t}]\n\t},\n\t'4_vesta': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 262.7,\n\t\tlabel: 'Vesta',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/4_vesta/4_vesta.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4_vesta/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'4015_wilson-harrington': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 2.0,\n\t\tlabel: 'Wilson-Harrington',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2, 2, 2]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4015_wilson-harrington/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.5736\n\t\t}]\n\t},\n\t'4179_toutatis': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 2.13,\n\t\tlabel: 'Toutatis',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.35, 1.015, 2.13]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4179_toutatis/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 176\n\t\t}]\n\t},\n\t'4183_cuno': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 1.8255,\n\t\tlabel: 'Cuno',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.8255, 1.8255, 1.89255]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4183_cuno/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.5595\n\t\t}]\n\t},\n\t'433_eros': {\n\t\tgroups: ['asteroids', 'NEOs'],\n\t\tradius: 8.42,\n\t\tlabel: 'Eros',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/433_eros/433_eros.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '433_eros/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: '433_eros/ori'\n\t\t}]\n\t},\n\t'4450_pan': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.5,\n\t\tlabel: 'Pan',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.5, 0.5, 0.5]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4450_pan/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 56.48\n\t\t}]\n\t},\n\t'4486_mithra': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 1.175,\n\t\tlabel: 'Mithra',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.175, 0.825, 0.72]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4486_mithra/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 67.5\n\t\t}]\n\t},\n\t'4769_castalia': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.9,\n\t\tlabel: 'Castalia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.4, 0.4, 0.9]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '4769_castalia/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 4.095\n\t\t}]\n\t},\n\t'486958_arrokoth': {\n\t\tgroups: ['TNOs'],\n\t\tradius: 15.0,\n\t\tlabel: 'Arrokoth',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/486958_arrokoth/mu69.gltf',\n\t\t\tscale: [1, 1, 1],\n\t\t\trotate: [\n\t\t\t\t{ x: -110 },\n\t\t\t\t{ y: 180 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '486958_arrokoth/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: new Pioneer.Vector3(-6.121453676996425e-10, 0.9396926211599973, 0.34202014229786787),\n\t\t\tperiodInHours: 13\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst spin = entity.getControllerByClass(Pioneer.SpinController);\n\t\t\tif (spin !== null) {\n\t\t\t\tspin.setReferenceAngle(0);\n\t\t\t\tspin.setReferenceTime(599590968);\n\t\t\t}\n\t\t}\n\t},\n\t'5011_ptah': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.78,\n\t\tlabel: 'Ptah',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.78, 0.78, 0.78]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '5011_ptah/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 12\n\t\t}]\n\t},\n\t'52246_donaldjohanson': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 1.9475,\n\t\tlabel: 'Donaldjohanson',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: 1.9475\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '52246_donaldjohanson/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\t'5535_annefrank': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 2.412,\n\t\tlabel: 'Annefrank',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 2.412\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '5535_annefrank/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 15.12\n\t\t}]\n\t},\n\t'617_patroclus': {\n\t\tgroups: ['asteroids', '617_patroclus_barycenter'],\n\t\tradius: 64,\n\t\tlabel: 'Patroclus',\n\t\tlabelFadeEntity: 'sun',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '617_patroclus_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [64, 58, 49],\n\t\t\tshadowEntities: ['menoetius']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: 'menoetius'\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController, undefined, entity.getControllerByClass(Pioneer.AlignController));\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0;\n\t\t\toe.semiMajorAxis = 664;\n\t\t\toe.meanAngularMotion = 0.00001697791;\n\t\t\toe.meanAnomalyAtEpoch = Math.PI;\n\t\t\toe.setOrbitOrientationFromElements(1.97244894756, 0, 0);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\t\t}\n\t},\n\t'617_patroclus_barycenter': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 664,\n\t\tlabel: 'Patroclus',\n\t\tlabelFadeEntity: '617_patroclus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '617_patroclus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tentity.setCanOcclude(false);\n\t\t}\n\t},\n\t'6239_minos': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.237,\n\t\tlabel: 'Minos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.237, 0.237, 0.237]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '6239_minos/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 3.5558\n\t\t}]\n\t},\n\t'6489_golevka': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.265,\n\t\tlabel: 'Golevka',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.265, 0.265, 0.265]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '6489_golevka/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 6.026\n\t\t}]\n\t},\n\t'65803_didymos': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.39,\n\t\tlabel: 'Didymos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/65803_didymos/Didymos.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: 180 },\n\t\t\t\t{ x: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '65803_didymos/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0, 1, 0, 0)\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.2593,\n\t\t\trelativeToTime: 0\n\t\t}]\n\t},\n\t'66391_moshup': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.766,\n\t\tlabel: 'Moshup',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.766, 0.7475, 0.6735]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '66391_moshup/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 2.7645\n\t\t}]\n\t},\n\t// Needs spice\n\t// 'squannit': {\n\t// \tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t// \tradius: 0.180,\n\t// \tlabel: 'Squannit',\n\t// \tparents: [\n\t// \t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t// \t],\n\t// \ttrail: {\n\t// \t\tlength: 57600\n\t// \t},\n\t// \tmodel: {\n\t// \t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t// \t\tscale: [0.180, 0.180, 0.180]\n\t// \t},\n\t// \tdynamo: [{\n\t// \t\turl: 'squannit/66391_moshup/orb',\n\t// \t\tparent: '66391_moshup'\n\t// \t}],\n\t// \tspin: {\n\t// \t\taxis: Pioneer.Vector3.ZAxis,\n\t// \t\tperiodInHours: 12\n\t// \t}\n\t// },\n\t'69230_hermes': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.425,\n\t\tlabel: 'Hermes',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [0.425, 0.425, 0.425]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '69230_hermes/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 13.894\n\t\t}]\n\t},\n\t'90377_sedna': {\n\t\tgroups: ['dwarf planets', 'TNOs'],\n\t\tradius: 497.5,\n\t\tlabel: 'Sedna',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [497.5, 497.5, 497.5]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '90377_sedna/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 10.273\n\t\t}]\n\t},\n\t'951_gaspra': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 9.1,\n\t\tlabel: 'Gaspra',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/951_gaspra/gaspra.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '951_gaspra/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 7.042\n\t\t}]\n\t},\n\t'9969_braille': {\n\t\tgroups: ['asteroids', 'asteroid belt'],\n\t\tradius: 1.05,\n\t\tlabel: 'Braille',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.05, 0.5, 0.5]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '9969_braille/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\tperiodInHours: 226.4\n\t\t}]\n\t},\n\t'99942_apophis': {\n\t\tgroups: ['asteroids', 'NEOs', 'PHAs'],\n\t\tradius: 0.225,\n\t\tlabel: 'Apophis',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/99942_apophis/apophis.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '99942_apophis/sun/orb'\n\t\t}, {\n\t\t\ttype: 'spin',\n\t\t\t// Goldstone and Arecibo radar observations of (99942) Apophis in 2012–2013, Marina Brozovic et al, 2018\n\t\t\t// Converted 246.8°, -59.3° to XYZ.\n\t\t\taxis: new Pioneer.Vector3(0.20112425201023415, 0.46925803805904115, 0.8598522715968735),\n\t\t\tperiodInHours: 30.4\n\t\t}]\n\t},\n\t'152830_dinkinesh': {\n\t\tgroups: ['asteroids'],\n\t\tradius: 0.45,\n\t\tlabel: 'Dinkinesh',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: 0.45\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: '152830_dinkinesh/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcharon: {\n\t\tgroups: ['134340_pluto', 'moons', '134340_pluto_barycenter'],\n\t\tradius: 603.5,\n\t\tlabel: 'Charon',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '134340_pluto_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 603.5,\n\t\t\tpolarRadius: 603.5,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'charon/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 2048]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'charon/134340_pluto_barycenter/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: '134340_pluto'\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttarget: '134340_pluto'\n\t\t\t}\n\t\t}]\n\t},\n\tdactyl: {\n\t\tgroups: ['243_ida', 'moons'],\n\t\tradius: 0.7,\n\t\tlabel: 'Dactyl',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '243_ida']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [0.8, 0.7, 0.6],\n\t\t\trotate: [\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: '243_ida'\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController, undefined, entity.getControllerByClass(Pioneer.AlignController));\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0;\n\t\t\toe.semiMajorAxis = 90;\n\t\t\toe.meanAngularMotion = 8.726646e-5; // 20 hrs per orbit\n\t\t\toe.meanAnomalyAtEpoch = 0;\n\t\t\toe.orbitOrientation.set(0.8728453580255966, 0.1876084386162498, -0.08948587100888229, 0.4415159494547423);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\t\t}\n\t},\n\tdimorphos: {\n\t\tgroups: ['65803_didymos', 'moons'],\n\t\tradius: 0.085,\n\t\tlabel: 'Dimorphos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '65803_didymos']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/dimorphos/Dimorphos.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'dimorphos/65803_didymos/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: '65803_didymos'\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttarget: '65803_didymos',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\thiiaka: {\n\t\tgroups: ['136108_haumea', 'moons'],\n\t\tradius: 160.0,\n\t\tlabel: 'Hi\\'iaka',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '136108_haumea']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [160, 160, 160]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: '136108_haumea'\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController, undefined, entity.getControllerByType('align'));\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0.0513;\n\t\t\toe.semiMajorAxis = 49880;\n\t\t\toe.meanAngularMotion = 1.48049e-6; // 49.12 days per orbit\n\t\t\toe.meanAnomalyAtEpoch = 0;\n\t\t\toe.setOrbitOrientationFromElements(2.20532822965, 0, 0);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\t\t}\n\t},\n\thydra: {\n\t\tgroups: ['134340_pluto', 'moons', '134340_pluto_barycenter'],\n\t\tradius: 25.0,\n\t\tlabel: 'Hydra',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '134340_pluto_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [25, 25, 25],\n\t\t\tshadowEntities: ['134340_pluto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hydra/134340_pluto_barycenter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkerberos: {\n\t\tgroups: ['134340_pluto', 'moons', '134340_pluto_barycenter'],\n\t\tradius: 8.25,\n\t\tlabel: 'Kerberos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '134340_pluto_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [8.25, 8.25, 8.25],\n\t\t\tshadowEntities: ['134340_pluto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kerberos/134340_pluto_barycenter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tmenoetius: {\n\t\tgroups: ['617_patroclus_barycenter', 'moons'],\n\t\tradius: 58,\n\t\tlabel: 'Menoetius',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '617_patroclus_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [58, 54, 45],\n\t\t\tshadowEntities: ['617_patroclus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: '617_patroclus'\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController, undefined, entity.getControllerByType('align'));\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0;\n\t\t\toe.semiMajorAxis = 664;\n\t\t\toe.meanAngularMotion = 0.00001697791;\n\t\t\toe.meanAnomalyAtEpoch = 0;\n\t\t\toe.setOrbitOrientationFromElements(1.97244894756, 0, 0);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\t\t}\n\t},\n\tnamaka: {\n\t\tgroups: ['136108_haumea', 'moons'],\n\t\tradius: 85.0,\n\t\tlabel: 'Nāmaka',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '136108_haumea']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [85, 85, 85]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: '136108_haumea'\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController, undefined, entity.getControllerByType('align'));\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0.249;\n\t\t\toe.semiMajorAxis = 25657;\n\t\t\toe.meanAngularMotion = 3.9786e-6; // 18.2783 days per orbit\n\t\t\toe.meanAnomalyAtEpoch = 0;\n\t\t\toe.setOrbitOrientationFromElements(1.97244894756, 0, 0);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\t\t}\n\t},\n\tnix: {\n\t\tgroups: ['134340_pluto', 'moons', '134340_pluto_barycenter'],\n\t\tradius: 24.0,\n\t\tlabel: 'Nix',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '134340_pluto_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [24, 24, 24],\n\t\t\tshadowEntities: ['134340_pluto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'nix/134340_pluto_barycenter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tstyx: {\n\t\tgroups: ['134340_pluto', 'moons', '134340_pluto_barycenter'],\n\t\tradius: 5.5,\n\t\tlabel: 'Styx',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, '134340_pluto_barycenter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [5.5, 5.5, 5.5],\n\t\t\tshadowEntities: ['134340_pluto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'styx/134340_pluto_barycenter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tdespina: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 90,\n\t\tlabel: 'Despina',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [90, 90, 90],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'despina/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'despina/ori'\n\t\t}]\n\t},\n\tgalatea: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 102,\n\t\tlabel: 'Galatea',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [102, 102, 102],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'galatea/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'galatea/ori'\n\t\t}]\n\t},\n\thalimede: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 31,\n\t\tlabel: 'Halimede',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [31, 31, 31],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'halimede/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thippocamp: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 17.4,\n\t\tlabel: 'Hippocamp',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [17.4, 17.4, 17.4],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hippocamp/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tlaomedeia: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 21,\n\t\tlabel: 'Laomedeia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [21, 21, 21],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'laomedeia/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tlarissa: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 108,\n\t\tlabel: 'Larissa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [108, 108, 108],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'larissa/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'larissa/ori'\n\t\t}]\n\t},\n\tnaiad: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 48,\n\t\tlabel: 'Naiad',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [48, 48, 48],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'naiad/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'naiad/ori'\n\t\t}]\n\t},\n\tnereid: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 170.0,\n\t\tlabel: 'Nereid',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [170, 170, 170],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'nereid/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tneso: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 30,\n\t\tlabel: 'Neso',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [30, 30, 30],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'neso/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tproteus: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 232.5,\n\t\tlabel: 'Proteus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/proteus/proteus.gltf',\n\t\t\tscale: [1, 1, 1]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'proteus/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'proteus/ori'\n\t\t}]\n\t},\n\tpsamathe: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 20,\n\t\tlabel: 'Psamathe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [20, 20, 20],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'psamathe/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsao: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 22,\n\t\tlabel: 'Sao',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [22, 22, 22],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sao/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tthalassa: {\n\t\tgroups: ['neptune', 'moons', 'regular'],\n\t\tradius: 54,\n\t\tlabel: 'Thalassa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [54, 54, 54],\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thalassa/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thalassa/ori'\n\t\t}]\n\t},\n\ttriton: {\n\t\tgroups: ['neptune', 'moons', 'irregular'],\n\t\tradius: 1353.4,\n\t\tlabel: 'Triton',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'neptune']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 1353.4,\n\t\t\tpolarRadius: 1353.4,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'triton/color_$SIZE_$FACE.jpg',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['neptune']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'triton/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'triton/ori'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\nimport { KeyframePointingController } from '../controllers/keyframe_pointing_controller';\nimport { KeyframeSpinController } from '../controllers/keyframe_spin_controller';\n\nEntity.register({\n\tsc_juno: {\n\t\tgroups: ['jupiter', 'spacecraft'],\n\t\tocclusionRadius: 0.001732,\n\t\textentsRadius: 0.010000,\n\t\tlabel: 'Juno',\n\t\tparents: [\n\t\t\t[365836752.1832, 'earth'],\n\t\t\t[366088266.183, 'sun'],\n\t\t\t[434433667.182, 'earth'],\n\t\t\t[434793667.182, 'sun'],\n\t\t\t[519652868.184, 'jupiter'],\n\t\t\t[676339597, 'ganymede'],\n\t\t\t[676381521, 'jupiter'],\n\t\t\t[717700360, 'europa'],\n\t\t\t[717727733, 'jupiter'],\n\t\t\t[757191924, 'io'],\n\t\t\t[757203571, 'jupiter'],\n\t\t\t[760247560, 'io'],\n\t\t\t[760262808, 'jupiter']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tlengthCoverages: [\n\t\t\t\t[63072000, Number.NEGATIVE_INFINITY, 519652868.184],\n\t\t\t\t[5184000, 519652868.184, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_juno/Juno.gltf',\n\t\t\trotate: [{\n\t\t\t\tx: 90\n\t\t\t}],\n\t\t\tshadowEntities: ['jupiter', 'europa', 'ganymede', 'callisto', 'io']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/sun/preflyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/earth/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/sun/postflyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/ganymede/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/europa/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/io/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/io/2/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tcoverage: [365836752.1832, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juno/ori'\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [393471366, 529748408 + 600],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tconst cover = model.getThreeJsObjectByName('engine_cover');\n\t\t\t\tif (cover !== null) {\n\t\t\t\t\tconst time = entity.getScene().getEngine().getTime();\n\t\t\t\t\tconst nextCloseIndex = Pioneer.Sort.getIndex(time, junoEngineCoverOpenings, (a, b) => a[1] < b);\n\t\t\t\t\tconst openTime = junoEngineCoverOpenings[nextCloseIndex][0];\n\t\t\t\t\tconst closeTime = junoEngineCoverOpenings[nextCloseIndex][1];\n\t\t\t\t\tconst u = Pioneer.MathUtils.clamp01(((closeTime - openTime) / 2 - Math.abs(time - (closeTime + openTime) / 2)) / 600);\n\t\t\t\t\tcover.rotation.x = Pioneer.MathUtils.lerp(Math.PI, Math.PI / 8, u);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tconst cover = model.getThreeJsObjectByName('engine_cover');\n\t\t\t\tif (cover !== null) {\n\t\t\t\t\tcover.rotation.x = Math.PI;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [399637867.183, 520959604.184],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst particleSpray = entity.getComponentByClass(Pioneer.ParticleSprayComponent);\n\t\t\t\tconst time = entity.getScene().getEngine().getTime();\n\t\t\t\tconst nextCloseIndex = Pioneer.Sort.getIndex(time, junoEngineBurns, (a, b) => a[1] < b);\n\t\t\t\tconst startTime = junoEngineBurns[nextCloseIndex][0];\n\t\t\t\tconst endTime = junoEngineBurns[nextCloseIndex][1];\n\t\t\t\tconst enabled = startTime <= time && time < endTime;\n\t\t\t\tparticleSpray.setEnabled(enabled);\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst particleSpray = entity.getComponentByClass(Pioneer.ParticleSprayComponent);\n\t\t\t\tparticleSpray.setEnabled(false);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [519652868.184, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail) {\n\t\t\t\t\ttrail.setRelativeToEntity('jupiter');\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail) {\n\t\t\t\t\ttrail.setRelativeToEntity('');\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Use the keyframes to point in the right direction.\n\t\t\tconst keyframePointing = entity.addControllerByClass(KeyframePointingController);\n\t\t\tkeyframePointing.setKeyframes(junoPointingKeyframes);\n\t\t\tkeyframePointing.setDirection(Pioneer.Vector3.ZAxis);\n\t\t\tkeyframePointing.setCoverage(new Pioneer.Interval(365836752.1832, 521025625));\n\n\t\t\t// Use the keyframes to spin at the right rates.\n\t\t\tconst keyframeSpin = entity.addControllerByClass(KeyframeSpinController);\n\t\t\tkeyframeSpin.setKeyframes(junoSpinKeyframes);\n\t\t\tkeyframeSpin.setAxis(Pioneer.Vector3.ZAxis);\n\t\t\tkeyframeSpin.setCoverage(new Pioneer.Interval(365836752.1832, 521025625));\n\t\t\tkeyframeSpin.setStartingAngle(-0.96); // an angle to match the start of the ori dynamo.\n\n\t\t\t// Set up the engine burn.\n\t\t\tconst particleSpray = entity.addComponentByClass(Pioneer.ParticleSprayComponent);\n\t\t\tparticleSpray.setNumberOfParticles(100);\n\t\t\tparticleSpray.setSizeOfParticles(0.0003);\n\t\t\tparticleSpray.setSpeedOfParticles(0.01);\n\t\t\tparticleSpray.setColorOfParticles(new Pioneer.Color(1, 0.75, 0, 0.25));\n\t\t\tparticleSpray.setSpread(-3);\n\t\t\tparticleSpray.setParticleSpacingRandom(false);\n\t\t\tparticleSpray.setLength(0.003);\n\t\t\tparticleSpray.setOriginOffset(new Pioneer.Vector3(0, 0, -0.0017));\n\t\t\tparticleSpray.setDirection(Pioneer.Vector3.ZAxisNeg);\n\t\t\tparticleSpray.setEnabled(false);\n\t\t}\n\t},\n\tsc_cassini: {\n\t\tgroups: ['saturn', 'spacecraft'],\n\t\tocclusionRadius: 0.0034,\n\t\textentsRadius: 0.005500,\n\t\tlabel: 'Cassini',\n\t\tparents: [\n\t\t\t[-69820368.42763124, 'earth'],\n\t\t\t[-69537536.818, 'sun'],\n\t\t\t[-53179136.814, 'venus'],\n\t\t\t[-53092736.814, 'sun'],\n\t\t\t[-16495135.816, 'venus'],\n\t\t\t[-16451935.816, 'sun'],\n\t\t\t[-11951935.817, 'earth'],\n\t\t\t[-11660335.817, 'sun'],\n\t\t\t[139219264.185, 'saturn'],\n\t\t\t[558743640, '']\n\t\t],\n\t\tdependents: ['sc_huygens'],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_cassini/Cassini.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 },\n\t\t\t\t{ z: 180 }\n\t\t\t],\n\t\t\tshadowEntities: ['saturn', 'titan', 'enceladus', 'mimas', 'tethys']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/venus/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/venus/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/earth/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/sun/4/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_cassini/quat'\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [-13098535.817, 534124760.143],\n\t\t\tupdate: (entity) => {\n\t\t\t\tconst particleSpray = entity.getComponentByClass(Pioneer.ParticleSprayComponent);\n\t\t\t\tconst time = entity.getScene().getEngine().getTime();\n\t\t\t\tconst nextCloseIndex = Pioneer.Sort.getIndex(time, cassiniEngineBurns, (a, b) => a[1] < b);\n\t\t\t\tconst startTime = cassiniEngineBurns[nextCloseIndex][0];\n\t\t\t\tconst endTime = cassiniEngineBurns[nextCloseIndex][1];\n\t\t\t\tconst enabled = startTime <= time && time < endTime;\n\t\t\t\tparticleSpray.setEnabled(enabled);\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst particleSpray = entity.getComponentByClass(Pioneer.ParticleSprayComponent);\n\t\t\t\tparticleSpray.setEnabled(false);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [157212064.184, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst modelComponent = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (modelComponent !== null) {\n\t\t\t\t\tmodelComponent.setHiddenObject('huygens_probe', true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst modelComponent = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (modelComponent !== null) {\n\t\t\t\t\tmodelComponent.setHiddenObject('huygens_probe', false);\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Set up the engine burn.\n\t\t\tconst particleSpray = entity.addComponentByClass(Pioneer.ParticleSprayComponent);\n\t\t\tparticleSpray.setNumberOfParticles(50);\n\t\t\tparticleSpray.setSizeOfParticles(0.0003);\n\t\t\tparticleSpray.setSpeedOfParticles(0.01);\n\t\t\tparticleSpray.setColorOfParticles(new Pioneer.Color(1, 0.75, 0, 0.25));\n\t\t\tparticleSpray.setSpread(-3);\n\t\t\tparticleSpray.setParticleSpacingRandom(false);\n\t\t\tparticleSpray.setLength(0.002);\n\t\t\tparticleSpray.setOriginOffset(new Pioneer.Vector3(0, 0.00029, 0.0033));\n\t\t\tparticleSpray.setDirection(Pioneer.Vector3.ZAxis);\n\t\t\tparticleSpray.setEnabled(false);\n\t\t}\n\t},\n\tsc_europa_clipper: {\n\t\tgroups: ['jupiter', 'europa', 'ganymede', 'callisto', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.011,\n\t\tlabel: 'Europa Clipper',\n\t\tparents: [\n\t\t\t[781796651, 'sun'],\n\t\t\t[849443647, 'earth'],\n\t\t\t[849694384, 'sun'],\n\t\t\t[954569001, 'jupiter'],\n\t\t\t[1096736672, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_europa_clipper/europa_clipper.gltf',\n\t\t\tshadowEntities: ['jupiter', 'earth', 'mars', 'europa']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_europa_clipper/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_europa_clipper/earth/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_europa_clipper/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_galileo: {\n\t\tgroups: ['jupiter', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.0055,\n\t\tlabel: 'Galileo',\n\t\tparents: [\n\t\t\t[-321964226.73959994, 'earth'],\n\t\t\t[-321559829, 'sun'],\n\t\t\t[-312199026, 'venus'],\n\t\t\t[-311946958, 'sun'],\n\t\t\t[-286252262, 'earth'],\n\t\t\t[-285827020, 'sun'],\n\t\t\t[-223105356, 'earth'],\n\t\t\t[-222610262, 'sun'],\n\t\t\t[-129268796, 'jupiter'],\n\t\t\t[117442702, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_galileo/galileo.gltf',\n\t\t\tshadowEntities: ['jupiter', 'earth', 'venus'],\n\t\t\trotate: [\n\t\t\t\t{ x: -90 },\n\t\t\t\t{ z: 180 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/venus/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/earth/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/earth/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'mercury',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttarget: 'earth',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo/quat'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Make the rotor spin.\n\t\t\tconst spin = entity.addControllerByClass(Pioneer.SpinController);\n\t\t\tspin.setJoint('spinning_section');\n\t\t\tspin.setRate(3 * 2 * Math.PI / 60);\n\t\t\tspin.setAxis(Pioneer.Vector3.YAxisNeg, true);\n\t\t}\n\t},\n\tsc_galileo_probe: {\n\t\tgroups: ['jupiter', 'spacecraft'],\n\t\tradius: 0.00072,\n\t\tlabel: 'Galileo Probe',\n\t\tparents: [\n\t\t\t[-321964226.73959994, 'sc_galileo'],\n\t\t\t[-129268796, 'jupiter'],\n\t\t\t[-128353980, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_galileo_probe/galileo_probe.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo_probe/galileo/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_galileo_probe/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\tcoverage: [-321964226.73959994, -141114537.48322043]\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, -141114537.48322043],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst div = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tif (div !== null) {\n\t\t\t\t\tdiv.setEnabled(false);\n\t\t\t\t}\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setEnabled(false);\n\t\t\t\t}\n\t\t\t\tconst translateController = entity.getControllerByClass(Pioneer.TranslateController);\n\t\t\t\ttranslateController.setTranslation(new Pioneer.Vector3(0, 0, 0.001));\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst div = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tif (div !== null) {\n\t\t\t\t\tdiv.setEnabled(true);\n\t\t\t\t}\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setEnabled(true);\n\t\t\t\t}\n\t\t\t\tconst translateController = entity.getControllerByClass(Pioneer.TranslateController);\n\t\t\t\ttranslateController.setTranslation(new Pioneer.Vector3(-0.000016, 0.000024, 0.0007));\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Make the model centered.\n\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, -0.001));\n\n\t\t\t// Move it so that its dynamo start lines up with galileo on release.\n\t\t\tconst translateController = entity.addControllerByClass(Pioneer.TranslateController);\n\t\t\ttranslateController.setTranslation(new Pioneer.Vector3(-0.000016, 0.000024, 0.0007));\n\t\t\ttranslateController.setRelativeToOrientation(true);\n\t\t\ttranslateController.setCoverage(new Pioneer.Interval(-321964226.73959994, -128353980));\n\n\t\t\t// Orient it so that it lines up with galileo on release.\n\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(-321964226.73959994, -141114537.48322043));\n\t\t\tconst fixed = entity.addControllerByClass(Pioneer.FixedController);\n\t\t\tfixed.setOrientation(new Pioneer.Quaternion(0.40004226980201746, 0.3894033591393042, -0.7928008139628516, 0.24453645053961984));\n\t\t\tfixed.setCoverage(new Pioneer.Interval(-141114537.48322043, Number.POSITIVE_INFINITY));\n\t\t}\n\t},\n\tsc_huygens: {\n\t\tgroups: ['saturn', 'spacecraft', 'titan'],\n\t\tocclusionRadius: 0.00130,\n\t\textentsRadius: 0.00130,\n\t\tlabel: 'Huygens',\n\t\tparents: [\n\t\t\t[157212064.184, 'saturn'],\n\t\t\t[158945582, 'titan'],\n\t\t\t[158974766.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_huygens/Huygens.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 },\n\t\t\t\t{ z: 180 }\n\t\t\t],\n\t\t\tshadowEntities: ['saturn', 'titan', 'enceladus', 'mimas', 'tethys']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_huygens/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_huygens/titan/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.8295521744501194, 0.09912464029342342, -0.04158756948048668, -0.5479853735424731)\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Needed because spice doesn't go all the way down.\n\t\t\t\tconst keyframeController1 = entity.addControllerByClass(Pioneer.KeyframeController);\n\t\t\t\tkeyframeController1.addPositionKeyframe(158965616.707, // When the spice runs out.\n\t\t\t\t\tnew Pioneer.Vector3(-74.84608000701567, -3832.0774028380238, -305.9513410781612));\n\t\t\t\tkeyframeController1.addPositionKeyframe(158965667.7750001,\n\t\t\t\t\tnew Pioneer.Vector3(-168.19015737501377, -3541.733393771429, -291.12326824195395));\n\t\t\t\tkeyframeController1.addPositionKeyframe(158965894.184, // When Huygens deploys its parachute  at 152 km altitude\n\t\t\t\t\tnew Pioneer.Vector3(-376.8992769951708, -2686.9622048526126, -273.33138256355716));\n\t\t\t\treturn keyframeController1;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Separate keyframe controller needed for parachute landing, since it is a sharp edge, slowing the velocity drastically.\n\t\t\t\tconst keyframeController2 = entity.addControllerByClass(Pioneer.KeyframeController);\n\t\t\t\tkeyframeController2.addPositionKeyframe(158965894.184, // When Huygens deploys its parachute  at 152 km altitude\n\t\t\t\t\tnew Pioneer.Vector3(-376.8992769951708, -2686.9622048526126, -273.33138256355716));\n\t\t\t\tkeyframeController2.addPositionKeyframe(158974766.184, // When Huygens lands on the ground\n\t\t\t\t\tnew Pioneer.Vector3(-251.2479743710496, -2548.813556954952, -266.5500089234507));\n\t\t\t\treturn keyframeController2;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Reverse the model translation.\n\t\t\t\tconst translateController = entity.addControllerByClass(Pioneer.TranslateController);\n\t\t\t\ttranslateController.setTranslation(new Pioneer.Vector3(-0.0013, 0, 0.0011));\n\t\t\t\ttranslateController.setRelativeToOrientation(true);\n\t\t\t\ttranslateController.setCoverage(new Pioneer.Interval(157212064.184, 158974766.184));\n\t\t\t\treturn translateController;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Use the keyframes to spin at the right rates.\n\t\t\t\tconst keyframeSpin = entity.addControllerByClass(KeyframeSpinController);\n\t\t\t\tkeyframeSpin.setKeyframes(huygensSpinKeyframes);\n\t\t\t\tkeyframeSpin.setAxis(Pioneer.Vector3.XAxisNeg);\n\t\t\t\tkeyframeSpin.setCoverage(new Pioneer.Interval(157212064.184, Number.POSITIVE_INFINITY));\n\t\t\t\treturn keyframeSpin;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [158965616.707, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trailComponent = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trailComponent !== null) {\n\t\t\t\t\ttrailComponent.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trailComponent = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trailComponent !== null) {\n\t\t\t\t\ttrailComponent.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Make the model centered.\n\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\tmodel.setTranslation(new Pioneer.Vector3(0.0013, 0, -0.0011));\n\t\t}\n\t},\n\tsc_huygens_landing_site: {\n\t\tgroups: ['titan', 'sc_huygens', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Huygens Landing Site',\n\t\tparents: [\n\t\t\t[157212064.184, 'titan']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tllaOnSpheroid: new Pioneer.LatLonAlt(-0.18453331247520502, 2.9263055188728955, 0),\n\t\t\tcoverage: [157212064.184, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_juice: {\n\t\tgroups: ['jupiter', 'ganymede', 'spacecraft'],\n\t\tocclusionRadius: 0.007,\n\t\textentsRadius: 0.0135,\n\t\tlabel: 'JUICE',\n\t\tparents: [\n\t\t\t[734748207, 'earth'],\n\t\t\t[735606318, 'sun'],\n\t\t\t[777026548, 'earth'],\n\t\t\t[778061110, 'sun'],\n\t\t\t[809697014, 'venus'],\n\t\t\t[810162491, 'sun'],\n\t\t\t[843697642, 'earth'],\n\t\t\t[844049179, 'sun'],\n\t\t\t[916393497, 'earth'],\n\t\t\t[916903199, 'sun'],\n\t\t\t[994471790, 'jupiter'],\n\t\t\t[1103217877, 'ganymede']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_juice/juice.gltf',\n\t\t\tshadowEntities: ['ganymede', 'jupiter', 'earth']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/earth/launch'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/sun'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/earth/flyby1'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/venus/flyby'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/earth/flyby2'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/earth/flyby3'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/jupiter'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/ganymede'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_juice/quat'\n\t\t}]\n\t},\n\tsc_pioneer_10: {\n\t\tgroups: ['sun', 'jupiter', 'spacecraft'],\n\t\tocclusionRadius: 0.002118055,\n\t\textentsRadius: 0.003,\n\t\tlabel: 'Pioneer 10',\n\t\tparents: [\n\t\t\t[-878291717.8145751, 'earth'],\n\t\t\t[-878146409, 'sun'],\n\t\t\t[-824046472, 'jupiter'],\n\t\t\t[-822011429, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 60 * 60 * 24 * 365 * 10\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_pioneer/pioneer.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_10/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_10/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_10/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_10/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_pioneer_11: {\n\t\tgroups: ['sun', 'jupiter', 'saturn', 'spacecraft'],\n\t\tocclusionRadius: 0.002118055,\n\t\textentsRadius: 0.003,\n\t\tlabel: 'Pioneer 11',\n\t\tparents: [\n\t\t\t[-843816855.8143449, 'earth'],\n\t\t\t[-843644357, 'sun'],\n\t\t\t[-792658454, 'jupiter'],\n\t\t\t[-790152245, 'sun'],\n\t\t\t[-643302619, 'saturn'],\n\t\t\t[-640194311, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 60 * 60 * 24 * 365 * 10\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_pioneer/pioneer.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_11/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_11/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_11/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_11/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_11/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_pioneer_11/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_voyager_1: {\n\t\tgroups: ['jupiter', 'saturn', 'sun', 'spacecraft'],\n\t\tocclusionRadius: 0.00183,\n\t\textentsRadius: 0.0043000,\n\t\tlabel: 'Voyager 1',\n\t\tparents: [\n\t\t\t[-704412035.617, 'earth'],\n\t\t\t[-703530245, 'sun'],\n\t\t\t[-660264745, 'jupiter'],\n\t\t\t[-655057463, 'sun'],\n\t\t\t[-606239665, 'saturn'],\n\t\t\t[-600733702, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 946080000,\n\t\t\tlengthCoverages: [\n\t\t\t\t[157680000, Number.NEGATIVE_INFINITY, 377123932.454],\n\t\t\t\t[946080000, 377123932.454, Number.POSITIVE_INFINITY],\n\t\t\t\t[5184000, -660264745, -655057463],\n\t\t\t\t[5184000, -606239665, -600733702]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_voyager/Voyager.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_1/ori'\n\t\t}]\n\t},\n\tsc_voyager_2: {\n\t\tgroups: ['jupiter', 'saturn', 'uranus', 'neptune', 'sun', 'spacecraft'],\n\t\tocclusionRadius: 0.00183,\n\t\textentsRadius: 0.0043000,\n\t\tlabel: 'Voyager 2',\n\t\tparents: [\n\t\t\t[-705788847.817, 'earth'],\n\t\t\t[-704774613, 'sun'],\n\t\t\t[-650828783, 'jupiter'],\n\t\t\t[-642276063, 'sun'],\n\t\t\t[-582886481, 'saturn'],\n\t\t\t[-574538624, 'sun'],\n\t\t\t[-440395228, 'uranus'],\n\t\t\t[-439259319, 'sun'],\n\t\t\t[-327233138, 'neptune'],\n\t\t\t[-326252606, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 946080000,\n\t\t\tlengthCoverages: [\n\t\t\t\t[157680000, Number.NEGATIVE_INFINITY, 651751314.724],\n\t\t\t\t[946080000, 651751314.724, Number.POSITIVE_INFINITY],\n\t\t\t\t[5184000, -650828783, -642276063],\n\t\t\t\t[5184000, -582886481, -574538624],\n\t\t\t\t[5184000, -440395228, -439259319],\n\t\t\t\t[5184000, -327233138, -326252606]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_voyager/Voyager.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/sun/4/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/neptune/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/sun/5/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_voyager_2/ori'\n\t\t}]\n\t}\n});\n\n// Cassini engine burn start/stop times\nconst cassiniEngineBurns = [\n\t[-13098535.817, -13098146.797],\n\t[-12342535.817, -12342421.197],\n\t[-10612735.817, -10612663.357],\n\t[14274064.185, 14274070.255],\n\t[36653454.185, 36653459.605],\n\t[71128864.186, 71128875.066],\n\t[105091264.185, 105091282.755],\n\t[118339264.182, 118339287.092],\n\t[138968824.185, 138969181.735],\n\t[140692084.184, 140692123.174],\n\t[141916392.184, 141922237.024],\n\t[146548444.183, 146551498.073],\n\t[147846664.183, 147846668.693],\n\t[152302564.182, 152302569.842],\n\t[154285264.183, 154285267.193],\n\t[156518584.184, 156518669.274],\n\t[157466284.184, 157466438.074],\n\t[159139264.184, 159139404.074],\n\t[160168144.185, 160168264.795],\n\t[161978464.185, 161978469.745],\n\t[163011064.185, 163011104.295],\n\t[163869664.186, 163869667.996],\n\t[164528404.186, 164528414.466],\n\t[165853384.186, 165853391.046],\n\t[166370464.186, 166370502.696],\n\t[168008344.186, 168008476.766],\n\t[174127084.184, 174127086.454],\n\t[176341864.183, 176341881.793],\n\t[176952124.183, 176952139.533],\n\t[178261744.183, 178261753.433],\n\t[178699444.183, 178699535.673],\n\t[180420064.182, 180420240.372],\n\t[182368684.182, 182368777.962],\n\t[184039204.183, 184039282.793],\n\t[185162584.183, 185162597.343],\n\t[196273205.186, 196273208.936],\n\t[197566385.186, 197566387.476],\n\t[199978145.185, 199978148.205],\n\t[202994705.185, 202994717.245],\n\t[207734765.183, 207734800.073],\n\t[211183265.182, 211183306.302],\n\t[211500485.182, 211500537.082],\n\t[212965745.182, 212965786.692],\n\t[214371665.182, 214371670.582],\n\t[216354545.183, 216354568.983],\n\t[219456245.183, 219456251.063],\n\t[219887345.184, 219887389.034],\n\t[220835165.184, 220835169.094],\n\t[221266265.184, 221266275.434],\n\t[222644225.185, 222644240.975],\n\t[224109485.185, 224109487.885],\n\t[226090325.185, 226090329.355],\n\t[227038025.186, 227038032.946],\n\t[227469065.186, 227469075.266],\n\t[228387005.186, 228387008.496],\n\t[228846905.186, 228846923.006],\n\t[230225585.186, 230225608.176],\n\t[231577265.185, 231577300.725],\n\t[232982885.185, 232982919.625],\n\t[233930525.185, 233930529.665],\n\t[234334565.185, 234334641.855],\n\t[235309205.185, 235309210.915],\n\t[235740245.184, 235740294.424],\n\t[239704565.183, 239704568.933],\n\t[242004965.183, 242004968.253],\n\t[242979665.182, 242979748.272],\n\t[244876985.182, 244876993.442],\n\t[247203665.183, 247203671.283],\n\t[248986685.183, 248986692.503],\n\t[249417845.183, 249417942.863],\n\t[250365665.183, 250365669.503],\n\t[250801865.183, 250801924.453],\n\t[252201785.184, 252201798.884],\n\t[253728965.184, 253728983.974],\n\t[255535625.185, 255535853.415],\n\t[256682225.185, 256682228.065],\n\t[257684225.185, 257684269.165],\n\t[258146525.185, 258146533.105],\n\t[258722525.186, 258722543.076],\n\t[261147905.186, 261147925.516],\n\t[262453685.186, 262453688.326],\n\t[264259265.185, 264259272.395],\n\t[267474305.184, 267474379.954],\n\t[271073765.183, 271073780.663],\n\t[272731805.183, 272731887.753],\n\t[275208605.182, 275208611.692],\n\t[276214805.182, 276214829.892],\n\t[277127525.182, 277127545.362],\n\t[277506665.182, 277506708.062],\n\t[279455045.183, 279455100.823],\n\t[279799805.183, 279799837.073],\n\t[280747565.183, 280747571.013],\n\t[282126485.183, 282126503.483],\n\t[282471245.183, 282471256.053],\n\t[286040946.185, 286040974.915],\n\t[287532306.185, 287532308.475],\n\t[289858866.186, 289858897.046],\n\t[291603966.186, 291603971.806],\n\t[292809906.186, 292809948.366],\n\t[294188586.186, 294188602.066],\n\t[295567266.185, 295567279.505],\n\t[296945946.185, 296945956.015],\n\t[297893586.185, 297893599.995],\n\t[299272206.184, 299272220.614],\n\t[300687786.184, 300687808.034],\n\t[302066526.183, 302066563.313],\n\t[303703506.183, 303703583.793],\n\t[304824006.183, 304824009.283],\n\t[305390946.183, 305390972.583],\n\t[308925306.182, 308925311.352],\n\t[309355506.182, 309355530.682],\n\t[310684866.183, 310684869.093],\n\t[312200586.183, 312200601.223],\n\t[534124756.143, 534124760.143]\n];\n\n/** The times when the Juno engine cover starts opening or finishes closing, respectively.\n *  The 600 is because the hatch takes 600 seconds to close and the number given is the start of the closing time. */\nconst junoEngineCoverOpenings = [\n\t[393471366, 393500886 + 600],\n\t[399019747, 399882847 + 600],\n\t[400569547, 400988287 + 600],\n\t[420541747, 420794047 + 600],\n\t[454490527, 454649587 + 600],\n\t[487136707, 487309087 + 600],\n\t[519804068, 521041148 + 600],\n\t[528958868, 529748408 + 600]\n];\n\nconst junoEngineBurns = [\n\t[399637867.183, 399639659.183],\n\t[400933867.182, 400935660.182],\n\t[420714067.185, 420714067.185 + 5],\n\t[454572067.185, 454572067.185 + 5],\n\t[487231267.185, 487231267.185 + 5],\n\t[520957868.184, 520959604.184]\n];\n\n/** Pointing for Juno, since its orientation doesn't work so well. It can point at an entity, 'velocity', or '-velocity'.\n *  The transition happens for the 5 minutes prior to the start time of the next event. */\nconst junoPointingKeyframes = /** @type {[number, string][]} */([\n\t[365835906, 'velocity'],\n\t[365836206, 'sun'],\n\t[371908866, 'sun'],\n\t[371909466, 'earth'],\n\t[399631646, 'earth'],\n\t[399632628, 'sun'],\n\t[399635271, 'sun'],\n\t[399636306, '-velocity'], // DSM-1\n\t[399640481, '-velocity'],\n\t[399641686, 'sun'],\n\t[399700717, 'sun'],\n\t[399641887, 'earth'],\n\t[400927646, 'earth'],\n\t[400928454, 'sun'],\n\t[400931272, 'sun'],\n\t[400932282, '-velocity'], // DSM-2\n\t[400936477, '-velocity'],\n\t[400937632, 'sun'],\n\t[401003197, 'sun'],\n\t[401009197, 'earth'],\n\t[423014467, 'earth'],\n\t[423014767, 'sun'],\n\t[436924867, 'sun'],\n\t[436925167, 'earth'],\n\t[520954868, 'earth'],\n\t[520955888, '-velocity'], // JOI\n\t[520960808, '-velocity'],\n\t[520962008, 'sun'],\n\t[521018048, 'sun'],\n\t[521025625, 'earth'] // Dynamo ori starts here\n]);\n\nconst junoSpinKeyframes = /** @type {[number, number][]} */([\n\t[394545667, 1 * Math.PI / 30], // convert from rpm to rad/sec\n\t[394545967, 2 * Math.PI / 30],\n\t[399636967, 2 * Math.PI / 30],\n\t[399637264, 5 * Math.PI / 30], // DSM-1\n\t[399637866, 5 * Math.PI / 30],\n\t[399639659, 5.5 * Math.PI / 30],\n\t[399639788, 5.5 * Math.PI / 30],\n\t[399640072, 2 * Math.PI / 30],\n\t[400932921, 2 * Math.PI / 30],\n\t[400933214, 5 * Math.PI / 30], // DSM-2\n\t[400933866, 5 * Math.PI / 30],\n\t[400935660, 5.5 * Math.PI / 30],\n\t[400935790, 5.5 * Math.PI / 30],\n\t[400936068, 2 * Math.PI / 30],\n\t[520956548, 2 * Math.PI / 30],\n\t[520956848, 5 * Math.PI / 30], // JOI\n\t[520960088, 5 * Math.PI / 30],\n\t[520960388, 2 * Math.PI / 30],\n\t[521025625, 2 * Math.PI / 30] // Dynamo ori starts here\n]);\n\nconst huygensSpinKeyframes = /** @type {[number, number][]} */([\n\t[157212064.184, 7.5 * Math.PI / 30], // convert from rpm to rad/sec\n\t[158965863.184, 7.5 * Math.PI / 30],\n\t[158966163.184, 2.6 * Math.PI / 30],\n\t[158966434.184, 0],\n\t[158966883.184, -5.6 * Math.PI / 30], // starts spinning clockwise\n\t[158967123.184, -9.7 * Math.PI / 30],\n\t[158967363.184, -7.3 * Math.PI / 30],\n\t[158968263.184, -2.8 * Math.PI / 30],\n\t[158973723.184, -1 * Math.PI / 30]\n]);\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport { SceneHelpers } from '../scene_helpers';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tobservable_universe: {\n\t\tgroups: ['stars'],\n\t\tradius: 5e23,\n\t\tsystemRadius: 5e23,\n\t\tlabel: 'Observable Universe',\n\t\tparents: [],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tentity.setCanOcclude(false);\n\t\t}\n\t},\n\tmilky_way: {\n\t\tgroups: ['stars'],\n\t\tradius: 1e18,\n\t\tsystemRadius: 1.3e+19,\n\t\tlabel: 'Milky Way',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'observable_universe']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}],\n\t\tpostCreateFunction: (entity, extraOptions) => {\n\t\t\tentity.setCanOcclude(false);\n\n\t\t\tconst fixedController = entity.getControllerByClass(Pioneer.FixedController);\n\t\t\t// Get it in the right orientation, using the galactic north and galactic center.\n\t\t\t// Galactic North Pole in J2000: 12h 51m 26.27549s, +27° 07′ 41.7043\"\n\t\t\t// Galactic Center in J2000: 7h 45m 37.19910s, −28° 56′ 10.2207\"\n\t\t\t// From Liu, Jia-Cheng & Zhu, Zi & Zhang, Hong. (2010). Reconsidering the Galactic coordinate system. Astronomy and Astrophysics. 526. 10.1051/0004-6361/201014961.\n\t\t\tconst northPole = new Pioneer.Vector3();\n\t\t\tconst northPoleRa = 192.85948120833 * Math.PI / 180;\n\t\t\tconst northPoleDec = 27.12825119444 * Math.PI / 180;\n\t\t\tnorthPole.x = Math.cos(northPoleRa) * Math.cos(northPoleDec);\n\t\t\tnorthPole.y = Math.sin(northPoleRa) * Math.cos(northPoleDec);\n\t\t\tnorthPole.z = Math.sin(northPoleDec);\n\t\t\tconst center = new Pioneer.Vector3();\n\t\t\tconst centerRa = 266.40499625 * Math.PI / 180;\n\t\t\tconst centerDec = -28.93617241667 * Math.PI / 180;\n\t\t\tcenter.x = Math.cos(centerRa) * Math.cos(centerDec);\n\t\t\tcenter.y = Math.sin(centerRa) * Math.cos(centerDec);\n\t\t\tcenter.z = Math.sin(centerDec);\n\t\t\tconst orientation = new Pioneer.Quaternion();\n\t\t\torientation.setFromAxes(center, undefined, northPole);\n\t\t\tfixedController.setOrientation(orientation);\n\n\t\t\t// Add milky way sprite, if it's in the options.\n\t\t\tif (extraOptions && extraOptions.milkyWaySprite) {\n\t\t\t\tconst sprite = entity.addComponentByClass(Pioneer.SpriteComponent);\n\t\t\t\tsprite.setTextureUrl('$STATIC_ASSETS_URL/sprites/milky_way.png');\n\t\t\t\tsprite.setSize(new Pioneer.Vector2(12e17, 12e17));\n\t\t\t\tsprite.setTransparent(true);\n\t\t\t\tsprite.setBlending('normal');\n\t\t\t\tsprite.setFadeDistance(12e15);\n\t\t\t}\n\n\t\t\t// Spin of the milky way. Later I should change it to work with particles and use the galaxy rotation curve.\n\t\t\tconst spinController = entity.addControllerByClass(Pioneer.SpinController);\n\t\t\tspinController.setAxis(new Pioneer.Vector3(-0.8676661356982597, -0.19807638974470915, 0.45598379452940485), false);\n\t\t\tspinController.setRate(-2.192686e-17);\n\t\t\tspinController.setReferenceAngle(0);\n\t\t\tspinController.setReferenceTime(0);\n\t\t}\n\t},\n\tsun: {\n\t\tgroups: ['stars'],\n\t\tradius: 695500,\n\t\tsystemRadius: 2.991957e+13,\n\t\tlabel: 'Sun',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'milky_way']\n\t\t],\n\t\tspheroid: {\n\t\t\tequatorialRadius: 695500,\n\t\t\tpolarRadius: 695500,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['colorMapEmmissive'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'sun/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: Pioneer.Vector3.Zero,\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}],\n\t\tpostCreateFunction: (entity, extraOptions) => {\n\t\t\t// Add the light source for the sun.\n\t\t\tconst lightSourceComponent = entity.addComponentByClass(Pioneer.LightSourceComponent);\n\t\t\tlightSourceComponent.setAbsoluteMagnitude(4.83);\n\n\t\t\t// Atmosphere glow when you're close up to the sun.\n\t\t\tconst sunAtmosphere = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tsunAtmosphere.setEmissivity(1.0);\n\t\t\tsunAtmosphere.setScaleHeight(2e5);\n\t\t\tsunAtmosphere.setDensity(8e-7);\n\t\t\tsunAtmosphere.setColor(new Pioneer.Color(255.0 / 255.0, 255.0 / 255.0, 64.0 / 255.0));\n\n\t\t\t// Sprite glow when you're far away from the sun.\n\t\t\tconst sunGlowSprite = entity.addComponentByClass(Pioneer.SpriteComponent);\n\t\t\tsunGlowSprite.setBillboard(true);\n\t\t\tsunGlowSprite.setTextureUrl('$STATIC_ASSETS_URL/sprites/sun_glow.png');\n\t\t\tsunGlowSprite.setSize(new Pioneer.Vector2(100, 100));\n\t\t\tsunGlowSprite.setSizeUnits('pixels');\n\t\t\tsunGlowSprite.setTransparent(true);\n\t\t\tsunGlowSprite.setColorMultiplier(new Pioneer.Color(1.0, 1.0, 0.5));\n\t\t\tsunGlowSprite.setRenderOrder(-2); // Make it render in the same order as the stars.\n\n\t\t\t// Set the position in the milky way.\n\t\t\t// Distance from sun to galactic center: 7.98 kpc.\n\t\t\t// From Malkin, Zinovy. (2012). The current best estimate of the Galactocentric distance of the Sun based on comparison of different statistical techniques.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController);\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0;\n\t\t\toe.semiMajorAxis = 246237071000000000.0;\n\t\t\toe.meanAngularMotion = -2.192686e-17; // 230 million years per orbit.\n\t\t\toe.meanAnomalyAtEpoch = Math.PI;\n\t\t\t// Use the orientation calculated from the milky way above.\n\t\t\toe.orbitOrientation.set(-0.48894750765094835, -0.4832106839985283, 0.19625375824756275, 0.6992297419646486);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\n\t\t\t// Add the stars and the galaxies, since they are sun-centric.\n\t\t\tif (extraOptions !== undefined && extraOptions.skybox === true) {\n\t\t\t\tconst skyboxComponent = entity.addComponentByClass(Pioneer.SkyboxComponent);\n\t\t\t\tskyboxComponent.setTextureUrl('$STATIC_ASSETS_URL/textures/starmap_' + (extraOptions.skyboxResolution || 2048) + '.jpg');\n\t\t\t}\n\t\t\tif (extraOptions === undefined || (extraOptions.skybox === true && extraOptions.starfield === true) || extraOptions.starfield !== false) {\n\t\t\t\tconst galaxyComponent = entity.addComponentByClass(Pioneer.StarfieldComponent);\n\t\t\t\tgalaxyComponent.setUrl('$STATIC_ASSETS_URL/stars/galaxies.0.bin');\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tconst starfieldComponent = entity.addComponentByClass(Pioneer.StarfieldComponent);\n\t\t\t\t\tstarfieldComponent.setUrl('$STATIC_ASSETS_URL/stars/stars.' + i + '.bin');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the heliosphere, if specified.\n\t\t\t// Using \"A Three-dimensional Map of the Heliosphere from IBEX\", 2021 Reisenfeld et al. as a reference.\n\t\t\tif (extraOptions !== undefined && extraOptions.heliosphere) {\n\t\t\t\tconst model = entity.addComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setUrl('$STATIC_ASSETS_URL/models/heliosphere/voyager_heliosphere.gltf');\n\t\t\t\t// Get it just the right size so Voyager 1 leaves it around 2012-08 and Voyager 2 leaves it around 2018-11.\n\t\t\t\tmodel.setScale(new Pioneer.Vector3(2.01e8, 1.9e8, 1.9e8));\n\t\t\t\tmodel.setForceLoaded(true);\n\t\t\t\t// Rotate so it's heading in the correct direction.\n\t\t\t\tconst llaNose = new Pioneer.LatLonAlt(0, -105 * Math.PI / 180, 0); // Lat/lon of nose in J2000 Ecliptic.\n\t\t\t\tconst xyzNose = new Pioneer.Vector3();\n\t\t\t\tPioneer.Geometry.getXYZFromLLAOnSphere(xyzNose, llaNose, 1);\n\t\t\t\txyzNose.rotate(SceneHelpers.getEclipJ2000ToJ2000Rotation(), xyzNose);\n\t\t\t\txyzNose.normalize(xyzNose);\n\t\t\t\tconst rotation = new Pioneer.Quaternion();\n\t\t\t\trotation.setFromVectorFromTo(\n\t\t\t\t\tnew Pioneer.Vector3(0.9937396508197329, 0.11171728072160429, 0.0008692392338424033),\n\t\t\t\t\txyzNose);\n\t\t\t\tmodel.setRotation(rotation);\n\t\t\t}\n\t\t}\n\t},\n\tmercury: {\n\t\tgroups: ['planets'],\n\t\tradius: 2439.4,\n\t\tsystemRadius: 292764,\n\t\tlabel: 'Mercury',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.6, 0.6, 0.6, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 2439.4,\n\t\t\tpolarRadius: 2439.4,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'mercury/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 4096]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mercury/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mercury/ori'\n\t\t}]\n\t},\n\tvenus: {\n\t\tgroups: ['planets'],\n\t\tradius: 6051.8,\n\t\tsystemRadius: 726216,\n\t\tlabel: 'Venus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.9, 0.80, 0.45, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 6051.8,\n\t\t\tpolarRadius: 6051.8,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'venus/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'venus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'venus/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(15.0);\n\t\t\tatmosphereComponent.setDensity(0.001);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(213.0 / 255.0, 160.0 / 255.0, 94.0 / 255.0));\n\t\t\tatmosphereComponent.setSunBrightness(0.25);\n\t\t}\n\t},\n\tearth: {\n\t\tgroups: ['planets'],\n\t\tradius: 6378.1,\n\t\tsystemRadius: 765372,\n\t\tlabel: 'Earth',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.0, 0.6, 0.8, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 6378.137,\n\t\t\tpolarRadius: 6356.752,\n\t\t\tplanetographic: true\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['normalMap', 'specularMap', 'nightMap', 'decalMap', 'nightMapEmmissive', 'shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'earth/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t},\n\t\t\t\tnormal: {\n\t\t\t\t\turl: 'earth/normal_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\turl: 'earth/specular_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t},\n\t\t\t\tnight: {\n\t\t\t\t\turl: 'earth/night_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t},\n\t\t\t\tdecal: {\n\t\t\t\t\turl: 'earth/cloud_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'earth/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'earth/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity, extraOptions) => {\n\t\t\tif (extraOptions && extraOptions.clouds === false) {\n\t\t\t\tconst spheroidLODComponent = entity.getComponentByClass(Pioneer.SpheroidLODComponent);\n\t\t\t\tspheroidLODComponent.setTexture('decal', '');\n\t\t\t}\n\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(8.0);\n\t\t\tatmosphereComponent.setDensity(0.0015);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(1.5 * 143.0 / 255.0, 1.5 * 178.0 / 255.0, 1.5 * 255.0 / 255.0));\n\t\t\tatmosphereComponent.setSunBrightness(2.0);\n\t\t\tatmosphereComponent.setSunsetColor(new Pioneer.Color(1, 0.5, 0));\n\t\t\tatmosphereComponent.setSunsetIntensity(1.2);\n\t\t}\n\t},\n\tmars: {\n\t\tgroups: ['planets'],\n\t\tradius: 3396.2,\n\t\tsystemRadius: 46922,\n\t\tlabel: 'Mars',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.89, 0.51, 0.35, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 3396.19,\n\t\t\tpolarRadius: 3376.2,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'mars/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 4096]\n\t\t\t\t}\n\t\t\t\t// normal: 'mars/normal_$SIZE_$FACE.png',\n\t\t\t},\n\t\t\tshadowEntities: ['phobos', 'deimos']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mars/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mars/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(10.8);\n\t\t\tatmosphereComponent.setDensity(0.001);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(225.0 / 255.0, 178.0 / 255.0, 112.0 / 255.0));\n\t\t\tatmosphereComponent.setSunBrightness(0.8);\n\t\t\tatmosphereComponent.setSunsetColor(new Pioneer.Color(10.0 / 255.0, 75.0 / 255.0, 140.0 / 255.0));\n\t\t\tatmosphereComponent.setSunsetIntensity(1.0);\n\t\t}\n\t},\n\tjupiter: {\n\t\tgroups: ['planets'],\n\t\tradius: 71492,\n\t\tsystemRadius: 3782501,\n\t\tlabel: 'Jupiter',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.95, 0.71, 0.64, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 71492,\n\t\t\tpolarRadius: 66854,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'jupiter/color_$SIZE_$FACE.jpg',\n\t\t\t\t\tsizes: [16, 512, 4096]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['io', 'europa', 'ganymede', 'callisto']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jupiter/ori'\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY],\n\t\t\tupdate: (entity) => {\n\t\t\t\tif (entity.getOrientation().isNaN()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\tIn order to update the spots, you can use these helpful functions.\n\n\t\t\t\t// Get the camera the view from earth.\n\t\t\t\te = () => { c = app._pioneer.getViewport(0).getCamera(); p = new Pioneer.Vector3(); p.sub(app._scene.get('earth').getPosition(), app._scene.get('jupiter').getPosition()); p.mult(p, .99); c.getEntity().setPosition(p); c.setFieldOfView(0.0008); };\n\n\t\t\t\t// The code moves time backward by the light-time distance between earth and jupiter.\n\t\t\t\t// So if a photo was taken at time T, then the will move to T - ltej.\n\t\t\t\t// VERY useful for getting photos exact, and works perfectly for photos as far back as 1963 (and likely further).\n\t\t\t\t// It moves time backward by the light-time distance between earth and jupiter.\n\t\t\t\t// So if a photo was taken at time T, then the will move to T - ltej.\n\t\t\t\t// VERY useful for getting photos exact, and works perfectly for photos as far back as 1963 (and likely further).\n\t\t\t\tt = () => { p = new Pioneer.Vector3(); p.sub(app._scene.get('earth').getPosition(), app._scene.get('jupiter').getPosition()); app._pioneer.setTime(app._pioneer.getTime() - p.magnitude() / 299792.458); console.log(app._pioneer.getTime()); };\n\n\t\t\t\t// Rotate jupiter by the given angle to match.\n\t\t\t\tr = (angle) => { s = app._scene.get('jupiter', 'spheroidLOD'); s.setLongitudeRotation(Pioneer.MathUtils.degToRad(angle)); };\n\n\t\t\t\tMake sure to turn off the coverage controller below.\n\t\t\t\tFind a photo from earth of Jupiter (https://www.missionjuno.swri.edu/junocam/planning). Go to the time when the photo was taken.\n\t\t\t\tRun e();\n\t\t\t\tRun t();\n\t\t\t\tNow you'll be at the right time and position from earth to see the photo.\n\t\t\t\tRun r(angle) until the spot matches the right location.\n\t\t\t\tAdd this angle to the Jupiter GRS spreadsheet column F. Do this for a number of photos.\n\t\t\t\tAlso look up http://jupos.privat.t-online.de/index.htm for numbers to add to array above.\n\t\t\t\t*/\n\n\t\t\t\t// Get the right index for the current time.\n\t\t\t\tconst time = entity.getScene().getEngine().getTime();\n\t\t\t\tconst rotations = jupiterRotationData.rotations;\n\t\t\t\tconst currentDriftRate = (rotations[rotations.length - 1][1] - rotations[rotations.length - 2][1]) / (rotations[rotations.length - 1][0] - rotations[rotations.length - 2][0]);\n\t\t\t\tlet rate = currentDriftRate; // The rate of drift in degrees per second from the index point. It is set to the current rate of jupiter's rotation.\n\t\t\t\tlet index = jupiterRotationData.hintIndex;\n\t\t\t\tif (time < rotations[index][0] || (index < rotations.length - 1 && rotations[index + 1][0] <= time)) {\n\t\t\t\t\tif (time >= rotations[rotations.length - 1][0]) { // After the last point.\n\t\t\t\t\t\tindex = rotations.length - 1;\n\t\t\t\t\t\t// The rate just stays the current rate.\n\t\t\t\t\t}\n\t\t\t\t\telse if (time < rotations[0][0]) { // Before the first point.\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\trate = 0; // No rate, since not enough data.\n\t\t\t\t\t}\n\t\t\t\t\telse { // Somewhere in between points.\n\t\t\t\t\t\tfor (let i = rotations.length - 2; i >= 0; i--) {\n\t\t\t\t\t\t\tif (rotations[i][0] <= time && time < rotations[i + 1][0]) {\n\t\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t\t\trate = (rotations[i + 1][1] - rotations[i][1]) / (rotations[i + 1][0] - rotations[i][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (index < rotations.length - 1) {\n\t\t\t\t\trate = (rotations[index + 1][1] - rotations[index][1]) / (rotations[index + 1][0] - rotations[index][0]);\n\t\t\t\t}\n\t\t\t\tjupiterRotationData.hintIndex = index;\n\t\t\t\t// Get the angle in system II.\n\t\t\t\tconst angle = rotations[index][1] + (time - rotations[index][0]) * rate;\n\t\t\t\t// Do the calculation from System II to System III and taking into account the texture offset.\n\t\t\t\tconst actualAngle = Pioneer.MathUtils.wrap(jupiterRotationData.referenceAngleInSystemIII\n\t\t\t\t\t- (angle + jupiterRotationData.textureAngleOffset - jupiterRotationData.referenceAngleInSystemII)\n\t\t\t\t\t+ (time - jupiterRotationData.referenceTime) * jupiterRotationData.offsetFactor, 0, 360);\n\t\t\t\t// Apply the rotation.\n\t\t\t\tconst spheroidLOD = entity.getComponentByClass(Pioneer.SpheroidLODComponent);\n\t\t\t\tif (spheroidLOD !== null) {\n\t\t\t\t\tspheroidLOD.setLongitudeRotation(Pioneer.MathUtils.degToRad(actualAngle));\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(200.0);\n\t\t\tatmosphereComponent.setDensity(5.0e-5);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(234.0 / 255.0, 202.0 / 255.0, 170.0 / 255.0));\n\t\t\tatmosphereComponent.setSunBrightness(0.25);\n\t\t}\n\t},\n\tsaturn: {\n\t\tgroups: ['planets'],\n\t\tradius: 60268,\n\t\tsystemRadius: 7184413,\n\t\tlabel: 'Saturn',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 60268,\n\t\t\tpolarRadius: 54364,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities', 'shadowRings'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'saturn/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['iapetus', 'dione', 'rhea', 'tethys', 'titan']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'saturn/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'saturn/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst ringsComponent = entity.addComponentByClass(Pioneer.RingsComponent);\n\t\t\tringsComponent.setInnerRadius(74270.580913);\n\t\t\tringsComponent.setOuterRadius(140478.924731);\n\t\t\tringsComponent.setTopTextureUrl('$STATIC_ASSETS_URL/sprites/saturn_rings_top.png');\n\t\t\tringsComponent.setBottomTextureUrl('$STATIC_ASSETS_URL/sprites/saturn_rings_bottom.png');\n\t\t\tringsComponent.setFadeDistance(250);\n\t\t\tringsComponent.setShadowEntities(['iapetus', 'dione', 'rhea', 'tethys', 'titan']);\n\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(200.0);\n\t\t\tatmosphereComponent.setDensity(5.0e-5);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(234.0 / 255.0, 202.0 / 255.0, 151.0 / 255.0));\n\t\t}\n\t},\n\turanus: {\n\t\tgroups: ['planets'],\n\t\tradius: 25559,\n\t\tsystemRadius: 1164893,\n\t\tlabel: 'Uranus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 25559,\n\t\t\tpolarRadius: 24973,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'uranus/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 256]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['titania', 'oberon', 'umbriel', 'ariel', 'miranda']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'uranus/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'uranus/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst ringsComponent = entity.addComponentByClass(Pioneer.RingsComponent);\n\t\t\tringsComponent.setInnerRadius(26840);\n\t\t\tringsComponent.setOuterRadius(103000);\n\t\t\tringsComponent.setTopTextureUrl('$STATIC_ASSETS_URL/sprites/uranus_rings.png');\n\t\t\tringsComponent.setBottomTextureUrl('$STATIC_ASSETS_URL/sprites/uranus_rings.png');\n\t\t\tringsComponent.setFadeDistance(250);\n\t\t\tringsComponent.setShadowEntities(['miranda', 'ariel', 'umbriel', 'titania', 'oberon']);\n\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(200.0);\n\t\t\tatmosphereComponent.setDensity(5.0e-5);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(147.0 / 255.0, 183.0 / 255.0, 201.0 / 255.0));\n\t\t\tatmosphereComponent.setSunsetColor(new Pioneer.Color(164.0 / 255.0, 168.0 / 255.0, 102.0 / 255.0));\n\t\t\tatmosphereComponent.setSunsetIntensity(1.0);\n\t\t}\n\t},\n\tneptune: {\n\t\tgroups: ['planets'],\n\t\tradius: 24764,\n\t\tsystemRadius: 43213894,\n\t\tlabel: 'Neptune',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.48, 0.69, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 24764,\n\t\t\tpolarRadius: 24341,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'neptune/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 256]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['triton', 'proteus', 'despina', 'galatea', 'larissa']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'neptune/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'neptune/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst ringsComponent = entity.addComponentByClass(Pioneer.RingsComponent);\n\t\t\tringsComponent.setInnerRadius(40900);\n\t\t\tringsComponent.setOuterRadius(62964);\n\t\t\tringsComponent.setTopTextureUrl('$STATIC_ASSETS_URL/sprites/neptune_rings.png');\n\t\t\tringsComponent.setBottomTextureUrl('$STATIC_ASSETS_URL/sprites/neptune_rings.png');\n\t\t\tringsComponent.setFadeDistance(250);\n\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(200.0);\n\t\t\tatmosphereComponent.setDensity(5.0e-5);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(138.0 / 255.0, 160.0 / 255.0, 255.0 / 255.0));\n\t\t}\n\t}\n});\n\nconst jupiterRotationData = {\n\thintIndex: 0, // A special variable to keep track of the current index in the rotations array below.\n\ttextureAngleOffset: -60.38, // Get the red spot at 0 degrees longitude in System III.\n\treferenceTime: 617098056, // A known good photo from JunoCam planning on 2019-07-22T20:44\n\treferenceAngleInSystemII: 313.47, // The angle in System II for the photo.\n\treferenceAngleInSystemIII: 305, // The angle in System III for that photo.\n\toffsetFactor: -0.000003074, // The scaling factor that moves from System II to System III.\n\trotations: [ // Data in System II from charts at http://jupos.org.\n\t\t[-1136116758, 15], // 1964-01-01\n\t\t[-1037534358, 28], // 1967-02-15\n\t\t[-938951958, 22], // 1970-04-01\n\t\t[-867931156, 0], // 1972-07-01\n\t\t[-812721554, 12], // 1974-04-01\n\t\t[-744292752, 47], // 1976-06-01\n\t\t[-639143949, 62], // 1979-10-01\n\t\t[-533822346, 48], // 1983-02-01\n\t\t[-483883145, 27], // 1984-09-01\n\t\t[-391953544, 15], // 1987-08-01\n\t\t[102427264, 85], // 2003-04-01\n\t\t[315576066, 138], // 2010-01-01\n\t\t[615211269, 312], // 2019-06-30\n\t\t[660052869, 347] // 2020-11-30\n\t]\n};\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport { EntityUtils } from './entity_utils';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tdione: {\n\t\tgroups: ['saturn', 'moons', 'inner', 'major'],\n\t\tradius: 561.7,\n\t\tlabel: 'Dione',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 561.7,\n\t\t\tpolarRadius: 561.7,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'dione/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 2048]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'dione/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'dione/ori'\n\t\t}]\n\t},\n\tenceladus: {\n\t\tgroups: ['saturn', 'moons', 'inner', 'major'],\n\t\tradius: 252.1,\n\t\tlabel: 'Enceladus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 252.1,\n\t\t\tpolarRadius: 252.1,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'enceladus/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 2048]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'enceladus/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'enceladus/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// A\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-25.20 * 0.8, -69.23 * 0.8, -240.99 * 0.8], [-0.0999, -0.2747, -0.9563]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-61.73 * 0.8, -24.61 * 0.8, -243.08 * 0.8], [-0.2449, -0.0976, -0.9646]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-35.82 * 0.8, -46.87 * 0.8, -245.00 * 0.8], [-0.1421, -0.1859, -0.9722]);\n\n\t\t\t// B\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [30.37 * 0.7, -17.54 * 0.7, -249.55 * 0.7], [0.1205, -0.0696, -0.9902]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [0.00 * 0.7, 2.20 * 0.7, -251.99 * 0.7], [0, 0.0087, -0.9999]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-30.94 * 0.7, 30.94 * 0.7, -248.17 * 0.7], [-0.1227, 0.1227, -0.9848]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [45.99 * 0.7, -34.55 * 0.7, -245.35 * 0.7], [0.1824, -0.1371, -0.9736]);\n\n\t\t\t// C\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-51.91 * 0.9, 0.68 * 0.9, -246.59 * 0.9], [-0.2059, 0.0026, -0.9785]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-31.81 * 0.9, -13.36 * 0.9, -249.63 * 0.9], [-0.1262, -0.0530, -0.9905]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-5.49 * 0.9, -29.77 * 0.9, -250.18 * 0.9], [-0.0217, -0.1181, -0.9927]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [16.54 * 0.9, -47.1 * 0.9, -247.01 * 0.9], [0.0656, -0.1869, -0.9801]);\n\n\t\t\t// D\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [-16.47 * 0.8, 60.14 * 0.8, -244.16 * 0.8], [-0.0653, 0.2386, -0.9689]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [51.52 * 0.8, 23.97 * 0.8, -245.51 * 0.8], [0.2044, 0.0951, -0.9742]);\n\t\t\tEntityUtils.addGeyser(entity, 100, 0.1, 20, 0.002, 4, [28.13 * 0.8, 33.52 * 0.8, -248.17 * 0.8], [0.1116, 0.1330, -0.9848]);\n\t\t}\n\t},\n\thyperion: {\n\t\tgroups: ['saturn', 'moons', 'outer', 'major'],\n\t\tradius: 135.0,\n\t\tlabel: 'Hyperion',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/hyperion/hyperion.gltf',\n\t\t\tscale: [1, 1, 1]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hyperion/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tiapetus: {\n\t\tgroups: ['saturn', 'moons', 'outer', 'major'],\n\t\tradius: 735.6,\n\t\tlabel: 'Iapetus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 735.6,\n\t\t\tpolarRadius: 735.6,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'iapetus/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 2048]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'iapetus/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'iapetus/ori'\n\t\t}]\n\t},\n\tmimas: {\n\t\tgroups: ['saturn', 'moons', 'inner', 'major'],\n\t\tradius: 198.3,\n\t\tlabel: 'Mimas',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/mimas/mimas.gltf',\n\t\t\tscale: [1, 1, 1]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mimas/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mimas/ori'\n\t\t}]\n\t},\n\trhea: {\n\t\tgroups: ['saturn', 'moons', 'outer', 'major'],\n\t\tradius: 764.3,\n\t\tlabel: 'Rhea',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 764.3,\n\t\t\tpolarRadius: 764.3,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'rhea/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 2048]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'rhea/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'rhea/ori'\n\t\t}]\n\t},\n\ttethys: {\n\t\tgroups: ['saturn', 'moons', 'inner', 'major'],\n\t\tradius: 538.4,\n\t\tlabel: 'Tethys',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 538.4,\n\t\t\tpolarRadius: 527.5,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'tethys/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 2048]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'tethys/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'tethys/ori'\n\t\t}]\n\t},\n\ttitan: {\n\t\tgroups: ['saturn', 'moons', 'outer', 'major'],\n\t\tradius: 2575.0,\n\t\tlabel: 'Titan',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 2575.0,\n\t\t\tpolarRadius: 2575.0,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'titan/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512, 1024]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'titan/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'titan/ori'\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst atmosphereComponent = entity.addComponentByClass(Pioneer.AtmosphereComponent);\n\t\t\tatmosphereComponent.setScaleHeight(75.0);\n\t\t\tatmosphereComponent.setDensity(0.0005);\n\t\t\tatmosphereComponent.setColor(new Pioneer.Color(179.0 / 255.0, 145.0 / 255.0, 53.0 / 255.0));\n\t\t\tatmosphereComponent.setSunsetColor(new Pioneer.Color(0.0 / 255.0, 71.0 / 255.0, 204.0 / 255.0));\n\t\t\tatmosphereComponent.setSunsetIntensity(0.5);\n\t\t}\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\taegaeon: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'ring moonlet'],\n\t\tradius: 0.12,\n\t\tlabel: 'Aegaeon',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.12, 0.12, 0.12],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'aegaeon/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\taegir: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Aegir',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'aegir/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\talbiorix: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 16.0,\n\t\tlabel: 'Albiorix',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [16, 16, 16],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'albiorix/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\talvaldi: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3,\n\t\tlabel: 'Alvaldi',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'alvaldi/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tangrboda: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'Angrboda',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'angrboda/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tanthe: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'alkyonides'],\n\t\tradius: 0.9,\n\t\tlabel: 'Anthe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [0.9, 0.9, 0.9],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'anthe/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tatlas: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'ring shepherd'],\n\t\tradius: 15.1,\n\t\tlabel: 'Atlas',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [15.1, 15.1, 15.1],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'atlas/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'atlas/ori'\n\t\t}]\n\t},\n\tbebhionn: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 3.0,\n\t\tlabel: 'Bebhionn',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'bebhionn/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tbeli: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'Beli',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'beli/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tbergelmir: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Bergelmir',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'bergelmir/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tbestla: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.5,\n\t\tlabel: 'Bestla',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3.5, 3.5, 3.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'bestla/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcalypso: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'trojan'],\n\t\tradius: 10.7,\n\t\tlabel: 'Calypso',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [10.7, 10.7, 10.7],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'calypso/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'calypso/ori'\n\t\t}]\n\t},\n\tdaphnis: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'ring shepherd'],\n\t\tradius: 3.8,\n\t\tlabel: 'Daphnis',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3.8, 3.8, 3.8],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'daphnis/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\teggther: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3,\n\t\tlabel: 'Eggther',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'eggther/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tepimetheus: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'co-orbital'],\n\t\tradius: 58.1,\n\t\tlabel: 'Epimetheus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [58.1, 58.1, 58.1],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'epimetheus/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'epimetheus/ori'\n\t\t}]\n\t},\n\terriapus: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 5.0,\n\t\tlabel: 'Erriapus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [5, 5, 5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'erriapus/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tfarbauti: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.5,\n\t\tlabel: 'Farbauti',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'farbauti/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tfenrir: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'Fenrir',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2, 2, 2],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'fenrir/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tfornjot: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Fornjot',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'fornjot/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tgeirrod: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Geirrod',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'geirrod/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tgerd: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Gerd',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'gerd/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tgreip: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Greip',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'greip/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tgridr: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Gridr',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'gridr/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tgunnlod: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Gunnlod',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'gunnlod/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thati: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Hati',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hati/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\thelene: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'trojan'],\n\t\tradius: 17.6,\n\t\tlabel: 'Helene',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [17.6, 17.6, 17.6],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'helene/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'helene/ori'\n\t\t}]\n\t},\n\thyrrokkin: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Hyrrokkin',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'hyrrokkin/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tijiraq: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 6.0,\n\t\tlabel: 'Ijiraq',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [6, 6, 6],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ijiraq/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjanus: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'co-orbital'],\n\t\tradius: 89.5,\n\t\tlabel: 'Janus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [89.5, 89.5, 89.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'janus/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'janus/ori'\n\t\t}]\n\t},\n\tjarnsaxa: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Jarnsaxa',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'jarnsaxa/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkari: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Kari',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kari/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tkiviuq: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 8.0,\n\t\tlabel: 'Kiviuq',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [8, 8, 8],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'kiviuq/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tloge: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Loge',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'loge/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tmethone: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'alkyonides'],\n\t\tradius: 1.6,\n\t\tlabel: 'Methone',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.6, 1.6, 1.6],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'methone/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tmundilfari: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.5,\n\t\tlabel: 'Mundilfari',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [3.5, 3.5, 3.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mundilfari/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tnarvi: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.5,\n\t\tlabel: 'Narvi',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3.5, 3.5, 3.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'narvi/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpaaliaq: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 11.0,\n\t\tlabel: 'Paaliaq',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [11, 11, 11],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'paaliaq/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpallene: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'alkyonides'],\n\t\tradius: 2.5,\n\t\tlabel: 'Pallene',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pallene/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpan: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'ring shepherd'],\n\t\tradius: 14.1,\n\t\tlabel: 'Pan',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [14.1, 14.1, 14.1],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pan/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pan/ori'\n\t\t}]\n\t},\n\tpandora: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'ring shepherd'],\n\t\tradius: 40.7,\n\t\tlabel: 'Pandora',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [40.7, 40.7, 40.7],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pandora/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'pandora/ori'\n\t\t}]\n\t},\n\tphoebe: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 106.5,\n\t\tlabel: 'Phoebe',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/phoebe/phoebe.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'phoebe/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'phoebe/ori'\n\t\t}]\n\t},\n\tpolydeuces: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'trojan'],\n\t\tradius: 1.3,\n\t\tlabel: 'Polydeuces',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.3, 1.3, 1.3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'polydeuces/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tprometheus: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'ring shepherd'],\n\t\tradius: 43.1,\n\t\tlabel: 'Prometheus',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [43.1, 43.1, 43.1],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'prometheus/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'prometheus/ori'\n\t\t}]\n\t},\n\ts_2004_s_7: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3,\n\t\tlabel: 'S/2004 S 7',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_7/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_12: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.5,\n\t\tlabel: 'S/2004 S 12',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_12/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_13: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3,\n\t\tlabel: 'S/2004 S 13',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_13/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_17: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'S/2004 S 17',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_17/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_21: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 21',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_21/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_24: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 24',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_24/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_28: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'S/2004 S 28',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_28/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_31: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 2,\n\t\tlabel: 'S/2004 S 31',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_31/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_36: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 36',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_36/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_37: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'S/2004 S 37',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_37/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_39: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 39',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_39/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_1: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.5,\n\t\tlabel: 'S/2006 S 1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_1/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_3: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3,\n\t\tlabel: 'S/2006 S 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_3/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_2: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3,\n\t\tlabel: 'S/2007 S 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_2/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_3: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.5,\n\t\tlabel: 'S/2007 S 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_3/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2009_s_1: {\n\t\tgroups: ['saturn', 'moons', 'propeller moonlet'],\n\t\tradius: 0.150,\n\t\tlabel: 'S/2009 S 1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 0.150,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController, undefined, entity.getControllerByClass(Pioneer.FixedController));\n\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\toe.epoch = 0;\n\t\t\toe.eccentricity = 0;\n\t\t\toe.semiMajorAxis = 1.17e5;\n\t\t\toe.meanAngularMotion = 1.5472777e-4;\n\t\t\toe.meanAnomalyAtEpoch = -1.5;\n\t\t\toe.orbitOrientation.set(-0.9397445462795919, 0.02005900203250964, -0.052689008288728606, -0.33719681579275607);\n\t\t\toeController.addOrbitalElements(-1e100, oe);\n\t\t\toeController.addOrbitalElements(+1e100, oe);\n\t\t}\n\t},\n\ts_2019_s_1: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 3,\n\t\tlabel: 'S/2019 S 1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 3,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_1/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsaturn_lviii: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Saturn LVIII',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'saturn_lviii/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsaturn_lx: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 2,\n\t\tlabel: 'Saturn LX',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'saturn_lx/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsaturn_lxiv: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'Saturn LXIV',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 1.5,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'saturn_lxiv/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsiarnaq: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 20.0,\n\t\tlabel: 'Siarnaq',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [20, 20, 20],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'siarnaq/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tskathi: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 4.0,\n\t\tlabel: 'Skathi',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [4, 4, 4],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'skathi/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tskoll: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Skoll',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'skoll/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tskrymir: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Skrymir',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'skrymir/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsurtur: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.0,\n\t\tlabel: 'Surtur',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'surtur/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsuttungr: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.5,\n\t\tlabel: 'Suttungr',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [3.5, 3.5, 3.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'suttungr/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ttarqeq: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 3.0,\n\t\tlabel: 'Tarqeq',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3, 3, 3],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'tarqeq/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ttarvos: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 7.5,\n\t\tlabel: 'Tarvos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [7.5, 7.5, 7.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'tarvos/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ttelesto: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'trojan'],\n\t\tradius: 12.4,\n\t\tlabel: 'Telesto',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [12.4, 12.4, 12.4],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'telesto/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'telesto/ori'\n\t\t}]\n\t},\n\tthiazzi: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2,\n\t\tlabel: 'Thiazzi',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: 2,\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thiazzi/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tthrymr: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 3.5,\n\t\tlabel: 'Thrymr',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [3.5, 3.5, 3.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'thrymr/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tymir: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 9.0,\n\t\tlabel: 'Ymir',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [9, 9, 9],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ymir/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_40: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 40',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 66061440,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_40/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_41: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 41',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 79022304,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_41/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_42: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 42',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 79998624,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_42/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_43: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 43',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 84678912,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_43/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_44: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.5,\n\t\tlabel: 'S/2004 S 44',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 88660224,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_44/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_45: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 45',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 89743680,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_45/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_46: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 46',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 95694912,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_46/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_47: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 47',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 65879136,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_47/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_48: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 48',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 107343360,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_48/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_49: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 49',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 109231200,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_49/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_50: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 50',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 108902016,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_50/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_51: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 51',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 131278752,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_51/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_52: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2004 S 52',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 141175872,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_52/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2004_s_53: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2004 S 53',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 115986816,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2004_s_53/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2005_s_4: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 2.5,\n\t\tlabel: 'S/2005 S 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 38899008,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2005_s_4/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2005_s_5: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2005 S 5',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 101763648,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2005_s_5/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_10: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2006 S 10',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 84943296,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_10/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_11: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2006 S 11',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 90052992,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_11/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_12: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2006 S 12',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 89428320,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_12/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_13: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2006 S 13',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 91638432,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_13/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_14: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2006 S 14',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 99591552,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_14/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_15: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2006 S 15',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 104886144,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_15/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_16: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2006 S 16',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 104329728,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_16/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_17: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2006 S 17',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 109259712,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_17/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_18: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2006 S 18',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 112181760,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_18/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_19: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2006 S 19',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 120038112,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_19/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_20: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.5,\n\t\tlabel: 'S/2006 S 20',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 49012128,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.5, 2.5, 2.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_20/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2006_s_9: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2006 S 9',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 55977696,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2006_s_9/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_5: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2007 S 5',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 64530432,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_5/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_6: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2007 S 6',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 82036800,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_6/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_7: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2007 S 7',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 65170656,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_7/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_8: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2007 S 8',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 72308160,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_8/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2007_s_9: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2007 S 9',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 93145248,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2007_s_9/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_10: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 10',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 97030656,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_10/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_11: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 11',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 96336000,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_11/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_12: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 12',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 98396640,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_12/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_13: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 13',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 98921088,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_13/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_14: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 14',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 77167296,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_14/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_15: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 15',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 100357056,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_15/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_16: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 16',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 115877088,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_16/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_17: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 17',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 111576096,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_17/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_18: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 18',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 114657984,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_18/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_19: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 19',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 113879520,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_19/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_2: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 69104448,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_2/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_20: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 20',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 118838880,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_20/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_21: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 21',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 141378048,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_21/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_3: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 72380736,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_3/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_4: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 78128064,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_4/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_5: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2019 S 5',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 85568832,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_5/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_6: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 6',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 79202880,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_6/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_7: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 7',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 93337056,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_7/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_8: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 8',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 94061952,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_8/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2019_s_9: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2019 S 9',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 94444704,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2019_s_9/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_1: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2020 S 1',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 38975040,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_1/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_10: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 10',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 131951808,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_10/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_2: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 2',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 77552640,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_2/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_3: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 3',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 78450336,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_3/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_4: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'gallic'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 4',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 80085888,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_4/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_5: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'inuit'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 5',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 80687232,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_5/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_6: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 6',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 100989504,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_6/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_7: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 7',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 74450880,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_7/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_8: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 1.5,\n\t\tlabel: 'S/2020 S 8',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 106109568,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [1.5, 1.5, 1.5],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_8/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ts_2020_s_9: {\n\t\tgroups: ['saturn', 'moons', 'minor', 'norse'],\n\t\tradius: 2.0,\n\t\tlabel: 'S/2020 S 9',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 132621408,\n\t\t\tcolor: [0.72, 0.65, 0.52, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [2.0, 2.0, 2.0],\n\t\t\tshadowEntities: ['saturn']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 's_2020_s_9/saturn/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport { Animation } from '../animation';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_dart: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '65803_didymos', 'dimorphos', 'spacecraft'],\n\t\tocclusionRadius: 0.0012,\n\t\textentsRadius: 0.00625,\n\t\tlabel: 'DART',\n\t\tparents: [\n\t\t\t[691007069, 'earth'],\n\t\t\t[691418893, 'sun'],\n\t\t\t[717454117, '65803_didymos']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_dart/dart.gltf',\n\t\t\tshadowEntities: ['earth']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dart/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dart/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dart/65803_didymos/pos'\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// The current spice misses Dimorphos, so we cut the spice short and keyframe the rest to make it hit.\n\t\t\t\tconst keyframeController = entity.addControllerByClass(Pioneer.KeyframeController);\n\t\t\t\tkeyframeController.addPositionKeyframe(717503237, // Forced end of spice.\n\t\t\t\t\tnew Pioneer.Vector3(-10320.163052194115, 13421.106828492655, 5349.381737812169));\n\t\t\t\tkeyframeController.addPositionKeyframe(717503237 + 2890.2383179924736, // Dimorphos impact\n\t\t\t\t\tnew Pioneer.Vector3(-0.9047084058613565, -0.7147384471771195, -0.30125475602973617));\n\t\t\t\treturn keyframeController;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_dart',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tcoverage: [Number.NEGATIVE_INFINITY, 717454117]\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'dimorphos',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tcoverage: [717454117, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_dawn: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', 'dwarf planet spacecraft', '4_vesta', '1_ceres', 'spacecraft'],\n\t\tocclusionRadius: 0.000885,\n\t\textentsRadius: 0.00985,\n\t\tlabel: 'Dawn',\n\t\tparents: [\n\t\t\t[244168849.8323595, 'earth'],\n\t\t\t[244461608, 'sun'],\n\t\t\t[288169447, 'mars'],\n\t\t\t[288210177, 'sun'],\n\t\t\t[363182466, '4_vesta'],\n\t\t\t[400075267, 'sun'],\n\t\t\t[476712067, '1_ceres'],\n\t\t\t[594302469.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 659889.75\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_dawn/model.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/vesta/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/ceres/orb'\n\t\t}, {\n\t\t\t// Beginning of launch has bad spice, so we supplement with fixed.\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.9999478154504517, 0.008904517167862874, 0.004868284692665544, -0.0011729254143642916),\n\t\t\tcoverage: [244168849.8323595, 244171353.18400002]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_dawn/ori'\n\t\t}]\n\t},\n\tsc_deep_impact: {\n\t\tgroups: ['small body spacecraft', 'comet spacecraft', '9p_tempel_1', '103p_hartley_2', 'spacecraft'],\n\t\tocclusionRadius: 0.001650,\n\t\textentsRadius: 0.00300,\n\t\tlabel: 'Deep Impact',\n\t\tparents: [\n\t\t\t[158829812.068274, 'earth'],\n\t\t\t[159287744, 'sun'],\n\t\t\t[173560752, '9p_tempel_1'],\n\t\t\t[173923158, 'sun'],\n\t\t\t[251798121, 'earth'],\n\t\t\t[253531474, 'sun'],\n\t\t\t[282984399, 'earth'],\n\t\t\t[285405903, 'sun'],\n\t\t\t[330384030, 'earth'],\n\t\t\t[331534813, 'sun'],\n\t\t\t[342017751, '103p_hartley_2'],\n\t\t\t[342368983, 'sun'],\n\t\t\t[429192067, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 47421459.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[362406, 173560752, 173923158], // 9/P Tempel flyby\n\t\t\t\t[1733353, 251798121, 253531474], // Earth flyby 1\n\t\t\t\t[2421504, 282984399, 285405903], // Earth blyby 2\n\t\t\t\t[1150783, 330384030, 331534813], // Earth flyby 3\n\t\t\t\t[351232, 342017751, 342368983] // 103/P Hartley flyby\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_deep_impact/deep_impact_wo_impactor.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/9p_tempel_1/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/earth/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/earth/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/earth/flyby3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/103p_hartley_2/pos'\n\t\t}, {\n\t\t\t// Backup for when quat dynamo doesn't cover.\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact/quat'\n\t\t}]\n\t},\n\tsc_deep_impact_impactor: {\n\t\tgroups: ['small body spacecraft', 'comet spacecraft', '9p_tempel_1', 'sc_deep_impact', 'spacecraft'],\n\t\tocclusionRadius: 0.001,\n\t\textentsRadius: 0.00100,\n\t\tlabel: 'Deep Impact Impactor',\n\t\tparents: [\n\t\t\t[158829812.068274, 'sc_deep_impact'],\n\t\t\t[173642464.18400002, '9p_tempel_1'],\n\t\t\t[173727938.18158135, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 27830.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_deep_impact_impactor/deep_impact_impactor.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: -90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// There are spice kernels for the impactor, but they don't release or impact at the right locations.\n\t\t\t\t//   So we use a keyframe controller here.\n\t\t\t\tconst keyframeController = entity.addControllerByClass(Pioneer.KeyframeController);\n\t\t\t\tkeyframeController.addPositionKeyframe(173642464.18400002, // Release from Deep Impact\n\t\t\t\t\tnew Pioneer.Vector3(-0.000713, -0.000055, 0),\n\t\t\t\t\t'sc_deep_impact', undefined,\n\t\t\t\t\t'sc_deep_impact');\n\t\t\t\tkeyframeController.addPositionKeyframe(173656621.40411958, // Push away from Deep Impact\n\t\t\t\t\tnew Pioneer.Vector3(-123095.24746842826, -48294.70341251187, 61743.99881253781),\n\t\t\t\t\t'sc_deep_impact', 173642464.18400002);\n\t\t\t\tkeyframeController.addPositionKeyframe(173727938.18158135, // Impact\n\t\t\t\t\tnew Pioneer.Vector3(1.580046751199936, 3.178179950746365, -0.628457454223176));\n\t\t\t\treturn keyframeController;\n\t\t\t}\n\t\t}, {\n\t\t\t// Start it off with the right direction.\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(-0.000713, -0.000055, 0),\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\trelativeToEntity: 'sc_deep_impact',\n\t\t\tcoverage: [158829812.068274, 173642464.18400002]\n\t\t}, {\n\t\t\t// The quat dynamo doesn't quite reach the impact (short 10 seconds) so fix the orientation as a backup.\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.9060465048532422, 0.3173702681972099, 0.2649483984949708, 0.09032269948692226),\n\t\t\tcoverage: [173642464.18400002, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_impact_impactor/quat',\n\t\t\tcoverage: [173642464.18400002, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_deep_impact_impactor_impact_site: {\n\t\tgroups: ['small body sites', 'comet sites', '9p_tempel_1', 'sc_deep_impact', 'sc_deep_impact_impactor', 'sites'],\n\t\tradius: 0.001,\n\t\tlabel: 'Deep Impact Impactor Impact Site',\n\t\tparents: [\n\t\t\t[173727938.18158135, '9p_tempel_1']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(3.1153282512332603, -1.2860729555237982, -1.277920399403075),\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\trelativeToEntity: '9p_tempel_1',\n\t\t\tcoverage: [173727938.18158135, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_deep_space_1: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '9969_braille', 'spacecraft'],\n\t\tocclusionRadius: 0.00125,\n\t\textentsRadius: 0.005000,\n\t\tlabel: 'Deep Space 1',\n\t\tparents: [\n\t\t\t[-37470248, 'earth'],\n\t\t\t[-36628312, 'sun'],\n\t\t\t[-13523799, '9969_braille'],\n\t\t\t[-13496699, 'sun'],\n\t\t\t[54458637, '19p_borrelly'],\n\t\t\t[54476825, 'sun'],\n\t\t\t[61977664.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 40845609.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[27100, -13523799, -13496699],\n\t\t\t\t[18188, 54458637, 54476825]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_deep_space_1/deep_space_1.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_space_1/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_space_1/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_space_1/9969_braille/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_space_1/19p_borrelly/pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: 'earth'\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg,\n\t\t\t\ttarget: 'sun'\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_deep_space_1/quat'\n\t\t}]\n\t},\n\tsc_near_shoemaker: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '253_mathilde', '433_eros', 'spacecraft'],\n\t\tocclusionRadius: 0.002,\n\t\textentsRadius: 0.0034000,\n\t\tlabel: 'NEAR',\n\t\tparents: [\n\t\t\t[-122129937, 'sun'],\n\t\t\t[-61397606, 'earth'],\n\t\t\t[-60793811, 'sun'],\n\t\t\t[-79403925, '253_mathilde'],\n\t\t\t[-79210250, 'sun'],\n\t\t\t[-8425610, '433_eros'],\n\t\t\t[36675809.3654, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 63919069.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[400000, -8425610, 35279032.137],\n\t\t\t\t[0, 35279032.137, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_near_shoemaker/near.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: 135 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Add an OE controller because the dynamo doesn't go back to launch.\n\t\t\t\t// This data was calculated by the computeOrbit function in Pioneer Play.\n\t\t\t\tconst oeController = entity.addControllerByClass(Pioneer.OrbitalElementsController);\n\t\t\t\tconst oe = new Pioneer.OrbitalElements();\n\t\t\t\toe.eccentricity = 0.3722732412046076;\n\t\t\t\toe.epoch = -122129937;\n\t\t\t\toe.semiMajorAxis = 235420679.8644008;\n\t\t\t\toe.orbitOrientation.set(0.25408339907533106, 0.05463135384055627, -0.18986948069810847, 0.9467875272685549);\n\t\t\t\toe.meanAngularMotion = 1.0085301888805118e-7;\n\t\t\t\toe.meanAnomalyAtEpoch = -0.005941352116228519;\n\t\t\t\toeController.addOrbitalElements(-122129937, oe);\n\t\t\t\toeController.addOrbitalElements(-113227200, oe);\n\t\t\t\toeController.setCoverage(new Pioneer.Interval(-122129937, -113227200));\n\t\t\t\treturn oeController;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_near_shoemaker/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_near_shoemaker/earth/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_near_shoemaker/253_mathilde/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_near_shoemaker/433_eros/orb'\n\t\t}, {\n\t\t\t// Cover the launch period.\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.5052018803124495, -0.11842169431143575, 0.7652511949887616, -0.3809697770341459),\n\t\t\tcoverage: [-122129937, -121953528.049046]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_near_shoemaker/quat'\n\t\t}, {\n\t\t\t// Add a fixed controller for after it lands.\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(0.930389249841349, 4.935129554115763, -4.002004469114965),\n\t\t\torientation: new Pioneer.Quaternion(0.11222410400554989, 0.7066112547219852, -0.6897721372150081, 0.11099857612696495),\n\t\t\tcoverage: [35279032.137, 36675809.3654]\n\t\t}, {\n\t\t\t// Get the landing fixed coverage coords in the J2000 frame.\n\t\t\ttype: 'rotateByEntityOrientation',\n\t\t\tcoverage: [35279032.137, 36675809.3654]\n\t\t}]\n\t},\n\tsc_near_shoemaker_landing_site: {\n\t\tgroups: ['433_eros', 'sc_near_shoemaker', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'NEAR Shoemaker Landing Site',\n\t\tparents: [\n\t\t\t[36675809.3654, '433_eros']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(0.930389249841349, 4.935129554115763, -4.002004469114965),\n\t\t\torientation: new Pioneer.Quaternion(0.11222410400554989, 0.7066112547219852, -0.6897721372150081, 0.11099857612696495),\n\t\t\trelativeToEntity: '433_eros',\n\t\t\tcoverage: [36675809.3654, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_lucy: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '52246_donaldjohanson', '3548_eurybates', '15094_polymele', '11351_leucus', '21900_orus', '617_patroclus', 'menoetius', 'spacecraft'],\n\t\tocclusionRadius: 0.002,\n\t\textentsRadius: 0.007125,\n\t\tlabel: 'Lucy',\n\t\tparents: [\n\t\t\t[687656642.763, 'earth'],\n\t\t\t[687915086, 'sun'],\n\t\t\t[718960993, 'earth'],\n\t\t\t[719531941, 'sun'],\n\t\t\t[787134972, 'earth'],\n\t\t\t[787532222, 'sun'],\n\t\t\t[798252820, '52246_donaldjohanson'],\n\t\t\t[798584539, 'sun'],\n\t\t\t[870652086, '3548_eurybates'],\n\t\t\t[872642047, 'sun'],\n\t\t\t[872642047, '15094_polymele'],\n\t\t\t[875308504, 'sun'],\n\t\t\t[891166024, '11351_leucus'],\n\t\t\t[894761809, 'sun'],\n\t\t\t[909384911, '21900_orus'],\n\t\t\t[912190135, 'sun'],\n\t\t\t[977590306, 'earth'],\n\t\t\t[978108682, 'sun'],\n\t\t\t[1046169596, '617_patroclus_barycenter'],\n\t\t\t[1047892376, 'sun']\n\t\t],\n\t\tdependents: [\n\t\t\t'152830_dinkinesh'\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 63919069.0,\n\t\t\tlengthCoverages: [\n\t\t\t\t[719531941 - 718960993, 718960993, 719531941],\n\t\t\t\t[787532222 - 787134972, 787134972, 787532222],\n\t\t\t\t[798584539 - 798252820, 798252820, 798584539],\n\t\t\t\t[872642047 - 870652086, 870652086, 872642047],\n\t\t\t\t[875308504 - 872642047, 872642047, 875308504],\n\t\t\t\t[894761809 - 891166024, 891166024, 894761809],\n\t\t\t\t[912190135 - 909384911, 909384911, 912190135],\n\t\t\t\t[978108682 - 977590306, 977590306, 978108682],\n\t\t\t\t[1047892376 - 1046169596, 1046169596, 1047892376]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_lucy/lucy.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/earth/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/earth/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/52246_donaldjohanson/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/3548_eurybates/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/15094_polymele/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/11351_leucus/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/21900_orus/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/earth/flyby3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/617_patroclus/pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttarget: 'earth'\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: Pioneer.Vector3.YAxis,\n\t\t\t\ttarget: 'sun',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_lucy/quat'\n\t\t}]\n\t},\n\tsc_new_horizons: {\n\t\tgroups: ['small body spacecraft', 'dwarf planet spacecraft', 'TNO spacecraft', '134340_pluto', '486958_arrokoth', 'spacecraft'],\n\t\tocclusionRadius: 0.00135,\n\t\textentsRadius: 0.0026,\n\t\tlabel: 'New Horizons',\n\t\tparents: [\n\t\t\t[190972278.33046317, 'earth'],\n\t\t\t[191055829, 'sun'],\n\t\t\t[225619606, 'jupiter'],\n\t\t\t[226100665, 'sun'],\n\t\t\t[490130161, '134340_pluto'],\n\t\t\t[490167848, 'sun'],\n\t\t\t[598753684, '486958_arrokoth'],\n\t\t\t[600203601, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 60 * 60 * 24 * 365 * 3\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_new_horizons/new_horizons.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/jupiter/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/pluto/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/sun/3/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/mu69/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/sun/4/pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/ori/1'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_new_horizons/ori/2'\n\t\t}]\n\t},\n\tsc_rosetta: {\n\t\tgroups: ['small body spacecraft', 'comet spacecraft', '67p_churyumov_gerasimenko', 'spacecraft'],\n\t\tocclusionRadius: 0.001400,\n\t\textentsRadius: 0.016000,\n\t\tlabel: 'Rosetta',\n\t\tparents: [\n\t\t\t[131491581.583, 'earth'],\n\t\t\t[131901500, 'sun'],\n\t\t\t[162704887, 'earth'],\n\t\t\t[163831232, 'sun'],\n\t\t\t[225623375, 'mars'],\n\t\t\t[225657862, 'sun'],\n\t\t\t[248111015, 'earth'],\n\t\t\t[248475560, 'sun'],\n\t\t\t[311055929, 'earth'],\n\t\t\t[311664877, 'sun'],\n\t\t\t[452394238, '67p_churyumov_gerasimenko'],\n\t\t\t[528503957.968, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_rosetta/rosettaPhilae.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 180 },\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/earth/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/mars/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/earth/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/sun/4/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/earth/flyby3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/sun/5/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/67p_churyumov_gerasimenko/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_rosetta/ori'\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [469053367.183, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst modelComponent = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (modelComponent !== null) {\n\t\t\t\t\tmodelComponent.setHiddenObject('Philae', true);\n\t\t\t\t\t// modelComponent.setHiddenObject('foil_gold_h', true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst modelComponent = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tif (modelComponent !== null) {\n\t\t\t\t\tmodelComponent.setHiddenObject('Philae', false);\n\t\t\t\t\t// modelComponent.setHiddenObject('foil_gold_h', false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst solarPanelAlignLeft = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\t\tsolarPanelAlignLeft.setJoint('panels_01');\n\t\t\t\tsolarPanelAlignLeft.setSecondaryAlignType('point');\n\t\t\t\tsolarPanelAlignLeft.setSecondaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\tsolarPanelAlignLeft.setSecondaryTargetEntity('sun');\n\t\t\t\treturn solarPanelAlignLeft;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst solarPanelAlignRight = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\t\tsolarPanelAlignRight.setJoint('panels_02');\n\t\t\t\tsolarPanelAlignRight.setSecondaryAlignType('point');\n\t\t\t\tsolarPanelAlignRight.setSecondaryAxis(Pioneer.Vector3.ZAxis);\n\t\t\t\tsolarPanelAlignRight.setSecondaryTargetEntity('sun');\n\t\t\t\treturn solarPanelAlignRight;\n\t\t\t}\n\t\t}]\n\t},\n\tsc_rosetta_impact_site: {\n\t\tgroups: ['small body sites', 'comet sites', '67p_churyumov_gerasimenko', 'sc_rosetta', 'sites'],\n\t\tradius: 0.001,\n\t\tlabel: 'Rosetta Impact Site',\n\t\tparents: [\n\t\t\t[528503957.968, '67p_churyumov_gerasimenko']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(1.7309310500292525, 0.3509303067271947, 1.1641920075039298),\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\trelativeToEntity: '67p_churyumov_gerasimenko',\n\t\t\tcoverage: [528503957.968, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_osiris_rex: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '101955_bennu', 'spacecraft'],\n\t\tocclusionRadius: 0.001600,\n\t\textentsRadius: 0.005,\n\t\tlabel: 'OSIRIS-REx',\n\t\tparents: [\n\t\t\t[526676400, 'earth'],\n\t\t\t[527025408, 'sun'],\n\t\t\t[558938468, 'earth'],\n\t\t\t[559919190, 'sun'],\n\t\t\t[591770603, '101955_bennu'],\n\t\t\t[674049669, 'sun'],\n\t\t\t[748358886, 'earth'],\n\t\t\t[749140122, 'sun']\n\t\t],\n\t\tdependents: ['sc_osiris_rex_src', '99942_apophis'], // These aren't parents and so they are named here.\n\t\ttrail: {\n\t\t\tlength: 102742.5,\n\t\t\tlengthCoverages: [\n\t\t\t\t[10000000, Number.NEGATIVE_INFINITY, 599748661],\n\t\t\t\t[672000.0, 599748661, 668095733],\n\t\t\t\t[10000000, 668095733, Number.POSITIVE_INFINITY]\n\t\t\t]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_osiris_rex_v2/osiris_rex_articulated_panels.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t],\n\t\t\tshadowEntities: ['bennu']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/sun/1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/earth/flyby/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/sun/2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/bennu/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/sun/3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/earth/sample_return/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/sun/4/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth', // Orientated so that the SRC will come off at the right orientation.\n\t\t\t\taxis: new Pioneer.Vector3(0.175109477645991, 0.45028151394683397, 0.8755473882299549)\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.XAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tcoverage: [658200668.0606446, Number.POSITIVE_INFINITY]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex/ori'\n\t\t}, {\n\t\t\t// For the animations, used \"The OSIRIS-REx Spacecraft and the Touch and Go Sample Acquisition Mechanism\", Kyle Brown 2020.\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeSubobjectVisibleAnimation(model, 'Tagsam_housing_cover', true, [\n\t\t\t\t\t[593036911, false] // Head cover jettisoned.\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'Tagsam_rod_bottom', 'z', [\n\t\t\t\t\t[595442726, 0], // First extending.\n\t\t\t\t\t[595442726 + 1 * 180, -2.51758508612],\n\t\t\t\t\t[595442726 + 2 * 180, -2.51758508612], // Folds back after first extending.\n\t\t\t\t\t[595442726 + 3 * 180, 0],\n\t\t\t\t\t[656502686 - 220 * 60, 0], // At T-220m it unfurls.\n\t\t\t\t\t[656502686 - 220 * 60 + 360, -3.71758508612],\n\t\t\t\t\t[656502686 + 2 * 60 + 90, -3.71758508612], // At T+2m it parks.\n\t\t\t\t\t[656502686 + 2 * 60 + 90 + 180, 0],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 0 * 180, 0], // It stores the head in the SRC module.\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 2 * 180, -2.73771997401],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 4 * 180, 0]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'Tagsam_rod_top', 'z', [\n\t\t\t\t\t[593728111, 0], // Frangibolts fired and TAGSAM is unlocked.\n\t\t\t\t\t[593728111 + 2, 0.15],\n\t\t\t\t\t[595442726, 0.15], // First extending.\n\t\t\t\t\t[595442726 + 1 * 180, 2.73247002363],\n\t\t\t\t\t[595442726 + 2 * 180, 2.73247002363], // Folds back after first extending.\n\t\t\t\t\t[595442726 + 3 * 180, 0.15],\n\t\t\t\t\t[656502686 - 220 * 60, 0.15], // At T-220m it unfurls.\n\t\t\t\t\t[656502686 - 220 * 60 + 360, 3.73247002363],\n\t\t\t\t\t[656502686 + 2 * 60 + 90, 3.73247002363], // At T+2m it parks.\n\t\t\t\t\t[656502686 + 2 * 60 + 90 + 180, 0.15],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 0 * 180, 0.15], // It stores the head in the SRC module.\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 1 * 180, 1.16136826422],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 2 * 180, 0.509601235],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 3 * 180, 1.16136826422],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 4 * 180, 0.15]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'tagsam_head', 'z', [\n\t\t\t\t\t[595442726 + 1 * 180, 0], // First extending.\n\t\t\t\t\t[595442726 + 1.5 * 180, 1.57079632679], // Folds back after first extending.\n\t\t\t\t\t[595442726 + 2 * 180, 1.57079632679],\n\t\t\t\t\t[656502686 - 220 * 60, 0], // At T-220m it unfurls.\n\t\t\t\t\t[656502686 - 220 * 60 + 90, 1.57079632679],\n\t\t\t\t\t[656502686 + 2 * 60, 1.57079632679], // At T+2m it parks.\n\t\t\t\t\t[656502686 + 2 * 60 + 90, 0],\n\t\t\t\t\t[656502686 + 10 * 24 * 3600, 0], // It stores the head in the SRC module.\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 360, 1.01463145268]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeSubobjectVisibleAnimation(model, 'tagsam_head', true, [\n\t\t\t\t\t[656502686 + 10 * 24 * 3600 + 360, false] // At T+10d, the head is stowed. We don't have the SRC stowage piece, so the head will just disappear.\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'Gimbal_Base_Right', 'z', [\n\t\t\t\t\t[656501483 + 0 * 60, -70 * Math.PI / 180],\n\t\t\t\t\t[656501483 + 2 * 60, 0],\n\t\t\t\t\t[656503242 + 0 * 60, 0],\n\t\t\t\t\t[656503242 + 2 * 180, -70 * Math.PI / 180]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'Gimbal_Base_Left', 'z', [\n\t\t\t\t\t[656501483 + 0 * 60, -70 * Math.PI / 180],\n\t\t\t\t\t[656501483 + 2 * 60, 0],\n\t\t\t\t\t[656503242 + 0 * 60, 0],\n\t\t\t\t\t[656503242 + 2 * 180, -70 * Math.PI / 180]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'Gimbal_Pivot_Right', 'x', [\n\t\t\t\t\t[656501483 + 2 * 60, 0],\n\t\t\t\t\t[656501483 + 4 * 60, 38 * Math.PI / 180],\n\t\t\t\t\t[656503242, 38 * Math.PI / 180],\n\t\t\t\t\t[656503242 + 2 * 60, 0]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeJointRotationAnimation(model, 'Gimbal_Pivot_Left', 'x', [\n\t\t\t\t\t[656501483 + 2 * 60, 0],\n\t\t\t\t\t[656501483 + 4 * 60, -38 * Math.PI / 180],\n\t\t\t\t\t[656503242, -38 * Math.PI / 180],\n\t\t\t\t\t[656503242 + 2 * 60, 0]\n\t\t\t\t]);\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\treturn Animation.makeSubobjectVisibleAnimation(model, 'heatshield', true, [\n\t\t\t\t\t[748824183.985732, false] // At this time, the SRC is released.\n\t\t\t\t]);\n\t\t\t}\n\t\t}]\n\t},\n\tsc_osiris_rex_src: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '101955_bennu', 'sample return capsule'],\n\t\tocclusionRadius: 0.0008,\n\t\textentsRadius: 0.0005,\n\t\tlabel: 'OSIRIS-REx SRC',\n\t\tparents: [\n\t\t\t[748824183.985732, 'sc_osiris_rex'],\n\t\t\t[748832190, 'earth'],\n\t\t\t[748839215, '']\n\t\t],\n\t\tdependents: ['sc_osiris_rex'],\n\t\ttrail: {\n\t\t\tlength: 360\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_osiris_rex_v2/src/osiris_rex_heatshield.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex_src/sc_osiris_rex'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_osiris_rex_src/earth'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(-0.7795827954678449, -0.23701239922750972, 0.5441503490850964, -0.19994045416955505)\n\t\t}, {\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [748838642, 748839373],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst translate = entity.addControllerByClass(Pioneer.TranslateController);\n\t\t\t\ttranslate.setTranslation(new Pioneer.Vector3(0, 0, 0.0012));\n\t\t\t\ttranslate.setRelativeToOrientation(true);\n\t\t\t\treturn translate;\n\t\t\t},\n\t\t\tcoverage: [748824183.985732, 748839215]\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\tmodel.setTranslation(new Pioneer.Vector3(0, 0, -0.0012));\n\t\t}\n\t},\n\tsc_philae: {\n\t\tgroups: ['small body spacecraft', 'comet spacecraft', '67p_churyumov_gerasimenko', 'spacecraft', 'landers'],\n\t\tocclusionRadius: 0.0006,\n\t\textentsRadius: 0.001,\n\t\tlabel: 'Philae',\n\t\tparents: [\n\t\t\t[469053367.183, '67p_churyumov_gerasimenko'],\n\t\t\t[469078512.324, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_philae/philae.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 180 },\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_philae/67p_churyumov_gerasimenko/pos'\n\t\t}, {\n\t\t\t// The orientation of Rosetta when it is detached.\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.05763938670269045, 0.04093459828351704, 0.6750586755218195, 0.7343690110337115)\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Get the lander's origin and model aligned with the spacecraft when they separate.\n\t\t\t\tconst originOffset = new Pioneer.Vector3(0.0021658104318583687, 0.0011575046500869896, 0.00011875498849156656);\n\t\t\t\tconst modelOffset = new Pioneer.Vector3(0.00147, 0, 0);\n\t\t\t\tconst translateController = entity.addControllerByClass(Pioneer.TranslateController);\n\t\t\t\ttranslateController.setTranslation(originOffset);\n\t\t\t\t// Also set the model's translation, so everything aligns.\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tmodel.setTranslation(modelOffset);\n\t\t\t\treturn translateController;\n\t\t\t},\n\t\t\tcoverage: [469053367.183, 469078512.324]\n\t\t}]\n\t},\n\tsc_philae_landing_site: {\n\t\tgroups: ['small body sites', 'comet sites', '67p_churyumov_gerasimenko', 'sc_philae', 'sites'],\n\t\tradius: 0.001,\n\t\tsystemRadius: 200,\n\t\tlabel: 'Philae Landing Site',\n\t\tparents: [\n\t\t\t[469078512.324, '67p_churyumov_gerasimenko']\n\t\t],\n\t\tcontrollers: [{\n\t\t\ttype: 'fixed',\n\t\t\tposition: new Pioneer.Vector3(2.4452763955965984, -0.12110982508097201, -0.36032099522959377),\n\t\t\torientation: Pioneer.Quaternion.Identity,\n\t\t\trelativeToEntity: '67p_churyumov_gerasimenko',\n\t\t\tcoverage: [469078512.324, Number.POSITIVE_INFINITY]\n\t\t}]\n\t},\n\tsc_psyche: {\n\t\tgroups: ['small body spacecraft', 'asteroid spacecraft', '16_psyche', 'spacecraft'],\n\t\tocclusionRadius: 0.0031,\n\t\textentsRadius: 0.025,\n\t\tlabel: 'Psyche',\n\t\tparents: [\n\t\t\t[750482453, 'earth'],\n\t\t\t[750686758, 'sun'],\n\t\t\t[831828698, 'mars'],\n\t\t\t[832302380, 'sun'],\n\t\t\t[931665741, '16_psyche']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_psyche/psyche.gltf',\n\t\t\trotate: [\n\t\t\t\t{ y: -90 },\n\t\t\t\t{ x: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_psyche/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_psyche/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_psyche/mars/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_psyche/16_psyche/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst solarPanelAlignLeft = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\t\tsolarPanelAlignLeft.setJoint('ArrayGimbleLeft');\n\t\t\t\tsolarPanelAlignLeft.setSecondaryAlignType('point');\n\t\t\t\tsolarPanelAlignLeft.setSecondaryAxis(Pioneer.Vector3.YAxis);\n\t\t\t\tsolarPanelAlignLeft.setSecondaryTargetEntity('sun');\n\t\t\t\treturn solarPanelAlignLeft;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst solarPanelAlignRight = entity.addControllerByClass(Pioneer.AlignController);\n\t\t\t\tsolarPanelAlignRight.setJoint('ArrayGimbleRight');\n\t\t\t\tsolarPanelAlignRight.setSecondaryAlignType('point');\n\t\t\t\tsolarPanelAlignRight.setSecondaryAxis(Pioneer.Vector3.YAxis);\n\t\t\t\tsolarPanelAlignRight.setSecondaryTargetEntity('sun');\n\t\t\t\treturn solarPanelAlignRight;\n\t\t\t}\n\t\t}]\n\t},\n\tsc_stardust: {\n\t\tgroups: ['small body spacecraft', 'comet spacecraft', '81p_wild_2', '9p_tempel_1', 'spacecraft'],\n\t\tocclusionRadius: 0.00065,\n\t\textentsRadius: 0.003000,\n\t\tlabel: 'Stardust',\n\t\tparents: [\n\t\t\t[-28304869.3, 'earth'],\n\t\t\t[-28038699, 'sun'],\n\t\t\t[32627842, 'earth'],\n\t\t\t[33120541, 'sun'],\n\t\t\t[89379733, '5535_annefrank'],\n\t\t\t[89550209, 'sun'],\n\t\t\t[126009572, '81p_wild_2'],\n\t\t\t[126678668, 'sun'],\n\t\t\t[190336290, 'earth'],\n\t\t\t[190866114, 'sun'],\n\t\t\t[284944970, 'earth'],\n\t\t\t[285742028, 'sun'],\n\t\t\t[350896766, '9p_tempel_1'],\n\t\t\t[351068113, 'sun'],\n\t\t\t[354279666, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 62659492.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_stardust/stardust_articulated.gltf',\n\t\t\tshadowEntities: ['earth'],\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/earth/launch/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/sun/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/earth/flyby1/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/5535_annefrank/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/81p_wild_2/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/earth/flyby2/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/earth/flyby3/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/9p_tempel_1/pos'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust/quat'\n\t\t}, {\n\t\t\t// Orientation dynamo doesn't quite reach to the end.\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.382740492391079, -0.1080542417135509, -0.5511677923678098, -0.7335175941913997),\n\t\t\tcoverage: [351017063, 354279666]\n\t\t}, {\n\t\t\t// Hide the SRC when it is released.\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [190576755.185 - 64.40161622339717, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tfor (const object of ['Stardust_capsule', 'Stardust_tex_01_c', 'Stardust_tex_02_c', 'Stardust_tex_03_c', 'Stardust_tex_02_c2', 'Stardust_Sample_Collection1']) {\n\t\t\t\t\tmodel.setHiddenObject(object, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\tfor (const object of ['Stardust_capsule', 'Stardust_tex_01_c', 'Stardust_tex_02_c', 'Stardust_tex_03_c', 'Stardust_tex_02_c2', 'Stardust_Sample_Collection1']) {\n\t\t\t\t\tmodel.setHiddenObject(object, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}],\n\t\tpostCreateFunction: (entity) => {\n\t\t\tconst model = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\tconst stardustAnimation = (/** @type {number} */angle, /** @type {number} */timeOffset, /** @type {number} */duration) => {\n\t\t\t\treturn /** @type {[number, number][]} */([\n\t\t\t\t\t[4449664 + timeOffset, angle],\n\t\t\t\t\t[4449664 + timeOffset + duration, 0],\n\t\t\t\t\t[10411264 - timeOffset - duration, 0],\n\t\t\t\t\t[10411264 - timeOffset, angle],\n\t\t\t\t\t[81864064 + timeOffset, angle],\n\t\t\t\t\t[81864064 + timeOffset + duration, 0],\n\t\t\t\t\t[92664064 - timeOffset - duration, 0],\n\t\t\t\t\t[92664064 - timeOffset, angle],\n\t\t\t\t\t[125496064 + timeOffset, angle],\n\t\t\t\t\t[125496064 + timeOffset + duration, 0],\n\t\t\t\t\t[126363664 - timeOffset - duration, 0],\n\t\t\t\t\t[126363664 - timeOffset, angle]\n\t\t\t\t]);\n\t\t\t};\n\t\t\tAnimation.makeJointRotationAnimation(model, 'Stardust_capsule', 'x', stardustAnimation(1.481785, 0, 600));\n\t\t\tAnimation.makeJointRotationAnimation(model, 'Stardust_Sample_Collection1', 'x', stardustAnimation(-Math.PI, 610, 300));\n\t\t\tAnimation.makeJointRotationAnimation(model, 'Stardust_Sample_Collection2', 'x', stardustAnimation(-Math.PI, 920, 300));\n\t\t}\n\t},\n\tsc_stardust_src: {\n\t\tgroups: ['small body spacecraft', 'comet spacecraft', '81p_wild_2', 'earth', 'spacecraft'],\n\t\tocclusionRadius: 0.0004,\n\t\textentsRadius: 0.0008,\n\t\tlabel: 'Stardust SRC',\n\t\tparents: [\n\t\t\t[190576690.7833838, 'sc_stardust'],\n\t\t\t[190576755.185, 'earth'],\n\t\t\t[190591985.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 14547.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_stardust_src/stardust_capsule.gltf',\n\t\t\tshadowEntities: ['earth'],\n\t\t\trotate: [\n\t\t\t\t{ x: 90 },\n\t\t\t\t{ z: 90 }\n\t\t\t]\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stardust_src/earth/pos'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.5761056269233067, 0.6860897901682099, 0.2627910947477326, 0.3582233199772653)\n\t\t}, {\n\t\t\t// Make the SRC trail relative to earth orientation.\n\t\t\ttype: 'coverage',\n\t\t\tcoverage: [190591100, Number.POSITIVE_INFINITY],\n\t\t\tenter: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(true);\n\t\t\t\t\ttrail.setStartTime(1600);\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: (entity) => {\n\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\tif (trail !== null) {\n\t\t\t\t\ttrail.setRelativeToEntityOrientation(false);\n\t\t\t\t\ttrail.setStartTime(18000);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\t// The spice kernels for the SRC don't release at the right position, so we use a keyframe controller to fill the gap.\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst keyframeControllerRelease = entity.addControllerByClass(Pioneer.KeyframeController);\n\t\t\t\tkeyframeControllerRelease.addPositionKeyframe(190576755.185 - 64.40161622339717, // Release\n\t\t\t\t\tnew Pioneer.Vector3(-0.0010057, 0, 0.0001569),\n\t\t\t\t\t'sc_stardust', undefined,\n\t\t\t\t\t'sc_stardust', undefined);\n\t\t\t\tkeyframeControllerRelease.addPositionKeyframe(190576755.185, // Dynamo starts\n\t\t\t\t\tnew Pioneer.Vector3(-0.016734488308429718, -0.019199222326278687, -0.00404781848192215),\n\t\t\t\t\t'sc_stardust');\n\t\t\t\treturn keyframeControllerRelease;\n\t\t\t}\n\t\t}, {\n\t\t\t// The spice kernels for the SRC don't land correctly,\n\t\t\t//   so we use a keyframe controller to fill the gap.\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\tconst keyframeControllerLand = entity.addControllerByClass(Pioneer.KeyframeController);\n\t\t\t\tkeyframeControllerLand.addPositionKeyframe(190591163, // Spice doesn't look as good after this point.\n\t\t\t\t\tnew Pioneer.Vector3(-1979.4577357598625, -4478.591383446022, 4136.322858267745),\n\t\t\t\t\t'earth'\n\t\t\t\t);\n\t\t\t\tkeyframeControllerLand.addPositionKeyframe(190591445.184, // Starts more gentle descent with parachute.\n\t\t\t\t\tnew Pioneer.Vector3(-1947.8360605285134, -4491.082890234251, 4123.1018367103425),\n\t\t\t\t\t'earth'\n\t\t\t\t);\n\t\t\t\tkeyframeControllerLand.addPositionKeyframe(190591985.184, // Lands\n\t\t\t\t\tnew Pioneer.Vector3(-1918.7633689113482, -4478.864184129612, 4103.897124245734),\n\t\t\t\t\t'earth'\n\t\t\t\t);\n\t\t\t\treturn keyframeControllerLand;\n\t\t\t}\n\t\t}, {\n\t\t\t// Get the landing animation above into the J2000 frame.\n\t\t\ttype: 'rotateByEntityOrientation',\n\t\t\tcoverage: [190591163, 190591985.184]\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_biosentinel: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.0002,\n\t\textentsRadius: 0.0005,\n\t\tlabel: 'BioSentinel',\n\t\tparents: [\n\t\t\t[721866289, 'earth'],\n\t\t\t[722273637, 'moon'],\n\t\t\t[722923565, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_biosentinel/biosentinel.gltf',\n\t\t\tshadowEntities: ['moon']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_biosentinel/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_biosentinel/moon/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_biosentinel/sun/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t}\n\t\t}]\n\t},\n\tsc_kepler_space_telescope: {\n\t\tgroups: ['sun', 'spacecraft', 'telescope'],\n\t\tocclusionRadius: 0.002350,\n\t\textentsRadius: 0.00400,\n\t\tlabel: 'Kepler',\n\t\tparents: [\n\t\t\t[289679042.1855, 'earth'],\n\t\t\t[290348743, 'sun'],\n\t\t\t[595512069.183, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 32190048\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_kepler/Kepler.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_kepler/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_kepler/sun/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'align',\n\t\t\t\ttarget: 'sun',\n\t\t\t\t// This number is from 290.666... RA 44.5 DEC, the center of the Kepler cone.\n\t\t\t\ttargetAxis: new Pioneer.Vector3(0.25176480336, -0.66735243742, 0.7009092643),\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.XAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_mariner_2: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.002,\n\t\textentsRadius: 0.0025000,\n\t\tlabel: 'Mariner 2',\n\t\tparents: [\n\t\t\t[-1178599240.703784, 'sun'],\n\t\t\t[409233667.18358755, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 29411352.0\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_mariner_2',\n\t\t\tdataType: 'pos'\n\t\t}]\n\t},\n\tsc_parker_solar_probe: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.0015,\n\t\textentsRadius: 0.003,\n\t\tlabel: 'Parker Solar Probe',\n\t\tparents: [\n\t\t\t[587333783.3431, 'earth'],\n\t\t\t[587454078, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 12942631.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_parker_solar_probe/PSP.gltf'\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_parker_solar_probe/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_parker_solar_probe/sun/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_spitzer: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.0085,\n\t\textentsRadius: 0.004,\n\t\tlabel: 'Spitzer',\n\t\tparents: [\n\t\t\t[115064804, 'earth'],\n\t\t\t[115493678, 'sun'],\n\t\t\t[633614469, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 32167331.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_spitzer/SPITZER.gltf',\n\t\t\trotate: [\n\t\t\t\t{ z: -90 },\n\t\t\t\t{ x: -90 }\n\t\t\t],\n\t\t\tshadowEntities: ['venus', 'mercury']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_spitzer/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_spitzer/sun/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: new Pioneer.Quaternion(0.5258297992951877, 0.8139480432783324, -0.1400557906856776, -0.20341086625833524),\n\t\t\tcoverage: [115064804, 174548493]\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_spitzer/quat'\n\t\t}]\n\t},\n\tsc_stereo_ahead: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.003000,\n\t\tlabel: 'STEREO Ahead',\n\t\tparents: [\n\t\t\t[215097110, 'earth'],\n\t\t\t[221418192, 'sun']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 29809031.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_stereo_ahead/stereo_a.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t],\n\t\t\tshadowEntities: ['venus', 'mercury']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stereo_ahead/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stereo_ahead/sun/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_stereo_ahead',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_stereo_behind: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.003,\n\t\textentsRadius: 0.003000,\n\t\tlabel: 'STEREO Behind',\n\t\tparents: [\n\t\t\t[215097110, 'earth'],\n\t\t\t[224468337, 'sun'],\n\t\t\t[527860868.182, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 33473699.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_stereo_behind/stereo_b.gltf',\n\t\t\trotate: [\n\t\t\t\t{ x: 90 }\n\t\t\t],\n\t\t\tshadowEntities: ['venus', 'mercury']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stereo_behind/earth/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_stereo_behind/sun/orb'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_stereo_behind',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_ulysses: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.002,\n\t\textentsRadius: 0.002,\n\t\tlabel: 'Ulysses',\n\t\tparents: [\n\t\t\t[-291488100, 'sun'],\n\t\t\t[268142464.18410408, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 140294739.0\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_ulysses/ulysses.gltf',\n\t\t\tshadowEntities: ['venus', 'mercury']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_ulysses',\n\t\t\tdataType: 'pos'\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'sun',\n\t\t\t\taxis: Pioneer.Vector3.ZAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'velocity',\n\t\t\t\ttarget: 'sc_ulysses',\n\t\t\t\taxis: Pioneer.Vector3.YAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_wmap: {\n\t\tgroups: ['sun', 'spacecraft'],\n\t\tocclusionRadius: 0.0026,\n\t\textentsRadius: 0.0026,\n\t\tlabel: 'WMAP',\n\t\tparents: [\n\t\t\t[339422466.184, 'sun'],\n\t\t\t[360158466.184, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 60 * 60 * 24 * 365\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'animdata',\n\t\t\turl: 'sc_wmap',\n\t\t\tdataType: 'pos'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\n\nEntity.register({\n\tariel: {\n\t\tgroups: ['uranus', 'moons', 'major'],\n\t\tradius: 578.9,\n\t\tlabel: 'Ariel',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 578.9,\n\t\t\tpolarRadius: 578.9,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'ariel/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ariel/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ariel/ori'\n\t\t}]\n\t},\n\tmiranda: {\n\t\tgroups: ['uranus', 'moons', 'major'],\n\t\tradius: 235.8,\n\t\tlabel: 'Miranda',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 235.8,\n\t\t\tpolarRadius: 235.8,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'miranda/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 256]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'miranda/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'miranda/ori'\n\t\t}]\n\t},\n\toberon: {\n\t\tgroups: ['uranus', 'moons', 'major'],\n\t\tradius: 761.4,\n\t\tlabel: 'Oberon',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 761.4,\n\t\t\tpolarRadius: 761.4,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'oberon/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'oberon/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'oberon/ori'\n\t\t}]\n\t},\n\ttitania: {\n\t\tgroups: ['uranus', 'moons', 'major'],\n\t\tradius: 788.4,\n\t\tlabel: 'Titania',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 788.4,\n\t\t\tpolarRadius: 788.4,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'titania/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 512]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'titania/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'titania/ori'\n\t\t}]\n\t},\n\tumbriel: {\n\t\tgroups: ['uranus', 'moons', 'major'],\n\t\tradius: 584.7,\n\t\tlabel: 'Umbriel',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tspheroid: {\n\t\t\tequatorialRadius: 584.7,\n\t\t\tpolarRadius: 584.7,\n\t\t\tplanetographic: false\n\t\t},\n\t\tspheroidLOD: {\n\t\t\tfeatures: ['shadowEntities'],\n\t\t\ttextures: {\n\t\t\t\tcolor: {\n\t\t\t\t\turl: 'umbriel/color_$SIZE_$FACE.png',\n\t\t\t\t\tsizes: [4, 256]\n\t\t\t\t}\n\t\t\t},\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'umbriel/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'umbriel/ori'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tbelinda: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 45.0,\n\t\tlabel: 'Belinda',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [45, 45, 45],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'belinda/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'belinda/ori'\n\t\t}]\n\t},\n\tbianca: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 25.7,\n\t\tlabel: 'Bianca',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [25.7, 25.7, 25.7],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'bianca/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'bianca/ori'\n\t\t}]\n\t},\n\tcaliban: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 36,\n\t\tlabel: 'Caliban',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [36, 36, 36],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'caliban/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tcordelia: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 20.1,\n\t\tlabel: 'Cordelia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [20.1, 20.1, 20.1],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'cordelia/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'cordelia/ori'\n\t\t}]\n\t},\n\tcressida: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 39.8,\n\t\tlabel: 'Cressida',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [39.8, 39.8, 39.8],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'cressida/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'cressida/ori'\n\t\t}]\n\t},\n\tcupid: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 9.0,\n\t\tlabel: 'Cupid',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [9, 9, 9],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'cupid/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tdesdemona: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 32.0,\n\t\tlabel: 'Desdemona',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [32, 32, 32],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'desdemona/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'desdemona/ori'\n\t\t}]\n\t},\n\tferdinand: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 10,\n\t\tlabel: 'Ferdinand',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [10, 10, 10],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ferdinand/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tfrancisco: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 11,\n\t\tlabel: 'Francisco',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [11, 11, 11],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'francisco/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tjuliet: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 46.8,\n\t\tlabel: 'Juliet',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [46.8, 46.8, 46.8],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'juliet/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'juliet/ori'\n\t\t}]\n\t},\n\tmab: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 12.5,\n\t\tlabel: 'Mab',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [12.5, 12.5, 12.5],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'mab/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tmargaret: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 10,\n\t\tlabel: 'Margaret',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [10, 10, 10],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'margaret/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tophelia: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 22.4,\n\t\tlabel: 'Ophelia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [22.4, 22.4, 22.4],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ophelia/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'ophelia/ori'\n\t\t}]\n\t},\n\tperdita: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 15.0,\n\t\tlabel: 'Perdita',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [15, 15, 15],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'perdita/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tportia: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 67.6,\n\t\tlabel: 'Portia',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [67.6, 67.6, 67.6],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'portia/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'portia/ori'\n\t\t}]\n\t},\n\tprospero: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 25,\n\t\tlabel: 'Prospero',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [25, 25, 25],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'prospero/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tpuck: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 81.0,\n\t\tlabel: 'Puck',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [81, 81, 81],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'puck/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'puck/ori'\n\t\t}]\n\t},\n\trosalind: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'inner'],\n\t\tradius: 36.0,\n\t\tlabel: 'Rosalind',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [36, 36, 36],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'rosalind/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'rosalind/ori'\n\t\t}]\n\t},\n\tsetebos: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 24,\n\t\tlabel: 'Setebos',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [24, 24, 24],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'setebos/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tstephano: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 16,\n\t\tlabel: 'Stephano',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_2/generic_asteroid_2.gltf',\n\t\t\tscale: [16, 16, 16],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'stephano/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\tsycorax: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 82,\n\t\tlabel: 'Sycorax',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_3/generic_asteroid_3.gltf',\n\t\t\tscale: [82, 82, 82],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sycorax/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t},\n\ttrinculo: {\n\t\tgroups: ['uranus', 'moons', 'minor', 'irregular'],\n\t\tradius: 9,\n\t\tlabel: 'Trinculo',\n\t\tparents: [\n\t\t\t[Number.NEGATIVE_INFINITY, 'uranus']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined,\n\t\t\tcolor: [0.67, 0.92, 1.00, 0.7]\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/generic/asteroid_1/generic_asteroid_1.gltf',\n\t\t\tscale: [9, 9, 9],\n\t\t\tshadowEntities: ['uranus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'trinculo/uranus/orb'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport { Entity } from '../entity';\nimport * as Pioneer from 'pioneer';\n\nEntity.register({\n\tsc_magellan: {\n\t\tgroups: ['venus', 'spacecraft'],\n\t\tocclusionRadius: 0.003200,\n\t\textentsRadius: 0.006000,\n\t\tlabel: 'Magellan',\n\t\tparents: [\n\t\t\t[-336388283.36, 'sun'],\n\t\t\t[-296448521.457, 'venus'],\n\t\t\t[-164631538.81763855, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: undefined\n\t\t},\n\t\tmodel: {\n\t\t\turl: '$STATIC_ASSETS_URL/models/sc_magellan/magellan.gltf',\n\t\t\tshadowEntities: ['venus']\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_magellan/venus/orb'\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Add the controller for going around sun from earth to venus.\n\t\t\t\tconst oeCruiseController = entity.addControllerByClass(Pioneer.OrbitalElementsController);\n\t\t\t\tconst oeCruise = new Pioneer.OrbitalElements();\n\t\t\t\toeCruise.epoch = -336394683.816;\n\t\t\t\toeCruise.eccentricity = 0.1791852824104108;\n\t\t\t\toeCruise.semiMajorAxis = 128280596.63956015;\n\t\t\t\toeCruise.meanAngularMotion = 2.5073465306679634e-7;\n\t\t\t\toeCruise.meanAnomalyAtEpoch = 2.9229288382327625;\n\t\t\t\toeCruise.orbitOrientation.set(0.8728453580255966, 0.1876084386162498, -0.08948587100888229, 0.4415159494547423);\n\t\t\t\toeCruiseController.addOrbitalElements(-336388283.360, oeCruise);\n\t\t\t\toeCruiseController.addOrbitalElements(-296448521.457, oeCruise);\n\t\t\t\treturn oeCruiseController;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'custom',\n\t\t\tfunc: (entity) => {\n\t\t\t\t// Add the controller for the venus orbital insertion and first few orbits that aren't covered by spice.\n\t\t\t\tconst oeVOIController = entity.addControllerByClass(Pioneer.OrbitalElementsController);\n\t\t\t\t// Orbital insertion with hyperbolic eccentricity.\n\t\t\t\tconst oeVOI = new Pioneer.OrbitalElements();\n\t\t\t\toeVOI.epoch = -296448521.457;\n\t\t\t\toeVOI.eccentricity = 1.272922970547487;\n\t\t\t\toeVOI.semiMajorAxis = 23358.593430196037;\n\t\t\t\toeVOI.meanAngularMotion = 0.00015965302516479147;\n\t\t\t\toeVOI.meanAnomalyAtEpoch = -6.138103356108873;\n\t\t\t\toeVOI.orbitOrientation.set(-0.49933963770188916, 0.11817755769547109, 0.7262027627540558, -0.45751889408554064);\n\t\t\t\toeVOIController.addOrbitalElements(-296448521.457, oeVOI);\n\t\t\t\toeVOIController.addOrbitalElements(-296410230.351, oeVOI);\n\t\t\t\t// Extra orbits from Aug 10 to Aug 16 to connect to the start of the spice/dynamo.\n\t\t\t\tconst oeVOI2 = new Pioneer.OrbitalElements();\n\t\t\t\toeVOI2.epoch = -295884037.7511;\n\t\t\t\toeVOI2.eccentricity = 0.39186818222106645;\n\t\t\t\toeVOI2.semiMajorAxis = 10434.012201911135;\n\t\t\t\toeVOI2.meanAngularMotion = 0.000534773863104956;\n\t\t\t\toeVOI2.meanAnomalyAtEpoch = -1.5165416917234864;\n\t\t\t\toeVOI2.orbitOrientation.set(-0.4665778554219434, 0.18802595119032475, 0.7217932088991018, -0.47535871728198204);\n\t\t\t\toeVOIController.addOrbitalElements(-296410230.351, oeVOI2);\n\t\t\t\toeVOIController.addOrbitalElements(-295884037.7511, oeVOI2);\n\t\t\t\treturn oeVOIController;\n\t\t\t}\n\t\t}, {\n\t\t\ttype: 'align',\n\t\t\tprimary: {\n\t\t\t\ttype: 'point',\n\t\t\t\ttarget: 'earth',\n\t\t\t\taxis: Pioneer.Vector3.YAxis\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\ttype: 'align',\n\t\t\t\taxis: new Pioneer.Vector3(-Math.sqrt(0.5), Math.sqrt(0.5), 0),\n\t\t\t\ttarget: 'venus',\n\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxisNeg\n\t\t\t}\n\t\t}]\n\t},\n\tsc_venus_express: {\n\t\tgroups: ['venus', 'spacecraft'],\n\t\tocclusionRadius: 0.0009,\n\t\textentsRadius: 0.0040,\n\t\tlabel: 'Venus Express',\n\t\tparents: [\n\t\t\t[184784702, 'earth'],\n\t\t\t[185369766, 'sun'],\n\t\t\t[197902579, 'venus'],\n\t\t\t[473341201, '']\n\t\t],\n\t\ttrail: {\n\t\t\tlength: 779592.165087551\n\t\t},\n\t\tcontrollers: [{\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_venus_express/earth'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_venus_express/sun'\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_venus_express/venus'\n\t\t}, {\n\t\t\ttype: 'fixed',\n\t\t\torientation: Pioneer.Quaternion.Identity\n\t\t}, {\n\t\t\ttype: 'dynamo',\n\t\t\turl: 'sc_venus_express/quat'\n\t\t}]\n\t}\n});\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * @typedef Options\n * @property {string[]} [groups]\n * @property {string} [label]\n * @property {string} [labelFadeEntity] - The entity that when this gets close to it, the label fades.\n * @property {number} [occlusionRadius]\n * @property {number} [extentsRadius]\n * @property {number} [radius] - This applies to occlusion and extents radii.\n * @property {number} [systemRadius] - The radius within which all children reside.\n * @property {[number, string][]} parents\n * @property {string[]} [dependents]\n * @property {string} [lightSource]\n * @property {TrailOptions} [trail]\n * @property {SpheroidOptions} [spheroid]\n * @property {SpheroidLODOptions} [spheroidLOD]\n * @property {CMTSOptions} [cmts]\n * @property {ModelOptions} [model]\n * @property {CometOptions} [comet]\n * @property {ControllersOptions[]} [controllers]\n * @property {(entity: Pioneer.Entity, extraOptions?: ExtraOptions) => void} [postCreateFunction]\n */\n\n/**\n * @typedef ExtraOptions\n * @property {string} [namePrefix] - A prefix that will be prepended to the name of the entity.\n * @property {string} [nameSuffix] - A suffix that will be appended to the name of the entity.\n * @property {boolean} [milkyWaySprite] - Whether or not to use the milky way sprite.\n * @property {boolean} [skybox] - A skybox that is used instead of the stars.\n * @property {number} [skyboxResolution] - The resolution of the skybox.\n * @property {boolean} [starfield] - A starfield that is used instead of the skybox.\n * @property {boolean} [heliosphere] - Whether or not the sun has a heliosphere.\n * @property {boolean} [clouds] - Whether the earth has clouds or not.\n * @private\n */\n\n/**\n * @typedef {FixedOptions | SpinOptions | DynamoOptions | AnimdataOptions | AlignOptions | RotateByEntityOrientation | CoverageOptions | CustomControllerOptions | OrbitalElementsOptions} ControllersOptions\n */\n\n/**\n * @typedef TrailOptions\n * @property {string} [name]\n * @property {number | undefined} length\n * @property {[number, number, number, number]} [color]\n * @property {string} [relativeTo]\n * @property {[number, number, number][]} [lengthCoverages]\n */\n\n/**\n * @typedef SpheroidOptions\n * @property {string} [name]\n * @property {number} equatorialRadius\n * @property {number} polarRadius\n * @property {boolean} planetographic\n */\n\n/**\n * @typedef SpheroidLODOptions\n * @property {string} [name]\n * @property {string[]} [features]\n * @property {Object.<string, SpheroidTextureOptions>} [textures]\n * @property {string[]} [shadowEntities]\n */\n\n/**\n * @typedef SpheroidTextureOptions\n * @property {string} url\n * @property {number[]} sizes\n */\n\n/**\n * @typedef CMTSOptions\n * @property {string} [name]\n * @property {Object.<string, string>} textures\n * @property {string[]} [shadowEntities]\n * @property {number} [maxLevel]\n */\n\n/**\n * @typedef ModelOptions\n * @property {string} [name]\n * @property {string} url\n * @property {ModelRotateOptions[]} [rotate]\n * @property {[number, number, number] | number} [scale]\n * @property {string[]} [shadowEntities]\n * @property {ModelEnvironmentMapOptions} [environmentMap]\n * @property {boolean} [useCompressedTextures]\n */\n\n/**\n * @typedef ModelRotateOptions\n * @property {number} [x]\n * @property {number} [y]\n * @property {number} [z]\n */\n\n/**\n * @typedef ModelEnvironmentMapOptions\n * @property {string} [cubemap]\n * @property {string} [cylindrical]\n */\n\n/**\n * @typedef CometOptions\n * @property {string} [name]\n * @property {number} [timeLength]\n */\n\n/**\n * @typedef FixedOptions\n * @property {'fixed'} type\n * @property {string} [name]\n * @property {Pioneer.Vector3} [position]\n * @property {Pioneer.Quaternion} [orientation]\n * @property {string} [relativeToEntity]\n * @property {Pioneer.LatLonAlt} [llaOnSpheroid]\n * @property {string} [llaOnSpheroidEntity]\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef SpinOptions\n * @property {'spin'} type\n * @property {string} [name]\n * @property {Pioneer.Vector3} axis\n * @property {boolean} [axisInFrameSpace]\n * @property {number} periodInHours\n * @property {number} [relativeToTime]\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef DynamoOptions\n * @property {'dynamo'} type\n * @property {string} [name]\n * @property {string} url\n * @property {boolean} [parentIsBarycenter]\n * @property {boolean} [customUrl]\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef AnimdataOptions\n * @property {'animdata'} type\n * @property {string} [name]\n * @property {string} url\n * @property {string} dataType\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef AlignOptions\n * @property {'align'} type\n * @property {string} [name]\n * @property {AlignAxisOptions} primary\n * @property {AlignAxisOptions} [secondary]\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef AlignAxisOptions\n * @property {string} type\n * @property {string} target\n * @property {Pioneer.Vector3} axis\n * @property {Pioneer.Vector3} [targetAxis]\n */\n\n/**\n * @typedef RotateByEntityOrientation\n * @property {'rotateByEntityOrientation'} type\n * @property {string} [name]\n * @property {string} [entityForOrientation]\n * @property {boolean} [rotatingOrientation]\n * @property {boolean} [rotatingPosition]\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef OrbitalElementsOptions\n * @property {'orbitalElements'} type\n * @property {string} [name]\n * @property {number} [epoch]\n * @property {number} eccentricity Can be calculated from `e = 1 - 2 / (apoapsis / periapsis + 1)`.\n * @property {number} semiMajorAxis Can be calculated from `a = periapsis / (1 - e)`. In km.\n * @property {number} meanAngularMotion Can be calculated from `2 * PI / period`. In rad / s.\n * @property {number} meanAnomalyAtEpoch The mean angle at the epoch time. In rad.\n * @property {Pioneer.Quaternion} [orbitOrientation]\n * @property {number} [inclination]\n * @property {number} [longitudeOfAscendingNode]\n * @property {number} [argumentOfPeriapsis]\n * @property {[number, number]} [coverage]\n */\n\n/**\n * @typedef CoverageOptions\n * @property {'coverage'} type\n * @property {string} [name]\n * @property {[number, number]} coverage\n * @property {(entity: Pioneer.Entity) => void} [enter]\n * @property {(entity: Pioneer.Entity) => void} [exit]\n * @property {(entity: Pioneer.Entity) => void} [update]\n * @property {number} [updateInterval]\n */\n\n/**\n * @typedef CustomControllerOptions\n * @property {'custom'} type\n * @property {(entity: Pioneer.Entity) => Pioneer.BaseController} func\n * @property {[number, number]} [coverage]\n */\n\n/**\n  * Helpful functions for creating entities.\n * @hideconstructor\n  */\nexport class Entity {\n\t/**\n\t * Every script that imports this needs to register its \"entity name -> options\" object so that the create script can use it.\n\t * @param {Object<string, Options>} entities\n\t */\n\tstatic register(entities) {\n\t\tfor (const name in entities) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(entities, name)) {\n\t\t\t\tthis._entities.set(name, entities[name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an entity.\n\t * @param {string} name\n\t * @param {Pioneer.Scene} scene\n\t * @param {ExtraOptions} [extraOptions]\n\t * @returns {Pioneer.Entity}\n\t */\n\tstatic create(name, scene, extraOptions) {\n\t\t// Get the options for the entity's name.\n\t\tconst options = Entity._entities.get(name);\n\t\tif (options === undefined) {\n\t\t\tthrow new Error('Could not find the options for the entity with name ' + name);\n\t\t}\n\n\t\treturn this.createFromOptions(name, options, scene, extraOptions);\n\t}\n\n\t/**\n\t * Create an entity from the given options.\n\t * @param {string} name\n\t * @param {Options} options\n\t * @param {Pioneer.Scene} scene\n\t * @param {ExtraOptions} [extraOptions]\n\t * @returns {Pioneer.Entity}\n\t */\n\tstatic createFromOptions(name, options, scene, extraOptions) {\n\t\t// Create the actual name given the prefix and suffix options.\n\t\tlet actualName = name;\n\t\tif (extraOptions) {\n\t\t\tif (extraOptions.namePrefix) {\n\t\t\t\tactualName = extraOptions.namePrefix + actualName;\n\t\t\t}\n\t\t\tif (extraOptions.nameSuffix) {\n\t\t\t\tactualName = actualName + extraOptions.nameSuffix;\n\t\t\t}\n\t\t}\n\n\t\t// Check if entity already exists.\n\t\tlet entity = scene.getEntity(actualName);\n\t\tif (entity !== null) {\n\t\t\treturn entity;\n\t\t}\n\n\t\t// Create the entity.\n\t\tentity = scene.addEntity(actualName);\n\n\t\t// Process the options.\n\t\ttry {\n\t\t\tif (options.radius) {\n\t\t\t\tentity.setOcclusionRadius(options.radius);\n\t\t\t\tentity.setExtentsRadius(options.radius);\n\t\t\t}\n\t\t\tif (options.occlusionRadius) {\n\t\t\t\tentity.setOcclusionRadius(options.occlusionRadius);\n\t\t\t}\n\t\t\tif (options.extentsRadius) {\n\t\t\t\tentity.setExtentsRadius(options.extentsRadius);\n\t\t\t}\n\n\t\t\t// Add the parenting table.\n\t\t\tfor (const [startTime, parentName] of options.parents) {\n\t\t\t\tentity.addParentingTableEntry(startTime, parentName);\n\t\t\t}\n\n\t\t\tif (options.label) {\n\t\t\t\tconst component = entity.addComponentByClass(Pioneer.DivComponent);\n\t\t\t\tconst div = component.getDiv();\n\t\t\t\tdiv.innerHTML = options.label;\n\t\t\t\tdiv.className = 'pioneer-label-div';\n\t\t\t}\n\n\t\t\tif (options.labelFadeEntity) {\n\t\t\t\tconst divComponent = entity.getComponentByClass(Pioneer.DivComponent);\n\t\t\t\tif (divComponent === null) {\n\t\t\t\t\tthrow new Error('There is no label.');\n\t\t\t\t}\n\t\t\t\tdivComponent.setFadeWhenCloseToEntity(options.labelFadeEntity);\n\t\t\t}\n\n\t\t\tif (options.trail) {\n\t\t\t\tconst component = entity.addComponentByClass(Pioneer.TrailComponent, options.trail.name);\n\t\t\t\tcomponent.setStartTime(options.trail.length);\n\t\t\t\tif (options.trail.color) {\n\t\t\t\t\tcomponent.setColor(new Pioneer.Color(options.trail.color[0], options.trail.color[1], options.trail.color[2], options.trail.color[3]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcomponent.setColor(new Pioneer.Color(1, 1, 1, 0.5));\n\t\t\t\t}\n\t\t\t\tif (options.trail.relativeTo) {\n\t\t\t\t\tcomponent.setRelativeToEntity(options.trail.relativeTo);\n\t\t\t\t}\n\t\t\t\tif (options.trail.lengthCoverages) {\n\t\t\t\t\tconst trailLength = options.trail.length;\n\t\t\t\t\tfor (let i = 0, l = options.trail.lengthCoverages.length; i < l; i++) {\n\t\t\t\t\t\tconst lengthCoverage = options.trail.lengthCoverages[i];\n\t\t\t\t\t\tconst coverageController = entity.addControllerByClass(Pioneer.CoverageController, `trail_length_coverage.${i}`, entity.getController(0) ?? undefined);\n\t\t\t\t\t\tcoverageController.setCoverage(new Pioneer.Interval(lengthCoverage[1], lengthCoverage[2]));\n\t\t\t\t\t\tcoverageController.setEnterFunction((entity) => {\n\t\t\t\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\t\t\t\tif (trail !== null) {\n\t\t\t\t\t\t\t\ttrail.setStartTime(lengthCoverage[0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcoverageController.setExitFunction((entity) => {\n\t\t\t\t\t\t\tconst trail = entity.getComponentByClass(Pioneer.TrailComponent);\n\t\t\t\t\t\t\tif (trail !== null) {\n\t\t\t\t\t\t\t\ttrail.setStartTime(trailLength);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.spheroid) {\n\t\t\t\tconst component = entity.addComponentByClass(Pioneer.SpheroidComponent, options.spheroid.name);\n\t\t\t\tcomponent.setEquatorialRadius(options.spheroid.equatorialRadius);\n\t\t\t\tcomponent.setPolarRadius(options.spheroid.polarRadius);\n\t\t\t\tcomponent.setPlanetographic(options.spheroid.planetographic);\n\t\t\t}\n\n\t\t\tif (options.spheroidLOD) {\n\t\t\t\tconst component = entity.addComponentByClass(Pioneer.SpheroidLODComponent, options.spheroidLOD.name ?? 'basic');\n\t\t\t\tif (options.spheroidLOD.features) {\n\t\t\t\t\tfor (let i = 0, l = options.spheroidLOD.features.length; i < l; i++) {\n\t\t\t\t\t\tcomponent.setFeature(options.spheroidLOD.features[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (options.spheroidLOD.textures) {\n\t\t\t\t\tcomponent.setMapping('cube');\n\t\t\t\t\tfor (const name in options.spheroidLOD.textures) {\n\t\t\t\t\t\tcomponent.setTexture(name, '$STATIC_ASSETS_URL/maps/' + options.spheroidLOD.textures[name].url, options.spheroidLOD.textures[name].sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (options.spheroidLOD.shadowEntities) {\n\t\t\t\t\tcomponent.setShadowEntities(options.spheroidLOD.shadowEntities);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.cmts) {\n\t\t\t\tconst component = entity.addComponentByClass(Pioneer.CMTSComponent, options.cmts.name);\n\t\t\t\tif (options.cmts.textures) {\n\t\t\t\t\tfor (const name in options.cmts.textures) {\n\t\t\t\t\t\tconst url = options.cmts.textures[name];\n\t\t\t\t\t\tcomponent.setBaseUrl(name, url);\n\t\t\t\t\t}\n\t\t\t\t\tcomponent.setMaxLevel(options.cmts.maxLevel || 0);\n\t\t\t\t}\n\t\t\t\tif (options.cmts.shadowEntities) {\n\t\t\t\t\tcomponent.setShadowEntities(options.cmts.shadowEntities);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.model) {\n\t\t\t\tconst component = entity.addComponentByClass(Pioneer.ModelComponent, options.model.name);\n\t\t\t\tcomponent.setUrl(options.model.url);\n\t\t\t\tif (options.model.rotate) {\n\t\t\t\t\tconst rotation = new Pioneer.Quaternion();\n\t\t\t\t\trotation.set(1, 0, 0, 0);\n\t\t\t\t\tfor (let i = 0, l = options.model.rotate.length; i < l; i++) {\n\t\t\t\t\t\tlet axis;\n\t\t\t\t\t\tlet angle;\n\t\t\t\t\t\tconst rotate = options.model.rotate[i];\n\t\t\t\t\t\tif (rotate.x !== undefined) {\n\t\t\t\t\t\t\taxis = new Pioneer.Vector3(1, 0, 0);\n\t\t\t\t\t\t\tangle = rotate.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rotate.y !== undefined) {\n\t\t\t\t\t\t\taxis = new Pioneer.Vector3(0, 1, 0);\n\t\t\t\t\t\t\tangle = rotate.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rotate.z !== undefined) {\n\t\t\t\t\t\t\taxis = new Pioneer.Vector3(0, 0, 1);\n\t\t\t\t\t\t\tangle = rotate.z;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow new Error('Invalid model rotate axis.');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tangle = Pioneer.MathUtils.degToRad(angle);\n\t\t\t\t\t\tconst r = new Pioneer.Quaternion();\n\t\t\t\t\t\tr.setFromAxisAngle(axis, angle);\n\t\t\t\t\t\trotation.mult(r, rotation);\n\t\t\t\t\t}\n\t\t\t\t\tcomponent.setRotation(rotation);\n\t\t\t\t}\n\t\t\t\tif (options.model.scale) {\n\t\t\t\t\tconst scale = options.model.scale;\n\t\t\t\t\tif (Array.isArray(scale)) {\n\t\t\t\t\t\tcomponent.setScale(new Pioneer.Vector3(scale[0], scale[1], scale[2]));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcomponent.setScale(scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (options.model.useCompressedTextures === true) {\n\t\t\t\t\tcomponent.setUseCompressedTextures(true);\n\t\t\t\t}\n\t\t\t\tif (options.model.shadowEntities) {\n\t\t\t\t\tcomponent.setShadowEntities(options.model.shadowEntities);\n\t\t\t\t}\n\n\t\t\t\tif (options.model.environmentMap) {\n\t\t\t\t\tif (options.model.environmentMap.cubemap) {\n\t\t\t\t\t\tcomponent.setEnvironmentCubemapUrl(options.model.environmentMap.cubemap);\n\t\t\t\t\t\tcomponent.setEnvironmentCylindricalUrl('');\n\t\t\t\t\t}\n\t\t\t\t\telse if (options.model.environmentMap.cylindrical) {\n\t\t\t\t\t\tcomponent.setEnvironmentCylindricalUrl(options.model.environmentMap.cylindrical);\n\t\t\t\t\t\tcomponent.setEnvironmentCubemapUrl('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.comet) {\n\t\t\t\tconst dustTail = entity.addComponentByClass(Pioneer.CometTailComponent, options.comet.name);\n\t\t\t\tif (options.comet.timeLength !== undefined) {\n\t\t\t\t\tdustTail.setTimeLength(options.comet.timeLength);\n\t\t\t\t}\n\t\t\t\tdustTail.setLightSource('sun');\n\n\t\t\t\tconst gasTail = entity.addComponentByClass(Pioneer.CometTailComponent);\n\t\t\t\tgasTail.setTimeLength(dustTail.getTimeLength() * 0.5);\n\t\t\t\tgasTail.setColor(new Pioneer.Color(0.214, 0.235, 0.371, 0.5));\n\t\t\t\tgasTail.setStarAccelerationMultiplier(10.0);\n\t\t\t\tgasTail.setLightSource('sun');\n\n\t\t\t\tconst coma = entity.addComponentByClass(Pioneer.CometTailComponent);\n\t\t\t\t// coma.setTimeLength(dustTail.getTimeLength() * 0.1);\n\t\t\t\tcoma.setStarAccelerationMultiplier(0);\n\t\t\t\tcoma.setColor(new Pioneer.Color(1, 1, 1, 10));\n\t\t\t\tcoma.setNumberOfParticles(1);\n\t\t\t\tcoma.setLightSource('sun');\n\t\t\t}\n\n\t\t\tif (options.controllers) {\n\t\t\t\tfor (let i = 0, l = options.controllers.length; i < l; i++) {\n\t\t\t\t\tconst controllerOptions = options.controllers[i];\n\t\t\t\t\tconst type = controllerOptions.type;\n\t\t\t\t\tlet controller;\n\t\t\t\t\tif (type === 'fixed') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.FixedController, controllerOptions.name);\n\t\t\t\t\t\tif (controllerOptions.position) {\n\t\t\t\t\t\t\tcontroller.setPosition(controllerOptions.position);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.orientation) {\n\t\t\t\t\t\t\tcontroller.setOrientation(controllerOptions.orientation);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.relativeToEntity) {\n\t\t\t\t\t\t\t// Add a rotate by parent orientation to get the fixed position in the J2000 frame.\n\t\t\t\t\t\t\tconst rotateByEntityOrientationController = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\t\t\t\t\trotateByEntityOrientationController.setEntityForOrientation(controllerOptions.relativeToEntity);\n\t\t\t\t\t\t\tif (controllerOptions.coverage && controllerOptions.coverage.length === 2) {\n\t\t\t\t\t\t\t\trotateByEntityOrientationController.setCoverage(new Pioneer.Interval(controllerOptions.coverage[0], controllerOptions.coverage[1]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.llaOnSpheroid) {\n\t\t\t\t\t\t\tconst parentName = controllerOptions.llaOnSpheroidEntity ?? options.parents[0][1];\n\t\t\t\t\t\t\tconst parent = scene.getEntity(parentName);\n\t\t\t\t\t\t\tif (parent !== null) {\n\t\t\t\t\t\t\t\tconst spheroid = parent.getComponentByClass(Pioneer.SpheroidComponent);\n\t\t\t\t\t\t\t\tif (spheroid === null) {\n\t\t\t\t\t\t\t\t\tthrow new Error('Missing spheroid component.');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (controllerOptions.coverage && controllerOptions.coverage.length === 2) {\n\t\t\t\t\t\t\t\t\tcontroller.setCoverage(new Pioneer.Interval(controllerOptions.coverage[0], controllerOptions.coverage[1]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Get the xyz from the lla and set the position.\n\t\t\t\t\t\t\t\tconst position = new Pioneer.Vector3();\n\t\t\t\t\t\t\t\tspheroid.xyzFromLLA(position, controllerOptions.llaOnSpheroid);\n\t\t\t\t\t\t\t\tcontroller.setPosition(position);\n\t\t\t\t\t\t\t\t// Get the ori from the lla and set the orientation.\n\t\t\t\t\t\t\t\tconst orientation = new Pioneer.Quaternion();\n\t\t\t\t\t\t\t\tspheroid.orientationFromLLA(orientation, controllerOptions.llaOnSpheroid);\n\t\t\t\t\t\t\t\tcontroller.setOrientation(orientation);\n\t\t\t\t\t\t\t\t// Add a rotate by parent orientation to get it in the J2000 frame.\n\t\t\t\t\t\t\t\tconst rotateByEntityOrientation = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController);\n\t\t\t\t\t\t\t\tif (controllerOptions.coverage && controllerOptions.coverage.length === 2) {\n\t\t\t\t\t\t\t\t\trotateByEntityOrientation.setCoverage(new Pioneer.Interval(controllerOptions.coverage[0], controllerOptions.coverage[1]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst groundClamp = entity.addControllerByClass(Pioneer.GroundClampController);\n\t\t\t\t\t\t\t\tgroundClamp.setGroundComponentRef(parentName, 'cmts');\n\t\t\t\t\t\t\t\tif (controllerOptions.coverage && controllerOptions.coverage.length === 2) {\n\t\t\t\t\t\t\t\t\tgroundClamp.setCoverage(new Pioneer.Interval(controllerOptions.coverage[0], controllerOptions.coverage[1]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'dynamo') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.DynamoController, controllerOptions.name);\n\t\t\t\t\t\tif (!controllerOptions.customUrl) {\n\t\t\t\t\t\t\tcontroller.setBaseUrl('$DYNAMIC_ASSETS_URL/dynamo/' + controllerOptions.url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcontroller.setBaseUrl(controllerOptions.url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.parentIsBarycenter) {\n\t\t\t\t\t\t\tcontroller.setHeaderValue('body', 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'animdata') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.AnimdataController, controllerOptions.name);\n\t\t\t\t\t\tcontroller.setBaseUrlAndStateType('$ANIMDATA_URL/' + controllerOptions.url, controllerOptions.dataType);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'align') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.AlignController, controllerOptions.name);\n\t\t\t\t\t\tcontroller.setPrimaryAlignType(controllerOptions.primary.type);\n\t\t\t\t\t\tcontroller.setPrimaryTargetEntity(controllerOptions.primary.target);\n\t\t\t\t\t\tcontroller.setPrimaryAxis(controllerOptions.primary.axis);\n\t\t\t\t\t\tif (controllerOptions.primary.targetAxis) {\n\t\t\t\t\t\t\tcontroller.setPrimaryTargetAxis(controllerOptions.primary.targetAxis);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.secondary) {\n\t\t\t\t\t\t\tcontroller.setSecondaryAlignType(controllerOptions.secondary.type);\n\t\t\t\t\t\t\tcontroller.setSecondaryTargetEntity(controllerOptions.secondary.target);\n\t\t\t\t\t\t\tcontroller.setSecondaryAxis(controllerOptions.secondary.axis);\n\t\t\t\t\t\t\tif (controllerOptions.secondary.targetAxis) {\n\t\t\t\t\t\t\t\tcontroller.setSecondaryTargetAxis(controllerOptions.secondary.targetAxis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'spin') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.SpinController, controllerOptions.name);\n\t\t\t\t\t\tcontroller.setAxis(controllerOptions.axis, controllerOptions.axisInFrameSpace ?? true);\n\t\t\t\t\t\tcontroller.setRate(Pioneer.MathUtils.twoPi / (controllerOptions.periodInHours * 3600));\n\t\t\t\t\t\tif (controllerOptions.relativeToTime !== undefined) {\n\t\t\t\t\t\t\tcontroller.setReferenceTime(controllerOptions.relativeToTime);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'rotateByEntityOrientation') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.RotateByEntityOrientationController, controllerOptions.name);\n\t\t\t\t\t\tif (controllerOptions.entityForOrientation) {\n\t\t\t\t\t\t\tcontroller.setEntityForOrientation(controllerOptions.entityForOrientation);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.rotatingOrientation !== undefined) {\n\t\t\t\t\t\t\tcontroller.setRotatingOrientation(controllerOptions.rotatingOrientation);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (controllerOptions.rotatingPosition !== undefined) {\n\t\t\t\t\t\t\tcontroller.setRotatingPosition(controllerOptions.rotatingPosition);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'orbitalElements') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.OrbitalElementsController, controllerOptions.name);\n\t\t\t\t\t\tconst epoch = controllerOptions.epoch ?? 0;\n\t\t\t\t\t\tconst orbitalElements = new Pioneer.OrbitalElements();\n\t\t\t\t\t\torbitalElements.epoch = epoch;\n\t\t\t\t\t\torbitalElements.eccentricity = controllerOptions.eccentricity;\n\t\t\t\t\t\torbitalElements.semiMajorAxis = controllerOptions.semiMajorAxis;\n\t\t\t\t\t\torbitalElements.meanAngularMotion = controllerOptions.meanAngularMotion;\n\t\t\t\t\t\torbitalElements.meanAnomalyAtEpoch = controllerOptions.meanAnomalyAtEpoch;\n\t\t\t\t\t\tif (controllerOptions.orbitOrientation !== undefined) {\n\t\t\t\t\t\t\torbitalElements.orbitOrientation.copy(controllerOptions.orbitOrientation);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (controllerOptions.inclination === undefined || controllerOptions.longitudeOfAscendingNode === undefined || controllerOptions.argumentOfPeriapsis === undefined) {\n\t\t\t\t\t\t\t\tthrow new Error('Either orbitOrientation or all of inclination, longitudeOfAscendingNode, and argumentOfPeriapsis must be defined.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\torbitalElements.setOrbitOrientationFromElements(controllerOptions.inclination, controllerOptions.longitudeOfAscendingNode, controllerOptions.argumentOfPeriapsis);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.addOrbitalElements(epoch, orbitalElements);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'coverage') {\n\t\t\t\t\t\tcontroller = entity.addControllerByClass(Pioneer.CoverageController, controllerOptions.name);\n\t\t\t\t\t\tcontroller.setEnterFunction(controllerOptions.enter);\n\t\t\t\t\t\tcontroller.setExitFunction(controllerOptions.exit);\n\t\t\t\t\t\tcontroller.setUpdateFunction(controllerOptions.update);\n\t\t\t\t\t\tif (controllerOptions.updateInterval !== undefined) {\n\t\t\t\t\t\t\tcontroller.setUpdateInterval(controllerOptions.updateInterval);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (type === 'custom') {\n\t\t\t\t\t\tcontroller = controllerOptions.func(entity);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new Error(`The type \"${type}\" is unknown.`);\n\t\t\t\t\t}\n\t\t\t\t\tif (controllerOptions.coverage && controllerOptions.coverage.length === 2) {\n\t\t\t\t\t\tcontroller.setCoverage(new Pioneer.Interval(controllerOptions.coverage[0], controllerOptions.coverage[1]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.postCreateFunction) {\n\t\t\t\toptions.postCreateFunction(entity, extraOptions);\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\t\t\tif (entity !== null) {\n\t\t\t\tscene.removeEntity(entity);\n\t\t\t}\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.message = `While creating \"${actualName}\": ${error.message}`;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Gets the entity options that are used to create the entity.\n\t * @param {string} name\n\t * @returns {Options | undefined}\n\t */\n\tstatic getEntityOptions(name) {\n\t\treturn Entity._entities.get(name);\n\t}\n\n\t/**\n\t * Gets a list of all entity names that are within a given set of groups, which is a comma-separated list of groups that each entity must include.\n\t * @param {string} groups\n\t * @returns {Set<string>}\n\t */\n\tstatic getEntityNamesInGroup(groups) {\n\t\tconst matchingEntityNames = new Set();\n\t\tif (groups !== '') {\n\t\t\tconst groupsArray = groups.split(',').map((group) => {\n\t\t\t\treturn group.trim();\n\t\t\t});\n\t\t\tfor (const [name, options] of Entity._entities) {\n\t\t\t\tconst entityGroups = options.groups;\n\t\t\t\tif (!entityGroups) { // Entity has has no group.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet matches = true;\n\t\t\t\tfor (const group of groupsArray) {\n\t\t\t\t\tif (!entityGroups.includes(group)) {\n\t\t\t\t\t\tmatches = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!matches) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tmatchingEntityNames.add(name);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (const name of Entity._entities.keys()) {\n\t\t\t\tmatchingEntityNames.add(name);\n\t\t\t}\n\t\t}\n\t\treturn matchingEntityNames;\n\t}\n\n\t/**\n\t * Gets a list of all groups that exist within the entities.\n\t * @returns {Set<string>}\n\t */\n\tstatic getGroups() {\n\t\tconst groups = new Set();\n\t\tfor (const options of this._entities.values()) {\n\t\t\tconst entityGroups = options.groups;\n\t\t\tif (entityGroups !== undefined) {\n\t\t\t\tfor (let i = 0; i < entityGroups.length; i++) {\n\t\t\t\t\tgroups.add(entityGroups[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn groups;\n\t}\n\n\t/**\n\t * Create all of the entities that belong to a group.\n\t * @param {string} groups - A comma-separated list of groups that each entity must include.\n\t * @param {Pioneer.Scene} scene\n\t * @param {ExtraOptions} [extraOptions]\n\t */\n\tstatic createGroup(groups, scene, extraOptions) {\n\t\tconst matchingEntityNames = this.getEntityNamesInGroup(groups);\n\t\tfor (const entityName of matchingEntityNames) {\n\t\t\tthis.create(entityName, scene, extraOptions);\n\t\t}\n\t}\n}\n\n/**\n * @type {Map<string, Options>}\n */\nEntity._entities = new Map();\n","import * as Pioneer from 'pioneer';\nimport { Entity } from './entity';\n\n/**\n * Functions for enabling and disabling special features on entities.\n */\nexport class Features {\n\t/**\n\t * Enables or disables the featureType of the entityName.\n\t * @param {Pioneer.Scene} scene\n\t * @param {string} entityName\n\t * @param {string} featureType\n\t * @param {boolean} enable\n\t */\n\tstatic setEnabled(scene, entityName, featureType, enable) {\n\t\tconst featureSetEnabledMap = entityFeatureSetEnabledMap[entityName];\n\t\tif (!featureSetEnabledMap) {\n\t\t\tthrow new Error(`Attempted to access unavailable feature ${featureType} for ${entityName}.`);\n\t\t}\n\t\tconst setEnabledFunction = featureSetEnabledMap[featureType];\n\t\tif (!setEnabledFunction) {\n\t\t\tthrow new Error(`Attempted to access unavailable feature ${featureType} for ${entityName}.`);\n\t\t}\n\t\tsetEnabledFunction(scene, enable);\n\t}\n\n\t/**\n\t * Returns true if the featureType of the entityName is enabled.\n\t * @param {Pioneer.Scene} scene\n\t * @param {string} entityName\n\t * @param {string} featureType\n\t * @returns {boolean}\n\t */\n\tstatic isEnabled(scene, entityName, featureType) {\n\t\tconst featureIsEnabledMap = entityFeatureIsEnabledMap[entityName];\n\t\tif (!featureIsEnabledMap) {\n\t\t\tthrow new Error(`Attempted to access unavailable feature ${featureType} for ${entityName}.`);\n\t\t}\n\t\tconst isEnabledFunction = featureIsEnabledMap[featureType];\n\t\tif (!isEnabledFunction) {\n\t\t\tthrow new Error(`Attempted to access unavailable feature ${featureType} for ${entityName}.`);\n\t\t}\n\t\treturn isEnabledFunction(scene);\n\t}\n\n\t/**\n\t * Enables or disables Jupiter's auroras.\n\t * @param {Pioneer.Scene} scene\n\t * @param {boolean} enable\n\t */\n\tstatic setEnabledJupiterAuroras(scene, enable) {\n\t\tif (enable) {\n\t\t\tFeatures._createJupiterModelComponent(scene, 'auroras', 'auroras');\n\t\t}\n\t\telse if (enable === false) {\n\t\t\tscene.getEntity('jupiter').removeComponent('auroras');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if Jupiter's auroras are enabled.\n\t * @param {Pioneer.Scene} scene\n\t * @returns {boolean}\n\t */\n\tstatic isEnabledJupiterAuroras(scene) {\n\t\treturn scene.getEntity('jupiter').getComponent('auroras') !== null;\n\t}\n\n\t/**\n\t * Enables or disables Jupiter's magnetosphere.\n\t * @param {Pioneer.Scene} scene\n\t * @param {boolean} enable\n\t */\n\tstatic setEnabledJupiterMagnetosphere(scene, enable) {\n\t\tif (enable) {\n\t\t\tFeatures._createJupiterModelComponent(scene, 'magnetosphere', 'magnetosphere');\n\t\t}\n\t\telse {\n\t\t\tscene.getEntity('jupiter').removeComponent('magnetosphere');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if Jupiter's magnetosphere is enabled.\n\t * @param {Pioneer.Scene} scene\n\t * @returns {boolean}\n\t */\n\tstatic isEnabledJupiterMagnetosphere(scene) {\n\t\treturn scene.getEntity('jupiter').getComponent('magnetosphere') !== null;\n\t}\n\n\t/**\n\t * Enables or disables Jupiter's radiation belt.\n\t * @param {Pioneer.Scene} scene\n\t * @param {boolean} enable\n\t */\n\tstatic setEnabledJupiterRadiationBelt(scene, enable) {\n\t\tif (enable) {\n\t\t\tFeatures._createJupiterModelComponent(scene, 'radiation_belt_1', 'radbelt1');\n\t\t\tFeatures._createJupiterModelComponent(scene, 'radiation_belt_2', 'radbelt2');\n\t\t\tFeatures._createJupiterModelComponent(scene, 'radiation_belt_3', 'radbelt3');\n\t\t\tFeatures._createJupiterModelComponent(scene, 'radiation_belt_4', 'radbelt4');\n\t\t}\n\t\telse {\n\t\t\tconst entity = scene.getEntity('jupiter');\n\t\t\tentity.removeComponent('radiation_belt_1');\n\t\t\tentity.removeComponent('radiation_belt_2');\n\t\t\tentity.removeComponent('radiation_belt_3');\n\t\t\tentity.removeComponent('radiation_belt_4');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if Jupiter's radiation belt is enabled.\n\t * @param {Pioneer.Scene} scene\n\t * @returns {boolean}\n\t */\n\tstatic isEnabledJupiterRadiationBelt(scene) {\n\t\tconst entity = scene.getEntity('jupiter');\n\t\treturn entity.getComponent('radiation_belt_1') !== null\n\t\t\t\t&& entity.getComponent('radiation_belt_2') !== null\n\t\t\t\t&& entity.getComponent('radiation_belt_3') !== null\n\t\t\t\t&& entity.getComponent('radiation_belt_4') !== null;\n\t}\n\n\t/**\n\t * Enables or disables Saturn's magnetosphere.\n\t * @param {Pioneer.Scene} scene\n\t * @param {boolean} enable\n\t */\n\tstatic setEnabledSaturnMagnetosphere(scene, enable) {\n\t\tif (enable) {\n\t\t\tEntity.createFromOptions('saturn_magnetosphere', {\n\t\t\t\tradius: 5027500,\n\t\t\t\tparents: [\n\t\t\t\t\t[Number.NEGATIVE_INFINITY, 'saturn']\n\t\t\t\t],\n\t\t\t\tmodel: {\n\t\t\t\t\turl: '$STATIC_ASSETS_URL/models/saturn/magnetosphere/saturn_magnetosphere.gltf',\n\t\t\t\t\tscale: 1078.27002124,\n\t\t\t\t\trotate: [\n\t\t\t\t\t\t{ x: 90 }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tcontrollers: [{\n\t\t\t\t\ttype: 'fixed',\n\t\t\t\t\tposition: Pioneer.Vector3.Zero\n\t\t\t\t}, {\n\t\t\t\t\ttype: 'align',\n\t\t\t\t\tprimary: {\n\t\t\t\t\t\ttype: 'align',\n\t\t\t\t\t\ttarget: 'saturn',\n\t\t\t\t\t\taxis: Pioneer.Vector3.ZAxis,\n\t\t\t\t\t\ttargetAxis: Pioneer.Vector3.ZAxis\n\t\t\t\t\t},\n\t\t\t\t\tsecondary: {\n\t\t\t\t\t\ttype: 'point',\n\t\t\t\t\t\ttarget: 'sun',\n\t\t\t\t\t\taxis: Pioneer.Vector3.XAxis\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\tpostCreateFunction: (entity) => {\n\t\t\t\t\tentity.setCanOcclude(false);\n\t\t\t\t\tconst thinModel = entity.addComponentByClass(Pioneer.ModelComponent);\n\t\t\t\t\tthinModel.setUrl('$STATIC_ASSETS_URL/models/saturn/magnetosphere_thin/saturn_magnetosphere_thin.gltf');\n\t\t\t\t\tthinModel.setScale(1078.27002124);\n\t\t\t\t\tthinModel.setRotation(new Pioneer.Quaternion(Math.sqrt(0.5), Math.sqrt(0.5), 0, 0));\n\t\t\t\t\tthinModel.setPixelRadiusVisibleInterval(new Pioneer.Interval(4000, Number.POSITIVE_INFINITY));\n\t\t\t\t\tthinModel.setResourcesLoadedCallback(() => {\n\t\t\t\t\t\tthinModel.getThreeJsObjects()[0].renderOrder = -1;\n\t\t\t\t\t});\n\t\t\t\t\tconst thickModel = entity.getComponentByClass(Pioneer.ModelComponent);\n\t\t\t\t\tthickModel.setPixelRadiusVisibleInterval(new Pioneer.Interval(0, 4000));\n\t\t\t\t\tthickModel.setResourcesLoadedCallback(() => {\n\t\t\t\t\t\tthickModel.getThreeJsObjects()[0].renderOrder = -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, scene);\n\t\t}\n\t\telse {\n\t\t\tscene.removeEntity('saturn_magnetosphere');\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if Saturn's magnetosphere is enabled.\n\t * @param {Pioneer.Scene} scene\n\t * @returns {boolean}\n\t */\n\tstatic isEnabledSaturnMagnetosphere(scene) {\n\t\treturn scene.getEntity('saturn_magnetosphere') !== null;\n\t}\n\n\t/**\n\t * Creates a Jupiter model. Returns the component created.\n\t * @param {Pioneer.Scene} scene - the scene where the entity is.\n\t * @param {string} name - the folder and component name.\n\t * @param {string} fileName - the name of the file inbetween the jupiter_ and .gltf.\n\t * @private\n\t */\n\tstatic _createJupiterModelComponent(scene, name, fileName) {\n\t\tconst entity = scene.getEntity('jupiter');\n\t\tconst model = entity.addComponentByClass(Pioneer.ModelComponent, name);\n\t\tmodel.setUrl(`$STATIC_ASSETS_URL/models/${'jupiter'}/${name}/${'jupiter'}_${fileName}.gltf`);\n\t\t// Scale it, since the gltf uses a 100 km polar diameter model.\n\t\tmodel.setScale(1337.08);\n\t\t// Rotate the model to be in the right orientation.\n\t\tconst rotation1 = new Pioneer.Quaternion(Math.SQRT1_2, Math.SQRT1_2, 0, 0); // 90 degrees around x-axis\n\t\tconst rotation2 = new Pioneer.Quaternion(Math.SQRT1_2, 0, 0, Math.SQRT1_2); // 90 degrees around z-axis\n\t\trotation1.mult(rotation2, rotation1);\n\t\tmodel.setRotation(rotation1);\n\t}\n}\n\n/**\n * A entityName to featureType to setEnabled function map.\n * @type {Record<string, Record<string, (scene: Pioneer.Scene, enable: boolean) => void>>}\n * @private\n */\nconst entityFeatureSetEnabledMap = {\n\tjupiter: {\n\t\tauroras: Features.setEnabledJupiterAuroras,\n\t\tmagnetosphere: Features.setEnabledJupiterMagnetosphere,\n\t\tradiationBelt: Features.setEnabledJupiterRadiationBelt\n\t},\n\tsaturn: {\n\t\tmagnetosphere: Features.setEnabledSaturnMagnetosphere\n\t}\n};\n\n/**\n * A entityName to featureType to isEnabled function map.\n * @type {Record<string, Record<string, (scene: Pioneer.Scene) => boolean>>}\n * @private\n */\nconst entityFeatureIsEnabledMap = {\n\tjupiter: {\n\t\tauroras: Features.isEnabledJupiterAuroras,\n\t\tmagnetosphere: Features.isEnabledJupiterMagnetosphere,\n\t\tradiationBelt: Features.isEnabledJupiterRadiationBelt\n\t},\n\tsaturn: {\n\t\tmagnetosphere: Features.isEnabledSaturnMagnetosphere\n\t}\n};\n","/**\n * Interface to export classes from modules.\n */\nexport * from './cameras';\nexport * from './date_time';\nexport * from './entity';\nexport * from './features';\nexport * from './mapping';\nexport * from './parenting';\nexport * from './placemarks';\nexport * from './scene_helpers';\nexport * from './transitions';\n\n// Components\nexport * from './components/annulus_component';\nexport * from './components/celestial_grid_component';\nexport * from './components/constellations_component';\nexport * from './components/disc_grid_component';\nexport * from './components/shadow_cone_component';\nexport * from './components/orbit_line_component';\nexport * from './components/torus_component';\nexport * from './components/wmts_component';\n\n// Controllers\nexport * from './controllers/keyframe_pointing_controller';\nexport * from './controllers/keyframe_spin_controller';\nexport * from './controllers/position_sum_controller';\nexport * from './controllers/zoom_fit_controller';\n\nexport {} from './entities/planets_and_stars';\nexport {} from './entities/minor_planets';\nexport {} from './entities/comets';\nexport {} from './entities/earth_moon';\nexport {} from './entities/jupiter_regular_moons';\nexport {} from './entities/jupiter_irregular_moons';\nexport {} from './entities/mars_moons';\nexport {} from './entities/neptune_moons';\nexport {} from './entities/saturn_major_moons';\nexport {} from './entities/saturn_minor_moons';\nexport {} from './entities/uranus_major_moons';\nexport {} from './entities/uranus_minor_moons';\nexport {} from './entities/earth_spacecraft';\nexport {} from './entities/lunar_spacecraft';\nexport {} from './entities/mars_spacecraft';\nexport {} from './entities/mercury_spacecraft';\nexport {} from './entities/outer_planet_spacecraft';\nexport {} from './entities/small_body_spacecraft';\nexport {} from './entities/solar_spacecraft';\nexport {} from './entities/venus_spacecraft';\nexport {} from './entities/comparison';\n","import * as Pioneer from 'pioneer';\n\n/**\n * Functions for enabling and disabling special features on entities.\n */\nexport class Mapping {\n\t/**\n\t * Gets all possible mapping types for a given entity.\n\t * @param {string} entityName\n\t * @returns string[]\n\t */\n\tstatic getTypes(entityName) {\n\t\treturn Mapping._types[entityName] ?? [];\n\t}\n\n\t/**\n\t * Sets the entity to use the mapping given by the type.\n\t * @param {Pioneer.Scene} scene\n\t * @param {string} entityName\n\t * @param {string} type\n\t */\n\tstatic async set(scene, entityName, type) {\n\t\t// Enable the type and wait for it to be loaded.\n\t\tawait Mapping.setEnabled(scene, entityName, type, true);\n\t\t// Disable all of the other non-matching types, including basic.\n\t\tfor (const otherType of Mapping.getTypes(entityName)) {\n\t\t\tif (otherType !== type) {\n\t\t\t\tMapping.setEnabled(scene, entityName, otherType, false);\n\t\t\t}\n\t\t}\n\t\tif (type !== 'basic') {\n\t\t\tMapping.setEnabled(scene, entityName, 'basic', false);\n\t\t}\n\t}\n\n\t/**\n\t * Enables or disables the given type. Used as a mapping from the 'type' to actual functions.\n\t * @param {Pioneer.Scene} scene\n\t * @param {string} entityName\n\t * @param {string} type\n\t * @param {boolean} enabled\n\t * @private\n\t */\n\tstatic async setEnabled(scene, entityName, type, enabled) {\n\t\tif (type === 'basic') {\n\t\t\tMapping.setBasic(scene, entityName, enabled);\n\t\t}\n\t\telse if (type.startsWith('cmts')) {\n\t\t\tawait Mapping.setCMTS(scene, entityName, type, enabled);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error(`Invalid type ${type}.`);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the entity to use the basic spheroidLOD.\n\t * @param {Pioneer.Scene} scene\n\t * @param {string} entityName\n\t * @param {boolean} enabled\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tstatic async setBasic(scene, entityName, enabled) {\n\t\tconst entity = scene.getEntity(entityName);\n\t\tif (entity === null) {\n\t\t\tthrow new Error(`No entity named '${entityName}' exists.`);\n\t\t}\n\t\tconst spheroidLOD = entity.getComponent('basic');\n\t\tif (spheroidLOD === null || spheroidLOD.getType() !== 'spheroidLOD') {\n\t\t\tthrow new Error(`The entity '${entityName}' does not have a spheroidLOD named 'basic'.`);\n\t\t}\n\t\tspheroidLOD.setEnabled(enabled);\n\t\tif (enabled) {\n\t\t\t// Make it invisible, load it, and make it visible.\n\t\t\tspheroidLOD.setVisible(false);\n\t\t\tawait spheroidLOD.getLoadedPromise();\n\t\t\tspheroidLOD.setVisible(true);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the entity to use CMTS.\n\t * @param {Pioneer.Scene} scene\n\t * @param {string} entityName\n\t * @param {string} type\n\t * @param {boolean} enabled\n\t * @returns {Promise<void>}\n\t * @private\n\t */\n\tstatic async setCMTS(scene, entityName, type, enabled) {\n\t\tconst entity = scene.getEntity(entityName);\n\t\tif (entity === null) {\n\t\t\tthrow new Error(`No entity named '${entityName}' exists.`);\n\t\t}\n\t\tif (enabled && !entity.get('cmts')) {\n\t\t\tconst cmts = entity.addComponentByClass(Pioneer.CMTSComponent, type);\n\t\t\tif (entityName === 'mars') {\n\t\t\t\t// Set the base urls.\n\t\t\t\tcmts.setBaseUrl('color', '$DYNAMIC_ASSETS_URL/cmts/1/' + entityName + '/color');\n\t\t\t\tcmts.setBaseUrl('height', '$DYNAMIC_ASSETS_URL/cmts/1/' + entityName + '/height');\n\t\t\t\t// Set the tile offsets for certain sites.\n\t\t\t\tcmts.addTileOffset(new Pioneer.Vector3(700.6128653358727, 3140.020080650305, 1073.622947405036), 1, 12, 1585, 2747, 1592, 2752); // M20\n\t\t\t\tcmts.addTileOffset(new Pioneer.Vector3(-2489.8644947661123, 2286.2056005322775, -271.3458260440484), 2, 12, 158, 1811, 169, 1825); // MSL\n\t\t\t\tcmts.addTileOffset(new Pioneer.Vector3(-2432.935716315694, 2349.9743692542434, 267.129381207100), 2, 9, 8, 284, 8, 284); // InSight\n\t\t\t}\n\t\t\telse if (entityName === 'moon') {\n\t\t\t\t// Set the base urls.\n\t\t\t\tcmts.setBaseUrl('color', '$DYNAMIC_ASSETS_URL/cmts/' + entityName + '/color');\n\t\t\t\tcmts.setBaseUrl('normal', '$DYNAMIC_ASSETS_URL/cmts/' + entityName + '/normal');\n\t\t\t\tcmts.setBaseUrl('height', '$DYNAMIC_ASSETS_URL/cmts/' + entityName + '/height');\n\t\t\t}\n\t\t\t// Make it invisible, load it, and make it visible.\n\t\t\tcmts.setVisible(false);\n\t\t\tawait cmts.getLoadedPromise();\n\t\t\tawait cmts.getTilesLoadedPromise();\n\t\t\tcmts.setVisible(true);\n\t\t}\n\t\telse if (!enabled && entity.get('cmts')) {\n\t\t\tentity.removeComponent(entity.getComponentByType('cmts'));\n\t\t}\n\t}\n\n\t/**\n\t * @type {Object<string, string[]>}\n\t * @private\n\t */\n\tstatic _types = {\n\t\tmars: ['cmts']\n\t};\n}\n","import { Entity } from './entity';\nimport * as Pioneer from 'pioneer';\n\n/**\n * Parenting helper functions.\n */\nexport class Parenting {\n\n\t/**\n\t * Gets the parent of the entity at the given time.\n\t * @param {string} entityName\n\t * @param {number} time\n\t * @returns {string}\n\t */\n\tstatic getParentOfEntity(entityName, time) {\n\t\tconst entityOptions = Entity.getEntityOptions(entityName);\n\t\tif (entityOptions === undefined) {\n\t\t\tthrow new Error(`There are no entity options for ${entityName}.`);\n\t\t}\n\t\tconst parents = entityOptions.parents;\n\t\tconst index = Pioneer.Sort.getIndex(time, parents, isStartTimeLessThanTime);\n\n\t\tif (index < parents.length && time === parents[index][0]) {\n\t\t\treturn parents[index][1];\n\t\t}\n\t\telse if (index > 0) {\n\t\t\treturn parents[index - 1][1];\n\t\t}\n\t\telse {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Gets all of the ancestors of an entity for all times.\n\t * @param {string} entityName - The name of the entity.\n\t * @returns {Set<string>}\n\t */\n\tstatic getAllAncestorsOfEntity(entityName) {\n\t\tconst parents = new Set();\n\t\tthis._getAllAncestorsOfEntityRecursed(entityName, parents);\n\t\treturn parents;\n\t}\n\n\t/**\n\t * Gets all of the ancestors of an entity for all times.\n\t * @param {string} entityName - The name of the entity.\n\t * @param {Set<string>} parents - The parents set that will be added to.\n\t * @private\n\t */\n\tstatic _getAllAncestorsOfEntityRecursed(entityName, parents) {\n\t\tconst entityOptions = Entity.getEntityOptions(entityName);\n\t\tif (entityOptions === undefined || entityOptions.parents === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentTable = entityOptions.parents;\n\t\tfor (const parentEntry of parentTable) {\n\t\t\tconst parentName = parentEntry[1];\n\t\t\tif (!parents.has(parentName)) {\n\t\t\t\tparents.add(parentName);\n\t\t\t\tthis._getAllAncestorsOfEntityRecursed(parentName, parents);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Returns true if a < b.\n * @param {[number, string]} a\n * @param {number} b\n */\nfunction isStartTimeLessThanTime(a, b) {\n\treturn a[0] < b;\n}\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * Helpful functions for placing markers on a spheroid.\n * @hideconstructor\n */\nexport class Placemarks {\n\t/**\n\t * Adds a placemark on an entity and returns it.\n\t * @param {string} name - The name of the placemark entity.\n\t * @param {string} label - The label to be displayed.\n\t * @param {Pioneer.Entity} body - The entity on which the placemark will go.\n\t * @param {number} latInDeg - The latitude in degrees.\n\t * @param {number} lonInDeg - The longitude in degrees.\n\t * @param {number} altitudeInKm - The altitude in km.\n\t * @param {boolean} useOrientation - If true, orients the placemark entity to be along the east and north axes.\n\t * @returns {Pioneer.Entity}\n\t */\n\tstatic addPlacemark(name, label, body, latInDeg, lonInDeg, altitudeInKm, useOrientation = false) {\n\t\tconst placemark = body.getScene().addEntity(name);\n\t\tplacemark.setParent(body);\n\t\tplacemark.setCanOcclude(false);\n\t\tplacemark.setExtentsRadius(1);\n\n\t\tconst divComponent = placemark.addComponentByClass(Pioneer.DivComponent);\n\t\tdivComponent.setAlignment(new Pioneer.Vector2(0.5, 0.5));\n\t\tdivComponent.getDiv().innerHTML = label;\n\n\t\tplacemark.addController('fixed');\n\t\tplacemark.addController('rotateByEntityOrientation');\n\n\t\tthis.updateLLA(placemark, latInDeg, lonInDeg, altitudeInKm, useOrientation);\n\n\t\treturn placemark;\n\t}\n\n\t/**\n\t * Updates a placemark with a new location.\n\t * @param {Pioneer.Entity} placemark - The placemark to change.\n\t * @param {number} latInDeg - The latitude in degrees.\n\t * @param {number} lonInDeg - The longitude in degrees.\n\t * @param {number} altitudeInKm - The altitude in km.\n\t * @param {boolean} useOrientation - If true, orients the placemark entity to be along the east and north axes.\n\t */\n\tstatic updateLLA(placemark, latInDeg, lonInDeg, altitudeInKm, useOrientation = false) {\n\t\tconst body = placemark.getParent();\n\t\tconst fixedController = placemark.getControllerByClass(Pioneer.FixedController);\n\t\tconst spheroidComponent = body.getComponentByClass(Pioneer.SpheroidComponent);\n\t\tif (fixedController === null || spheroidComponent === null) {\n\t\t\tthrow new Error('No fixed controller and/or spheroid component.');\n\t\t}\n\n\t\tconst lla = Pioneer.LatLonAlt.pool.get();\n\t\tconst markPos = Pioneer.Vector3.pool.get();\n\n\t\t// Update the position using the given lat, lon, alt, and the spheroid.\n\t\tlla.set(Pioneer.MathUtils.degToRad(latInDeg), Pioneer.MathUtils.degToRad(lonInDeg), altitudeInKm);\n\t\tspheroidComponent.xyzFromLLA(markPos, lla);\n\t\tfixedController.setPosition(markPos);\n\t\tPioneer.Vector3.pool.release(markPos);\n\n\t\t// If we're setting the orientation, use the east and north of the location on the spheroid.\n\t\tif (useOrientation) {\n\t\t\tconst markOri = Pioneer.Quaternion.pool.get();\n\t\t\tconst east = Pioneer.Vector3.pool.get();\n\t\t\tconst north = Pioneer.Vector3.pool.get();\n\t\t\tspheroidComponent.eastFromLLA(east, lla);\n\t\t\tspheroidComponent.northFromLLA(north, lla);\n\t\t\tmarkOri.setFromAxes(east, north, undefined);\n\t\t\tfixedController.setOrientation(markOri);\n\t\t\tPioneer.Vector3.pool.release(east);\n\t\t\tPioneer.Vector3.pool.release(north);\n\t\t\tPioneer.Quaternion.pool.release(markOri);\n\t\t}\n\n\t\tPioneer.LatLonAlt.pool.release(lla);\n\t}\n};\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\nimport { Entity } from './entity';\n\n/**\n * Helpful utilities for scenes.\n * @hideconstructor\n */\nexport class SceneHelpers {\n\t/**\n\t * The transformation from EclipJ2000 (a SPICE frame) to J2000 coordinates. This is the tilt from the equator to the ecliptic.\n\t * @returns {Pioneer.Quaternion}\n\t */\n\tstatic getEclipJ2000ToJ2000Rotation() {\n\t\treturn this.eclipJ2000ToJ2000Rotation;\n\t}\n\n\t/**\n\t * This returns a promise that resolves when all of the entities in `entityNames` have non-NaN positions and orientations.\n\t * For entities that aren't covered in the current time, they count as immediately valid.\n\t * @param {Pioneer.Scene} scene - the scene where the entities are\n\t * @param {string[]} entityNames - the set of names of entities to be checked\n\t * @param {number} [time] - an optional time to use\n\t * @param {number} [timeout = 5.0] - the number of seconds to wait until the promise is rejected\n\t * @param {number} [frequency = 0.030] - the number of seconds to wait before checking the positions and orientations again\n\t * @returns {Promise<void>}\n\t */\n\tstatic async waitTillEntitiesInPlace(scene, entityNames, time = undefined, timeout = 5.0, frequency = 0.030) {\n\t\t// Get the set of entities from the set of entity names.\n\t\tconst entities = /** @type {Set<Pioneer.Entity>} */(new Set());\n\t\tfor (const entityName of entityNames) {\n\t\t\tconst entity = scene.getEntity(entityName);\n\t\t\tif (entity === null) {\n\t\t\t\tthrow new Error('Entity \"' + entityName + '\" not added yet. Use Entity.create to add the entity.');\n\t\t\t}\n\t\t\tentities.add(entity);\n\t\t}\n\n\t\t// Wait on the promises of all controllers of every entity.\n\t\tconst controllerPromises = [];\n\t\tfor (const entity of entities) {\n\t\t\tfor (let i = 0; i < entity.getNumControllers(); i++) {\n\t\t\t\tcontrollerPromises.push(entity.getController(i).getLoadedPromise());\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(controllerPromises);\n\n\t\t// If there was no time, set it to the current time.\n\t\tif (time === undefined) {\n\t\t\ttime = scene.getEngine().getTime();\n\t\t}\n\n\t\t// Check the entities' positions and orientations every `frequency` seconds.\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet timeSoFar = 0;\n\t\t\tconst intervalCheck = setInterval(() => {\n\t\t\t\t// Check each entity in the list to see if is either not covered or has valid position and orientation.\n\t\t\t\t// If so, remove it from the list.\n\t\t\t\tconst position = Pioneer.Vector3.pool.get();\n\t\t\t\tconst orientation = Pioneer.Quaternion.pool.get();\n\t\t\t\tfor (const entity of entities) {\n\t\t\t\t\tconst isInCoverage = entity.getPositionCoverage().contains(time);\n\t\t\t\t\tentity.getPositionAtTime(position, time);\n\t\t\t\t\tentity.getOrientationAtTime(orientation, time);\n\t\t\t\t\tconst inPlace = !position.isNaN() && !orientation.isNaN();\n\t\t\t\t\tif (!isInCoverage || inPlace) {\n\t\t\t\t\t\tentities.delete(entity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tPioneer.Quaternion.pool.release(orientation);\n\t\t\t\tPioneer.Vector3.pool.release(position);\n\t\t\t\t// If there are no more entities in the list, resolve.\n\t\t\t\tif (entities.size === 0) {\n\t\t\t\t\tclearInterval(intervalCheck);\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t\t// If we've hit the timeout, reject.\n\t\t\t\ttimeSoFar += frequency;\n\t\t\t\tif (timeSoFar >= timeout) {\n\t\t\t\t\tclearInterval(intervalCheck);\n\t\t\t\t\tlet entitiesAsString = '';\n\t\t\t\t\tfor (const entity of entities) {\n\t\t\t\t\t\tif (entitiesAsString !== '') {\n\t\t\t\t\t\t\tentitiesAsString += ', ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tentitiesAsString += '\\'' + entity.getName() + '\\'';\n\t\t\t\t\t}\n\t\t\t\t\treject(new Error('Timed out (' + timeout + ' seconds) while waiting for entities to be in place. The remaining entities were [' + entitiesAsString + '].'));\n\t\t\t\t}\n\t\t\t}, frequency * 1000.0);\n\t\t}).then(() => scene.getEngine().waitUntilNextFrame());\n\t}\n\n\t/**\n\t * Converts a lat, lon, alt into an xyz, with the xyz in either the standard J2000 or entity frame.\n\t * @param {Pioneer.Vector3} out\n\t * @param {Pioneer.Entity} entity\n\t * @param {Pioneer.LatLonAlt} lla\n\t * @param {boolean} inEntityFrame\n\t */\n\tstatic llaToXYZ(out, entity, lla, inEntityFrame) {\n\t\tconst spheroid = entity.getComponentByClass(Pioneer.SpheroidComponent);\n\t\tif (spheroid !== null) {\n\t\t\tspheroid.xyzFromLLA(out, lla);\n\t\t\tif (!inEntityFrame) {\n\t\t\t\tout.rotate(entity.getOrientation(), out);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts an xyz to a lat, lon, alt, with the xyz in either the standard J2000 or entity frame.\n\t * @param {Pioneer.LatLonAlt} out\n\t * @param {Pioneer.Entity} entity\n\t * @param {Pioneer.Vector3} xyz\n\t * @param {boolean} inEntityFrame\n\t */\n\tstatic xyzToLLA(out, entity, xyz, inEntityFrame) {\n\t\tconst spheroid = entity.getComponentByClass(Pioneer.SpheroidComponent);\n\t\tif (spheroid !== null) {\n\t\t\tconst xyzInFrame = Pioneer.Vector3.pool.get();\n\t\t\tif (inEntityFrame) {\n\t\t\t\txyzInFrame.copy(xyz);\n\t\t\t}\n\t\t\telse {\n\t\t\t\txyzInFrame.rotateInverse(entity.getOrientation(), xyz);\n\t\t\t}\n\t\t\tspheroid.llaFromXYZ(out, xyzInFrame);\n\t\t\tPioneer.Vector3.pool.release(xyzInFrame);\n\t\t}\n\t}\n\n\t/**\n\t * Gets all of the other entities that the named entity is dependent upon, including all ancestors.\n\t * @param {string} entityName - The name of the entity.\n\t * @returns {Set<string>}\n\t */\n\tstatic getDependentEntities(entityName) {\n\t\tconst others = /** @type {Set<string>} */(new Set());\n\t\tthis._getDependentEntitiesRecursed(entityName, others);\n\t\tothers.delete(entityName);\n\t\treturn others;\n\t}\n\n\t/**\n\t * Recursive function for getDependentEntities().\n\t * @param {string} entityName - The name of the entity.\n\t * @param {Set<string>} others - The parents set that will be added to.\n\t * @private\n\t */\n\tstatic _getDependentEntitiesRecursed(entityName, others) {\n\t\tconst entityOptions = Entity.getEntityOptions(entityName);\n\t\tif (entityOptions === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst otherEntityNames = /** @type {Set<string>} */(new Set());\n\t\t// Get all parents.\n\t\tconst parentTable = entityOptions.parents;\n\t\tfor (const parentEntry of parentTable) {\n\t\t\tif (parentEntry[1] !== '') {\n\t\t\t\totherEntityNames.add(parentEntry[1]);\n\t\t\t}\n\t\t}\n\t\t// Check for other relations.\n\t\tif (entityOptions.lightSource !== undefined) {\n\t\t\totherEntityNames.add(entityOptions.lightSource);\n\t\t}\n\t\tif (entityOptions.trail !== undefined && entityOptions.trail.relativeTo !== undefined) {\n\t\t\totherEntityNames.add(entityOptions.trail.relativeTo);\n\t\t}\n\t\tfor (let i = 0, l = entityOptions.controllers.length; i < l; i++) {\n\t\t\tconst controllerOptions = entityOptions.controllers[i];\n\t\t\tif (controllerOptions.type === 'align') {\n\t\t\t\tif (controllerOptions.primary.target !== undefined) {\n\t\t\t\t\totherEntityNames.add(controllerOptions.primary.target);\n\t\t\t\t}\n\t\t\t\tif (controllerOptions.secondary !== undefined && controllerOptions.secondary.target !== undefined) {\n\t\t\t\t\totherEntityNames.add(controllerOptions.secondary.target);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (entityOptions.labelFadeEntity) {\n\t\t\totherEntityNames.add(entityOptions.labelFadeEntity);\n\t\t}\n\t\t// Go through any other dependent entities.\n\t\tif (entityOptions.dependents) {\n\t\t\tfor (let i = 0, l = entityOptions.dependents.length; i < l; i++) {\n\t\t\t\totherEntityNames.add(entityOptions.dependents[i]);\n\t\t\t}\n\t\t}\n\t\t// Go through each entity found and recursively get its dependencies.\n\t\tfor (const otherEntityName of otherEntityNames) {\n\t\t\tif (!others.has(otherEntityName)) {\n\t\t\t\tothers.add(otherEntityName);\n\t\t\t\tthis._getDependentEntitiesRecursed(otherEntityName, others);\n\t\t\t}\n\t\t}\n\t}\n}\n\nSceneHelpers.eclipJ2000ToJ2000Rotation = new Pioneer.Quaternion(0.9791532214288992, 0.2031230389823101, 0, 0);\nSceneHelpers.eclipJ2000ToJ2000Rotation.freeze();\n","/** @module pioneer-scripts */\nimport * as Pioneer from 'pioneer';\n\n/**\n * Helpful custom transition functions to use with the Transition controller.\n * @hideconstructor\n */\nexport class Transitions {\n\t/**\n\t * A function which the transition controller will use that will jump from one position on a sphere to another position.\n\t * It uses the z-axis for rotation. For how it works, see the bottom of the file.\n\t * To use this function, do `transitionController.setTransitionFunction(jumpToLocationOnSphere.bind(undefined, 5, 1e4, true, earth))`.\n\t * @param {number} jumpFactor - The height at which the camera will \"bounce\". A good number is 5.\n\t * @param {number} radius - The \"ground\" radius to use when calculating the jump.\n\t * @param {boolean} useNorthPole - The camera will use the north pole when rotating around its parent.\n\t * @param {Pioneer.Entity} sphereEntity - The entity to use as the sphere and north pole reference. If undefined, the camera entity's parent is used.\n\t * @param {Pioneer.Entity} cameraEntity - The camera entity.\n\t * @param {Pioneer.Vector3} initialPosition - The initial position of the camera.\n\t * @param {Pioneer.Vector3} finalPosition - The final position of the camera.\n\t * @param {Pioneer.Quaternion} initialOrientation - The initial orientation of the camera.\n\t * @param {Pioneer.Quaternion} finalOrientation - The final orientation of the camera.\n\t * @param {number} u - The lerp parameter.\n\t */\n\tstatic jumpToLocationOnSphere(jumpFactor, radius, useNorthPole, sphereEntity, cameraEntity, initialPosition, finalPosition, initialOrientation, finalOrientation, u) {\n\t\t// If the jump factor is zero, it won't work, so make it a very small number.\n\t\tif (jumpFactor <= 0) {\n\t\t\tjumpFactor = 0.001;\n\t\t}\n\n\t\t// Make the transition a little bit smoother.\n\t\tu = Transitions.easeInOut(u);\n\n\t\t// Get the radius of the parent of the camera entity.\n\t\tif (sphereEntity === undefined) {\n\t\t\tsphereEntity = cameraEntity.getParent();\n\t\t}\n\n\t\t// Make the initial and final position relative to the sphere entity.\n\t\tconst initialPositionRel = Pioneer.Vector3.pool.get();\n\t\tconst finalPositionRel = Pioneer.Vector3.pool.get();\n\t\tif (cameraEntity.getParent() !== null) {\n\t\t\tcameraEntity.getParent().getPositionRelativeToEntity(initialPositionRel, initialPosition, sphereEntity);\n\t\t\tcameraEntity.getParent().getPositionRelativeToEntity(finalPositionRel, finalPosition, sphereEntity);\n\t\t}\n\t\telse {\n\t\t\tinitialPositionRel.copy(initialPosition);\n\t\t\tfinalPositionRel.copy(finalPosition);\n\t\t}\n\n\t\t// Get the radial variables that will be used in the calculations.\n\t\tconst r0 = initialPositionRel.magnitude() - radius; // The radial distance of the initial position.\n\t\tconst r1 = finalPositionRel.magnitude() - radius; // The radial distance of the final position.\n\n\t\t// Get the axis that will be used in both north pole and no-up transitions.\n\t\tconst axisVec = Pioneer.Vector3.pool.get();\n\t\tif (useNorthPole && sphereEntity) {\n\t\t\tsphereEntity.getOrientation().getAxis(axisVec, 2);\n\t\t}\n\t\telse {\n\t\t\taxisVec.cross(initialPositionRel, finalPositionRel);\n\t\t}\n\t\taxisVec.normalize(axisVec);\n\t\tif (axisVec.isZero()) {\n\t\t\taxisVec.set(0, 0, 1);\n\t\t}\n\n\t\t// Get the angular distance between the points.\n\t\tlet a0 = 0;\n\t\t// Get the p0 and p1 coordinates as (lon, lat, alt), but as a Vector3.\n\t\tconst p0 = Pioneer.Vector3.pool.get();\n\t\tconst p1 = Pioneer.Vector3.pool.get();\n\t\tconst frame = Pioneer.Quaternion.pool.get();\n\t\tframe.setFromAxis(axisVec, 2);\n\t\tp0.rotateInverse(frame, initialPositionRel);\n\t\tp1.rotateInverse(frame, finalPositionRel);\n\t\t// Get the lla0 and lla1 coordinates from the p0 and p1.\n\t\tconst lla0 = Pioneer.LatLonAlt.pool.get();\n\t\tconst lla1 = Pioneer.LatLonAlt.pool.get();\n\t\tPioneer.Geometry.getLLAFromXYZOnSphere(lla0, p0, 0);\n\t\tPioneer.Geometry.getLLAFromXYZOnSphere(lla1, p1, 0);\n\t\tPioneer.Vector3.pool.release(p1);\n\t\tPioneer.Vector3.pool.release(p0);\n\t\t// Get the a0 value that will be used in the _jumpOnCircle function.\n\t\t// It's a distance value based on the latitude and longitude.\n\t\tlet lon0 = lla0.lon * Math.cos(lla0.lat);\n\t\tlet lon1 = lla1.lon * Math.cos(lla1.lat);\n\t\tif (lon0 + Math.PI < lon1) {\n\t\t\tlon0 += 2.0 * Math.PI;\n\t\t}\n\t\tif (lon1 + Math.PI < lon0) {\n\t\t\tlon1 += 2.0 * Math.PI;\n\t\t}\n\t\ta0 = radius * jumpFactor * Math.sqrt((lon1 - lon0) * (lon1 - lon0) + (lla1.lat - lla0.lat) * (lla1.lat - lla0.lat));\n\n\t\t// Call the _jumpOnCircle function to get the a and r values used to set the new position.\n\t\tconst p = Pioneer.Vector2.pool.get();\n\t\tTransitions._jumpOnCircle(p, a0, r0, r1, u);\n\t\tconst a = p.x;\n\t\tconst r = p.y;\n\t\tPioneer.Vector2.pool.release(p);\n\n\t\t// Get the new position based on the new r and a.\n\t\tconst newPosition = Pioneer.Vector3.pool.get();\n\t\tnewPosition.normalize(initialPositionRel);\n\t\tnewPosition.mult(newPosition, r + radius);\n\t\tconst lla = Pioneer.LatLonAlt.pool.get();\n\t\t// Get a lerp value f of the angular distance.\n\t\tlet f;\n\t\tif (a0 !== 0) {\n\t\t\tf = (a0 - a) / a0;\n\t\t}\n\t\telse {\n\t\t\tf = 0;\n\t\t}\n\t\t// Get the new lat, lon, alt position.\n\t\tlla.lat = Pioneer.MathUtils.lerp(lla0.lat, lla1.lat, f);\n\t\tlla.lon = Pioneer.MathUtils.lerpAngle(lla0.lon, lla1.lon, f);\n\t\tlla.alt = r;\n\t\t// Convert it to the x, y, z position.\n\t\tPioneer.Geometry.getXYZFromLLAOnSphere(newPosition, lla, radius);\n\t\tnewPosition.rotate(frame, newPosition);\n\t\tPioneer.LatLonAlt.pool.release(lla);\n\t\tPioneer.LatLonAlt.pool.release(lla0);\n\t\tPioneer.LatLonAlt.pool.release(lla1);\n\t\tPioneer.Quaternion.pool.release(frame);\n\n\t\t// Set the position.\n\t\tif (newPosition.isNaN()) {\n\t\t\tnewPosition.copy(finalPositionRel);\n\t\t}\n\t\tif (cameraEntity.getParent() !== null) {\n\t\t\tsphereEntity.getPositionRelativeToEntity(newPosition, newPosition, cameraEntity.getParent());\n\t\t}\n\t\tcameraEntity.setPosition(newPosition);\n\t\tPioneer.Vector3.pool.release(newPosition);\n\t\tPioneer.Vector3.pool.release(axisVec);\n\n\t\t// Make the camera always look at the parent, up aligned with the north pole axis or camera axis.\n\t\tconst position = Pioneer.Vector3.pool.get();\n\t\tsphereEntity.getPositionRelativeToEntity(position, Pioneer.Vector3.Zero, cameraEntity);\n\t\tposition.normalize(position);\n\t\tconst up = Pioneer.Vector3.pool.get();\n\t\tconst orientation = Pioneer.Quaternion.pool.get();\n\t\tif (useNorthPole) {\n\t\t\tsphereEntity.getOrientation().getAxis(up, 2);\n\t\t}\n\t\telse {\n\t\t\torientation.slerp(initialOrientation, finalOrientation, u);\n\t\t\torientation.getAxis(up, 2);\n\t\t}\n\t\tup.setNormalTo(position, up);\n\t\torientation.setFromAxes(undefined, position, up);\n\t\tcameraEntity.setOrientation(orientation);\n\t\tPioneer.Vector3.pool.release(up);\n\t\tPioneer.Quaternion.pool.release(orientation);\n\t\tPioneer.Vector3.pool.release(position);\n\t\tPioneer.Vector3.pool.release(initialPositionRel);\n\t\tPioneer.Vector3.pool.release(finalPositionRel);\n\t}\n\n\t/**\n\t * Does a quadratic ease-in and ease-out of the u parameter.\n\t * @param {number} u\n\t * @returns {number}\n\t */\n\tstatic easeInOut(u) {\n\t\tconst sq = u * u;\n\t\treturn sq / (2 * (sq - u) + 1);\n\t}\n\n\t/**\n\t * Given two coordinates p0 = (a0, r0) and p1 = (0, r1), and a lerp value u, return a new coordinate (a, r) along the jump path.\n\t * @param {Pioneer.Vector2} out - The result vector, x = a, y = r.\n\t * @param {number} a0 - The initial angular distance.\n\t * @param {number} r0 - The initial radial distance.\n\t * @param {number} r1 - The final radial distance.\n\t * @param {number} u - The lerp value.\n\t * @private\n\t */\n\tstatic _jumpOnCircle(out, a0, r0, r1, u) {\n\t\t// If the angle is not 0...\n\t\tlet r = 0; // The radial distance to set.\n\t\tlet a = 0; // The angular distance to set.\n\t\tif (Math.abs(a0 / (r1 - r0)) > 1e-6) {\n\t\t\t// Get the center angular coordinate.\n\t\t\tconst aC = (r1 - r0) / -a0 * (r1 + r0) / 2 + a0 / 2;\n\t\t\t// Get the angle between aC-a0 and aC-a1\n\t\t\tconst anglep1pcp0pc = Math.sign(a0) * Math.acos((r0 * r1 + (a0 - aC) * (-aC)) / Math.sqrt(r0 * r0 + (a0 - aC) * (a0 - aC)) / Math.sqrt(r1 * r1 + aC * aC));\n\t\t\t// Get the cos and sin values of u, scaled so that 0 is at p0 and 1 is at p1.\n\t\t\tconst cosU = Math.cos(u * anglep1pcp0pc);\n\t\t\tconst sinU = Math.sin(u * anglep1pcp0pc);\n\t\t\t// Calculate the new p value, going along the circle.\n\t\t\tr = (a0 - aC) * sinU + r0 * cosU;\n\t\t\ta = aC + (a0 - aC) * cosU - r0 * sinU;\n\t\t}\n\t\t// If the angle is 0, just lerp the radial and angular distance.\n\t\telse {\n\t\t\tr = u * r1 + (1 - u) * r0;\n\t\t\ta = (1 - u) * a0;\n\t\t}\n\t\t// Make it exact at the end to fix precision errors.\n\t\tif (u === 1) {\n\t\t\tr = r1;\n\t\t\ta = 0;\n\t\t}\n\t\tout.set(a, r);\n\t}\n}\n\n/* Notes on how _jumpOnCircle works.\n\nThe radius of the parent of the camera is R.\nThe initial and final positions are mapped onto cartesian plane:\n\tThe x-axis is the angular distance between them.\n\tThe y-axis is the radial distances of the points.\n\tThe initial position p0 is at coordinates (a0, r0).\n\tThe final position p1 is at coordinates (0, r1).\nA line segment l is drawn from p0 to p1, and the midpoint on that line is pM.\nA line lP starting from pM and perpendicular to l is drawn.\nThe point at which lP intersects the x-axis is pC, with coordinates (aC, 0).\nA circle O is formed, with center at pC and two points on the circle, p0 and p1.\nThe circle O is the path along which the camera will travel.\nThe jumpFactor * R of the entity is multiplied to stretch out the coordinates system horizontally.\n\n*/\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkasteroids\"] = self[\"webpackChunkasteroids\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], function() { return __webpack_require__(\"./src/app.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}